var Generatebadge = function () {

	var handleGeneratebadge = function() {

		jQuery.validator.addMethod("customDateValidator", function(value, element) {
			//var redate = /^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])[./-]([0-9]{4}|[0-9]{2})$/ ;
			var redate = /^([0]?[1-9]|[1][0-2])[./-]([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0-9]{4}|[0-9]{2})$/ ;
		   	if (! redate.test(value) ) 
			{ 
			   return false;
			}else
			{
				return true;
			}

		   },
		   "Please enter a valid date format mm/dd/yyyy"
		);

		$('.form-horizontal').validate({ 
	            errorElement: 'span', //default input error message container
	            errorClass: 'help-block', // default input error message class
	            focusInvalid: false, // do not focus the last invalid input
	            rules: {
					org_name: {
	                    required: {
	                    	depends: function(){
								if($('#rorg').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}

	                    }
	                    
	                },
	                orgdate: {
	                    required: {
	                    	depends: function(){
								if($('#rorg').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}

	                    },
	                    customDateValidator:true


	                },
	                org_type: {
	                    required: {
	                    	depends: function(){
								if($('#rorg').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },
	                mem_name: {
	                    required: {
	                    	depends: function(){
								if($('#rmember').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },
	                memdate: {
	                    required: {
	                    	depends: function(){
								if($('#rmember').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    },
	                    customDateValidator:true
	                },
	                cert_name: {
	                    required: {
	                    	depends: function(){
								if($('#rcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },
	                certdate: {
	                    required: {
	                    	depends: function(){
								if($('#rcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    },
	                    customDateValidator:true
	                },
	                cert_type: {
	                    required: {
	                    	depends: function(){
								if($('#rcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },
	                dorg_id:{
	                	required: {
	                    	depends: function(){
								if($('#dcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },
	                dorg_name:{
	                	required: {
	                    	depends: function(){
								if($('#dcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    }
	                },                                                
	                dorg_date:{
	                	required: {
	                    	depends: function(){
								if($('#dcert').prop("checked")==true){ 
									return true;
								} else {
									return false;
								}
							}
	                    },
	                    customDateValidator:true
	                },
	                						               
	            },

	            messages: {
					org_name: {
	                    required: "Organization name is required."
	                },
	                orgdate: {
	                    required: "Date is required."
	                },
	                org_type: {
	                    required: "Certification type is required."
	                },
	                mem_name: {
	                    required: "Name is required."
	                },
	                memdate: {
	                    required: "Date is required."
	                },
	                cert_name: {
	                    required: "Name is required."
	                },
	                certdate: {
	                    required: "Certified date is required."
	                },
	                cert_type: {
	                    required: "Certification type  is required."
	                },
	                dorg_id: {
	                	required: "Id is required."
	                },
	                dorg_name:{
	                	required: "Name is required."
	                },
	                dorg_date:{
	                	required: "Date is required."
	                }
					
	            },

	            invalidHandler: function (event, validator) { //display error alert on form submit   
	                $('.alert-danger', $('.form-horizontal')).show();
	            },

	            highlight: function (element) { // hightlight error inputs
	                $(element)
	                    .closest('.form-group').addClass('has-error'); // set error class to the control group
	            },

	            success: function (label) {
	                label.closest('.form-group').removeClass('has-error');
	                label.remove();
	            },

	            errorPlacement: function (error, element) {
	                error.insertAfter(element.closest('.form-group div'));
	            },

	            submitHandler: function (form) {
	                form.submit(); // form validation success, call ajax form submit
	            }
	        });

	        $('.form-horizontal input').keypress(function (e) {
	            if (e.which == 13) {
	                if ($('.form-horizontal').validate().form()) {
	                    $('.form-horizontal').submit(); //form validation success, call ajax form submit
	                }
	                return false;
	            }
	        });
	}
    return {
        //main function to initiate the module
        init: function () {        	
            handleGeneratebadge(); 
			$('#portlet-config').modal('show');         
        }
    };
}();