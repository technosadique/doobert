<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Org_transportation extends CI_Controller { 

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	
	
	
	public function __construct()
    {
		parent::__construct();
		//error_reporting(E_ALL);
		//ini_set('display_errors', 1);
		$this->output->enable_profiler(false);
		$this->load->library('common_function');
		$this->common_function->check_front_logged_in($this);
		$this->load->model('common_model');
		$this->load->library('form_validation');
		$this->load->helper('url');
		$this->load->model('orgtrasnportation_model');			
		$this->load->library('Upload');
		$this->load->library('user_agent');
		$this->load->library('pagination');
		$this->load->model('organimal_model');
		$this->load->library('image_lib');
		$this->load->model('order_transport_model');
		$this->load->model('user_model');
		$this->load->model('cron_model');
		$this->load->model('route_animal_model');
		$this->load->helper('smstest');	
		$this->load->model('trasnportation_model');
		$this->load->model('transport_summary_model');
		/*if(!$this->session->userdata('userid'))
		{	
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			//echo "1";
			redirect($this->config->item('base_url'));					
		}*/
	}	
	 
	public function index()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
	}
	
	
	//function to excel date validate - upload legs excel
	function validateDate($date)
	{
		$parts = explode('/',$date);
		if(($parts[0] == '') || ($parts[1] == '') || ($parts[2] == ''))
		{
			return false;
		}
		else
		{
			if(strlen($parts[0]) == 1){
				$parts[0] = '0'.$parts[0];
			}
			if(strlen($parts[1]) == 1){
				$parts[1] = '0'.$parts[1];
			}
			
			
			$yyyy_mm_dd = $parts[2] . '-' . $parts[0] . '-' . $parts[1];
			
			
			if(strlen($parts[2]) > 2)
			{
				$d_in_yyyy = DateTime::createFromFormat('Y-m-d', $yyyy_mm_dd);
			}
			
			//return $d && $d->format('Y-m-d') == $yyyy_mm_dd;
			
			//echo 'date in yyyy'.$d_in_yyyy->format('Y-m-d');
			else
			{
				$d_in_yy = DateTime::createFromFormat('y-m-d', $yyyy_mm_dd);
			}
			//return $d && $d->format('Y-m-d') == $yyyy_mm_dd;
			//echo 'date in yy'.$d_in_yy->format('Y-m-d');
			
			if((isset($d_in_yyyy) && ($d_in_yyyy->format('Y-m-d') == $yyyy_mm_dd)) || (isset($d_in_yy) && ($d_in_yy->format('y-m-d') == $yyyy_mm_dd)))
			{
				//echo 'return true';exit;
				return true;
			}
			else
			{
				//echo 'return false';exit;
				return false;
			}
			//exit;
		}
	}	
	
	//function to excel time validate - upload legs excel
	function validateTime($time)
	{
		$t_parts = explode(':',$time);
		
		if(strlen($t_parts[0]) == 1){
			$t_parts[0] = '0'.$t_parts[0];
		}
		$time1 = $t_parts[0]. ':'. $t_parts[1];
		$t = DateTime::createFromFormat('h:i A', $time1);
		
		return $t && $t->format('h:i A') == $time1;
		
	}
	
	#=========================================================
	#	Function : add_transport_organization
	#	Purpose  : Add Transport in organization
	#=========================================================		
	public function add_transport_organization()
	{		
		/*echo "<pre>";print_r($this->input->post());
			die;*/
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		$this->session->unset_userdata('transport_step');
		
		$this->session->unset_userdata('transport_id');
		$this->session->unset_userdata('recent_activity');
		
		 
		
		
		
		#================Check User permission start===============#
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		if($owner_id!=$this->session->userdata('userid'))
		{
			$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
			if(!empty($user_permission)) {
				$make_array_user = unserialize($user_permission);
			}
			if($owner_id != $this->session->userdata('userid')) {
				if(isset($make_array_user['transport']) && in_array('transport_cr',$make_array_user['transport']) == true) {
					$check_per_flag = '1';
				} else {
					$check_per_flag = '0';
					$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
					redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
				}
			}
		}
		#================Check User permission end================#
		$data = array();
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$data['owner_id'] 		= $owner_id;
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		$c_state_list 			= $this->common_function->canadian_state_list;
		$data['c_state_list'] 	= $c_state_list;
		
		$data['all_state']     = array_merge($data['state_list'],$data['c_state_list']);
		//print_r($data['all_state']);
		//exit; 
		
		$org_id = $this->session->userdata("org_id");
		
		
		
		$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id')); 
		$animal_list 				= $this->orgtrasnportation_model->get_org_animal($org_id,"0");
		$animal_transport 			= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_list'] 		= $animal_list;
		$data['animal_transport'] 	= $animal_transport;
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));		
		$data['profile_details'] = $user_details['0'];
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		
		if(isset($org_details['st_org_name']) && !empty($org_details['st_org_name'])) {
			$data['stSendOrgNm'] = $org_details['st_org_name'];
		} else {
			$data['stSendOrgNm'] = '';
		}
		
		 if(isset($user_details[0]['st_display_name']) && !empty($user_details[0]['st_display_name'])) {
			$data['stSendNm'] = $user_details[0]['st_display_name']." ".$user_details[0]['st_last_name'];
		} else {
			$data['stSendNm'] = '';
		}
		
		if(isset($user_details[0]['st_email']) && !empty($user_details[0]['st_email'])) {
			$data['stSendEmail'] = $user_details[0]['st_email'];
		} else {
			$data['stSendEmail'] = '';
		}
		
		
		if(isset($org_details['st_primary_phone']) && !empty($org_details['st_primary_phone'])) {
			$data['stSphone'] = $org_details['st_primary_phone'];
			$data['stSphone'] = preg_replace('/\D/', '', $org_details['st_primary_phone']);
		} else {
			$data['stSphone'] = '';
		}
		
		if(isset($org_details['st_has_501c3']) && !empty($org_details['st_has_501c3'])) {
			$data['stS501c3'] = $org_details['st_has_501c3'];
		} else {
			$data['stS501c3'] = '';
		}
		
		if(isset($org_details['st_zip']) && !empty($org_details['st_zip'])) {
			$data['sender_zip'] = $org_details['st_zip'];
		} else {
			$data['sender_zip'] = '';
		}
		
		$data['country_list'] 	= $this->common_function->doobertcountry;
		
		$data['transport_agree_details'] = $this->common_model->get_user_transport_agreement_detail($this->session->userdata('userid'));
			
		$data['transportation_list'] = $this->orgtrasnportation_model->get_previous_transportation('0');
		//echo '<pre/>';print_r($data['transport_agree_details']); exit;
		if(isset($data['transport_agree_details']) && $data['transport_agree_details']['in_transport'] != '')
		{
			$this->session->set_userdata('transport_agree',$data['transport_agree_details']['in_transport']);
		}
		
		$transport_doc			= array();
		if($this->input->post('recent_activity'))
		{
			$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
		}
		$form_field	=	array('pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pick_state'		=> "",
							  'pick_zip'		=> "",
							  'pick_info' 		=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_zip"		=> "",
							  "drop_info"		=> "",
  							  "pickupselect"	=> "",
							  "dateselect"		=> "",
							  "action"			=> "",
							  "image_file"		=> "",
							  "need_trans_mon"	=> "",
							  "trans_unique_name" => "",
							  "allow_pics"=>"",
							  "receiving_organization_name" => '',
							  "receiving_contact_name"	 => '',		
							  "receiving_contact_email" => '',	
							  "receiving_contact_phone_no" => '',
							  "receiving-501c3-certified" => '',
							  "organization_name" => '',
                              "contact_name" => '',
                              "contact_email" => '',
                              "contact_phone_no" => '',
							  "backstory" => '',
							  "501c3-certified"=>'',
							  "sendrunsheet-sending" =>'',
							  "sendrunsheet-receiving"=>'',
							  "transportation_id"=>'',
							  "sms_notify"=>"",
							  "fb_publish"=>'',
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}					
		if($this->input->post('action'))
		{	
			
			foreach ($form_field as $key => $value)
			{	
				$data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$pickup_zipcode_data = explode(',',$data['org_trasport']['pick_zip']);
			//print_r($pickup_zipcode_data);
			$data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
			$data['org_trasport']['pick_city'] = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
			$data['org_trasport']['pick_state'] = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
			$data['org_trasport']['pick_country'] = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
			$dropoff_zipcode_data = explode(',',$data['org_trasport']['drop_zip']);
			//print_r($dropoff_zipcode_data);
			$data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
			$data['org_trasport']['drop_city'] = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
			$data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
			$data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
			
			//echo "<pre>";print_r($data['org_trasport']); die;
			$error_message = '';
			/*if($_FILES['leg_upload']['name']!='' && $data['org_trasport']['action']=="driverspecify")
			{
				$error_message .= 'Upload legs only for Pre-Specify Legs.';
			}*/
			
			//echo "<pre>";print_r($sheetData);print_r($dropoff_array);print_r($pickup_array);die; 
			//$this->form_validation->set_rules('pick_street', 'Pick Up Street', 'trim|required');
			//$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim|required');
			//$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim|required');
			$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
			$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
			$this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
			//$this->form_validation->set_rules('drop_street', 'Drop Off Street', 'trim|required');
			//$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim|required');
			//$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim|required');
			$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
			$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
			$this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
			$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');
			
			$this->form_validation->set_rules('receiving_organization_name', 'Receiving Organization Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_name', 'Receiving Contact Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_email', 'Receiving Contact Email', 'trim|required|valid_email');
			$this->form_validation->set_rules('receiving_contact_phone_no', 'Receiving Phone No', 'trim|required');
			
			$this->form_validation->set_rules('contact_name', 'Contact Name', 'trim|required');
			$this->form_validation->set_rules('contact_phone_no', 'Contact Email', 'trim|required');
			$this->form_validation->set_rules('contact_email', 'Contact Phone Number', 'trim|required|valid_email');
			
			$error = '';	
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";
					$this->load->view('transportation/add-org-trans-details',$data);	
			}
			else
			{
				//echo "<pre>";print_r($legs_array);print_r($pickup_array);print_r($dropoff_array);die;
				$total_miles = '';				
				$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].", ":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].", ":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?", ".$data['org_trasport']['pick_zip']:"");	
				$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].", ":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].", ":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?", ".$data['org_trasport']['drop_zip']:"");
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				//echo "<pre>";print_r($routes_miles);die; 
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($data['org_trasport']['trans_unique_name']),
											//"st_from_street"	=> $data['org_trasport']['pick_street'],
											"st_from_city"		=> trim($data['org_trasport']['pick_city']),
											"st_from_state"		=> trim($data['org_trasport']['pick_state']),
											"st_from_zip"		=> trim($data['org_trasport']['pick_zip']),
											"st_from_country"	=> trim($data['org_trasport']['pick_country']),
											//"st_to_street"		=> $data['org_trasport']['drop_street'], 
											"st_to_city"		=> trim($data['org_trasport']['drop_city']),  
											"st_to_state"		=> trim($data['org_trasport']['drop_state']), 
											"st_to_zip"			=> trim($data['org_trasport']['drop_zip']),  
											"st_to_country"		=> trim($data['org_trasport']['drop_country']),
											//"st_from_info"		=> $data['org_trasport']['pick_info'],
											//"dt_pickup_date"	=> date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
											//"dt_target"			=> date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
											//"st_to_info"		=> $data['org_trasport']['drop_info'],
											"dt_pickup_date"	=> $start_date,
											"dt_target"			=> $end_date,
											"st_trans_type"		=> 'U',
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"dt_created"		=> date("Y-m-d H:i;s"),
											"in_status"			=> "4",/*Save as draft*/
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] != '' ? 1 : 0,
											"in_allow_pics" 	=> isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
											'stRecOrgNm'        => trim($data['org_trasport']['receiving_organization_name']),
											  'stRecNm'         => trim($data['org_trasport']['receiving_contact_name']),
											'stRecEmail'        => trim($data['org_trasport']['receiving_contact_email']),
											  'stRphone'        => trim($data['org_trasport']['receiving_contact_phone_no']),
											  'stR501c3'        => (isset($data['org_trasport']['receiving-501c3-certified'])  && $data['org_trasport']['receiving-501c3-certified']=='on' )?'Y':'N',
											  'stS501c3'        => (isset($data['org_trasport']['501c3-certified']) && $data['org_trasport']['501c3-certified']=='on' )?'Y':'N',
										   'dt_modified'        => date('Y-m-d H:i:s'),
										   'stSendOrgNm'        => trim($data['org_trasport']['organization_name']),
											  'stSendNm'	    => trim($data['org_trasport']['contact_name']),
								           'stSendEmail'        => trim($data['org_trasport']['contact_email']),
								              'stSphone'        => trim($data['org_trasport']['contact_phone_no']),
											  'stAniStory'		=> trim($data['org_trasport']['backstory']),
									   'inSendOrgRunsheet'		=> isset($data['org_trasport']['sendrunsheet-sending']) && $data['org_trasport']['sendrunsheet-sending'] != '' ? 1 : 0,
									   'inRecOrgRunsheet'		=> isset($data['org_trasport']['sendrunsheet-receiving']) && $data['org_trasport']['sendrunsheet-receiving'] != '' ? 1 : 0,
									  'in_completed_steps'	    => '1',
									 "in_sms_notification"		=> isset($data['org_trasport']['sms_notify']) && $data['org_trasport']['sms_notify'] != '' ? 1 : 0,
											'in_fb_share'		=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,		
											);					
				if(isset($data['org_trasport']['transportation_id']) && $data['org_trasport']['transportation_id']!='' && $data['org_trasport']['transportation_id']!='0' )
				{
					$this->session->set_userdata('transport_id',$data['org_trasport']['transportation_id']);	
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}

				//$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
				//$this->session->set_userdata('transport_id',$transport_id);	
				
				for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					//$animal_weight = 'animal-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $data['org_details']['st_city'],
												     'st_state'				=>	$data['org_details']['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				}
				$this->session->set_userdata('transport_steps',2);
				//redirect(base_url().'add-animal-transport/'.$transport_id);
				redirect(base_url().'select-transport/'.$transport_id);
					
					
			}
		}
		else
		{	
			$this->load->view('transportation/add-org-trans-details',$data);		
		}
	}
	
	
		
	#=========================================================
	#	Function : add_animal_transport
	#	Purpose  : Add animal in trasport
	#=========================================================			
	public function add_animal_transport()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		$trasport_id 			= $this->uri->segment(2);
		if($trasport_id!='' || $trasport_id>'0')
		{
			$this->session->set_userdata('transport_id',$trasport_id );
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}	
		#================Check User permission start===============#
		$create = '0';
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		if($owner_id!=$this->session->userdata('userid'))
		{
			$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
			if(!empty($user_permission)) {
				$make_array_user = unserialize($user_permission);
			}
			if($owner_id != $this->session->userdata('userid')) {
				if(isset($make_array_user['transport']) && (in_array('transport_ed',$make_array_user['transport']) == true || in_array('transport_cr',$make_array_user['transport']) == true)) 				
				{
					$check_per_flag = '1';
					if(in_array('transport_ed',$make_array_user['transport']) == true && !in_array('transport_cr',$make_array_user['transport']) == true)
					{
						$create = '1';
					}
					else
					{
						$create = '0';
					}
				} else {
					$check_per_flag = '0';
					$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
					redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
				}
			}
		}
		#================Check User permission end================#	
		//echo $this->session->userdata('transport_id');die;		
		$data 					= array();
		$data['create'] 		= $create;
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$data['owner_id'] 		= $owner_id;
		$org_id 				= $this->session->userdata("org_id");
		$animal_list 			= $this->orgtrasnportation_model->get_org_animal($org_id,"0");
		$animal_transport 		= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_list'] 	= $animal_list;
		$data['animal_transport'] 	= $animal_transport;
		$transport_details = $this->orgtrasnportation_model->get_transport_details($trasport_id);
		
		if(empty($transport_details))
		{
			redirect($this->config->item('base_url'));
		}
		$data['transport_details'] 	= $transport_details[0];
		//echo "<pre>";print_r($transport_details);die;
		if($transport_details['0']['in_status']=='3' || $transport_details['0']['in_status']=='2')
		{
			$this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
			redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
		}
		//echo "*-------".$this->agent->referrer();
		//echo $_SERVER['HTTP_REFERER'];
		if(!$this->session->userdata("reffer"))
		{
			$this->session->set_userdata('reffer',$this->agent->referrer());
		}
		//echo $this->session->userdata("reffer");die;
		if(stristr($this->session->userdata("reffer"), 'org-add-transport'))
		{
			$data['process'] = "add";
		}
		else if(stristr($this->session->userdata("reffer"), 'org-edit-transport'))
		{
			$data['process'] = "edit_transport";
		}
		else
		{
			$data['process'] = "edit";
		}
		$data['transport_type']	=	$transport_details[0]['st_trans_type'];
		$form_field				=	array('animals_list' => "");
		if($this->input->post('action')=='continue')
		{
			$transport_id = $this->input->post('current_transport_id');
			
			$this->orgtrasnportation_model->update_current_trasport_animal();
			$animal_id = array();
			if($this->input->post('animals_list')!='')
			{
				$animal_id 		= @explode(",",$this->input->post('animals_list'));
			}
			$this->orgtrasnportation_model->add_animal_trasport($animal_id,$transport_id);
			
			
			if(count($animal_id) != count($animal_transport))
			{
				$array	=	array('in_transport_id'		=> $transport_id,
								  'prev_animal_count'	=> count($animal_transport),
								  'new_animal_count'  	=> count($animal_id),
								  'dt_created'	   		=> date('Y-m-d H:i:s')
						);					
					 $this->orgtrasnportation_model->insert_transport_animal_log($array);
			}

			if($transport_details['0']['in_status']=='1')
			{
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('org_name'));
				$url_link 	= "##base_url##organization-".$this->session->userdata('org_id')."-".$link_name."/";
					
				$noti_msg = (count($animal_id)>0)?count($animal_id).' animal is now scheduled for transportation.': "No animal(s) are schedule.";
				$notification_message = '<div class="timeline-body border">
									<h2><span><img src="##org_image##" width="36" height="36" alt=""></span><a href="'.$url_link.'" class="profile">'.$this->session->userdata('org_name').'</a> updated the list of animals.</h2>
									<h2 class="last">'.$noti_msg.'</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div>
								</div>';
				
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											//"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_transportation_id"	=> $transport_id,
											"in_type"				=> 6,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
						  				);	
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
			}
			
			$this->session->unset_userdata('reffer');			
			if($create==1)
			{
				//redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id')."/");	
				redirect(base_url().'org-transportation-scheduled/'.$transport_id."/");	
			}
			if($data['process'] == "edit_transport")	
			{
				redirect(base_url().'transport-create-legs?id='.$transport_id);	
			}
			if($data['process'] == "edit")	
			{
				//redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id')."/");	
				redirect(base_url().'org-transportation-scheduled/'.$transport_id."/");	
			}
			redirect(base_url().'transport-create-legs?id='.$transport_id);	
		}
		else
		{
			$this->load->view('transportation/add-animal-transport',$data);	
		}
	}
	
	#=========================================================
	#	Function : trasnportation_legs
	#	Purpose  : Create Legs
	#=========================================================		
	public function trasnportation_legs()
	{	
		
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		if(isset($_COOKIE['edit_legs']))
		{
			setcookie("edit_legs","",time()-3600,"/",".doobert.com");
			unset($_COOKIE['edit_legs']);
			$this->session->set_userdata('transport_edit',1);
			$this->session->set_userdata('transport_steps',3);
		}	
		if($this->session->userdata('transport_steps'))
		{ 
			if($this->session->userdata('transport_steps')==1)
				redirect($this->config->item('base_url') . "org-add-transport"); 
			if($this->session->userdata('transport_steps')==2)
				redirect($this->config->item('base_url') . "select-transport");
			if($this->session->userdata('transport_steps')==4)
				redirect($this->config->item('base_url') . "org_transportation/transport_thank_you/");	
		} else {
				redirect($this->config->item('base_url') . "org-add-transport"); 
		}
		
		if(isset($_GET['id']))
		{
			$this->session->set_userdata('transport_id',$_GET['id']);
		}
		
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			if(!$this->input->post('org_id') || !$this->input->post('transport_id'))
			{	
				redirect($this->config->item('base_url'));
			}else {
				if($this->session->userdata('transport_id'))
				{	
						$this->session->unset_userdata('transport_id');
				}		
					$this->session->set_userdata('transport_id',$this->input->post('transport_id'));
				if($this->session->userdata('org_id'))
				{	
						$this->session->unset_userdata('org_id');
				}		
					$this->session->set_userdata('org_id',$this->input->post('org_id'));
	
			}	
		}
		$legs_page 				= $this->uri->segment(2);
		$tra_id					= $this->session->userdata('transport_id');
		$data 					= array();
		$data['legs_page'] 		= $legs_page;
		$state_list 			= $this->common_function->state_list;
		$data['country_list'] 	= $this->common_function->doobertcountry;
		$time_zone 				= $this->common_function->tbl_time_zone();
		$data['state_list'] 	= $state_list;
		$data['time_zone'] 		= $time_zone;
		$tra_id					= $this->session->userdata('transport_id');
		
		
		#================Check User permission start===============#
		$create = '0';
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		//$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$user_profile_details = $this->common_function->get_user_profile($this->session->userdata('userid'));
		$user_time_zone = (isset($user_profile_details['st_time_zone'])?$user_profile_details['st_time_zone']:"");
		$data['user_time_zone'] 		= $user_time_zone;
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($tra_id);
		if(($transport_details['dt_target'] == '0000-00-00'||$transport_details['dt_target'] == '1969-12-31' || empty($transport_details['dt_target'])) && $transport_details[0]['st_trans_type'] == "D" && $transport_details[0]['in_airline_transport'] == 1  )
		{
			$transport_date = date('Y-m-d', strtotime("+7 day"));
		} else {	
			$transport_date = date('Y-m-d', strtotime($transport_details['dt_target']."+7 day"));
		}
		//$transport_date = date('Y-m-d', strtotime($transport_details[0]['dt_target']."+7 day"));
		$today_date     = date('Y-m-d');
		$today_dt       = new DateTime($today_date);
		$expire_dt      = new DateTime($transport_date);
		
		if(($today_dt > $expire_dt  && $transport_details[0]['st_trans_type'] == "D") || $transport_details[0]['st_trans_type'] == "P") 
		{		
			$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));	
		}
		
		if(!empty($user_permission)) 
		{
			$make_array_user = unserialize($user_permission);
		}
		
		if(($owner_id != $this->session->userdata('userid') && $transport_details[0]['st_trans_type'] == "P") || ($transport_details[0]['st_trans_type'] == "D")) 
		{	
			if(isset($make_array_user['transport']) && (in_array('transport_ed',$make_array_user['transport']) == true || in_array('transport_cr',$make_array_user['transport']) == true)) 				
			{
				$check_per_flag = '1';
				if(in_array('transport_ed',$make_array_user['transport']) == true && !in_array('transport_cr',$make_array_user['transport']) == true)
				{
					$create = '1';
				}
				else
				{
					$create = '0';
				}
			}else if($transport_details[0]['accTcid'] == $this->session->userdata('userid') && $expire_dt  >= $today_dt && $transport_details[0]['st_trans_type'] == "D") {
					$check_per_flag = '1';
			} else {
				$check_per_flag = '0';
				$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			
		}
		
		
		if(empty($transport_details))
		{
			redirect($this->config->item('base_url'));
		}
		$userId					=	$transport_details[0]['in_user_id'];
		$profile_setting= $this->common_model->get_user_profile_setting($userId);
		//echo "<pre>";print_r($profile_setting);die;	
		if($transport_details['0']['in_status']=='2')
		{
			redirect($this->config->item('base_url')."org-confirm-transport/");
		}
		if($transport_details['0']['in_status']=='3')
		{
			redirect($this->config->item('base_url')."org-cancel-transport/");
		}
		#================Check User permission end================#	
		$date1				= date_create($transport_details[0]['dt_pickup_date']);
		$date2				= date_create($transport_details[0]['dt_target']);
		$transport_diff		= date_diff($date1,$date2);
		$date_diff          = ($transport_diff->days!=0 && isset($transport_diff))?$transport_diff->days+1:0+1;
		$data['date_diff']  = $date_diff;
	
		
		if($this->input->post('action'))
		{
			#save_draft
			#save_legs
			$legs = $this->input->post('data_val');
			
			$post_transport_type = $this->input->post('transport_type');
			
			//echo "<pre>";print_r($legs);
			//echo "<pre>";print_r($post_transport_type);
			//die;
			//print_r($transport_details);
			//exit();

			$total_miles = 0;
			$transport_status = ($this->input->post('action')=='save_draft')?"4":"1";
			$transport_type = $this->input->post('action');
			if($transport_status!= $transport_details['0']['in_status'])
			{
				$this->orgtrasnportation_model->update_transport_details(array("in_status"=>$transport_status));
			}
			
			$this->orgtrasnportation_model->update_transport_details(array('in_completed_steps'=> '0'));
			
			if($transport_details['0']['st_trans_type']=='P' && !empty($legs) && $post_transport_type == '')
			{
				$legs = json_decode($this->input->post('data_val'),true);
				
				$legs = array_values(array_filter($legs));
				//$this->orgtrasnportation_model->delete_all_legs_trans($tra_id);
				$legs_sorting = array();
				foreach($legs as $leg_val)
				{
					$legs_sorting[] = isset($leg_val['in_sort_order']) ? $leg_val['in_sort_order'] : ''; 					
				}
				$sort_order = 0;
                for ($i = 0; $i < count($legs); $i++) {
					$sort_order = (!empty($legs_sorting[$i]))?$legs_sorting[$i]:$i+1;
					if ($legs[$i]['leg_id'] != '' && $legs[$i]['update_leg'] != 'delete') 
					{ 
                        $array_update = array("in_sort_order" => $sort_order); 	
                        $this->orgtrasnportation_model->update_legs($array_update, $legs[$i]['leg_id']);
					}		
				}
				//$this->get_json();
				//$this->get_legs();	
				
			}
			
			//if($transport_status=='1' && $transport_type == 'save_legs')
			if($transport_status=='1')	
			{
			
				$this->orgtrasnportation_model->nondoobert_joining_transport_participants();
				$this->orgtrasnportation_model->joining_transport_participants();
				
				$delete_leg_participants 	= $this->orgtrasnportation_model->deleted_transport_participants();
				if(count($delete_leg_participants)>0)
				{
					foreach($delete_leg_participants as $key=>$participants)
					{
						$removed_user_email = $participants['user_email'];
						$name_arr = array("coordinator_name"  => $transport_details['0']['st_display_name'],
										  "removed_user_name" => $participants['st_display_name'],	
							                   "transport_id" => $this->session->userdata('transport_id'),
												"st_org_name" => $transport_details['0']['st_org_name'],
												"st_org_code" => $transport_details['0']['st_org_code'],
											"st_display_name" => $transport_details['0']['st_display_name'],
												   "st_email" => $transport_details['0']['st_email'],
										    "st_add_comments" => $transport_details['0']['st_add_comments'],
										);				 					
			
						$this->remove_from_transport_email($removed_user_email,"33",$name_arr);
						
						$this->db->where('in_tr_pr_id',$participants['in_tr_pr_id']);
						$this->db->update('tbl_transportation_participants',array('in_deleted_transport_user'=>"0"));
					}
				}
				
				$delete_nondoboert_participants 	= $this->orgtrasnportation_model->nondoobert_deleted_transport_participants();
				if(count($delete_nondoboert_participants)>0)
				{
					foreach($delete_nondoboert_participants as $key=>$participants)
					{
						$removed_user_email = $participants['st_email'];
						$name_arr = array("coordinator_name"  => $transport_details['0']['st_display_name'],
										  "removed_user_name" => $participants['st_name'],	
							                   "transport_id" => $this->session->userdata('transport_id'),
												"st_org_name" => $transport_details['0']['st_org_name'],
												"st_org_code" => $transport_details['0']['st_org_code'],
											"st_display_name" => $transport_details['0']['st_display_name'],
												   "st_email" => $transport_details['0']['st_email'],
										    "st_add_comments" => $transport_details['0']['st_add_comments'],
										);				 					
			
						$this->remove_from_transport_email($removed_user_email,"33",$name_arr);
						$this->db->where('in_non_doobert_user_id',$participants['in_non_doobert_user_id']);
						$this->db->update('tbl_non_doobert_transport_users',array('in_deleted_transport_user'=>"0"));	
					}
				}

				$leg_details = $this->orgtrasnportation_model->get_trans_legs();
				$legsstates = array();
				foreach($leg_details as $key=>$value)
				{
					if($value['route_type_id']==2)
					{
					if($value['o_pick_state']!=='')
					{	
						array_push($legsstates, $value['o_pick_state']);
					}	
					} else {

					if($value['pick_state']!=='')
					{	
						array_push($legsstates, $value['pick_state']);
					}

					if($value['drop_state']!=='')
					{	
						array_push($legsstates, $value['drop_state']);
					}

					}	
				}	
				$states =  array();
				$state_opt = array();
				foreach($legsstates as $key=>$value)
				{	
					if (in_array($value,$states)==false) 
					{	
						array_push($states,$value);	
					}
				}			

				$states_rules_content .= '';
		
				if(count($states) >0)
				{
					foreach($states as $key=>$value)
					{
						$verify_state_rules_opt = $this->common_model->state_rules_optout($this->session->userdata('userid'),$value);
						if(count($verify_state_rules_opt)<=0 || empty($verify_state_rules_opt))
						{
							$get_state_rules = $this->common_model->get_state_rules($value);
							if(count($get_state_rules)>0 && !empty($get_state_rules))
							{
								array_push($state_opt,$value);
								$state_name = $this->common_function->state_list[$value];
								$states_rules_content .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;">Rules For '.$state_name.'</p>';
								$states_rules_content .= '<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;">'.$get_state_rules['st_rule'].'</p>';
							}	
						}	

					}	

					$email_body = $this->common_model->get_email_containt('124');
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
					if(isset($q) && !empty($q)){					   		
							foreach($q as $qr)
							{		 
								  
								if(!empty($qr['st_image']))
								{
										$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
										$imgtitle   =   $qr['st_banner_name']; 				
										$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

										alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
									  
									  
								}
								else
								{
									   $donation='';								 
								}							  
									
							}
						}			
						   
					   else
					   {
						  $donation='';
					   }
					$this->load->library('email');
					if(isset($email_body) && !empty($email_body)  && !empty($states_rules_content) )
					{
						
						$to = $transport_details['0']['st_email'];
						$subject = $email_body[0]['st_email_subject'];
						$templete	= 	$email_body[0]['st_email_body'];
						$seralize_states = (count($state_opt)>0)?serialize($state_opt):'';
						$user_to_id = $transport_details['0']['in_user_id'];
						$opt_out_url = base_url().'user/disable_opt_rules/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($seralize_states);
						
						
						
						$templete = str_replace("##rules_regulation##", $states_rules_content, $templete);
						$templete = str_replace("##opt_out_url##",$opt_out_url,$templete);
						$templete = str_replace("##display_name##",$transport_details['0']['st_display_name'],$templete);

						$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);
		
						$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);
						$templete = str_replace("##DONATION##",$donation,$templete);
						
						// added by sadique								
									$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));

									//print_r($org_details); die;
									$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
									if($share_template == 1)
									{
										$main_image = $this->generate_fb_image_option1();
									} 						
									
									
									else if($share_template == 5){						
										$main_image = $this->generate_fb_image_option5();						
									}
									else if($share_template == 6){						
										$main_image = $this->generate_fb_image_option6();						
									}
									else if($share_template == 7){						
										$main_image = $this->generate_fb_image_option7();						
									}
									else if($share_template == 8){						
										$main_image = $this->generate_fb_image_option8();						
									}				
									
									else {
										$main_image = $this->generate_fb_image($share_template);
									}	

							//$fbtransportshare = base_url().'upload/fb_transport_share/'.$main_image;
								$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
								if(file_exists($this->config->item('upload').'fb_transport_share/'.$main_image))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}	
							$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
						//$category  =    "DBT".$transport_id." - ".$email_details[0]['st_category'];		
						$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					}
				}		
			
			}	
			
			if($transport_details['0']['st_trans_type']=='D' && !empty($legs) && $post_transport_type == 'D')
			{
				//echo 'test'.$post_transport_type;
				//exit;
				$legs = array_values(array_filter($legs));
				for($i=0;$i < count($legs);$i++)
				{
				if($legs[$i]['leg_id']!='')
				{
					$array_update = array("in_sort_order" => $legs[$i]['in_sort_order']);
					$this->orgtrasnportation_model->update_legs($array_update,$legs[$i]['leg_id']);
				}
				}
			}
			
			if($transport_status=='1' && $transport_details['0']['in_status']!='1' && $transport_details['0']['in_fb_share']=='1')
			{
				if(stripos($transport_details['0']['st_org_name'],'pulse') === false && stripos($this->session->userdata('email'),'pulse') === false 
						&& stripos($transport_details['0']['st_from_state'],'HI') === false && stripos($transport_details['0']['st_to_state'],'HI') === false)	
				
				{
				
				$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));	
				$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
				if($share_template == 1)
				{
						$main_image = $this->generate_fb_image_option1();
				} 
				
				
				else if($share_template == 5){						
					$main_image = $this->generate_fb_image_option5();						
				}
				else if($share_template == 6){						
					$main_image = $this->generate_fb_image_option6();						
				}
				else if($share_template == 7){						
					$main_image = $this->generate_fb_image_option7();						
				}
				else if($share_template == 8){						
					$main_image = $this->generate_fb_image_option8();						
				}
				
				else {
						$main_image = $this->generate_fb_image($share_template);
				}
				
				/* code for facebook transport share ends */


				/*$this->load->library('facebook');
				$facebook = new Facebook(array(
				  'appId'  => '237486239951426',
				  'secret' => 'df3b2d88b4760b81f9d7f7f6d1dc0654',
				  'cookie' => true
				));
				
				//$group_id = '1559596571002912';
				//$group_id = '668444446839315';
				$group_id = '857029104382450';
				$fb_access_data = $this->common_model->get_facebook_access_token();
				if(isset($fb_access_data) && !empty($fb_access_data))
				{	
					$fb_access_token = $fb_access_data['st_access_token']; 
					if(isset($fb_access_token) && $fb_access_token != '')
					{	
					$publish = $facebook->api('/'.$group_id.'/feed', 'post',
								array(
								'scrape'=>'true',
								'access_token' => $fb_access_token,
								'message'=> 'DOOBERT - Transportation #DBT '.$transport_details['0']['in_transportation_id'],
								'link' => base_url()."org-transportation-scheduled/".$transport_details['0']['in_transportation_id']."/",
								//'link' => 'apps.facebook.com/doobert-rescue/?fb_appcenter=1',
								'picture' => base_url()."upload/fb_transport_share/".$main_image,
								'description' => 'DOOBERT - Transportation #DBT '.$transport_details['0']['in_transportation_id']
								));	
					}
				}
				
				// code for facebook transport share starts 
				
				// code for post transport on facebook region groups starts 
				   $start_zip = $transport_details['0']['st_from_zip'];
				   $end_zip   = $transport_details['0']['st_to_zip'];
				   $this->share_on_fb_region_grps($start_zip,$end_zip,$transport_details['0'],$main_image,$facebook);*/
				// code for post transport on facebook region groups ends 
				}
			}		
			
			
			#===============================================After publish Activity Start================================================#
			if($transport_status=='1' && $transport_details['0']['in_status']!='1' && !($this->session->userdata('transport_edit')))
			{ 
				#======================== After publish email is collecting sending out to the Owner and transport Coordinator Start==============#
				$transport_coordinators	= $this->common_model->get_transport_coodrdinator($this->session->userdata('org_id'));
				$organisation_owner 	= $this->common_model->get_owner_details($this->session->userdata('org_id'));
				

				$emails_list 			= array_merge($organisation_owner,$transport_coordinators);
				#======================== After publish email is collecting sending out to the Owner and transport Coordinator End===============#
				
				#================================= Add Notification for New Transportation Start=======================================#								

				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_type"				=> 5,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				//User Notify
				$notification_last_id = $this->db->insert_id();
				#================================= END Notification for New Transportation Start=======================================#
				
				#====================== Notification email is sending start ===========#
				$tmp_email = array ();
				foreach ($emails_list as $row) 
				{
					if (!in_array($row,$tmp_email)){
						 array_push($tmp_email,$row);
					}
				}				
				
				$legs = ($transport_details['0']['st_trans_type']=="P")?"Pre-Specify Legs":"Drivers Build Their Legs";
				$email_transport_details	=	$transport_details['0'];
				
				$this->transport_add_email($tmp_email,$legs,$email_transport_details);	
				
				/*added for transport relevant legs cron starts */
				if($email_transport_details['st_trans_type'] == 'P')
				{
				$transport_legs = $this->orgtrasnportation_model->get_trans_cron_legs($this->session->userdata('transport_id'));		
				//echo '<pre/>'; print_r($transport_legs);
				//exit;
				if(isset($transport_legs) && !empty($transport_legs) && count($transport_legs)>0)
				{
					$data_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
										"in_org_id"=>$this->session->userdata('org_id'),
										"st_pick_day"=>$email_transport_details['pdays'],
										"st_drop_day"=>$email_transport_details['days'],
										"st_transport_legs"=>serialize($transport_legs),
										"dt_created"=>date("Y-m-d H:i:s"));
					
					$insert_id = $this->orgtrasnportation_model->insert_transport_legs_details($data_array);
					//print_r($insert_id);
				}
				}
				
				if($email_transport_details['st_trans_type'] == 'RO')
				{
					$transport_legs = $this->orgtrasnportation_model->get_route_cron_legs($this->session->userdata('transport_id'));		
					//echo '<pre/>'; print_r($transport_legs);
					//exit;
					if(isset($transport_legs) && !empty($transport_legs) && count($transport_legs)>0)
					{
						$data_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
												  "in_org_id"=>$this->session->userdata('org_id'),
												//"st_pick_day"=>$email_transport_details['pdays'],
												//"st_drop_day"=>$email_transport_details['days'],
										  "st_transport_legs"=>serialize($transport_legs),
										         "dt_created"=>date("Y-m-d H:i:s"));
					
						$insert_id = $this->orgtrasnportation_model->insert_route_legs_details($data_array);
					//print_r($insert_id);
					}
					
					$this->send_receive_mail($this->session->userdata('transport_id'));	
				}
				/*added for transport relevant legs cron ends */
				//echo "<pre>";print_r($tmp_email); exit();
				#====================== Notification email is sending end ===========#
				
					if((isset($transport_details['0']['st_from_state'])&& $transport_details['0']['st_from_state'] == 'CO') ||(isset($transport_details['0']['st_to_state'])&& $transport_details['0']['st_to_state'] == 'CO') )
					{
						$update_status = $this->orgtrasnportation_model->enable_colorado_notify();
					} else { 
						$legs_ids = $this->orgtrasnportation_model->get_all_colorado_legs();
						if(count($legs_ids)>0)
						{
							$update_status = $this->orgtrasnportation_model->enable_colorado_notify();
						}
					} 
				
				/* code to share transport on facebook group starts */
				
				/* code for facebook transport share starts */
				$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
				$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
				
				$this->session->set_userdata('transportation_successfully_created','transportation_successfully_created');
				
			}
			
			if($transport_status=='1' && $this->session->userdata('transport_edit') && $this->session->userdata('transport_edit') == '1' && $transport_type == 'save_legs')
			{
				#======================== After publish email is collecting sending out to the Owner and transport Coordinator Start==============#
				$transport_coordinators	= $this->common_model->get_transport_coodrdinator($this->session->userdata('org_id'));
				$organisation_owner 	= $this->common_model->get_owner_details($this->session->userdata('org_id'));
				

				$emails_list 			= array_merge($organisation_owner,$transport_coordinators);
				#======================== After publish email is collecting sending out to the Owner and transport Coordinator End===============#
				
				#================================= Add Notification for New Transportation Start=======================================#								

				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_type"				=> 5,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				//User Notify
				$notification_last_id = $this->db->insert_id();
				#================================= END Notification for New Transportation Start=======================================#
				
			
				#================================= Add Notification End=======================================#							
				
				#====================== Add data for driver email notification start ===========# 		
				
				/*if($transport_details['0']['st_trans_type'] == 'D')
				{
				$user_list = $this->common_model->get_all_user_seledted_radious($transport_details['0']['st_from_zip'],$transport_details['0']['st_to_zip']);
				//$user_list = $this->common_model->get_all_driver_pilots();
				//echo '<pre/>'; print_r($user_list);exit;
					for($i=0; $i< count($user_list);$i++)
					{
						
						$days = unserialize($user_list[$i]['st_driver_availability']);
						if(is_array($days) && in_array(date("D", strtotime($transport_details['0']['dt_target'])),$days))
						{
							#================== Near by transport email is collect start ============#
							$emails_list[] = array("name"=>$user_list[$i]['st_display_name'],"email_address"=>$user_list[$i]['st_email'],"user_id" => $user_list[$i]['in_user_id']);
							#================== Near by transport email is collect end ============#
						}
					}
				}*/

				#====================== Add data for driver email notification end ===========#
				
				#====================== Notification email is sending start ===========#
				$tmp_email = array ();
				foreach ($emails_list as $row) 
				{
					if (!in_array($row,$tmp_email)){
						 array_push($tmp_email,$row);
					}
				}				
				
				//print_r($tmp_email);exit;
				$legs = ($transport_details['0']['st_trans_type']=="P")?"Pre-Specify Legs":"Drivers Build Their Legs";
				$email_transport_details	=	$transport_details['0'];
				
				/*added for transport relevant legs cron starts */
				if($email_transport_details['st_trans_type'] == 'P')
				{
				$transport_legs = $this->orgtrasnportation_model->get_trans_cron_legs($this->session->userdata('transport_id'));		
				//echo '<pre/>'; print_r($transport_legs);
				//exit;
				if(isset($transport_legs) && !empty($transport_legs))
				{
					$data_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
										"in_org_id"=>$this->session->userdata('org_id'),
										"st_pick_day"=>$email_transport_details['pdays'],
										"st_drop_day"=>$email_transport_details['days'],
										"st_transport_legs"=>serialize($transport_legs),
										"dt_created"=>date("Y-m-d H:i:s"));
					
					$insert_id = $this->orgtrasnportation_model->insert_transport_legs_details($data_array);
					//print_r($insert_id);
				}
				}
				
				if($email_transport_details['st_trans_type'] == 'RO')
				{
					$transport_legs = $this->orgtrasnportation_model->get_route_cron_legs($this->session->userdata('transport_id'));		
					//echo '<pre/>'; print_r($transport_legs);
					//exit;
					if(isset($transport_legs) && !empty($transport_legs) && count($transport_legs)>0)
					{
						$data_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
												  "in_org_id"=>$this->session->userdata('org_id'),
												//"st_pick_day"=>$email_transport_details['pdays'],
												//"st_drop_day"=>$email_transport_details['days'],
										  "st_transport_legs"=>serialize($transport_legs),
										         "dt_created"=>date("Y-m-d H:i:s"));
					
						$insert_id = $this->orgtrasnportation_model->insert_route_legs_details($data_array);
						
					//print_r($insert_id);
					}
					$this->send_receive_mail($this->session->userdata('transport_id'));
				}
				/*added for transport relevant legs cron ends */
				
				if($transport_details['0']['in_status']!='1' && $transport_details['0']['in_airline_transport']=='0') 
				{
					$this->transport_add_email($tmp_email,$legs,$email_transport_details);	
				}
				if($transport_details['0']['in_status']=='1'  && $transport_details['0']['in_airline_transport']=='0') 
				{
					$this->orgtrasnportation_model->update_transport_details(array("in_transport_cron_added" => '0',"is_transport_revised"=>'1'));
					$this->transport_edit_email($tmp_email,$legs,$email_transport_details);	
				}
				//echo "<pre>";print_r($tmp_email); exit();
				#====================== Notification email is sending end ===========#
				
				if((isset($transport_details['0']['st_from_state'])&& $transport_details['0']['st_from_state'] == 'CO') ||(isset($transport_details['0']['st_to_state'])&& $transport_details['0']['st_to_state'] == 'CO') )
				{
						$update_status = $this->orgtrasnportation_model->enable_colorado_notify();	
				} else { 
					$legs_ids = $this->orgtrasnportation_model->get_all_colorado_legs();
					if(count($legs_ids)>0)
					{
						$update_status = $this->orgtrasnportation_model->enable_colorado_notify();
					}
				 }
				
				$this->session->set_userdata('transportation_successfully_created','transportation_successfully_created');
				
				$this->session->unset_userdata('transport_edit');
				
			}
			#===============================================After publish Activity End=================================================#			
			$this->session->unset_userdata('transport_steps');
			die;
		}
		if($this->input->post('recent_activity'))
		{
			//echo "<pre>";print_r($this->input->post());
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');
			$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');die;
		}
		$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
		$transport_info['remin_distance'] = '0';
		$transport_info['cover_dis_per'] = '0';
		if(isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance']>0 )
		{
			$total_dist_per 					= ($transport_info['in_distance_covered']*100)/$transport_info['in_tot_distance'];
			$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['remin_distance'] 	= number_format(($transport_info['in_tot_distance']-$transport_info['in_distance_covered']),"2",".","");
		}
		$data['transport_details'] 				= $transport_info;
		#===========display legs on edit section Start=======#
		$leg_details 			= $this->orgtrasnportation_model->get_trans_legs();
		$data['leg_details'] 	= $leg_details;
		#===========display legs on edit section End=========#
		$data['menu_no'] 		= 'yes';
		
		
		$legs_count = (count($leg_details))/8;
		$pages_count =  ceil($legs_count);
		$leg_page_link = array();
		//echo $pages_count."<br>";
		for($m=1;$m<=$pages_count;$m++)
		{
			$selected = ($legs_page)?($legs_page):"1";
			$next_loop = ((8*($m < 1 ? 1 : $m)));
			$first_loop = (8*($m < 1 ? 1 : $m-1))<count($leg_details)?((8*($m < 1 ? 1 : $m-1))):(count($leg_details));	
	
			$first_loop = ($first_loop<=0?"1":($first_loop>=8)?$first_loop+1:$first_loop);
			$next_loop = count($leg_details)>$next_loop?$next_loop:count($leg_details);
			//echo ($first_loop<=0?"1":$first_loop)."=".$next_loop."<br>";
			$leg_page_link[$m] =array("text"=>str_pad($first_loop,2,"0",STR_PAD_LEFT)."-".str_pad($next_loop,2,"0",STR_PAD_LEFT),"selected"=>($m==$selected)?$selected:"","start_li"=>($m==$selected)?$first_loop:"","end_li"=>($m==$selected)?$next_loop:"");  	
		}
		$data['leg_page_link']		= $leg_page_link;
		$data['profile_setting']	= $profile_setting;
		//echo '<pre>';print_r($data);die;
		
		//code for excel file legs upload starts
		if($this->input->post('upload_leg_f'))
			{
			
			//echo $this->input->post('upload_leg_f');exit; //use for testing
			$error_message = '';
			$leg_upload_data = $_FILES['leg_upload']['name'];
			$leg_upload_data_type = $_FILES['leg_upload']['type'];
			
			$config['upload_path'] 		= $this->config->item('upload')."legupload/";
			$config['allowed_types'] 	= 'xls|xlsx|text/csv|csv';
			$config['max_size']			= '1024';
			$config['remove_spaces']  	= TRUE;
			$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['leg_upload']['name']);
			$this->load->library('upload', $config);
			$this->upload->initialize($config);
			$this->upload->do_upload('leg_upload');
			$error_message  .= $this->upload->display_errors();
			
			$filename = $config['file_name'];
			$extension = explode('.',$filename);
			$uploadfilename = $config['file_name'];
			
			if($error_message!='')
			{
					$data['Err_Msg'] = "<p>".$error_message."</p>";
					if(!empty($data['Err_Msg']))
					{
						$this->session->set_flashdata('leg_upload_error', $data['Err_Msg']);
					}
					$this->session->set_userdata('transport_steps',3);
					redirect($this->config->item('base_url')."transport-create-legs/");
			}
			
			if($error_message=='')
				{	
					$transport_id = $this->session->userdata('transport_id');	
					$transport_details 		= $this->orgtrasnportation_model->get_transport_details($transport_id);
					$dt_pickup_date = $transport_details[0]['dt_pickup_date']; 	
					$dt_target = $transport_details[0]['dt_target'];
					$transport_type = $transport_details[0]['st_trans_type'];	
					$file_in_dir_name = $this->config->item('upload').'legupload/'.$uploadfilename;
					
					if(isset($extension[1]) && ($extension[1]=='xls' ||$extension[1]=='xlsx'))
					{
						set_include_path(get_include_path() . PATH_SEPARATOR . 'Classes/');
							
						/** PHPExcel_IOFactory */
						$this->load->library('PHPExcel');
						$inputFileName = $file_in_dir_name;
						
						try {
							$objPHPExcel = PHPExcel_IOFactory::load($inputFileName);
						} catch(Exception $e) {
							die('Error loading file "'.pathinfo($inputFileName,PATHINFO_BASENAME).'": '.$e->getMessage());
						}
						
						//Get worksheet dimensions
						$sheet = $objPHPExcel->getActiveSheet(); 
						$excel_data = $sheet->toArray(null,true,true,true);
						foreach($excel_data as $key=>$value)
						{
							if (!array_filter($value)) {
								unset($excel_data[$key]);	// all column values are empty then remove that row
							}
							
						}
						
						//echo "<pre>";print_r($data); exit;  //use for testing
						$sheetData = array_values($excel_data);
						//echo "<pre>";print_r($sheetData); exit;  //use for testing
						//$upload_leg_sort_order = 0;
						$upload_sort_order = $this->orgtrasnportation_model->get_last_leg_order();
						$upload_leg_sort_order = $upload_sort_order;
						for($m=3;$m< count($sheetData);$m++)
						{
							$e = $m+1;	
							if($sheetData[$m]['A']=='1')
							{
								if($sheetData[$m]['B']=='' || $sheetData[$m]['G']=='' || $sheetData[$m]['H']=='' || $sheetData[$m]['I']=='' || $sheetData[$m]['J']==''|| $sheetData[$m]['O']=='' || $sheetData[$m]['P']=='' || $sheetData[$m]['Q']=='')
								{
									$error_message .=($sheetData[$m]['B']=='')?"Pickup Airport, ":"";
									$error_message .=($sheetData[$m]['G']=='')?"Pickup date, ":"";
									$error_message .=($sheetData[$m]['H']=='')?"Pickup time, ":"";
									$error_message .=($sheetData[$m]['I']=='')?"Pickup time zone, ":"";
									$error_message .=($sheetData[$m]['J']=='')?"Dropoff Airport, ":"";
									$error_message .=($sheetData[$m]['O']=='')?"Dropoff date, ":"";
									$error_message .=($sheetData[$m]['P']=='')?"Dropoff time, ":"";
									$error_message .=($sheetData[$m]['Q']=='')?"Dropoff time zone, ":"";
									$error_message .="Field(s) are blank in Row ".$e."<br>";
								}
								else
								{
									if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '' && strlen($sheetData[$m]['B']) > 10)
									{
										$error_message .= "Pickup Airport must be less than or equal to 10 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '')
									{
										$airport_details_p = $this->common_model->get_airport_by_code($sheetData[$m]['B']);
										
										if(isset($airport_details_p) && count($airport_details_p) == 0)
										{
											$error_message .= "Pickup Airport is incorrect in Row ".$e."<br>";
										}
										if(isset($airport_details_p) && isset($airport_details_p['st_state']) && $airport_details_p['st_state'] != '')
										{
											$airport_state_p = $airport_details_p['st_state'];
										}
										if(isset($airport_details_p) && isset($airport_details_p['st_city']) && $airport_details_p['st_city'] != '')
										{
											$airport_city_p = $airport_details_p['st_city'];
										}
									}
									
									if(isset($sheetData[$m]['C']) && $sheetData[$m]['C'] != '' && strlen($sheetData[$m]['C']) > 50)
									{
										$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['D']) && $sheetData[$m]['D'] != '' && strlen($sheetData[$m]['D']) > 2)
									{
										$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$e."<br>";
									}
									
									$parts = explode('/',$sheetData[$m]['G']);
									
									if(isset($parts) && isset($parts[1]))
									{
										if(strlen($parts[1]) > 2)
										{
											$sheetData[$m]['G'] = str_replace('/','-', $sheetData[$m]['G']);
										}
									}	
									
									$pickup_date = strtotime($sheetData[$m]['G']);
									if(!isset($pickup_date) || $pickup_date == '')
									{
										$error_message .= "Pickup Date format is invalid in Row ".$e."<br>";
									}
									
									$valid_time_status = $this->validateTime($sheetData[$m]['H']);
									if(!$valid_time_status)
									{
										$error_message .= "Pickup Time format is invalid in Row ".$e."<br>";
									}
									
									$pickup_timezone = strtoupper(trim($sheetData[$m]['I']));
									if($pickup_timezone != 'EST' && $pickup_timezone != 'CST' && $pickup_timezone != 'PST' && $pickup_timezone != 'MST' && $pickup_timezone != 'IST' && $pickup_timezone != 'AST')
									{
										$error_message .= "Pickup Timezone is invalid in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['J']) && $sheetData[$m]['J'] != '' && strlen($sheetData[$m]['J']) > 10)
									{
										$error_message .= "Dropoff Airport must be less than or equal to 10 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['J']) && $sheetData[$m]['J'] != '')
									{
										$airport_details_d = $this->common_model->get_airport_by_code($sheetData[$m]['J']);
										if(isset($airport_details_d) && count($airport_details_d) == 0)
										{
										$error_message .= "Dropoff Airport is incorrect in Row ".$e."<br>";
										}
										if(isset($airport_details_d) && isset($airport_details_d['st_state']) && $airport_details_d['st_state'] != '')
										{
										$airport_state_d = $airport_details_d['st_state'];
										}
										if(isset($airport_details_d) && isset($airport_details_d['st_city']) && $airport_details_d['st_city'] != '')
										{
										$airport_city_d = $airport_details_d['st_city'];
										}
									}
									
									if(isset($sheetData[$m]['K']) && $sheetData[$m]['K'] != '' && strlen($sheetData[$m]['K']) > 50)
									{
										$error_message .= "Dropoff City must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['L']) && $sheetData[$m]['L'] != '' && strlen($sheetData[$m]['L']) > 2)
									{
										$error_message .= "Dropoff State must be less than or equal to 2 characters in Row ".$e."<br>";
									}
									
									$parts = explode('/',$sheetData[$m]['O']);
									
									if(isset($parts) && isset($parts[1]))
									{
										if(strlen($parts[1]) > 2)
										{
											$sheetData[$m]['O'] = str_replace('/','-', $sheetData[$m]['O']);
										}
									}	
									$dropoff_date = strtotime($sheetData[$m]['O']);
									if(!isset($dropoff_date) || $dropoff_date == '')
									{
										$error_message .= "Dropoff Date format is invalid in Row ".$e."<br>";
									}
									
									$d_valid_time_status = $this->validateTime($sheetData[$m]['P']);
									if(!$d_valid_time_status)
									{
										$error_message .= "Dropoff Time format is invalid in Row ".$e."<br>";
									}
									
									$dropoff_timezone = strtoupper(trim($sheetData[$m]['Q']));
									if($dropoff_timezone != 'EST' && $dropoff_timezone != 'CST' && $dropoff_timezone != 'PST' && $dropoff_timezone != 'MST' && $dropoff_timezone != 'IST' && $dropoff_timezone != 'AST')
									{
										$error_message .= "Dropoff Timezone is invalid in Row ".$e."<br>";
									}
																			
									$leg_pickup_date 	= strtotime($sheetData[$m]['G']);
									$pickup_date 		= strtotime($dt_pickup_date);
									$target_date 		= strtotime(date("Y-m-d 23:59:59",strtotime($dt_target)));
									$leg_target_date 	= strtotime($sheetData[$m]['O']);
									
									$leg_pickup_time 	= strtotime($sheetData[$m]['G']." ".$sheetData[$m]['H']);
									$leg_dropoff_time 	= strtotime($sheetData[$m]['O']." ".$sheetData[$m]['P']);

									if(($leg_pickup_date < $pickup_date) || ($leg_pickup_date > $target_date))
									{
										$error_message .= "Pickup Date in Row ".$e." must be in between the transportation start date and end date<br>";
									}
									if(($leg_target_date < $pickup_date) || ($leg_target_date > $target_date))
									{
										$error_message .= "Dropoff Date in Row ".$e." must be in between the transportation start date and end date<br>";
									}
									if($leg_target_date < $leg_pickup_date)
									{
										$error_message .= "Dropoff Date should be greater than or equal to Pickup Date in Row ".$e."<br>";
									}
									
									if($leg_pickup_time > $leg_dropoff_time)
									{
										$error_message .= "Dropoff Time should be greater than or equal to Pickup Time in Row ".$e."<br>";
									}

									else
									{
										//added code for multiple drivers and meeting location on 15Dec2014
										$no_of_pilots = trim($sheetData[$m]['R']); 
										$pilot_meeting_location 	= trim($sheetData[$m]['S']);
										$to_pilot_meeting_location  = trim($sheetData[$m]['T']);
										$leg_instruction 			= trim($sheetData[$m]['U']);
										
										if(isset($no_of_pilots) && $no_of_pilots > 5)
										{
											$no_of_pilots		= 5;																						
										}
										if(isset($no_of_pilots) && $no_of_pilots < 2)
										{
											$no_of_pilots		= 0;
										}
										if(isset($no_of_pilots) && $no_of_pilots >= 2 && $no_of_pilots <= 5)
										{
											$no_of_pilots 		= $no_of_pilots;
										}
										
										$legs_array[] = array("in_transportation_id"	=> "",
															"in_route_type"			=> ($sheetData[$m]['A'])?$sheetData[$m]['A']:"0",
															"in_created_by"			=> $this->session->userdata('userid'),
															"dt_created"			=> date("Y-m-d H:i:s"),
															"in_deleted"			=> "0",
															"in_multi_user"			=> (isset($no_of_pilots) && $no_of_pilots >= 2 && $no_of_pilots <= 5) ? 1 : 0, //added by ghanshyam on 15Dec2014
															"in_user_num" 			=> isset($no_of_pilots) ? $no_of_pilots : 0,	//added by ghanshyam on 15Dec2014
															"st_meeting_location"	=> isset($pilot_meeting_location) ? $pilot_meeting_location : '',	//added by ghanshyam on 15Dec2014
															"in_sort_order"			=> ($upload_leg_sort_order+1), 
															"st_leg_instruction" 	=> $leg_instruction,
															"st_to_meeting_location" => $to_pilot_meeting_location, 	
															);
										$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																"st_leg_type" 					=> "P",
																"st_street" 					=> $sheetData[$m]['B'],
																"st_city" 						=> isset($airport_city_p) && $airport_city_p != '' ? trim(preg_replace('/\s+/',' ',$airport_city_p)) : trim(preg_replace('/\s+/',' ',$sheetData[$m]['C'])),
																"st_state" 						=> isset($airport_state_p) && $airport_state_p != '' ? $airport_state_p : strtoupper($sheetData[$m]['D']),
																//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($sheetData[$m]['D'])])?strtoupper($this->common_function->shortAllState[strtoupper($sheetData[$m]['D'])]) : strtoupper($sheetData[$m]['D']),
																"st_zip" 						=> $sheetData[$m]['F'],
																"st_country" 					=> isset($this->common_function->shortCountry[$sheetData[$m]['E']])?strtoupper($this->common_function->shortCountry[$sheetData[$m]['E']]) : $sheetData[$m]['E'],
																"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($sheetData[$m]['G']." ".$sheetData[$m]['H'])),
																"st_timezone"					=> strtoupper($sheetData[$m]['I']),
																"in_deleted"					=> "0"
																);
										$dropoff_array[] 	= array("in_transportation_leg_id" 	=> "",
																"st_leg_type" 					=> "D",
																"st_street" 					=> $sheetData[$m]['J'],
																"st_city" 						=> isset($airport_city_d) && $airport_city_d != '' ? trim(preg_replace('/\s+/',' ',$airport_city_d)) : trim(preg_replace('/\s+/',' ',$sheetData[$m]['K'])),
																"st_state" 						=> isset($airport_state_d) && $airport_state_d != '' ? $airport_state_d : strtoupper($sheetData[$m]['L']),
																//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($sheetData[$m]['L'])])?strtoupper($this->common_function->shortAllState[strtoupper($sheetData[$m]['L'])]) : strtoupper($sheetData[$m]['L']),
																"st_zip" 						=> $sheetData[$m]['N'],
																"st_country " 					=> isset($this->common_function->shortCountry[$sheetData[$m]['M']])?strtoupper($this->common_function->shortCountry[$sheetData[$m]['M']]) : $sheetData[$m]['M'],
																"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($sheetData[$m]['O']." ".$sheetData[$m]['P'])),
																"st_timezone"					=> strtoupper($sheetData[$m]['Q']),
																"in_deleted"					=> "0"
																);													
	
									}
								}
							//print_r($legs_array);exit;
							}
							
							elseif($sheetData[$m]['A']=='0')
							{
								if($sheetData[$m]['C']=='' || $sheetData[$m]['D']=='' || $sheetData[$m]['E']=='' || $sheetData[$m]['F']==''|| $sheetData[$m]['G']==''|| $sheetData[$m]['H']==''||$sheetData[$m]['I']=='' || $sheetData[$m]['K']=='' || $sheetData[$m]['L']=='' || $sheetData[$m]['M']==''|| $sheetData[$m]['N']==''|| $sheetData[$m]['O']=='' || $sheetData[$m]['P']==''|| $sheetData[$m]['Q']=='')
								{
									//echo "<pre>";print_r($data_csv);
									$error_message .=($sheetData[$m]['C']=='')?"Pickup city, ":"";
									$error_message .=($sheetData[$m]['D']=='')?"Pickup state, ":"";
									$error_message .=($sheetData[$m]['E']=='')?"Pickup country, ":"";
									$error_message .=($sheetData[$m]['F']=='')?"Pickup zip, ":"";
									$error_message .=($sheetData[$m]['G']=='')?"Pickup date, ":"";
									$error_message .=($sheetData[$m]['H']=='')?"Pickup time, ":"";		//added on 14oct2014 by ghanshyam
									$error_message .=($sheetData[$m]['I']=='')?"Pickup time zone, ":"";
									$error_message .=($sheetData[$m]['K']=='')?"Dropoff city, ":"";
									$error_message .=($sheetData[$m]['L']=='')?"Dropoff state, ":"";
									$error_message .=($sheetData[$m]['M']=='')?"Dropoff country, ":"";
									$error_message .=($sheetData[$m]['N']=='')?"Dropoff zip, ":"";
									$error_message .=($sheetData[$m]['O']=='')?"Dropoff date, ":"";
									$error_message .=($sheetData[$m]['P']=='')?"Dropoff time, ":"";     //added on 14oct2014 by ghanshyam
									$error_message .=($sheetData[$m]['Q']=='')?"Dropoff time zone, ":"";
									$error_message .="Field(s) are blank in Row ".$e."<br>";
									//echo $error_message;die;
								}
								else
								{
									if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '' && strlen($sheetData[$m]['B']) > 50)
									{
										$error_message .= "Pickup Street must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['C']) && $sheetData[$m]['C'] != '' && strlen($sheetData[$m]['C']) > 50)
									{
										$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['D']) && $sheetData[$m]['D'] != '' && strlen($sheetData[$m]['D']) > 2)
									{
										$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['E']) && $sheetData[$m]['E'] != '')
									{
										if(strpos($sheetData[$m]['E'], 'c') !== FALSE)
										{
												$sheetData[$m]['E'] = 'CA';
										}
										else
										{
											$sheetData[$m]['E'] = 'US';
										}
									}
									
									$parts = explode('/',$sheetData[$m]['O']);
									
									if(isset($parts) && isset($parts[1]))
									{
										if(strlen($parts[1]) > 2)
										{
											$sheetData[$m]['G'] = str_replace('/','-', $sheetData[$m]['G']);
										}
									}												
									
									$pickup_date = strtotime($sheetData[$m]['G']);
									if(!isset($pickup_date) || $pickup_date == '')
									{
										$error_message .= "Pickup Date format is invalid in Row ".$e."<br>";
									}
									
									$valid_time_status = $this->validateTime($sheetData[$m]['H']);
									if(!$valid_time_status)
									{
										$error_message .= "Pickup Time format is invalid in Row ".$e."<br>";
									}
									
									$pickup_timezone = strtoupper(trim($sheetData[$m]['I']));
									if($pickup_timezone != 'EST' && $pickup_timezone != 'CST' && $pickup_timezone != 'PST' && $pickup_timezone != 'MST' && $pickup_timezone != 'IST' && $pickup_timezone != 'AST')
									{
									
										$error_message .= "Pickup Timezone is invalid in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['J']) && $sheetData[$m]['J'] != '' && strlen($sheetData[$m]['J']) > 50)
									{
										$error_message .= "Dropoff Street must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['K']) && $sheetData[$m]['K'] != '' && strlen($sheetData[$m]['K']) > 50)
									{
										$error_message .= "Dropoff City must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['L']) && $sheetData[$m]['L'] != '' && strlen($sheetData[$m]['L']) > 2)
									{
										$error_message .= "Dropoff State must be less than or equal to 2 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['M']) && $sheetData[$m]['M'] != '')
									{
										if(strpos($sheetData[$m]['M'], 'c') !== FALSE)
										{
												$sheetData[$m]['M'] = 'CA';
										}
										else
										{
											$sheetData[$m]['M'] = 'US';
										}
									}
									
									$parts = explode('/',$sheetData[$m]['O']);
									if(isset($parts) && isset($parts[1]))
									{
										if(strlen($parts[1]) > 2)
										{
											$sheetData[$m]['O'] = str_replace('/','-', $sheetData[$m]['O']);
										}
									}												
									
									$dropoff_date = strtotime($sheetData[$m]['O']);
									if(!isset($dropoff_date) || $dropoff_date == '')
									{
										$error_message .= "Dropoff Date format is invalid in Row ".$e."<br>";
									}
									
									$d_valid_time_status = $this->validateTime($sheetData[$m]['P']);
									if(!$d_valid_time_status)
									{
										$error_message .= "Dropoff Time format is invalid in Row ".$e."<br>";
									}
									
									$dropoff_timezone = strtoupper(trim($sheetData[$m]['Q']));
									if($dropoff_timezone != 'EST' && $dropoff_timezone != 'CST' && $dropoff_timezone != 'PST' && $dropoff_timezone != 'MST' && $dropoff_timezone != 'IST' && $dropoff_timezone != 'AST')
									{
										$error_message .= "Dropoff Timezone is invalid in Row ".$e."<br>";
									}
									
									$leg_pickup_date 	= strtotime($sheetData[$m]['G']);
									$pickup_date 		= strtotime($dt_pickup_date);
									$target_date 		= strtotime(date("Y-m-d 23:59:59",strtotime($dt_target)));
									//$leg_target_date 	= strtotime(str_replace(" - "," ",$sheetData[$m]['N']));
									$leg_target_date 	= strtotime($sheetData[$m]['O']);
									//echo "Leg pickup==> ".$leg_pickup_date."<br>"."Leg Target==> ".$leg_target_date."<br>"."Pick up==> ".$pickup_date."<br>"."Target==> ".$target_date."<br>";//exit;
									
										
									$leg_pickup_time 	= strtotime($sheetData[$m]['G']." ".$sheetData[$m]['H']);
									$leg_dropoff_time 	= strtotime($sheetData[$m]['O']." ".$sheetData[$m]['P']);
									
									if(($leg_pickup_date < $pickup_date)||($leg_pickup_date > $target_date))
									{
										$error_message .= "Pickup Date in Row ".$e." must be in between the transportation start date and end date<br>";
									}
									if(($leg_target_date < $pickup_date) || ($leg_target_date > $target_date))
									{
										$error_message .= "Dropoff Date in Row ".$e." must be in between the transportation start date and end date<br>";
									}
									if($leg_target_date < $leg_pickup_date)
									{
										$error_message .= "Dropoff Date should be greater than or equal to Pickup Date in Row ".$e."<br>";
									}
									
									if($leg_pickup_time >= $leg_dropoff_time)
									{
										$error_message .= "Dropoff Time should be greater than Pickup Time in Row ".$e."<br>";
									}
									
									else
									{
									
										//added code for multiple drivers and meeting location on 15Dec2014
										$no_of_drivers = trim($sheetData[$m]['R']);
										$meeting_location 	  = trim($sheetData[$m]['S']);
										$to_meeting_location  = trim($sheetData[$m]['T']);
										$leg_instruction 			= trim($sheetData[$m]['U']);
										
										if(isset($no_of_drivers) && $no_of_drivers > 5)
										{
											$no_of_drivers	= 5;											
										}
										
										if(isset($no_of_drivers) && $no_of_drivers < 2)
										{
											$no_of_drivers	= 0;
										}
										if(isset($no_of_drivers) && $no_of_drivers >= 2 && $no_of_drivers <= 5)
										{
											$no_of_drivers = $no_of_drivers;
										}
										
										$legs_array[] = array("in_transportation_id"=> "",
															"in_route_type"			=> ($sheetData[$m]['A'])?$sheetData[$m]['A']:"0",
															"in_created_by"			=> $this->session->userdata('userid'),
															"dt_created"			=> date("Y-m-d H:i:s"),
															"in_deleted"			=> "0",
															"in_multi_user"			=> (isset($no_of_drivers) && $no_of_drivers >= 2 && $no_of_drivers <= 5) ? 1 : 0, //added by ghanshyam on 15Dec2014
															"in_user_num" 			=> isset($no_of_drivers) ? $no_of_drivers : 0,	//added by ghanshyam on 15Dec2014
															"st_meeting_location"	=> isset($meeting_location) ? $meeting_location : '',	//added by ghanshyam on 15Dec2014
															"in_sort_order"			=> ($upload_leg_sort_order+1),
															"st_leg_instruction" 	 => $leg_instruction,
															"st_to_meeting_location" => $to_meeting_location,	
															);
										
										$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																"st_leg_type" 					=> "P",
																"st_street" 					=> $sheetData[$m]['B'],
																"st_city" 						=> trim(preg_replace('/\s+/',' ',$sheetData[$m]['C'])),
																"st_state" 						=> strtoupper($sheetData[$m]['D']),
																//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($sheetData[$m]['D'])])?strtoupper($this->common_function->shortAllState[strtoupper($sheetData[$m]['D'])]) : strtoupper($sheetData[$m]['D']),
																"st_country" 					=> isset($this->common_function->shortCountry[$sheetData[$m]['E']])?strtoupper($this->common_function->shortCountry[$sheetData[$m]['E']]) : $sheetData[$m]['E'],
																"st_zip" 						=> $sheetData[$m]['F'],																
																"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($sheetData[$m]['G']." ".$sheetData[$m]['H'])),
																"st_timezone"					=> strtoupper($sheetData[$m]['I']),
																"in_deleted"					=> "0"
																);
										$dropoff_array[] 	= array("in_transportation_leg_id" 	=> "",
																"st_leg_type" 					=> "D",
																"st_street" 					=> $sheetData[$m]['J'],
																"st_city" 						=> trim(preg_replace('/\s+/',' ',$sheetData[$m]['K'])),
																"st_state" 						=> strtoupper($sheetData[$m]['L']),																
																"st_country " 					=> isset($this->common_function->shortCountry[$sheetData[$m]['M']])?strtoupper($this->common_function->shortCountry[$sheetData[$m]['M']]) : $sheetData[$m]['M'],
																"st_zip" 						=> $sheetData[$m]['N'],																
																"dt_start_time"					=> date('Y-m-d H:i:s',  strtotime($sheetData[$m]['O']." ".$sheetData[$m]['P'])),
																"st_timezone"					=> strtoupper($sheetData[$m]['Q']),
																"in_deleted"					=> "0"
																);													
	
									}									
									//echo $error_message; die //use for testing									
								}
							}
							
							/*code added by ghanshyam on 15Dec2014 for overnight legs type starts*/
							elseif($sheetData[$m]['A']=='2' && $transport_type!='RO')
							{
								if($sheetData[$m]['C']=='' || $sheetData[$m]['D']=='' || $sheetData[$m]['E']=='' || $sheetData[$m]['F']=='')
								{
									//echo "<pre>";print_r($data_csv);
									$error_message .=($sheetData[$m]['C']=='')?"Pickup city, ":"";
									$error_message .=($sheetData[$m]['D']=='')?"Pickup state, ":"";
									$error_message .=($sheetData[$m]['E']=='')?"Pickup country, ":"";
									$error_message .=($sheetData[$m]['F']=='')?"Pickup zip, ":"";
									$error_message .="Field(s) are blank in Row ".$e."<br>";
									//echo $error_message;die;
								}
								else
								{
									//added code for multiple drivers and meeting location on 15Dec2014
									$overnight_meeting_location 	  = isset($sheetData[$m]['S']) ? trim($sheetData[$m]['S']) : ''; 
									
									if(isset($sheetData[$m]['E']) && $sheetData[$m]['E'] != '')
									{
										if(strpos($sheetData[$m]['E'], 'c') !== FALSE)
										{
												$sheetData[$m]['E'] = 'CA';
										}
										else
										{
											$sheetData[$m]['E'] = 'US';
										}
									}
									
									if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '' && strlen($sheetData[$m]['B']) > 50)
									{
										$error_message .= "Pickup Street must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['C']) && $sheetData[$m]['C'] != '' && strlen($sheetData[$m]['C']) > 50)
									{
										$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['D']) && $sheetData[$m]['D'] != '' && strlen($sheetData[$m]['D']) > 2)
									{
										$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$e."<br>";
									}
									
									else
									{
										
										$legs_array[] = array("in_transportation_id"=> "",
															"in_route_type"			=> ($sheetData[$m]['A'])?$sheetData[$m]['A']:"2",
															"in_created_by"			=> $this->session->userdata('userid'),
															"dt_created"			=> date("Y-m-d H:i:s"),
															"in_deleted"			=> "0",
															"st_meeting_location"	=> isset($overnight_meeting_location) ? $overnight_meeting_location : '',	//added by ghanshyam on 15Dec2014
															"in_sort_order"			=> ($upload_leg_sort_order+1),  
															);
										
										$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																"st_leg_type" 					=> "O",
																"st_street" 					=> $sheetData[$m]['B'],
																"st_city" 						=> trim(preg_replace('/\s+/',' ',$sheetData[$m]['C'])),
																"st_state" 						=> strtoupper($sheetData[$m]['D']),
																"st_country" 					=> isset($this->common_function->shortCountry[$sheetData[$m]['E']])?strtoupper($this->common_function->shortCountry[$sheetData[$m]['E']]) : $sheetData[$m]['E'],
																"st_zip" 						=> $sheetData[$m]['F'],																
																"in_deleted"					=> "0"
																);
										$dropoff_array[] 	= array();
										
									}									
									//echo $error_message; die //use for testing									
								}
							}
							/*code added by ghanshyam on 15Dec2014 for overnight legs type ends*/
							
							else
							{
								if($transport_type=='RO')
								{
									if($m>0)
									{
										$error_message .= "Leg type should be 0 or 1 in row ".$e."<br>";
									}
								} else {	
									if($m>0)
									{
										$error_message .= "Leg type should be 0 or 1 or 2 in row ".$e."<br>";
									}
								}
							}
							$upload_leg_sort_order++;
						}
				
					}
					else
					{
							$a=0;
							$error_message = "";
							if (($handle = fopen($file_in_dir_name, "r")) !== FALSE) {
								$error_array = array();
								$upload_sort_order = $this->orgtrasnportation_model->get_last_leg_order();
								$upload_leg_sort_order = $upload_sort_order;
								//$upload_sort_order = 0;
								while (($data_csv = fgetcsv($handle, 1000, ",")) !== FALSE){
									if($a>2)
									{
										//echo "<pre>";print_r($data_csv);exit;
										//echo "<pre>";print_r($data_csv);exit;
										$error_line = $a+1;
										if($data_csv[0]=='1')
										{
											
											
											if($data_csv[1]=='' || $data_csv[6]=='' || $data_csv[7]=='' || $data_csv[8]=='' || $data_csv[9]=='' || $data_csv[14]=='' || $data_csv[15]=='' || $data_csv[16]=='' )
											{
												$error_message .=($data_csv[1]=='')?"Pickup Airport, ":"";
												$error_message .=($data_csv[6]=='')?"Pickup date, ":"";
												$error_message .=($data_csv[7]=='')?"Pickup time, ":"";
												$error_message .=($data_csv[8]=='')?"Pickup time zone, ":"";
												$error_message .=($data_csv[9]=='')?"Dropoff Airport, ":"";
												$error_message .=($data_csv[14]=='')?"Dropoff date, ":"";
												$error_message .=($data_csv[15]=='')?"Dropoff time, ":"";
												$error_message .=($data_csv[16]=='')?"Dropoff time zone, ":"";
												$error_message .="Field(s) are blank in Row ".$a."<br>";
											}
											else
											{
												if(isset($data_csv[1]) && $data_csv[1] != '' && strlen($data_csv[1]) > 10)
												{
													$error_message .= "Pickup Airport must be less than or equal to 10 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[1]) && $data_csv[1] != '')
												{
													$airport_details_p = $this->common_model->get_airport_by_code($data_csv[1]);
													if(isset($airport_details_p) && count($airport_details_p) == 0)
													{
													$error_message .= "Pickup Airport is incorrect in Row ".$error_line."<br>";
													}
													if(isset($airport_details_p) && isset($airport_details_p['st_state']) && $airport_details_p['st_state'] != '')
													{
													$airport_state_p = $airport_details_p['st_state'];
													}
													if(isset($airport_details_p) && isset($airport_details_p['st_city']) && $airport_details_p['st_city'] != '')
													{
													$airport_city_p = $airport_details_p['st_city'];
													}
												}

												if(isset($data_csv[2]) && $data_csv[2] != '' && strlen($data_csv[2]) > 50)
												{
													$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[3]) && $data_csv[3] != '' && strlen($data_csv[3]) > 2)
												{
													$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$error_line."<br>";
												}
												
												$parts = explode('/',$data_csv[6]);
												if(isset($parts) && isset($parts[1]))
												{
													if(strlen($parts[1]) > 2)
													{
														$data_csv[6] = str_replace('/','-', $data_csv[6]);
													}
												}												
												
												$pickup_date = strtotime($data_csv[6]);
												if(!isset($pickup_date) || $pickup_date == '')
												{
													$error_message .= "Pickup Date format is invalid in Row ".$error_line."<br>";
												}
									
												/*$valid_time_status = $this->validateTime($data_csv[7]);
												if(!$valid_time_status)
												{
													$error_message .= "Pickup Time format is invalid in Row ".$a."<br>";
												}*/
												
												$pickup_timezone = strtoupper(trim($data_csv[8]));
												if($pickup_timezone != 'EST' && $pickup_timezone != 'CST' && $pickup_timezone != 'PST' && $pickup_timezone != 'MST' && $pickup_timezone != 'IST' && $pickup_timezone != 'AST')
												{
													$error_message .= "Pickup Timezone is invalid in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[9]) && $data_csv[9] != '' && strlen($data_csv[9]) > 10)
												{
													$error_message .= "Dropoff Airport must be less than or equal to 10 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[9]) && $data_csv[9] != '')
												{
													$airport_details_d = $this->common_model->get_airport_by_code($data_csv[9]);
													if(isset($airport_details_d) && count($airport_details_d) == 0)
													{
													$error_message .= "Dropoff Airport is incorrect in Row ".$error_line."<br>";
													}
													if(isset($airport_details_d) && isset($airport_details_d['st_state']) && $airport_details_d['st_state'] != '')
													{
													$airport_state_d = $airport_details_d['st_state'];
													}
													if(isset($airport_details_d) && isset($airport_details_d['st_city']) && $airport_details_d['st_city'] != '')
													{
													$airport_city_d = $airport_details_d['st_city'];
													}
												}
												
												if(isset($data_csv[10]) && $data_csv[10] != '' && strlen($data_csv[10]) > 50)
												{
													$error_message .= "Dropoff City must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[11]) && $data_csv[11] != '' && strlen($data_csv[11]) > 2)
												{
													$error_message .= "Dropoff State must be less than or equal to 2 characters in Row ".$error_line."<br>";
												}
												
												$parts = explode('/',$data_csv[14]);
												if(isset($parts) && isset($parts[1]))
												{
													if(strlen($parts[1]) > 2)
													{
														$data_csv[14] = str_replace('/','-', $data_csv[14]);
													}
												}										
												
												$dropoff_date = strtotime($data_csv[14]);
												if(!isset($dropoff_date) || $dropoff_date == '')
												{
													$error_message .= "Dropoff Date format is invalid in Row ".$error_line."<br>";
												}
												
												/*$d_valid_time_status = $this->validateTime($data_csv[15]);
												if(!$d_valid_time_status)
												{
													$error_message .= "Dropoff Time format is invalid in Row ".$a."<br>";
												}*/
																					
												$dropoff_timezone = strtoupper(trim($data_csv[16]));
												if($dropoff_timezone != 'EST' && $dropoff_timezone != 'CST' && $dropoff_timezone != 'PST' && $dropoff_timezone != 'MST' && $dropoff_timezone != 'IST' && $dropoff_timezone != 'AST')
												{
													$error_message .= "Dropoff Timezone is invalid in Row ".$error_line."<br>";
												}
												
												$leg_pickup_date 	= strtotime($data_csv[6]);
												$pickup_date 		= strtotime($dt_pickup_date);
												$target_date 		= strtotime(date("Y-m-d 23:59:59",strtotime($dt_target)));
												$leg_target_date 	= strtotime($data_csv[14]);
												
												$leg_pickup_time 	= strtotime($data_csv[6]." ".$data_csv[7]);
												$leg_dropoff_time 	= strtotime($data_csv[14]." ".$data_csv[15]);
												
												if(($leg_pickup_date < $pickup_date)||($leg_pickup_date > $target_date))
												{
													$error_message .= "Pickup Date in Row ".$error_line." must be in between the transportation start date and end date<br>";
												}
												if(($leg_target_date < $pickup_date) || ($leg_target_date > $target_date))
												{
													$error_message .= "Dropoff Date in Row ".$error_line." must be in between the transportation start date and end date<br>";
												}
												if($leg_target_date < $leg_pickup_date)
												{
													$error_message .= "Dropoff Date should be greater than or equal to Pickup Date in Row ".$error_line."<br>";
												}
												/*if($leg_pickup_time < $leg_dropoff_time)
												{
													$error_message .= "Dropoff Time should be greater than Pickup Time in Row ".$error_line."<br>";
												}*/

												else
												{
													//added code for multiple drivers and meeting location on 15Dec2014
													$no_of_pilots = trim($data_csv[17]); 
													$pilot_meeting_location 	  = trim($data_csv[18]); 
													
													if(isset($no_of_pilots) && $no_of_pilots > 5)
													{
														$no_of_pilots = 5;														
													}
													if(isset($no_of_pilots) && $no_of_pilots < 2)
													{
														$no_of_pilots	= 0;
													}
													if(isset($no_of_pilots) && $no_of_pilots >= 2 && $no_of_pilots <= 5)
													{
														$no_of_pilots = $no_of_pilots;
													}
													
													$legs_array[] = array("in_transportation_id"	=> "",
																		"in_route_type"			=> ($data_csv[0])?$data_csv[0]:"1",
																		"in_created_by"			=> $this->session->userdata('userid'),
																		"dt_created"			=> date("Y-m-d H:i:s"),
																		"in_deleted"			=> "0",
																		"in_multi_user"			=> (isset($no_of_pilots) && $no_of_pilots >= 2 && $no_of_pilots <= 5) ? 1 : 0, //added by ghanshyam on 15Dec2014
																		"in_user_num" 			=> isset($no_of_pilots) ? $no_of_pilots : 0,	//added by ghanshyam on 15Dec2014
																		"st_meeting_location"	=> isset($pilot_meeting_location) ? $pilot_meeting_location : '',	//added by ghanshyam on 15Dec2014
																		"in_sort_order"		=> ($upload_sort_order+1),  
																		);
													$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																			"st_leg_type" 					=> "P",
																			"st_street" 					=> $data_csv[1],
																			"st_city" 						=> isset($airport_city_p) && $airport_city_p != '' ? trim(preg_replace('/\s+/',' ',$airport_city_p)) : trim(preg_replace('/\s+/',' ',$data_csv[2])),
																			"st_state" 						=> isset($airport_state_p) && $airport_state_p != '' ? $airport_state_p : strtoupper($data_csv[3]),

																			//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($data_csv[3])])?strtoupper($this->common_function->shortAllState[strtoupper($data_csv[3])]) : strtoupper($data_csv[3]),
																			"st_zip" 						=> $data_csv[5],
																			"st_country" 					=> isset($this->common_function->shortCountry[$data_csv[4]])?strtoupper($this->common_function->shortCountry[$data_csv[4]]) : $data_csv[4],
																			
																			"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($data_csv[6]." ".$data_csv[7])),
																			"st_timezone"					=> strtoupper($data_csv[8]),
																			"in_deleted"					=> "0"
																			);
													$dropoff_array[] 	= array("in_transportation_leg_id" 	=> "",
																			"st_leg_type" 					=> "D",
																			"st_street" 					=> $data_csv[9],
																			"st_city" 						=> isset($airport_city_d) && $airport_city_d != '' ? trim(preg_replace('/\s+/',' ',$airport_city_d)) : trim(preg_replace('/\s+/',' ',$data_csv[10])),
																			"st_state" 						=> isset($airport_state_d) && $airport_state_d != '' ? $airport_state_d : strtoupper($data_csv[11]),
																			//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($data_csv[11])])?strtoupper($this->common_function->shortAllState[$data_csv[11]]) : $data_csv[11],
																			"st_zip" 						=> $data_csv[13],
																			"st_country " 					=> isset($this->common_function->shortCountry[$data_csv[12]])?strtoupper($this->common_function->shortCountry[$data_csv[12]]) : $data_csv[12],
																			"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($data_csv[14]." ".$data_csv[15])),
																			"st_timezone"					=> strtoupper($data_csv[16]),
																			"in_deleted"					=> "0"
																			);													
			
												}
											}
										}
										elseif($data_csv[0]=='0')
										{
											if($data_csv[2]=='' || $data_csv[3]=='' || $data_csv[4]=='' || $data_csv[5]==''|| $data_csv[6]==''|| $data_csv[7]==''||$data_csv[8]=='' || $data_csv[10]=='' || $data_csv[11]=='' || $data_csv[12]==''|| $data_csv[13]==''|| $data_csv[14]==''|| $data_csv[15]==''|| $data_csv[16]=='')
											{
												//echo "<pre>";print_r($data_csv);
												$error_message .=($data_csv[2]=='')?"Pickup city, ":"";
												$error_message .=($data_csv[3]=='')?"Pickup state, ":"";
												$error_message .=($data_csv[4]=='')?"Pickup country, ":"";
												$error_message .=($data_csv[5]=='')?"Pickup zip, ":"";
												$error_message .=($data_csv[6]=='')?"Pickup date, ":"";
												$error_message .=($data_csv[7]=='')?"Pickup time, ":"";
												$error_message .=($data_csv[8]=='')?"Pickup time zone, ":"";
												$error_message .=($data_csv[10]=='')?"Dropoff city, ":"";
												$error_message .=($data_csv[11]=='')?"Dropoff state, ":"";
												$error_message .=($data_csv[12]=='')?"Dropoff country, ":"";
												$error_message .=($data_csv[13]=='')?"Dropoff zip, ":"";
												$error_message .=($data_csv[14]=='')?"Dropoff date, ":"";
												$error_message .=($data_csv[15]=='')?"Dropoff time, ":"";
												$error_message .=($data_csv[16]=='')?"Dropoff time zone, ":"";
												$error_message .="Field(s) are blank in Row ".$error_line."<br>";
												//echo $error_message;die;
											}
											else
											{
												if(isset($data_csv[1]) && $data_csv[1] != '' && strlen($data_csv[1]) > 50)
												{
													$error_message .= "Pickup Street must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[2]) && $data_csv[2] != '' && strlen($data_csv[2]) > 50)
												{
													$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[3]) && $data_csv[3] != '' && strlen($data_csv[3]) > 2)
												{
													$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[4]) && $data_csv[4] != '')
												{
													if(strpos($data_csv[4], 'c') !== FALSE)
													{
															$data_csv[4] = 'CA';
													}
													else
													{
														$data_csv[4] = 'US';
													}
												}
												
												$parts = explode('/',$data_csv[6]);
									
												if(isset($parts) && isset($parts[1]))
												{
													if(strlen($parts[1]) > 2)
													{
														$data_csv[6] = str_replace('/','-', $data_csv[6]);
													}
												}										
												
												$pickup_date = strtotime($data_csv[6]);
												if(!isset($pickup_date) || $pickup_date == '')
												{
													$error_message .= "Pickup Date format is invalid in Row ".$error_line."<br>";
												}


												/*$valid_time_status = $this->validateTime($data_csv[7]);
												if(!$valid_time_status)
												{
													$error_message .= "Pickup Time format is invalid in Row ".$a."<br>";
												}
												*/
												
												if(isset($data_csv[9]) && $data_csv[9] != '' && strlen($data_csv[9]) > 50)
												{
													$error_message .= "Dropoff Street must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[10]) && $data_csv[10] != '' && strlen($data_csv[10]) > 50)
												{
													$error_message .= "Dropoff City must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[11]) && $data_csv[11] != '' && strlen($data_csv[11]) > 2)
												{
													$error_message .= "Dropoff State must be less than or equal to 2 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[12]) && $data_csv[12] != '')
												{
													if(strpos($data_csv[12], 'c') !== FALSE)
													{
															$data_csv[12] = 'CA';
													}
													else
													{
														$data_csv[12] = 'US';
													}
												}
												
												$parts = explode('/',$data_csv[14]);									
												if(isset($parts) && isset($parts[1]))
												{
													if(strlen($parts[1]) > 2)
													{
														$data_csv[14] = str_replace('/','-', $data_csv[14]);
													}
												}										
												
												$dropoff_date = strtotime($data_csv[14]);
												if(!isset($dropoff_date) || $dropoff_date == '')
												{
													$error_message .= "Dropoff Date format is invalid in Row ".$error_line."<br>";
												}
												
												/*$d_valid_time_status = $this->validateTime($data_csv[15]);
												if(!$d_valid_time_status)
												{
													$error_message .= "Dropoff Time format is invalid in Row ".$a."<br>";
												}*/
												//echo $error_message;exit;
													
												$leg_pickup_date 	= strtotime($data_csv[6]);
												$pickup_date 		= strtotime($dt_pickup_date);
												$target_date 		= strtotime(date("Y-m-d 23:59:59",strtotime($dt_target)));
												$leg_target_date 	= strtotime($data_csv[14]);
												
												$leg_pickup_time 	= strtotime($data_csv[6]." ".$data_csv[7]);
												$leg_dropoff_time 	= strtotime($data_csv[14]." ".$data_csv[15]);

												if(($leg_pickup_date < $pickup_date)||($leg_pickup_date > $target_date))
												{
													$error_message .= "Pickup Date in Row ".$error_line." must be in between the transportation start date and end date<br>";
												}
												if(($leg_target_date < $pickup_date) || ($leg_target_date > $target_date))
												{
													$error_message .= "Dropoff Date in Row ".$error_line." must be in between the transportation start date and end date<br>";
												}
												if($leg_target_date < $leg_pickup_date)
												{
													$error_message .= "Dropoff Date should be greater than or equal to Pickup Date in Row ".$error_line."<br>";
												}
												
												/*if($leg_pickup_time < $leg_dropoff_time)
												{
													$error_message .= "Dropoff Time should be greater than Pickup Time in Row ".$error_line."<br>";
												}*/
												

												else
												{	
													//added code for multiple drivers and meeting location on 15Dec2014
													$no_of_drivers = trim($data_csv[17]); 
													$meeting_location 	  = trim($data_csv[18]); 
													
													if(isset($no_of_drivers) && $no_of_drivers > 5)
													{
														$no_of_drivers = 5;
														
													}
													if(isset($no_of_drivers) && $no_of_drivers < 2)
													{
														$no_of_drivers = 0;
													}
													if(isset($no_of_drivers) && $no_of_drivers >= 2 && $no_of_drivers <= 5)
													{
														$no_of_drivers = $no_of_drivers;
													}
				
													$legs_array[] = array("in_transportation_id"	=> "",
																		"in_route_type"			=> ($data_csv[0])?$data_csv[0]:"0",
																		"in_created_by"			=> $this->session->userdata('userid'),
																		"dt_created"			=> date("Y-m-d H:i:s"),
																		"in_deleted"			=> "0",
																		"in_multi_user"			=> (isset($no_of_drivers) && $no_of_drivers >= 2 && $no_of_drivers <= 5) ? 1 : 0, //added by ghanshyam on 15Dec2014
																		"in_user_num" 			=> isset($no_of_drivers) ? $no_of_drivers : 0,	//added by ghanshyam on 15Dec2014
																		"st_meeting_location"	=> isset($meeting_location) ? $meeting_location : '',	//added by ghanshyam on 15Dec2014
																		"in_sort_order"			=> ($upload_sort_order+1),  

																		);
													$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																			"st_leg_type" 					=> "P",
																			"st_street" 					=> $data_csv[1],
																			"st_city" 						=> trim(preg_replace('/\s+/',' ',$data_csv[2])),
																			"st_state" 						=> strtoupper($data_csv[3]),
																			//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($data_csv[3])])?strtoupper($this->common_function->shortAllState[strtoupper($data_csv[3])]) : $data_csv[3],
																			"st_zip" 						=> $data_csv[5],
																			"st_country" 					=> isset($this->common_function->shortCountry[$data_csv[4]])?strtoupper($this->common_function->shortCountry[$data_csv[4]]) : $data_csv[4],
																			"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($data_csv[6]." ".$data_csv[7])),
																			"st_timezone"					=> strtoupper($data_csv[8]),
																			"in_deleted"					=> "0"
																			);
													$dropoff_array[] 	= array("in_transportation_leg_id" 	=> "",
																			"st_leg_type" 					=> "D",
																			"st_street" 					=> $data_csv[9],
																			"st_city" 						=> trim(preg_replace('/\s+/',' ',$data_csv[10])),
																			"st_state" 						=> strtoupper($data_csv[11]),
																			//"st_state" 						=> isset($this->common_function->shortAllState[strtoupper($data_csv[11])])?strtoupper($this->common_function->shortAllState[strtoupper($data_csv[11])]) : $data_csv[11],
																			"st_zip" 						=> $data_csv[13],
																			"st_country " 					=> isset($this->common_function->shortCountry[$data_csv[12]])?strtoupper($this->common_function->shortCountry[$data_csv[12]]) : $data_csv[12],
																			"dt_start_time"					=> date('Y-m-d H:i:s', strtotime($data_csv[14]." ".$data_csv[15])),
																			"st_timezone"					=> strtoupper($data_csv[16]),
																			"in_deleted"					=> "0"
																			);													
			
												}
											}
										}
										/*code added by ghanshyam on 15Dec2014 for overnight legs type starts*/
										elseif($data_csv[0]=='2')
										{
											if($data_csv[2]=='' || $data_csv[3]=='' || $data_csv[4]=='' || $data_csv[5]=='')
											{
												//echo "<pre>";print_r($data_csv);
												$error_message .=($data_csv[2]=='')?"Pickup city, ":"";
												$error_message .=($data_csv[3]=='')?"Pickup state, ":"";
												$error_message .=($data_csv[4]=='')?"Pickup country, ":"";
												$error_message .=($data_csv[5]=='')?"Pickup zip, ":"";
												$error_message .="Field(s) are blank in Row ".$a."<br>";
												//echo $error_message;die;
											}
											else
											{
												$overnight_meeting_location 	  = trim($data_csv[17]); 
												if(isset($data_csv[4]) && $data_csv[4] != '')
												{
													if(strpos($data_csv[4], 'c') !== FALSE)
													{
															$data_csv[4] = 'CA';
													}
													else
													{
														$data_csv[4] = 'US';
													}
												}
												
												if(isset($data_csv[1]) && $data_csv[1] != '' && strlen($data_csv[1]) > 50)
												{
													$error_message .= "Pickup Street must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[2]) && $data_csv[2] != '' && strlen($data_csv[2]) > 50)
												{
													$error_message .= "Pickup City must be less than or equal to 50 characters in Row ".$error_line."<br>";
												}
												
												if(isset($data_csv[3]) && $data_csv[3] != '' && strlen($data_csv[3]) > 2)
												{
													$error_message .= "Pickup State must be less than or equal to 2 characters in Row ".$error_line."<br>";
												}
												
												
												else
												{
													$legs_array[] = array("in_transportation_id"	=> "",
																		"in_route_type"			=> ($data_csv[0])?$data_csv[0]:"2",
																		"in_created_by"			=> $this->session->userdata('userid'),
																		"dt_created"			=> date("Y-m-d H:i:s"),
																		"in_deleted"			=> "0",
																		"st_meeting_location"	=> isset($overnight_meeting_location) ? $overnight_meeting_location : '',	//added by ghanshyam on 15Dec2014
																		"in_sort_order"			=> ($upload_sort_order+1),  
																		);
													$pickup_array[] 	= array("in_transportation_leg_id" 	=> "",
																			"st_leg_type" 					=> "O",
																			"st_street" 					=> $data_csv[1],
																			"st_city" 						=> trim(preg_replace('/\s+/',' ',$data_csv[2])),
																			"st_state" 						=> strtoupper($data_csv[3]),
																			"st_zip" 						=> $data_csv[5],
																			"st_country" 					=> isset($this->common_function->shortCountry[$data_csv[4]])?strtoupper($this->common_function->shortCountry[$data_csv[4]]) : $data_csv[4],
																			"in_deleted"					=> "0"
																			);
													$dropoff_array[]	= array();
													
												}
											}
										
										}
										/*code added by ghanshyam on 15Dec2014 for overnight legs type ends*/
										else
										{
											if($a>2)
											{
												$error_message .= "Leg type should be 0 or 1 or 2 in row ".$error_line."<br>";
											}
										}
										
										//echo "<pre>";print_r($data_csv);
									}					
									$a++;
									$upload_sort_order++;
								}
							}
							
						}
					//echo "<pre>";print_r($legs_array);die; //use for testing
					//@unlink($this->config->item('upload')."legupload/".$uploadfilename);
					if(!isset($legs_array) || empty($legs_array))
					{
						if($error_message=='')
						{
							$error_message .= "Empty file is uploaded Or File Format is incorrect.";
						}
					}
				}
				
				if($error_message != "")
				{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";					
					if(!empty($data['Err_Msg']))
					{
						$this->session->set_flashdata('leg_upload_error', $data['Err_Msg']);
					}
					$this->session->set_userdata('transport_steps',3);
					redirect($this->config->item('base_url')."transport-create-legs/");
				}	
				
				if(isset($legs_array) && !empty($legs_array))
				{
					//echo "<pre>";print_r($legs_array);print_r($pickup_array);print_r($dropoff_array);exit;
					for($q=0;$q<count($legs_array);$q++)
					{
						$legs_array[$q]['in_transportation_id'] =$transport_id; 
						$leg_id			= $this->orgtrasnportation_model->create_legs($legs_array[$q]);
						
						if(isset($legs_array[$q]['in_route_type']) && $legs_array[$q]['in_route_type'] == '0')
						{
							//added code to add vehicle for the leg by ghanshyam on 12Dec2014 starts
							$this->load->model('user_model');
							$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid')); 
					
					
							if(!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id']))
							{
							$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
												   "in_user_id"					=> $this->session->userdata('userid'),
												   "in_vehicle_id"				=> $data['arrVehicle'][0]['in_vehicle_id'],
												   "in_transportation_leg_id"	=> $leg_id,
												   "dt_created"					=> date("Y-m-d H:i:s"),
												   "in_deleted"					=> 0
												);
							$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);						
							}
						}
						//added code to add vehicle for the leg by ghanshyam on 12Dec2014 ends
						
						$pickup_array[$q]['in_transportation_leg_id']=$leg_id;
						$dropoff_array[$q]['in_transportation_leg_id']=$leg_id;
						$this->orgtrasnportation_model->add_legs_details($pickup_array[$q]);
						$this->orgtrasnportation_model->add_legs_details($dropoff_array[$q]);
					}
					$this->session->set_flashdata('leg_upload_success', 'Legs uploaded successfully.');
					$this->session->set_userdata('transport_steps',3);
					redirect($this->config->item('base_url')."transport-create-legs/");
				}
		}
		//code for excel file legs upload ends
		
		$transport_files = $this->orgtrasnportation_model->get_transport_files($tra_id);
		$data['transport_files'] = $transport_files;
		
		$data['Err_Msg'] 		= isset($data['Err_Msg']) ? $data['Err_Msg'] : '';
		$data['transport_id']  = $tra_id;
		$data['org_id']  = $this->session->userdata('org_id');
		
		//$this->load->view('transportation/org-transportation-create-legs',$data);	
		$this->load->view('transportation/create-updated-legs',$data);	
		
	}
	#=========================================================
	#	Function : org_transport_schedule
	#	Purpose  : User chnage in trasportation
	#=========================================================		
	public function org_transport_schedule()
	{	
		//echo "<pre>";print_r($this->session->userdata);die;
			
		/*if(!$this->session->userdata('userid'))
		{ 
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}*/
		$trasport_id 			= $this->uri->segment(2);
		$legs_page 				= $this->uri->segment(3);
		$participants_driver_userid = array();
		
		//$trasport_id 			= $id;
	
		//echo "<pre>"; print_r($_REQUEST); die;		
			//echo "<pre>";print_r($data['user_profile_setting_details']);die;
		if($trasport_id!='' || $trasport_id>'0')
		{
			/*$transport_details 		= $this->orgtrasnportation_model->get_transport_details($trasport_id);		
			if(empty($transport_details))
			{
				redirect($this->config->item('base_url'));
			}*/
			$this->session->set_userdata('transport_id',$trasport_id );
			//$this->session->set_userdata('org_id',isset($transport_details['0']['in_organization_id'])?$transport_details['0']['in_organization_id']:"");
		}
		
		if(!$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		$data 					= array();
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$data['legs_page'] 		= $legs_page;
		//$data['Success_Msg'] = '';
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		if(empty($transport_details))
		{
			redirect($this->config->item('base_url'));
		}
		if($transport_details[0]['in_status']==2){
			
			$this->confirm_transport();
		
		}else{
				$this->session->set_userdata('org_id',isset($transport_details['0']['in_organization_id'])?$transport_details['0']['in_organization_id']:"");
		
		$userId					=	$transport_details[0]['in_user_id'];
		$profile_setting= $this->common_model->get_user_profile_setting($userId);	
		
		if(empty($transport_details))
		{
			redirect($this->config->item('base_url'));
		}
		$org_owner	= $this->common_model->get_org_owner_id($this->session->userdata('userid'),$transport_details[0]['in_organization_id']);
		$transport_coor	= $this->orgtrasnportation_model->get_transport_cordinator($this->session->userdata('userid'),$transport_details[0]['in_organization_id']);
		//echo "<pre>";print_r($transport_coor);die;
		if($transport_details[0]['in_status']==4 && $transport_details[0]['in_trans_coods_id']!=$this->session->userdata('userid') && (empty($org_owner) && empty($transport_coor)))
		{
			redirect($this->config->item('base_url'));
		}
		
		if($this->input->post('enable_space_reversation'))
		{
			$this->session->set_userdata('enable_space_reversation','1');
		}
		
		if($this->input->post('space_reversation_legid'))
		{
			$this->session->set_userdata('space_reversation_legid',$this->input->post('space_reversation_legid'));
		}		
		
		//User Visit
		if(strstr($this->agent->referrer(),'org_transportation/draft_transport/')) {
			$data['transport_check'] = $this->orgtrasnportation_model->transport_check();
			if($data['transport_check'] == 0) {
				$data['user_visit_data'] = array('in_user_id'			=>	$this->session->userdata('userid'),
												 'in_organization_id'	=>	$this->session->userdata('org_id'),
												 'in_transportation_id'	=>	$this->session->userdata('transport_id'),
												 'st_visit_type'		=>	'DRAFTTRANSPORT',
												 'st_ip_address'		=>	$this->input->ip_address(),
												 'dt_created'			=>	date('Y-m-d H:i:s')
												);
				$data['visit_created'] = $this->common_model->insert_last_visit_date($data['user_visit_data']);
			}
		}
		//End User Visit
		
		$transport_files 			= $this->orgtrasnportation_model->get_transport_files($tra_id);
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($tra_id);
		//$num_driver 				= $this->orgtrasnportation_model->get_driver_details($tra_id,"yes");
		//$time_zone 					= $this->common_function->tbl_time_zone();
		$legs_ids 					= $this->orgtrasnportation_model->get_all_legs();
		$data['leg_count']			= count($legs_ids);
		$route_type 				= '0';
		if($transport_details[0]['st_trans_type']=='RO')
		{
			$route_type = '1';
			$accept_term_org = '1';
			if($this->session->userdata('accept_term_org'))
			{	
				$array_term_str = $this->session->userdata('accept_term_org');
				$array_term_cond = explode(",",$array_term_str);
				
				if(in_array($transport_details[0]['in_organization_id'],$array_term_cond))
				{
					$accept_term_org = '0';
				}	
			}	
		}
		$data['accept_term_org'] = $accept_term_org;
		$data['users_accept_condition'] = $this->orgtrasnportation_model->check_users_accept_condition($this->session->userdata('userid'),$this->session->userdata('org_id'),$route_type);
		
		//get transport monitors starts
		/*$transport_monitors 					= $this->orgtrasnportation_model->get_all_transport_monitors();
		
		$data['transport_monitors_details']		= $transport_monitors;
		
		$data['transport_monitors_count']		= count($transport_monitors);*/
		//get transport monitors ends
		
		//$data['time_zone'] 			= $time_zone;
		//$data['num_driver']			= count($num_driver);
		$user_legs					= array();
		$user_profile				= array();
		
		/*foreach($num_driver as $key=>$value)
		{
			array_push($participants_driver_userid, $value['in_user_id']);
		}

		$data['participants_driver_userid']		= $participants_driver_userid;*/
		
		if($this->session->userdata('userid') && $this->session->userdata('userid') != '')
		{
			$user_profile = $this->common_model->get_user_profile($this->session->userdata('userid'));
		}
		$data['user_profile'] = isset($user_profile[0])?$user_profile[0]:"";
		//added by ghanshyam on 03dec2014 for selecting default timezone as user timezone for 
		//$user_time_zone = (isset($data['user_profile']['st_time_zone'])?$data['user_profile']['st_time_zone']:"");
		//$data['user_time_zone'] 		= $user_time_zone;
		
		//echo "<pre>";print_r($data['user_profile'] );die;
		if($transport_details['0']['st_trans_type']=='D')
		{
			$user_legs 				= $this->orgtrasnportation_model->get_all_legs("yes");
		}			
		if(($transport_details['0']['st_trans_type']=='D' || $transport_details['0']['st_trans_type']=='P' ) && $transport_details[0]['in_airline_transport']== 0  && $transport_details[0]['in_status']==1)
		{		
			$count_driver_legs 	= 0;
			$count_avia_legs	= 0;
			
			$data['ajoin'] = 'false';
			$data['join'] = 'false';
			
			if(isset($data['user_profile']) && !empty($data['user_profile']))
			{
				if($data['user_profile']['st_driver']=='Y')
				{
					/*$driver_legs 			= $this->orgtrasnportation_model->get_trans_legs_user($this->session->userdata('userid'),"0");
					$count_driver_legs = count($driver_legs);*/
					//echo "<pre>";print_r($driver_legs );die;
					//if(count($driver_legs)<=0)
					//{
						$data['join']				= "true";
						//$data['single_join']		= "true";
					//}
				}
			}
			if(isset($data['user_profile']) && !empty($data['user_profile']))
			{
				if($data['user_profile']['st_pilot']=='Y')
				{
					//$avia_legs 			= $this->orgtrasnportation_model->get_trans_legs_user($this->session->userdata('userid'),"1");
					//$count_avia_legs = count($avia_legs);
					//echo "<pre>";print_r($avia_legs );die;
					//if(count($avia_legs)<=0)
					//{
						$data['ajoin']				= "true";
						//$data['single_join']		= "true";
					//}
				}
			}
			//echo $count_driver_legs."==>".$count_avia_legs;
			if(isset($data['user_profile']) && !empty($data['user_profile']))
			{
				if($count_driver_legs<=0 && $count_avia_legs<=0 && ($data['user_profile']['st_pilot']=="Y" || $data['user_profile']['st_driver']=='Y'))
				{
					$data['single_join']		= "true";
				}
			}
			else
			{
				$data['single_join']		= "false";
			}
			//echo $data['single_join']."==".$data['join']."==".$data['ajoin'];die;
		}
		
		if($transport_details['0']['st_trans_type']=='D' && $transport_details[0]['in_airline_transport']== '1'  && $transport_details[0]['in_status']==1)
		{
			//echo $count_driver_legs."==>".$count_avia_legs;
			
			if(isset($data['user_profile']) && !empty($data['user_profile']))
			{
				if(count($driver_legs)<=0 && $count_avia_legs<=0 && ($data['user_profile']['st_airline_emp']=="Y" || $data['user_profile']['st_airline_emp']=='Y'))
				{
					$data['single_join_airline_emp']		= "true";
				}
			}
			else
			{
				$data['single_join_airline_emp']		= "false";
			}
		}	

		$error_msg = '';
		if($this->session->flashdata('cancel_trasport')=='' && $transport_details['0']['in_status']=='2')
		{
			$this->confirm_transport();
			//redirect($this->config->item('base_url')."org-confirm-transport/");
		}
		if($this->session->flashdata('cancel_trasport')=='' && $transport_details['0']['in_status']=='3')
		{
			redirect($this->config->item('base_url')."org-cancel-transport/");
		}
		
		
		if($this->input->post('edit_date_action'))
		{
			
				//$dateselect	=	$this->input->post('dateselect');
				//$pickup_select	=	$this->input->post('pickup_select');
				if($this->input->post('dateselect_year'))
				{	
					$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
				} else {
					$dateselect	=	$this->input->post('dateselect');
				}
				if($this->input->post('pickup_select_year'))
				{
					$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
				} else {
					$pickup_select	=	$this->input->post('pickup_select');
				}		
				
				if($dateselect!='' && $pickup_select!='')
				{
					
					if($transport_details['0']['dt_pickup_date']!='1969-12-31' && $transport_details['0']['dt_pickup_date']!='0000-00-00' && $transport_details['0']['dt_pickup_date']!='' 
		&& isset($transport_details['0']['dt_pickup_date']))
				{	
					$pre_date = @date("l, M d",@strtotime($transport_details['0']['dt_pickup_date']));
				} else {
					$pre_date = '';
				}				
					
					$new_date = date("l, M d",strtotime($pickup_select));
					
					$array =array("dt_target"=>date("Y-m-d",strtotime($dateselect)),
									"in_reminder_sent" =>'0',
								  "dt_pickup_date" => date("Y-m-d",strtotime($pickup_select)));
					$this->orgtrasnportation_model->update_transport_details($array);
					
					if($transport_details[0]['dt_target'] != date('Y-m-d',strtotime($dateselect)))
					{
						$array	=	array('in_transport_id'=> $tra_id,
										   'prev_from_date'=> $transport_details[0]['dt_pickup_date'],
										   'prev_to_date'  => $transport_details[0]['dt_target'],
										   'new_from_date' => date("Y-m-d", strtotime($pickup_select)),
										   'new_to_date'   => date('Y-m-d',strtotime($dateselect)),
										   'in_modified_by' => $this->session->userdata('userid'),
										   'dt_created'	   => date('Y-m-d H:i:s')
						);					
					 $this->orgtrasnportation_model->insert_transport_date_log($array);
					}
					
					$trans_legs_details = $this->orgtrasnportation_model->get_trans_legs_copy($this->session->userdata('transport_id'));
					
					if(isset($trans_legs_details) && !empty($trans_legs_details))
					{
						$legs = array_values(array_filter($trans_legs_details));
						
						$leg_count = count($legs);            //getting the count of $books						
						
						$leg_date_array = array();
						
						
						for($i=0;$i < $leg_count;$i++)
						{
							if(isset($legs[$i]['pick_start_time']) && $legs[$i]['pick_start_time'] != '')
							{
								$leg_date_array[] = strtotime(date("Y-m-d",strtotime($legs[$i]['pick_start_time'])));
							}
						}
						
						if(count(array_unique($leg_date_array)) == 1)
						{
							for($i=0;$i < $leg_count;$i++)
							{
								$leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
								$leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));
								
								$leg_pickup_date = date("Y-m-d", strtotime($pickup_select));							
								$pickup_leg_date_time  = $leg_pickup_date.' '.$leg_pick_time;
								
								$leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));							
								$dropoff_leg_date_time  = $leg_pickup_date.' '.$leg_drop_time;
								
								//update transport leg date time as selected start date and legs timing
								$pickup_array 	= array("dt_start_time"	=> $pickup_leg_date_time);		
								$this->orgtrasnportation_model->update_leg_info($pickup_array,$legs[$i]['leg_id'],"P");
								
								$dropoff_array 	= array("dt_start_time"	=> $dropoff_leg_date_time);	
								$this->orgtrasnportation_model->update_leg_info($dropoff_array,$legs[$i]['leg_id'],"D");							
							}
							
						}else{
							$pickup_select =  date('Y-m-d',strtotime($pickup_select));
							for($i=0;$i < count($legs);$i++)
							{
								if($i==0)
								{	
									if($legs[0]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[0]['pick_start_time'])));
									}	
								} else {
									if($legs[$i-1]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i-1]['pick_start_time'])));
									}	
								} 	
								$leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
								$leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));
								
								$leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i]['pick_start_time'])));
								//$leg_pickup_date_strtotime = strtotime(date("Y-m-d", strtotime($pickup_select)));
								
								if($previous_leg_pick_date_strtotime != $leg_pick_date_strtotime && $legs[$i]['route_type_id'] != 2 )
								{
									$next_date = date('Y-m-d', strtotime($pickup_select."+1 day"));
									$first_dt       = new DateTime($next_date);
									$last_dt      = new DateTime($dateselect);
									if($last_dt >= $first_dt)
									{
											$pickup_select = $next_date;
									}		
								}
								
								$leg_pickup_date = date("Y-m-d", strtotime($pickup_select));							
								$pickup_leg_date_time  = $leg_pickup_date.' '.$leg_pick_time;
									
								$leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));							
								$dropoff_leg_date_time  = $leg_pickup_date.' '.$leg_drop_time;
								
								/*else
								{
									$leg_pickup_date = date("Y-m-d", strtotime($dateselect));							
									$pickup_leg_date_time  = $leg_pickup_date.' '.$leg_pick_time;
									
									$leg_dropoff_date = date("Y-m-d", strtotime($dateselect));							
									$dropoff_leg_date_time  = $leg_pickup_date.' '.$leg_drop_time;
								}*/
								//update transport leg date time as selected start date and legs timing
								if($legs[$i]['route_type_id'] != 2)
								{
									$pickup_array 	= array("dt_start_time"	=> $pickup_leg_date_time);		
									$this->orgtrasnportation_model->update_leg_info($pickup_array,$legs[$i]['leg_id'],"P");
									
									$dropoff_array 	= array("dt_start_time"	=> $dropoff_leg_date_time);	
									$this->orgtrasnportation_model->update_leg_info($dropoff_array,$legs[$i]['leg_id'],"D");
								}
							}
						}						
					}
					
					if($transport_details['0']['in_status']=='1')
					{
						$user_driver_email = $this->orgtrasnportation_model->get_transport_users_by_permission();
						$partcipant_emails = array();
						$partcipant_emails[] = array("user_email" => $transport_details['0']['st_email'],
							"display_name" => $transport_details['0']['st_display_name']
						);
						
						
						if(isset($user_driver_email) && !empty($user_driver_email))
						{
							foreach($user_driver_email as $driver_data)
							{
								if(isset($driver_data['leg_participant_details']) && !empty($driver_data['leg_participant_details']))
								{
									foreach($driver_data['leg_participant_details'] as $part_val)
									{
										//echo '<pre/>'; print_r($part_val);
										$partcipant_emails[] = array("user_email" => $part_val['user_email'],
																	 "display_name" => $part_val['st_display_name']
																	);
									}						
									
								}
								if(isset($driver_data['non_doobert_leg_participant_details']) && !empty($driver_data['non_doobert_leg_participant_details']))
								{
									foreach($driver_data['non_doobert_leg_participant_details'] as $part_val)
									{
										//echo '<pre/>'; print_r($part_val);
										$partcipant_emails[] = array("user_email" => $part_val['st_email'],
																	 "display_name" => $part_val['st_name']
																	);
									}
								}
							}
						}
						
						$dates['pre_date'] = $pre_date;
						$dates['new_date'] = $new_date;	
						$dates['org_name'] = $transport_details['0']['st_org_name'];
						$dates['st_org_code'] = $transport_details['0']['st_org_code'];
						$dates['st_display_name'] = $transport_details['0']['st_display_name'];
						$dates['st_email'] = $transport_details['0']['st_email'];
						$dates['st_add_comments'] = $transport_details['0']['st_add_comments'];
						
						$notification_message = '<div class="timeline-body border">
						<h2 class="last"><span><img alt="" src="##user_image##"></span>Transport #DBT'.$this->session->userdata('transport_id').' scheduled for '.$dates['pre_date'].' has been changed to '.$dates['new_date'].' by '.$this->session->userdata('user_name').'.</h2>
						<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div>
						</div>';							
						$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
													"in_transportation_id"	=> $this->session->userdata('transport_id'),
													"in_type"				=> 7,
													"in_modified_by"		=> $this->session->userdata('userid'),
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
										  );	
						$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
						
						
						
						$this->trasnport_edit_date_email($partcipant_emails,$dates,$transport_details['0']['st_trans_type']);
					}
					$this->session->set_flashdata('google_leg', 'date updated');
					$this->session->set_userdata('transport_steps',3);
					//redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/"); 
					redirect($this->config->item('base_url')."transport-create-legs/"); //updated on 24Nov2014 - redirect to edit legs page
				}
				else
				{
					$this->session->set_flashdata('google_leg', 'Please select date.');
				}
		}
		if($this->input->post('conf_transport'))
		{
			if($transport_details[0]['in_airline_transport']==1 && $transport_details[0]['st_trans_type']=='D')
			{	
					$this->orgtrasnportation_model->update_transport_dates($this->session->userdata('transport_id'));
					$transport_details 	= $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			}
			//if(count($transport_animals )<=0)
			//if(count($transport_animals )<=0 && ($transport_details[0]['no_of_kitten']=='' || $transport_details[0]['no_of_kitten']=='0'))
			if(count($transport_animals )<=0 && ($transport_details[0]['no_of_kitten']=='' || $transport_details[0]['no_of_kitten']=='0') && $transport_details[0]['st_trans_type']!='RO')		
			{
				$this->session->set_flashdata('google_leg', 'Animals are not available in transportation.');
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
			}
			elseif(strtotime($transport_details[0]['dt_target'])<strtotime(date("Y-m-d")))
			{
				$this->session->set_flashdata('google_leg', 'Current date must be less than or equal to Target date.');
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
			}
			else
			{
				$additional_email_address = array();
				
				if($this->input->post('add_email_address'))
				{
					$additional_email_address = json_decode($this->input->post('add_email_address'));
				}
				
				//echo "<pre>";print_r($this->input->post());die;
				 $status_arr = array("in_status" => "2",
									"in_modified_by" => $this->session->userdata('userid'),
									"dt_modified" => date("Y-m-d H:i:s"),
									"dt_confirm" => date("Y-m-d H:i:s")
									);
				$this->orgtrasnportation_model->update_transport_details($status_arr);
				
				$notification_message = '<div class="timeline-body border">
									<h2 class="last">Transport #DBT'.$this->session->userdata('transport_id').' has been confirmed.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div>
									</div>';							
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_type"				=> 10,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				
				if($transport_details[0]['st_trans_type']!='RO')
				{	
					$user_driver_email = $this->orgtrasnportation_model->get_trans_legs_join_user("null");
				} else {
					$user_order_email  = $this->orgtrasnportation_model->order_userinfo_details($this->session->userdata('transport_id'));
				}	
				/*$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);*/
				$partcipant_emails = array();
				$partcipant_emails[] = array("user_email" => $transport_details['0']['st_email'],
                    "display_name" => $transport_details['0']['st_display_name']
                );
				
				if(count($additional_email_address)>0)
				{
					foreach($additional_email_address as $key=>$add_email)
					{
						if(isset($add_email->user_email) && !empty($add_email->user_email) && isset($add_email->user_name) && !empty($add_email->user_name) ) 
						{
							$partcipant_emails[] = array("user_email" => $add_email->user_email,
													 "display_name" => $add_email->user_name
													);
						}								
					}
				}	
				
				if($transport_details['0']['inSendOrgRunsheet']==1)
				{
					if($transport_details['0']['stSendEmail'] != $transport_details['0']['st_email'])
					{
						$partcipant_emails[] = array("user_email"  => $transport_details['0']['stSendEmail'],
													 "display_name" => $transport_details['0']['stSendNm']
													);
					}	
				}
					
				if($transport_details['0']['inRecOrgRunsheet']==1)
				{
					if($transport_details['0']['stRecEmail'] != $transport_details['0']['st_email'])
					{
						$partcipant_emails[] = array("user_email"  => $transport_details['0']['stRecEmail'],
													"display_name" => $transport_details['0']['stRecNm']
													);
					}	
				}
				
				if(isset($user_driver_email) && !empty($user_driver_email))
				{
					foreach($user_driver_email as $driver_data)
					{
						if(isset($driver_data['leg_participant_details']) && !empty($driver_data['leg_participant_details']))
						{
							foreach($driver_data['leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['user_email'],
															 "display_name" => $part_val['st_display_name']
															);
							}						
							
						}
						if(isset($driver_data['non_doobert_leg_participant_details']) && !empty($driver_data['non_doobert_leg_participant_details']))
						{
							foreach($driver_data['non_doobert_leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['st_email'],
															 "display_name" => $part_val['st_name']
															);
							}
						}
					}
				}
				
				$transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
				if(isset($transport_monitors) && !empty($transport_monitors))
				{
					foreach($transport_monitors as $trans_mon)
					{
						$partcipant_emails[] = array("user_email" => $trans_mon['st_email'],
													 "display_name" => $trans_mon['st_display_name']
													);
					}
				}


					if(isset($user_order_email ) && !empty($user_order_email ))
					{
						foreach($user_order_email  as $driver_data)
						{
							if(isset($driver_data['st_email']) && !empty($driver_data['st_email']))
							{
							
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $driver_data['st_email'],
															 "display_name" => $driver_data['st_first_name'].' '.$driver_data['st_last_name']
															);
													
							
							}
						}
					}	
				
				
				//echo '<pre/>';print_r($partcipant_emails);exit;		
				
				$target_date = @date("l, M d",strtotime(@$transport_details['0']['dt_target']));	
				$dt_pickup_date = @date("l, M d", strtotime(@$transport_details['0']['dt_pickup_date']));	
				$name_arr = array("target_date"	=> $target_date,
								  "dt_pickup_date" => $dt_pickup_date,	
								  "name"		=> $transport_details['0']['st_display_name'],
								  "st_org_name" => $transport_details['0']['st_org_name'],
								  "st_org_code" => $transport_details['0']['st_org_code'],
								  "st_display_name" => $transport_details['0']['st_display_name'],
								  "st_email" => $transport_details['0']['st_email'],
								  "st_from_city" => $transport_details['0']['st_from_city'],
								  "st_from_state" => $transport_details['0']['st_from_state'],
								  "st_from_zip" => $transport_details['0']['st_from_zip'],
								  "st_to_city" => $transport_details['0']['st_to_city'],
								  "st_to_state" => $transport_details['0']['st_to_state'],
								  "st_to_zip" => $transport_details['0']['st_to_zip'],
								  "st_trans_type" => $transport_details['0']['st_trans_type'],
								  "no_of_kitten"  => $transport_details['0']['no_of_kitten'],		
								 );								
				//$this->transport_email($user_driver_email,"6",$name_arr);
				
				if($transport_details[0]['st_trans_type']=='R')
				{
					$email_type = '126';
				} elseif($transport_details[0]['st_trans_type']=='RO')
				{
					$email_type = '130';
				} else {
					$email_type = '6';
				}	
				
				$this->transport_email($partcipant_emails,$email_type,$name_arr);
				$this->session->set_flashdata('google_leg', 'Transportation confirmed successfully.');
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/"); 
				//$this->confirm_transport();
				//redirect($this->config->item('base_url')."org-confirm-transport/");
			}
		}
		if($this->input->post('cancel_trans'))
		{
			
			//echo "<pre>";print_r($this->input->post());die;
			$status_arr = array("in_status" => "3",
								"enable_routing_status" => '0',
								"in_modified_by" => $this->session->userdata('userid'),
								"dt_modified" => date("Y-m-d H:i:s"),
								"dt_canceled" => date("Y-m-d H:i:s")
								);
			$this->orgtrasnportation_model->update_transport_details($status_arr);
			
			//added by ghanshyam on 13Nov2014
			$animal_details = $this->orgtrasnportation_model->get_org_trans_animal($this->session->userdata('org_id'),'');			
			//print_r($animal_details);exit;
			
			if(!empty($animal_details))
			{
				foreach($animal_details as $animal_data)
				{
					$this->orgtrasnportation_model->update_animal_transport_details($animal_data['in_animal_id']);
				}
			}
			
			$notification_message = '<div class="timeline-body border">
					<h2 class="last"><span><img alt="" src="##user_image##"></span>Transport #DBT'.$this->session->userdata('transport_id').' has been cancelled by '.$this->session->userdata('user_name').'.</h2>
					<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div>
					</div>';			
											
			$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
										"in_transportation_id"	=> $this->session->userdata('transport_id'),
										//"st_notification_msg"	=> $notification_message,
										"in_type"				=> 8,
										"in_modified_by"		=> $this->session->userdata('userid'),
										"dt_created"			=> date("Y-m-d H:i:s"),
										"in_deleted"			=> "0"
							  );	
			$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
			
			$user_driver_email = $this->orgtrasnportation_model->get_trans_legs_join_user("null");
			/*$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
										 "display_name" => $transport_details['0']['st_display_name']
										);*/
			$partcipant_emails = array();
			$partcipant_emails[] = array("user_email" => $transport_details['0']['st_email'],
				"display_name" => $transport_details['0']['st_display_name']
			);
			
			if(isset($user_driver_email) && !empty($user_driver_email))
			{
				foreach($user_driver_email as $driver_data)
				{
					if(isset($driver_data['leg_participant_details']) && !empty($driver_data['leg_participant_details']))
						{
							foreach($driver_data['leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['user_email'],
															 "display_name" => $part_val['st_display_name']
															);
							}						
							
						}
						if(isset($driver_data['non_doobert_leg_participant_details']) && !empty($driver_data['non_doobert_leg_participant_details']))
						{
							foreach($driver_data['non_doobert_leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['st_email'],
															 "display_name" => $part_val['st_name']
															);
							}
						}
				}
			}
			
			$transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
			if(isset($transport_monitors) && !empty($transport_monitors))
			{
				foreach($transport_monitors as $trans_mon)
				{
					$partcipant_emails[] = array("user_email" => $trans_mon['st_email'],
												 "display_name" => $trans_mon['st_display_name']
												);
				}
			}							
			//echo '<pre/>';print_r($partcipant_emails);exit;		
				
			$target_date = @date("l, M d",@strtotime(@$transport_details['0']['dt_target']));	
			if($transport_details['0']['dt_pickup_date']!='1969-12-31' && $transport_details['0']['dt_pickup_date']!='0000-00-00' && $transport_details['0']['dt_pickup_date']!='' && isset($transport_details['0']['dt_pickup_date']))
			{	
				$dt_pickup_date = date("l, M d", strtotime($transport_details['0']['dt_pickup_date']));
			} else {
				$dt_pickup_date = '';
			}
			$name_arr = array("target_date"	=> $target_date,
							  "dt_pickup_date"  => $dt_pickup_date,	
							  "name"			=> $transport_details['0']['st_display_name'],
							   "email_address"  => $transport_details['0']['st_email'],
							  "phone_number"    => $transport_details['0']['st_primary_phone'],
							  "text_msg"	    => $this->input->post('cancel_trans_text')?$this->input->post('cancel_trans_text'):'',
							  "st_org_name"     => $transport_details['0']['st_org_name'],
							  "st_org_code" 	=> $transport_details['0']['st_org_code'],
							  "st_display_name" => $transport_details['0']['st_display_name'],
							  "st_email"        => $transport_details['0']['st_email'],	
							 );	
			$this->transport_email($partcipant_emails,"7",$name_arr);
			$this->session->set_flashdata('cancel_trasport', 'cancel_trasport');
			redirect($this->config->item('base_url')."org-cancel-transport/");
		}
		if($this->input->post('feeds'))
		{
			if(!$this->session->userdata('userid'))
			{
				
				$error_msg = "<p>Please <a href=\"".$this->config->item('base_url')."\">login</a> first.</p>";
				$this->session->set_userdata('url_data',$this->agent->referrer()."#tab_2_3");		
			}
			$this->form_validation->set_rules('message', 'Message', 'trim|required');
			if($this->form_validation->run()==FALSE || $error_msg!='')
			{
					$data['Err_Msg'] = validation_errors().$error_msg;
			}
			else
			{
				//echo "<pre>";print_r($transport_doc);print_r($this->input->post());die;
			
				//echo "<pre>";print_r($this->input->post());die;
			#http://crystal9/doobert-v3/user-$this->session->userdata('userid')-chetan-pendgaonkar
				$link_name = $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link = "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				$message_user = $this->common_function->custom_htmlentities($this->input->post('message'));
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a>: '.$message_user.'</h2></div>';							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											//"st_notification_msg"	=> $notification_message,
											"st_notification_msg"	=> $message_user,
											"in_type"				=> 14,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				//Sending email to user
				if($this->input->post('auto_user_email') != '') {
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("26");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
					if(isset($email_details[0]['st_email_body']))
					{
						$templete 	= 	$email_details[0]['st_email_body'];
						$subject	=	$email_details[0]['st_email_subject'];
						$to = $this->input->post('auto_user_email');
						
						$transport_id='#DBT'.$this->session->userdata('transport_id');
						$sendername = $this->session->userdata('user_name');
						$clickhear ='<a href="'.base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id').'/#tab_2_3" target="_blank"> clicking here</a>';
						//$user_message = explode(':',$this->input->post('message'));
						//$patterns = array('%##url##%','%##user_name##%','%##feed_msg##%');
						 
						 $strremove = $this->input->post('user_string');
						$user_message = str_replace(trim($strremove),"", trim($this->input->post('message')));
						 
						 $patterns = array('%##url##%', '%##user_name##%', '%##feed_msg##%','%##sender_name##%','%##transport_id##%','%##click_here##%');

						//$replacements = array(base_url(),$this->input->post('user_name_hidden'),(isset($user_message[1]))?$user_message[1]:$this->input->post('message'));
						//$content = preg_replace($patterns,$replacements,$email_details[0]['st_email_body']);
						
						//$replacements = array(base_url(), $this->input->post('user_name_hidden'),(isset($user_message[1]))? $user_message[1] : $this->input->post('message'),$sendername , $transport_id , $clickhear);
						
						$replacements = array(base_url(), $this->input->post('user_name_hidden'), (isset($user_message)) ? $user_message : '',$sendername , $transport_id , $clickhear);
					
                        $content = preg_replace($patterns, $replacements, $email_details[0]['st_email_body']);
                      	
						$category  =   $email_details[0]['st_category'];
						$user_to_id = $this->common_model->get_user_id_by_email($to);
						
						$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);
		
						$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);
						$content = str_replace("##DONATION##",$donation,$content);
						
						
						// added by sadique
						//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						
						$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}					
						
						$content	=	str_replace("##fbtransportshare##",$fbtransportshare,$content);
						
						$send_email = 0;							
						$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
						if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
						{
							$send_email = 0;										
						}
						
						$email_template_id = $email_details[0]['in_email_id'];
						$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
						if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
						{
							$send_email = 1;
						}	
						
						if($send_email == 0)
						{
							$transport_setting = $this->common_model->user_notification_setting($user_to_id);
							if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
							{
								$send_email = 1;
							}								
						}
						
						if($send_email == '1')
						{
							$this->common_function->send_mail($this->email, $to, 'Transport Feed', $content, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
						}
						
					}
				}
				//End Sending email to user
				
				//code to add facebook post on users wall starts on 28Jan2015
				//if($_SERVER['REMOTE_ADDR']=='120.63.155.201' || $_SERVER['REMOTE_ADDR']=='123.238.36.22')
				//{
					 $fbconfig = array();
					 
					 $this->config->load('facebook');			 
					 $fbconfig['appid' ]  = $this->config->item('appId');
					 $fbconfig['secret']  = $this->config->item('secret');
					 $fbconfig['baseurl'] =  $this->config->item('baseurl');
					 
					 $this->load->library('facebook');	
					 $facebook = new Facebook(array(
						'appId' => $fbconfig['appid'],
						'secret' => $fbconfig['secret'],
						'cookie' => true,
						));
					
					$user = $facebook->getUser();
					//print_r($user);exit;
					
					//$userInfo           = $facebook->api("/$user");
					//print_r($userInfo);//exit;
					
					if($user)
					{
						try{
							$publishStream = $facebook->api("/$user/feed", 'post', array(
								'scrape'  =>'true',
								'message' => $message_user,
								'link'    => 'https://app.doobert.com',
								'picture' => base_url().'assets/img/doobert-fb-logo.png',
								'name'    => 'Doobert',
								'description'=> 'animal rescue made simple.'
								)
							);
						} catch (FacebookApiException $e) {
							print_r($d);
						}
					}
				//}
				//code to add facebook post on users wall ends
					
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);

				$feed_msg = explode(':',$this->input->post('message'));
				if(isset($feed_msg) && isset($feed_msg[1]) && $feed_msg[1] != '')
				{
					//$this->input->post('user_email')
					$user_to_id = $this->common_model->get_user_id_by_email($this->input->post('auto_user_email'));
					if(isset($user_to_id) && $user_to_id > 0)
					{
						$data['user_feed_data'] = array('in_user_from_id'	=>	$this->session->userdata('userid'),
														'in_user_to_id'	=>	$user_to_id,
														'st_feed_msg'	=>	trim($feed_msg[1]),
														'dt_created'	=>	date('Y-m-d H:i:s'),
														'in_deleted'	=>	0,
														);
						
						$this->common_model->add_user_feed($data['user_feed_data']);
					}
				}
			$this->session->set_userdata('communication_feed',1);
            $this->session->set_flashdata('google_leg', 'Transportation feed updated successfully.');            
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
			}
		}
		
		//code added by ghanshyam on 20Nov2014 for change vehicle for a leg
		if($this->input->post('update_vehicle_action'))
		{
			//echo "<pre>";print_r($this->input->post());die; //use for testing
			if($this->input->post("current_leg_id")>0 && $this->input->post("select_vehicle") > 0)
			{
				$array_update = array("in_vehicle_id"=>$this->input->post("select_vehicle"),"dt_modified"=> date("Y-m-d H:i:s"));
				$current_leg_id = $this->input->post("current_leg_id");
				$open_tab = $this->input->post("open_tab");
				//$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->orgtrasnportation_model->update_leg_vehicle_detail($array_update,$current_leg_id,$this->session->userdata('userid'),$this->session->userdata('transport_id'));
				
				$this->session->set_flashdata('change_vehicle_success', 'Vehicle has been changed successfully.');
				
				if(isset($open_tab) && ($open_tab == 1)){
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");
				}else{
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
				}
			}
		}
		
		//code added by ghanshyam on 20Dec2015 for change plane for a leg
		if($this->input->post('update_plane_action'))
		{
			//echo "<pre>";print_r($this->input->post());die; //use for testing
			if($this->input->post("current_pilot_leg_id")>0 && $this->input->post("select_plane") > 0)
			{
				$array_update = array("in_plane_id"=>$this->input->post("select_plane"),"dt_modified"=> date("Y-m-d H:i:s"));
				$current_leg_id = $this->input->post("current_pilot_leg_id");
				$open_tab = $this->input->post("open_tab");
				//$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->orgtrasnportation_model->update_leg_plane_detail($array_update,$current_leg_id,$this->session->userdata('userid'),$this->session->userdata('transport_id'));
				
				$this->session->set_flashdata('change_plane_success', 'Plane has been changed successfully.');
				
				if(isset($open_tab) && ($open_tab == 1)){
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");
				}else{
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
				}
			}
		}
		
		
		//code added by ghanshyam on 10Dec2014 for updating meeting details
		if($this->input->post('edit_meeting_location_action'))
		{
			//echo "<pre>";print_r($this->input->post());die; //use for testing
			if($this->input->post("txt_edit_leg_id") > 0)
			{
				$array_update = array("st_meeting_location"=> $this->input->post("txt_edit_meeting_location"),
									   "st_to_meeting_location" => ($this->input->post('txt_editto_meeting_location'))?$this->input->post('txt_editto_meeting_location'):'',	
									  "in_modified_by"	=> $this->session->userdata('userid'),
									  "dt_modified"=> date("Y-m-d H:i:s"));
				$current_leg_id = $this->input->post("txt_edit_leg_id");
				$open_tab_info = $this->input->post("open_tab_info");
				//$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->session->set_flashdata('google_leg', 'Meeting location has been updated successfully.');
				
				if(isset($open_tab_info) && ($open_tab_info == 1)){
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");
				}else{
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
				}
			}
		}
		
		//code added by ghanshyam on 10Dec2014 for updating meeting details
		if($this->input->post('edit_comments_action'))
		{
			//echo "<pre>";print_r($this->input->post());die; //use for testing
			if($this->input->post("txt_edit_comments_leg_id") > 0)
			{
				$array_update = array("st_meeting_location"=> $this->input->post("txt_edit_comments"),
									  "in_modified_by"	=> $this->session->userdata('userid'),
									  "dt_modified"=> date("Y-m-d H:i:s"));
				$current_leg_id = $this->input->post("txt_edit_comments_leg_id");
				$open_tab_info = $this->input->post("open_tab_comments_info");
				//$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->session->set_flashdata('change_meeting_location_success', 'Comments has been updated successfully.');
				
				if(isset($open_tab_info) && ($open_tab_info == 1)){
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");
				}else{
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
				}
			}
		}
		
		//code added by ghanshyam on 26Jul2016 for updating transport status
        if ($this->input->post('transport_confirm_action')) {
            //echo "<pre>";print_r($this->intdiv(dividend, divisor)put->post());die; //use for testing
            if ($this->input->post("transport_confirm_box_tid") > 0) {
               
				$trans_update_arr = array(	"in_status" => "2",
											"in_modified_by" => $this->session->userdata('userid'),
											"dt_modified" => date("Y-m-d H:i:s"),
											"dt_confirm" => date("Y-m-d H:i:s")
										);
            	$this->orgtrasnportation_model->update_transport_details($trans_update_arr);
				
                $this->session->set_flashdata('success', 'success');
                redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
                 // $this->confirm_transport();
              //redirect($this->config->item('base_url') . "org-confirm-transport/");
            }
        }
		
		if($this->input->post('action'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			
			if(!$this->session->userdata('userid'))
			{ 
				$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
				$this->session->set_userdata('url_data',$url);
				$this->session->set_userdata('join_transport_leg',$this->input->post('cancel_leg_id'));
				$leg_type =  $this->orgtrasnportation_model->get_leg_type_by_id($this->input->post('cancel_leg_id'));
				$route_type = (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '')?$leg_type[0]['in_route_type']:''; 
				$this->session->set_userdata('join_route_type',$route_type);
				redirect($this->config->item('base_url').'cms/signup_user_leg');
				//redirect($this->config->item('base_url'));
			}
			
			if($this->input->post('action')=='join_leg')
			{
				$legs_ids=$this->input->post('cancel_leg_id');
				
				//code to get current user vehicle details
				$this->load->model('user_model');
				$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid')); 
				
				$data['arrPlane']			= $this->user_model->get_plane_detail($this->session->userdata('userid')); 
				
				if($this->input->post('phone_number')&& $this->input->post('phone_number')!= '')
				{
					  $profile_info = array('st_primary_phone'=>$this->input->post('phone_number'));
					  $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');

					   $userarr = array(
							'in_number_verified' => 1,
							'st_primary_phone' => $this->input->post('phone_number'),
							'dt_modified' =>date('Y-m-d H:i:s')
							);
					
						$result = $this->user_model->update_user_profile($userarr, $this->session->userdata('userid'));
				}
				
				if($this->input->post('accepted_term_condition')==1)
				{
					$term_condition = array('in_user_id'=>$this->session->userdata('userid'),
											'in_organization_id'=>$this->session->userdata('org_id'),
											'dt_created' => date('Y:m:d H:i:s'),
											'dt_modified'=> date('Y:m:d H:i:s'),
											'in_deleted'=>0,
											);
					$this->db->insert('tbl_users_accept_condition',$term_condition);
				}	
				
				$total_participants = 0;
				$leg_required_user_cnt = $this->orgtrasnportation_model->get_leg_required_user_count_by_id($legs_ids);				
				
				$leg_current_participant_cnt = $this->orgtrasnportation_model->get_legs_participants_by_user_id($legs_ids,'',$this->input->post('photography_leg'));
				
				if(isset($leg_current_participant_cnt) && $leg_current_participant_cnt > 0)
				{
					$total_participants = $total_participants + $leg_current_participant_cnt;
				}
				
				$leg_non_doobert_participant_cnt = $this->orgtrasnportation_model->get_non_doobert_legs_participants_details_by_leg_id($legs_ids);
				
				if(isset($leg_non_doobert_participant_cnt) && !empty($leg_non_doobert_participant_cnt))
				{
					$total_participants = $total_participants + count($leg_non_doobert_participant_cnt);
				}
				
				if(isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] == 0 && $total_participants == 1)
				{
					 $this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
					 redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
				}
				
				if(isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] > 1)
				{
					if($total_participants == $leg_required_user_cnt['in_user_num'])
					{
					 $this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
					 redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
					}
				}
				
				$leg_type =  $this->orgtrasnportation_model->get_leg_type_by_id($legs_ids);
				
				if(!empty($leg_type) && $this->input->post('photography_leg')=='0')
				{
					//print_r($leg_type[0]['in_route_type']);
					if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0)
					{						
						//code to update vehicle id in leg details 
						if(!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id']))
						{
						//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
						//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
						$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
											   "in_user_id"					=> $this->session->userdata('userid'),
											   "in_vehicle_id"				=> $data['arrVehicle'][0]['in_vehicle_id'],
											   "in_transportation_leg_id"	=> $legs_ids,
											   "dt_created"					=> date("Y-m-d H:i:s"),
											   "in_deleted"					=> 0
											);
						$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
						
						}
					}
					
					//print_r($leg_type[0]['in_route_type']);
					if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 1)
					{						
						//code to update vehicle id in leg details 
						if(!empty($data['arrPlane'][0]) && isset($data['arrPlane'][0]['in_pilot_id']))
						{
						//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
						//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
						$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
											   "in_user_id"					=> $this->session->userdata('userid'),
											   "in_plane_id"				=> $data['arrPlane'][0]['in_pilot_id'],
											   "in_transportation_leg_id"	=> $legs_ids,
											   "dt_created"					=> date("Y-m-d H:i:s"),
											   "in_deleted"					=> 0
											);
						$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
						
						}
					}
				}
				
				//leg detail updated 
				//die;
				
				$user_driver_email = array();
				$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
											 "user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);	
				//$parrt_cep = $this->orgtrasnportation_model->get_legs_participants($legs_ids,"join");						
				$parrt_cep = $this->orgtrasnportation_model->get_legs_participants($legs_ids,"",$this->input->post('photography_leg')); // updated by ghanshyam on 08Dec2014
				//echo "<pre>";print_r($parrt_cep);die;
			if($parrt_cep<=0)
			{							
					$join_data = array("in_transportation_id"		=> $this->session->userdata('transport_id'),
									   "in_user_id"					=> $this->session->userdata('userid'),
									   "in_transportation_leg_id"	=> $legs_ids,
									   "in_created_by"				=> $this->session->userdata('userid'),
									   "dt_created"					=> date("Y-m-d H:i:s"),
									   "in_deleted"					=> 0,
									   "in_photography_profile"		=> $this->input->post('photography_leg')?$this->input->post('photography_leg'):'0',
									);
					$this->orgtrasnportation_model->join_legs($join_data);		
					//echo "<pre>";print_r($join_data);
					$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
					if(!empty($user_legs))
					{
							//$origin 		= "USA, ".$user_legs['pick_zip'];
							//$destinations 	= "USA, ".$user_legs['drop_zip'];
							  $origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
							
							$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
						//echo "<pre>";print_r($route_details);die;
							if(count($route_details)<=0)
							{
								if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
								{
									$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
								}
								else
								{
									$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].", ":"").($user_legs['pick_city']? $user_legs['pick_city'].", ":"").($user_legs['pick_state'] ? $user_legs['pick_state'].", ":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
								}
								if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
								{
									$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
								}
								else
								{
									$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
								}
							//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
							$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
							$total_miles  	= $total_miles['distance'];	
							//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
							}
							else
							{
								$total_miles	= $route_details['fl_distance'];
							}
							$this->orgtrasnportation_model->add_distance($total_miles);
							if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
							{
								$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
								$percent = ($percent>=100)?100:$percent;
							}
							else
							{
								$percent = 0;
							}
							if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
							{
							$target_date = @date("l, M d",strtotime(@$user_legs['pick_start_time']));
							} else {
								$target_date = '';
							}	
							$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
							$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
							$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
							$cover_leg = 0;
							$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

							$name_arr = array("target_date"		=> $target_date,
											  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
											  "transport_id" 	=> $this->session->userdata('transport_id'),
											  "percent" 		=> $percent,
											  "leg_origin" =>   $origin1,
											  "leg_destination" =>$destinations1,
												"total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
												"cover_leg" => $cover_leg,
												"st_org_name" => $transport_details['0']['st_org_name'],
												"st_org_code" => $transport_details['0']['st_org_code'],
												"st_display_name" => $transport_details['0']['st_display_name'],
												"st_email"    => $transport_details['0']['st_email'],
												"st_add_comments" => $transport_details['0']['st_add_comments'],
												"co_user_id" => $transport_details['0']['in_user_id'],
												"in_organization_id" => $transport_details['0']['in_organization_id'],
									 );				 					
							$this->join_transport_email($user_driver_email,"16",$name_arr);
					
					}
					
				
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";	
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> joined the leg of transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"=>$legs_ids,
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 12,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );	
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					// Added By Nirav 26-May-2016
					if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
					{	
						$transport_id = $transport_details[0]['in_transportation_id'];
						$owner_name = $transport_details[0]['st_display_name'];	
						$user_name = explode(" ",$transport_details[0]['st_display_name']);
						$email_address = $transport_details[0]['st_email'];
						$user_id         = $transport_details[0]['in_user_id'];
						$this->load->library('email');
						$email_details = $this->common_model->get_email_containt("58");
						$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
						if (isset($email_details[0]['st_email_body'])) {
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
							$templete = $email_details[0]['st_email_body'];
							$templete = str_replace("##user_name##",$this->session->userdata('user_name')." ".$this->session->userdata('last_name')  , $templete);
							$templete = str_replace("##tc_email##", $email_address , $templete);
							$templete = str_replace("##tc_name##", $owner_name, $templete);
							$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);				
							
				// added by sadique								
				$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));

				//print_r($org_details); die;
				$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
				if($share_template == 1)
				{
					$main_image = $this->generate_fb_image_option1();
				} 						
				
				
				else if($share_template == 5){						
					$main_image = $this->generate_fb_image_option5();						
				}
				else if($share_template == 6){						
					$main_image = $this->generate_fb_image_option6();						
				}
				else if($share_template == 7){						
					$main_image = $this->generate_fb_image_option7();						
				}
				else if($share_template == 8){						
					$main_image = $this->generate_fb_image_option8();						
				}				
				
				else {
					$main_image = $this->generate_fb_image($share_template);
				}	
				$resuce_template = '';
				$resuce_store = $this->common_model->get_resuce_store();
				if(count($resuce_store)>0)
				{	
									$resuce_template = $this->common_model->resuce_store_template($resuce_store);
				}

				//$fbtransportshare = base_url().'upload/fb_transport_share/'.$main_image;
				$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
								if(file_exists($this->config->item('upload').'fb_transport_share/'.$main_image))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}	
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
							
							
							$leg_date_time = '';
							if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && ($leg_type[0]['in_route_type'] == 0 || $leg_type[0]['in_route_type'] == 1)) 
							{
								if(!empty($user_legs) && isset($user_legs['pick_start_time']) && $user_legs['pick_start_time'] != '')
								{
									$leg_start_date = date("l F d,Y", strtotime($user_legs['pick_start_time']));
									$leg_start_time = date("h:iA", strtotime($user_legs['pick_start_time']));

									$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
									if(isset($user_legs['pick_timezone']) && $user_legs['pick_timezone'] != '')	
									{
										$leg_date_time .= ' '.$user_legs['pick_timezone'].'.';
									}
								}
							}								
							
							$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);
							$templete =	str_replace("##DONATION##",$donation, $templete);

							$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
							$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
							$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);		
							$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);	
							$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
								
							$templete = str_replace('##resuce_store_block##',$resuce_template,$templete);
							if(isset($user_legs['leg_instruction']) && !empty($user_legs['leg_instruction']))
							{
								$leg_instruction_template = '<li style="padding-bottom:10px">'.$user_legs['leg_instruction'].'</li>';
							} else {
								$leg_instruction_template = '';
							}

							$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);	
							
							$additional_info_str = ''; 				
							$transport_files = $this->orgtrasnportation_model->get_transport_files($transport_id);
							
							if((isset($transport_details[0]['st_add_comments']) && $transport_details[0]['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
							{
							$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
							
							$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details[0]['st_add_comments'].'</p>';
							
							if(isset($transport_files) && !empty($transport_files))
							{
							$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
							foreach($transport_files as $key=>$value)
							{
								$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
							}
							$additional_info_str .='</ul>';
							}
							}
							
							$templete = str_replace("##additional_details##", $additional_info_str, $templete);
							
							$strMail = $templete;
							//$to = 'rupesh@pulsesolutions.net';
							$to = $this->session->userdata('email');
							$subject = $email_details[0]['st_email_subject'];
							$category = "DBT".$transport_id." - ".$email_details[0]['st_category'];
							$message = $strMail;
							$reply_to = $transport_details[0]['st_email'];
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
	
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
							
							$send_email = 0;							
							$sub_data = $this->common_model->check_user_unsub_emails($this->session->userdata('userid'));
							if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
							{
								$send_email = 0;										
							}
							
							$email_template_id = $email_details[0]['in_email_id'];
							$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
							if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
							{
								$send_email = 1;
							}	
							
							if($send_email == 0)
							{
								$transport_setting = $this->common_model->user_notification_setting($this->session->userdata('userid'));
								if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
								{
									$send_email = 1;
								}								
							}
							
							if($send_email == '1')
							{
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
							}
						}
					}

						if($transport_details[0]['in_sms_notification']=='1')
						{
							$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
							$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
							$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
							$user_name  = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
							if($transport_details[0]['st_trans_type']=='D')
							{
								$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
								$to = 	$rou_tc_user[0]['st_primary_phone'];
								$postal_code = '';
								$country_type = trim($rou_tc_user[0]['st_country']);
								if($country_type=='USA' || $country_type=='US')
								{
									$postal_code = '+1';
								} else if($country_type=='CANADA' || $country_type=='CA')
								{
									$postal_code = '+1';
								} else if($country_type=='INDIA' || $country_type=='IN')
								{
									$postal_code = '+91';
								} 	 
		
								if($postal_code == '')
								{
									$user_country = $this->common_model->getaddress($rou_tc_user[0]['st_zip']);
									$country_code = trim($user_country['st_country']);
									if($country_code =='CA' || $country_code=='US')
									{
										$postal_code = '+1';
									} else if($country_code =='IN')
									{
										$postal_code = '+91';
									}		
								}
							} else {
								$to = 	$transport_details[0]['st_primary_phone'];
								$country_type = trim($transport_details[0]['st_country']);
								if($country_type=='USA' || $country_type=='US')
								{
									$postal_code = '+1';
								} else if($country_type=='CANADA' || $country_type=='CA')
								{
									$postal_code = '+1';
								} else if($country_type=='INDIA' || $country_type=='IN')
								{
									$postal_code = '+91';
								} 	 
		
								if($postal_code == '')
								{
									$user_country = $this->common_model->getaddress($transport_details[0]['st_zip']);
									$country_code = trim($user_country['st_country']);
									if($country_code =='CA' || $country_code=='US')
									{
										$postal_code = '+1';
									} else if($country_code =='IN')
									{
										$postal_code = '+91';
									}		
								}
							}
							
							if($to!='' && $postal_code!='')
							{	
								$text = "We wanted to let you know that ".$user_name." has joined Transport ".$transport_details[0]['in_transportation_id']." Click here to view user info:  http://dev.doobert.com/ut/".$this->session->userdata('userid');
								$this->orgtrasnportation_model->sendtext($text,$to,$postal_code);
							}	
						}
					
					$email_type = "9"; 
					$email_type_detail = "DBT".$transport_id." - ".$email_details[0]['st_category'];
					$user_detail_array[0] = array("user_id"=>$this->session->userdata('userid'),"name"=>$this->session->userdata('user_name')." ".$this->session->userdata('last_name')
		,"email_address"=>$this->session->userdata('email'));
					
					$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
										"in_email_type"=>$email_type,
										"st_email_type"=>$email_type_detail,
										"dt_created"=>date("Y-m-d H:i:s"),
										"st_user_details"=>serialize($user_detail_array));
				
					$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);	
					$this->orgtrasnportation_model->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$this->session->userdata('userid'));
					$this->session->set_flashdata('joined_leg_msg',"Awesome!  You're signed up for the leg.  Please contact the TC if you have questions in the meantime.");
			}
				else
				{
					$this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
				}
			}
			if($this->input->post('action')=='leave')
			{			
					//echo "<pre>";print_r($this->input->post());die;
					$legs_ids = $this->orgtrasnportation_model->get_all_legs();
					//echo "<pre>";print_r($legs_ids);die;
					//die;
					//$legs_ids=$this->input->post('legs_id');
					$user_driver_email = array();
					$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
												 "user_email"	=> $transport_details['0']['st_email'],
												 "display_name" => $transport_details['0']['st_display_name']
												);
					for($a=0;$a<count($legs_ids);$a++)
					{	
						$this->orgtrasnportation_model->leave_legs($legs_ids[$a]['in_transportation_leg_id']);	
												
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids[$a]['in_transportation_leg_id']);	
						if(!empty($user_legs))
						{
								/*$origin 		= "USA, ".$user_legs['pick_zip'];
								$destinations 	= "USA, ".$user_legs['drop_zip'];
								$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
								
								$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids[$a]['in_transportation_leg_id']);
							//echo "<pre>";print_r($route_details);die;
								if(count($route_details)<=0)
								{									
									if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].", ":"").($user_legs['pick_city']? $user_legs['pick_city'].", ":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].", ":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].", ":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	= $total_miles['distance'];	
								//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
								}
								else
								{
									$total_miles	= $route_details['fl_distance'];
								}
								$this->orgtrasnportation_model->update_distance($total_miles);
									
								if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
								{
									$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
									$percent = ($percent>=100)?100:$percent;
								}
								else
								{
									$percent = 0;
								}
								if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
								{
									$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));
								} else {
									$target_date = '';
								}		
								$name_arr = array("target_date"		=> $target_date,
												  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
												  "transport_id" 	=> $this->session->userdata('transport_id'),
												  "percent" 		=> $percent,
												  "st_org_code" => $transport_details['0']['st_org_code'],
												  "co_user_id" => $transport_details['0']['in_user_id'],
										 );				 					
								$this->join_transport_email($user_driver_email,"17",$name_arr);
						
						}
						if($legs_ids[$a]['in_transportation_leg_id']>0 && $transport_details['0']['st_trans_type']=='D')
						{
							$this->orgtrasnportation_model->delete_legs_transport($legs_ids[$a]['in_transportation_leg_id']);		
						}
						
					}
					
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left the transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';							
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"=>$legs_ids,
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 11,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					/*$email_type = "10"; 
					$email_type_detail = "Left Leg From Transport Notification To User";
					$user_detail_array[0] = array("user_id"=>$this->session->userdata('userid'),"name"=>$this->session->userdata('user_name')." ".$this->session->userdata('last_name')
		,"email_address"=>$this->session->userdata('email'));
					
					$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
										"in_email_type"=>$email_type,
										"st_email_type"=>$email_type_detail,
										"dt_created"=>date("Y-m-d H:i:s"),
										"st_user_details"=>serialize($user_detail_array));
				
					$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);	*/
					
					$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
				
			}
			if($this->input->post('action')=='cancel')
			{
				$legs_ids=$this->input->post('cancel_leg_id');
				if($transport_details['0']['st_trans_type']=="D" && $transport_details['0']['in_airline_transport']=="1")
				{
					$this->cancel_legs($legs_ids);
				}			
				else
				{
					$user_driver_email = array();
					$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
												 "user_email"	=> $transport_details['0']['st_email'],
												 "display_name" => $transport_details['0']['st_display_name']
												);
					if($legs_ids>0 && $legs_ids!='')
					{	
						$this->orgtrasnportation_model->leave_legs($legs_ids,$this->input->post('photography_leg'));		
						
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
						if(!empty($user_legs))
						{
								/*$origin 		= "USA, ".$user_legs['pick_zip'];
								$destinations 	= "USA, ".$user_legs['drop_zip'];
								$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
								  $origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
								
								$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
							//echo "<pre>";print_r($route_details);die;
								if(count($route_details)<=0)
								{
									if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city']." ,":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip']." ,":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	= $total_miles['distance'];	
								//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
								}
								else
								{
									$total_miles	= $route_details['fl_distance'];
								}
								$this->orgtrasnportation_model->update_distance($total_miles);
								
								if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
								{
									$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
									$percent = ($percent>=100)?100:$percent;
								}
								else
								{
									$percent = 0;
								}
								
								//$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));	
								if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
								{
									$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));
								} else {
									$target_date = '';
								}
								$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
									$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
									$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
									$cover_leg = 0;
									$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

								$name_arr = array("target_date"		=> $target_date,
												  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
												  "transport_id" 	=> $this->session->userdata('transport_id'),
												  "percent" 		=> $percent,
												  "leg_origin"      => $origin1,
												  "leg_destination" => $destinations1,
												  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
												  "cover_leg" => $cover_leg,
												  "st_org_name" => $transport_details['0']['st_org_name'],
												  "st_org_code" => $transport_details['0']['st_org_code'],
												  "st_display_name" => $transport_details['0']['st_display_name'],
												  "st_email" => $transport_details['0']['st_email'],
												  "st_add_comments" => $transport_details['0']['st_add_comments'],
												  "co_user_id" => $transport_details['0']['in_user_id'],
										 );				 					
								$this->join_transport_email($user_driver_email,"17",$name_arr);
						
						}
						
					}
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left leg from transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';							
					/*$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"st_notification_msg"	=> $notification_message,
												"in_type"				=> '0',
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );*/
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   =>  $legs_ids, //added By Amit
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 13,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );	
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					/*$email_type = "10"; 
					$email_type_detail = "Left Leg From Transport Notification To User";
					$user_detail_array[0] = array("user_id"=>$this->session->userdata('userid'),"name"=>$this->session->userdata('user_name')." ".$this->session->userdata('last_name')
		,"email_address"=>$this->session->userdata('email'));
					
					$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
										"in_email_type"=>$email_type,
										"st_email_type"=>$email_type_detail,
										"dt_created"=>date("Y-m-d H:i:s"),
										"st_user_details"=>serialize($user_detail_array));
				
					$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);	
					*/
					$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
				}
			}
			if($this->input->post('action')=='remove_vol')
			{
				//echo "<pre>";print_r($this->input->post());die;
				$legs_ids = $this->input->post('cancel_leg_id');
				$remove_user_id = $this->input->post('remove_user_id');
				
				$remove_user_details = $this->orgtrasnportation_model->get_leg_participant_detail_by_leg_id_user_id($legs_ids,$remove_user_id);
				//echo "<pre>";print_r($remove_user_details);die;
				$removed_user_email = $remove_user_details['user_email'];
				
				if($transport_details['0']['st_trans_type']=="D" && $transport_details['0']['in_airline_transport']=="1")
				{
					//$this->cancel_legs($legs_ids);
					$leg_id = $legs_ids;
					//echo $leg_id;exit;
					$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);
					$order_id = $user_legs['sort_order'];
					$this->orgtrasnportation_model->delete_user_leg_by_user_id($leg_id,$remove_user_id);	
					//echo "<pre>";print_r($user_legs);die;
					if(!empty($user_legs))
					{
							if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
								{
									$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
								}
								else
								{
									$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
								}
								if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
								{
									$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
								}
								else
								{
									$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
								}
							//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
							$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
							$total_miles  	= $total_miles['distance'];	
							$this->orgtrasnportation_model->update_distance($total_miles);
							$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
							$percent = ($percent>=100)?100:$percent;
							$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));	
							$name_arr = array("target_date"		=> $target_date,
											  "coordinator_name"  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),
											  "removed_user_name" => $remove_user_details['st_display_name'],	
											  "transport_id" 	=> $this->session->userdata('transport_id'),
											  "percent" 		=> $percent,
											  "st_org_name" => $transport_details['0']['st_org_name'],
											  "st_org_code" => $transport_details['0']['st_org_code'],
											  "st_display_name" => $transport_details['0']['st_display_name'],
											  "st_email" => $transport_details['0']['st_email'],
											  "st_add_comments" => $transport_details['0']['st_add_comments'],
										 );				 					
							$this->remove_from_transport_email($removed_user_email,"33",$name_arr);
					
					}
					
					$link_name 	= $this->common_function->get_filtered_name($remove_user_details['st_display_name']);
					$url_link 	= "##base_url##user-".$remove_user_id."-".$link_name."/";
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   => $legs_ids,
												"in_user_id"			=> $remove_user_id,
												"in_type"				=> 22,
												"in_modified_by"		=> $remove_user_id,
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					
					//User Notify
					$notification_last_id = $this->db->insert_id();
					
					$this->orgtrasnportation_model->leave_legs_by_user_id($legs_ids,$remove_user_id);
					
					$this->orgtrasnportation_model->update_order_legs($order_id,$this->session->userdata('transport_id'));
					
					$this->session->set_flashdata('google_leg', 'Volunteer has been removed from transport successfully.');
					
				}			
				else
				{
					if($legs_ids > 0 && $legs_ids != '')
					{	
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);
						if(!empty($user_legs))
						{
								$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
								if(count($route_details)<=0)
								{
									if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].", ":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	= $total_miles['distance'];	
								}
								else
								{
									$total_miles	= $route_details['fl_distance'];
								}
								$this->orgtrasnportation_model->update_distance($total_miles);
								
								$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
								$percent = ($percent>=100)?100:$percent;
								$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));	
								$name_arr = array("target_date"		=> $target_date,
												  "coordinator_name"  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),
												  "removed_user_name" => $remove_user_details['st_display_name'],	
												  "transport_id" 	=> $this->session->userdata('transport_id'),
												  "percent" 		=> $percent,
												  "st_org_name" => $transport_details['0']['st_org_name'],
												  "st_org_code" => $transport_details['0']['st_org_code'],
												  "st_display_name" => $transport_details['0']['st_display_name'],
												  "st_email" => $transport_details['0']['st_email'],
												  "st_add_comments" => $transport_details['0']['st_add_comments'],
										 );				 					
								$this->remove_from_transport_email($removed_user_email,"33",$name_arr);
								
							
						}
						
						if($legs_ids > 0 && $transport_details['0']['st_trans_type']=='D' && $transport_details['0']['in_airline_transport']=="1")
						{
							$this->orgtrasnportation_model->delete_legs_transport($legs_ids);		
						}
						
					}
					
					$link_name 	= $this->common_function->get_filtered_name($remove_user_details['st_display_name']);
					$url_link 	= "##base_url##user-".$remove_user_id."-".$link_name."/";
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   => $legs_ids,
												"in_user_id"			=> $remove_user_id,
												"in_type"				=> 22,
												"in_modified_by"		=> $remove_user_id,
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					
					//User Notify
					$notification_last_id = $this->db->insert_id();
					
					$this->orgtrasnportation_model->leave_legs_by_user_id($legs_ids,$remove_user_id,$this->input->post('photography_leg'));
					
					$this->session->set_flashdata('google_leg', 'Volunteer has been removed from transport successfully.');
				}
			}	
			
			if($this->input->post('action')=='remove_transport_monitor')
			{
				//echo "<pre>";print_r($this->input->post());die;
				$remove_monitor_id = $this->input->post('remove_monitor_id');
				$remove_user_id = $this->input->post('remove_user_id');
				
				$remove_user_details = $this->orgtrasnportation_model->get_participant_detail($remove_monitor_id,$remove_user_id);
				
				$this->orgtrasnportation_model->update_transport_monitor_status(array("in_deleted"=>1),$remove_monitor_id);
				
				$link_name 	= $this->common_function->get_filtered_name($remove_user_details['st_display_name']);
				$url_link 	= "##base_url##user-".$remove_user_id."-".$link_name."/";
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_user_id"			=> $remove_user_id,
											"in_type"				=> 24, //remove transport monitor
											"in_modified_by"		=> $remove_user_id,
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				//User Notify
				$notification_last_id = $this->db->insert_id();
					
				$this->session->set_flashdata('transport_monitor', 'User has been removed from transport monitor.');
				
			}	
					
			if($this->input->post('action')=='join')
			{
				//echo "<pre>";print_r($this->input->post());die;
				$join_data = array("in_transportation_id"		=> $this->session->userdata('transport_id'),
								   "in_user_id"					=> $this->session->userdata('userid'),
								   "in_transportation_leg_id"	=> "0",
								   "in_created_by"				=> $this->session->userdata('userid'),
								   "dt_created"					=> date("Y-m-d H:i:s"),
								   "in_deleted"					=> 0
								);
				$this->orgtrasnportation_model->join_legs($join_data);	
				
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";	
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> joined the transportation.</h2>
								<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div></div>';
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_transport_leg_id"=>$legs_ids,
											'in_user_id'			=> $this->session->userdata('userid'),
											"in_type"				=> 9,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				$this->session->set_flashdata('google_leg', 'You have joined transportation(s) successfully.');
			}
			
			if($this->input->post('action')=='join_as_monitor')
			{
				//echo "<pre>";print_r($this->input->post());die;
				
				if(isset($transport_monitors) && count($transport_monitors) < 2)
				{
				$join_data = array("in_transportation_id"		=> $this->session->userdata('transport_id'),
								   "in_user_id"					=> $this->session->userdata('userid'),
								   "in_monitor" 				=> "1",
								   "in_created_by"				=> $this->session->userdata('userid'),
								   "dt_created"					=> date("Y-m-d H:i:s"),
								   "in_deleted"					=> 0
								);
				$this->orgtrasnportation_model->join_legs($join_data);
				
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";	
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> signed up as a transport monitor.</h2>
								<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div></div>';
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											'in_user_id'			=> $this->session->userdata('userid'),
											"in_type"				=> 23, //23 for signing up as a transport monitor
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				$this->session->set_flashdata('transport_monitor', 'You have successfully signed up as a transport monitor.');
				}
				else{
				$this->session->set_flashdata('transport_monitor_info', 'A Transportation can not have more than 2 monitors.');	
				}
				
			}
			
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
		if($this->input->post('leg_points'))
		{
			//echo "<pre>";print_r($this->input->post()); exit;
			//$complete_data 		= $this->input->post();
			//echo "<pre>";print_r(date('Y-m-d H:i:s', strtotime(str_replace(" - "," ",$complete_data['clockface_2_modal']))));die;
			
				$this->load->model('user_model');
				if($this->input->post('telephone'))
				{
					  $profile_info = array('st_primary_phone'=>$this->input->post('telephone'));
					  $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
				}	
				
				if($this->input->post('accepted_term_condition')==1)
				{
					$term_condition = array('in_user_id'=>$this->session->userdata('userid'),
											'in_organization_id'=>$this->session->userdata('org_id'),
											'dt_created' => date('Y:m:d H:i:s'),
											'dt_modified'=> date('Y:m:d H:i:s'),
											'in_deleted'=>0,
											);
					$this->db->insert('tbl_users_accept_condition',$term_condition);
				}
				
			$origin_address = $this->input->post('origin_address');
            $destination_address = $this->input->post('destination_address');
			 
			if($this->input->post('routing_details'))
			{
				$routing_data = $this->input->post('routing_details');
			} else {
				$routing_data = array();
			}	
			$origin_comments =  $this->input->post('origin_comments');
			$from = array();
			$to = array();
			$comments = array();
			
			$routes_miles = $this->orgtrasnportation_model->decodePolylineToArray($this->input->post('leg_points'));
            $routes = $routes_miles;

            $location = $origin_address['full_address'];
            $lat_long = $this->common_model->get_lat_long($location);
			if(isset($origin_address['full_address']) && !empty($origin_address['full_address']))
			{
				 $street = explode(", ", $origin_address['full_address']);
				 $streets =  @$street[0];
				 $citys	  = @$street[1];
			} else {
				 $streets =  '';
				 $citys	  = $origin_address['city'];
			}
			
			if(isset($destination_address['full_address']) && !empty($destination_address['full_address']))
			{
				 $street = explode(", ", $destination_address['full_address']);
				 $streetd =  @$street[0];
				 $cityd	  = @$street[1];
			} else {
				 $streetd =  '';
				 $cityd	  = $destination_address['city'];
			}
			
			if(!empty($this->common_function->shortCountry[$origin_address['country']]))
			{
				$countrys = strtoupper($this->common_function->shortCountry[$origin_address['country']]);
			} else {
				$countrys = $origin_address['country'];
			}
			
			if(!empty($this->common_function->shortCountry[$destination_address['country']]))
			{
				$countryd = strtoupper($this->common_function->shortCountry[$destination_address['country']]);
			} else {
				$countryd = $destination_address['country'];
			}
           
			$location2 = $destination_address['full_address'];
            $lat_long2 = $this->common_model->get_lat_long($location2);
            $street2 = explode(", ", $destination_address['full_address']);
			
			$legs_cover = array('in_transportation_id'=> $this->session->userdata('transport_id'),
								'in_route_type'	      => 0,
								'in_user_id'    	  => $this->session->userdata('userid'),
								'st_from_street' 	  => $streets,
								'st_from_city'		  => $citys,
								'st_from_state'		  => $origin_address['state_abbr'],	
								'st_from_zip'		  => $origin_address['zip_code'],
								'st_from_country'	  => $countrys,
								'st_to_street' 		  => $streetd,
								'st_to_city'		  => $cityd,
								'st_to_state'		  => $destination_address['state_abbr'],	
								'st_to_zip'			  => $destination_address['zip_code'],
								'st_to_country'		  => $countryd,
								'dt_created'		  => date("Y-m-d H:i:s"),
								'dt_modified'		  => date("Y-m-d H:i:s"),
								'st_info'			  => $origin_comments
								);
			if(!empty($origin_comments))
			{	
				$legs_cover['st_info']   =  $origin_comments;
			}				
					$this->db->insert('tbl_legs_cover', $legs_cover);
					$id = $this->db->insert_id();
					$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
					$to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];	
					//$comments[] = $origin_comments;			
				if(count($routing_data)>0)
				{	
					foreach($routing_data as $key=>$value)
					{	
						if(isset($value['pickup_zip']) && !empty($value['pickup_zip']) && isset($value['dropoff_zip']) && !empty($value['dropoff_zip']) )
						{	
							$legs_cover = array('in_transportation_id' => $this->session->userdata('transport_id'),
													   'in_route_type' => 0,
														  'in_user_id' => $this->session->userdata('userid'),
													  'st_from_street' => '',
														'st_from_city' => $value['pickup_city'],
													   'st_from_state' => $value['pickup_state'],	
														 'st_from_zip' => $value['pickup_zip'],
													 'st_from_country' => $value['pickup_country'],
														'st_to_street' => '',
														  'st_to_city' => $value['dropoff_city'],
														 'st_to_state' => $value['dropoff_state'],	
														   'st_to_zip' => $value['dropoff_zip'],
									                   'st_to_country' => $value['dropoff_country'],
														  'dt_created' => date("Y-m-d H:i:s"),
														 'dt_modified' => date("Y-m-d H:i:s"),
											);
									if(!empty($origin_comments))
									{	
										$legs_cover['st_info']   =  $origin_comments;
									}
									$this->db->insert('tbl_legs_cover', $legs_cover);
									$id = $this->db->insert_id();
									
									$from[] = $value['pickup_zip'].','.$value['pickup_city'].','.$value['pickup_state'];
									$to[]	= $value['dropoff_zip'].','.$value['dropoff_city'].','.$value['dropoff_state'];			
									//$comments[] = '';
						}		
					}			
				}				
			
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
			if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
			{
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
							$transport_id = $transport_details[0]['in_transportation_id'];
							$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
							//$user_name = explode(" ",$transport_details[0]['st_display_name']);
							/*$user_id         = $transport_details[0]['in_user_id'];*/
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("99");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
							if(isset($q) && !empty($q)){					   		
									foreach($q as $qr)
									{		 
										  
										if(!empty($qr['st_image']))
										{
												$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
												$imgtitle   =   $qr['st_banner_name']; 				
												$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

												alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
											  
											  
										}
										else
										{
											   $donation='';								 
										}							  
											
									}
								}			
								   
							   else
							   {
								  $donation='';
							   }
							
							//$username_link	=	$this->common_function->get_filtered_name($user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']);
							
							//$user_link_name	=	"<a href='".base_url().'user-'.$user_details[0]['in_user_id'].'-'.$username_link."' target='_blank'>";
							$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
							$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
						
							$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
							$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
							$user_link_name	.=	"</a>";
							
							$user_display = '';
							//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
							$user_display .= 'Name: '.$user_link_name."<br>";
							$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
							$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
							$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
							if(count($from)>0)
							{
								$user_router_display ='';
								foreach ($from  as $key => $value)
								{
									$user_router_display .=	'Type of Leg: Ground <br>';
									$user_router_display .=	'From: '.$value."<br>";
									$user_router_display .=	'To: '.$to[$key]."<br>";
									$user_router_display .=	'<br>';
								}
								$user_router_display .=	'Comments: ' .$origin_comments."<br>";
							}
							
							
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
								$templete = str_replace("##Leg_info##",$user_router_display, $templete);
								$templete = str_replace("##User_info##",$user_display, $templete);
								$templete = str_replace("##user##",$user_link_name, $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
								$templete =	str_replace("##transport_number##",$transport_link, $templete);
								$templete = str_replace("##DONATION##",$donation,$templete);	
								
								
								
								//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $rou_tc_user[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								$message_vol = $strMail;
								$to_vol = $user_details[0]['st_email'];
									
								$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>".$orgcode.$transport_id."</a>";
								$message = str_replace("##transport_number_link##",$submission_link,$message);	
								
								//$message = str_replace("##user_submission_link##",base_url().'user/login_as_tc_volunteer/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($transport_id),$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
								
								$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
								
								$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
							
								
							}
							
							if($transport_details[0]['in_sms_notification']=='1')
							{
								$user_name  = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
								$to = 	$rou_tc_user[0]['st_primary_phone'];
								$postal_code = '';
								$country_type = trim($rou_tc_user[0]['st_country']);
								if($country_type=='USA' || $country_type=='US')
								{
									$postal_code = '+1';
								} else if($country_type=='CANADA' || $country_type=='CA')
								{
									$postal_code = '+1';
								} else if($country_type=='INDIA' || $country_type=='IN')
								{
									$postal_code = '+91';
								} 	 
		
								if($postal_code == '')
								{
									$user_country = $this->common_model->getaddress($rou_tc_user[0]['st_zip']);
									$country_code = trim($user_country['st_country']);
									if($country_code =='CA' || $country_code=='US')
									{
										$postal_code = '+1';
									} else if($country_code =='IN')
									{
										$postal_code = '+91';
									}		
								}
								if($to!='' && $postal_code!='')
								{	
									//$text = "We wanted to let you know that ".$user_name." has joined Transport ".$transport_details[0]['in_transportation_id']." Click here to view user info:  http://crystal99/doobertv4/ut/".$this->session->userdata('userid');
									$text = "You have a new volunteer on Transport ".$transport_details[0]['in_transportation_id']." ".$user_name." indicated that they can cover following leg(s) Click here to view user info:  http://dev.doobert.com/ut/".$this->session->userdata('userid');	
									$this->orgtrasnportation_model->sendtext($text,$to,$postal_code);
								}	
							}
			}
			
						
            $this->session->set_flashdata('routing_leg', "We’ve sent your potential leg(s) and any comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.");

		//	redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
		if($this->input->post('leg_type'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			
			$this->load->model('user_model');
			if($this->input->post('telephone'))
			{
				$profile_info = array('st_primary_phone'=>$this->input->post('telephone'));
				$data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
			}
			
			if($this->input->post('accepted_term_condition')==1)
			{
					$term_condition = array('in_user_id'=>$this->session->userdata('userid'),
											'in_organization_id'=>$this->session->userdata('org_id'),
											'dt_created' => date('Y:m:d H:i:s'),
											'dt_modified'=> date('Y:m:d H:i:s'),
											'in_deleted'=>0,
											);
					$this->db->insert('tbl_users_accept_condition',$term_condition);
			}

			$origin_address = $this->input->post('origin_address');
		    $destination_address = $this->input->post('destination_address');
			//$routing_data = $this->input->post('routing_details');
			if($this->input->post('routing_details'))
			{
				$routing_data = $this->input->post('routing_details');
			} else {
				$routing_data = array();
			}
			$origin_comments =  $this->input->post('origin_comments');
			$from = array();
			$to = array();
			$comments = array();
			$lat_long = array("lat" => $origin_address['latitude'], "lng" => $origin_address['longitude']);
			$airport_details = $this->orgtrasnportation_model->get_airport_details($origin_address['name']);
			 if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
            } else {
                $loc = (($origin_address['name'] ? $origin_address['name'] . "," : "") . ($origin_address['st_city'] ? $origin_address['st_city'] . "," : "") . ($origin_address['st_state'] ? $origin_address['st_state'] . "," : "") . "," . strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]));
            }
			
			$start = $this->getLatLong($loc);
			
            $lat_long = array("lat" => $destination_address['latitude'], "lng" => $destination_address['longitude']);
            //$street 		= explode(", ",$destination_address['full_address']);
            $airport_details = $this->orgtrasnportation_model->get_airport_details($destination_address['name']);
            //$loc = (($destination_address['name']?$destination_address['name'].",":"").$destination_address['st_city'].$destination_address['st_state'].",".$airport_details['st_iso_country']);
			if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
            } else {
                $loc = (($destination_address['name'] ? $destination_address['name'] . "," : "") . ($destination_address['st_city'] ? $destination_address['st_city'] . "," : "") . ($destination_address['st_state'] ? $destination_address['st_state'] . "," : "") . strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]));
            }
			
            $finish = $this->getLatLong($loc);
			
			$complete_data = $this->input->post();
			$pick_array_leg_type = 'P';
            $drop_array_leg_type = 'D';
			$date_of_pickup = date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $complete_data['clockface_2_modal'])));
            $date_of_dropup = date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $complete_data['clockface_3_modal'])));
			
			$airport_details = $this->orgtrasnportation_model->get_airport_details($origin_address['name']);
         
			$airport_details1 = $this->orgtrasnportation_model->get_airport_details($destination_address['name']);
			
				
			$legs_cover = array('in_transportation_id'=> $this->session->userdata('transport_id'),
								'in_route_type'	      => 1,
								'in_user_id'    	  => $this->session->userdata('userid'),
								'st_from_street' 	  => $origin_address['name'],
								'st_from_city'		  => ($start['city']) ? $start['city'] : $airport_details['st_city'],
								'st_from_state'		  => ($start['state']) ? $start['state'] : $airport_details['st_state'],	
								'st_from_zip'		  => $start['postal_code'],
								'st_from_country'	  => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
								'st_to_street' 		  => $destination_address['name'],
								'st_to_city'		  => ($finish['city']) ? $finish['city'] : $airport_details1['st_city'],
								'st_to_state'		  => ($finish['state']) ? $finish['state'] : $airport_details1['st_state'],	
								'st_to_zip'			  => $finish['postal_code'],
								'st_to_country'		  => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$airport_details1['st_iso_country']]),
								'dt_created'		  => date("Y-m-d H:i:s"),
								'dt_modified'		  => date("Y-m-d H:i:s"),
								);
					if(!empty($origin_comments))
					{	
						$legs_cover['st_info']   =  $origin_comments;
					}		
				$this->db->insert('tbl_legs_cover', $legs_cover);
				$id 	= $this->db->insert_id();
				$from[] = $legs_cover['st_from_street'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
				$to[]	= $legs_cover['st_to_street'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];			
								//$comments[] = $legs_cover['st_info'];
            //$this->orgtrasnportation_model->add_legs_details($dropoff_array);
            //$this->orgtrasnportation_model->add_distance($this->input->post('distance'));
			
				if(count($routing_data)>0)
				{	
					foreach($routing_data as $key=>$value)
					{	
						if(isset($value['pickup_airport']) && !empty($value['pickup_airport']) && isset($value['dropoff_airport']) && !empty($value['dropoff_airport']) )
						{	
							$pickup_airport_details = $this->orgtrasnportation_model->get_airport_details($value['pickup_airport']);
							$dropoff_airport_details = $this->orgtrasnportation_model->get_airport_details($value['dropoff_airport']);
							$loc = $pickup_airport_details['st_latitude'] . "," . $pickup_airport_details['st_longitude'];
							$loc1 = $dropoff_airport_details['st_latitude'] . "," . $dropoff_airport_details['st_longitude'];
							$start = $this->getLatLong($loc);
							$finish = $this->getLatLong($loc1);
							$legs_cover = array('in_transportation_id' => $this->session->userdata('transport_id'),
													   'in_route_type' => 1,
														  'in_user_id' => $this->session->userdata('userid'),
													  'st_from_street' => $value['pickup_airport'],
													   	'st_from_city' => ($start['city']) ? $start['city'] : $pickup_airport_details['st_city'],
													   'st_from_state' => ($start['state']) ? $start['state'] : $pickup_airport_details['st_state'],	
														 'st_from_zip' => $start['postal_code'],
													 'st_from_country' => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$pickup_airport_details['st_iso_country']]),
													  'st_to_street'   => $value['dropoff_airport'],
													    'st_to_city'   => ($finish['city']) ? $finish['city'] :$dropoff_airport_details['st_city'],
														'st_to_state'  => ($finish['state']) ? $finish['state'] : $dropoff_airport_details['st_state'],	
														 'st_to_zip'   => $finish['postal_code'],
													   'st_to_country' => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$dropoff_airport_details['st_iso_country']]),
														  'dt_created' => date("Y-m-d H:i:s"),
														 'dt_modified' => date("Y-m-d H:i:s"),
											 );
											
							if(!empty($origin_comments))
							{	
								$legs_cover['st_info']   =  $origin_comments;
							}				
															 
							$this->db->insert('tbl_legs_cover', $legs_cover);
							$id = $this->db->insert_id();
							$from[] = $legs_cover['st_from_street'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
							$to[]	= $legs_cover['st_to_street'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];			
						}		
					}			
				}				
			
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
			if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
			{
					$transport_id = $transport_details[0]['in_transportation_id'];
					$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
					$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("99");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
					if(isset($q) && !empty($q))
					{					   		
						foreach($q as $qr)
						{		 
					  
							if(!empty($qr['st_image']))
							{
								$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
								$imgtitle   =   $qr['st_banner_name']; 				
								$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

								alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
							}
							else
							{
								$donation='';								 
							}							  
						
						}	
					}			
			   
					else
					{	
						$donation='';
					}
					
					//$username_link	=	$this->common_function->get_filtered_name($user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']);
							
					$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
					$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
						
					$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
					$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
					$user_link_name	.=	"</a>";
							
					$user_display = '';
					$user_display .= 'Name: '.$user_link_name."<br>";
					$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
					$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
					$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
					if(count($from)>0)
					{
						$user_router_display ='';
						foreach ($from  as $key => $value)
						{
							$user_router_display .=	'Type of Leg: Aviation <br>';
							$user_router_display .=	'From: '.$value."<br>";
							$user_router_display .=	'To: '.$to[$key]."<br>";
							$user_router_display .=	'<br>';
						}
							$user_router_display .=	'Comments: ' .$origin_comments."<br>";
					}
							
							
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								//$templete = str_replace("##user##",$rou_tc_user[0]['st_display_name'], $templete);
								$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
								$templete = str_replace("##Leg_info##",$user_router_display, $templete);
								$templete = str_replace("##User_info##",$user_display, $templete);
								$templete = str_replace("##user##",$user_link_name, $templete);
								$templete =	str_replace("##transport_number##",$transport_link, $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
								
								//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
									{
										$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
									} else {
										$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
									}
								
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								//$templete = str_replace("##USER_NAME##",$transport_details[0]['st_display_name'],$templete);	
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $rou_tc_user[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$cc = $transport_details[0]['st_email'];
								$message_vol = $strMail;
								$to_vol = $user_details[0]['st_email'];
									
								$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>".$orgcode.$transport_id."</a>";
								$message = str_replace("##transport_number_link##",$submission_link,$message);	
							
								//$message = str_replace("##user_submission_link##",base_url().'user/login_as_tc_volunteer/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($transport_id),$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
								
								$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
								$message_vol = str_replace("##DONATION##",$donation,$message_vol);
								
								$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
									
							}
							
					if($transport_details[0]['in_sms_notification']=='1')
					{
							$user_name  = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
							$to = 	$rou_tc_user[0]['st_primary_phone'];
							$postal_code = '';
							$country_type = trim($rou_tc_user[0]['st_country']);
							if($country_type=='USA' || $country_type=='US')
							{
								$postal_code = '+1';
							} else if($country_type=='CANADA' || $country_type=='CA')
							{
								$postal_code = '+1';
							} else if($country_type=='INDIA' || $country_type=='IN')
							{
								$postal_code = '+91';
							} 	 
		
							if($postal_code == '')
							{
								$user_country = $this->common_model->getaddress($rou_tc_user[0]['st_zip']);
								$country_code = trim($user_country['st_country']);
								if($country_code =='CA' || $country_code=='US')
								{
									$postal_code = '+1';
								} else if($country_code =='IN')
								{
									$postal_code = '+91';
								}		
							}
							if($to!='' && $postal_code!='')
							{
								//$text = "We wanted to let you know that ".$user_name." has joined Transport ".$transport_details[0]['in_transportation_id']." Click here to view user info:  http://crystal99/doobertv4/ut/".$this->session->userdata('userid');
								$text = "You have a new volunteer on Transport ".$transport_details[0]['in_transportation_id']." ".$user_name." indicated that they can cover following leg(s) Click here to view user info:  http://dev.doobert.com/ut/".$this->session->userdata('userid');	
								$this->orgtrasnportation_model->sendtext($text,$to,$postal_code);
							}	
					}		
			}
				$this->session->set_flashdata('routing_leg', "We’ve sent your potential leg(s) and any comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.");	
		}
		
		if($this->input->post('submit_airline_trip_date')==1)
		{
			$this->load->model('user_model');
			if($this->input->post('telephone_no')&& $this->input->post('telephone_no')!='')
			{
				$profile_info = array('st_primary_phone'=>$this->input->post('telephone_no'));
				$data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
			}	
				
			if($this->input->post('accepted_term_condition')==1)
			{
				$term_condition = array('in_user_id'=>$this->session->userdata('userid'),
										'in_organization_id'=>$this->session->userdata('org_id'),
										'dt_created' => date('Y:m:d H:i:s'),
										'dt_modified'=> date('Y:m:d H:i:s'),
										'in_deleted'=>0,
										);
				$this->db->insert('tbl_users_accept_condition',$term_condition);
			}
			
			$pickupselect_date = array();
			$pickupselect_year = array();	
			$pickupselect_date = $this->input->post('pickupselect');
			$pickupselect_year = $this->input->post('pickupselect_year');
             
			$origin_comments =  $this->input->post('origin-Comments');
			$from = array();
			$to = array();
			$comments = array();
			$user_trip_date = array();
			if(count($pickupselect_date)>0)
			{	
					foreach($pickupselect_date as $key=>$value)
					{	
						$trip_date = '';
						if(!(empty($value)))					
						{
							if(isset($pickupselect_year[$key]) && $pickupselect_year[$key]!='')
							{
									$trip_date = date('Y-m-d',strtotime($value.' '.$pickupselect_year[$key]));
							} else {
									$trip_date = date('Y-m-d',strtotime($value));
							}
							$trip_date_reccomend = array('in_transportation_id' => $this->session->userdata('transport_id'),
														  'in_user_id' => $this->session->userdata('userid'),
														  'in_deleted' => 0,	
														  'dt_created' => date("Y-m-d H:i:s"),
														 'dt_modified' => date("Y-m-d H:i:s"),
														'dt_trip_date' => $trip_date, 		
												);

									if(!empty($origin_comments))
									{	
										$trip_date_reccomend['st_info']   =  $origin_comments;
									}					
									
									$this->db->insert('tbl_airline_transport_leg', $trip_date_reccomend);
									$user_trip_date[] = date("D M d",strtotime($value));
									$id = $this->db->insert_id();
						}	
					}			
			}
			
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
			
			if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
			{
							
							$transport_id = $transport_details[0]['in_transportation_id'];
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
							$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
							//$user_name = explode(" ",$transport_details[0]['st_display_name']);
							/*$user_id         = $transport_details[0]['in_user_id'];*/
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("116");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
							if(isset($q) && !empty($q)){					   		
									foreach($q as $qr)
									{		 
										  
										if(!empty($qr['st_image']))
										{
												$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
												$imgtitle   =   $qr['st_banner_name']; 				
												$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

												alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
											  
											  
										}
										else
										{
											   $donation='';								 
										}							  
											
									}
								}			
								   
							   else
							   {
								  $donation='';
							   }
							
							//$username_link	=	$this->common_function->get_filtered_name($user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']);
							
							//$user_link_name	=	"<a href='".base_url().'user-'.$user_details[0]['in_user_id'].'-'.$username_link."' target='_blank'>";
							
							$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
							$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
							
							$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
							$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
							$user_link_name	.=	"</a>";
							
							
							
							$user_display = '';
							$user_display .= 'Name: '.$user_link_name."<br>";
							//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
							$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
							$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
							$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
							
							
							
							
							$pickup_location = '';
							if(isset($transport_details[0]['st_from_city']) && trim($transport_details[0]['st_from_city']) != '')
							{
								$pickup_location .= $transport_details[0]['st_from_city'];
							}
							if(isset($transport_details[0]['st_from_street']) && trim($transport_details[0]['st_from_street']) != '')
							{
								$pickup_location .= ' ('.$transport_details[0]['st_from_street'].') ';
							}
				
							$dropoff_location = '';
				
							if(isset($transport_details[0]['st_to_city']) && trim($transport_details[0]['st_to_city']) != '')
							{
								$dropoff_location .= $transport_details[0]['st_to_city'];
							}
							if(isset($transport_details[0]['st_to_street']) && trim($transport_details[0]['st_to_street']) != '')
							{
								$dropoff_location .= ' ('.$transport_details[0]['st_to_street'].') ';
							}
							
								
							$user_router_display ='';
							$user_router_display .=	'From: '.$pickup_location."<br>";
							$user_router_display .=	'To: '.$dropoff_location."<br>";
							$user_router_display .=	'<br>';
								
							
							
							
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
								$templete = str_replace("##Leg_info##",$user_router_display, $templete);
								$templete = str_replace("##User_info##",$user_display, $templete);
								$templete = str_replace("##user##",$user_link_name, $templete);
								$templete =	str_replace("##transport_number##",$transport_link, $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
								$templete =	str_replace("##notes##",$origin_comments, $templete);
								$templete = str_replace("##DONATION##",$donation,$templete);
								
								//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								if(count($user_trip_date)>0)
								{	
									$templete = str_replace("##Trip_Date##",implode(",\r\n",$user_trip_date), $templete);
								} else {
									$templete = str_replace("##Trip_Date##",'', $templete);
								}
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								
								$to = $rou_tc_user[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								$message_vol = $strMail;
								$to_vol = $user_details[0]['st_email'];
								$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>".$orgcode.$transport_id."</a>";
								$message = str_replace("##transport_number_link##",$submission_link,$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
								
								$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
								
								
								$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);		
							}
			}
			
						
            $this->session->set_flashdata('routing_leg', "We’ve sent your potential trip date and comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.");

		}
		
		if($this->input->post('image_file'))
		{
			$transport_doc = explode(",",$this->input->post('image_file'));			
				for($a=0;$a<count($transport_doc);$a++)
				{
					$file_details = array();
					if($transport_doc[$a]!='')
					{
						$file_details = array(	"in_transportation_id"	=> $tra_id, 
												"st_file_name"			=> $transport_doc[$a], 
												"dt_created"			=> date("Y-m-d H:i:s"),  
												"in_deleted"			=> "0"
											);
						$this->orgtrasnportation_model->add_transport_file($file_details);
					}
				}
			$this->session->set_flashdata('message_sys', 'Transportation file(s) uploaded successfully.');	
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");	
		}
		
		/*if($this->input->post('transport_photo'))
		{
			$transport_doc = explode(",",$this->input->post('transport_photo'));			
				for($a=0;$a<count($transport_doc);$a++)
				{
					$file_details = array();
					if($transport_doc[$a]!='')
					{
						$file_details = array(	"in_transportation_id"	=> $tra_id, 
												"st_file_name"			=> $transport_doc[$a], 
												"dt_created"			=> date("Y-m-d H:i:s"),  
												"in_deleted"			=> "0"
											);
						$this->orgtrasnportation_model->add_transport_photo($file_details);
					}
				}
			$this->session->set_flashdata('message_sys', 'Transportation photo(s) uploaded successfully.');	
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_4_3");	
		}*/
		
		if($this->input->post('mark_leg_completed'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			if($this->input->post("leg_completed_id")>0)
			{
				$array_update = array("in_status"=>"1");
				$leg_id = $this->input->post("leg_completed_id");
				$this->orgtrasnportation_model->update_legs($array_update,$leg_id);
			}
			$this->session->set_flashdata('message_sys', 'Transportation leg(s) successfully marked as completed.');	
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");	
		}
		
		$transport_type = '0';
		$transport_post	= '0';
		/*if($this->input->post('route_action'))
		{
			$transport_post	= '1';
			$transport_type = $this->input->post('transport_type');
		}*/
		
		if($this->session->userdata('route_action'))
		{
			$transport_post	= '1';
			$transport_type = $this->session->userdata('transport_type');
			$this->session->unset_userdata('route_action');
			$this->session->unset_userdata('transport_type');
		}
		
		if($this->input->post('recent_activity'))
		{
			//echo "<pre>";print_r($this->input->post());
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');
			$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');die;
		}
		
		
		if ($this->input->post('rescue_story_action') == 'rescue_story_action') {
			//echo 'save  rescue_story_action';
			//echo '<pre/>';print_r($_POST);
			//exit;
			
			$form_field	=	array('story_title'			=> "",
								  "rescue_story"			=> "",
								  "txttranstogether"		=> "",
								  "txtmemorable"			=> "",
								  "txtbetter"				=> "",
								  "txtpassenger"			=> "",
								  "txttakehelp"				=> "",
								  "is_round"                => ""								
						  	 	);
			
			foreach($form_field as $key => $value)	
			{	
				$data['post_data'][$key] = trim($this->input->post($key));	
			}
			
			$this->form_validation->set_rules('story_title', 'Story Title', 'trim|required');
			if($data['post_data']['is_round'] == 0){
			$this->form_validation->set_rules('rescue_story', 'Rescue Story', 'trim|required');	
			}
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('transportation/org-trans-scheduled',$data);	
			}
			else
			{
				
				if($data['post_data']['is_round'] == 1)
					{   
				
						if($_POST['txttranstogether'] !=''){
						$rescue_prompt[0]['Q1']  = 'Tell us how the transport came together?'.'</p>';
						$rescue_prompt[0]['txttranstogether']	=	$this->input->post('txttranstogether');			
						
						}
						
						
						if($_POST['txtmemorable'] !=''){
						$rescue_prompt[0]['Q2']  = 'Were there any memorable moments from this transport?';
						$rescue_prompt[0]['txtmemorable']		=	$this->input->post('txtmemorable');
										
						
						}
						
						if($_POST['txtbetter'] !=''){
						$rescue_prompt[0]['Q3'] = 'What could have made this transport better?';
						$rescue_prompt[0]['txtbetter']	        =	$this->input->post('txtbetter');					
						
						}
						
						if($_POST['txtpassenger'] !=''){
						$rescue_prompt[0]['Q4']         = 'Tell us about your passenger/s (behavior, demeanor, etc)?';
						$rescue_prompt[0]['txtpassenger']		=	 $this->input->post('txtpassenger');					
						
						}
						
						if($_POST['txttakehelp'] !=''){
						$rescue_prompt[0]['Q5'] = '<p>'.'Why did you take this transport, what compelled you to help?';
						$rescue_prompt[0]['txttakehelp']		=	$this->input->post('txttakehelp');		
						
						}
						
						$rescue_prompt_val	=	serialize($rescue_prompt);
						
						$data['post_data']['rescue_story'] = $rescue_prompt_val;
					}
				
				$rescue_data = array("in_transportation_id" => $tra_id,
									"st_rescue_title" => $data['post_data']['story_title'],
									"st_rescue_story" => $data['post_data']['rescue_story'],
									"in_created_by"	=> $this->session->userdata('userid'),
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0",
									"in_flag" => ($data['post_data']['is_round'] == 1)? 1: 0
									);
				$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);
				
				$transport_doc = explode(",", $this->input->post('rescue_transport_photo'));
				for ($a = 0; $a < count($transport_doc); $a++) {
					$file_details = array();
					if ($transport_doc[$a] != '') {
						$file_details = array("in_transportation_id" => $tra_id,
							"in_transport_story_id" => $last_insert_rescue_id,
							"st_file_name" => $transport_doc[$a],
							"st_file_type" => "P",
							"in_created_by"	=> $this->session->userdata('userid'),
							"dt_created" => date("Y-m-d H:i:s"),
							"in_deleted" => "0"
						);
						$this->orgtrasnportation_model->add_transport_photo($file_details);
					}
				}
				
				$story_video_link = trim($this->input->post('story_video_link'));
				if(isset($story_video_link) && $story_video_link != '')
				{
				
					$story_video_img_link = trim($this->input->post('story_video_img_link'));
					$story_video_img = $this->get_video_image($story_video_img_link);
					
					//echo 'story_video_img '.$story_video_img ;
					//exit;
					$story_file_details = array("in_transportation_id" => $tra_id,
										"in_transport_story_id" => $last_insert_rescue_id,
										"st_file_name" => trim($story_video_img),
										"st_file_type" => 'V',
										"st_video_provider" => trim($this->input->post('story_video_provider')),
										"st_video_id" => trim($this->input->post('story_video_id')),
										"in_created_by"	=> $this->session->userdata('userid'),
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
									);
					$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					
				}
				
				$this->load->library('email');
				$email_details = $this->common_model->get_email_containt("80");
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				if(isset($email_details[0]['st_email_body']))
				{
					$full_name	=	$this->session->userdata('user_name').' '.$this->session->userdata('last_name');
					
					$templete  = $email_details[0]['st_email_body'];
					$templete  = str_replace("##user_name##",$full_name,$templete);
					$templete  = str_replace("##admin_url##",$this->config->item('base_url').'administration.php/sysmanage/detail_transport_story/'.$last_insert_rescue_id,$templete);
					$templete  = str_replace("##story_id##",$last_insert_rescue_id,$templete);
					$templete  = str_replace("##current_year##",date('Y'),$templete);	
					$templete  = str_replace("##DONATION##",$donation,$templete);	
									
					$admin_list = $this->common_model->get_admin_list();
					for($a=0;$a<count($admin_list);$a++)
					{
						$permission = unserialize($admin_list[$a]['st_permission']); 
						if(isset($permission) &&  !empty($permission) && in_array('New_Rescue_Story',$permission))
						{
						
							$strMail 	= 	$templete;
							$to			=	$admin_list[$a]['email_address'];
							//$to			=	'ghanshyam.maurya@pulsesolutions.net';
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail;
							$category   =   $email_details[0]['st_category'];
							$this->common_function->send_mail($this->email, $to, $subject, $message, $this->session->userdata('email'),$cc ='', $full_name,$this->email,$category);
						}
					}
				}			
			}
			$this->session->set_userdata('attach_photo_auto_login',1);
            $this->session->set_flashdata('rescue_story', 'Transportation rescue story uploaded successfully.');
            redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
        }
		
		
		if ($this->input->post('rescue_story_action') == 'rescue_story_edit_action') {			
			
			$form_field	=	array("story_title"	    => "",
								  	  "rescue_story"	=> "",	
									  "story_id"		=> "",
									  "txttranstogether"		=> "",
									  "txtmemorable"			=> "",
									  "txtbetter"				=> "",
									  "txtpassenger"			=> "",
									  "txttakehelp"				=> "",
									  "is_round"                => ""
						  	 	);
			
			foreach($form_field as $key => $value)	
			{	
				$data['post_data'][$key] = trim($this->input->post($key));	
			}
			
			$this->form_validation->set_rules('story_title', 'Story Title', 'trim|required');
			if($data['post_data']['is_round'] == 0){
			$this->form_validation->set_rules('rescue_story', 'Rescue Story', 'trim|required');	
			}
			if($this->form_validation->run()==FALSE)
			{  
					$data['Err_Msg'] = validation_errors();
					$this->load->view('transportation/org-trans-scheduled',$data);	
			}
			else
			{
			   
				if($data['post_data']['is_round'] == 1)
					{   
				
						if($_POST['txttranstogether'] !=''){
						$rescue_prompt[0]['Q1']  = 'Tell us how the transport came together?';
						$rescue_prompt[0]['txttranstogether']	=	$this->input->post('txttranstogether');				
						
						}
						
						
						if($_POST['txtmemorable'] !=''){
						$rescue_prompt[0]['Q2']  = 'Were there any memorable moments from this transport?';
						$rescue_prompt[0]['txtmemorable']		=	$this->input->post('txtmemorable');
										
						
						}
						
						if($_POST['txtbetter'] !=''){
						$rescue_prompt[0]['Q3'] = 'What could have made this transport better?';
						$rescue_prompt[0]['txtbetter']	        =	$this->input->post('txtbetter');					
						
						}
						
						if($_POST['txtpassenger'] !=''){
						$rescue_prompt[0]['Q4']         = 'Tell us about your passenger/s (behavior, demeanor, etc)?';
						$rescue_prompt[0]['txtpassenger']		=	 $this->input->post('txtpassenger');				
						
						}
						
						if($_POST['txttakehelp'] !=''){
						$rescue_prompt[0]['Q5'] = 'Why did you take this transport, what compelled you to help?';
						$rescue_prompt[0]['txttakehelp']		=	$this->input->post('txttakehelp');	
						
						}
						
						$rescue_prompt_val	=	serialize($rescue_prompt);
						
						$data['post_data']['rescue_story'] = $rescue_prompt_val;
					}
				
			    $story_id	=	$data['post_data']['story_id'];
				$rescue_data = array("st_rescue_title" 	=> $data['post_data']['story_title'],
									 "st_rescue_story" 	=> $data['post_data']['rescue_story'],
									 "in_created_by"	=> $this->session->userdata('userid'),
									 "dt_created" 		=> date("Y-m-d H:i:s"),
									 "in_flag" => ($data['post_data']['is_round'] == 1)? 1: 0
									);
			     
				$this->orgtrasnportation_model->update_transport_rescue_details($rescue_data,$story_id);
				
				$transport_doc = explode(",", $this->input->post('rescue_transport_photo'));
				/*if($this->input->post('rescue_transport_photo')!='')
				{  
					$this->orgtrasnportation_model->update_rescue_transport_photo($story_id);
				}*/
				for ($a = 0; $a < count($transport_doc); $a++) {
					$file_details = array();
					if ($transport_doc[$a] != '') {
						$file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
												"in_transport_story_id" => $story_id,
												"st_file_name" => $transport_doc[$a],
												"st_file_type" => "P",
												"in_created_by"	=> $this->session->userdata('userid'),
												"dt_created" => date("Y-m-d H:i:s")							
						);
						$this->orgtrasnportation_model->add_transport_photo($file_details);
					}
				}
				
				$story_video_link = trim($this->input->post('story_video_link'));
				if(isset($story_video_link) && $story_video_link != '')
				{
				
					$story_video_img_link = trim($this->input->post('story_video_img_link'));
					$story_video_img = $this->get_video_image($story_video_img_link);
					
					
					$story_file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
										"in_transport_story_id" => $story_id,
										"st_file_name" => trim($story_video_img),
										"st_file_type" => 'V',
										"st_video_provider" => trim($this->input->post('story_video_provider')),
										"st_video_id" => trim($this->input->post('story_video_id')),
										"in_created_by"	=> $this->session->userdata('userid'),
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
									);
					$this->orgtrasnportation_model->update_rescue_transport_photo($story_id);
					$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					
				}				
							
			}
            $this->session->set_userdata('attach_photo_auto_login',1);
            $this->session->set_flashdata('rescue_story', 'Transportation rescue story uploaded successfully.');
            redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
        }
		 
		 
		if ($this->input->post('transport_photo_action')) {
		
			$rescue_data = array("in_transportation_id" => $tra_id,
									"st_rescue_title" => '',
									"st_rescue_story" => '',
									"in_created_by"	=> $this->session->userdata('userid'),
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0"
									);
			$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);
			
            $transport_doc = explode(",", $this->input->post('transport_photo'));
            for ($a = 0; $a < count($transport_doc); $a++) {
                $file_details = array();
                if ($transport_doc[$a] != '') {
                    $file_details = array("in_transportation_id" => $tra_id,
						"in_transport_story_id" => $last_insert_rescue_id,
                        "st_file_name" => $transport_doc[$a],
						"st_file_type" => 'P',
						"in_created_by"	=> $this->session->userdata('userid'),
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->orgtrasnportation_model->add_transport_photo($file_details);
                }
            }
			
			$transport_video_link = trim($this->input->post('transport_video_link'));
			if(isset($transport_video_link) && $transport_video_link != '')
			{
				$transport_video_img_link = trim($this->input->post('transport_video_img_link'));
				$transport_video_img = $this->get_video_image($transport_video_img_link);
					
				$file_details = array("in_transportation_id" => $tra_id,
									"in_transport_story_id" => $last_insert_rescue_id,
									"st_file_name" => trim($transport_video_img),
									"st_file_type" => 'V',
									"st_video_provider" => trim($this->input->post('transport_video_provider')),
									"st_video_id" => trim($this->input->post('transport_video_id')),
									"in_created_by"	=> $this->session->userdata('userid'),
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0"
								);
				$this->orgtrasnportation_model->add_transport_photo($file_details);
				
			}
				
			$this->session->set_userdata('attach_photo_auto_login',1);	
            $this->session->set_flashdata('google_leg', 'Transportation photo(s)/video link uploaded successfully.');
            redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
        }
		
		//$data['transport_type']		= $transport_type;
		//$data['transport_post']		= $transport_post;
		
		$profile_type = '0';
        $profile_post = '0';
		if ($this->input->post('profile_route_action')) {
            $profile_post = '1';
            $profile_type = $this->input->post('profile_type');
        }
		
		$data['profile_type'] = $profile_type;
		$data['profile_post'] = $profile_post;
		
		$transport_info 			= (isset($transport_details['0']))?$transport_details['0']:"";
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		//echo "<pre>";print_r($leg_details);die;
		$data['leg_details']		= $leg_details;
		
		/*$non_doobert_participants_cnt = 0;
		if(isset($leg_details) && !empty($leg_details))
		{
			foreach($leg_details as $legkey=>$legval)
			{
				if(isset($legval['non_doobert_participants_cnt']) && !empty($legval['non_doobert_participants_cnt']))
				{
					$non_doobert_participants_cnt = $non_doobert_participants_cnt + $legval['non_doobert_participants_cnt'];			
				}
			}
		}		
		$data['non_doobert_participants_cnt']	= $non_doobert_participants_cnt;*/
		
		/* add code to update transportation total distance starts 02-03-2016 */
		/*if (isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance'] <= 0) {
			
			$origin = ($transport_info['st_from_street'] ? $transport_info['st_from_street'] . "," : "") . ($transport_info['st_from_city'] ? $transport_info['st_from_city'] . "," : "") . ($transport_info['st_from_state'] ? $transport_info['st_from_state'] : "") . ($transport_info['st_from_zip'] ? "," . $transport_info['st_from_zip'] : "");
			$destinations = ($transport_info['st_to_street'] ? $transport_info['st_to_street'] . "," : "") . ($transport_info['st_to_city'] ? $transport_info['st_to_city'] . "," : "") . ($transport_info['st_to_state'] ? $transport_info['st_to_state'] : "") . ($transport_info['st_to_zip'] ? "," . $transport_info['st_to_zip'] : "");
			$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
			//print_r($routes_miles['distance']); exit;
			if(isset($routes_miles['distance']) && $routes_miles['distance'] != '0')
			{
				$tot_dist = array("in_tot_distance" => $routes_miles['distance']);
            	$this->orgtrasnportation_model->update_transport_details($tot_dist);
				$transport_info['in_tot_distance'] = $routes_miles['distance'];
			}
			
			if(isset($leg_details) && !empty($leg_details))
			{
				$distance_covered = 0;
				//print_r($leg_details);exit;
				foreach($leg_details as $leg_key=>$leg_val)
				{
					//print_r($leg_val);//exit;
					if((isset($leg_val['participants_cnt']) && $leg_val['participants_cnt'] > 0) || (isset($leg_val['non_doobert_participants_cnt']) && $leg_val['non_doobert_participants_cnt'] > 0))
					{
						$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_key);
						if (!empty($user_legs)) {
							if ($user_legs['pick_lat'] != '' && $user_legs['pick_lng'] != '') {
								$origin = $user_legs['pick_lat'] . "," . $user_legs['pick_lng'];
							} else {
								$origin = ($user_legs['pick_street'] ? $user_legs['pick_street'] . "," : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . "," : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . "," : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . "," : "") . ($user_legs['pick_country'] ? $user_legs['pick_country'] : "");
							}
							if ($user_legs['drop_lat'] != '' && $user_legs['drop_lng'] != '') {
								$destinations = $user_legs['drop_lat'] . "," . $user_legs['drop_lng'];
							} else {
								$destinations = ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . "," : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . ", " : "") . ($user_legs['drop_country'] ? $user_legs['drop_country'] : "");
							}
							
							$total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
							if(isset($total_miles['distance']) && $total_miles['distance'] != '0')
							{
								$this->orgtrasnportation_model->add_distance($total_miles['distance']);
								$distance_covered = $distance_covered+$total_miles['distance'];
							}
						}
					}
				}
				
				$transport_info['in_distance_covered'] = $distance_covered;
			}
			
		}*/
		/* add code to update transportation total distance ends 02-03-2016 */ 
		
		$legs_count = (count($leg_details))/8;
		$pages_count =  ceil($legs_count);
		$leg_page_link = array();
		//echo $pages_count."<br>";
		for($m=1;$m<=$pages_count;$m++)
		{
			$selected = ($legs_page)?($legs_page):"1";
			$next_loop = ((8*($m < 1 ? 1 : $m)));
			$first_loop = (8*($m < 1 ? 1 : $m-1))<count($leg_details)?((8*($m < 1 ? 1 : $m-1))):(count($leg_details));	
	
			$first_loop = ($first_loop<=0?"1":($first_loop>=8)?$first_loop+1:$first_loop);
			$next_loop = count($leg_details)>$next_loop?$next_loop:count($leg_details);
			//echo ($first_loop<=0?"1":$first_loop)."=".$next_loop."<br>";
			//$leg_page_link[$m] =array("text"=>str_pad($first_loop,2,"0",STR_PAD_LEFT)."-".str_pad($next_loop,2,"0",STR_PAD_LEFT),"selected"=>($m==$selected)?$selected:""); 	
			$leg_page_link[$m] =array("text"=>str_pad($first_loop,2,"0",STR_PAD_LEFT)."-".str_pad($next_loop,2,"0",STR_PAD_LEFT),"selected"=>($m==$selected)?$selected:"","start_li"=>($m==$selected)?$first_loop:"","end_li"=>($m==$selected)?$next_loop:""); 
		}
		
		//echo "<pre>";print_r($leg_page_link);die;
		//($first_loop+1)
		$data['leg_page_link']		= $leg_page_link;
		//$permission_details 		= '';
		$permission_details 		= array();
		$permission			 		= array();
		$owner_id					= array();
		$permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if($owner_id>0 && $owner_id == $this->session->userdata('userid'))
		{
			$permission_details['transport']		= array("transport_cr","transport_ed","transport_cnf","transport_del");
			$permission_details['fundraiser']		= array("fundraiser_cr","fundraiser_ed","fundraiser_cnf","fundraiser_del");
			$permission_details['profile_manager']	= array("pr_manager_cr","pr_manager_ed","pr_manager_cnf","pr_manager_del");
		}
		elseif(!empty($permission))
		{
			$permission_details = unserialize($permission);
		}
		else
		{
			$permission_details = '';
		}
		$data['permission'] = $permission_details;
		//echo "<pre>";print_r($permission_details);die;
		$transport_info['remin_distance'] = '0';
		$transport_info['cover_dis_per']  = '0';
		if(isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance']>0)
		{
			$total_dist_per 					= ($transport_info['in_distance_covered']*100)/$transport_info['in_tot_distance'];
			//$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['remin_distance'] 	= number_format(($transport_info['in_tot_distance']-$transport_info['in_distance_covered']),"2",".","");
		}
		$data['transport_details']	= $transport_info;
		$data['transport_files']	= $transport_files;	
		$data['transport_animals']	= $transport_animals;
		$data['profile_setting']	= $profile_setting;	
		
		
		
		$transport_photos 			= $this->orgtrasnportation_model->get_transport_photos($tra_id);
		$data['transport_photos']	= $transport_photos;
		
		//$tc_privacy_setting = $this->orgtrasnportation_model->get_organization_privacy_setting_by_org_id($this->session->userdata('org_id'));
		/*if(count($tc_privacy_setting)>0)
		{
			$gen_info = unserialize($tc_privacy_setting['st_general_info']);
			if(is_array($gen_info) && in_array('sdisplay_tc',$gen_info))
			{
				$data['display_public_tc'] = '1';
			} else {
				$data['display_public_tc'] = '0';
			}	
		}*/
		
		$tc_privacy_setting = $this->orgtrasnportation_model->get_organization_privacy_setting_by_org_id($this->session->userdata('org_id'));
		if($tc_privacy_setting['in_tc_info']=='1')
		{
			$data['display_public_tc'] = '1';	
		} else {
			$data['display_public_tc'] = '0';
		}
			
		//$user_joined_leg = $this->orgtrasnportation_model->get_all_legs();
		//if(count($user_joined_leg)>0)
		if(count($legs_ids)>0)	
			$data['user_joined_transport'] = '1';
		else
			$data['user_joined_transport'] = '0';
		
		$transport_story_photos = $this->orgtrasnportation_model->get_transport_story_photos($tra_id);
		//echo '<pre/>';
		//print_r($transport_story_photos);
		$transport_story_photo_data = array();
		if(isset($transport_story_photos) && !empty($transport_story_photos))
		{
			foreach($transport_story_photos as $story_key=>$story_val)
			{
				$transport_story_photo_data[$story_key]['user_name'] = $story_val['st_display_name'];
				$transport_story_photo_data[$story_key]['in_id'] = $story_val['in_id'];
				$transport_story_photo_data[$story_key]['in_created_by'] = $story_val['in_created_by'];
				if(isset($story_val['st_rescue_title']) && $story_val['st_rescue_title'] != '')
				{
					$transport_story_photo_data[$story_key]['type'] = 'S';
					$transport_story_photo_data[$story_key]['title'] = $story_val['st_rescue_title'];
					$transport_story_photo_data[$story_key]['desc'] = $story_val['st_rescue_story'];
					$transport_story_photo_data[$story_key]['flag'] = $story_val['in_flag'];
					
					$transport_story_pics = $this->orgtrasnportation_model->get_story_photos_by_id($story_val['in_id'],$tra_id,$story_val['in_created_by']);
					
					if(isset($transport_story_pics) && !empty($transport_story_pics))
					{
						foreach($transport_story_pics as $pics)
						{
							$transport_story_photo_data[$story_key]['photo_id'][]	= $pics['in_transport_photo_id'];
							if($pics['st_file_type'] == 'P')
							{
								$transport_story_photo_data[$story_key]['pics'][]	= $pics['st_file_name'];
							}
							if($pics['st_file_type'] == 'V')
							{
								$transport_story_photo_data[$story_key]['videos'][]	= $pics['st_file_name'];
								$transport_story_photo_data[$story_key]['video_provider'][]	= $pics['st_video_provider'];
								$transport_story_photo_data[$story_key]['video_id'][]	= $pics['st_video_id'];
							}
						}
					}
					
				}else{
					$transport_story_photo_data[$story_key]['type'] = 'P';
					$transport_story_photo_data[$story_key]['title'] = '';
					$transport_story_photo_data[$story_key]['desc'] = '';
					$transport_photos = $this->orgtrasnportation_model->get_transport_photos_by_id($story_val['in_id'],$tra_id,$story_val['in_created_by']);
					if(isset($transport_photos) && !empty($transport_photos))
					{
						foreach($transport_photos as $photo)
						{
							$transport_story_photo_data[$story_key]['photo_id'][]	= $photo['in_transport_photo_id'];
							if($photo['st_file_type'] == 'P')
							{
								$transport_story_photo_data[$story_key]['pics'][]	= $photo['st_file_name'];
							}
							if($photo['st_file_type'] == 'V')
							{
								$transport_story_photo_data[$story_key]['videos'][]	= $photo['st_file_name'];
								$transport_story_photo_data[$story_key]['video_provider'][]	= $photo['st_video_provider'];
								$transport_story_photo_data[$story_key]['video_id'][]	= $photo['st_video_id'];
							}
						}
					}
				}
			}
		}
		
		//echo '<pre/>';print_r($transport_story_photo_data);exit;
		$data['transport_story_photo_data'] = $transport_story_photo_data;
		
		//code to get current user vehicle details
		$this->load->model('user_model');
		$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid')); 
		
		$data['arrPlane']			= $this->user_model->get_plane_detail($this->session->userdata('userid')); 
		//echo '<pre>';
		//print_r($data['arrVehicle']);
		//die;
		
		#================ Feeds start==============#
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';	
		$rec_per_page = 10;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		$tra_id						= $this->session->userdata('transport_id');
		//$user_profile 				= $this->common_model->get_user_profile($this->session->userdata('userid'));
		//$drivers 					= $this->orgtrasnportation_model->get_driver_details($tra_id);
		//$data['drivers']			= $drivers;
		//$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id,$limit,$rec_per_page);
		$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id);
		$totalrecord  				= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		
		//$data['totalrecord']		= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		$data['totalrecord']		= $totalrecord;
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'org-transportation-scheduled/';
		$config['base_url']		= $config['base_url'].$this->session->userdata('transport_id').'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '1';
		$config['file_path'] 		= $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		/*		$jsFunction['name'] = 'show';
        $jsFunction['params'] = array();
        $this->pagination2->initialize_js_function($jsFunction);

        $data['base_url'] = $config['base_url'];
        $data['pagination'] = $this->pagination2->create_js_links();*/
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		$data['feeds']				= $feeds;
		//$data['profile_info']		= isset($user_profile['0'])?$user_profile['0']:"";
		#================ Feeds end==============#
		
		$state_list = $this->common_function->state_list;
        $data['state_list'] = $state_list;

        $c_state_list = $this->common_function->canadian_state_list;
        $data['c_state_list'] = $c_state_list;
	
		$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));	
		$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
		//$data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		$user_profile_type = array();
		if(isset($data['user_profile']) && !empty($data['user_profile']))
		{
				if(isset($data['user_profile']['st_driver']) && $data['user_profile']['st_driver']=='Y')
				{
					array_push($user_profile_type,'Y');
				}

				if(isset($data['user_profile']['st_pilot']) && $data['user_profile']['st_pilot']=='Y')
				{
					array_push($user_profile_type,'P');
				}
					
				if(isset($data['user_profile']['st_photographer']) && $data['user_profile']['st_photographer']=='Y')
				{
					array_push($user_profile_type,'PH');
				}

				if($transport_post=='0' && (($data['user_profile']['st_driver']=='N' || $data['user_profile']['st_driver']=='') && ($data['user_profile']['st_pilot']=='N' ||  $data['user_profile']['st_pilot']=='')) && $data['user_profile']['st_photographer']=='Y')
				{
					$transport_type = '2';
				}	
						
		}
			
		$data['transport_type']		= $transport_type;
		$data['transport_post']		= $transport_post;
		$data['user_profile_type']	= $user_profile_type;
		if($share_template == 1)
		{
			$main_image = $this->generate_fb_image_option1();
		} 
		else if($share_template == 5){						
			$main_image = $this->generate_fb_image_option5();						
		}
		else if($share_template == 6){						
			$main_image = $this->generate_fb_image_option6();						
		}
		else if($share_template == 7){						
			$main_image = $this->generate_fb_image_option7();						
		}
		else if($share_template == 8){						
			$main_image = $this->generate_fb_image_option8();						
		}		
		else {
			$main_image = $this->generate_fb_image($share_template);
		}
	
		/*echo "<pre>"; print_r($data); echo "</pre>";
		die;*/
		$data['main_image']  = $main_image;	
		/* code for facebook transport share ends */
		
		if($this->session->userdata('userid'))
		{ 
				if (isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'R')
				{
					$get_ride_profile = array();
					$get_ride_profile = $this->common_model->get_ride_profile($this->session->userdata('userid'));
					$data['user_ride'] = $get_ride_profile;
					$this->load->view('transportation/rider-home-transportation',$data);
				} else if (isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'D'){
					if (isset($transport_details[0]['in_airline_transport']) && $transport_details[0]['in_airline_transport'] == '1')
					{	
						$this->load->view('transportation/airline-transportation',$data);
					} else {
						$this->load->view('transportation/routing-transportation',$data);
					}	
				} else if(isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'RO')
				{
					$in_transportation_id = $this->session->userdata('transport_id');
					$data['crate_details'] = array();
					$data['crate_details'] = $this ->common_model->get_transport_crates($in_transportation_id);
					$data['order_details'] = $this->order_transport_model->get_availability();					
					$data['animal_type'] 	= $this->organimal_model->get_animal_all_type();
					$data['owner_id'] = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
					$data['participants'] = $this->trasnportation_model->get_participant_byId( $data['transport_details']['in_transportation_id']);	
					$this->load->view('transportation/routes-home-transportation',$data);				 
				}else  {
						$this->load->view('transportation/rescue-home-transportation',$data);
				}	
		}else{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			if(isset($transport_info['in_status']) && $transport_info['in_status'] == 3)
			{
			//$this->load->view('transportation/org-trans-cancel-public',$data);	
			$this->load->view('transportation/rescue-home-transport-cancel-public',$data);	
			}else{
				/*
				$this->load->library('facebook');
				$facebook = new Facebook(array(
				  'appId'  => '316015238585967',
				  'secret' => '439ac5dba5430eaa546d9584f33b01ea',
				  'cookie' => true
				));
				//$user = $facebook->getUser();
				//print_r($user);exit;
				
				//$user_profile =  $this->facebook->api('/me','GET');
				//print_r($user_profile);
				//exit;	
				
				//$group_id = '1559596571002912';
				$group_id = '857029104382450';
				$publish = $facebook->api('/'.$group_id.'/feed', 'post',
							array(
							//'access_token' => 'EAAEfaggKHm8BAHhDITEZCQjD5HqRs5GfLRjAu8apF8HreSCy1XImBeMHeOLdUONPoV8XWiPziVWaCHHjzL0COuZBKHTYzZCFgrDbBpAZB8hPzKVqOR7HkSwykmNdQAwzSgfZAtqZCZBhPXcUpSfNrmpbYkbhpZAXZBWEZD',
							'access_token' =>'EAAEfaggKHm8BAHg4SDY6IxBmH76ExLLe2dzFiaEW6MkBIo6YUofpQvvZB79WhxHto6YWfZAidQYZCqyzZBdqpml3BxLEhEDUDcuuiIuCaJ8wcsDsD6pOosCzx7ZAyeiYt9y1LAlTWdj2gsYBOi0rfNO98qVni8D4ZD',
							'message'=> 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id'],
							//'link' => base_url()."org-transportation-scheduled/".$transport_info['in_transportation_id']."/",
							'link' => 'apps.facebook.com/doobert-rescue/?fb_appcenter=1',
							'picture' => base_url()."upload/fb_transport_share/".$main_image,
							'description' => 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id']
							));
					
				*/
				if (isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'R')
				{
					$get_ride_profile = array();
					$get_ride_profile = $this->common_model->get_ride_profile($this->session->userdata('userid'));
					$data['user_ride'] = $get_ride_profile;
					$this->load->view('transportation/rider-home-transportation',$data);
				}	else if (isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'D'){
					if (isset($transport_details[0]['in_airline_transport']) && $transport_details[0]['in_airline_transport'] == '1')
					{	
						$this->load->view('transportation/airline-transportation',$data);
					} else {
						$this->load->view('transportation/routing-transportation',$data);
					}
				}  else if(isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'RO'){
					$in_transportation_id = $this->session->userdata('transport_id');
					$data['crate_details'] = array();
					$data['crate_details'] = $this ->common_model-> get_transport_crates($in_transportation_id);
					$data['order_details'] = $this->order_transport_model->get_availability();
					$data['animal_type'] 	= $this->organimal_model->get_animal_all_type();
					$data['owner_id'] = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
					$data['participants'] = $this->trasnportation_model->get_participant_byId( $data['transport_details']['in_transportation_id']);	
					$this->load->view('transportation/routes-home-transportation',$data);				 
				} else {
					$this->load->view('transportation/rescue-home-transportation',$data);
				}
				//$this->load->view('transportation/rescue-home-transportation',$data);	
			}
			}
		}//else
	}

	public function route_type()
	{
		if($this->input->post('route_action'))
		{
			$transport_type = $this->input->post('transport_type');
			$this->session->set_userdata('route_action',1);
			$this->session->set_userdata('transport_type',$transport_type);
		}
		echo json_encode(1);	
	}
	
	#=========================================================
	#	Function : cancel_transport
	#	Purpose  : Cancel Transport
	#=========================================================		
	public function cancel_transport()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		//$this->load->library('pagination2');
		$data = array();
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$trasport_id 			= $this->uri->segment(2);
		if($trasport_id!='' || $trasport_id>'0')
		{
			$transport_details 		= $this->orgtrasnportation_model->get_transport_details($trasport_id);
			//echo "<pre>".$this->session->userdata('org_id');print_r($transport_details);die;
			if(empty($transport_details))
			{
				redirect($this->config->item('base_url'));
			}
			$this->session->set_userdata('org_id',isset($transport_details['0']['in_organization_id'])?$transport_details['0']['in_organization_id']:"");
			if($transport_details['0']['in_organization_id']!=$this->session->userdata('org_id') || $transport_details['0']['in_status']!='3')
			{
				$this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			$this->session->set_userdata('transport_id',$trasport_id );
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		if($this->input->post('action'))
		{
			$this->form_validation->set_rules('message', 'Message', 'trim|required');
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
			}
			else
			{
				//echo "<pre>";print_r($transport_doc);print_r($this->input->post());die;
			
				//echo "<pre>";print_r($this->input->post());die;
				$link_name = $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link = "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				
				$message_user = $this->common_function->custom_htmlentities($this->input->post('message'));
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link .'">'.$this->session->userdata('user_name').'</a>: '.$message_user.'</h2></div>';							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"st_notification_msg"	=> $message_user,
											"in_type"				=> 14,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				
				//Sending email to user
				if($this->input->post('user_email') != '') {
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("26");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
					if(isset($email_details[0]['st_email_body']))
					{
						$templete 	= 	$email_details[0]['st_email_body'];
						$subject	=	$email_details[0]['st_email_subject'];
						$to = $this->input->post('user_email');
						
						$user_message = explode(':',$this->input->post('message'));
						$patterns = array('%##url##%','%##user_name##%','%##feed_msg##%');
					
						$replacements = array(base_url(),$this->input->post('user_name_hidden'),(isset($user_message[1]))?$user_message[1]:$this->input->post('message'));
						$content = preg_replace($patterns,$replacements,$email_details[0]['st_email_body']);
						
						
						//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						
						$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
							{
								$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
							} else {
								$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
							}
						$content	=	str_replace("##fbtransportshare##",$fbtransportshare,$content);
						$content	=	str_replace("##DONATION##",$donation,$content);
						
						$category  =    $email_details[0]['st_category'];
						$this->common_function->send_mail($this->email, $to, 'Transport Feed', $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
						
					}
				}
				//End Sending email to user
				
				//code to add facebook post on users wall starts on 28Jan2015
				//if($_SERVER['REMOTE_ADDR']=='120.63.155.201' || $_SERVER['REMOTE_ADDR']=='123.238.36.22')
				//{
					 $fbconfig = array();
					 
					 $this->config->load('facebook');			 
					 $fbconfig['appid' ]  = $this->config->item('appId');
					 $fbconfig['secret']  = $this->config->item('secret');
					 $fbconfig['baseurl'] =  $this->config->item('baseurl');
					 
					 $this->load->library('facebook');	
					 $facebook = new Facebook(array(
						'appId' => $fbconfig['appid'],
						'secret' => $fbconfig['secret'],
						'cookie' => true,
						));
					
					$user = $facebook->getUser();
					//print_r($user);exit;
					
					//$userInfo           = $facebook->api("/$user");
					//print_r($userInfo);//exit;
					
					if($user)
					{
						try{
							$publishStream = $facebook->api("/$user/feed", 'post', array(
								'scrape'=>'true',
								'message' => $message_user,
								'link'    => 'https://app.doobert.com',
								'picture' => base_url().'assets/img/doobert-fb-logo.png',
								'name'    => 'Doobert',
								'description'=> 'animal rescue made simple.'
								)
							);
						} catch (FacebookApiException $e) {
							print_r($d);
						}
					}
				//}
				//code to add facebook post on users wall ends
										  
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				redirect($this->config->item('base_url')."org-cancel-transport/".$this->session->userdata('transport_id')."/");
			}
		}
		
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';	
		$rec_per_page = 10;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$userId						= $transport_details[0]['in_user_id'];
		$profile_setting			= $this->common_model->get_user_profile_setting($userId);		
		$drivers 					= $this->orgtrasnportation_model->get_driver_details($tra_id);
		$user_profile 				= $this->common_model->get_user_profile($this->session->userdata('userid'));
		
		$transport_info 			= (isset($transport_details['0']))?$transport_details['0']:"";
		$data['transport_details']	= $transport_info;
		$data['drivers']			= $drivers;
		$data['profile_setting']	= $profile_setting;
		
		//$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id,$limit,$rec_per_page);
		$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id);
		
		$totalrecord  				= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		//$data['totalrecord']		= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		$data['totalrecord']		= $totalrecord;
		
		$data['total_rows_tr']		= $totalrecord;
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'org-cancel-transport/';
		$config['base_url']		= $config['base_url'].$this->session->userdata('transport_id').'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '1';
		$config['file_path'] 		= $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		
/*		$jsFunction['name'] = 'show';
        $jsFunction['params'] = array();
        $this->pagination2->initialize_js_function($jsFunction);

        $data['base_url'] = $config['base_url'];
        $data['pagination'] = $this->pagination2->create_js_links();*/
		
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		
		
		
		$data['feeds']				= $feeds;
		$data['profile_info']		= $user_profile['0'];
		//echo "<pre>";print_r($user_profile['0']);die;
		
		//get transport monitors starts
		$transport_monitors 					= $this->orgtrasnportation_model->get_all_transport_monitors();
		
		$data['transport_monitors_details']		= $transport_monitors;
		
		$data['transport_monitors_count']		= count($transport_monitors);
		//get transport monitors ends
		
		$transport_files 			= $this->orgtrasnportation_model->get_transport_files($tra_id);
		$data['transport_files']	= $transport_files;	
		
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($tra_id);
		$data['transport_animals']	= $transport_animals;	
		
		//$this->load->view('transportation/org-trans-cancel',$data);	
		$this->load->view('transportation/rescue-home-transport-cancel',$data);
	}
	
	#=========================================================
	#	Function : confirm_transport
	#	Purpose  : Confirm Transport
	#=========================================================		
	public function confirm_transport()
	{
		/*if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		*/
		
		$trasport_id 			= $this->uri->segment(2);
		$legs_page 				= $this->uri->segment(3);
		if($trasport_id == '' && $trasport_id>'0')
		{	
			if(!$this->session->userdata('trasport_id'))
			{
				$trasport_id 			=	$this->session->userdata('transport_id');
			}
		}
		if($trasport_id!='' && $trasport_id>'0')
		{
			$transport_details 		= $this->orgtrasnportation_model->get_transport_details($trasport_id);
			if(empty($transport_details))
			{
				redirect($this->config->item('base_url'));
			}
			$this->session->set_userdata('transport_id',$trasport_id );
			/*if(!$this->session->userdata('userid'))
			{
				if($transport_details['0']['in_status']=='3')
				{
					$data['transport_details'] = $transport_details[0];
					//return $this->load->view('transportation/org-trans-cancel-public',$data);
					return $this->load->view('transportation/rescue-home-transport-cancel-public',$data);
					
				}else{
					$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
				}
				//echo $url;exit;
				$this->session->set_userdata('url_data',$url);
				redirect($this->config->item('base_url'));
			}*/
			/*if(!$this->session->userdata('org_id'))
			{*/
				$this->session->set_userdata('org_id',isset($transport_details['0']['in_organization_id'])?$transport_details['0']['in_organization_id']:"");
			/*}*/
			if(isset($transport_details['0']['in_organization_id']) && $transport_details['0']['in_organization_id']!=$this->session->userdata('org_id') || $transport_details['0']['in_status']!='2')
			{
				$this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] = '';
		$data['menu_no'] 		= 'yes';
		$data['legs_page'] 		= $legs_page;
		if($this->input->post('feeds'))
		{
			$this->form_validation->set_rules('message', 'Message', 'trim|required');
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
			}
			else
			{
				//echo "<pre>";print_r($transport_doc);print_r($this->input->post());die;
			
				//echo "<pre>";print_r($this->input->post());die;
			
				$link_name = $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link = "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				$message_user = $this->common_function->custom_htmlentities($this->input->post('message'));
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a>: '.$message_user.'</h2></div>';							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											//"st_notification_msg"	=> $notification_message,
											"st_notification_msg"	=> $message_user,
											"in_type"				=> 14,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				//Sending email to user
				if($this->input->post('user_email') != '') {
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("26");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
					if(isset($email_details[0]['st_email_body']))
					{
						$templete 	= 	$email_details[0]['st_email_body'];
						$subject	=	$email_details[0]['st_email_subject'];
						$to = $this->input->post('user_email');
						
						$user_message = explode(':',$this->input->post('message'));
						
						$transport_id='#DBT'.$this->session->userdata('transport_id');
						$sendername = $this->session->userdata('user_name');
						$clickhear ='<a href="'.base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id').'/#tab_2_3" target="_blank"> clicking here</a>';
							
						$patterns = array('%##url##%','%##user_name##%','%##feed_msg##%','%##sender_name##%','%##transport_id##%','%##click_here##%');
						$replacements = array(base_url(),$this->input->post('user_name_hidden'),(isset($user_message[1]))?$user_message[1]:$this->input->post('message'), $sendername , $transport_id , $clickhear);
						$content = preg_replace($patterns,$replacements,$email_details[0]['st_email_body']);
						$category  =    $email_details[0]['st_category'];

						$user_to_id = $this->common_model->get_user_id_by_email($to);
						
						$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);		
						$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);
						
						
						//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
						
						$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
							{
								$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
							} else {
								$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
							}
						$content	=	str_replace("##fbtransportshare##",$fbtransportshare,$content);
						$content	=	str_replace("##DONATION##",$donation,$content);
						
						$send_email = 0;							
						$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
						if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
						{
							$send_email = 0;										
						}
						
						$email_template_id = $email_details[0]['in_email_id'];
						$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
						if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
						{
							$send_email = 1;
						}	
						
						if($send_email == 0)
						{
							$transport_setting = $this->common_model->user_notification_setting($user_to_id);
							if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
							{
								$send_email = 1;
							}								
						}
						if($send_email == '1')
						{
							$this->common_function->send_mail($this->email, $to, $subject, $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
							//echo $this->email->print_debugger();die;
						}
						
					}
				}
				//End Sending email to user	
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				$feed_msg = explode(':',$this->input->post('message'));
				if(isset($feed_msg) && isset($feed_msg[1]) && $feed_msg[1] != '')
				{
					//$this->input->post('user_email')
					$user_to_id = $this->common_model->get_user_id_by_email($this->input->post('user_email'));
					if(isset($user_to_id) && $user_to_id > 0)
					{
						$data['user_feed_data'] = array('in_user_from_id'	=>	$this->session->userdata('userid'),
														'in_user_to_id'	=>	$user_to_id,
														'st_feed_msg'	=>	trim($feed_msg[1]),
														'dt_created'	=>	date('Y-m-d H:i:s'),
														'in_deleted'	=>	0,
														);
						
						$this->common_model->add_user_feed($data['user_feed_data']);
					}
				}
				redirect($this->config->item('base_url')."org-confirm-transport/".$this->session->userdata('transport_id')."/#tab_2_3");
			}
		}
		
		if($this->input->post('mark_leg_completed'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			if($this->input->post("leg_completed_id")>0)
			{
				$array_update = array("in_status"=>"1");
				$leg_id = $this->input->post("leg_completed_id");
				
				//Add Notification
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"st_notification_msg"	=> "Leg".$this->input->post('leg_completed_no'),
											"in_type"				=> 21,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id = $this->common_model->insert_data("tbl_notification",$arr_notification);
				//End Add Notification
				
				$this->orgtrasnportation_model->update_legs($array_update,$leg_id);
			}
			$this->session->set_flashdata('google_leg', 'Transportation leg(s) successfully marked as completed.');	
			redirect($this->config->item('base_url')."org-confirm-transport/".$this->session->userdata('transport_id')."/");	
		}
		
		if($this->input->post('unconf_transport'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			 $status_arr = array("in_status" => "1",
								"in_modified_by" => $this->session->userdata('userid'),
								"dt_modified" => date("Y-m-d H:i:s")
								);
			$this->orgtrasnportation_model->update_transport_details($status_arr);
			
			$this->session->set_flashdata('unconfirm_msg', 'Transportation un-confirmed successfully.');	
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");	
		}
			
		if($this->input->post('recent_activity'))
		{
			//echo "<pre>";print_r($this->input->post());
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');
			$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
			//echo $this->input->post('recent_activity')."==".$this->session->userdata('recent_activity');die;
		}
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$userId						= $transport_details[0]['in_user_id'];
		$profile_setting			= $this->common_model->get_user_profile_setting($userId);
		
		if ($this->input->post('rescue_story_action') == 'rescue_story_action')      {
			//echo 'save  rescue_story_action';
			//echo '<pre/>';print_r($_POST);
			//exit;
			
			$form_field	=	array('story_title'			=> "",
							  "rescue_story"			=> "",
							  "txttranstogether"		=> "",
							  "txtmemorable"			=> "",
							  "txtbetter"				=> "",
							  "txtpassenger"			=> "",
							  "txttakehelp"				=> "",
							  "is_round"                => ""
							  
							 // "rescue_transport_photo"	=> "",
							 // "story_video_link" 		=> ""
					  	 	);
			
			foreach($form_field as $key => $value)	
			{	
				$data['post_data'][$key] = trim($this->input->post($key));	
			}
			
			$this->form_validation->set_rules('story_title', 'Story Title', 'trim|required');
			if($data['post_data']['is_round'] == 0){
			$this->form_validation->set_rules('rescue_story', 'Rescue Story', 'trim|required');	
			}
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('transportation/org-trans-scheduled',$data);	
			}
			else
			{
				
				if($data['post_data']['is_round'] == 1)
					{   
				
						if($_POST['txttranstogether'] !=''){
						$rescue_prompt[0]['Q1']  = '<p>'.'Tell us how the transport came together?'.'</p>';
						$rescue_prompt[0]['txttranstogether']	=	'<p>'.$this->input->post('txttranstogether').'</p>';					
						
						}
						
						
						if($_POST['txtmemorable'] !=''){
						$rescue_prompt[0]['Q2']  = '<p>'.'Were there any memorable moments from this transport?'.'</p>';
						$rescue_prompt[0]['txtmemorable']		=	'<p>'.$this->input->post('txtmemorable').'</p>';
										
						
						}
						
						if($_POST['txtbetter'] !=''){
						$rescue_prompt[0]['Q3'] = '<p>'.'What could have made this transport better?'.'</p>';
						$rescue_prompt[0]['txtbetter']	        =	'<p>'.$this->input->post('txtbetter').'</p>';						
						
						}
						
						if($_POST['txtpassenger'] !=''){
						$rescue_prompt[0]['Q4']         = '<p>'.'Tell us about your passenger/s (behavior, demeanor, etc)?'.'</p>';
						$rescue_prompt[0]['txtpassenger']		=	 '<p>'.$this->input->post('txtpassenger').'</p>';					
						
						}
						
						if($_POST['txttakehelp'] !=''){
						$rescue_prompt[0]['Q5'] = '<p>'.'Why did you take this transport, what compelled you to help?'.'</p>';
						$rescue_prompt[0]['txttakehelp']		=	$this->input->post('txttakehelp').'<br>';		
						
						}
						
						$rescue_prompt_val	=	serialize($rescue_prompt);
						
						$data['post_data']['rescue_story'] = $rescue_prompt_val;
					}
				
				
				$rescue_data = array("in_transportation_id" => $tra_id,
									"st_rescue_title" 		=> $data['post_data']['story_title'],
									"st_rescue_story" 		=> $data['post_data']['rescue_story'],
									"in_created_by"			=> $this->session->userdata('userid'),
									"dt_created" 			=> date("Y-m-d H:i:s"),
									"in_deleted" 			=> "0",
									"in_flag" 				=> ($data['post_data']['is_round'] == 1)? 1: 0
									);
				$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);
				
				$transport_doc = explode(",", $this->input->post('rescue_transport_photo'));
				for ($a = 0; $a < count($transport_doc); $a++) {
					$file_details = array();
					if ($transport_doc[$a] != '') {
						$file_details = array("in_transportation_id" => $tra_id,
							"in_transport_story_id" => $last_insert_rescue_id,
							"st_file_name" => $transport_doc[$a],
							"st_file_type" => "P",
							"in_created_by"	=> $this->session->userdata('userid'),
							"dt_created" => date("Y-m-d H:i:s"),
							"in_deleted" => "0"
						);
						$this->orgtrasnportation_model->add_transport_photo($file_details);
					}
				}
				
				$story_video_link = trim($this->input->post('story_video_link'));
				if(isset($story_video_link) && $story_video_link != '')
				{
				
					$story_video_img_link = trim($this->input->post('story_video_img_link'));
					$story_video_img = $this->get_video_image($story_video_img_link);
					
					//echo 'story_video_img '.$story_video_img ;
					//exit;
					$story_file_details = array("in_transportation_id" => $tra_id,
										"in_transport_story_id" => $last_insert_rescue_id,
										"st_file_name" => trim($story_video_img),
										"st_file_type" => 'V',
										"st_video_provider" => trim($this->input->post('story_video_provider')),
										"st_video_id" => trim($this->input->post('story_video_id')),
										"in_created_by"	=> $this->session->userdata('userid'),
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
									);
					$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					
				}
				
				$this->load->library('email');
				$email_details = $this->common_model->get_email_containt("80");
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				if(isset($email_details[0]['st_email_body']))
				{
					$full_name	=	$this->session->userdata('user_name').' '.$this->session->userdata('last_name');
					
					$templete  = $email_details[0]['st_email_body'];
					$templete  = str_replace("##user_name##",$full_name,$templete);
					$templete  = str_replace("##admin_url##",$this->config->item('base_url').'administration.php/sysmanage/detail_transport_story/'.$last_insert_rescue_id,$templete);
					$templete  = str_replace("##story_id##",$last_insert_rescue_id,$templete);
					$templete  = str_replace("##current_year##",date('Y'),$templete);
					$templete  = str_replace("##DONATION##",$donation,$templete);
									
					$admin_list = $this->common_model->get_admin_list();
					for($a=0;$a<count($admin_list);$a++)
					{
						$permission = unserialize($admin_list[$a]['st_permission']); 
						if(isset($permission) &&  !empty($permission) && in_array('New_Rescue_Story',$permission))
						{
						
							$strMail 	= 	$templete;
							$to			=	$admin_list[$a]['email_address'];
							//$to			=	'ghanshyam.maurya@pulsesolutions.net';
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail;
							$category   =   $email_details[0]['st_category'];
							$this->common_function->send_mail($this->email, $to, $subject, $message, $this->session->userdata('email'),$cc ='', $full_name,$this->email,$category);
						}
					}
				}
							
			}
            $this->session->set_userdata('attach_photo_auto_login',1);
            $this->session->set_flashdata('rescue_story', 'Transportation rescue story uploaded successfully.');
            redirect($this->config->item('base_url') . "org-confirm-transport/" . $this->session->userdata('transport_id') . "/");
        }
		 
		

		if ($this->input->post('rescue_story_action') == 'rescue_story_edit_action') {			
			
			$form_field	=	array("story_title"	    => "",
							  	  "rescue_story"	=> "",	
								  "story_id"		=> "",
								  "txttranstogether"		=> "",
								  "txtmemorable"			=> "",
								  "txtbetter"				=> "",
								  "txtpassenger"			=> "",
								  "txttakehelp"				=> ""
					  	 	);
			
			foreach($form_field as $key => $value)	
			{	
				$data['post_data'][$key] = trim($this->input->post($key));	
			}
			
			$this->form_validation->set_rules('story_title', 'Story Title', 'trim|required');
			if($data['post_data']['is_round'] == 0){
			$this->form_validation->set_rules('rescue_story', 'Rescue Story', 'trim|required');	
			}
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('transportation/org-transport-confirm', $data);
			}
			else
			{
			
			
				if($data['post_data']['is_round'] == 1)
					{   
				
						if($_POST['txttranstogether'] !=''){
						$rescue_prompt[0]['Q1']  = '<p>'.'Tell us how the transport came together?'.'</p>';
						$rescue_prompt[0]['txttranstogether']	=	'<p>'.$this->input->post('txttranstogether').'</p>';					
						
						}
						
						
						if($_POST['txtmemorable'] !=''){
						$rescue_prompt[0]['Q2']  = '<p>'.'Were there any memorable moments from this transport?'.'</p>';
						$rescue_prompt[0]['txtmemorable']		=	'<p>'.$this->input->post('txtmemorable').'</p>';
										
						
						}
						
						if($_POST['txtbetter'] !=''){
						$rescue_prompt[0]['Q3'] = '<p>'.'What could have made this transport better?'.'</p>';
						$rescue_prompt[0]['txtbetter']	        =	'<p>'.$this->input->post('txtbetter').'</p>';						
						
						}
						
						if($_POST['txtpassenger'] !=''){
						$rescue_prompt[0]['Q4']         = '<p>'.'Tell us about your passenger/s (behavior, demeanor, etc)?'.'</p>';
						$rescue_prompt[0]['txtpassenger']		=	 '<p>'.$this->input->post('txtpassenger').'</p>';					
						
						}
						
						if($_POST['txttakehelp'] !=''){
						$rescue_prompt[0]['Q5'] = '<p>'.'Why did you take this transport, what compelled you to help?'.'</p>';
						$rescue_prompt[0]['txttakehelp']		=	$this->input->post('txttakehelp').'<br>';		
						
						}
						
						$rescue_prompt_val	=	serialize($rescue_prompt);
						
						$data['post_data']['rescue_story'] = $rescue_prompt_val;
					}
				
			    $story_id	=	$data['post_data']['story_id'];
				$rescue_data = array("st_rescue_title" 	=> $data['post_data']['story_title'],
									 "st_rescue_story" 	=> $data['post_data']['rescue_story'],
									 "in_created_by"	=> $this->session->userdata('userid'),
									 "dt_created" 		=> date("Y-m-d H:i:s"),
									 "in_flag" => isset($data['post_data']['is_round'])? 1: 0
									);
			     
				$this->orgtrasnportation_model->update_transport_rescue_details($rescue_data,$story_id);
				
				$transport_doc = explode(",", $this->input->post('rescue_transport_photo'));
				
				for ($a = 0; $a < count($transport_doc); $a++) {
					$file_details = array();
					if ($transport_doc[$a] != '') {
						$file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
												"in_transport_story_id" => $story_id,
												"st_file_name" => $transport_doc[$a],
												"st_file_type" => "P",
												"in_created_by"	=> $this->session->userdata('userid'),
												"dt_created" => date("Y-m-d H:i:s")							
						);
						$this->orgtrasnportation_model->add_transport_photo($file_details);
					}
				}
				
				$story_video_link = trim($this->input->post('story_video_link'));
				if(isset($story_video_link) && $story_video_link != '')
				{
				
					$story_video_img_link = trim($this->input->post('story_video_img_link'));
					$story_video_img = $this->get_video_image($story_video_img_link);
					
					
					$story_file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
												"in_transport_story_id" => $story_id,
												"st_file_name" => trim($story_video_img),
												"st_file_type" => 'V',
												"st_video_provider" => trim($this->input->post('story_video_provider')),
												"st_video_id" => trim($this->input->post('story_video_id')),
												"in_created_by"	=> $this->session->userdata('userid'),
												"dt_created" => date("Y-m-d H:i:s")												
									);
					$this->orgtrasnportation_model->update_rescue_transport_photo($story_id);
					$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					
				}				
							
			}
            $this->session->set_userdata('attach_photo_auto_login',1);
            $this->session->set_flashdata('rescue_story', 'Transportation rescue story uploaded successfully.');
            redirect($this->config->item('base_url') . "org-confirm-transport/" . $this->session->userdata('transport_id') . "/");			
			
        }
		 
		 
		if ($this->input->post('transport_photo_action')) {
			
			$rescue_data = array("in_transportation_id" => $tra_id,
									"st_rescue_title" => '',
									"st_rescue_story" => '',
									"in_created_by"	=> $this->session->userdata('userid'),
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0"
									);
			$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);
			
            $transport_doc = explode(",", $this->input->post('transport_photo'));
            for ($a = 0; $a < count($transport_doc); $a++) {
                $file_details = array();
                if ($transport_doc[$a] != '') {
                    $file_details = array("in_transportation_id" => $tra_id,
						"in_transport_story_id" => $last_insert_rescue_id,
                        "st_file_name" => $transport_doc[$a],
						"st_file_type" => 'P',
						"in_created_by"	=> $this->session->userdata('userid'),
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->orgtrasnportation_model->add_transport_photo($file_details);
                }
            }
			
			$transport_video_link = trim($this->input->post('transport_video_link'));
			if(isset($transport_video_link) && $transport_video_link != '')
			{
				$transport_video_img_link = trim($this->input->post('transport_video_img_link'));
				$transport_video_img = $this->get_video_image($transport_video_img_link);
					
				$file_details = array("in_transportation_id" => $tra_id,
									"in_transport_story_id" => $last_insert_rescue_id,
									"st_file_name" => trim($transport_video_img),
									"st_file_type" => 'V',
									"st_video_provider" => trim($this->input->post('transport_video_provider')),
									"st_video_id" => trim($this->input->post('transport_video_id')),
									"in_created_by"	=> $this->session->userdata('userid'),
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0"
								);
				$this->orgtrasnportation_model->add_transport_photo($file_details);
				
			}
			
			//$this->session->set_flashdata('message_sys', 'Transportation photo(s)/video link uploaded successfully.');
			$this->session->set_userdata('attach_photo_auto_login',1);
			$this->session->set_flashdata('google_leg', 'Transportation photo(s)/video link uploaded successfully.');
            redirect($this->config->item('base_url') . "org-confirm-transport/" . $this->session->userdata('transport_id') . "/");
        }
		
		
		$transport_files 			= $this->orgtrasnportation_model->get_transport_files($tra_id);
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($tra_id);
		$user_profile = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['user_profile'] = isset($user_profile[0])?$user_profile[0]:"";
		$transport_info 			= (isset($transport_details['0']))?$transport_details['0']:"";
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user("Null");	
		$drivers 					= $this->orgtrasnportation_model->get_driver_details($tra_id);
		
		$non_doobert_drivers 		= $this->orgtrasnportation_model->get_non_doobert_driver_details($tra_id);
		
		$num_driver 				= $this->orgtrasnportation_model->get_driver_details($tra_id,"yes");
		$data['num_driver']			= count($num_driver);
		
		$non_doobert_participants_cnt = 0;
		if(isset($leg_details) && !empty($leg_details))
		{
			foreach($leg_details as $legkey=>$legval)
			{
				if(isset($legval['non_doobert_participants_cnt']) && !empty($legval['non_doobert_participants_cnt']))
				{
					$non_doobert_participants_cnt = $non_doobert_participants_cnt + $legval['non_doobert_participants_cnt'];
				}
			}
		}		
		$data['non_doobert_participants_cnt']	= $non_doobert_participants_cnt;
		
		$legs_count = (count($leg_details))/8;
		$pages_count =  ceil($legs_count);
		$leg_page_link = array();
		//echo $pages_count."<br>";
		for($m=1;$m<=$pages_count;$m++)
		{
			$selected = ($legs_page)?($legs_page):"1";
			$next_loop = ((8*($m < 1 ? 1 : $m)));
			$first_loop = (8*($m < 1 ? 1 : $m-1))<count($leg_details)?((8*($m < 1 ? 1 : $m-1))):(count($leg_details));	
	
			$first_loop = ($first_loop<=0?"1":($first_loop>=8)?$first_loop+1:$first_loop);
			$next_loop = count($leg_details)>$next_loop?$next_loop:count($leg_details);
			//echo ($first_loop<=0?"1":$first_loop)."=".$next_loop."<br>";
			//$leg_page_link[$m] =array("text"=>str_pad($first_loop,2,"0",STR_PAD_LEFT)."-".str_pad($next_loop,2,"0",STR_PAD_LEFT),"selected"=>($m==$selected)?$selected:"");
			$leg_page_link[$m] =array("text"=>str_pad($first_loop,2,"0",STR_PAD_LEFT)."-".str_pad($next_loop,2,"0",STR_PAD_LEFT),"selected"=>($m==$selected)?$selected:"","start_li"=>($m==$selected)?$first_loop:"","end_li"=>($m==$selected)?$next_loop:"");  	
		}
		$data['leg_page_link']		= $leg_page_link;
		$data['drivers']			= $drivers;
		$transport_info['cover_dis_per'] 	= '0';
		$transport_info['remin_distance']	= '0';
		if(isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance']>0)
		{
			$total_dist_per 					= ($transport_info['in_distance_covered']*100)/$transport_info['in_tot_distance'];
			//$transport_info['cover_dis_per'] 	= number_format($total_dist_per);
			$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['remin_distance'] 	= number_format(($transport_info['in_tot_distance']-$transport_info['in_distance_covered']),"2",".","");
		}
		$data['transport_details']	= $transport_info;
		$data['transport_files']	= $transport_files;	
		$data['transport_animals']	= $transport_animals;	
		$data['leg_details']		= $leg_details;	
		$data['drivers']			= $drivers;
		$data['profile_setting']	= $profile_setting;	
		$data['non_doobert_drivers']			= $non_doobert_drivers;
		


		#================ Feeds start==============#
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';	
		$rec_per_page = 10;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		$tra_id						= $this->session->userdata('transport_id');
		$user_profile 				= $this->common_model->get_user_profile($this->session->userdata('userid'));
		$drivers 					= $this->orgtrasnportation_model->get_driver_details($tra_id);
		$data['drivers']			= $drivers;
		//$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id,$limit,$rec_per_page);
		$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id);
		$totalrecord  				= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		
		
		//$data['total_rows_tr']		= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		$data['total_rows_tr']		= $totalrecord;
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'org-confirm-transport/';
		$config['base_url']		= $config['base_url'].$this->session->userdata('transport_id').'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '1';
		$config['file_path'] 		= $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		
/*		$jsFunction['name'] = 'show';
        $jsFunction['params'] = array();
        $this->pagination2->initialize_js_function($jsFunction);

        $data['base_url'] = $config['base_url'];
        $data['pagination'] = $this->pagination2->create_js_links();*/
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		$data['feeds']				= $feeds;
		$data['profile_info']		= $user_profile['0'];
		#================ Feeds end==============#
		
		$transport_photos 			= $this->orgtrasnportation_model->get_transport_photos($tra_id);
		$data['transport_photos']	= $transport_photos;
		//echo "<pre>";print_r($transport_photos);die;	
		//echo "<pre>";print_r($leg_details);die;	
		
		$transport_story_photos = $this->orgtrasnportation_model->get_transport_story_photos($tra_id);
		$transport_story_photo_data = array();
		if(isset($transport_story_photos) && !empty($transport_story_photos))
		{
			foreach($transport_story_photos as $story_key=>$story_val)
			{
				$transport_story_photo_data[$story_key]['user_name'] = $story_val['st_display_name'];
				$transport_story_photo_data[$story_key]['in_id'] = $story_val['in_id'];
				$transport_story_photo_data[$story_key]['in_created_by'] = $story_val['in_created_by'];
				if(isset($story_val['st_rescue_title']) && $story_val['st_rescue_title'] != '')
				{
					$transport_story_photo_data[$story_key]['type'] = 'S';
					$transport_story_photo_data[$story_key]['title'] = $story_val['st_rescue_title'];
					$transport_story_photo_data[$story_key]['desc'] = $story_val['st_rescue_story'];
					$transport_story_photo_data[$story_key]['flag'] = $story_val['in_flag'];
					
					$transport_story_pics = $this->orgtrasnportation_model->get_story_photos_by_id($story_val['in_id'],$tra_id,$story_val['in_created_by']);
					
					if(isset($transport_story_pics) && !empty($transport_story_pics))
					{
						foreach($transport_story_pics as $pics)
						{
							$transport_story_photo_data[$story_key]['photo_id'][]	= $pics['in_transport_photo_id'];
							if($pics['st_file_type'] == 'P')
							{
								$transport_story_photo_data[$story_key]['pics'][]	= $pics['st_file_name'];
							}
							if($pics['st_file_type'] == 'V')
							{
								$transport_story_photo_data[$story_key]['videos'][]	= $pics['st_file_name'];
								$transport_story_photo_data[$story_key]['video_provider'][]	= $pics['st_video_provider'];
								$transport_story_photo_data[$story_key]['video_id'][]	= $pics['st_video_id'];
							}
						}
					}
					
				}else{
					$transport_story_photo_data[$story_key]['type'] = 'P';
					$transport_story_photo_data[$story_key]['title'] = '';
					$transport_story_photo_data[$story_key]['desc'] = '';
					$transport_photos = $this->orgtrasnportation_model->get_transport_photos_by_id($story_val['in_id'],$tra_id,$story_val['in_created_by']);
					if(isset($transport_photos) && !empty($transport_photos))
					{
						foreach($transport_photos as $photo)
						{
							$transport_story_photo_data[$story_key]['photo_id'][]	= $photo['in_transport_photo_id'];
							if($photo['st_file_type'] == 'P')
							{
								$transport_story_photo_data[$story_key]['pics'][]	= $photo['st_file_name'];
							}
							if($photo['st_file_type'] == 'V')
							{
								$transport_story_photo_data[$story_key]['videos'][]	= $photo['st_file_name'];
								$transport_story_photo_data[$story_key]['video_provider'][]	= $photo['st_video_provider'];
								$transport_story_photo_data[$story_key]['video_id'][]	= $photo['st_video_id'];
							}
						}
					}
				}
			}
		}
		
		//echo '<pre/>';print_r($transport_story_photo_data);exit;
		$data['transport_story_photo_data'] = $transport_story_photo_data;
		
		//get transport monitors starts
		$transport_monitors 					= $this->orgtrasnportation_model->get_all_transport_monitors();
		
		$data['transport_monitors_details']		= $transport_monitors;
		
		$data['transport_monitors_count']		= count($transport_monitors);
		//get transport monitors ends
		
		$permission_details 		= '';
		$permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		//echo "<pre>";print_r($permission);die;
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if($owner_id>0 && $owner_id == $this->session->userdata('userid'))
		{
			$permission_details = array(); 
			$permission_details['transport']		= array("transport_cr","transport_ed","transport_cnf","transport_del");
			$permission_details['fundraiser']		= array("fundraiser_cr","fundraiser_ed","fundraiser_cnf","fundraiser_del");
			$permission_details['profile_manager']	= array("pr_manager_cr","pr_manager_ed","pr_manager_cnf","pr_manager_del");
		}
		elseif(!empty($permission))
		{
			$permission_details = unserialize($permission);
		}
		else
		{
			$permission_details = '';
		}
		$data['permission'] = $permission_details;
			
		//$this->load->view('transportation/org-transport-confirm',$data);	
		$this->load->view('transportation/rescue-home-transport-confirm',$data);	
	}
	
	#=========================================================
	#	Function : transport_add_email
	#	Purpose  : Send email to admin for request organization
	#=========================================================		
	function transport_add_email($admin_list,$leg_type,$transport_details)
	{
		$transport_legs	= $this->orgtrasnportation_model->get_trans_legs();
	
		$this->load->library('email');
		//$email_details = $this->common_model->get_email_containt("4");
		if($transport_details['st_trans_type'] == 'P')
		{	
			//$email_details = $this->common_model->get_email_containt("4");
			$email_details = $this->common_model->get_email_containt("71");
        }else{
			//$email_details = $this->common_model->get_email_containt("46");
			$email_details = $this->common_model->get_email_containt("72");
		}
		//echo "<pre>";print_r($transport_details);echo "</pre>";die;
		$animals_cnt = 0 ;
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($this->session->userdata('transport_id'));
		$resuce_template = '';
		$resuce_store = $this->common_model->get_resuce_store($transport_details['in_organization_id']);
		if(count($resuce_store)>0)
		{	
				$resuce_template = $this->common_model->resuce_store_template($resuce_store);
		}
		
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
		
		if(isset($transport_animals) && !empty($transport_animals))
		{
			$animals_cnt = count($transport_animals);	
		}
		
		if(isset($email_details[0]['st_email_body']))
		{
			$leg_str = '';
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			$templete	= 	$email_details[0]['st_email_body'];
			$templete  	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  	= 	str_replace("##transport_coordinator_display_name##",ucfirst($this->session->userdata('user_name')),$templete);
			
			$templete  	= 	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	=	str_replace("##Pickup_date##",date("m/d",strtotime($transport_details['dt_pickup_date'])),$templete);
			$templete	=	str_replace("##Dropoff_date##",date("m/d",strtotime($transport_details['dt_target'])),$templete);
			
			$templete  	= 	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$templete);
			//$templete  	= 	str_replace("##transport_day,transport_date##",date("l, M d",strtotime($transport_details['dt_target'])),$templete);
			$templete  	= 	str_replace("##transport_day,transport_date##",date("l, M d",strtotime($transport_details['dt_pickup_date'])),$templete);
			$templete  	= 	str_replace("##sending_city/state/zip_code##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'].", ".$transport_details['st_from_zip'],$templete);
			$templete  	= 	str_replace("##receiving_city/state/zip_code##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'].", ".$transport_details['st_to_zip'],$templete);
			$templete	=	str_replace("##schedule##",$this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/",$templete);
			//
			$templete	=	str_replace("##sending_state##",$transport_details['st_from_state'],$templete);
			$templete	=	str_replace("##receiving_state##",$transport_details['st_to_state'],$templete);
			$templete	=	str_replace("##animal_count##",$animals_cnt,$templete);
			$templete   =   str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			$templete 	=   str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);	
			
			// added by sadique
			$templete 	=   str_replace("##coordinator_email##",$transport_details['st_email'],$templete);	
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
			$join_url = base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id');
			$leg_str .= '<table width="100%" border="0" cellpadding="5">';
		
		if(!empty($transport_legs)) {	
			foreach($transport_legs as $row) {
				if($row['route_type_id'] == 0 || $row['route_type_id'] == 1) {
					$pick_address = $row['pick_city'].', '.$row['pick_state'].', '.$row['pick_country'].', '.$row['pick_zip'];
					$drop_address = $row['drop_city'].', '.$row['drop_state'].', '.$row['drop_country'].', '.$row['drop_zip'];
				$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><span style="color: #333333;">From</span> '.$pick_address.' <br/><span style="color: #333333;">to</span> '.$drop_address.'</td><td style="padding: 20px;" align="right"><a href="'.$join_url.'" style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View Leg">View Leg</a></td></tr></tbody></table>';
				} else {
					$o_pick_address = $row['o_pick_city'].', '.$row['o_pick_state'].', '.$row['o_pick_zip'].', '.$row['o_pick_country'];
					$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 10px;"><span style="color: #333333;">Meeting Location</span>'.$o_pick_address.'</td><td style="padding: 10px;" align="right"><a href="'.$join_url.'"  style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View Leg">View Leg</a></td></tr></tbody></table>';
				}
				
			}
		} else {
			$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><a href="'.$join_url.'" style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View">View this Transport</a></td></tr></tbody></table>';
		}	
			$leg_str .= '</table>';
			
			$animal_str = '';
			$animal_image = '';
			
			//Animal_details
			$org_image = $this->orgtrasnportation_model->get_org_image($this->session->userdata('org_id'));
			$i=0;
			if(!empty($transport_animals)) {
				foreach($transport_animals as $rows) {
					//if($i>1) { break;}
					$animal_url = base_url().'animal-'.$rows['in_animal_id'].'-'.$this->common_function->get_filtered_name($rows['st_animal_name']);
					
					if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
						$animal_image = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
					} else {
						$animal_image = base_url().'upload/org_doc/thumb/'.$org_image;
					}
					
					//$animal_str .= '<tr><td style="padding:25px 0;border-bottom:1px solid #ebebeb;border-top:1px solid #ebebeb;">';
  
  //$animal_str .= '<table align="left" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td><table align="center" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td style="font-family: Arial, sans-serif; font-size: 14px; color: #4c4c4c; text-align:justify; line-height: 20px;">'.$rows['st_profile_story'].' <span style="display:block"><a href="'.$animal_url.'" style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px;border-radius:3px;display:inline-block;margin:15px 0 0;" title="View Animal Profile"><img src="http://app.doobert.com/assets/img/email_img/animal_profile_icon.gif" style="border:none;vertical-align:top;padding-top:3px;border:none" /> View Animal Profile</a></span></td></tr></tbody></table></td></tr></tbody></table>';
  
 $animal_str .= '<div style="display:inline-block; margin-bottom:20px; text-align: center; vertical-align:top;"><a href="'.$animal_url.'" style="padding: 6px; margin: 0 10px 10px 0; border: 1px solid #e1e1e1; background-color: #f4f4f4; position: relative; display: block; height: 78px; width:87px;"><img src="'.$animal_image.'" alt="img5" style="margin: auto; max-width:100%; max-height:100%;"/></a><span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; display:block">'.$rows['st_animal_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; display:block;">'.$rows['st_animal_breed_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#444; display:block;">'.$rows['st_animal_type_name'].'</span></div>';
  
  					$i++;
				}
				$animal_str .= '<div style="clear:both;margin: 0px;padding: 0px;"></div>';
			}
			$templete	=	str_replace("##animal_details##",$animal_str,$templete);
			//End Animal Details
			
			$templete	=	str_replace("##leg_detail##",$leg_str,$templete);
			
			$share_url = base_url().'org-transportation-scheduled/'.$transport_details['in_transportation_id'];
			
			// added by sadique								
				$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));

				//print_r($org_details); die;
				$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
				if($share_template == 1)
				{
					$main_image = $this->generate_fb_image_option1();
				} 						
				
				
				else if($share_template == 5){						
					$main_image = $this->generate_fb_image_option5();						
				}
				else if($share_template == 6){						
					$main_image = $this->generate_fb_image_option6();						
				}
				else if($share_template == 7){						
					$main_image = $this->generate_fb_image_option7();						
				}
				else if($share_template == 8){						
					$main_image = $this->generate_fb_image_option8();						
				}				
				
				else {
					$main_image = $this->generate_fb_image($share_template);
				}	

				//$fbtransportshare = base_url().'upload/fb_transport_share/'.$main_image;
				$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
								if(file_exists($this->config->item('upload').'fb_transport_share/'.$main_image))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}	
			$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);	
			$templete	=	str_replace("##DONATION##",$donation,$templete);	
			
			$viewtransportanimal = base_url().'org-transportation-scheduled/'.$transport_details['in_transportation_id'].'/#animrescue';
			
			
			
			$templete	=	str_replace("##jointransport##",$join_url,$templete);
			
			$templete	=	str_replace("##viewtransportanimal##",$viewtransportanimal,$templete);
			
			$title = 'DOOBERT -Transportation '.$orgcode.htmlspecialchars($transport_details['in_transportation_id']);
			if($transport_details['perc']>0)
				{
					$transport_comp_perc = (($transport_details['perc']>100)? "100%":$transport_details['perc']."%");
				}
				else
				{
					$transport_comp_perc = "0%";
				}
				
			$description = "";
						
			$description .= date("l, M",strtotime($transport_details['dt_target']));
			$description .= date(" d",strtotime($transport_details['dt_target']));
			$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;".$orgcode.$transport_details['in_transportation_id']."&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			$description .= "\r\n";
			$description .= $transport_details['st_from_street']? $this->common_function->custom_htmlentities($transport_details['st_from_street']).",":"";
			$description .= $transport_details['st_from_city']? $this->common_function->custom_htmlentities($transport_details['st_from_city']).",":"";
			$description .= $transport_details['st_from_state']? $this->common_function->custom_htmlentities($transport_details['st_from_state']).",":"";
			$description .= $transport_details['st_from_zip']? $this->common_function->custom_htmlentities($transport_details['st_from_zip']).",":"";
			$description .= ' to ';
			$description .= $transport_details['st_to_street']? $this->common_function->custom_htmlentities($transport_details['st_to_street']).",":"";
			$description .= $transport_details['st_to_city']? $this->common_function->custom_htmlentities($transport_details['st_to_city']).",":"";
			$description .= $transport_details['st_to_state']? $this->common_function->custom_htmlentities($transport_details['st_to_state']).",":"";
			$description .= $transport_details['st_to_zip']? $this->common_function->custom_htmlentities($transport_details['st_to_zip']).",":"";
			$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			$description .= "\r\n";
			$description .= $transport_comp_perc ." of ".($transport_details['in_tot_distance']!=''? $transport_details['in_tot_distance']:"0").'miles covered.';
			
			
			$description_str = str_replace('&nbsp;',' ',$description);
			//$description_str = str_replace(array("\r\n","\r","\n"), "<br>",$description_str);
						
			$share_facebook_str  = ''; 
			$share_facebook_str .= '<a href="https://www.facebook.com/sharer/sharer.php?u='.urlencode($share_url).'&t='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Facebook.jpg" alt="Facebook" title="Facebook" /></a>';
			$templete	=	str_replace("##share_facebook##",$share_facebook_str,$templete);
			
			$share_twitter_str = ''; 
			
			$share_twitter_str .= '<a href="http://twitter.com/share?url='.urlencode($share_url).'&text='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Twitter.jpg" alt="Twitter" title="Twitter" /></a>';

			$templete	=	str_replace("##share_twitter##",$share_twitter_str,$templete);
			
			$share_gplus_str = ''; 
			$share_gplus_str .= '<a href="https://plus.google.com/share?url='.urlencode($share_url).'"><img src="https://app.doobert.com/assets/img/G-Plus.jpg" alt="G-Plus" title="G-Plus" /></a>';
			
			
                    
			$templete	=	str_replace("##share_gplus##",$share_gplus_str,$templete);
						
			// for latest Blog.
			$blog_details = $this->get_doobert_recent_post();
			
			if(!empty($blog_details))
			{
			$templete   =  str_replace("##blog_title##",$blog_details['title'],$templete);
			$templete   =  str_replace("##blog_content##",$blog_details['content'],$templete);
			$templete   =  str_replace("##blog_link##",$blog_details['blog_link'],$templete);
			}
			
			$strMail 	= 	$templete;
			
			$subject	=	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$email_details[0]['st_email_subject']);
			/*$subject	=	str_replace("##shortdate##",date("l, M d",strtotime($transport_details['dt_target'])),$subject);
			$subject	=	str_replace("##sending_state##",$transport_details['st_from_state'],$subject);
			$subject	=	str_replace("##receiving_state##",$transport_details['st_to_state'],$subject);*/
			//$subject	=	str_replace("##transport_day,transport_date##",date("l, M d",strtotime($transport_details['dt_target'])),$subject);
			//$subject  	= 	str_replace("##sending_city/state/zip_code##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'].", ".$transport_details['st_from_zip'],$subject);
			//$subject  	= 	str_replace("##receiving_city/state/zip_code##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'].", ".$transport_details['st_to_zip'],$subject);
			//$subject	=	str_replace("##animal_count##",$animals_cnt,$subject);
			
			$subject	=	str_replace("##Pickup_date##",date("m/d",strtotime($transport_details['dt_pickup_date'])),$subject);
			
			$subject	=	str_replace("##Dropoff_date##",date("m/d",strtotime($transport_details['dt_target'])),$subject);
			
			$subject  	= 	str_replace("##sending city/state##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'],$subject);
			
			$subject  	= 	str_replace("##receiving city/state##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'],$subject);
			
			$user_detail_array = array();
			$inc_val = 0;
			for($a=0;$a< count($admin_list);$a++)
			{
				$message  	= 	str_replace("##user_display_name##",$admin_list[$a]['name'],$strMail);	
				$to			=	$admin_list[$a]['email_address'];
				$subject	=	$subject;
				$category   =   $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				$user_to_id = $this->common_model->get_user_id_by_email($to);
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
				
				$send_email = 0;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_details[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}	
				
				if($send_email == 0)
				{
					$transport_setting = $this->common_model->user_notification_setting($user_to_id);
					if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
					{
						$send_email = 1;
					}								
				}
				
				if($send_email == '1')
				{
					$affiliate_text = '';
					if($transport_details['st_trans_type'] == 'P'){
					
					    $q1			=	$this->common_model->get_affiliate_detail('71','C');	
					    $q2			=	$this->common_model->get_affiliate_detail('71','L');	
					    $q3			=	$this->common_model->get_affiliate_detail('71','R');	
					//echo '<pre>'; print_r($q1);die;
					 //CENTER BANNER
						  if(isset($q1) && !empty($q1)){					   		
								foreach($q1 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										//$affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
										$affiliate_content	= $qr['st_code'];
									}
									elseif(!empty($qr['st_image']))
									{
										$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
										$imgtitle   =   $qr['st_banner_name'];										
										//$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';
										$affiliate_content	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';			  
									}
									else
									{
										$affiliate_content='';								 
									}
										  
									$affiliate_desc = isset($qr['st_affiliate_content']) && trim($qr['st_affiliate_content'])!=''?$qr['st_affiliate_content']:'';
									if(isset($affiliate_desc) && !empty($affiliate_desc))
									{	
										$affiliate_text ='<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">'.$affiliate_desc.'</p>';
									}
									  
										
								}
							}			
							   
						   else
						   {
							  $affiliate_content='';
						   }
					   
					   
						   //LEFT BANNER
							if(isset($q2) && !empty($q2)){					   		
								foreach($q2 as $qr)
								{								 
									 if(!empty($qr['st_code']))
									{    
										   $leftbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
											$imgtitle   =   $qr['st_banner_name']; 	
											$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
										  
									}
									else
									{
										   $leftbanner='';								 
									} 	
								}
							}
							else
							{
								   $leftbanner='';								 
							}
						
						
							//RIGHT BANNER
							if(isset($q3) && !empty($q3)){					   		
								foreach($q3 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										   $rightbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{	
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 	
											$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-left: 20px;"/></a>';	
										  
									}
									else
									{
										   $rightbanner='';								 
									}								  
										
								}
							}
							else
							{
								   $rightbanner='';								 
							}
					
					}					   
					   
					  else{
					  
					   $q1			=	$this->common_model->get_affiliate_detail('72','C');	
					   $q2			=	$this->common_model->get_affiliate_detail('72','L');	
					   $q3			=	$this->common_model->get_affiliate_detail('72','R');	
					//echo '<pre>'; print_r($q1);die;
					 //CENTER BANNER
						  if(isset($q1) && !empty($q1)){					   		
								foreach($q1 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										//$affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
										$affiliate_content	= $qr['st_code'];
									}
									elseif(!empty($qr['st_image']))
									{
										$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
										$imgtitle   =   $qr['st_banner_name'];										
										//$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';
										$affiliate_content	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';			  
									}
									else
									{
										$affiliate_content='';								 
									}
										  
									$affiliate_desc = isset($qr['st_affiliate_content']) && trim($qr['st_affiliate_content'])!=''?$qr['st_affiliate_content']:'';
									if(isset($affiliate_desc) && !empty($affiliate_desc))
									{	
										$affiliate_text ='<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">'.$affiliate_desc.'</p>';
									}
									  
										
								}
							}			
							   
						   else

						   {
							  $affiliate_content='';
						   }
					   
					   
						   //LEFT BANNER
							if(isset($q2) && !empty($q2)){					   		
								foreach($q2 as $qr)
								{								 
									 if(!empty($qr['st_code']))
									{    
										   $leftbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
											$imgtitle   =   $qr['st_banner_name']; 	
											$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
										  
									}
									else
									{
										   $leftbanner='';								 
									} 	
								}
							}
							else
							{
								   $leftbanner='';								 
							}
						
						
							//RIGHT BANNER
							if(isset($q3) && !empty($q3)){					   		
								foreach($q3 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										   $rightbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{	
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 	
											$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-left: 20px;"/></a>';	
										  
									}
									else
									{
										   $rightbanner=''; 								 
									}								  
										
								}
							}
							else
							{
								   $rightbanner='';								 
							}
					  
					  }		         
					   			   
						$message   = str_replace("##affiliate_content##",$affiliate_content,$message);	
						$message   = str_replace("##leftbanner##",$leftbanner,$message);
						$message   = str_replace("##rightbanner##",$rightbanner,$message);	
						$message   = str_replace("##DONATION##",$donation,$message);
						$message   = str_replace("##affiliate_content_description##",$affiliate_text,$message);
						$message   = 	str_replace('##resuce_store_block##',$resuce_template,$message);	
					    $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				$user_detail_array[$inc_val]['name'] =  $admin_list[$a]['name'];
				$user_detail_array[$inc_val]['email_address'] =  $admin_list[$a]['email_address'];
				
				$inc_val++;
			}
			
			$email_type = "1"; 
			$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
			
			$mail_checksum_array = array("in_transport_id"=>$transport_details['in_transportation_id'],
								"in_email_type"=>$email_type,
								"st_email_type"=>$email_type_detail,
								"dt_created"=>date("Y-m-d H:i:s"),
								"st_user_details"=>serialize($user_detail_array));
		
			$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			/*
			$transport_emails = array(	"user_detail"	=> serialize($admin_list), 
										"email_subject"	=> $subject, 
										"email_content"	=> $strMail, 
										"dt_created"	=> date("Y-m-d H:i:s"),  
										"dt_modified"	=> ("0000-00-00 00:00:00"),  
										"in_email_sent"	=> "0"
									  );
			
			$this->orgtrasnportation_model->add_transport_emails($transport_emails);*/
			
		}		
	}
	
	function transport_edit_email($admin_list,$leg_type,$transport_details)
	{
		$transport_legs	= $this->orgtrasnportation_model->get_trans_legs();
	
		$this->load->library('email');
		//$email_details = $this->common_model->get_email_containt("35");
		if($transport_details['st_trans_type'] == 'P')
		{	
			$email_details = $this->common_model->get_email_containt("35");
        }else{
			$email_details = $this->common_model->get_email_containt("47");
		}
		//echo "<pre>";print_r($transport_details);echo "</pre>";die;
		$animals_cnt = 0 ;
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($this->session->userdata('transport_id'));
		
		$resuce_template = '';
		$resuce_store = $this->common_model->get_resuce_store($transport_details['in_organization_id']);
		if(count($resuce_store)>0)
		{	
			$resuce_template = $this->common_model->resuce_store_template($resuce_store);
		}
		$affiliate_info = $this->common_model->get_affiliate_info();
		//$affiliate_text = isset($affiliate_info['st_affiliate_content']) && trim($affiliate_info['st_affiliate_content'])!=''?$affiliate_info['st_affiliate_content']:'';
		//$affiliate_text = '';	
		
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
		if(isset($transport_animals) && !empty($transport_animals))
		{
			$animals_cnt = count($transport_animals);	
		}
		
		if(isset($email_details[0]['st_email_body']))
		{
			$leg_str = ''; 
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			$templete	= 	$email_details[0]['st_email_body'];
			$templete  	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  	= 	str_replace("##transport_coordinator_display_name##",$transport_details['st_display_name'],$templete);
			$templete  	= 	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$templete);
			
			$templete  	= 	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	=	str_replace("##Pickup_date##",date("m/d",strtotime($transport_details['dt_pickup_date'])),$templete);
			$templete	=	str_replace("##Dropoff_date##",date("m/d",strtotime($transport_details['dt_target'])),$templete);
			
			$templete  	= 	str_replace("##transport_day,transport_date##",date("l, M d",strtotime($transport_details['dt_target'])),$templete);
			$templete  	= 	str_replace("##sending_city/state/zip_code##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'].", ".$transport_details['st_from_zip'],$templete);
			$templete  	= 	str_replace("##receiving_city/state/zip_code##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'].", ".$transport_details['st_to_zip'],$templete);
			$templete	=	str_replace("##schedule##",$this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/",$templete);
			
			$templete	=	str_replace("##sending_state##",$transport_details['st_from_state'],$templete);
			$templete	=	str_replace("##receiving_state##",$transport_details['st_to_state'],$templete);
			$templete	=	str_replace("##animal_count##",$animals_cnt,$templete);
			$templete   =   str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			$templete   =   str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
			
			$templete   =   str_replace("##coordinator_email##",$transport_details['st_email'],$templete);
			//$templete 	= 	str_replace("##affiliate_content_description##",$affiliate_text,$templete);
			$templete 	= 	str_replace('##resuce_store_block##',$resuce_template,$templete);
			
			// added by sadique			
			$viewtransportanimal = base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id').'/';
			$templete	=	str_replace("##viewtransportanimal##",$viewtransportanimal,$templete);
			
			
			// added by sadique								
			$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));

			//print_r($org_details); die;
			$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
			if($share_template == 1)
			{
				$main_image = $this->generate_fb_image_option1();
			} 						
			
			
			else if($share_template == 5){						
				$main_image = $this->generate_fb_image_option5();						
			}
			else if($share_template == 6){						
				$main_image = $this->generate_fb_image_option6();						
			}
			else if($share_template == 7){						
				$main_image = $this->generate_fb_image_option7();						
			}
			else if($share_template == 8){						
				$main_image = $this->generate_fb_image_option8();						
			}				
			
			else {
				$main_image = $this->generate_fb_image($share_template);
			}			
			
			$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
			if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
			{
				$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
			} else {
				$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
			}
			
			
			$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>'; 
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
			$join_url = base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id');
			
			$leg_str .= '<table width="100%" border="0" cellpadding="5">';
		if(!empty($transport_legs)) {	
			foreach($transport_legs as $row) {
				if($row['route_type_id'] == 0 || $row['route_type_id'] == 1) {
					$pick_address = $row['pick_city'].', '.$row['pick_state'].', '.$row['pick_country'].', '.$row['pick_zip'];
					$drop_address = $row['drop_city'].', '.$row['drop_state'].', '.$row['drop_country'].', '.$row['drop_zip'];
				$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><span style="color: #333333;">From</span> '.$pick_address.' <br/><span style="color: #333333;">to</span> '.$drop_address.'</td><td style="padding: 20px;" align="right"><a href="'.$join_url.'" style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View Leg">View Leg</a></td></tr></tbody></table>';
				} else {
					$o_pick_address = $row['o_pick_city'].', '.$row['o_pick_state'].', '.$row['o_pick_zip'].', '.$row['o_pick_country'];
					$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><span style="color: #333333;">Meeting Location</span>'.$o_pick_address.'</td><td style="padding: 20px;" align="right"><a href="'.$join_url.'"  style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View Leg">View Leg</a></td></tr></tbody></table>';
				}
				
			}
		} else {
			$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><a href="'.$join_url.'" style="font-size: 16px; color: #fff; background-color: #ea582d; padding: 8px 25px; border-radius: 20px; font-weight: normal; text-decoration: none;" title="View">View this Transport</a></td></tr></tbody></table>';
		}
			
			$leg_str .= '</table>';
			
			$templete	=	str_replace("##leg_detail##",$leg_str,$templete);
			
			$animal_str = '';
			$animal_image = '';
			
			//Animal_details
			$org_image = $this->orgtrasnportation_model->get_org_image($this->session->userdata('org_id'));
			
			$i=0;
			$data_image = array();
			if(!empty($transport_animals)) {
				foreach($transport_animals as $rows) {
					if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
						$data_image[] = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
					} else {
						$data_image[] = base_url().'upload/org_doc/thumb/'.$org_image;;
					}
				}
			}
			
			if(!empty($transport_animals)) {
				foreach($transport_animals as $rows) {
					//if($i>1) { break;}
					$animal_url = base_url().'animal-'.$rows['in_animal_id'].'-'.$this->common_function->get_filtered_name($rows['st_animal_name']);
					
					if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
						$animal_image = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
					} else {
						$animal_image = base_url().'upload/org_doc/thumb/'.$org_image;
					}
					
					//$animal_str .= '<tr><td style="padding:25px 0;border-bottom:1px solid #ebebeb;border-top:1px solid #ebebeb;">';
  
  //$animal_str .= '<table align="left" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td><table align="center" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td style="font-family: Arial, sans-serif; font-size: 14px; color: #4c4c4c; text-align:justify; line-height: 20px;">'.$rows['st_profile_story'].' <span style="display:block"><a href="'.$animal_url.'" style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px;border-radius:3px;display:inline-block;margin:15px 0 0;" title="View Animal Profile"><img src="http://app.doobert.com/assets/img/email_img/animal_profile_icon.gif" style="border:none;vertical-align:top;padding-top:3px;border:none" /> View Animal Profile</a></span></td></tr></tbody></table></td></tr></tbody></table>';
  
  //$animal_str .= '<table align="right" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="150"><tbody><tr><td align="center" class="devicewidth" height="140" width="150"><img alt="" src="'.$animal_image.'" /></td></tr></tbody></table><table align="left" border="0" cellpadding="0" cellspacing="0" class="mobilespacing"><tbody><tr><td height="15" style="font-size:1px; line-height:1px; mso-line-height-rule: exactly;" width="100%">&nbsp;</td></tr></tbody></table>';
  
			$animal_str .= '<div style="display:inline-block; margin-bottom:20px; text-align: center; vertical-align:top;"><a href="'.$animal_url.'" style="padding: 6px; margin: 0 10px 10px 0; border: 1px solid #e1e1e1; background-color: #f4f4f4; position: relative; display: block; height: 78px; width:87px;"><img src="'.$animal_image.'" alt="img5" style="margin: auto; max-width:100%; max-height:100%;"/></a><span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; display:block">'.$rows['st_animal_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; display:block;">'.$rows['st_animal_breed_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#444; display:block;">'.$rows['st_animal_type_name'].'</span></div>';
		
  				$i++;
				}
				$animal_str .= '<div style="clear:both;margin: 0px;padding: 0px;"></div>';
			}
			$templete	=	str_replace("##animal_details##",$animal_str,$templete);
			//End Animal Details
			
			$share_url = base_url().'org-transportation-scheduled/'.$transport_details['in_transportation_id'];
			$title = 'DOOBERT -Transportation '.$orgcode.htmlspecialchars($transport_details['in_transportation_id']);
			if($transport_details['perc']>0)
				{
					$transport_comp_perc = (($transport_details['perc']>100)? "100%":$transport_details['perc']."%");
				}
				else
				{
					$transport_comp_perc = "0%";
				}
				
			$description = "";
						
			$description .= date("l, M",strtotime($transport_details['dt_target']));
			$description .= date(" d",strtotime($transport_details['dt_target']));
			$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;".$orgcode.$transport_details['in_transportation_id']."&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			$description .= "\r\n";
			$description .= $transport_details['st_from_street']? $this->common_function->custom_htmlentities($transport_details['st_from_street']).",":"";
			$description .= $transport_details['st_from_city']? $this->common_function->custom_htmlentities($transport_details['st_from_city']).",":"";
			$description .= $transport_details['st_from_state']? $this->common_function->custom_htmlentities($transport_details['st_from_state']).",":"";
			$description .= $transport_details['st_from_zip']? $this->common_function->custom_htmlentities($transport_details['st_from_zip']).",":"";
			$description .= ' to ';
			$description .= $transport_details['st_to_street']? $this->common_function->custom_htmlentities($transport_details['st_to_street']).",":"";
			$description .= $transport_details['st_to_city']? $this->common_function->custom_htmlentities($transport_details['st_to_city']).",":"";
			$description .= $transport_details['st_to_state']? $this->common_function->custom_htmlentities($transport_details['st_to_state']).",":"";
			$description .= $transport_details['st_to_zip']? $this->common_function->custom_htmlentities($transport_details['st_to_zip']).",":"";
			$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
			$description .= "\r\n";
			$description .= $transport_comp_perc ." of ".($transport_details['in_tot_distance']!=''? $transport_details['in_tot_distance']:"0").'miles covered.';
			
			
			$description_str = str_replace('&nbsp;',' ',$description);
			//$description_str = str_replace(array("\r\n","\r","\n"), "<br>",$description_str);
						
			$share_facebook_str  = ''; 
			$share_facebook_str .= '<a href="https://www.facebook.com/sharer/sharer.php?u='.urlencode($share_url).'&t='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Facebook.jpg" alt="Facebook" title="Facebook" /></a>';
			$templete	=	str_replace("##share_facebook##",$share_facebook_str,$templete);
			
			$share_twitter_str = ''; 
			
			$share_twitter_str .= '<a href="http://twitter.com/share?url='.urlencode($share_url).'&text='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Twitter.jpg" alt="Twitter" title="Twitter" /></a>';

			$templete	=	str_replace("##share_twitter##",$share_twitter_str,$templete);
			
			$share_gplus_str = ''; 
			$share_gplus_str .= '<a href="https://plus.google.com/share?url='.urlencode($share_url).'"><img src="https://app.doobert.com/assets/img/G-Plus.jpg" alt="G-Plus" title="G-Plus" /></a>';
			
			
                    
			$templete	=	str_replace("##share_gplus##",$share_gplus_str,$templete);
			
			// for latest Blog.
			$blog_details = $this->get_doobert_recent_post();
			
			if(!empty($blog_details))
			{
			$templete   =  str_replace("##blog_title##",$blog_details['title'],$templete);
			$templete   =  str_replace("##blog_content##",$blog_details['content'],$templete);
			$templete   =  str_replace("##blog_link##",$blog_details['blog_link'],$templete);
			}
			
			$strMail 	= 	$templete;
			
			$subject	=	str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$email_details[0]['st_email_subject']);
			$subject	=	str_replace("##Pickup_date##",date("m/d",strtotime($transport_details['dt_pickup_date'])),$subject);
			$subject	=	str_replace("##Dropoff_date##",date("m/d",strtotime($transport_details['dt_target'])),$subject);
			$subject  	= 	str_replace("##sending city/state##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'],$subject);
			$subject  	= 	str_replace("##receiving city/state##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'],$subject);
			
			$user_detail_array = array();
			$inc_val = 0;
			for($a=0;$a< count($admin_list);$a++)
			{
				$message  	= 	str_replace("##user_display_name##",$admin_list[$a]['name'],$strMail);	
				$to			=	$admin_list[$a]['email_address'];
				$subject	=	$subject;
				$category  =    "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				$user_to_id = $this->common_model->get_user_id_by_email($to);
										
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
				
				$send_email = 0;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_details[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}	
				
				if($send_email == 0)
				{
					$transport_setting = $this->common_model->user_notification_setting($user_to_id);
					if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
					{
						$send_email = 1;
					}								
				}
				
				if($send_email == '1')
				{  
					$affiliate_text = '';
					if($transport_details['st_trans_type'] == 'P'){
								$q1			=	$this->common_model->get_affiliate_detail('35','C');	
							    $q2			=	$this->common_model->get_affiliate_detail('35','L');	
							    $q3			=	$this->common_model->get_affiliate_detail('35','R');
							
							 //CENTER BANNER
								  if(isset($q1) && !empty($q1)){					   		
										foreach($q1 as $qr)
										{
											 
											  if(!empty($qr['st_code']))
											{    
												   //$affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
												   $affiliate_content	= $qr['st_code'];
											}
											elseif(!empty($qr['st_image']))
											{
													
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name']; 											
													//$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';
													$affiliate_content	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';			
												  
											}
											else
											{
												   $affiliate_content='';								 
											}
											  
											$affiliate_desc = isset($qr['st_affiliate_content']) && trim($qr['st_affiliate_content'])!=''?$qr['st_affiliate_content']:'';
											
											if(isset($affiliate_desc) && !empty($affiliate_desc))
											{	
												$affiliate_text ='<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">'.$affiliate_desc.'</p>';
											}	
										}
									}			
									   
								   else
								   {
									  $affiliate_content='';
								   }
							   
							   
								   //LEFT BANNER
									if(isset($q2) && !empty($q2)){					   		
										foreach($q2 as $qr)
										{								 
											 if(!empty($qr['st_code']))
											{    
												   $leftbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{
													
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
													$imgtitle   =   $qr['st_banner_name']; 	
													$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
												  
											}
											else
											{
												   $leftbanner='';								 
											} 	
										}
									}
									else
									{
										   $leftbanner='';								 
									}
								
								
									//RIGHT BANNER
									if(isset($q3) && !empty($q3)){					   		
										foreach($q3 as $qr)
										{
											 
											if(!empty($qr['st_code']))
											{    
												   $rightbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{	
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name']; 	
													$rightbanner	    = '<a href='.$qr['st_url'].' target=_blank><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-left: 20px;"/></a>';	
												  
											}
											else
											{
												   $rightbanner='';								 
											}								  
												
										}
									}
									else
									{
										   $rightbanner='';								 
									}
							
							}					   
					   
					  else{
					  
					   $q1			=	$this->common_model->get_affiliate_detail('47','C');	
					   $q2			=	$this->common_model->get_affiliate_detail('47','L');	
					   $q3			=	$this->common_model->get_affiliate_detail('47','R');	
					//echo '<pre>'; print_r($q1);die;
					 //CENTER BANNER
						  if(isset($q1) && !empty($q1)){					   		
								foreach($q1 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										//$affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
										$affiliate_content	= $qr['st_code'];
									}
									elseif(!empty($qr['st_image']))
									{
										$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
										$imgtitle   =   $qr['st_banner_name'];										
										//$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';
										$affiliate_content	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';			  
									}
									else
									{
										$affiliate_content='';								 
									}
										  
									$affiliate_desc = isset($qr['st_affiliate_content']) && trim($qr['st_affiliate_content'])!=''?$qr['st_affiliate_content']:'';
									if(isset($affiliate_desc) && !empty($affiliate_desc))
									{	
										$affiliate_text ='<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">'.$affiliate_desc.'</p>';
									}
									  
										
								}
							}			
							   
						   else
						   {
							  $affiliate_content='';
						   }
					   
					   
						   //LEFT BANNER
							if(isset($q2) && !empty($q2)){					   		
								foreach($q2 as $qr)
								{								 
									 if(!empty($qr['st_code']))
									{    
										   $leftbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
											$imgtitle   =   $qr['st_banner_name']; 	
											$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
										  
									}
									else
									{
										   $leftbanner='';								 
									} 	
								}
							}
							else
							{
								   $leftbanner='';								 
							}
						
						
							//RIGHT BANNER
							if(isset($q3) && !empty($q3)){					   		
								foreach($q3 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										   $rightbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{	
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 	
											$rightbanner	    = '<a href='.$qr['st_url'].' target=_blank><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-left: 20px;"/></a>';	
										  
									}
									else
									{
										   $rightbanner='';								 
									}								  
										
								}
							}
							else
							{
								   $rightbanner='';								 
							}
					  
					  }
					   			   
						$message   = str_replace("##additional_details##", $additional_info_str, $message);		
						$message = str_replace("##affiliate_content##",$affiliate_content,$message);	
						$message = str_replace("##leftbanner##",$leftbanner,$message);
						$message = str_replace("##rightbanner##",$rightbanner,$message);
						$message = str_replace("##DONATION##",$donation,$message);
						$message = str_replace("##affiliate_content_description##",$affiliate_text,$message);
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				
				$user_detail_array[$inc_val]['name'] =  $admin_list[$a]['name'];
				$user_detail_array[$inc_val]['email_address'] =  $admin_list[$a]['email_address'];
				
				$inc_val++;
			}
			
			$email_type = "2"; 
			$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
			
			$mail_checksum_array = array("in_transport_id"=>$transport_details['in_transportation_id'],
								"in_email_type"=>$email_type,
								"st_email_type"=>$email_type_detail,
								"dt_created"=>date("Y-m-d H:i:s"),
								"st_user_details"=>serialize($user_detail_array));
		
			$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			//echo "user_detail:<pre/>";print_r($admin_list);
			//echo "email_subject:<pre/>";print_r($subject);
			//echo "email_content:<pre/>";print_r($strMail);
			//die;
			/*$transport_emails = array(	"user_detail"	=> serialize($admin_list), 
										"email_subject"	=> $subject, 
										"email_content"	=> $strMail, 
										"dt_created"	=> date("Y-m-d H:i:s"),  
										"dt_modified"	=> ("0000-00-00 00:00:00"),  
										"in_email_sent"	=> "0"
									  );
			
			$this->orgtrasnportation_model->add_transport_emails($transport_emails);*/
			
		}	
	}

	#=========================================================
	#	Function : trasnport_edit_date_email
	#	Purpose  : Send email to all user releted to the transpotation
	#=========================================================		
	function trasnport_edit_date_email($all_email,$data,$transport_type)												
	{													
		$this->load->library('email');
		//echo '<pre>'; print_r($data);die;
		//$email_details = $this->common_model->get_email_containt("5");
		if($transport_type == 'P')
		{	
			$email_details = $this->common_model->get_email_containt("5");
        }else{
			$email_details = $this->common_model->get_email_containt("48");
		}
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$orgcode 	= ($data['st_org_code'] != '')? '#'.$data['st_org_code'] : '#DBT';
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);	

			if(isset($data['pre_date']) && $data['pre_date']!='')
			{
				$templete 	= str_replace("##changefromdatetxt##", 'changed from '.$data['pre_date'].' to '.$data['new_date'], $templete);	
				$templete 	= str_replace("##pickuptxt##", 'for '.$data['pre_date'], $templete);
				
				$subject	=	str_replace("##changefromdatetxt##",'changed from '.$data['pre_date'].' to '.$data['new_date'],$email_details[0]['st_email_subject']);			
				
			}
			else{
				$templete 	= str_replace("##changefromdatetxt##", 'changed to '.$data['new_date'], $templete);
				$templete 	= str_replace("##pickuptxt##", ' ', $templete);
				
				$subject	=	str_replace("##changefromdatetxt##",'changed to '.$data['new_date'],$email_details[0]['st_email_subject']);
			}


			
			$templete 	= str_replace("##New_Pickup_date##", $data['new_date'], $templete);			
            $templete 	= str_replace("##Pickup_date##", $data['pre_date'], $templete);		
			
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete   = str_replace("##organization_name##",$data['org_name'],$templete);
			$templete   = str_replace("##coordinator_details##",$data['st_display_name'].' ('.$data['st_email'].')',$templete);
			$templete	= str_replace("##transport_url##",base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'),$templete);
			
			// added by sadique
			$templete   = str_replace("##transport_coordinator_display_name##",$data['st_display_name'],$templete);
			$templete   = str_replace("##coordinator_email##",$data['st_email'],$templete);
						
			
			// added by sadique								
			$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('transport_id'));

			//print_r($org_details); die;
			$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
			if($share_template == 1)
			{
				$main_image = $this->generate_fb_image_option1();
			} 						
			
			
			else if($share_template == 5){						
				$main_image = $this->generate_fb_image_option5();						
			}
			else if($share_template == 6){						
				$main_image = $this->generate_fb_image_option6();						
			}
			else if($share_template == 7){						
				$main_image = $this->generate_fb_image_option7();						
			}
			else if($share_template == 8){						
				$main_image = $this->generate_fb_image_option8();						
			}				
			
			else {
				$main_image = $this->generate_fb_image($share_template);
			}	

			$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
			if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
			{
				$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
			} else {
				$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
			}
			$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($data['st_add_comments']) && $data['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$data['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
			$subject	= str_replace("##New_Pickup_date##",$data['new_date'],$subject);
			$subject	= str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$subject);
			$subject	= str_replace("##Pickup_date##",$data['pre_date'],$subject);
			//$this->email->subject($subject);
			
			$user_detail_array = array();
			$inc_val = 0;
			if(isset($all_email) && !empty($all_email))
			{
				foreach($all_email as $key=>$values)
				{
					if(isset($values['display_name']) && $values['display_name'] != '' && isset($values['user_email']) && $values['user_email'] != '')
					{
					$templete2 = str_replace("##user_display_name##",$values['display_name'],$templete);
					$strMail = $templete2;
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					$user_to_id = $this->common_model->get_user_id_by_email($to);
											
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		

					$send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
					
						if($transport_type == 'P'){					  
					  			 
					  $q1			=	$this->common_model->get_affiliate_detail('5','C');	
					  $q2			=	$this->common_model->get_affiliate_detail('5','L');	
					  $q3			=	$this->common_model->get_affiliate_detail('5','R');	
					//echo '<pre>'; print_r($q1);die;
					 //CENTER BANNER
						  if(isset($q1) && !empty($q1)){					   		
								foreach($q1 as $qr)
								{
									 
									  if(!empty($qr['st_code']))
									{    
										    $affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 											
											$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';					
										  
									}
									else
									{
										   $affiliate_content='';								 
									}
									  
										
								}
							}			
							   
						   else
						   {
							  $affiliate_content='';
						   }
					   
					   
						   //LEFT BANNER
							if(isset($q2) && !empty($q2)){					   		
								foreach($q2 as $qr)
								{								 
									 if(!empty($qr['st_code']))
									{    
										   $leftbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
											$imgtitle   =   $qr['st_banner_name']; 	
											$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
										  
									}
									else
									{
										   $leftbanner='';								 
									} 	
								}
							}
							else
							{
								   $leftbanner='';								 
							}
						
						
							//RIGHT BANNER
							if(isset($q3) && !empty($q3)){					   		
								foreach($q3 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										   $rightbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{	
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 	
											$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top:20px; margin-left: 20px;"/></a>';	
										    
									}
									else
									{
										   $rightbanner='';								 
									}								  
										
								}
							}
							else
							{
								   $rightbanner='';								 
							}
						   
					   }					   
					   
					  	else{
							  
							  
							   $q1			=	$this->common_model->get_affiliate_detail('48','C');	
							   $q2			=	$this->common_model->get_affiliate_detail('48','L');	
							   $q3			=	$this->common_model->get_affiliate_detail('48','R');	
								//echo '<pre>'; print_r($q1);die;
					 //CENTER BANNER
						  if(isset($q1) && !empty($q1)){					   		
								foreach($q1 as $qr)
								{
									 
									  if(!empty($qr['st_code']))
									{    
										    $affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 											
											$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';					
										  
									}
									else
									{
										   $affiliate_content='';								 
									}
									  
										
								}
							}			
							   
						   else
						   {
							  $affiliate_content='';
						   }
					   
					   
						   //LEFT BANNER
							if(isset($q2) && !empty($q2)){					   		
								foreach($q2 as $qr)
								{								 
									 if(!empty($qr['st_code']))
									{    
										   $leftbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{
											
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
											$imgtitle   =   $qr['st_banner_name']; 	
											$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
										  
									}
									else
									{
										   $leftbanner='';								 
									} 	
								}
							}
							else
							{
								   $leftbanner='';								 
							}
						
						
							//RIGHT BANNER
							if(isset($q3) && !empty($q3)){					   		
								foreach($q3 as $qr)
								{
									 
									if(!empty($qr['st_code']))
									{    
										   $rightbanner	= $qr['st_code'];
										  
									}
									elseif(!empty($qr['st_image']))
									{	
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 	
											$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top:20px; margin-left: 20px;"/></a>';	
										  
									}
									else
									{
										   $rightbanner='';								 
									}
									  
										
								}
							}
							else
							{
								   $rightbanner='';								 
							}				   
					   
					   }			   
					   
					   	$message   = str_replace("##affiliate_content##",$affiliate_content,$message);
						$message   = str_replace("##leftbanner##",$leftbanner,$message);
						$message   = str_replace("##rightbanner##",$rightbanner,$message);	
						$message   = str_replace("##DONATION##",$donation,$message);	
					 	
						
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
					
					$inc_val++;
					}
				}
				
				$email_type = "8"; 
				$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
				
			}
			
		}
		
	}
	
	
	#=========================================================
	#	Function : trasnport_email
	#	Purpose  : Send email to all user releted to the transpotation for transport confirm and cancel
	#=========================================================		
	function transport_email($all_email,$email_id,$transport_details)
	{														
		$this->load->library('email');
		
		$transport_url = '';
		($email_id == 7)?$transport_url = 'org-cancel-transport/':$transport_url = 'org-confirm-transport/';
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);		
			//$templete	= str_replace("##original_date##",$transport_details['target_date'],$templete);
			//$templete = str_replace("##original_date##", $transport_details['dt_pickup_date'], $templete);
			
			
			$templete 	= str_replace("##Pickup_date##", $transport_details['dt_pickup_date'], $templete);
			
			if($transport_details['dt_pickup_date'] !='')
			{	
				$templete 	= str_replace("##canceltext##", 'scheduled to start '.date("m/d",strtotime($transport_details['dt_pickup_date'])). ' has been <strong>cancelled</strong>.', $templete);
				
				$templete 	= str_replace("##datetext##", 'starting on <img alt="Calendar" border="0" src="http://dev.doobert.com/upload/newsletter/calendar-icon.jpg" title="Calendar" style="vertical-align: middle; padding: 0 
	5px 5px 0;" />'.date("m/d",strtotime($transport_details['dt_pickup_date'])). ' <strong>is cancelled</strong>.', $templete);
			} else {
				$templete 	= str_replace("##canceltext##", ' scheduled has been <strong>cancelled</strong>.', $templete);		
				$templete 	= str_replace("##datetext##", ' <strong>is cancelled</strong>.', $templete);
			}
			
			$templete 	= str_replace("##Dropoff_date##", $transport_details['target_date'], $templete);
			
			$templete	= str_replace("##transport_coordinator##",$transport_details['name'],$templete);
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	= str_replace("##transport_url##",base_url().$transport_url.$this->session->userdata('transport_id'),$templete);
			
			
			
			$share_url = base_url().'org-transportation-scheduled/'.$transport_details['in_transportation_id'];
			$templete  	= 	str_replace("##sending city/state/zip code##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'].", ".$transport_details['st_from_zip'],$templete);
			$templete  	= 	str_replace("##receiving city/state/zip code##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'].", ".$transport_details['st_to_zip'],$templete);
			
			$share_facebook_str  = ''; 
			$share_facebook_str .= '<a href="https://www.facebook.com/sharer/sharer.php?u='.urlencode($share_url).'&t='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Facebook.jpg" alt="Facebook" title="Facebook" /></a>';
			$templete	=	str_replace("##share_facebook##",$share_facebook_str,$templete);
			
			$share_twitter_str = ''; 
			
			$share_twitter_str .= '<a href="http://twitter.com/share?url='.urlencode($share_url).'&text='.urlencode($description_str).'"><img src="https://app.doobert.com/assets/img/Twitter.jpg" alt="Twitter" title="Twitter" /></a>';

			$templete	=	str_replace("##share_twitter##",$share_twitter_str,$templete);
			
			$share_gplus_str = ''; 
			$share_gplus_str .= '<a href="https://plus.google.com/share?url='.urlencode($share_url).'"><img src="https://app.doobert.com/assets/img/G-Plus.jpg" alt="G-Plus" title="G-Plus" /></a>';
			
			
                    
			$templete	=	str_replace("##share_gplus##",$share_gplus_str,$templete);
			
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}
			
			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
			}	
			$templete 	=   str_replace("##coordinator_email##",$transport_details['st_email'],$templete);	
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_data[0]['st_add_comments']) && $transport_data[0]['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_data[0]['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
			if($email_id == 7)
			{
				
				//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
			    //$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				
				// added by sadique								
								$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('transport_id'));

								//print_r($org_details); die;
								$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
								if($share_template == 1)
								{
									$main_image = $this->generate_fb_image_option1();
								} 						
								
								
								else if($share_template == 5){						
									$main_image = $this->generate_fb_image_option5();						
								}
								else if($share_template == 6){						
									$main_image = $this->generate_fb_image_option6();						
								}
								else if($share_template == 7){						
									$main_image = $this->generate_fb_image_option7();						
								}
								else if($share_template == 8){						
									$main_image = $this->generate_fb_image_option8();						
								}				
								
								else {
									$main_image = $this->generate_fb_image($share_template);
								}	
				
								$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
								if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}
								
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				
				
				
				$templete = str_replace("##cancel_message##",$transport_details['text_msg'], $templete);
				if(!empty($transport_details['phone_number']))
					$contact_details =  "at ".$transport_details['email_address']." or call at ".$transport_details['phone_number'];
				else 
					$contact_details = "at ".$transport_details['email_address'];
				$templete = str_replace("##contact_details##", $contact_details, $templete);
				$templete = str_replace("##cancel_message##", $transport_details['text_msg'], $templete);
			}	
			
			if($email_id == 6 || $email_id == 126 || $email_id == 130)
			{
					$org_details 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));	
					$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
					if($share_template == 1)
					{
						$main_image = $this->generate_fb_image_option1();
					} 
					
					else if($share_template == 5){						
						$main_image = $this->generate_fb_image_option5();						
					}
					else if($share_template == 6){						
						$main_image = $this->generate_fb_image_option6();						
					}
					else if($share_template == 7){						
						$main_image = $this->generate_fb_image_option7();						
					}
					else if($share_template == 8){						
						$main_image = $this->generate_fb_image_option8();						
					}				
					
					else {
						$main_image = $this->generate_fb_image($share_template);
					}	
				
				 $fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
			if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
			{
				$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
			} else {
				$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
			}		
				
				$transport_legs	= $this->orgtrasnportation_model->get_trans_legs();
				
                $co_str = '';
                $co_str .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">
							<tr>
							<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; border-right:1px solid #e3e3e3;">Transport Coordinator</td>
							<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">Pick Up Location</td>
							<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2;">Drop Off Location</td>
							</tr>';

                $co_str .= '<tr>';
                
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">' . $transport_data[0]['st_display_name'] . '<br>Email: <a href="mailto:'.$transport_data[0]['st_email'].'" style="color:#0073b5;">' . $transport_data[0]['st_email'] . '</a><br>Cell: ' . $transport_data[0]['st_primary_phone'] . '</td>';
				
				if($transport_data[0]['in_airline_transport']==1)
				{
					$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">' . ($transport_data[0]['st_from_city'] ? $transport_data[0]['st_from_city'] . " (" : "").($transport_data[0]['st_from_street'] ? $transport_data[0]['st_from_street'] . ")" : "").'<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_pickup_date'])) . '</em></td>';
				
					$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;">' . ($transport_data[0]['st_to_city'] ? $transport_data[0]['st_to_city'] . " (" : "").($transport_data[0]['st_to_street'] ? $transport_data[0]['st_to_street'] . ")" : ""). '<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_target'])) . '</em></td>';
				} else {
				
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">' . ($transport_data[0]['st_from_street'] ? $transport_data[0]['st_from_street'] . ", " : "") . ($transport_data[0]['st_from_city'] ? $transport_data[0]['st_from_city'] . ", " : "") . ($transport_data[0]['st_from_state'] ? $transport_data[0]['st_from_state'] : "") . ($transport_data[0]['st_from_zip'] ? ", " . $transport_data[0]['st_from_zip'] : "") . '<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_pickup_date'])) . '</em></td>';
				
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;">' . ($transport_data[0]['st_to_street'] ? $transport_data[0]['st_to_street'] . ", " : "") . ($transport_data[0]['st_to_city'] ? $transport_data[0]['st_to_city'] . ", " : "") . ($transport_data[0]['st_to_state'] ? $transport_data[0]['st_to_state'] : "") . ($transport_data[0]['st_to_zip'] ? ", " . $transport_data[0]['st_to_zip'] : "") . '<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_target'])) . '</em></td>';
				}
				$co_str .= '</tr>';
                $co_str .= '</table>';

                $templete = str_replace("##co-ordinator_details##", $co_str, $templete);
				$templete = str_replace("##fbtransportshare##",$fbtransportshare, $templete);
				
				//print_r($templete);exit;

                $leg_details = $this->orgtrasnportation_model->get_trans_legs_join_user("Null");
				
				$cnt_leg = 0;
				$leg_d = array();
				foreach($leg_details as $leg_keys=>$leg_vals) { 
						$leg_d[$cnt_leg] = $leg_vals;
						$cnt_leg++;
				}
				
				//echo '<pre/>';print_r($leg_d);exit;
				
				$leg_details  =  $leg_d;
				
                $volunteer_str = '';
                $volunteer_str .= '<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px;">Volunteered Drivers/Pilots details are as below:</div>';
               
                $i = 0;
                $leg_ids_array = array();
                foreach($leg_details as $leg_key=>$leg_data) { 
				
				$volunteer_str .= '<div style="margin:30px 0px; padding-left:30px; text-align:left;">';
				
				$start_add = '';
				if ($leg_data['route_type_id'] == '1' || $leg_data['route_type_id'] == '0') {
					$start_add .= ($leg_data['pick_street'] ? $leg_data['pick_street'] . ", " : "") . ($leg_data['pick_city'] ? $leg_data['pick_city'] . ", " : "") . ($leg_data['pick_state'] ? $leg_data['pick_state'] : "") . ($leg_data['pick_zip'] ? ", " . $leg_data['pick_zip'] : "");
				}
				
				if ($leg_data['route_type_id'] == '3') {
					$start_add .= ($leg_data['pick_city'] ? $leg_data['pick_city'] . "(" : "").($leg_data['pick_street'] ? $leg_data['pick_street'] . ") " : "");
				}
				
				if ($leg_data['route_type_id'] == '2') {
					$start_add .= ($leg_data['st_street'] ? $leg_data['st_street'] . ", " : "") . ($leg_data['st_city'] ? $leg_data['st_city'] . ", " : "") . ($leg_data['st_state'] ? $leg_data['st_state'] : "") . ($leg_data['st_zip'] ? ", " . $leg_data['st_zip'] : "");
				}

				//$start_time = date("d M Y - h:i A", strtotime($leg_data['pick_start_time'])) . " - " . $leg_data['pick_timezone'];
				$start_time = '';
				$leg_starts_time = '';
				if(isset($leg_data['pick_start_time']) && $leg_data['pick_start_time'] != '')
				{
				$start_time = date("l, M d, Y", strtotime($leg_data['pick_start_time']));
				$leg_starts_time = date("h:i A", strtotime($leg_data['pick_start_time']));
				$leg_starts_time .= ' - '.$leg_data['pick_timezone'];
				}
				
				$next_start_time = '';
				if (array_key_exists($leg_key + 1, $leg_details)) {
					if ($leg_details[$leg_key + 1]['route_type_id'] == '1' || $leg_details[$leg_key + 1]['route_type_id'] == '0') {
						$next_start_time = date("h:i A", strtotime($leg_details[$leg_key + 1]['pick_start_time']));
					}
				}
				
				$next_start_time = '';				
				if (array_key_exists($leg_key + 1, $leg_details)) {
						if ($leg_details[$leg_key + 1]['route_type_id'] == '1' || $leg_details[$leg_key + 1]['route_type_id'] == '0') {
							if(isset($leg_details[$leg_key + 1]['pick_start_time']) && $leg_details[$leg_key + 1]['pick_start_time'] != '')
							{				
								$next_start_time = date("h:i A", strtotime($leg_details[$leg_key + 1]['pick_start_time']));
							}
						}					
				}
				
				$prev_start_time = '';	
				if (array_key_exists($leg_key + 1, $leg_details)) {		
					if ($leg_data['route_type_id'] == '2') {
						if(isset($leg_details[$leg_key - 1]['drop_start_time']) && $leg_details[$leg_key - 1]['drop_start_time'] != '')
						{	
							$prev_start_time = date("h:i A", strtotime($leg_details[$leg_key - 1]['drop_start_time']));
						}
					}
				}
				
				$end_add = '';
				if ($leg_data['route_type_id'] == '1' || $leg_data['route_type_id'] == '0') {
					$end_add .= ($leg_data['drop_street'] ? $leg_data['drop_street'] . ", " : "") . ($leg_data['drop_city'] ? $leg_data['drop_city'] . ", " : "") . ($leg_data['drop_state'] ? $leg_data['drop_state'] : "") . ($leg_data['drop_zip'] ? ", " . $leg_data['drop_zip'] : "");
				}
				
				if ($leg_data['route_type_id'] == '3') {
					$end_add .= ($leg_data['drop_city'] ? $leg_data['drop_city'] . " (" : "").($leg_data['drop_street'] ? $leg_data['drop_street'] . ") " : "");
				}
				
				if ($leg_data['route_type_id'] == '2') {
					$end_add .= ($leg_data['st_street'] ? $leg_data['st_street'] . ", " : "") . ($leg_data['st_city'] ? $leg_data['st_city'] . ", " : "") . ($leg_data['st_state'] ? $leg_data['st_state'] : "") . ($leg_data['st_zip'] ? ", " . $leg_data['st_zip'] : "");
				}

				//$end_time = date("d M Y - h:i A", strtotime($leg_data['drop_start_time'])) . " - " . $leg_data['drop_timezone'];
				$end_time = '';
				$leg_end_time = '';
				if(isset($leg_data['drop_start_time']) && $leg_data['drop_start_time'] != '')
				{
				$end_time = date("l, M d, Y", strtotime($leg_data['drop_start_time']));
				$leg_end_time = date("h:i A", strtotime($leg_data['drop_start_time']));
				$leg_end_time .= ' - '.$leg_data['drop_timezone'];
				}
				
				$meeting_loc = (isset($leg_data['st_meeting_location']) && $leg_data['st_meeting_location'] != '') ? stripslashes($leg_data['st_meeting_location']) : '-';
				$to_meeting_loc = (isset($leg_data['to_meeting']) && $leg_data['to_meeting'] != '') ? stripslashes($leg_data['to_meeting']) : '-';
				$leg_instruction = (isset($leg_data['leg_instruction']) && $leg_data['leg_instruction'] != '') ? stripslashes($leg_data['leg_instruction']) : '-';
				
				$overnight = '';
				if($leg_data['route_type_id'] == '2')
				{
					$overnight = ' (OVERNIGHT)';
					$volunteer_str .= '<p style="font:bold 14px/22px Arial, Helvetica, sans-serif;color:#ee6d35; text-transform:uppercase; padding:0 0 4px 0; margin:0px;"><span style="font:bold 15px Arial, Helvetica, sans-serif;color:#ee6d35;">Leg '.($i+1).'</span>'.$overnight.': ' . $start_add . '</p>';
				}
				else{
				$volunteer_str .= '<p style="font:bold 14px/22px Arial, Helvetica, sans-serif;color:#ee6d35; text-transform:uppercase; padding:0 0 4px 0; margin:0px;"><span style="font:bold 15px Arial, Helvetica, sans-serif;color:#ee6d35;">Leg '.($i+1).'</span>: ' . $start_add . '  <span style="color:#575757;">To:</span> ' . $end_add . '</p>';
				}
				
				if($leg_data['route_type_id'] != '2')
				{
                 $volunteer_str .= '<p style="font:15px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">'.$start_time.'</span>  ('.$leg_starts_time.' <strong>To </strong>'.$leg_end_time.')</p>';
				}
				
                    foreach ($leg_data['leg_participant_details'] as $key_user => $participants_data) 
					{
						$vehicle_data = '';
						$vehicle_type = '';
						if($participants_data['in_photography_profile']=='0')
						{
							if($leg_data['route_type_id'] =='0')
							{
								$vehicle_details = $this->common_function->get_vehicle_detail_by_id($participants_data['leg_vehicle_id']);
							
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_color'] != '') 
								{
									$vehicle_data .= ucfirst($vehicle_details[0]['st_vehicle_color']) . ', ';
								}
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_type'] != '') 
								{
									$vehicle_data .= $vehicle_details[0]['st_vehicle_type'] . ', ';
								}
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_license_plate'] != '') 
								{
									$vehicle_data .= "Plate: ".$vehicle_details[0]['st_vehicle_license_plate'] . ", ";
								}
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_license_state'] != '') 
								{
									$vehicle_data .= "State: ".$vehicle_details[0]['st_vehicle_license_state'];
								}
								$vehicle_type = 'Driver';	
							} else if($leg_data['route_type_id'] == '1')
							{	
								$vehicle_details = $this->common_function->get_plane_detail_by_id($participants_data['leg_plane_id']);
								//$vehicle_data = '';
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_plane_color'] != '') 
								{
									$vehicle_data .= ucfirst($vehicle_details[0]['st_plane_color']) . ', ';
								}
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_plane_type'] != '') 
								{
									$vehicle_data .= $vehicle_details[0]['st_plane_type'] . ', ';
								}
								if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_plane_number'] != '') 
								{
									$vehicle_data .= "Plate: ".$vehicle_details[0]['st_plane_number'] . ", ";
								}
								$vehicle_type = 'Pilot';
								/*if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_license_state'] != '') 
								{
									$vehicle_data .= "State: ".$vehicle_details[0]['st_vehicle_license_state'];
								}*/
							}
							$vehicle_data = rtrim(trim($vehicle_data), ',');
						}	
						
						if($participants_data['in_photography_profile']=='1')
						{
							$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_display_name'] . ' </span>' . $participants_data['user_email'] . ' | Cell: ' . $participants_data['st_primary_phone'] . ') | <b>(Photographer)</b></p>';
						} else {
							if($vehicle_type!='')
							{	
								$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_display_name'] . '</span> (Email: <a href="mailto:'.$participants_data['user_email'].'" style="text-decoration:underline;">' . $participants_data['user_email'] . '</a> | Cell: ' . $participants_data['st_primary_phone'] . ') | <b>('.$vehicle_type.')</b></p>';
							} else {	
								$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_display_name'] . ' </span>' . $participants_data['user_email'] . ' | Cell: ' . $participants_data['st_primary_phone'] . ') </p>';
							}	
                        }
						if($participants_data['in_photography_profile']=='0' && $vehicle_data!='')
						{
							$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Vehicle:</span> ' . $vehicle_data . '</p>';
						}	
                    }


                    if (isset($leg_data['non_doobert_leg_participant_details']) && !empty($leg_data['non_doobert_leg_participant_details'])) {
                        foreach ($leg_data['non_doobert_leg_participant_details'] as $key_user => $participants_data) {

                            $vehicle_data = '';
                            if (isset($participants_data['st_vehicle_color']) && $participants_data['st_vehicle_color'] != '') {
                                $vehicle_data .= ucfirst($participants_data['st_vehicle_color']) . ', ';
                            }
                            if (isset($participants_data['st_vehicle_type']) && $participants_data['st_vehicle_type'] != '') {
                                $vehicle_data .= $participants_data['st_vehicle_type']. ', ';
                            }
                            if (isset($participants_data['st_license_plate']) && $participants_data['st_license_plate'] != '') {
                                $vehicle_data .= "Plate: ".$participants_data['st_license_plate'] . ", ";
                            }
                            if (isset($participants_data['st_license_state']) && $participants_data['st_license_state'] != '') {
                                $vehicle_data .= "State: ".$participants_data['st_license_state'];
                            }
							
							$vehicle_data = rtrim(trim($vehicle_data), ',');

                            
                            $volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_name'] . '</span> (Email: <a href="mailto:'.$participants_data['st_email'].'" style="text-decoration:underline;">' . $participants_data['st_email'] . '</a> | Cell: ' . $participants_data['st_phone'] . ')</p>';
                        
							$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Vehicle:</span> ' . $vehicle_data . '</p>';
                        }
                    }
					
                if($leg_data['route_type_id'] == '2')
				{
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;">'.$leg_data['st_meeting_location'].'</p>';
					$volunteer_str .= '</div>';
					
					$volunteer_str .= '<p style="background-color:#f5f5f1; font:bold 14px Arial, Helvetica, sans-serif;color:#575757; padding:10px 18px; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; text-align:left;">LEG #'.($i+1).' AND LEG #'.($i+2).' MEETING/TRANSFER TIME: '.$prev_start_time.' - '.$next_start_time.'</p>';
				
				}else if($leg_data['route_type_id'] == '3'){
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Meeting Location:</span> '.$meeting_loc.'</p>';	
				}else{
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">From Meeting Location:</span> '.$meeting_loc.'</p>';
					
						$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">To Meeting Location:</span> '.$to_meeting_loc.'</p>';
					
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Leg Instruction:</span> '.$leg_instruction.'</p>';
					
					$volunteer_str .= '</div>';
					
					if(isset($next_start_time) && $next_start_time != '')
					{	
						$volunteer_str .= '<p style="background-color:#f5f5f1; font:bold 14px Arial, Helvetica, sans-serif;color:#575757; padding:10px 18px; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; text-align:left;">LEG #'.($i+1).' AND LEG #'.($i+2).' MEETING/TRANSFER TIME: '.$leg_end_time.' - '.$next_start_time.'</p>';
					}
				}
				
				
				$i++;
				}
				
				if ($i == 0) {
                    $volunteer_str .= '';
                }

                $templete = str_replace("##volunteered_details##", $volunteer_str, $templete);

                $animals_cnt = 0;
                $transport_animals = $this->orgtrasnportation_model->get_transport_animals($this->session->userdata('transport_id'));

                if (isset($transport_animals) && !empty($transport_animals)) {
                    $animals_cnt = count($transport_animals);
                } else if(isset($transport_details['no_of_kitten']) &&!empty($transport_details['no_of_kitten']) && $transport_details['no_of_kitten']!='0' && isset($transport_details['st_trans_type']) && $transport_details['st_trans_type']=='R')
				{
					$animals_cnt = $transport_details['no_of_kitten'];
				}
 

                $animal_str = '';
				
				$animal_str .= '<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0px 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:23px; text-align:left;">Animal(s) In this transport';
				
				if (!empty($transport_animals) && count($transport_animals)>3) {
					
					$animal_str .= '<a href="'.base_url().$transport_url.$this->session->userdata('transport_id').'" style="float:right;font:bold 14px Arial, Helvetica, sans-serif;color:#fff;text-decoration:underline; text-decoration: underline !important;  line-height: 40px;">View More</a>';
				}
				
				 $animal_str .= '</div>';
				
				
				
                $animal_image = '';

                //Animal_details
                $org_image = $this->orgtrasnportation_model->get_org_image($this->session->userdata('org_id'));

                $i = 0;
                $animal_str .= '<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
                if (!empty($transport_animals)) {	?>
			<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 10px;">
				<?php
                    foreach ($transport_animals as $rows) {
                        //if ($i > 2) {
                       //     break; 
                       // }
						
						
						$rvd	=	($rows['st_rabies_vaccine'] == 'Y')?'Yes':($rows['st_rabies_vaccine']=='N'?'No':'Unknown');
								if(isset($rows['dt_rabiesvac_date']) && $rows['dt_rabiesvac_date']!='' && $rows['dt_rabiesvac_date']!='0000-00-00' && $rows['dt_rabiesvac_date']!='1969-31-12')
								{
									$rvdt=	date('F j, Y',strtotime($rows['dt_rabiesvac_date']));
									$rvd= $rvd.' - '.$rvdt;
								}
								
								
								$cvidet='';
								$cvidet	=	($rows['st_cvi'] == 'Y')?'Yes':($rows['st_cvi']=='N'?'No':'Unknown');
								
								if(isset($rows['dt_cvi']) && $rows['dt_cvi']!='' && $rows['dt_cvi']!='0000-00-00' && $rows['dt_cvi']!='1969-31-12')
								{
									$cvidt=	date('F j, Y',strtotime($rows['dt_cvi']));
									$cvidet= $cvidet.' - '.$cvidt;
								}
								
								$crates	=	($rows['st_crates_well'] == 'Y')?'Yes':($rows['st_crates_well']=='N'?'No':'Unknown');							
								$flight	=	($rows['st_flight_risk'] == 'Y')?'Yes':($rows['st_flight_risk']=='N'?'No':'Unknown');								
								$weight='';
								if($rows['in_weight'])
								{ 
								if($rows['in_weight']=='U'){$weight ='Unknown';}
								else if($rows['in_weight'] == 0){$weight ='';}
								else { $weight = $rows['in_weight']; }
								}
								
								
								$travel_with_values = '';
								$travel_with = explode(',',$rows['st_travel_with']);
								foreach($travel_with as $row) {
									$travel_with_values .= $this->common_function->travel_with[$row].', ';
								}
								$travelwith	=	substr($travel_with_values,0,strlen($travel_with_values)-2);
								$enterage='';
					 			$enterage	=	($rows['in_enter_age']!='')?' ('.$rows['in_enter_age'].')':''; 
								
								
                        $animal_url = base_url() . 'animal-' . $rows['in_animal_id'] . '-' . $this->common_function->get_filtered_name($rows['st_animal_name']);

                        if ($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload') . "animal_images/315x315/" . $rows['st_file_name'])) {
                            $animal_image = base_url() . 'upload/animal_images/315x315/' . $rows['st_file_name'];
                        } else {
                            $animal_image = base_url() . 'upload/org_doc/thumb/' . $org_image;
                        }

                        $animal_str .= '<td><div style="width:200px; background-color:#f5f9f8; border:1px solid #d6d4d4; text-align:center; display:inline-block; margin:0 20px 0 0;"><img alt="'.$rows['st_animal_name'].'" title="'.$rows['st_animal_name'].'" src="'.$animal_image.'"  style="border:none; max-width:100%; height:auto;" /><br>
    <span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; padding-bottom:10px; padding-top:13px; display:inline-block">'.$rows['st_animal_name'].'</span><br><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; padding:0 0 13px 0; display:inline-block;">'.$rows['st_animal_breed_name'].' '.$rows['st_animal_type_name'].'</span>
    </div></td><div style="float:left;margin-top:-98px"><table><tr><td><strong>Animal Type:</strong></td><td>'.$rows['st_animal_type_name'].'</td></tr><tr><td><strong>Rabies Vaccine:</strong></td><td>'.$rvd.'</td></tr><tr><td><strong>Health Cert or CVI:</strong></td><td>'.$cvidet.'</td></tr><tr><td><strong>Neutered/Spayed:</strong></td><td>'.@$this->common_function->neutered_spayed[$rows['in_neutered_id']].'</td></tr><tr><td><strong>Primary Breed:</strong></td><td>'.$rows['st_animal_breed_name'].'</td></tr><tr><td><strong>Weight:</strong></td><td>'.$weight.'</td></tr><tr><td><strong>Age:</strong></td><td>'.@$this->common_function->age[$rows['in_age']].$enterage.'</td></tr><tr><td><strong>Crates Well:</strong></td><td>'.$crates.'</td></tr><tr><td><strong>Flight Risk:</strong></td><td>'.$flight.'</td></tr><tr><td><strong>Travelling With:</strong></td><td>'.$travelwith.'</td></tr>
</table></div><br clear="all"></div>';

                        $i++;
                    }
                }
				
				$animal_str .= '</tr></table>'; ?>
				</p>
				<?php  
				
				$animal_str = '';
				$animal_image = '';
			
			//Animal_details
			$org_image = $this->orgtrasnportation_model->get_org_image($this->session->userdata('org_id'));
			$i=0;
			if(!empty($transport_animals)) {
				foreach($transport_animals as $rows) {
					//if($i>1) { break;}
					$animal_url = base_url().'animal-'.$rows['in_animal_id'].'-'.$this->common_function->get_filtered_name($rows['st_animal_name']);
					
					if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
						$animal_image = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
					} else {
						$animal_image = base_url().'upload/org_doc/thumb/'.$org_image;
					}
					
					
				$animal_str .= '<div style="display:inline-block; margin-bottom:20px; text-align: center; vertical-align:top;"><a href="'.$animal_url.'" style="padding: 6px; margin: 0 10px 10px 0; border: 1px solid #e1e1e1; background-color: #f4f4f4; position: relative; display: block; height: 78px; width:87px;"><img src="'.$animal_image.'" alt="img5" style="margin: auto; max-width:100%; max-height:100%;"/></a><span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; display:block">'.$rows['st_animal_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; display:block;">'.$rows['st_animal_breed_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#444; display:block;">'.$rows['st_animal_type_name'].'</span></div>';
    
  					$i++;
				}				
			} else if(isset($transport_details['no_of_kitten']) &&!empty($transport_details['no_of_kitten']) && $transport_details['no_of_kitten']!='0' && isset($transport_details['st_trans_type']) && $transport_details['st_trans_type']=='R')
			{
				/*$animal_str .= $transport_details['no_of_kitten'].' ';
				$animal_str .= (isset($transport_details['no_of_kitten']) && $transport_details['no_of_kitten'] <=1)?"kitten":"kittens";*/	
				//$transportation_kitten_url = base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id').'/';
				//$animal_str .= '<td bgcolor="#f4f4f4" width="89" height="80" style="border: 1px solid #e1e1e1; padding: 6px; margin: 0 10px 10px 0; display: inline-block; text-align: center;"><a href="'.$transportation_kitten_url.'" style="position: relative; display: block; height: 80px;"><img src="'.base_url().'assets/img/kitten.jpg" alt="img5" style="position: absolute; top: 0; bottom: 0; left: 0; right: 0; margin: auto;"/></a></td>';
				$transportation_kitten_url = base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id').'/';
				$kitten_image = base_url().'assets/img/kitten.jpg';
				$total_kitten = (isset($transport_details['no_of_kitten']) && $transport_details['no_of_kitten'] <=1)?$transport_details['no_of_kitten']." kitten":$transport_details['no_of_kitten']." kittens";
				$animal_str .= '<div style="display:inline-block; margin-bottom:20px; text-align: center; vertical-align:top;"><a href="'.$transportation_kitten_url.'" style="padding: 6px; margin: 0 10px 10px 0; border: 1px solid #e1e1e1; background-color: #f4f4f4; position: relative; display: block; height: 78px; width:87px;"><img src="'.$kitten_image.'" alt="img5" style="margin: auto; max-width:100%; max-height:100%;"/></a><span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; display:block">'.$total_kitten.'</span></div>';
				
			}

			/*else {
				echo "<pre>"; print_r($transport_details);
				die;
			}*/

			

			
			// added by sadique
			if(!empty($transport_legs)) {	
			foreach($transport_legs as $row) {
				if($row['route_type_id'] == 0 || $row['route_type_id'] == 1) {
					$pick_address = $row['pick_city'].', '.$row['pick_state'].', '.$row['pick_country'].', '.$row['pick_zip'];
					$drop_address = $row['drop_city'].', '.$row['drop_state'].', '.$row['drop_country'].', '.$row['drop_zip'];
				$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><span style="color: #333333;">From</span> '.$pick_address.' <br/><span style="color: #333333;">to</span> '.$drop_address.'</td></tr></tbody></table>';
				} else {
					$o_pick_address = $row['o_pick_city'].', '.$row['o_pick_state'].', '.$row['o_pick_zip'].', '.$row['o_pick_country'];
					$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr><td style="padding: 20px;"><span style="color: #333333;">Meeting Location</span>'.$o_pick_address.'</td></tr></tbody></table>';
				}
				
			}
		} else {
			$leg_str .= '<table cellpadding="0" cellspacing="0" width="100%" style="color: #777777; box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.11); border: 1px solid #dedede; font:normal 18px/26px Helvetica, sans-serif; margin-bottom:15px;"><tbody><tr></tr></tbody></table>';
		}
		
		
		//$templete	=	str_replace("##leg_detail##",$leg_str,$templete);
		
		$templete	=	str_replace("##volunteered_details##",$volunteer_str,$templete);
		
			
			// for latest Blog.
			$blog_details = $this->get_doobert_recent_post();
			
			if(!empty($blog_details))
			{
			$templete   =  str_replace("##blog_title##",$blog_details['title'],$templete);
			$templete   =  str_replace("##blog_content##",$blog_details['content'],$templete);
			$templete   =  str_replace("##blog_link##",$blog_details['blog_link'],$templete);
			}
				
				
                $templete = str_replace("##animal_details##", $animal_str, $templete);
				
				$additional_info_str = ''; 				
				$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
				
				if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
				{
				$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
				
				$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_data[0]['st_add_comments'].'</p>';
				
				if(isset($transport_files) && !empty($transport_files))
				{
				$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
				foreach($transport_files as $key=>$value)
				{
					$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
				}
				$additional_info_str .='</ul>';
				}
				}
				
				$templete = str_replace("##additional_details##", $additional_info_str, $templete);
				$templete	=	str_replace("##animal_count##",$animals_cnt,$templete);
				
			}
			
			$subject	= str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$subject);
			//$subject	= str_replace("##original_date##",$transport_details['target_date'],$subject);
			//$subject  = str_replace("##original_date##", $transport_details['dt_pickup_date'], $subject);
			$subject 	= str_replace("##Pickup_date##", $transport_details['dt_pickup_date'], $subject);
			$subject 	= str_replace("##Dropoff_date##", $transport_details['target_date'], $subject);
			
			//$this->email->subject($subject);
			$user_detail_array = array();
			if(isset($all_email) && !empty($all_email))
			{
				$inc_val = 0;
				foreach($all_email as $key=>$values)
				{
					$templete2 = str_replace("##user_display_name##",$values['display_name'],$templete);
					$strMail = $templete2;
					
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					$user_to_id = $this->common_model->get_user_id_by_email($values['user_email']);
					
					if(isset($user_to_id) && !empty($user_to_id))
					{	
						$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
						$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
					} else {
						$message = str_replace("##change_to_daily_digest##",base_url(),$message);		
						$message = str_replace("##unsubscribe_url##",base_url(),$message);
					}
					
					//$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					//$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					
                    $send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_id;
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
								$affiliate_text = '';
					// LCR Banner added				
								$q1			=	$this->common_model->get_affiliate_detail('6','C');	
							    $q2			=	$this->common_model->get_affiliate_detail('6','L');	
							    $q3			=	$this->common_model->get_affiliate_detail('6','R');
											   		
									if(isset($q1) && !empty($q1)){	
										
										foreach($q1 as $qr)
										{
											 
											if(!empty($qr['st_code']))
											{    
												//$affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
												  $affiliate_content	= $qr['st_code'];
											}
											elseif(!empty($qr['st_image']))
											{
												$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
												$imgtitle   =   $qr['st_banner_name'];										
												//$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';
												$affiliate_content	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';			  
											}
											else
											{
												$affiliate_content='';								 
											}
										  
											$affiliate_desc = isset($qr['st_affiliate_content']) && trim($qr['st_affiliate_content'])!=''?$qr['st_affiliate_content']:'';
											if(isset($affiliate_desc) && !empty($affiliate_desc))
											{	
												$affiliate_text ='<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">'.$affiliate_desc.'</p>';
											}
											  
												
										}
									}			
									   
								   else
								   {
									  $affiliate_content='';
								   }
				
						//LEFT BANNER
									if(isset($q2) && !empty($q2)){					   		
										foreach($q2 as $qr)
										{								 
											 if(!empty($qr['st_code']))
											{    
												   $leftbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{
													
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
													$imgtitle   =   $qr['st_banner_name']; 	
													$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
												  
											}
											else
											{
												   $leftbanner='';								 
											} 	
										}
									}
									else
									{
										   $leftbanner='';								 
									}
									
						//RIGHT BANNER
									if(isset($q3) && !empty($q3)){					   		
										foreach($q3 as $qr)
										{
											 
											if(!empty($qr['st_code']))
											{    
												   $rightbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{	
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name']; 	
													$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-left: 20px;" /></a>';	
												  
											}
											else
											{
												   $rightbanner='';								 
											}								  
												
										}
									}
									else
									{
										   $rightbanner='';								 
									}
				
				
						$message = str_replace("##affiliate_content##",$affiliate_content,$message);	
						$message = str_replace("##leftbanner##",$leftbanner,$message);
						$message = str_replace("##rightbanner##",$rightbanner,$message);
						$message = str_replace("##DONATION##",$donation,$message);
						$message = str_replace("##affiliate_content_description##",$affiliate_text,$message);
				// LCR Banner added			
					
					
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
							
					$inc_val++;
				}
				
				if($email_id == 7)
				{
					$email_type = "6"; 
					$email_type_detail =  $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				}else{
					$email_type = "7"; 
					$email_type_detail =  $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				}
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
		}
	
	}



	#=========================================================
	#	Function : join_transport_email
	#	Purpose  : Send email to Trasport coordinator for join/left transportation
	#=========================================================		
	function join_transport_email($all_email,$email_id,$transport_details)
	{													
		$this->load->library('email');
		
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);	
			if($transport_details['target_date']!='' && isset($transport_details['target_date']))
			{			
				$templete	= str_replace("##Pickup_date##",$transport_details['target_date'],$templete);
			} else {
				$templete	= str_replace("##Pickup_date##",'',$templete);
				if($email_id=='17' || $email_id=='16' )
				{	
					$templete =	str_replace("scheduled for","", $templete);
				}	
			}	
			$templete	= str_replace("##user_display_name##",$transport_details['name'],$templete);
			
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	= str_replace("##percentage##",$transport_details['percent'],$templete);
			
			$templete	= str_replace("##transport_url##",base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'),$templete);
			
			// added by sadique
			$org_details 	= $this->common_model->get_single_org_details($transport_details['in_organization_id']);	
					$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
					if($share_template == 1)
					{
						$main_image = $this->generate_fb_image_option1();
					} 
					
					else if($share_template == 5){						
						$main_image = $this->generate_fb_image_option5();						
					}
					else if($share_template == 6){						
						$main_image = $this->generate_fb_image_option6();						
					}
					else if($share_template == 7){						
						$main_image = $this->generate_fb_image_option7();						
					}
					else if($share_template == 8){						
						$main_image = $this->generate_fb_image_option8();						
					}				
					
					else {
						$main_image = $this->generate_fb_image($share_template);
					}	
				
				 $fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
				if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
			$subject	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$subject);
			if($transport_details['target_date']!='' && isset($transport_details['target_date']))
			{
				$subject	= str_replace("##Pickup_date##",$transport_details['target_date'],$subject);
			} else {
				$subject	= str_replace("##Pickup_date##",'',$subject);
			}
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}

			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
			}
			
			
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
					
			//$this->email->subject($subject);
			if(isset($transport_details['leg_origin']) && isset($transport_details['leg_destination'])){
			$templete =	str_replace("##leg_start##",$transport_details['leg_origin'], $templete);
			if(empty($transport_details['leg_destination']) && ($email_id=='17' || $email_id=='16'))
			{
				$templete =	str_replace("<b>To</b>","", $templete);
				$templete =	str_replace("<b>From</b>","<b>Overnight Leg</b>", $templete);
				$templete =	str_replace("<b>From </b>","<b>Overnight Leg</b>", $templete);	
			}	
			$templete =	str_replace("##leg_end##",$transport_details['leg_destination'], $templete);
			}
			if(isset($transport_details['total_leg']) && isset($transport_details['cover_leg'])){
			$templete =	str_replace("##total_legs##",$transport_details['total_leg'], $templete);	
			$templete =	str_replace("##cover_legs##",$transport_details['cover_leg'], $templete);
			}
			
			$user_detail_array = array();
			if(isset($all_email) && !empty($all_email))
			{
				$inc_val = 0;
				foreach($all_email as $key=>$values)
				{
					$templete2 = str_replace("##transport_coordinator##",$values['display_name'],$templete);
					$strMail = $templete2;
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);
					
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
					$message = str_replace("##DONATION##",$donation,$message);
					
					$send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
					
					$inc_val++;
				}
				
				if($email_id == 16)
				{
					$email_type = "3"; 
					$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				}else{
					$email_type = "4"; 
					$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				}
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
			
			//echo $this->email->print_debugger();die;
			//echo "<pre>";print_r($templete);die;		
		}
	}
	
	function remove_from_transport_email($removed_user_email,$email_id,$transport_details)
	{													
		//echo "<pre>";print_r($transport_details);print_r($removed_user_email);die;
		$this->load->library('email');
		
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			//$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);		
			//$templete	= str_replace("##original_date##",$transport_details['target_date'],$templete);
			$templete	= str_replace("##user_name##",$transport_details['removed_user_name'],$templete);
			
			$templete	= str_replace("##transport_coordinator_display_name##",$transport_details['coordinator_name'],$templete);
			
			//$templete	= str_replace("##user_display_name##",$transport_details['name'],$templete);
			
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}
			
			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
				
				// added by sadique
				$templete = str_replace("##coordinator_email##",$transport_details['st_email'],$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
				$templete = str_replace("##coordinator_email##"," ",$templete);
			}	
			// added by sadique
			
			//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
			$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
			if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
			
			$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);

			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
			
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			//$templete	= str_replace("##percentage##",$transport_details['percent'],$templete);
			
			//$templete	= str_replace("##transport_url##",base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'),$templete);
			
			$templete = str_replace("##transport_coordinator_display_name##",$transport_details['coordinator_name'],$templete);
			
			$subject	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$subject);
			//$subject	= str_replace("##original_date##",$transport_details['target_date'],$subject);
			//$this->email->subject($subject);
			if(isset($removed_user_email) && $removed_user_email != '')
			{
				//echo "<pre>";print_r($values);die;
				$message  	= 	$templete;	
				$to			=	$removed_user_email;
				//$to			=	'ghanshyam.maurya@pulsesolutions.net';
				$subject	= 	$subject;
				$category  =    $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				$user_to_id = $this->common_model->get_user_id_by_email($to);
					
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
	
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
				$message = str_replace("##DONATION##",$donation,$message);
				
				$send_email = 0;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_details[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}	
				
				if($send_email == 0)
				{
					$transport_setting = $this->common_model->user_notification_setting($user_to_id);
					if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
					{
						$send_email = 1;
					}								
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				
				
				$email_type = "5"; 
				$email_type_detail = $orgcode.$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];

				$user_detail_array[0] = array("name"=>$transport_details['removed_user_name'],"email_address"=>$removed_user_email);
				
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
			
		}
	}


	#=========================================================
	#	Function : get_json
	#	Purpose  : for map start and end point letlong by ajax in json format
	#	Note	 : This function commented new function is added for  more thne 9 legs
	#=========================================================			
	/*	
	function get_json()
	{
		//$this->session->set_userdata('org_id','5');
		//$this->session->set_userdata('transport_id','5');
		$tra_id					= $this->session->userdata('transport_id');
		if($tra_id=='')
		{
			die;
		}
		$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$way_points = "";
		//echo "<pre>";print_r($transport_details);print_r($leg_details);die;
		if(isset($leg_details) && !empty($leg_details))
		{
			$q=1;
			foreach($leg_details as $key=>$value)
			{
				if(count($leg_details)!= $q)
				{
					//$way_points 	.= "|".$value['drop_street'].",".$value['drop_city'].",".$value['drop_state'].",".$value['drop_zip'].",".$value['drop_country'];
					$way_points 	.= "|".(($value['drop_street']?$value['drop_street'].",":"").($value['drop_city']?$value['drop_city'].",":"").($value['drop_state']?$value['drop_state']:"").($value['drop_zip']?", ".$value['drop_zip']:"").($value['drop_country']?", ".$value['drop_country']:""));

				}
				if(count($leg_details)==1)
				{
					//$way_points 	.= "|".$value['pick_street'].",".$value['pick_city'].",".$value['pick_state'].",".$value['pick_zip'].",".$value['pick_country']."|".$value['drop_street'].",".$value['drop_city'].",".$value['drop_state'].",".$value['drop_zip'].",".$value['drop_country'];
					
					$way_points 	.= "|".(($value['pick_street']?$value['pick_street'].",":"").($value['pick_city']?$value['pick_city'].",":"").($value['pick_state']?$value['pick_state']:"").($value['pick_zip']?", ".$value['pick_zip']:"").($value['pick_country']?", ".$value['pick_country']:""))."|".(($value['drop_street']?$value['drop_street'].",":"").($value['drop_city']?$value['drop_city'].",":"").($value['drop_state']?$value['drop_state']:"").($value['drop_zip']?", ".$value['drop_zip']:"").($value['drop_country']?", ".$value['drop_country']:""));
				}
				$q++;
			}
		}
		//echo "<pre>";print_r($way_points);die;
		$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
		$transport_info['cover_dis_per'] 	= '0';
		$transport_info['remin_distance']	= '0';
		if(isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance']>0)
		{
			$total_dist_per 					= ($transport_info['in_distance_covered']*100)/$transport_info['in_tot_distance'];
			//$transport_info['cover_dis_per'] 	= number_format($total_dist_per);
			$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['remin_distance'] 	= number_format(($transport_info['in_tot_distance']-$transport_info['in_distance_covered']),"2",".","");
		}
		$data['transport_details'] 				= $transport_info;
		//echo "<pre>";print_r($transport_info);die;
		//$transport_info['st_from_zip']
			//$origin_loc = ($transport_info['st_from_street'].",".$transport_info['st_from_city'].",".$transport_info['st_from_state'].",".$transport_info['st_from_zip']);
			//$dest_loc = ($transport_info['st_to_street'].",".$transport_info['st_to_city'].",".$transport_info['st_to_state'].",".$transport_info['st_to_zip']);
			
			$origin_loc = (($transport_info['st_from_street']?$transport_info['st_from_street'].",":"").($transport_info['st_from_city']?$transport_info['st_from_city'].",":"").($transport_info['st_from_state']?$transport_info['st_from_state']:"").($transport_info['st_from_zip']?", ".$transport_info['st_from_zip']:"").($transport_info['st_from_country']?", ".$transport_info['st_from_country']:""));
			$dest_loc 	= (($transport_info['st_to_street']?$transport_info['st_to_street'].",":"").($transport_info['st_to_city']?$transport_info['st_to_city'].",":"").($transport_info['st_to_state']?$transport_info['st_to_state']:"").($transport_info['st_to_zip']?", ".$transport_info['st_to_zip']:"").($transport_info['st_to_country']?", ".$transport_info['st_to_country']:""));			
			$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),$way_points);
			//echo "<pre>";print_r($routes_miles );die;
			$routes = $routes_miles['routes_lat_lon'];	
		//echo $routes_miles['distance'];die;
		//echo "<pre>";print_r($transport_details[0]['in_distance_covered']);
		if(isset($transport_details[0]['in_distance_covered']) 
			&& ($transport_details[0]['in_distance_covered']!=$transport_details[0]['in_tot_distance']) 
			&& isset($routes_miles['distance']) 
			&& $routes_miles['distance']!='0' 
			&&  $transport_details[0]['in_distance_covered']!=$routes_miles['distance'])
		{
			if(isset($tra_id) && $tra_id>0)
			{
				$tot_dist = array("in_tot_distance"=>$routes_miles['distance']);
				$this->orgtrasnportation_model->update_transport_details($tot_dist);
			}
		}
		$points ='';
		if(!empty($routes))
		{
			//echo  $routes;exit;
			$points['points'] = $routes;
			echo json_encode($points);exit;
		}
	}
	*/
	
	
	
	#=========================================================
	#	Function : get_json
	#	Purpose  : for map start and end point letlong by ajax in json format 
	#	Note	 : This function is modify for is user add more then 9 legs google does not give an route of the map 
	#	Sp Note	 : Legs divided into a pagination  Pagination is Number is 9
	#=========================================================			
		
	function get_json() 
	{
		$tra_id					= $this->session->userdata('transport_id');
		if($tra_id=='')
		{
			die;
		}
		$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$way_points = "";
		$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
		$routes_miles_ar = array();
		//echo "<pre>";print_r($transport_details); die;
		//echo "<pre>";
		//print_r($leg_details);die;
		if(isset($leg_details) && !empty($leg_details))
		{
			foreach($leg_details as $leg_key=>$leg_value)
			{
				if($leg_value['route_type_id'] == 2)
				{
					unset($leg_details[$leg_key]);
				}
			}
			
			$q=1;
			foreach($leg_details as $key=>$value)
			{

				if(count($leg_details)!= $q)
				{
					if($value['drop_longitude']!='' && $value['drop_latitude']!='')
					{
						$way_points 	.= "|".(($value['drop_longitude']?$value['drop_latitude'].",".$value['drop_longitude']:""));
					}
					else
					{
						$way_points 	.= "|".(($value['drop_street']?$value['drop_street'].", ":"").($value['drop_city']?$value['drop_city'].",":"").($value['drop_state']?$value['drop_state']:"").($value['drop_zip']?",".$value['drop_zip']:"").($value['drop_country']?",".$value['drop_country']:""));
					}
	
				}
				if(count($leg_details)==1)
				{
					if($value['pick_latitude']!='' && $value['pick_longitude']!='' && $value['drop_latitude']!='' && $value['drop_longitude']!='')
					{
						$way_points 	.= "|".$value['pick_latitude'].",".$value['pick_longitude']."|".$value['drop_latitude'].",".$value['drop_longitude'];
					}
					else
					{
						$way_points 	.= "|".(($value['pick_street']?$value['pick_street'].",":"").($value['pick_city']?$value['pick_city'].", ":"").($value['pick_state']?$value['pick_state']:"").(isset($value['pick_zip']) && $value['pick_zip'] != '' ? ",".$value['pick_zip']:"").($value['pick_country']?", ".$value['pick_country']:""))."|".(($value['drop_street']?$value['drop_street'].", ":"").($value['drop_city']?$value['drop_city'].",":"").($value['drop_state']?$value['drop_state']:"").(isset($value['drop_zip']) && $value['drop_zip'] != '' ?",".$value['drop_zip']:"").($value['drop_country']?",".$value['drop_country']:""));
					}
				}
				$q++;
			}
			
			$origin_loc = (($transport_info['st_from_street']?$transport_info['st_from_street'].",":"").($transport_info['st_from_city']?$transport_info['st_from_city'].",":"").($transport_info['st_from_state']?$transport_info['st_from_state']:"").($transport_info['st_from_zip']?",".$transport_info['st_from_zip']:"").($transport_info['st_from_country']?",".$transport_info['st_from_country']:""));
			$dest_loc 	= (($transport_info['st_to_street']?$transport_info['st_to_street'].",":"").($transport_info['st_to_city']?$transport_info['st_to_city'].",":"").($transport_info['st_to_state']?$transport_info['st_to_state']:"").($transport_info['st_to_zip']?",".$transport_info['st_to_zip']:"").($transport_info['st_to_country']?",".$transport_info['st_to_country']:""));			
			$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),$way_points);
			//$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc));
			$routes = $routes_miles['routes_lat_lon'];
					
		}
		$points ='';
		if(!empty($routes))
		{
			$points = array();
			$points['points'] = $routes;
			echo json_encode($points);
		}
	}
	

	#=========================================================
	#	Function : get_legs
	#	Purpose  : for map get legs with lat long in json format
	#=========================================================		
		
	function get_legs($page=false)
	{
		$tra_id					= $this->session->userdata('transport_id');
		if($tra_id=='')
		{
			die;
		}
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$i=1;
		$legs_details = array();
		$legs_details2 = array();
		$dist_new = '0';
		if(!empty($leg_details))
		{
			//echo count($leg_details);die;
			
			//code added by ghanshyam to remove overnight legs from array starts
			/*foreach($leg_details as $leg_key=>$leg_value)
			{
				if($leg_value['route_type_id'] == 2)
				{
					unset($leg_details[$leg_key]);
				}
			}*/
			//print_r($leg_details); exit;
			//code added by ghanshyam to remove overnight legs from array ends
			
			//echo '<pre>';print_r($leg_details);die;
			if(count($leg_details)>8)
			{		
				$leg_details = array_values($leg_details);	
				
				$legs_count = (count($leg_details))/8;
				$pages_count =  ceil($legs_count);
				$q=0;
				$dist_new = 0;
				$ar_legs_value = array_values($leg_details);
				$way_points  = '';
				//for($m=1;$m<=$pages_count;$m++)
				/*if($page)
				{
					$m = $page;
					$next_loop = 7*$page;
					$first_loop = (($next_loop - 7)+1);
				}
				else
				{
					$m = 1;
					$next_loop = 7;
					$first_loop = 0;
				}
				//echo $m;die;
					if($m==1)
					{
						$next_loop = 7;
						$first_loop = 0;
					}
					else
					{
						$first_loop = $first_loop;
						$next_loop = ($next_loop*$m)<count($ar_legs_value)?($next_loop*$m):(count($ar_legs_value)-1);	
					}
					//echo $first_loop."==".$next_loop."<br>";die;*/
					$way_points	=	'';
					//for($a=$first_loop;$a<=$next_loop;$a++)
					//echo "<pre>";print_r($ar_legs_value);die;
					for($a=0;$a<count($ar_legs_value);$a++)
					{	
					    if(isset($ar_legs_value[$a]['pick_zip']) && isset($ar_legs_value[$a]['drop_zip']) && $ar_legs_value[$a]['pick_zip'] != '' && $ar_legs_value[$a]['drop_zip'] != ''){	
							if($ar_legs_value[$a]['pick_zip']!=$ar_legs_value[$a]['drop_zip'])	
							{
								$route_details = $this->orgtrasnportation_model->get_legs_path($ar_legs_value[$a]['leg_id']);
								//echo "<pre>";print_r($route_details);die;
								if(count($route_details)<=0)
								{								
									
								$origin_loc 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].", ":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].", ":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].", ":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ", ".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc 	= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].", ":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].", ":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$ar_legs_value[$a]['route_type_id']);	
								$legs	 		= $routes_miles['routes_lat_lon'];
								$dist_new 		= $dist_new+$routes_miles['distance'];
									if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
									{
										$route_details = array(	"in_transportation_leg_id"	=> $ar_legs_value[$a]['leg_id'],
																"in_transportation_id"		=> $this->session->userdata('transport_id'),
																"in_route_type"				=> $ar_legs_value[$a]['route_type_id'],
																"st_legs_details"			=> $routes_miles['route_path'],
																"fl_distance"				=> $routes_miles['distance'],
																"in_deleted"				=> "0"
										);	
										$this->common_model->insert_data("tbl_routes",$route_details);
									}
								}
								else
								{
									$legs	 		= $this->orgtrasnportation_model->decodePolylineToArray($route_details['st_legs_details']);
									if($route_details['in_route_type']=='1')
									{
										$legs = array($legs[0],$legs[(count($legs)-1)]);
									}
									//echo "<pre>";print_r($legs);die;
									$dist_new 		= $route_details['fl_distance'];
								}			
								
								$color = $this->common_function->color[$i];
								/*if($next_loop<$a){$color = "#c8bfe1";}
								elseif($first_loop>$a){$color = "#c8bfe1";}*/
								
								if($ar_legs_value[$a]['route_type_id']=='1')
								{
									//echo "<pre>";print_r($legs);die;
									if(empty($legs))
									{
										$pickup_airport = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['pick_street']);
										$dropoff_airport  = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['drop_street']);
										$legs = array(array(isset($pickup_airport['st_latitude'])?$pickup_airport['st_latitude']:"0.00",isset($pickup_airport['st_longitude'])?$pickup_airport['st_longitude']:"0.00"),array(isset($dropoff_airport['st_latitude'])?$dropoff_airport['st_latitude']:"0.00",isset($dropoff_airport['st_longitude'])?$dropoff_airport['st_longitude']:"0.00"));
										//echo "<pre>";print_r($pickup_airport);print_r($dropoff_airport);
									}
									
								}
						}
						}
						else{
									$legs = array();
						}
							if(!empty($legs))
							{
								$origin_loc1 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].", ":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].", ":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].", ":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ", ".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc1 			= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].", ":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].", ":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								$screen_name = $ar_legs_value[$a]['display_name'];
								$legparticipant_user_detail = $this->orgtrasnportation_model->legparticipant_user_detail($ar_legs_value[$a]['leg_id']);
								$screen_name = $legparticipant_user_detail['name'];
								
								if(!isset($screen_name) || $screen_name == '')
								{
									if(isset($ar_legs_value[$a]['non_doobert_leg_participant_details']) && !empty($ar_legs_value[$a]['non_doobert_leg_participant_details']))
									{
										$screen_name = $ar_legs_value[$a]['non_doobert_leg_participant_details'][0]['st_name'];									
									}
								}
								
								
								$legs_details[] = array("id"			=>	$ar_legs_value[$a]['leg_id'],
														"leg_points"	=>	$legs,
														"color"			=>	$color,
														//"user"			=> array("id"=>$ar_legs_value[$a]['user_id'],"screen_name"=>$ar_legs_value[$a]['display_name'],"gravatar_hash"=>md5(time())),
														//"user"			=> array("id"=>$ar_legs_value[$a]['user_id'],"screen_name"=>$screen_name,"gravatar_hash"=>md5(time())),
														"from_loc"		=> $origin_loc1,
														"to_loc"		=> $dest_loc1,
														"user"          => isset($screen_name)?$screen_name:''
													);
							}
											
							if($i==8)
							{  
								$i=1;
							}
							else
							{
								$i++;					
							}	
					} 
				
			}
			else
			{
				$all_nal = '';	
				//echo "<pre>";print_r($leg_details);die;
				foreach($leg_details as $key=>$value)
				{
	
						if($value['route_type_id'] == 2)
						{
							$value['pick_street'] = $value['st_street'];
							$value['pick_city'] = $value['st_city'];
							$value['pick_state'] = $value['st_state'];
							$value['pick_zip'] = $value['st_zip'];
							$value['pick_country'] = $value['st_country'];
							
							$value['drop_street'] = $value['st_street'];
							$value['drop_city'] = $value['st_city'];
							$value['drop_state'] = $value['st_state'];
							$value['drop_zip'] = $value['st_zip'];
							$value['drop_country'] = $value['st_country'];
						}
	
						if(($value['pick_street']!='' || $value['pick_city']!=''|| $value['pick_state']!='' || $value['pick_zip']!='') && ($value['drop_street']!='' || $value['drop_city']!=''|| $value['drop_state']!='' || $value['drop_zip']!=''))
						{
							$route_details = $this->orgtrasnportation_model->get_legs_path($value['leg_id']);
							//echo "<pre>";print_r($route_details);die;
							if(empty($route_details))
							{
								if($value['drop_zip']!=$value['pick_zip'])
								{
								$origin_loc 		= ($value['pick_street'] ? $value['pick_street'].", ":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].", ":"").($value['pick_zip'] ? $value['pick_zip'].", ":"").($value['pick_country'] ?$value['pick_country']:"");
								$dest_loc 	= ($value['drop_street'] ? $value['drop_street'].", ":"").($value['drop_city']? $value['drop_city'].", ":"").($value['drop_state'] ? $value['drop_state']. ",":"").($value['drop_zip'] ? $value['drop_zip'].", ":"").($value['drop_country'] ?$value['drop_country']:"");
								//$routes = $this->orgtrasnportation_model->get_routes($origin_loc,$dest_loc);
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);
								//echo "<pre>";print_r($routes_miles);die;
								$legs	 		= $routes_miles['routes_lat_lon'];
								$dist_new 		= $dist_new+$routes_miles['distance'];
									if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
									{
										$route_details = array(	"in_transportation_leg_id"	=> $value['leg_id'],
																"in_transportation_id"		=> $this->session->userdata('transport_id'),
																"in_route_type"				=> $value['route_type_id'],
																"st_legs_details"			=> $routes_miles['route_path'],
																"fl_distance"				=> $routes_miles['distance'],
																"in_deleted"				=> "0"
										);	
										$this->common_model->insert_data("tbl_routes",$route_details);
									}
								}
								else
								{
									$legs = array();
								}
							}
							else
							{
								$legs	 		= $this->orgtrasnportation_model->decodePolylineToArray($route_details['st_legs_details']);
								if($route_details['in_route_type']=='1')
								{
									$legs = array($legs[0],$legs[(count($legs)-1)]);								
								}
								
								$dist_new 		= $route_details['fl_distance'];
							}
							
						}
						else
						{
							$legs = array();
						}
					
					if($value['route_type_id']=='1')
					{
						//echo "<pre>";print_r($legs);die;
						if(empty($legs))
						{
							//echo $value['pick_street'].",".$value['drop_street'];
							$pickup_airport = $this->orgtrasnportation_model->get_airport_details($value['pick_street']);
							$dropoff_airport  = $this->orgtrasnportation_model->get_airport_details($value['drop_street']);
							if(isset($pickup_airport['st_latitude']) && isset($pickup_airport['st_longitude']) && isset($dropoff_airport['st_longitude']) && isset($dropoff_airport['st_latitude']) )
							{
								$legs = array(array($pickup_airport['st_latitude'],$pickup_airport['st_longitude']),array($dropoff_airport['st_latitude'],$dropoff_airport['st_longitude']));
							}
							//echo "<pre>";print_r($legs);die;
						}
						
					}	
					$color = $this->common_function->color[$i];
					if(!empty($legs))
					{
						$origin_loc1 		= ($value['pick_street'] ? $value['pick_street'].", ":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].", ":"").($value['pick_zip'] ? $value['pick_zip'].", ":"").($value['pick_country'] ?$value['pick_country']:"");
						$dest_loc1 	= ($value['drop_street'] ? $value['drop_street'].", ":"").($value['drop_city']? $value['drop_city'].", ":"").($value['drop_state'] ? $value['drop_state']. ",":"").($value['drop_zip'] ? $value['drop_zip'].", ":"").($value['drop_country'] ?$value['drop_country']:"");
						$screen_name = $value['display_name'];
						
						$legparticipant_user_detail = $this->orgtrasnportation_model->legparticipant_user_detail($key);							
						$screen_name = $legparticipant_user_detail['name'];
								
						if(!isset($screen_name) || $screen_name == '')
						{
							if(isset($value['non_doobert_leg_participant_details']) && !empty($value['non_doobert_leg_participant_details']))
							{
								$screen_name =  $value['non_doobert_leg_participant_details'][0]['st_name'];								
							}
						}
						
						
						
						$legs_details[] = array("id"			=>	$key,
												"leg_points"	=>	$legs,
												"color"			=>	$color,
												//"user"			=> array("id"=>$value['user_id'],"screen_name"=>$value['display_name'],"gravatar_hash"=>md5(time())),
												//"user"			=> array("id"=>$value['user_id'],"screen_name"=>$screen_name,"gravatar_hash"=>md5(time())),
												"from_loc"		=> $origin_loc1,
												"to_loc"		=> $dest_loc1,
												"user"          => isset($screen_name)?$screen_name:''
											);
					}
									
					if($i==8)
					{  
						$i=1;
					}
					else
					{
						$i++;					
					}
				}
			}
			
		}
		$user_profile_details = $this->common_function->get_user_profile($this->session->userdata('userid'));
		//echo "<pre>";print_r($user_profile_details);die;
		$details['st_driver'] = isset($user_profile_details['st_driver']) ? $user_profile_details['st_driver'] : '';
		$details['st_pilot'] = isset($user_profile_details['st_pilot']) ? $user_profile_details['st_pilot'] : '';
		
		$res = $this->orgtrasnportation_model->get_airport_details1($user_profile_details);
		
		//echo "<pre>";print_r($leg_details);die;
		
		$details['legs_details'] = $legs_details;
		//$details['airport'] = $res;
		$user_list = $this->orgtrasnportation_model->get_user_list();
		
		//code to display user list only within 100 miles of the route starts
		$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$transport_info 		= (isset($transport_details) && !empty($transport_details))?$transport_details['0']:"";	

		$details['transport_type'] =  $transport_info['st_trans_type'];

		$origin_loc = ((isset($transport_info['st_from_street'])?$transport_info['st_from_street'].", ":"").(isset($transport_info['st_from_city'])?$transport_info['st_from_city'].", ":"").(isset($transport_info['st_from_state'])?$transport_info['st_from_state']:"").(isset($transport_info['st_from_zip'])?", ".$transport_info['st_from_zip']:"").(isset($transport_info['st_from_country'])?", ".$transport_info['st_from_country']:""));
		$dest_loc 	= ((isset($transport_info['st_to_street'])?$transport_info['st_to_street'].",":"").(isset($transport_info['st_to_city'])?$transport_info['st_to_city'].", ":"").(isset($transport_info['st_to_state'])?$transport_info['st_to_state']:"").(isset($transport_info['st_to_zip'])?",".$transport_info['st_to_zip']:"").(isset($transport_info['st_to_country'])?",".$transport_info['st_to_country']:""));					
		
		$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc));
		$routes = $routes_miles['routes_lat_lon'];
		
		$routes_points_count  = count($routes);
		//echo '<pre/>';print_r($routes);
		//exit;
		
		//foreach users in the list if users lat long distance is less than or equal to 100 miles from any of the routes points lat long then 
		//return true else return false
		
		foreach($user_list as $u_key => $u_val)
		{
			$add_in_array = 0;
			for($i=0;$i<$routes_points_count;$i++)
			{
				if(isset($routes[$i]) && !empty($routes[$i]))
				{
					$dist = $this->haversineGreatCircleDistance($u_val['lat'],$u_val['lon'],$routes[$i][0],$routes[$i][1]);
					//echo '<pre/>';
					//echo 'distance between '.$u_val['lat'].' '.$u_val['lon'].' and '.$routes[$i][0].' '.$routes[$i][1].'is : '.$dist;
					if($dist <= 100)
					{
						//echo 'distance is: '.$dist; 	
						$add_in_array = 1;
						break; 
					}
				}
			}
			//echo 'add_in_array is:' . $add_in_array ;
			if($add_in_array == 0)
			{
				unset($user_list[$u_key]);	
			}
		}
		
		$user_list = array_values($user_list);
		
		//echo '<pre/>';print_r(array_values($user_list));
		//exit;
		//code to display user list only within 100 miles of the route ends
		
		$details['user_list'] 		= $user_list;
		//echo json_encode($legs_details);
		
		$overnight_legs = $this->orgtrasnportation_model->get_overnight_legs_detail_by_trans_id();
		$details['overnight_legs'] = $overnight_legs;
		
		echo json_encode($details);
		//echo json_encode($legs_details);
	}
	
	#=========================================================
	#	Function : join_transport
	#	Purpose  : join Transportation
	#=========================================================		
	
	function join_transport()
	{
		//echo "<pre>";print_r($this->session->userdata);die;
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg']			= '';
		$data['menu_no'] 			= 'yes';
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$transport_files 			= $this->orgtrasnportation_model->get_transport_files($tra_id);
		$transport_animals 			= $this->orgtrasnportation_model->get_transport_animals($tra_id);
		$num_driver 				= $this->orgtrasnportation_model->get_num_driver($tra_id);
		//$time_zone 					= $this->common_function->time_zone;
		$time_zone 					= $this->common_function->tbl_time_zone();
		$data['time_zone'] 			= $time_zone;
		//echo "<pre>";print_r($transport_details);die;
		
		$user_profile = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['user_profile'] = isset($user_profile[0])?$user_profile[0]:"";
		//echo "<pre>";print_r($data['user_profile'] );die;
		if($this->session->flashdata('cancel_trasport')=='' && $transport_details['0']['in_status']=='2')
		{
			redirect($this->config->item('base_url')."org-confirm-transport/");
		}
		if($this->session->flashdata('cancel_trasport')=='' && $transport_details['0']['in_status']=='3')
		{
			redirect($this->config->item('base_url')."org-cancel-transport/");
		}
		//echo "<pre>";print_r($this->input->post());die;
		if($this->input->post('action'))
		{			
			if($this->input->post('action')=='select')
			{
				$legs_ids=$this->input->post('legs_id');
				$user_driver_email = array();
				$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);	
				for($a=0;$a<count($legs_ids);$a++)
				{	
					if($this->orgtrasnportation_model->get_legs_participants($legs_ids[$a],"join")<=0)
					{						
						$join_data = array("in_transportation_id"		=> $this->session->userdata('transport_id'),
										   "in_user_id"					=> $this->session->userdata('userid'),
										   "in_transportation_leg_id"	=> $legs_ids[$a],
										   "in_created_by"				=> $this->session->userdata('userid'),
										   "dt_created"					=> date("Y-m-d H:i:s"),
										   "in_deleted"					=> 0
										);
						$this->orgtrasnportation_model->join_legs($join_data);		
						
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids[$a]);	
						if(!empty($user_legs))
						{
								//$origin 		= "USA, ".$user_legs['pick_zip'];
								//$destinations 	= "USA, ".$user_legs['drop_zip'];
								//$origin 		= $user_legs['pick_street'].", ".$user_legs['pick_city'].", ".$user_legs['pick_state'].", ".$user_legs['pick_zip'];
								//$destinations 	= $user_legs['drop_street'].", ".$user_legs['drop_city'].", ".$user_legs['drop_state'].", ".$user_legs['drop_zip'];
								  $origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;


								
								if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	= $total_miles['distance'];	
								$this->orgtrasnportation_model->add_distance($total_miles);
								
								if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
								{
									$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
									$percent = ($percent>=100)?100:$percent;
								}
								else
								{
									$percent = 0;
								}
								if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
								{
									$target_date = @date("l, M d",strtotime(@$user_legs['pick_start_time']));
								} else {
									$target_date = '';
								}		
								$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
								$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
								$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
								$cover_leg = 0;
								$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

								$name_arr = array("target_date"		=> $target_date,
												  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
												  "transport_id" 	=> $this->session->userdata('transport_id'),
												  "percent" 		=> $percent,
												  "leg_origin" =>$origin1,
												  "leg_destination" =>$destinations1,
												  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
												  "cover_leg" => $cover_leg,
												  "st_org_name" => $transport_details['0']['st_org_name'],
												  "st_org_code" => $transport_details['0']['st_org_code'],
												  "st_display_name" => $transport_details['0']['st_display_name'],
												  "st_email" => $transport_details['0']['st_email'],
												  "st_add_comments" => $transport_details['0']['st_add_comments'],
												  "co_user_id" => $transport_details['0']['in_user_id'],

										 );	 					
								$this->join_transport_email($user_driver_email,"16",$name_arr);
						
						}
						
					}
					
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";	
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> joined the transportation.</h2>
								<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div></div>';
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											'in_user_id'			=> $this->session->userdata('userid'),
											"in_type"				=> 9,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				}			
				$this->session->set_flashdata('google_leg', 'You have join leg(s) successfully.');
			}
			if($this->input->post('action')=='leave')
			{
				$legs_ids = $this->orgtrasnportation_model->get_all_legs();
				//echo "<pre>";print_r($legs_ids);die;
				//die;
				//$legs_ids=$this->input->post('legs_id');
				$user_driver_email = array();
				$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);
				for($a=0;$a<count($legs_ids);$a++)
				{	
					$this->orgtrasnportation_model->leave_legs($legs_ids[$a]['in_transportation_leg_id']);		
					
					$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids[$a]['in_transportation_leg_id']);	
					if(!empty($user_legs))
					{
							/*$origin 		= "USA, ".$user_legs['pick_zip'];
							$destinations 	= "USA, ".$user_legs['drop_zip'];
							$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
							
							if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
								{
									$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
								}
								else
								{
									$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
								}
								if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
								{
									$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
								}
								else
								{
									$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
								}
							//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
							$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
							$total_miles  	= $total_miles['distance'];	
							$this->orgtrasnportation_model->update_distance($total_miles);
								
							if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
							{
								$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
								$percent = ($percent>=100)?100:$percent;
							}
							else
							{
								$percent = 0;
							}
							if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
							{
								$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));
							} else {	
								$target_date = '';
							}	
							$name_arr = array("target_date"		=> $target_date,
											  "name"			=> $this->session->userdata('user_name'),	
											  "transport_id" 	=> $this->session->userdata('transport_id'),
											  "percent" 		=> $percent,
											  "co_user_id" => $transport_details['0']['in_user_id'],
											  "st_org_code" => $transport_details['0']['st_org_code'],
									 );				 					
							$this->join_transport_email($user_driver_email,"17",$name_arr);
					
					}
					
				}
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left transportation.</h2>
								<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div></div>';							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_user_id"			=> $this->session->userdata('userid'),
											"in_type"				=> 11,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
			}
			if($this->input->post('action')=='cancel')
			{
				//echo "<pre>";print_r($this->input->post());die;
				$legs_ids=$this->input->post('cancel_leg_id');
				//echo "<pre>";print_r($transport_details);die;
				if($transport_details['0']['st_trans_type']=="D")
				{
					$this->cancel_legs($legs_ids);
					//redirect($this->config->item('base_url')."cancel-legs/".$legs_ids."/");
				}			
				else
				{
					$user_driver_email = array();
					$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
												 "display_name" => $transport_details['0']['st_display_name']
												);
					if($legs_ids>0 && $legs_ids!='')
					{	
						$this->orgtrasnportation_model->leave_legs($legs_ids);		
						
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
						if(!empty($user_legs))
						{
								/*$origin 		= "USA, ".$user_legs['pick_zip'];
								$destinations 	= "USA, ".$user_legs['drop_zip'];
								$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
								 $origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
								
								if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	= $total_miles['distance'];	
								$this->orgtrasnportation_model->update_distance($total_miles);
								
								if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
								{
									$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
									$percent = ($percent>=100)?100:$percent;
								}
								else
								{
									$percent = 0;
								}
								if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
								{
									$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));
								} else {
									$target_date = '';
								}									
								$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
								$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
								$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
								$cover_leg = 0;
								$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

								$name_arr = array("target_date"		=> $target_date,
												  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
												  "transport_id" 	=> $this->session->userdata('transport_id'),
												  "percent" 		=> $percent,
												  "leg_origin" =>$origin1,
												  "leg_destination" =>$destinations1,
												  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
												   "cover_leg" => $cover_leg,
												   "st_org_name" => $transport_details['0']['st_org_name'],
												   "st_org_code" => $transport_details['0']['st_org_code'],
												   "st_display_name" => $transport_details['0']['st_display_name'],
												   "st_email" => $transport_details['0']['st_email'],
												   "st_add_comments" => $transport_details['0']['st_add_comments'],
												   "co_user_id" => $transport_details['0']['in_user_id'],
										 );				 					
								$this->join_transport_email($user_driver_email,"17",$name_arr);
						
						}
						
					}
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';							
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 11,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );	
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
				}
			}
			redirect($this->config->item('base_url')."join-transport/#tab_2_2");
		}
		
		if($this->input->post('feeds'))
		{
			$this->form_validation->set_rules('message', 'Message', 'trim|required');
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
			}
			else
			{
				//echo "<pre>";print_r($transport_doc);print_r($this->input->post());die;
			
				//echo "<pre>";print_r($this->input->post());die;
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				$message_user = $this->common_function->custom_htmlentities($this->input->post('message'));
				/*$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link .'">'.$this->session->userdata('user_name').'</a>: '.$message_user.'</h2></div>';*/							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"st_notification_msg"	=> $message_user,
											"in_type"				=> 14,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				//Sending email to user
				if($this->input->post('user_email') != '') {
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("26");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
					if(isset($email_details[0]['st_email_body']))
					{
						$templete 	= 	$email_details[0]['st_email_body'];
						$subject	=	$email_details[0]['st_email_subject'];
						$to = $this->input->post('user_email');
						
						$user_message = explode(':',$this->input->post('message'));
						$patterns = array('%##url##%','%##user_name##%','%##feed_msg##%');
					
						$replacements = array(base_url(),$this->input->post('user_name_hidden'),(isset($user_message[1]))?$user_message[1]:$this->input->post('message'));
						$content = preg_replace($patterns,$replacements,$email_details[0]['st_email_body']);
						
						//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						
						$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
							{
								$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
							} else {
								$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
							}				
						
						$content	=	str_replace("##fbtransportshare##",$fbtransportshare,$content);
						$content	=	str_replace("##DONATION##",$donation,$content);
						
						$category  =    $email_details[0]['st_category'];
						$this->common_function->send_mail($this->email, $to, 'Transport Feed', $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
						
					}
				}
				//End Sending email to user	
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				redirect($this->config->item('base_url')."join-transport/".$this->session->userdata('transport_id')."/#tab_2_3");
			}
		}
		if($this->input->post('leg_points'))
		{
			//echo "<pre>";print_r($this->input->post());die;
			//$complete_data 		= $this->input->post();
			//echo "<pre>";print_r(date('Y-m-d H:i:s', strtotime(str_replace(" - "," ",$complete_data['clockface_2_modal']))));die;
			$legs_array = array("in_transportation_id"	=> $tra_id,
								"in_created_by"			=> $this->session->userdata('userid'),
								"dt_created"			=> date("Y-m-d H:i:s"),
								"in_deleted"			=> "0"
								);	
		$leg_id				 = $this->orgtrasnportation_model->create_legs($legs_array);	
		$origin_address 	 = $this->input->post('origin_address');
		$destination_address = $this->input->post('destination_address');
		//$routes_zip   = $this->orgtrasnportation_model->get_db_routes($origin_address['zip_code'],$destination_address['zip_code']);
		/*if(isset($routes_zip['st_route']) && @unserialize($routes_zip['st_route'])!='')
		{
			$routes = unserialize($routes_zip['st_route']);
			$routes_miles['distance'] = $routes_zip['in_distance'];
		}
		else
		{*/
			$routes_miles 	= $this->orgtrasnportation_model->decodePolylineToArray($this->input->post('leg_points'));
		
			/*$arr_routes = array("st_source_zip"	=> $origin_address['zip_code'],
								"st_dest_zip"	=> $destination_address['zip_code'],
								"in_distance"	=> $this->input->post('distance'),
								"st_route"		=> @serialize($routes_miles)
								);
			$this->common_model->insert_tbl_route("tbl_route",$arr_routes);*/
			$routes = $routes_miles;
		/*}*/
		
		$location		= $origin_address['full_address'];
		$lat_long 		= $this->common_model->get_lat_long($location);
		$street 		= explode(", ",$origin_address['full_address']);
		$complete_data 		= $this->input->post();
		$pick_array 	= array("in_transportation_leg_id" 	=> $leg_id,
								"st_leg_type" 				=> "P",
								"st_street" 				=> @$street[0],
								"st_city " 					=> @$street[1],//str_replace("County","",$origin_address['city']),
								"st_state " 				=> $origin_address['state_abbr'],
								"st_zip " 					=> $origin_address['zip_code'],
								"dt_start_time"				=> date('Y-m-d H:i:s', strtotime(str_replace(" - "," ",$complete_data['clockface_2_modal']))),
								"st_timezone"				=> $complete_data['pickup_zone'],
								"st_geometry"				=> @serialize($lat_long),
								"in_deleted"				=> "0"
								);
		$this->orgtrasnportation_model->add_legs_details($pick_array);
		$location		= $destination_address['full_address'];
		$lat_long 		= $this->common_model->get_lat_long($location);
		$street 		= explode(", ",$destination_address['full_address']);
		$dropoff_array 	= array("in_transportation_leg_id" 	=> $leg_id,
								"st_leg_type" 				=> "D",
								"st_street" 				=> @$street[0],
								"st_city " 					=> @$street[1],//str_replace("County","",$destination_address['city']),
								"st_state " 				=> $destination_address['state_abbr'],
								"st_zip " 					=> $destination_address['zip_code'],
								"dt_start_time"				=> date('Y-m-d H:i:s', strtotime(str_replace(" - "," ",$complete_data['clockface_3_modal']))),
								"st_timezone"				=> $complete_data['dropoff_zone'],
								"st_geometry"				=> @serialize($lat_long),
								"in_deleted"				=> "0"
								);
			$this->orgtrasnportation_model->add_legs_details($dropoff_array);
			//$this->orgtrasnportation_model->add_distance($this->input->post('distance'));
			
			$join_data = array("in_transportation_id"		=> $this->session->userdata('transport_id'),
							   "in_user_id"					=> $this->session->userdata('userid'),
							   "in_transportation_leg_id"	=> $leg_id,
							   "in_created_by"				=> $this->session->userdata('userid'),
							   "dt_created"					=> date("Y-m-d H:i:s"),
							   "in_deleted"					=> 0
							);
			$this->orgtrasnportation_model->join_legs($join_data);		
			
			$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);	
			if(!empty($user_legs))
			{
				 $origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;

				$user_driver_email = array();
				$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);	
					/*$origin 		= "USA, ".$user_legs['pick_zip'];
					$destinations 	= "USA, ".$user_legs['drop_zip'];
					$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
					
					if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
						{
							$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
						}
						else
						{
							$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
						}
						if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
						{
							$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
						}
						else
						{
							$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
						}
					//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
					$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
					$total_miles  	= $total_miles['distance'];	
					$this->orgtrasnportation_model->add_distance($total_miles);
								
					if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
					{
						$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
						$percent = ($percent>=100)?100:$percent;
					}
					else
					{
						$percent = 0;
					}
					if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
					{
						$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));
					} else {
						$target_date = '';
					}		
					$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
					$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
					$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
					$cover_leg = 0;
					$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

					$name_arr = array("target_date"		=> $target_date,
									  "name"			=> $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
									  "transport_id" 	=> $this->session->userdata('transport_id'),
									  "percent" 		=> $percent,
									  "leg_origin" =>$origin1,
									  "leg_destination" =>$destinations1,
									  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
									  "cover_leg" => $cover_leg,
									  "st_org_name" => $transport_details['0']['st_org_name'],
									  "st_org_code" => $transport_details['0']['st_org_code'],
									  "st_display_name" => $transport_details['0']['st_display_name'],
									  "st_email" => $transport_details['0']['st_email'],
									  "st_add_comments" => $transport_details['0']['st_add_comments'],
									  "co_user_id" => $transport_details['0']['in_user_id'],

							 );			 					
					$this->join_transport_email($user_driver_email,"16",$name_arr);
			
			}
			
			$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
			$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";	
			$notification_message = '<div class="timeline-body border">
							<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> joined transportation.</h2>
							<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div></div>';
			$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
										"in_transportation_id"	=> $this->session->userdata('transport_id'),
										"st_notification_msg"	=> $notification_message,
										"in_type"				=> '0',
										"in_modified_by"		=> $this->session->userdata('userid'),
										"dt_created"			=> date("Y-m-d H:i:s"),
										"in_deleted"			=> "0"
									  );	
			$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
		
		
		//$this->join_transport_email($user_driver_email,"16",$name_arr);
		//$this->session->set_flashdata('google_leg', 'Join leg(s) successfully.');
		}
		
		$transport_info 			= (isset($transport_details['0']))?$transport_details['0']:"";
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$data['leg_details']		= $leg_details;
		$userleg_details 			= $this->orgtrasnportation_model->get_trans_legs_user($this->session->userdata('userid'));
		$data['userleg_details']	= $userleg_details;
		$data['join']				= "true";
		$permission_details 		= '';
		$permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$owner_id 	= $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if($owner_id == $this->session->userdata('userid'))
		{
			$permission_details['transport']		= array("transport_cr","transport_ed","transport_cnf","transport_del");
			$permission_details['fundraiser']		= array("fundraiser_cr","fundraiser_ed","fundraiser_cnf","fundraiser_del");
			$permission_details['profile_manager']	= array("pr_manager_cr","pr_manager_ed","pr_manager_cnf","pr_manager_del");
		}
		elseif(!empty($permission))
		{
			$permission_details = unserialize($permission);
		}
		else
		{
			$permission_details = '';
		}
		$data['permission'] = $permission_details;
		//echo "<pre>";print_r($data['permission']);die;
		$transport_info['remin_distance'] = '0';
		$transport_info['cover_dis_per']  = '0';
		if(isset($transport_info['in_tot_distance']) && $transport_info['in_tot_distance']>0)
		{
			$total_dist_per 					= ($transport_info['in_distance_covered']*100)/$transport_info['in_tot_distance'];
			//$transport_info['cover_dis_per'] 	= number_format($total_dist_per);
			$transport_info['cover_dis_per'] 	= number_format($total_dist_per,"2",".","");
			$transport_info['remin_distance'] 	= number_format(($transport_info['in_tot_distance']-$transport_info['in_distance_covered']),"2",".","");
		}
		//echo "<pre>";print_r($transport_info);die;
		$data['transport_details']	= $transport_info;
		$data['transport_files']	= $transport_files;	
		$data['transport_animals']	= $transport_animals;
		$data['num_driver']			= $num_driver;
		
		#================ Feeds start==============#
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';	
		$rec_per_page = 10;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		$tra_id						= $this->session->userdata('transport_id');
		$user_profile 				= $this->common_model->get_user_profile($this->session->userdata('userid'));
		$drivers 					= $this->orgtrasnportation_model->get_driver_details($tra_id);
		$data['drivers']			= $drivers;
		//$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id,$limit,$rec_per_page);
		$feeds  					= $this->orgtrasnportation_model->get_feeds($tra_id);
		$totalrecord  				= $this->orgtrasnportation_model->get_feeds_count($tra_id);
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'join-transport/';
		$config['base_url']		= $config['base_url'].$this->session->userdata('transport_id').'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '1';
		$config['file_path'] 		= $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		
/*		$jsFunction['name'] = 'show';
        $jsFunction['params'] = array();
        $this->pagination2->initialize_js_function($jsFunction);

        $data['base_url'] = $config['base_url'];
        $data['pagination'] = $this->pagination2->create_js_links();*/
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		$data['feeds']				= $feeds;
		$data['profile_info']		= $user_profile['0'];
		#================ Feeds end==============#
		
		
			
		//echo "<pre>";print_r($transport_animals);die;
		$this->load->view('transportation/join-org-transport',$data);
	}
	
	
	#=========================================================
	#	Function : transport_list
	#	Purpose  : Organization Traport List
	#=========================================================		
	
	function transport_list($status = '1',$sort=false,$order=false,$limit=false)
	{
		$data = array();
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		$org_list = $this->common_model->get_organization_list($this->session->userdata('org_id'));
		
		if(empty($org_list))
		{
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('org_id')) {
			$this->load->model('org_info_model');
			$get_org_details = $this->org_info_model->organization_profile($this->session->userdata('org_id'));
			isset($get_org_details['st_org_name'])?$this->session->set_userdata('org_name',$get_org_details['st_org_name']):'';
		}
		
		#=============Active Trasport============#
		//$all_trasport = $this->orgtrasnportation_model->get_transport_list("1",$this->session->userdata('org_id'));
		//$data['all_trasport'] = $all_trasport;
		
		if(!$sort)
			$sort='trid';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(6))
			$limit = $this->uri->segment(6);
		else	
			$limit = '0';	
		$rec_per_page = 5;	
		
		$total_record = $this->orgtrasnportation_model->get_transport_list_all_data($status,$this->session->userdata('org_id'));
		
		$all_trasport = $this->orgtrasnportation_model->get_transport_list_data($status,$this->session->userdata('org_id'),$rec_per_page,$limit,$sort,$order);
		
		//echo '<pre/>';
		//print_r($total_record);exit;
		//print_r($all_trasport);exit;
		
		$data['all_trasport']  = $all_trasport;
		
		if($this->uri->segment(2) && $this->uri->segment(2) != '')
		{ 
			$transport_status = $this->uri->segment(2);
			$data['transport_status']  = $transport_status;
		}else{
			$data['trasnport_status'] = '1';
		}
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_transportation/transport_list/';
		$config['base_url']	  	  = $config['base_url'].$status.'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;	
		$data['status'] = 	$status;
		
		//print_r($data['pagination']);exit;
		#=============Completed Trasport============#
		/*$completed_trasport = $this->orgtrasnportation_model->get_transport_list("2",$this->session->userdata('org_id'));
		$data['completed_trasport'] = $completed_trasport;*/
		
		#=============Canceled Trasport============#
		/*$cancelled_trasport = $this->orgtrasnportation_model->get_transport_list("3",$this->session->userdata('org_id'));
		$data['cancelled_trasport'] = $cancelled_trasport;*/
		//echo "<pre>";print_r($data);die;
		
		//$this->load->view('transportation/organization-transportation',$data);	
       $this->load->view('manage-org-transports',$data);		
	}
	
	
	#=========================================================
    #	Function : transport_list
    #	Purpose  : Organization Traport List status  for completed and canceled
    #=========================================================		
	
	function transport_other_list() {
        $data = array();

        if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }
        if (!$this->session->userdata('org_id')) {
            redirect($this->config->item('base_url'));
			
        }

        if ($this->session->userdata('org_id')) {
            $this->load->model('org_info_model');
            $get_org_details = $this->org_info_model->organization_profile($this->session->userdata('org_id'));
            isset($get_org_details['st_org_name']) ? $this->session->set_userdata('org_name', $get_org_details['st_org_name']) : '';
        }

        #=============Active Trasport============#
        /*$all_trasport = $this->orgtrasnportation_model->get_transport_list("1", $this->session->userdata('org_id'));
        $data['all_trasport'] = $all_trasport;*/

        #=============Completed Trasport============#
        $completed_trasport = $this->orgtrasnportation_model->get_transport_list("2", $this->session->userdata('org_id'));
        $data['completed_trasport'] = $completed_trasport;

        #=============Canceled Trasport============#
        $cancelled_trasport = $this->orgtrasnportation_model->get_transport_list("3", $this->session->userdata('org_id'));
        $data['cancelled_trasport'] = $cancelled_trasport;
      //  echo "<pre>";print_r($data);die;

        $this->load->view('transportation/organization-other-transportation', $data);
    }
	
		
	# *******************************************************************************************	
	#	Function	:	view_more_notification	
	#	Purpose		:	Getting notifications against current transportation
	# *******************************************************************************************
	
	public function view_more_notification() 
	{
		if(!$this->session->userdata('userid')) {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		$str = '';
		$data = array();
		$data['tra_id']						= $this->session->userdata('transport_id');
		$data['base_url'] = $this->config->item('base_url');
		
		$data['total_rows_tr']		= $this->orgtrasnportation_model->get_feeds_count($data['tra_id']);
		//echo "<pre>";print_r($this->input->post());die;
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
		$limit = '0';	
		
		$rec_per_page = 10;
		
		$data['feeds']	= $this->orgtrasnportation_model->get_feeds($data['tra_id'],$this->input->post('start'),$this->input->post('end'));
		
		$this->load->view('includes/transport-feed-more',$data);
	}
	
	function cancel_legs($leg_id=false,$routing='',$photography_leg='')
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		//echo $leg_id;die;
		//echo $this->uri->segment(2);
		if(empty($leg_id))
		{
			$leg_id						= $this->uri->segment(2);
		}
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		//echo "<pre>";print_r($transport_details);die;
		if(isset($transport_details[0]) && $transport_details[0]['st_trans_type']=='D' && $leg_id>0 && $leg_id!='' )
		{			
			$user_driver_email = array();
			$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
										 "user_email"	=> $transport_details['0']['st_email'],
										 "display_name" => $transport_details['0']['st_display_name']
										);	
			if(!empty($transport_details[0]['accTcid']) && $transport_details[0]['accTcid'] >0 )
			{		
				$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
				if(isset($rou_tc_user[0]['in_user_id']) && !empty($rou_tc_user[0]['in_user_id']) && $rou_tc_user[0]['in_user_id'] >0)
				{	
					$user_driver_email[] = array("user_id" 	   => $rou_tc_user[0]['in_user_id'],
												"user_email"   => $rou_tc_user[0]['st_email'],
												"display_name" => $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name']
												);	
				}							
			}									
				
			$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);
			$order_id = $user_legs['sort_order'];	
			$this->orgtrasnportation_model->delete_user_legs($leg_id,$photography_leg);	
			//echo "<pre>";print_r($user_legs);die;
			if(!empty($user_legs))
			{
					/*$origin 		= $user_legs['pick_city'].", ".$user_legs['pick_state'].", ".$user_legs['pick_zip'];
					$destinations 	= $user_legs['drop_city'].", ".$user_legs['drop_state'].", ".$user_legs['drop_zip'];
					$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));*/
					$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
	
					if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
						{
							$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
						}
						else
						{
							$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
						}
						if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
						{
							$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
						}
						else
						{
							$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
						}
					//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
					$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
					$total_miles  	= $total_miles['distance'];	
					$this->orgtrasnportation_model->update_distance($total_miles);
					
					if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
					{
						$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
						$percent = ($percent>=100)?100:$percent;
					}
					else
					{
						$percent = 0;
					}
					if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
					{
						$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));
					} else {
						$target_date = '';
					}		
					$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
					$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
					$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
					$cover_leg = 0;
					$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
					
					$name_arr = array("target_date"		=> $target_date,
									  "name"			=> $this->session->userdata('user_name'),	
									  "transport_id" 	=> $this->session->userdata('transport_id'),
									  "percent" 		=> $percent,
									  "leg_origin" =>$origin1,
										"leg_destination" =>$destinations1,
										"total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
										"cover_leg" => $cover_leg,
										"st_org_name" => $transport_details['0']['st_org_name'],
										"st_org_code" => $transport_details['0']['st_org_code'],
									    "st_display_name" => $transport_details['0']['st_display_name'],
										"st_email" => $transport_details['0']['st_email'],
										"st_add_comments" => $transport_details['0']['st_add_comments'],
										"co_user_id" => $transport_details['0']['in_user_id'],

							 );				 					
					$this->join_transport_email($user_driver_email,"17",$name_arr);
			
			}
			$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
			$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
			$notification_message = '<div class="timeline-body border">
							<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left transportation.</h2>
							<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div>
							</div>';							
			$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
										"in_transportation_id"	=> $this->session->userdata('transport_id'),
										"in_transport_leg_id"=>$leg_id,
										"in_user_id"			=> $this->session->userdata('userid'),
										"in_type"				=> 11,
										"in_modified_by"		=> $this->session->userdata('userid'),
										"dt_created"			=> date("Y-m-d H:i:s"),
										"in_deleted"			=> "0"
									  );
			$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
			
			if($transport_details[0]['st_trans_type'] == 'D' && $transport_details[0]['in_airline_transport'] == '1')
			{
				$this->orgtrasnportation_model->update_order_legs($order_id,$this->session->userdata('transport_id'));
			}
			$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
			if($routing =='')
			{	
				redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id')."/");
			} else {
				redirect(base_url().'user-submission/'.$this->session->userdata('transport_id')."/");
			}	
		}
		else
		{
			if($routing =='')
			{
				redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id')."/");
			} else {
				redirect(base_url().'user-submission/'.$this->session->userdata('transport_id')."/");
			}	
		}
	}
	
			
	# *******************************************************************************************	
	#	Function	:	add_images
	#	Purpose		:	For Adding Product Images
	# *******************************************************************************************
	
	public function add_images() 
	{
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."trasnportation/";
		$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
		$config['max_size']	= '51200';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		
		/*$lastDot = strrpos($_FILES['files']['name'], ".");
        $_FILES['files']['name'] = str_replace(".", "", substr($_FILES['files']['name'], 0, $lastDot)) . substr($_FILES['files']['name'], $lastDot);
        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", $this->session->userdata('userid') . '_' . mt_rand() . '_' . $_FILES['files']['name']));*/
		
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');

		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		
		
		//code to upload image in the rackspace starts
		$this->load->library('opencloud');
		$this->opencloud->set_container('appcdn');
		$this->opencloud->add_object($config['file_name'], $config['upload_path'].$config['file_name']);
		//code to upload image in the rackspace end
		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."trasnportation/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."org_transportation/delete_files/trasnportation/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	public function add_rider_images() 
	{
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."trasnportation/";
		$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
		$config['max_size']	= '51200';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		
		/*$lastDot = strrpos($_FILES['files']['name'], ".");
        $_FILES['files']['name'] = str_replace(".", "", substr($_FILES['files']['name'], 0, $lastDot)) . substr($_FILES['files']['name'], $lastDot);
        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", $this->session->userdata('userid') . '_' . mt_rand() . '_' . $_FILES['files']['name']));*/
		
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');

		
		
		
		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		
		
		//code to upload image in the rackspace starts
		$this->load->library('opencloud');
		$this->opencloud->set_container('appcdn');
		$this->opencloud->add_object($config['file_name'], $config['upload_path'].$config['file_name']);
		//code to upload image in the rackspace end
		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."trasnportation/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."org_transportation/delete_rider_files/trasnportation/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
			
		if($this->session->userdata('uploaded_rider_image'))
		{
			$upload_image = $this->session->userdata('uploaded_rider_image');
			$upload_image_name = explode(" ",$upload_image);
			array_push($upload_image_name,$config['file_name']);
			$file_name = implode(" ",$upload_image_name);
			$this->session->unset_userdata('uploaded_rider_image');
			$this->session->set_userdata('uploaded_rider_image',$file_name);;
			
		} else {
			$upload_image_name = array();
			array_push($upload_image_name,$config['file_name']);
			$file_name = implode(" ",$upload_image_name);
			$this->session->set_userdata('uploaded_rider_image',$file_name);
		}		
					
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	function delete_files($path)
	{
		if($this->input->get('files')!='')
		{
			$files = $this->input->get('files');
			@unlink($this->config->item('upload').$path."/".$files);
			//delete_files($this->config->item('upload').$path."/".$files);
			
			//code to delete files in the rackspace starts
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($files);
			//code to delete files in the rackspace end
		}
	}
	
	function delete_rider_files($path)
	{
		if($this->input->get('files')!='')
		{
			$files = $this->input->get('files');
			@unlink($this->config->item('upload').$path."/".$files);
			//delete_files($this->config->item('upload').$path."/".$files);
			if($this->session->userdata('uploaded_rider_image'))
			{
				$upload_image = $this->session->userdata('uploaded_rider_image');
				$upload_image_name = explode(" ",$upload_image);
				//array_push($upload_image_name,$config['file_name']);
				foreach($upload_image_name as $key=>$value)
				{
					if($value == $files)
					{
						unset($upload_image_name[$key]);
					}	
				}
				$file_name = implode(" ",$upload_image_name);
				$this->session->unset_userdata('uploaded_rider_image');
				$this->session->set_userdata('uploaded_rider_image',$file_name);;
			
			}
			//code to delete files in the rackspace starts
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($files);
			//code to delete files in the rackspace end
		}
	}
	
	public function add_photos() 
	{
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		$config['upload_path'] = $this->config->item('upload')."trasnportation/";
		$config['allowed_types'] = 'jpg|jpeg|png|gif|jpe';
		$config['max_size']	= '51200';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		//$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']));
		$lastDot = strrpos($_FILES['files']['name'], ".");
		$_FILES['files']['name'] = str_replace(".", "", substr($_FILES['files']['name'], 0, $lastDot)) . substr($_FILES['files']['name'], $lastDot);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']));
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');
		
		// added by sadique on 26-09-15 start
		$this->load->library('image_lib'); // added by sadique on 26-09-15
		$configThumb = array();
		$configThumb['image_library'] = 'gd2';
		$configThumb['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
		$configThumb['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
		$configThumb['maintain_ratio'] = TRUE;
		$configThumb['width'] = '250';
		$configThumb['height'] = '250';
		$this->image_lib->initialize($configThumb);
		$this->image_lib->resize();
		// added by sadique on 26-09-15 end
		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		
		//code to upload image in the rackspace starts
		$this->load->library('opencloud');
		$this->opencloud->set_container('appcdn');
		$this->opencloud->add_object($config['file_name'], $configThumb['new_image']);
		$this->opencloud->add_object($config['file_name'], $configThumb['source_image']);
		
		//code to upload image in the rackspace end
		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."trasnportation/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."org_transportation/delete_files/trasnportation/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	/*
	public function get_distance_remain($trans_id)
	{
		
		$this->session->set_userdata('transport_id',$trans_id);	
		//echo "<pre>";print_r($this->input->post());die;
		$leg_details = $this->input->post('data_val');
		$way_points = "";
		//echo "<pre>";print_r($leg_details);
		//echo "<pre>";print_r($leg_details);die;

		if(isset($leg_details) && !empty($leg_details))
		{
			//code added by ghanshyam to remove overnight legs from array starts
			foreach($leg_details as $leg_key=>$leg_value)
			{
				if(isset($leg_value['route_type_id']) && $leg_value['route_type_id'] == 2)
				{
					unset($leg_details[$leg_key]);
				}
			}
			//print_r($leg_details); exit;
			//code added by ghanshyam to remove overnight legs from array ends
			
			$leg_details = array_values(array_filter($leg_details));
			$tra_id					= $this->session->userdata('transport_id');
			$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
			$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
			$q=1;		
			$index = (count($leg_details)-1);
			//print_r($leg_details[$index]);die;
			$drop_street = isset($leg_details[$index]['dropoff_street'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_street']):"";
			$drop_city = isset($leg_details[$index]['dropoff_city'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_city']):"";
			$drop_state = isset($leg_details[$index]['dropoff_state'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_state']):"";
			$drop_zip = isset($leg_details[$index]['dropoff_zip'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_zip']):"";
			
			$dropoff_airport = isset($leg_details[$index]['dropoff_airport'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_airport']):"";
			$dropoff_airport_city = isset($leg_details[$index]['dropoff_airport_city'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_airport_city']):"";
			$dropoff_airport_state = isset($leg_details[$index]['dropoff_airport_state'])?$this->common_function->custom_htmlentities($leg_details[$index]['dropoff_airport_state']):"";
			
			
			$pickup_street = isset($leg_details[$index]['pickup_street'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_street']):"";
			$pickup_city = isset($leg_details[$index]['pickup_city'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_city']):"";
			$pickup_state = isset($leg_details[$index]['pickup_state'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_state']):"";
			$pickup_zip = isset($leg_details[$index]['pickup_zip'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_zip']):"";
			
			$pickup_airport = isset($leg_details[$index]['pickup_airport'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_airport']):"";
			$pickup_airport_city = isset($leg_details[$index]['pickup_airport_city'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_airport_city']):"";
			$pickup_airport_state = isset($leg_details[$index]['pickup_airport_state'])?$this->common_function->custom_htmlentities($leg_details[$index]['pickup_airport_state']):"";
			
			//$dest_loc 	= (($transport_info['st_to_street']?$transport_info['st_to_street'].",":"").($transport_info['st_to_city']?$transport_info['st_to_city'].",":"").($transport_info['st_to_state']?$transport_info['st_to_state']:"").($transport_info['st_to_zip']?",".$transport_info['st_to_zip']:""));
			$legs_lat_long = array();
	
			if(isset($leg_details[$index]['route_type_id']) && $leg_details[$index]['route_type_id']=='1')
			{
				$airport_details = $this->orgtrasnportation_model->get_airport_details($dropoff_airport);
				
				
				if(isset($airport_details['st_latitude']) && $airport_details['st_latitude']!='' && isset($airport_details['st_longitude']) && $airport_details['st_longitude']!='')
				{
					$origin_loc = $airport_details['st_latitude'].",".$airport_details['st_longitude'];
				}
				else
				{
					$origin_loc = (($dropoff_airport?$dropoff_airport.",":"").(isset($airport_details['st_city'])?$airport_details['st_city'].",":"").(isset($airport_details['st_state'])?$airport_details['st_state'].",":"").(isset($airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]):""));
				}
			}
			else
			{
				$origin_loc = (($drop_street?$drop_street.",":"").($drop_city?$drop_city.",":"").($drop_state?$drop_state:"").($drop_zip?",".$drop_zip:""));
			}
			
			$dest_loc 	= (($transport_info['st_to_street']?$transport_info['st_to_street'].",":"").($transport_info['st_to_city']?$transport_info['st_to_city'].",":"").($transport_info['st_to_state']?$transport_info['st_to_state']:"").($transport_info['st_to_zip']?",".$transport_info['st_to_zip']:""));
				
			if(isset($leg_details[$index]['dropoff_zip']) && $leg_details[$index]['dropoff_zip']!='')
			{			
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),$way_points);
				if($drop_zip==$transport_info['st_to_zip'])
				{
					$data_val_distance['distance_remain'] = 0;
					$data_val_distance['route_distance'] = 0;
					$data_val_distance['in_tot_distance'] = $transport_info['in_tot_distance'];
					
				}
				else
				{
					$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),$way_points);
					$data_val_distance['distance_remain'] = $routes_miles['distance'];
					$data_val_distance['route_distance'] = $routes_miles['distance'];
					$data_val_distance['in_tot_distance'] = $transport_info['in_tot_distance'];
					$data_val_distance['start_postal_code'] = "";
					$data_val_distance['finish_postal_code'] = "";
				}
			}
			else
			{
			
				$start = $this->getLatLong($origin_loc);
				$finish = $this->getLatLong($dest_loc);
				$distance = $this->Haversine($start['lat_long'], $finish['lat_long']);
				$data_val_distance['distance_remain'] = $distance;
				$data_val_distance['route_distance'] = $distance;
				$data_val_distance['start_postal_code'] = $start['postal_code'];
				$data_val_distance['finish_postal_code'] = $finish['postal_code'];
				$data_val_distance['in_tot_distance'] = $transport_info['in_tot_distance'];
			}
			echo json_encode($data_val_distance);
			
		}
	}
	*/
	
	public function isJSON($string){
	   return is_string($string) && is_array(json_decode($string, true)) && (json_last_error() == JSON_ERROR_NONE) ? true : false;
	}
	
	public function get_distance_remain($trans_id)
	{
		
		$this->session->set_userdata('transport_id',$trans_id);	
		//echo "<pre>";print_r($this->input->post());die;
		$leg_details = $this->input->post('data_val');
		
		if($this->isJSON($leg_details)){
			$leg_details = json_decode($leg_details,true);
		}
		
		$way_points = "";
		//echo "<pre>";print_r($leg_details);
		//echo "<pre>";print_r($leg_details);die;

		if(isset($leg_details) && !empty($leg_details))
		{
			//code added by ghanshyam to remove overnight legs from array starts
			foreach($leg_details as $leg_key=>$leg_value)
			{
				if(isset($leg_value['route_type_id']) && $leg_value['route_type_id'] == 2)
				{
					unset($leg_details[$leg_key]);
				}
			}
			//print_r($leg_details); exit;
			//code added by ghanshyam to remove overnight legs from array ends
			
			$leg_details = array_values(array_filter($leg_details));
			$tra_id					= $this->session->userdata('transport_id');
			$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
			$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
			$q=1;		
			$index = (count($leg_details)-1);
			//print_r($leg_details[$index]);die;
			$data_val_distance = array();
			foreach($leg_details as $leg_key=>$leg_value)
			{
				$drop_street = isset($leg_details[$leg_key]['dropoff_street'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_street']):"";
				$drop_city = isset($leg_details[$leg_key]['dropoff_city'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_city']):"";
				$drop_state = isset($leg_details[$leg_key]['dropoff_state'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_state']):"";
				$drop_zip = isset($leg_details[$leg_key]['dropoff_zip'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_zip']):"";
				
				$dropoff_airport = isset($leg_details[$leg_key]['dropoff_airport'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_airport']):"";
				$dropoff_airport_city = isset($leg_details[$leg_key]['dropoff_airport_city'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_airport_city']):"";
				$dropoff_airport_state = isset($leg_details[$leg_key]['dropoff_airport_state'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['dropoff_airport_state']):"";
				
				
				$pickup_street = isset($leg_details[$leg_key]['pickup_street'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_street']):"";
				$pickup_city = isset($leg_details[$leg_key]['pickup_city'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_city']):"";
				$pickup_state = isset($leg_details[$leg_key]['pickup_state'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_state']):"";
				$pickup_zip = isset($leg_details[$leg_key]['pickup_zip'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_zip']):"";
				
				$pickup_airport = isset($leg_details[$leg_key]['pickup_airport'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_airport']):"";
				$pickup_airport_city = isset($leg_details[$leg_key]['pickup_airport_city'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_airport_city']):"";
				$pickup_airport_state = isset($leg_details[$leg_key]['pickup_airport_state'])?$this->common_function->custom_htmlentities($leg_details[$leg_key]['pickup_airport_state']):"";
				
				$legs_lat_long = array();
	
				if(isset($leg_details[$leg_key]['route_type_id']) && $leg_details[$leg_key]['route_type_id']=='1')
				{
					
					
					$start_airport_details = $this->orgtrasnportation_model->get_airport_details($pickup_airport);
					
					$end_airport_details = $this->orgtrasnportation_model->get_airport_details($dropoff_airport);
					
					if(isset($start_airport_details['st_latitude']) && $start_airport_details['st_latitude']!='' && isset($start_airport_details['st_longitude']) && $start_airport_details['st_longitude']!='')
					{
						$origin_loc = $start_airport_details['st_latitude'].",".$start_airport_details['st_longitude'];
					}
					else
					{
						$origin_loc = (($pickup_airport?$pickup_airport.",":"").(isset($start_airport_details['st_city'])?$start_airport_details['st_city'].",":"").(isset($start_airport_details['st_state'])?$start_airport_details['st_state'].",":"").(isset($start_airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$start_airport_details['st_iso_country']]):""));
					}
					
					if(isset($end_airport_details['st_latitude']) && $end_airport_details['st_latitude']!='' && isset($end_airport_details['st_longitude']) && $end_airport_details['st_longitude']!='')
					{
						$dest_loc = $end_airport_details['st_latitude'].",".$end_airport_details['st_longitude'];
					}
					else
					{
						$dest_loc = (($drop_airport?$drop_airport.",":"").(isset($end_airport_details['st_city'])?$end_airport_details['st_city'].",":"").(isset($end_airport_details['st_state'])?$end_airport_details['st_state'].",":"").(isset($end_airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$end_airport_details['st_iso_country']]):""));
					}
					
					
				}
				else
				{
					$origin_loc = (($pickup_street?$pickup_street.",":"").($pickup_city?$pickup_city.",":"").($pickup_state?$pickup_state:"").($pickup_zip?",".$pickup_zip:""));
					$dest_loc = (($drop_street?$drop_street.",":"").($drop_city?$drop_city.",":"").($drop_state?$drop_state:"").($drop_zip?",".$drop_zip:""));
				}
				//echo 'origin_loc:'.$origin_loc;
				//echo 'dest_loc:'.$dest_loc;
				//echo '======================================================================<br/>';
				
				$routes_miles = $this->orgtrasnportation_model->get_route_miles_after_delete_leg(urlencode($origin_loc),urlencode($dest_loc),$way_points);	
				
				
				$data_val_distance['distance_remain'][] = $routes_miles['distance'];
				$data_val_distance['route_distance'][] = $routes_miles['distance'];
				$data_val_distance['in_tot_distance'][] = $transport_info['in_tot_distance'];					
					
			}
			
			//print_r($data_val_distance);
			//exit;
			
			$total_leg_distance = array_sum($data_val_distance['distance_remain']);
			$total_remaining_distance = $data_val_distance['in_tot_distance'][0] - $total_leg_distance;
			if($total_remaining_distance < 0)
			{
				$total_remaining_distance = 0;
			}
			$data_val_distance['distance_remain'] = $total_remaining_distance;
			$data_val_distance['route_distance'] = $routes_miles['distance'];
			$data_val_distance['in_tot_distance'] = $transport_info['in_tot_distance'];
		
			
			echo json_encode($data_val_distance);
			
		}
	}
		
	# *******************************************************************************************	
	#	Function	:	draft_trnsportation	
	#	Purpose		:	Get draft transportation of the animal
	# *******************************************************************************************
	
	public function draft_transport() {
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
		}
		
		// for remove the search result 
			if($this->session->userdata('draft_search'))
			{
		 	  	$this->session->unset_userdata('draft_search');
			}
			if($this->session->userdata('user_draft_search'))
			{
			   $this->session->unset_userdata('user_draft_search');
			}
				
		#================Check User permission start===============#
		$create = '0';
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if(!empty($user_permission)) {
			$make_array_user = unserialize($user_permission);
		}
		if($owner_id != $this->session->userdata('userid')) {	
			if(isset($make_array_user['transport']) && (in_array('transport_ed',$make_array_user['transport']) == true || in_array('transport_cr',$make_array_user['transport']) == true)) 				
			{
				$check_per_flag = '1';
				if(in_array('transport_ed',$make_array_user['transport']) == true && !in_array('transport_cr',$make_array_user['transport']) == true)
				{
					$create = '1';
				}
				else
				{
					$create = '0';
				}
			} else {
				$check_per_flag = '0';
				$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			
		}
		#================Check User permission end================#	
		
		$data = array();
		$config = array();
		
		$this->load->library('pagination');
		
		$config["base_url"] 		= base_url().'org_transportation/draft_transport';
		
		$config["per_page"]	 		= $this->config->item('records_per_page');
		$config["uri_segment"] 		= 3;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
		if($this->input->post('search_module'))
		{
			if($this->input->post('module_search_text')=='')
			{
				$this->session->unset_userdata('draft_search');	
				$this->session->unset_userdata('user_draft_search');	
			}
			else
			{
				if(preg_match('([a-zA-Z].*[0-9]|[0-9].*[a-zA-Z].\s)', $this->input->post('module_search_text')))
				{
							$zip_code = $this->input->post('module_search_text');
							$zip_code = str_replace(" ","",$zip_code);
							$_POST['module_search_text'] = strtoupper($zip_code);
				}
				$draft_search = addslashes(str_replace(array('DBT','dbt'),"",$this->input->post('module_search_text')));
				$this->session->set_userdata('draft_search',trim($draft_search));	
				$this->session->set_userdata('user_draft_search',$this->common_function->custom_htmlentities($this->input->post('module_search_text')));	
			}
		}
		if($this->input->post('delete'))
		{
			//echo "<pre>";print_r($this->input->post('transport_id'));die;
			$this->orgtrasnportation_model->delete_transport(addslashes($this->input->post('transport_id')));
			
			//added by ghanshyam on 13Nov2014
			$animal_details = $this->orgtrasnportation_model->get_org_trans_animal($this->session->userdata('org_id'),'');			
			//print_r($animal_details);exit; //use for testing
			
			if(!empty($animal_details))
			{
				foreach($animal_details as $animal_data)
				{
					$this->orgtrasnportation_model->update_animal_transport_details($animal_data['in_animal_id']);
				}
			}
			
			$this->session->set_flashdata('success', 'Transport deleted successfully.');
			redirect(base_url().'org_transportation/draft_transport');
		}
		
		if ($this->input->post('edit_date_action')) {

            //$dateselect = $this->input->post('dateselect');
            //$pickup_select = $this->input->post('pickup_select');
			
			//$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
			//$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
			if($this->input->post('dateselect_year'))
			{	
					$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
			} else {
					$dateselect	=	$this->input->post('dateselect');
			}
			if($this->input->post('pickup_select_year'))
			{
					$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
			} else {
					$pickup_select	=	$this->input->post('pickup_select');
			}
			
			$transport_id = $this->input->post('edit_transport_id');
			
            if ($dateselect != '' && $pickup_select != '') {
                $details = array( "dt_target" => date("Y-m-d", strtotime($dateselect)),
								"dt_pickup_date" => date("Y-m-d", strtotime($pickup_select)),
								"dt_modified"	=> date("Y-m-d H:i:s"),
								"in_modified_by" => $this->session->userdata('userid'),
								);
                $this->orgtrasnportation_model->update_transport_detail_by_id($details,$transport_id);
				
                $trans_legs_details = $this->orgtrasnportation_model->get_trans_legs_copy($transport_id);

                if (isset($trans_legs_details) && !empty($trans_legs_details)) {
                    $legs = array_values(array_filter($trans_legs_details));

                    $leg_count = count($legs);            //getting the count of $books						

                    $leg_date_array = array();


                    for ($i = 0; $i < $leg_count; $i++) {
                        if (isset($legs[$i]['pick_start_time']) && $legs[$i]['pick_start_time'] != '') {
                            $leg_date_array[] = strtotime(date("Y-m-d", strtotime($legs[$i]['pick_start_time'])));
                        }
                    }

                    if (count(array_unique($leg_date_array)) == 1) {
                        for ($i = 0; $i < $leg_count; $i++) {
                            $leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
                            $leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));

                            $leg_pickup_date = date("Y-m-d", strtotime($pickup_select));
                            $pickup_leg_date_time = $leg_pickup_date . ' ' . $leg_pick_time;

                            $leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));
                            $dropoff_leg_date_time = $leg_pickup_date . ' ' . $leg_drop_time;

                            //update transport leg date time as selected start date and legs timing
                            $pickup_array = array("dt_start_time" => $pickup_leg_date_time);
                            $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs[$i]['leg_id'], "P");

                            $dropoff_array = array("dt_start_time" => $dropoff_leg_date_time);
                            $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs[$i]['leg_id'], "D");
                        }
                    } else {
							$pickup_select =  date('Y-m-d',strtotime($pickup_select));
							for ($i = 0; $i < count($legs); $i++) {
							
							
								if($i==0)
								{	
									if($legs[0]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[0]['pick_start_time'])));
									}	
								} else {
									if($legs[$i-1]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i-1]['pick_start_time'])));
									}	
								} 	
								$leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
								$leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));
								
								$leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i]['pick_start_time'])));
								//$leg_pickup_date_strtotime = strtotime(date("Y-m-d", strtotime($pickup_select)));
								
								if($previous_leg_pick_date_strtotime != $leg_pick_date_strtotime && $legs[$i]['route_type_id'] != 2 )
								{
									$next_date = date('Y-m-d', strtotime($pickup_select."+1 day"));
									$first_dt       = new DateTime($next_date);
									$last_dt      = new DateTime($dateselect);
									if($last_dt >= $first_dt)
									{
											$pickup_select = $next_date;
									}		
								}
								
								$leg_pickup_date = date("Y-m-d", strtotime($pickup_select));							
								$pickup_leg_date_time  = $leg_pickup_date.' '.$leg_pick_time;
									
								$leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));							
								$dropoff_leg_date_time  = $leg_pickup_date.' '.$leg_drop_time;
							
                            //update transport leg date time as selected start date and legs timing
                            if ($legs[$i]['route_type_id'] != 2) {
                                $pickup_array = array("dt_start_time" => $pickup_leg_date_time);
                                $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs[$i]['leg_id'], "P");

                                $dropoff_array = array("dt_start_time" => $dropoff_leg_date_time);
                                $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs[$i]['leg_id'], "D");
                            }
                        }
                    }
                }

                $this->session->set_flashdata('success', 'Transport date updated successfully.');
            	redirect(base_url() . 'org_transportation/draft_transport');
			
            } else {
                $this->session->set_flashdata('date_error', 'Please select date.');
            }
        }
		
		$data['transportation_list'] = $this->orgtrasnportation_model->get_all_draft_transportation($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'));
		
		$data['all_read_transportation_list'] = $this->orgtrasnportation_model->get_all_read_transportation($this->session->userdata('userid'),$this->session->userdata('org_id'));
		//print_r($data['all_read_transportation_list']);
		
		$transport_ids_array = array();
		foreach($data['all_read_transportation_list'] as $transport_data)
		{
			$transport_ids_array[] = $transport_data['in_transportation_id'];
		}
		//echo '<pre>';		print_r($transport_ids_array); //exit;   //use for testing
		$data['transport_ids_array'] = $transport_ids_array;
		
		//Getting total rows
		$config["total_rows"] = $data['transportation_list']['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] = $this->pagination->create_links();
		//echo "<pre>";print_r($data);die;
		$this->load->view('transportation/draft-transportations',$data);
	}
	
	
	# *******************************************************************************************	
	#	Function	:	pre_planned_transport	
	#	Purpose		:	Get All Pre Plan Transport
	# *******************************************************************************************
	
	public function pre_planned_transport() 
	{
				
				if(!$this->session->userdata('userid'))
				{
					$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
					$this->session->set_userdata('url_data',$url);
					redirect($this->config->item('base_url'));
				}
				if(!$this->session->userdata('org_id')) {
					redirect($this->config->item('base_url'));
				}
				
				// for remove the search result 
				if($this->session->userdata('preplan_search'))
				{
		 		  	 $this->session->unset_userdata('preplan_search');
				}
				if($this->session->userdata('user_preplan_search'))
				{
					 $this->session->unset_userdata('user_preplan_search');
				}
				
				#================Check User permission start===============#
				$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
				$make_array_user = array();
				$check_per_flag = '';
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
				if(!empty($user_permission)) {
					$make_array_user = unserialize($user_permission);
				}
				if($owner_id != $this->session->userdata('userid')) {
					if(isset($make_array_user['transport']) && in_array('transport_cr',$make_array_user['transport']) == true) {
						$check_per_flag = '1';
					} else {
						$check_per_flag = '0';
						$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
						redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
					}
				}
				#================Check User permission end================#	
				
				$data = array();
				$config = array();
				
				$this->load->library('pagination');
				
				$config["base_url"] 		= base_url().'org_transportation/pre_planned_transport';
				
				$config["per_page"]	 		= $this->config->item('records_per_page');
				$config["uri_segment"] 		= 3;
			
				$config['first_link'] 		= FALSE;
				$config['last_link'] 		= FALSE;
				
				$config['full_tag_open'] 	= '<ul class="pagination">';
				$config['full_tag_close'] 	= '</ul>';
				
				$config['prev_link'] 		= 'Prev';
				$config['prev_tag_open'] 	= '<li class="prev">';
				$config['prev_tag_close'] 	= '</li>';
				
				$config['next_link'] 		= 'Next';
				$config['next_tag_open'] 	= '<li class="next">';
				$config['next_tag_close'] 	= '</li>';
				
				$config['num_tag_open'] 	= '<li>';
				$config['num_tag_close'] 	= '</li>';
				
				$config['cur_tag_open']		= '<li class="active"><a href="">';
				$config['cur_tag_close'] 	= '</a></li>';
				$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
				if($this->input->post('search_module'))
				{
					if($this->input->post('module_search_text')=='')
					{
						$this->session->unset_userdata('preplan_search');	
						$this->session->unset_userdata('user_preplan_search');	
					}
					else
					{
						if(preg_match('([a-zA-Z].*[0-9]|[0-9].*[a-zA-Z].\s)', $this->input->post('module_search_text')))
						{
							$zip_code = $this->input->post('module_search_text');
							$zip_code = str_replace(" ","",$zip_code);
							$_POST['module_search_text'] = strtoupper($zip_code);
						}
						$draft_search = addslashes(str_replace(array('DBT','dbt'),"",$this->input->post('module_search_text')));
						$this->session->set_userdata('preplan_search',trim($draft_search));	
						$this->session->set_userdata('user_preplan_search',$this->common_function->custom_htmlentities($this->input->post('module_search_text')));	
					}
				}
				if($this->input->post('copy'))
				{
					//echo "<pre>";print_r($this->input->post('transport_id'));//die;
					
					//echo $_POST['pickup_select'];//die;
					//echo $_POST['dateselect'];//die;
					
					//$pickup_select	=	$_POST['pickup_select'];
					//$dateselect	=	$_POST['dateselect'];
					
					//$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
					//$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
					
					if($this->input->post('dateselect_year'))
					{	
						$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
					} else {
						$dateselect	=	$this->input->post('dateselect');
					}
					if($this->input->post('pickup_select_year'))
					{
						$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
					} else {
						$pickup_select	=	$this->input->post('pickup_select');
					}
					
					if($dateselect!='' && $pickup_select!='')
					{
					$dt_target = date("Y-m-d",strtotime($dateselect));
					$dt_pickup_date = date("Y-m-d",strtotime($pickup_select));
					}
					$trasport_id = addslashes($this->input->post('transport_id'));
					$transport_details 		= $this->orgtrasnportation_model->get_transport_details($trasport_id);
					$leg_details 			= $this->orgtrasnportation_model->get_trans_legs_copy($trasport_id);
					$previous_start_time_only = ''; 
					//$transport_details['0'][''];
					
					
					//echo "<pre>";print_r($transport_details);print_r($leg_details);die;
					$transport_copy = array(		"in_trans_coods_id"	=> $this->session->userdata('userid'), 
													"in_organization_id"=> $transport_details['0']['in_organization_id'],
													"st_from_street"	=> $transport_details['0']['st_from_street'],
													"st_from_city"		=> $transport_details['0']['st_from_city'],
													"st_from_state"		=> $transport_details['0']['st_from_state'],
													"st_from_zip"		=> $transport_details['0']['st_from_zip'],
													"st_from_country"	=> $transport_details['0']['st_from_country'],
													"st_to_street"		=> $transport_details['0']['st_to_street'], 
													"st_to_city"		=> $transport_details['0']['st_to_city'],  
													"st_to_state"		=> $transport_details['0']['st_to_state'], 
													"st_to_zip"			=> $transport_details['0']['st_to_zip'],  
													"st_to_country"		=> $transport_details['0']['st_to_country'],
													"st_from_info"		=> $transport_details['0']['st_from_info'],
													"dt_pickup_date"	=> isset($dt_pickup_date) ? $dt_pickup_date : $transport_details['0']['dt_pickup_date'],
													"dt_target"			=> isset($dt_target) ? $dt_target : $transport_details['0']['dt_target'],
													"st_to_info"		=> $transport_details['0']['st_to_info'],
													"st_trans_type"		=> $transport_details['0']['st_trans_type'],
													"in_tot_distance"	=> $transport_details['0']['in_tot_distance'],
													"in_created_by"		=> $this->session->userdata('userid'),
													"dt_created"		=> date("Y-m-d H:i;s"),
													"in_status"			=> "4",/*Save as draft*/
													"in_deleted"		=> "0",
													);
					//echo "<pre>";print_r($transport_copy);die;						
					$tra_id = $this->orgtrasnportation_model->add_transport($transport_copy);
					if(isset($leg_details) && !empty($leg_details))
					{
						foreach($leg_details as $key=>$value)
						{
							//echo "<pre>";print_r($legs);die;
							if($value['route_type_id'] == 0 || $value['route_type_id'] == 1)
							{
								$multi_user = isset($value['multiple_drivers_pilots']) ? $value['multiple_drivers_pilots'] : '';
								$meeting_location = isset($value['meeting_location']) ? $value['meeting_location'] : '';
								$user_num = isset($value['no_of_drivers_pilots']) ? $value['no_of_drivers_pilots'] : '';
							}
							elseif($value['route_type_id'] == 2)
							{
								$multi_user = '';
								$meeting_location = isset($value['overnight_comments']) ? $value['overnight_comments'] : '';
								$user_num = '';
							}


							$legs_array = array("in_transportation_id"	=> $tra_id,
												"in_route_type"			=> $value['route_type_id'],
												"in_created_by"			=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0",
												"in_multi_user"			=> $multi_user, //added by ghanshyam on 09Jan2015
												"in_user_num" 			=> $user_num,	//added by ghanshyam on 09Jan2015
												"st_meeting_location"	=> $meeting_location,	//added by ghanshyam on 09Jan2015
												"in_sort_order"       =>  $value['sort_order'],  //added by Nirav on 02Sept2016
												);	
							$leg_id			= $this->orgtrasnportation_model->create_legs($legs_array);	
	
							if($value['route_type_id']=='2')
							{
								$pickup_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "O",
														"st_street" 				=> $value['o_pick_street'],
														"st_city " 					=> $value['o_pick_city'],
														"st_state " 				=> $value['o_pick_state'],
														"st_zip " 					=> $value['o_pick_zip'],
														"st_country " 				=> $value['o_pick_country'],
														"in_deleted"				=> "0"
														);					
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
																	
							}
							else
							{
								$pickup_leg_time_only = date("H:i:s", strtotime($value['pick_start_time']));
								
								if($previous_start_time_only!='')
								{	
									if(strtotime($pickup_leg_time_only) < strtotime($previous_start_time_only))
									{
										$next_date = date('Y-m-d', strtotime($dt_pickup_date."+1 day"));
										$first_dt       = new DateTime($next_date);
										$last_dt      = new DateTime($dt_target);
										if($last_dt >= $first_dt)
										{
											$dt_pickup_date = $next_date;
										}	
									}
								}	
								
								$pickup_leg_date_time  = $dt_pickup_date.' '.$pickup_leg_time_only;
								
								$drop_leg_time_only = date("H:i:s", strtotime($value['drop_start_time']));
								$drop_leg_date_time  = $dt_pickup_date.' '.$drop_leg_time_only;
								
								$pickup_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "P",
														"st_street" 				=> $value['pick_street'],
														"st_city " 					=> $value['pick_city'],
														"st_state " 				=> $value['pick_state'],
														"st_zip " 					=> $value['pick_zip'],
														"st_country " 				=> $value['pick_country'],
														//"dt_start_time"				=> $value['pick_start_time'],
														//"dt_start_time"				=> isset($dt_pickup_date) ? $dt_pickup_date : $value['pick_start_time'],  //updated on 24oct2014 to change the new pickup selected date
														"dt_start_time"				=> $pickup_leg_date_time,
														"st_timezone"				=> $value['pick_timezone'],
														//"st_geometry"				=> @serialize($lat_long),
														"in_deleted"				=> "0"
														);					
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
								$dropoff_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "D",
														"st_street" 				=> $value['drop_street'],
														"st_city " 					=> $value['drop_city'],
														"st_state " 				=> $value['drop_state'],
														"st_zip " 					=> $value['drop_zip'],
														"st_country " 				=> $value['drop_country'],
														//"dt_start_time"				=> $value['drop_start_time'],
														//"dt_start_time"				=> isset($dt_pickup_date) ? $dt_pickup_date : $value['drop_start_time'],  //updated on 24oct2014 to change the new pickup selected date
														"dt_start_time"				=> $drop_leg_date_time,
														"st_timezone"				=> $value['drop_timezone'],
														//"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
														"in_deleted"				=> "0"
														);
								$this->orgtrasnportation_model->add_legs_details($dropoff_array);
								
								$previous_start_time_only = $pickup_leg_time_only;
								
								$origin_loc 		= ($value['pick_street'] ?$value['pick_street'].",":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].",":"").($value['pick_zip'] ? $value['pick_zip']:"").($value['pick_country'] ? ",".$value['pick_country']:"");
								$dest_loc 	    = ($value['drop_street'] ? $value['drop_street'].",":"").($value['drop_city']? $value['drop_city'].",":"").($value['drop_state'] ? $value['drop_state'].",":"").($value['drop_zip'] ? $value['drop_zip']:"").($value['drop_country']? ",".$value['drop_country']:"");
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);

                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
								$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
														"in_transportation_id"		=> $tra_id,
														"in_route_type"				=> $value['route_type_id'],
														"st_legs_details"			=> $routes_miles['route_path'],
														"fl_distance"				=> $routes_miles['distance'],
														"in_deleted"				=> "0"
													 );
								$this->common_model->insert_data("tbl_routes",$route_details);
                              }	
                              
								
								$origin_loc 		= ($value['pick_street'] ?$value['pick_street'].",":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].",":"").($value['pick_zip'] ? $value['pick_zip']:"").($value['pick_country'] ? ",".$value['pick_country']:"");
                              $dest_loc 	    = ($value['drop_street'] ? $value['drop_street'].",":"").($value['drop_city']? $value['drop_city'].",":"").($value['drop_state'] ? $value['drop_state'].",":"").($value['drop_zip'] ? $value['drop_zip']:"").($value['drop_country']? ",".$value['drop_country']:"");
                              $routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);

                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
								$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
														"in_transportation_id"		=> $tra_id,
														"in_route_type"				=> $value['route_type_id'],
														"st_legs_details"			=> $routes_miles['route_path'],
														"fl_distance"				=> $routes_miles['distance'],
														"in_deleted"				=> "0"
													 );
								$this->common_model->insert_data("tbl_routes",$route_details);
                              }			
								
							}
											
						}
					}
					//$this->get_json();
					//$this->session->set_flashdata('success', 'Transport deleted successfully.');
					$this->session->set_flashdata('success', "Make sure to Add Animal to attach an animal to this transport.  When you're ready to publish this transport, please goto Edit Legs to verify your legs and publish this new transport.");
					//redirect(base_url().'org-transportation-scheduled/'.$tra_id);
					redirect(base_url() . 'org-edit-transport/?id=' . $tra_id);
				}
				$data['transportation_list'] = $this->orgtrasnportation_model->get_all_preplan_transportation($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'));
				
				//Getting total rows
				$config["total_rows"] = $data['transportation_list']['num_rows'];
				
				//Initialize pagination
				$this->pagination->initialize($config);
				
				$data["links"] = $this->pagination->create_links();
				//echo "<pre>";print_r($data);die;
				$this->load->view('transportation/preplan_transportation',$data);
		}
		
	public function get_airports()
	{
		/* if(!$this->session->userdata('userid')) 
		{
			echo "1";die;
			//redirect($this->config->item('base_url'));
		} */
		$lat_long = array();
		$numeric="";
		/*if(is_numeric($this->input->get('term')))
		{
			$numeric="yes";
			$lat_long = array();
		}*/
		//echo "<pre>";print_r($this->input->get());die;
		$data_val = addslashes($this->input->get('term'));
		$result = $this->orgtrasnportation_model->get_airports($data_val,$numeric,$lat_long);
		echo json_encode($result);			
	}
	
	
	
	function Haversine($start, $finish) {
		
		$theta = $start[1] - $finish[1]; 
		$distance = (sin(deg2rad($start[0])) * sin(deg2rad($finish[0]))) + (cos(deg2rad($start[0])) * cos(deg2rad($finish[0])) * cos(deg2rad($theta))); 
		$distance = acos($distance); 
		$distance = rad2deg($distance); 
		$distance = $distance * 60 * 1.1515; 
		return round($distance, 2);
	
	}
// Get lat/long co-ords
	function getLatLong($address=false) { 
		//$address='04MT,USA';
		$address = str_replace(' ', '+', $address);
		//$url = 'http://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&sensor=false';
		$google_api_key = $this->config->item('googleapi_key');
		$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&key='.$google_api_key.'&alternatives=false&sensor=false';	
		//echo $url."<br><br><br>";
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$geoloc = curl_exec($ch);
		//echo "<pre>";print_r(json_decode($geoloc));die;
		$postal_code = '';
		if(json_decode($geoloc)->status=="OK"){
		$json = json_decode($geoloc);
		$postal_code = '';$state='';$city='';$country='';
		for($a=0;$a<count($json->results[0]->address_components);$a++)
		{
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='postal_code')
			{
				$postal_code = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='administrative_area_level_1')
			{
				$state = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='locality')
			{
				$city = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='country')
			{
				$country = $json->results[0]->address_components[$a]->short_name;
			}
		}
		//echo "<pre>";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));die;
		return array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country"=>$country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng));
		}
		
	}
	function get_start_end_point($page=false)
	{
		
		$tra_id					= $this->session->userdata('transport_id');
		if($tra_id=='')
		{
			die;
		}
		$transport_info = array();
		$legs_details = array();
		$legs_details2 = array();
		$transport_info 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$transport_info   = $transport_info[0];
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$i=1;
		
		$dist_new = '0';
		if(!empty($leg_details))
		{
			$ar_legs_value = array_values($leg_details);
			$way_points  = '';
			for($a=0;$a<count($ar_legs_value);$a++)
			{		
				if($ar_legs_value[$a]!=$ar_legs_value[$a]['pick_zip'])
				{
					$route_details = $this->orgtrasnportation_model->get_legs_path($ar_legs_value[$a]['leg_id']);
					if(count($route_details)<=0)
					{
								$origin_loc 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].",":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].",":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].",":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ",".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc 	= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].",":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].",":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$ar_legs_value[$a]['route_type_id']);	
								$legs	 		= $routes_miles['routes_lat_lon'];
								$dist_new 		= $dist_new+$routes_miles['distance'];
								if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
								{
										$route_details = array(	"in_transportation_leg_id"	=> $ar_legs_value[$a]['leg_id'],
																"in_transportation_id"		=> $this->session->userdata('transport_id'),
																"in_route_type"				=> $ar_legs_value[$a]['route_type_id'],
																"st_legs_details"			=> $routes_miles['route_path'],
																"fl_distance"				=> $routes_miles['distance'],
																"in_deleted"				=> "0"
										);	
										$this->common_model->insert_data("tbl_routes",$route_details);
								}
					}
					else
					{
									$legs	 		= $this->orgtrasnportation_model->decodePolylineToArray($route_details['st_legs_details']);
									if($route_details['in_route_type']=='1')
									{
										$legs = array($legs[0],$legs[(count($legs)-1)]);
									}
									
									$dist_new 		= $route_details['fl_distance'];
					}	
				}	else
				{
								$legs = array();
				}
							
							$color = $this->common_function->color[$i];
							if($next_loop<$a){$color = "#c8bfe1";}
							elseif($first_loop>$a){$color = "#c8bfe1";}
							
							if($ar_legs_value[$a]['route_type_id']=='1')
							{
								
								if(empty($legs))
								{
									$pickup_airport = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['pick_street']);
									$dropoff_airport  = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['drop_street']);
									$legs = array(array($pickup_airport['st_latitude'],$pickup_airport['st_longitude']),array($dropoff_airport['st_latitude'],$dropoff_airport['st_longitude']));
								}
								
							}
							if(!empty($legs))
							{
								$origin_loc1 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].",":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].",":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].",":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ",".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc1 			= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].",":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].",":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								
								$legs_details[] = array("id"			=>	$ar_legs_value[$a]['leg_id'],
														"leg_points"	=>	$legs,
														"color"			=>	$color,
														"user"			=> array("id"=>$ar_legs_value[$a]['user_id'],"screen_name"=>$ar_legs_value[$a]['display_name'],"gravatar_hash"=>md5(time())),
														"from_loc"      =>$origin_loc1,
														"to_loc"        => $dest_loc1
														
														
													);
							}
											
							if($i==8)
							{  
								$i=1;
							}
							else
							{
								$i++;					
							}	
			}
			
		}
		
	
		$user_profile_details = $this->common_function->get_user_profile($this->session->userdata('userid'));
		
		$origin_loc = ((isset($transport_info['st_from_street'])?$transport_info['st_from_street'].",":"").(isset($transport_info['st_from_city'])?$transport_info['st_from_city'].",":"").(isset($transport_info['st_from_state'])?$transport_info['st_from_state']:"").(isset($transport_info['st_from_zip'])?",".$transport_info['st_from_zip']:"").(isset($transport_info['st_from_country'])?",".$transport_info['st_from_country']:""));
		$dest_loc 	= ((isset($transport_info['st_to_street'])?$transport_info['st_to_street'].",":"").(isset($transport_info['st_to_city'])?$transport_info['st_to_city'].",":"").(isset($transport_info['st_to_state'])?$transport_info['st_to_state']:"").(isset($transport_info['st_to_zip'])?",".$transport_info['st_to_zip']:"").(isset($transport_info['st_to_country'])?",".$transport_info['st_to_country']:""));					
		
		$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc));
		$assigned_routes = $routes_miles['routes_lat_lon'];
		
		$assigned_routes_points_count  = count($assigned_routes);
		$res = $this->orgtrasnportation_model->get_airport_details1();
		
		foreach($res as $res_key => $res_val)
		{
				$add_in_array = 0;
				for($i=0;$i<$assigned_routes_points_count;$i++)
				{
					if(isset($assigned_routes[$i]) && !empty($assigned_routes[$i]))
					{
						$dist = $this->haversineGreatCircleDistance($res_val['latitude'],$res_val['longitude'],$assigned_routes[$i][0],$assigned_routes[$i][1]);
						if($dist <= 100)
						{	
							$add_in_array = 1;
							break; 
						}
					}
				}
				if($add_in_array == 0)
				{
					unset($res[$res_key]);	
				}
		}
		$res = array_values($res);

		$user_list = $this->orgtrasnportation_model->get_user_list();
		
		
			
		foreach($user_list as $u_key => $u_val)
		{
			$add_in_array = 0;
			for($i=0;$i<$assigned_routes_points_count;$i++)
			{
				if(isset($assigned_routes[$i]) && !empty($assigned_routes[$i]))
				{
					$dist = $this->haversineGreatCircleDistance($u_val['lat'],$u_val['lon'],$assigned_routes[$i][0],$assigned_routes[$i][1]);
					//echo '<pre/>';
					//echo 'distance between '.$u_val['lat'].' '.$u_val['lon'].' and '.$routes[$i][0].' '.$routes[$i][1].'is : '.$dist;
					if($dist <= 100)
					{
						//echo 'distance is: '.$dist; 	
						$add_in_array = 1;
						break; 
					}
				}
			}
			//echo 'add_in_array is:' . $add_in_array ;
			if($add_in_array == 0)
			{
				unset($user_list[$u_key]);	
			}
		}
		
		$user_list = array_values($user_list);
		
		//code to display user list only within 100 miles of the route starts
        $transport_details = $this->orgtrasnportation_model->get_transport_details($tra_id);
        $transport_info = (isset($transport_details['0'])) ? $transport_details['0'] : "";
		
		$details['transport_type'] =  $transport_info['st_trans_type'];
		
		$details['legs_details'] 	= $legs_details;
		$details['airport'] 		= $res;
		$details['user_list'] 		= $user_list;
		echo json_encode($details);
	}
	function get_start_end_point1()
	{
		
		$tra_id					= $this->session->userdata('transport_id');
		if($tra_id=='')
		{
			die;
		}
		$transport_info = array();
		$transport_details = array();
		//$routes_miles_ar = array(); 
		$routes_miles   = array();
		$routes = array();
		$origin_loc = array();
		$dest_loc = array();
		$leg_details = array(); 
		$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		$way_points = "";
		$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
		if(isset($leg_details) && !empty($leg_details))
		{
			$origin_loc = (($transport_info['st_from_street']?$transport_info['st_from_street'].",":"").($transport_info['st_from_city']?$transport_info['st_from_city'].",":"").($transport_info['st_from_state']?$transport_info['st_from_state']:"").($transport_info['st_from_zip']?",".$transport_info['st_from_zip']:"").($transport_info['st_from_country']?",".$transport_info['st_from_country']:""));
			$dest_loc 	= (($transport_info['st_to_street']?$transport_info['st_to_street'].",":"").($transport_info['st_to_city']?$transport_info['st_to_city'].",":"").($transport_info['st_to_state']?$transport_info['st_to_state']:"").($transport_info['st_to_zip']?",".$transport_info['st_to_zip']:"").($transport_info['st_to_country']?",".$transport_info['st_to_country']:""));			
			//$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),$way_points);
			$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc));
			$routes = $routes_miles['routes_lat_lon'];
					
		}
		
		$legs_details['points'] = $routes;
		
	
				
		$loc = (($transport_details[0]['st_from_street']?$transport_details[0]['st_from_street'].",":"").($transport_details[0]['st_from_city']?$transport_details[0]['st_from_city'].",":"").($transport_details[0]['st_from_state']?$transport_details[0]['st_from_state']:"").($transport_details[0]['st_from_zip']?",".$transport_details[0]['st_from_zip']:"").($transport_details[0]['st_from_country']?",".$transport_details[0]['st_from_country']:""));
		$dest 	= (($transport_details[0]['st_to_street']?$transport_details[0]['st_to_street'].",":"").($transport_details[0]['st_to_city']?$transport_details[0]['st_to_city'].",":"").($transport_details[0]['st_to_state']?$transport_details[0]['st_to_state']:"").($transport_details[0]['st_to_zip']?",".$transport_details[0]['st_to_zip']:"").($transport_details[0]['st_to_country']?",".$transport_details[0]['st_to_country']:""));
		
		if(empty($legs_details['points']))
		{	
			$source_details = $this->getLatLong($loc);	
			$destination_details = $this->getLatLong($dest);
		}
		else
		{
			$source_details['lat_long'][0] = $legs_details['points'][0][1];
			$source_details['lat_long'][1] = $legs_details['points'][0][0];
			$destination_details['lat_long'][0] = $legs_details['points'][(count($legs_details)-1)][1];
			$destination_details['lat_long'][1] = $legs_details['points'][(count($legs_details)-1)][0];
		}
		
				
		$legs_details['start'] 	= array("latitude"=>$source_details['lat_long'][0],"longitude"=>$source_details['lat_long'][1],"id"=>"Pickup","name"=>$loc);
		$legs_details["end"]	= array("latitude"=>$destination_details['lat_long'][0],"longitude"=>$destination_details['lat_long'][1],"id"=>" DropOff","name"=>$dest);
		echo json_encode($legs_details);
	}
	

	function generate_download($document)
    {	
	
		$this->load->library('user_agent');
		if($document=='')
		{
			redirect($this->agent->referrer());	
		}
		$document = $this->common_function->decode_base64($document);
        $file = $this->config->item('upload')."trasnportation/".$document;
		
		if ($document!='' && file_exists($file)) {
			$this->load->helper('download');
			$data = file_get_contents($file); // Read the file's contents
			$name = $document;
			force_download($name, $data);
		}
		else
		{   		
			$this->session->set_flashdata('upload_error', 'File does not exist.');
			redirect($this->agent->referrer());		
			
		}
    }
	
	function download_transport_photos()
	{
		$transport_id = $this->uri->segment(3);		
		
		$transport_photos 			= $this->orgtrasnportation_model->get_transport_photos($transport_id);
		
		$photos_details = array();
		foreach($transport_photos as $photos_key=>$photos_value)
		{
			$photos_details[] = $photos_value['st_file_name'];			
		}
		
		if(empty($photos_details) || $photos_details == 0)
		{
			$this->session->set_flashdata('message_sys', 'No photo available for download.');	
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$transport_id."/#tab_4_3");
		}
		
		$files = $photos_details;
		//$zipname = 'upload/trasnportation/'.time()."_transport_photos.zip";
		$zipname = 'upload/transportimagezip/'.time()."_transport_photos.zip";
		$zip = new ZipArchive;
		$zip->open($zipname, ZipArchive::CREATE);
		foreach ($files as $file) {
		  $zip->addFile('upload/trasnportation/'.$file,$file);
		}
		$zip->close();
		header('Content-Type: application/zip');
		header('Content-disposition: attachment; filename='.$zipname);
		header('Content-Length: ' . filesize($zipname));
		readfile($zipname);
		redirect($this->config->item('base_url')."org-transportation-scheduled/".$transport_id."/");
		exit;
	}
	
	function download_confirm_transport_photos()
	{
		$transport_id = $this->uri->segment(3);		
		
		$transport_photos 			= $this->orgtrasnportation_model->get_transport_photos($transport_id);
		
		$photos_details = array();
		foreach($transport_photos as $photos_key=>$photos_value)
		{
			$photos_details[] = $photos_value['st_file_name'];			
		}
		if(empty($photos_details) || count($photos_details) == 0)
		{
			$this->session->set_userdata('attach_photo_auto_login',1);
			$this->session->set_flashdata('rescue_story', 'No photo available for download.');	
			redirect($this->config->item('base_url')."org-confirm-transport/".$transport_id."/");
		}
		
		$files = $photos_details;
		//$zipname = time()."_transport_photos.zip";
		$zipname = 'upload/transportimagezip/'.time()."_transport_photos.zip";
		$zip = new ZipArchive;
		$zip->open($zipname, ZipArchive::CREATE);
		foreach ($files as $file) {
		  $zip->addFile('upload/trasnportation/'.$file,$file);
		}
		$zip->close();
		header('Content-Type: application/zip');
		header('Content-disposition: attachment; filename='.$zipname);
		header('Content-Length: ' . filesize($zipname));
		readfile($zipname);
		$this->session->set_userdata('attach_photo_auto_login',1);
		redirect($this->config->item('base_url')."org-confirm-transport/".$transport_id."/");
		//redirect($this->config->item('base_url')."org-confirm-transport/".$transport_id."/#tab_4_3");
		exit;
	}
	# *******************************************************************************************	
	#	Function	:	delete_animal_files
	#	Purpose		:	Deleting animal files
	# *******************************************************************************************
	public function delete_transport_files($file_id,$animal_id) {
		//$this->load->library('user_agent');
		$file_name	=	$this->orgtrasnportation_model->get_file_name_by_id($file_id);
		
		$data['animal_files']	=	$this->orgtrasnportation_model->delete_animal_files($file_id);
		
		//code to delete files in the rackspace starts
		if(isset($file_name) && $file_name != '')
		{
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($file_name);
		}
		//code to delete files in the rackspace end
		
		$this->session->set_flashdata('message_sys', 'Transportation file(s) deleted successfully.');	
		redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_2_1");
		//redirect($this->agent->referrer());	
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_transport_photos
	#	Purpose		:	Deleting transport photos
	# *******************************************************************************************
	public function delete_transport_photos($file_id,$transport_id) {
	
		$file_name	=	$this->orgtrasnportation_model->get_photo_name_by_id($file_id);
		
		$data['animal_files']	=	$this->orgtrasnportation_model->delete_transport_photos($file_id);
		
		//code to delete files in the rackspace starts
		if(isset($file_name) && $file_name != '')
		{
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($file_name);
		}
		//code to delete files in the rackspace end
		
		//$this->session->set_flashdata('message_sys', 'Transportation photo deleted successfully.');	
		//redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/#tab_4_3");

		$this->session->set_userdata('attach_photo_auto_login',1);
		$this->session->set_flashdata('google_leg', 'Transportation photo deleted successfully.');
		redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_confirm_transport_photos
	#	Purpose		:	delete_confirm_transport_photoss
	# *******************************************************************************************
	public function delete_confirm_transport_photos($file_id,$transport_id) {
	
		$file_name	=	$this->orgtrasnportation_model->get_photo_name_by_id($file_id);
		
		$data['animal_files']	=	$this->orgtrasnportation_model->delete_transport_photos($file_id);
		
		//code to delete files in the rackspace starts
		if(isset($file_name) && $file_name != '')
		{
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($file_name);
		}
		//code to delete files in the rackspace end
		
		//$this->session->set_flashdata('message_sys', 'Transportation photo deleted successfully.');
		$this->session->set_userdata('attach_photo_auto_login',1);
		$this->session->set_flashdata('google_leg', 'Transportation photo deleted successfully.');		
		redirect($this->config->item('base_url')."org-confirm-transport/".$this->session->userdata('transport_id')."/");		
	}
	
	/*public function get_zip_code()
	{
		
		if(!$this->session->userdata('userid')) 
		{
			redirect($this->config->item('base_url'));
		}
		//echo $this->uri->segment(3);
		//echo "<pre>";print_r($_GET);print_r($_POST);die;
		//echo "<pre>";print_r($this->input->get());print_r($this->input->post());die;
		$zip = addslashes($this->input->get('term'));
		$city = addslashes($this->input->get('city'));
		$state = addslashes($this->input->get('state'));
		$result = $this->orgtrasnportation_model->get_zipcode($zip,$city,$state);
		echo json_encode($result);	
	}*/
	public function get_zip_code()
	{
		
		/* if(!$this->session->userdata('userid')) 
		{
			echo "1";die;
			//redirect($this->config->item('base_url'));
		} */
		if($this->input->get('term'))
		{
			//echo $this->uri->segment(3);
			//echo "<pre>";print_r($_GET);print_r($_POST);die;
			//echo "<pre>";print_r($this->input->get());print_r($this->input->post());die;
			$zip = addslashes($this->input->get('term'));
			$city = addslashes($this->input->get('city'));
			$state = addslashes($this->input->get('state'));
			$result = $this->orgtrasnportation_model->get_zipcode($zip,$city,$state);
			echo json_encode($result);	
		}
		else
		{
			$city = addslashes(trim($this->input->post('city')));
			$state = addslashes(trim($this->input->post('state')));
			$result = $this->orgtrasnportation_model->get_zipcode("",$city,$state,"action");
			if(isset($result[0]['value']))
			{
				echo $result[0]['value']."#*#".$result[0]['city']."#*#".$result[0]['st_country'];	
			}
			
			
		}
	}
	
	public function get_zip_code2() {

        if ($this->input->get('term')){
			
			$term = $this->input->get('term');
			
		    $term = addslashes(trim($this->input->get('term')));
            $zip_code  = str_replace(' ', '',$term);
			$zip  = strtoupper($zip_code);
			$result = $this->orgtrasnportation_model->get_zipcode2($zip);
            echo json_encode($result);
        } else {
			$city = addslashes(trim($this->input->post('city')));
            $state = addslashes(trim($this->input->post('state')));
			
            $result = $this->orgtrasnportation_model->get_zipcode("", $city, $state, "action");
           			
            if (isset($result[0]['value'])) {
                echo $result[0]['value'] . "#*#" . $result[0]['city'] . "#*#" . $result[0]['st_country'];
            }
		 }
    }
	
	
	//
	# *******************************************************************************************	
	#	Function	:	view_more_tr_notification	
	#	Purpose		:	Getting notifications against current transportation
	# *******************************************************************************************
	
	public function view_more_tr_notification() 
	{
		if(!$this->session->userdata('userid')) {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		$str = '';
		$data = array();
		$data['tra_id']						= $this->session->userdata('transport_id');
		$data['base_url'] = $this->config->item('base_url');
		
		$data['total_rows_tr']		= $this->orgtrasnportation_model->get_feeds_count($data['tra_id']);
		//echo "<pre>";print_r($this->input->post());die;
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
		$limit = '0';	
		
		$rec_per_page = 10;
		
		$data['feeds']	= $this->orgtrasnportation_model->get_feeds($data['tra_id'],$this->input->post('start'),$this->input->post('end'));
		
		$this->load->view('includes/transport-feed-more',$data);
	}
	
	//
	# *******************************************************************************************	
	#	Function	:	get_transport_dates_by_id	
	#	Purpose		:	get_transport_dates_by_id
	# *******************************************************************************************
	
	public function get_transport_dates_by_id() 
	{
		$transport_id	= $_POST['transport_id'];
		
		$this->load->model('orgtrasnportation_model');
		$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
		
		if(isset($transport_details)){
		echo json_encode($transport_details);
		}
		exit;
		
	}
	
	public function get_zip_code_data()
	{
		
		$city = addslashes(trim($this->input->post('city')));
		$state = addslashes(trim($this->input->post('state')));
		$data['zipcodes'] = $this->orgtrasnportation_model->get_zipcode_data("",$city,$state,"action");
		
		echo json_encode($data);
		
		
	}
	
	public function get_zipcode_by_state_city() {
	
		$city = trim($this->input->post('city_name'));
		$state = trim($this->input->post('state_code'));
		$data = $this->orgtrasnportation_model->get_zipcode_by_state_city($city, $state);
	
		echo json_encode($data);
		exit;
    }
	
	public function get_airport_details()
	{
		
		$airport_id = addslashes(trim($this->input->post('airport_id')));
		
		$airport_details = $this->orgtrasnportation_model->get_airport_details($airport_id);

		if(isset($airport_details['st_latitude']) && $airport_details['st_latitude']!='' && isset($airport_details['st_longitude']) && $airport_details['st_longitude']!='')
		{
			$loc = $airport_details['st_latitude'].",".$airport_details['st_longitude'];
		}
		else
		{
			$loc = (($airport_id?$airport_id.",":"").(isset($airport_details['st_city'])?$airport_details['st_city'].",":"").(isset($airport_details['st_state'])?$airport_details['st_state'].",":"").(isset($airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]):""));
		}
		$data['start'] = $this->getLatLong($loc);

		echo json_encode($data);
		//exit;
		
	}
	
	function get_airports_by_zipcode()
	{
		$data_val = $this->input->get('term');
		//$data_val = 90001;
		$lat_log_data = $this->getLatLong($data_val);
		
		$lat = $lat_log_data['lat_long'][0];
		$lon = $lat_log_data['lat_long'][1];
		//$rad = 500; // radius of bounding circle in miles
		$rad = 1000; // radius of bounding circle in miles

		$R = 3959;  // earth's mean radius, miles
	
		// first-cut bounding box (in degrees)
		$maxLat = $lat + rad2deg($rad/$R);
		$minLat = $lat - rad2deg($rad/$R);
		// compensate for degrees longitude getting smaller with increasing latitude
		$maxLon = $lon + rad2deg($rad/$R/cos(deg2rad($lat)));
		$minLon = $lon - rad2deg($rad/$R/cos(deg2rad($lat)));
		
		$result =  $this->orgtrasnportation_model->get_airports_by_zipcode($lat,$lon,$rad,$R,$maxLat,$minLat,$maxLon,$minLon);
		//print_r($airport_data);
		//exit;
		echo json_encode($result);		
	}
	
	function get_airports_by_zipcode_or_airport_id()
	{
		$data_val = $this->input->get('term');
		$airport_or_zip = $this->orgtrasnportation_model->find_airport_id_or_zipcode($data_val);
		if($airport_or_zip == 1)
		{
			$this->get_airports();
		}
		if($airport_or_zip == 0)
		{
			$this->get_airports_by_zipcode();
		}
		
	}
	
	#=========================================================
	#	Function : get_transport_feed_users
	#	Purpose  : Getting all user names
	#=========================================================
	
	public function get_transport_feed_users() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		/*$name = substr($this->input->get('term'),0,1);
		if($name == '@') {
			$data = $this->orgtrasnportation_model->get_transport_feed_users($this->session->userdata('org_id'));
			echo json_encode($data);
		}*/
		$name='';
		$substr = strstr($this->input->get('term'), '@');
		if ($substr) {
		    $data = $this->orgtrasnportation_model->get_transport_feed_users($this->session->userdata('org_id') ,$substr);
            echo json_encode($data);
        }
	}
	
	#=========================================================
	#	Function : get_city
	#	Purpose  : Getting all cities according to state
	#=========================================================
	
	public function get_city() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = $this->orgtrasnportation_model->get_city(addslashes($this->input->get('term')),addslashes($this->input->get('state')));
		echo json_encode($data);
	}
	
	function get_airports_by_data()
	{
		$data_val = $this->input->get('term');
		$airports_data = $this->orgtrasnportation_model->find_airport_data($data_val);
		//print_r($airports_data);exit;
		echo json_encode($airports_data);			
		
	}
	
	function update_user_transport_agreement()
	{
		$user_id = $this->session->userdata('userid');
		$updated_result = $this->orgtrasnportation_model->update_user_transport_agreement($user_id);
		
		//print_r($updated_result);exit;
		echo json_encode($updated_result);			
		
	}	
	
	public function get_distance_remain_after_leg_delete($trans_id)
	{
		
		$this->session->set_userdata('transport_id',$trans_id);	
		//echo "<pre>";print_r($this->input->post());die;
		$leg_details = $this->input->post('data_val');
		$way_points = "";
		//echo "<pre>";print_r($leg_details);
		//echo "<pre>";print_r($leg_details);die;

		if(isset($leg_details) && !empty($leg_details))
		{
			$tra_id					= $this->session->userdata('transport_id');
			$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
			$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";
			//print_r($leg_details[$index]);die;
			$drop_street = isset($leg_details['dropoff_street'])?$this->common_function->custom_htmlentities($leg_details['dropoff_street']):"";
			$drop_city = isset($leg_details['dropoff_city'])?$this->common_function->custom_htmlentities($leg_details['dropoff_city']):"";
			$drop_state = isset($leg_details['dropoff_state'])?$this->common_function->custom_htmlentities($leg_details['dropoff_state']):"";
			$drop_zip = isset($leg_details['dropoff_zip'])?$this->common_function->custom_htmlentities($leg_details['dropoff_zip']):"";
			
			$dropoff_airport = isset($leg_details['dropoff_airport'])?$this->common_function->custom_htmlentities($leg_details['dropoff_airport']):"";
			$dropoff_airport_city = isset($leg_details['dropoff_airport_city'])?$this->common_function->custom_htmlentities($leg_details['dropoff_airport_city']):"";
			$dropoff_airport_state = isset($leg_details['dropoff_airport_state'])?$this->common_function->custom_htmlentities($leg_details['dropoff_airport_state']):"";
			
			
			$pickup_street = isset($leg_details['pickup_street'])?$this->common_function->custom_htmlentities($leg_details['pickup_street']):"";
			$pickup_city = isset($leg_details['pickup_city'])?$this->common_function->custom_htmlentities($leg_details['pickup_city']):"";
			$pickup_state = isset($leg_details['pickup_state'])?$this->common_function->custom_htmlentities($leg_details['pickup_state']):"";
			$pickup_zip = isset($leg_details['pickup_zip'])?$this->common_function->custom_htmlentities($leg_details['pickup_zip']):"";
			
			$pickup_airport = isset($leg_details['pickup_airport'])?$this->common_function->custom_htmlentities($leg_details['pickup_airport']):"";
			$pickup_airport_city = isset($leg_details['pickup_airport_city'])?$this->common_function->custom_htmlentities($leg_details['pickup_airport_city']):"";
			$pickup_airport_state = isset($leg_details['pickup_airport_state'])?$this->common_function->custom_htmlentities($leg_details['pickup_airport_state']):"";
			
			$legs_lat_long = array();
			
			if(isset($leg_details['route_type_id']) && $leg_details['route_type_id']=='1')
			{
				
				$start_airport_details = $this->orgtrasnportation_model->get_airport_details($pickup_airport);
				
				$end_airport_details = $this->orgtrasnportation_model->get_airport_details($dropoff_airport);
				
				if(isset($start_airport_details['st_latitude']) && $start_airport_details['st_latitude']!='' && isset($start_airport_details['st_longitude']) && $start_airport_details['st_longitude']!='')
				{
					$origin_loc = $start_airport_details['st_latitude'].",".$start_airport_details['st_longitude'];
				}
				else
				{
					$origin_loc = (($pickup_airport?$pickup_airport.",":"").(isset($start_airport_details['st_city'])?$start_airport_details['st_city'].",":"").(isset($start_airport_details['st_state'])?$start_airport_details['st_state'].",":"").(isset($start_airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$start_airport_details['st_iso_country']]):""));
				}
				
				if(isset($end_airport_details['st_latitude']) && $end_airport_details['st_latitude']!='' && isset($end_airport_details['st_longitude']) && $end_airport_details['st_longitude']!='')
				{
					$dest_loc = $end_airport_details['st_latitude'].",".$end_airport_details['st_longitude'];
				}
				else
				{
					$dest_loc = (($drop_airport?$drop_airport.",":"").(isset($end_airport_details['st_city'])?$end_airport_details['st_city'].",":"").(isset($end_airport_details['st_state'])?$end_airport_details['st_state'].",":"").(isset($end_airport_details['st_iso_country'])?strtoupper($this->common_function->shortCountry[$end_airport_details['st_iso_country']]):""));
				}
				
			}
			else
			{
				$origin_loc = (($pickup_street?$pickup_street.",":"").($pickup_city?$pickup_city.",":"").($pickup_state?$pickup_state:"").($pickup_zip?",".$pickup_zip:""));
				$dest_loc = (($drop_street?$drop_street.",":"").($drop_city?$drop_city.",":"").($drop_state?$drop_state:"").($drop_zip?",".$drop_zip:""));
			}
			
			$routes_miles = $this->orgtrasnportation_model->get_route_miles_after_delete_leg(urlencode($origin_loc),urlencode($dest_loc),$way_points);
			//echo $routes_miles['distance'];exit;
			
			$data_val_distance['distance_remain'] = $routes_miles['distance'];
			$data_val_distance['route_distance'] = $routes_miles['distance'];
			$data_val_distance['in_tot_distance'] = $transport_info['in_tot_distance'];
			$data_val_distance['start_postal_code'] = "";
			$data_val_distance['finish_postal_code'] = "";
			
			}
			
			echo json_encode($data_val_distance);		
	}
	
	//send email to user about new transportation
	function transport_emails()
	{
		$cron_email_array = array("cron_url"=> base_url().'org_transportation/transport_emails',
							"cron_step"=>'1',
							"cron_step_detail"=>'step1',
							"cron_created_date"=>date("Y-m-d H:i:s")
							);
		$this->common_model->add_cron_email_status($cron_email_array);
		
		$last_cron_inserted_id = $this->db->insert_id();
		//echo 'transport_emails is called'; 
		$email_details = $this->orgtrasnportation_model->get_new_transports();	
		//echo '<pre/>';print_r($email_details);//exit;
		//echo '================';
		
		if(isset($email_details) && count($email_details) > 0)
		{
			$cron_email_array = array("cron_step"=>'2',
								"cron_step_detail"=>'step2',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
			
			$this->load->library('email');
			foreach($email_details as $values)
			{	
				/*
				if(!empty($values['user_detail']))
				{
					$user_details = unserialize($values['user_detail']);					
				}
				//echo 'user_details:<pre/>';print_r($user_details);
				if(isset($user_details) && count($user_details) > 0)
				{
					//foreach($user_details as $user_value)
					//{
					
					$message = str_replace("##user_display_name##", $user_details['name'], $values['email_content']);
					$to 	 = $user_details['email_address'];
					$subject = $values['email_subject'];
					
					$pos = strpos($subject,'Revised:');

					if($pos === false) {
					 // string needle NOT found in haystack
					 $category  = 'Doobert.com New Transport';
					}
					else {
					 // string needle found in haystack
					 $category  = 'Doobert.com Revised Transport';
					}
					$category  =    $email_details[0]['st_category'];
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					//}
					$this->orgtrasnportation_model->update_transport_emails($values['in_new_transportation_cron_id']);
					//echo $this->email->print_debugger();die;
					//echo 'email sent successfully';
				}*/
				
				
                if (!empty($values['user_detail'])) {
                    $user_details = unserialize($values['user_detail']);
                }
                if (isset($user_details) && count($user_details) > 0) 
				{
                	$message = str_replace("##user_display_name##", $user_details['name'], $values['email_content']);
					
					
					$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$values['in_transport_id'].'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$values['in_transport_id'].'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
						
						
						$message	=	str_replace("##fbtransportshare##",$fbtransportshare,$message);
                    $to = $user_details['email_address'];	
					//$to = 'sadique.mohammed@pulsesolutions.net';	
					  
				    $subject = $values['email_subject'];	
					
					$category  =    "DBT".$values['in_transport_id']." - Doobert.com Transport";		
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					
                	$this->orgtrasnportation_model->update_transport_emails($values['in_new_transportation_cron_id']);
                }
			}
			$cron_email_array = array("cron_step"=>'3',
								"cron_step_detail"=>'step3',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
        }else{
			$cron_email_array = array("cron_step"=>'3',
								"cron_step_detail"=>'step3',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
		}
	}
	
	public function edit_transport() {
        if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
		
		if (isset($_GET['id'])) {
            $this->session->set_userdata('transport_id', $_GET['id']);
        }
		
		$this->session->unset_userdata('transport_step');
		
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$transport_date = date('Y-m-d', strtotime($transport_data[0]['dt_target']."+7 day"));
		$today_date= date('Y-m-d');	
		
		$today_dt       = new DateTime($today_date);
		$expire_dt      = new DateTime($transport_date);
		
		if (isset($transport_data[0]['st_trans_type']) && $transport_data[0]['st_trans_type'] == 'D' && 
			$transport_data[0]['accTcid'] == $this->session->userdata('userid') && $expire_dt >= $today_dt ){
				$this->session->set_userdata('org_id',$transport_data[0]['in_organization_id']);
		} else {
			if (isset($transport_data[0]['st_trans_type'])  && $transport_data[0]['st_trans_type'] == 'D'  && 
			$transport_data[0]['accTcid'] == $this->session->userdata('userid') && $today_dt > $expire_dt)
			{
				redirect($this->config->item('base_url'));
			}				
		}
		
        if (!$this->session->userdata('org_id') || !$this->session->userdata('transport_id')) {
			redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        //$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		if(($today_dt > $expire_dt  && $transport_data[0]['st_trans_type'] == "D") || ($transport_data[0]['st_trans_type'] == "D" && $transport_data[0]['accTcid'] == 0) || $transport_data[0]['st_trans_type'] == "P") 
		{		
			 $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));	
		}
        $make_array_user = array();
        $check_per_flag = '';
        if ($owner_id != $this->session->userdata('userid')) 
		{
			if(($today_dt > $expire_dt  && $transport_data[0]['st_trans_type'] == "D") || ($transport_data[0]['st_trans_type'] == "D" && $transport_data[0]['accTcid'] == 0) || $transport_data[0]['st_trans_type'] == "P" )  
			{
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			}
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if (($owner_id != $this->session->userdata('userid') && $transport_data[0]['st_trans_type'] == "P") || $transport_data[0]['st_trans_type'] == "D") 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else if($transport_data[0]['accTcid'] == $this->session->userdata('userid')) {
					$check_per_flag = '1';
				  } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }
		$this->session->set_userdata('transport_cr',1);
        #================Check User permission end================#
        $data = array();
        $data['Err_Msg'] = '';
        $data['menu_no'] = 'yes';
        $data['owner_id'] = $owner_id;
        $state_list = $this->common_function->state_list;
        $data['state_list'] = $state_list;
		$org_id 				= $this->session->userdata("org_id");
        $c_state_list = $this->common_function->canadian_state_list;
        $data['c_state_list'] = $c_state_list;

        $data['all_state'] = array_merge($data['state_list'], $data['c_state_list']);

        $data['country_list'] = $this->common_function->doobertcountry;
		
		$animal_transport 		= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['animal_transport'] 	= $animal_transport;
		
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		$org_details = $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));		
		$data['profile_details'] = $user_details['0'];
        $form_field = array('pick_street' => "",
            'pick_country' => "USA",
            'pick_city' => "",
            'pick_state' => "",
            'pick_zip' => "",
            'pick_info' => "",
            "drop_street" => "",
            'drop_country' => "USA",
            "drop_city" => "",
            "drop_state" => "",
            "drop_zip" => "",
            "drop_info" => "",
            "pickupselect" => "",
            "dateselect" => "",
            "action" => "",
            "image_file" => "",
            "need_trans_mon" => "",
			"trans_unique_name" => "",
			"allow_pics"=>"",
			"receiving_organization_name" => '',
			"receiving_contact_name"  => '',		
			"receiving_contact_email" => '',	
			"receiving_contact_phone_no" => '',
			"receiving-501c3-certified" => '',
			"organization_name" => '',
            "contact_name" => '',
            "contact_email" => '',
            "contact_phone_no" => '',
			"501c3-certified"=>'',
			"in_status"=>'',
			"backstory"=>'',
			"sendrunsheet-sending"=>'',
			"sendrunsheet-receiving"=>'',
			"sms_notify"=>'',
			"fb_publish"=>'',
        );
        foreach ($form_field as $key => $value) {
            $data['org_trasport'][$key] = $value;
        }
        if ($this->input->post('action')) {
            foreach ($form_field as $key => $value) {
                $data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
            }
           
            $pickup_zipcode_data = explode(',', $data['org_trasport']['pick_zip']);
            //print_r($pickup_zipcode_data);
            $data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : '';
            $data['org_trasport']['pick_city'] = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : '';
            $data['org_trasport']['pick_state'] = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : '';
            $data['org_trasport']['pick_country'] = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : '';

            $dropoff_zipcode_data = explode(',', $data['org_trasport']['drop_zip']);
            //print_r($dropoff_zipcode_data);
            $data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : '';
            $data['org_trasport']['drop_city'] = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : '';
            $data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : '';
            $data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : '';

            //echo "<pre>";print_r($data['org_trasport']); die;
            $error_message = '';
            $this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
            $this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
            $this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
            $this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');

            $this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
            $this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
            $this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
            $this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			
			$this->form_validation->set_rules('receiving_organization_name', 'Receiving Organization Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_name', 'Receiving Contact Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_email', 'Receiving Contact Email', 'trim|required|valid_email');
			$this->form_validation->set_rules('receiving_contact_phone_no', 'Receiving Phone No', 'trim|required');
			
			$this->form_validation->set_rules('contact_name', 'Contact Name', 'trim|required');
			$this->form_validation->set_rules('contact_phone_no', 'Contact Email', 'trim|required');
			$this->form_validation->set_rules('contact_email', 'Contact Phone Number', 'trim|required|valid_email');

            if ($this->form_validation->run() == FALSE || $error_message != '') {
                $data['Err_Msg'] = validation_errors() . "<p>" . $error_message . "</p>";
                $this->load->view('transportation/edit-org-trans-details', $data);
            } else {
                $origin = ($data['org_trasport']['pick_street'] ? $data['org_trasport']['pick_street'] . "," : "") . ($data['org_trasport']['pick_city'] ? $data['org_trasport']['pick_city'] . "," : "") . ($data['org_trasport']['pick_state'] ? $data['org_trasport']['pick_state'] : "") . ($data['org_trasport']['pick_zip'] ? "," . $data['org_trasport']['pick_zip'] : "");
                $destinations = ($data['org_trasport']['drop_street'] ? $data['org_trasport']['drop_street'] . "," : "") . ($data['org_trasport']['drop_city'] ? $data['org_trasport']['drop_city'] . "," : "") . ($data['org_trasport']['drop_state'] ? $data['org_trasport']['drop_state'] : "") . ($data['org_trasport']['drop_zip'] ? "," . $data['org_trasport']['drop_zip'] : "");
                $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
				
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}
				
                //echo "<pre>";print_r($routes_miles);die; 
                $transport_details = array(//"in_trans_coods_id"	=> $this->session->userdata('userid'), 
                    //"in_organization_id"=> $this->session->userdata('org_id'),
                    "st_from_city" => trim($data['org_trasport']['pick_city']),
                    "st_from_state" => trim($data['org_trasport']['pick_state']),
                    "st_from_zip" => trim($data['org_trasport']['pick_zip']),
                    "st_from_country" => trim($data['org_trasport']['pick_country']),
                    "st_to_city" => trim($data['org_trasport']['drop_city']),
                    "st_to_state" => trim($data['org_trasport']['drop_state']),
                    "st_to_zip" => trim($data['org_trasport']['drop_zip']),
                    "st_to_country" => trim($data['org_trasport']['drop_country']),
					"dt_pickup_date" => $start_date,
                    "dt_target" => $end_date,
                    //"dt_pickup_date" => date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
                    //"dt_target" => date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
                    "in_tot_distance" => $routes_miles['distance'],
                    "in_modified_by" => $this->session->userdata('userid'),
                    "dt_modified" => date("Y-m-d H:i:s"),
                    "in_need_trans_monitor" => isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] != '' ? 1 : 0,
					"st_trans_name" => trim($data['org_trasport']['trans_unique_name']),
					"in_allow_pics" => isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
					"in_reminder_sent" => 0,
					"stRecOrgNm" => trim($data['org_trasport']['receiving_organization_name']),
					"stRecNm"   => trim($data['org_trasport']['receiving_contact_name']),
					"stRecEmail" => trim($data['org_trasport']['receiving_contact_email']),
					"stRphone" => trim($data['org_trasport']['receiving_contact_phone_no']),
				    "stR501c3" => (isset($data['org_trasport']['receiving-501c3-certified'])  && $data['org_trasport']['receiving-501c3-certified']=='on' )?'Y':'N',
					"stS501c3" => (isset($data['org_trasport']['501c3-certified']) && $data['org_trasport']['501c3-certified']=='on' )?'Y':'N',
					"dt_modified" => date('Y-m-d H:i:s'),
					"stSendOrgNm" => trim($data['org_trasport']['organization_name']),
					"stSendNm"	=> trim($data['org_trasport']['contact_name']),
					"stSendEmail" => trim($data['org_trasport']['contact_email']),
					"stSphone" => trim($data['org_trasport']['contact_phone_no']),
					"in_status" => ($data['org_trasport']['in_status'])?$data['org_trasport']['in_status']:"4",
					"stAniStory" => ($data['org_trasport']['backstory'])?$data['org_trasport']['backstory']:"",
					"inSendOrgRunsheet"		=> (isset($data['org_trasport']['sendrunsheet-sending']) && $data['org_trasport']['sendrunsheet-sending'] != '') ? 1 : 0,
					"inRecOrgRunsheet"		=> (isset($data['org_trasport']['sendrunsheet-receiving']) && $data['org_trasport']['sendrunsheet-receiving'] != '') ? 1 : 0,
					"in_sms_notification"	=> isset($data['org_trasport']['sms_notify']) && $data['org_trasport']['sms_notify'] != '' ? 1 : 0,
					'in_fb_share'			=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,
				);
				$in_status_transport = $data['org_trasport']['in_status'];
                //code to add log for transport datechange start
				$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
				if($transport_data[0]['dt_pickup_date'] != date('Y-m-d',strtotime($data['org_trasport']['pickupselect'])) || $transport_data[0]['dt_target'] != date('Y-m-d',strtotime($data['org_trasport']['dateselect'])))
				{
					$array	=	array('in_transport_id'=> $this->session->userdata('transport_id'),
									   'prev_from_date'=> $transport_data[0]['dt_pickup_date'],
									   'prev_to_date'  => $transport_data[0]['dt_target'],
									   'new_from_date' => date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
									   'new_to_date'   => date('Y-m-d',strtotime($data['org_trasport']['dateselect'])),
									   'in_modified_by' => $this->session->userdata('userid'),
									   'dt_created'	   => date('Y-m-d H:i:s')
					);					
				 $this->orgtrasnportation_model->insert_transport_date_log($array);
				}
				//code to add log for transport datechange end
				
				$this->orgtrasnportation_model->update_transport_details($transport_details);
				
				if (isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] == '') {

                    $transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
                    if (isset($transport_monitors) && !empty($transport_monitors)) {
                        foreach ($transport_monitors as $mon_key => $mon_value) {
                            $this->orgtrasnportation_model->update_transport_monitor_status(array("in_deleted" => 1), $mon_value['in_tr_pr_id']);
                        }
                    }
                }
				
				for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $org_details['st_city'],
												     'st_state'				=>	$org_details['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													 
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				}

                $this->session->set_userdata('transport_edit', '1');
				//redirect(base_url().'org_transportation/add_organization/'.$this->session->userdata('transport_id'));	
                //redirect(base_url() . 'add-animal-transport/' . $this->session->userdata('transport_id'));
				if($transport_data[0]['st_trans_type'] == 'U' || $transport_data[0]['in_selected_type'] == '1')
				{
					$this->session->set_userdata('transport_steps',2);
					redirect(base_url().'select-transport/'.$this->session->userdata('transport_id'));
				}	else if($this->input->post('update_status')=='1' && $in_status_transport =='4')
				{												
					$this->session->set_flashdata('message', 'Information updated successfully.');
					redirect($this->config->item('base_url')."org-edit-transport");
				}else if($transport_data[0]['st_trans_type'] == 'D' && $transport_data[0]['accTcid'] == $this->session->userdata('userid') && $in_status_transport =='4')
				{
					redirect($this->config->item('base_url')."org_transportation/request_assigned_to_me/");
				} else if($transport_data[0]['st_trans_type'] == 'D' &&  $in_status_transport =='1' || ($this->input->post('update_status')=='1' && $in_status_transport =='1'))
				{
					redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
				}else if($transport_data[0]['st_trans_type'] == 'D' && $this->input->post('assisted_transport_enable')== '1' && $transport_details['0']['enable_routing_status']==0 && $in_status_transport =='4')
				{
							$this->orgtrasnportation_model->update_transport_details(array("enable_routing_status"=>1,"in_notify_tc_users"=>1,"in_completed_steps"=>0));
				            $orgcode = ($transport_data[0]['st_org_code'] != '')? '#'.$transport_data[0]['st_org_code'] : '#DBT';
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("97");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##TC_user##",$this->session->userdata('user_name')." ".$this->session->userdata('last_name')  , $templete);
								$templete = str_replace("##user##",$this->session->userdata('user_name'), $templete);
								$templete = str_replace("##transport_number##",$orgcode.$this->session->userdata('transport_id'), $templete);
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $this->session->userdata('email');
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$reply_to = $transport_details[0]['st_email'];
								
								$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
								$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
								
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
								if($transport_data[0]['st_email'] != $transport_data[0]['stSendEmail'])
								{
									$templete = $email_details[0]['st_email_body'];
									
									$templete = str_replace("##TC_user##",$transport_data[0]['stSendNm'], $templete);
									$templete = str_replace("##user##",$transport_data[0]['stSendNm'], $templete);
									$templete = str_replace("##transport_number##",$orgcode.$this->session->userdata('transport_id'), $templete);									
									$templete = str_replace("##DONATION##",$donation, $templete);									
									
									$strMail = $templete;
								
									$to = $transport_data[0]['stSendEmail'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									
								
									//$message = str_replace("##change_to_daily_digest##",'',$message);
		
									//$message = str_replace("##unsubscribe_url##",'',$message);
								
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
									
								}	
								
							}
							$this->session->set_userdata('transport_steps',4);
					redirect($this->config->item('base_url')."org_transportation/transport_thank_you");
				}else if($transport_data[0]['accTcid'] != $this->session->userdata('userid') && $transport_data[0]['st_trans_type'] == 'D' && $in_status_transport =='4' )
				{
					redirect($this->config->item('base_url')."org_transportation/draft_transport/");
				}
				else if($transport_data[0]['st_trans_type'] == 'P')
				{
					$this->session->set_userdata('transport_steps',3);
					redirect($this->config->item('base_url')."transport-create-legs");
				}
				
            }
        } else {
            $transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
            if (empty($transport_details)) {
                redirect($this->config->item('base_url'));
            }
            //echo "<pre>";print_r($transport_details);die;
            if ($transport_details['0']['in_status'] == '3' || $transport_details['0']['in_status'] == '2') {
                $this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
                redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
            }

            $data['org_trasport'] = array();

            $data['org_trasport']['in_need_trans_monitor'] = $transport_details['0']['in_need_trans_monitor'];
			$data['org_trasport']['in_allow_pics'] = $transport_details['0']['in_allow_pics'];
			$data['org_trasport']['stAniStory'] = $transport_details['0']['stAniStory'];
            $data['org_trasport']['pick_zipcode'] = isset($transport_details['0']['st_from_zip']) ? $transport_details['0']['st_from_zip'] : '';
            $data['org_trasport']['pick_city'] = isset($transport_details['0']['st_from_city']) ? $transport_details['0']['st_from_city'] : '';
            $data['org_trasport']['pick_state'] = isset($transport_details['0']['st_from_state']) ? $transport_details['0']['st_from_state'] : '';
            $data['org_trasport']['pick_country'] = isset($transport_details['0']['st_from_country']) ? $transport_details['0']['st_from_country'] : '';
			$data['org_transport']['in_status'] = isset($transport_details['0']['in_status']) ? $transport_details['0']['in_status'] : '';
            $data['org_trasport']['pickupselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_pickup_date']));
			$data['org_trasport']['st_trans_type'] = date("m/d/Y", strtotime($transport_details['0']['st_trans_type']));
            $data['org_trasport']['pick_zip'] = $data['org_trasport']['pick_zipcode'] . ', ';
			$data['org_trasport']['sms_notify'] = isset($transport_details['0']['in_sms_notification']) ? $transport_details['0']['in_sms_notification'] : '0';
			$data['org_trasport']['fb_share'] = isset($transport_details['0']['in_fb_share']) ? $transport_details['0']['in_fb_share'] : '0';
            if ($data['org_trasport']['pick_city'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_city'] . ', ';
            }
            if ($data['org_trasport']['pick_state'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_state'] . ', ';
            }
            if ($data['org_trasport']['pick_country'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_country'];
            }


            $data['org_trasport']['drop_zipcode'] = isset($transport_details['0']['st_to_zip']) ? $transport_details['0']['st_to_zip'] : '';
            $data['org_trasport']['drop_city'] = isset($transport_details['0']['st_to_city']) ? $transport_details['0']['st_to_city'] : '';
            $data['org_trasport']['drop_state'] = isset($transport_details['0']['st_to_state']) ? $transport_details['0']['st_to_state'] : '';
            $data['org_trasport']['drop_country'] = isset($transport_details['0']['st_to_country']) ? $transport_details['0']['st_to_country'] : '';
			
			$data['org_trasport']['trans_unique_name'] = isset($transport_details['0']['st_trans_name']) ? $transport_details['0']['st_trans_name'] : '';

            $data['org_trasport']['dateselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_target']));

            $data['org_trasport']['drop_zip'] = $data['org_trasport']['drop_zipcode'] . ', ';

            if ($data['org_trasport']['drop_city'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_city'] . ', ';
            }
            if ($data['org_trasport']['drop_state'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_state'] . ', ';
            }
            if ($data['org_trasport']['drop_country'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_country'];
            }
			
			$data['org_trasport']['stRecOrgNm'] = isset($transport_details['0']['stRecOrgNm']) ? $transport_details['0']['stRecOrgNm'] : '';
			$data['org_trasport']['stRecNm'] = isset($transport_details['0']['stRecNm']) ? $transport_details['0']['stRecNm'] : '';
			$data['org_trasport']['stRecEmail'] = isset($transport_details['0']['stRecEmail']) ? $transport_details['0']['stRecEmail'] : '';
			$data['org_trasport']['stR501c3'] = isset($transport_details['0']['stR501c3']) ? $transport_details['0']['stR501c3'] : '';
            //$data['org_trasport']['stRphone'] = isset($transport_details['0']['stRphone']) ? $transport_details['0']['stRphone'] : '';
			$data['org_trasport']['stRphone'] = isset($transport_details['0']['stRphone']) ?  preg_replace('/\D/', '',$transport_details['0']['stRphone']): '';
			
			$data['org_trasport']['stSendOrgNm'] = isset($transport_details['0']['stSendOrgNm']) ? $transport_details['0']['stSendOrgNm'] : '';
			$data['org_trasport']['stSendNm'] = isset($transport_details['0']['stSendNm']) ? $transport_details['0']['stSendNm'] : '';
			$data['org_trasport']['stSendEmail'] = isset($transport_details['0']['stSendEmail']) ? $transport_details['0']['stSendEmail'] : '';
			$data['org_trasport']['stS501c3'] = isset($transport_details['0']['stS501c3']) ? $transport_details['0']['stS501c3'] : '';
            //$data['org_trasport']['stSphone'] = isset($transport_details['0']['stSphone']) ? $transport_details['0']['stSphone'] : '';
			$data['org_trasport']['stSphone'] = isset($transport_details['0']['stSphone']) ? preg_replace('/\D/', '',$transport_details['0']['stSphone']) : '';
			$data['org_trasport']['st_trans_type'] = isset($transport_details['0']['st_trans_type']) ? $transport_details['0']['st_trans_type'] : '';
			$data['org_trasport']['inSendOrgRunsheet'] = isset($transport_details['0']['inSendOrgRunsheet']) ? $transport_details['0']['inSendOrgRunsheet'] : '1';
            $data['org_trasport']['inRecOrgRunsheet'] = isset($transport_details['0']['inRecOrgRunsheet']) ? $transport_details['0']['inRecOrgRunsheet'] : '1';
			$data['org_trasport']['enable_routing_status'] = isset($transport_details['0']['enable_routing_status']) ? $transport_details['0']['enable_routing_status'] : '';
			$data['org_trasport']['owner_routing_status'] = (isset($transport_details['0']['accTcid']) && !empty($transport_details['0']['accTcid']) && $transport_details['0']['accTcid']==$this->session->userdata('userid') && $transport_details['0']['accTcid']!=0) ? 1 : 0;

			if($data['org_trasport']['stSendOrgNm'] == '')
			{
				$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id')); 
				$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
				if(isset($org_details['st_org_name']) && !empty($org_details['st_org_name'])) {
					$data['org_trasport']['stSendOrgNm'] = $org_details['st_org_name'];
				} else {
					$data['org_trasport']['stSendOrgNm'] = '';
				}
				
				 if(isset($user_details[0]['st_display_name']) && !empty($user_details[0]['st_display_name'])) {
					$data['org_trasport']['stSendNm'] = $user_details[0]['st_display_name']." ".$user_details[0]['st_last_name'];
				} else {
					$data['org_trasport']['stSendNm'] = '';
				}
				
				if(isset($user_details[0]['st_email']) && !empty($user_details[0]['st_email'])) {
					$data['org_trasport']['stSendEmail'] = $user_details[0]['st_email'];
				} else {
					$data['org_trasport']['stSendEmail'] = '';
				}
				
				
				if(isset($user_details[0]['st_primary_phone']) && !empty($user_details[0]['st_primary_phone'])) {
					$data['org_trasport']['stSphone'] = $user_details[0]['st_primary_phone'];
					$data['org_trasport']['stSphone'] = preg_replace('/\D/', '',$user_details[0]['st_primary_phone']);
				} else {
					$data['org_trasport']['stSphone'] = '';
				}
				
				if(isset($org_details['st_has_501c3']) && !empty($org_details['st_has_501c3'])) {
					$data['org_trasport']['stS501c3'] = $org_details['st_has_501c3'];
				} else {
					$data['org_trasport']['stS501c3'] = '';
				}
			}
			
			//echo "<pre>";print_r($data['org_trasport']);die;
            //$this->load->view('organization-rescue',$data);	
            $this->load->view('transportation/edit-org-trans-details', $data);
        }
    }
	
	public function old_edit_transport()
	{		
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		if (isset($_GET['id'])) {
            $this->session->set_userdata('transport_id', $_GET['id']);
        }
		
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		
		if (isset($transport_data[0]['st_trans_type']) && $transport_data[0]['st_trans_type'] == 'D' && 
			$transport_data[0]['accTcid'] == $this->session->userdata('userid') ){
				$this->session->set_userdata('org_id',$transport_data[0]['in_organization_id']);
		}
		
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		#================Check User permission start===============#
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		if($owner_id!=$this->session->userdata('userid'))
		{
			$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
			if(!empty($user_permission)) {
				$make_array_user = unserialize($user_permission);
			}
			if($owner_id != $this->session->userdata('userid')) {
				if(isset($make_array_user['transport']) && in_array('transport_cr',$make_array_user['transport']) == true) {
					$check_per_flag = '1';
				}else if($transport_data[0]['accTcid'] == $this->session->userdata('userid')) {
					$check_per_flag = '1';
				  }  else {
					$check_per_flag = '0';
					$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
					redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
				}
			}
		}
		#================Check User permission end================#
		$data = array();
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$data['owner_id'] 		= $owner_id;
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		$c_state_list 			= $this->common_function->canadian_state_list;
		$data['c_state_list'] 	= $c_state_list;
		
		$data['all_state']     = array_merge($data['state_list'],$data['c_state_list']);
		
		$data['country_list'] 	= $this->common_function->doobertcountry;
		
		$form_field	=	array('pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pick_state'		=> "",
							  'pick_zip'		=> "",
							  'pick_info' 		=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_zip"		=> "",
							  "drop_info"		=> "",
  							  "pickupselect"	=> "",
							  "dateselect"		=> "",
							  "action"			=> "",
							  "image_file"		=> "",
							  "need_trans_mon"	=> "",
							  "trans_unique_name" => "",
							  "allow_pics"=>"",
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}					
		if($this->input->post('action'))
		{	
			foreach ($form_field as $key => $value)
			{	
				$data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			//echo "<pre>";print_r($data['org_trasport']);
			$pickup_zipcode_data = explode(',',$data['org_trasport']['pick_zip']);
			//print_r($pickup_zipcode_data);
			$data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
			$data['org_trasport']['pick_city'] = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
			$data['org_trasport']['pick_state'] = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
			$data['org_trasport']['pick_country'] = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
			$dropoff_zipcode_data = explode(',',$data['org_trasport']['drop_zip']);
			//print_r($dropoff_zipcode_data);
			$data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
			$data['org_trasport']['drop_city'] = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
			$data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
			$data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
			
			//echo "<pre>";print_r($data['org_trasport']); die;
			$error_message = '';
			$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
			$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
			$this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
			$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');
			
			$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
			$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
			$this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
			$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";
					$this->load->view('transportation/edit-org-trans-details',$data);	
			}
			else
			{
				$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].",":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].",":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?",".$data['org_trasport']['pick_zip']:"");	
				$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].",":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].",":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?",".$data['org_trasport']['drop_zip']:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				//echo "<pre>";print_r($routes_miles);die; 
				$transport_details = array(	//"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											//"in_organization_id"=> $this->session->userdata('org_id'),
											"st_from_city"		=> trim($data['org_trasport']['pick_city']),
											"st_from_state"		=> trim($data['org_trasport']['pick_state']),
											"st_from_zip"		=> trim($data['org_trasport']['pick_zip']),
											"st_from_country"	=> trim($data['org_trasport']['pick_country']),
											"st_to_city"		=> trim($data['org_trasport']['drop_city']),  
											"st_to_state"		=> trim($data['org_trasport']['drop_state']), 
											"st_to_zip"			=> trim($data['org_trasport']['drop_zip']),  
											"st_to_country"		=> trim($data['org_trasport']['drop_country']),
											"dt_pickup_date"	=> date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
											"dt_target"			=> date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_modified_by"	=> $this->session->userdata('userid'),
											"dt_modified"		=> date("Y-m-d H:i:s"),
											"in_need_trans_monitor"		=> isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] != '' ? 1 : 0,
											"st_trans_name" 	=> trim($data['org_trasport']['trans_unique_name']),
											"in_allow_pics" => isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
											);
				
				//code to add log for transport datechange start
				$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
				if($transport_data[0]['dt_pickup_date'] != date('Y-m-d',strtotime($data['org_trasport']['pickupselect'])) || $transport_data[0]['dt_target'] != date('Y-m-d',strtotime($data['org_trasport']['dateselect'])))
				{
					$array	=	array('in_transport_id'=> $this->session->userdata('transport_id'),
									   'prev_from_date'=> $transport_data[0]['dt_pickup_date'],
									   'prev_to_date'  => $transport_data[0]['dt_target'],
									   'new_from_date' => date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
									   'new_to_date'   => date('Y-m-d',strtotime($data['org_trasport']['dateselect'])),
									   'in_modified_by' => $this->session->userdata('userid'),
									   'dt_created'	   => date('Y-m-d H:i:s')
					);					
				 $this->orgtrasnportation_model->insert_transport_date_log($array);
				}
				//code to add log for transport datechange end
																
				$this->orgtrasnportation_model->update_transport_details($transport_details);
				
				if(isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] == '')
				{
					
					$transport_monitors 	= $this->orgtrasnportation_model->get_all_transport_monitors();
					if(isset($transport_monitors) && !empty($transport_monitors))
					{
						foreach($transport_monitors as $mon_key=>$mon_value)
						{
							$this->orgtrasnportation_model->update_transport_monitor_status(array("in_deleted"=>1),$mon_value['in_tr_pr_id']);
						}
					}
				}
				
				$this->session->set_userdata('transport_edit','1');
				
				//echo 'transport_id'.$this->session->userdata('transport_id');exit;
				
				redirect(base_url().'add-animal-transport/'.$this->session->userdata('transport_id'));
					
			}
		}
		else
		{
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			if(empty($transport_details))
			{
				redirect($this->config->item('base_url'));
			}
			//echo "<pre>";print_r($transport_details);die;
			if($transport_details['0']['in_status']=='3' || $transport_details['0']['in_status']=='2')
			{
				$this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			
			$data['org_trasport'] = array();
			
			$data['org_trasport']['in_need_trans_monitor'] = $transport_details['0']['in_need_trans_monitor'];
			$data['org_trasport']['in_allow_pics'] = $transport_details['0']['in_allow_pics'];
			
			$data['org_trasport']['pick_zipcode'] = isset($transport_details['0']['st_from_zip']) ? $transport_details['0']['st_from_zip'] : ''; 
			$data['org_trasport']['pick_city'] = isset($transport_details['0']['st_from_city']) ? $transport_details['0']['st_from_city'] : ''; 
			$data['org_trasport']['pick_state'] = isset($transport_details['0']['st_from_state']) ? $transport_details['0']['st_from_state'] : ''; 
			$data['org_trasport']['pick_country'] = isset($transport_details['0']['st_from_country']) ? $transport_details['0']['st_from_country'] : '';
			
			$data['org_trasport']['pickupselect'] =  date("m/d/Y", strtotime($transport_details['0']['dt_pickup_date']));
			
			$data['org_trasport']['pick_zip'] = $data['org_trasport']['pick_zipcode'].', ';
			
			if($data['org_trasport']['pick_city'] != '')
			{
				$data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_city'].', ';
			}
			if($data['org_trasport']['pick_state'] != '')
			{
				$data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_state'].', ';
			}
			if($data['org_trasport']['pick_country'] != '')
			{
				$data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_country'];
			}
			

			$data['org_trasport']['drop_zipcode'] = isset($transport_details['0']['st_to_zip']) ? $transport_details['0']['st_to_zip'] : ''; 
			$data['org_trasport']['drop_city'] = isset($transport_details['0']['st_to_city']) ? $transport_details['0']['st_to_city'] : ''; 
			$data['org_trasport']['drop_state'] = isset($transport_details['0']['st_to_state']) ? $transport_details['0']['st_to_state'] : ''; 
			$data['org_trasport']['drop_country'] = isset($transport_details['0']['st_to_country']) ? $transport_details['0']['st_to_country'] : '';
			
			$data['org_trasport']['trans_unique_name'] = isset($transport_details['0']['st_trans_name']) ? $transport_details['0']['st_trans_name'] : '';
			
			$data['org_trasport']['dateselect'] =  date("m/d/Y", strtotime($transport_details['0']['dt_target']));
			
			$data['org_trasport']['drop_zip'] = $data['org_trasport']['drop_zipcode'].', ';
			
			if($data['org_trasport']['drop_city'] != '')
			{
				$data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_city'].', ';
			}
			if($data['org_trasport']['drop_state'] != '')
			{
				$data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_state'].', ';
			}
			if($data['org_trasport']['drop_country'] != '')
			{
				$data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_country'];
			}
			
			//echo "<pre>";print_r($data['org_trasport']);die;
			//$this->load->view('organization-rescue',$data);	
			$this->load->view('transportation/edit-org-trans-details',$data);		
		}
	}
	
	function update_transport_status()
	{	
		$cron_email_array = array("cron_url"=> base_url().'org_transportation/update_transport_status',
							"cron_step"=>'1',
							"cron_step_detail"=>'step1',
							"cron_created_date"=>date("Y-m-d H:i:s")
							);
		$this->common_model->add_cron_email_status($cron_email_array);
		
		$last_cron_inserted_id = $this->db->insert_id();
		
		$transport_data = $this->orgtrasnportation_model->get_transportations();
		//echo '<pre/>';print_r($transport_data);exit;
		if(isset($transport_data) && count($transport_data) > 0)
		{	
			$status = '';
			$cron_email_array = array("cron_step"=>'2',
								"cron_step_detail"=>'step2',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
			
			foreach($transport_data as $trans_value)
			{
				if($trans_value['st_trans_type'] == 'D')
				{
					/*
					if($trans_value['leg_in_transport'] == '0')
					{
						//echo 'update transport status to cancel';
						$status = '3';						
					}*/
					if($trans_value['leg_in_transport'] >= '1')
					{
						//echo 'update transport status to complete';
						/*if($trans_value['animal_in_transport'] == '0')
						{
							//echo 'update transport status to cancel';
							$status = '3';
						}*/
						if($trans_value['animal_in_transport'] >= '1')
						{
							//echo 'update transport status to complete';
							$status = '2';
						}						
					}
				}
				
				if($trans_value['st_trans_type'] == 'P')
				{
					/*
					if($trans_value['leg_in_transport'] == '0')
					{
						//echo 'update transport status to cancel';
						$status = '3';						
					}*/
					if($trans_value['leg_in_transport'] >= '1')
					{	
						/*
						if($trans_value['participants_cnt'] == '0')
						{
							//echo 'update transport status to cancel';
							$status = '3';
						}*/
						if($trans_value['participants_cnt'] >= '1')
						{
							//echo 'update transport status to complete';
							/*if($trans_value['animal_in_transport'] == '0')
							{
								//echo 'update transport status to cancel';
								$status = '3';
							}*/
							if($trans_value['participants_cnt'] >= '1')
							{
								//echo 'update transport status to complete';
								$status = '2';
							}
						}						
					}					
				}	
				
				if(isset($status) && $status == '2')
				{			
					$this->orgtrasnportation_model->update_transport_status(array("in_status"=>$status),$trans_value['in_transportation_id'],$trans_value['in_organization_id']);				
				}
			}
			$cron_email_array = array("cron_step"=>'3',
								"cron_step_detail"=>'step3',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
			
			echo 'transportation records updated successfully';
		}else{
			
			$cron_email_array = array("cron_step"=>'3',
								"cron_step_detail"=>'step3',
								"cron_updated_date"=>date("Y-m-d H:i:s")
								);
		
			$this->common_model->update_cron_status_email_sent($last_cron_inserted_id,$cron_email_array);
			
			echo 'No records found';
		}	
	}
	
	public function tell_a_friend() 
	{	
		
		$this->load->library('email');
		
		if($this->input->post('frm_action')=='submit') {
			//Getting email body
			$email_body = $this->common_model->get_email_containt('36');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			
			$this->email->subject($email_body[0]['st_email_subject']);
			//echo $this->input->post('txtemail');exit;
			$patterns = array('%##url##%','%##user_name##%','%##user_msg##%','%##sender_name##%','%##transport_id##%','%##mailto_text##%');
			$replacements = array(base_url(),$this->input->post('txttoname'),nl2br($this->input->post('txtMessage')),$this->input->post('txtfrom'),base_url()."org-transportation-scheduled/".$this->input->post('share_transport_id'),"info@doobert.com");
			
			$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
			$content = str_replace("##DONATION##",$donation,$content);
			
			$category  =    $email_details[0]['st_category'];	
			$this->common_function->send_mail($this->email, $this->input->post('txtemail'), $this->input->post('txtsubject'), $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				
			$this->session->set_flashdata('success_mail','Mail Sent Successfully.');
			redirect($_SERVER['HTTP_REFERER']);
			
		}
	}	
	
	public function republish_transport_emails_stop()
	{
		$this->orgtrasnportation_model->republish_transport_details();
	}
	
	public function haversineGreatCircleDistance($latitudeFrom, $longitudeFrom, $latitudeTo, $longitudeTo, $earthRadius = 3959)
	{
		  // convert from degrees to radians
		  $latFrom = deg2rad($latitudeFrom);
		  $lonFrom = deg2rad($longitudeFrom);
		  $latTo = deg2rad($latitudeTo);
		  $lonTo = deg2rad($longitudeTo);
		
		  $latDelta = $latTo - $latFrom;
		  $lonDelta = $lonTo - $lonFrom;
		
		  $angle = 2 * asin(sqrt(pow(sin($latDelta / 2), 2) +
			cos($latFrom) * cos($latTo) * pow(sin($lonDelta / 2), 2)));
		  return $angle * $earthRadius;
	}
	
	public function non_doobert_transport_user()
	{
		//echo 'non_doobert_transport_user called';
		//echo '<pre/>';print_r($_POST);exit;
		
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		$user_email = $_POST['non_doobert_user_email'];
        $user_name = $_POST['non_doobert_user_name'];
        $transport_id = $_POST['non_doobert_user_transport_id'];
        $legs_ids = $_POST['non_doobert_user_transport_leg_id'];
		
		//$legs_ids = $this->input->post('non_doobert_user_transport_leg_id');
		
		$total_participants = 0;
		$leg_required_user_cnt = $this->orgtrasnportation_model->get_leg_required_user_count_by_id($legs_ids);				
		
		$leg_current_participant_cnt = $this->orgtrasnportation_model->get_legs_participants_by_user_id($legs_ids,'');
		
		if(isset($leg_current_participant_cnt) && $leg_current_participant_cnt > 0)
		{
			$total_participants = $total_participants + $leg_current_participant_cnt;
		}
		
		$leg_non_doobert_participant_cnt = $this->orgtrasnportation_model->get_non_doobert_legs_participants_details_by_leg_id($legs_ids);
		
		if(isset($leg_non_doobert_participant_cnt) && !empty($leg_non_doobert_participant_cnt))
		{
			$total_participants = $total_participants + count($leg_non_doobert_participant_cnt);
		}
		
		if(isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] == 0 && $total_participants == 1)
		{
			 $this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
			 redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
		
		if(isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] > 1)
		{
			if($total_participants == $leg_required_user_cnt['in_user_num'])
			{
			 $this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
			 redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
			}
		}
		
		
		$tra_id						= $this->session->userdata('transport_id');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		
		$user_driver_email = array();
		$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
									 "user_email"	=> $transport_details['0']['st_email'],
									 "display_name" => $transport_details['0']['st_display_name']
									);	
				
		/*$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
		if(!empty($user_legs))
		{
				$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;

				$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
				if(count($route_details)<=0)
				{
					if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
					{
						$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
					}
					else
					{
						$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
					}
					if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
					{
						$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
					}
					else
					{
						$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
					}
				$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				$total_miles  	= $total_miles['distance'];	
				}
				else
				{
					$total_miles	= $route_details['fl_distance'];
				}
				$this->orgtrasnportation_model->add_distance($total_miles);
				$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
				$percent = ($percent>=100)?100:$percent;
				$target_date = @date("l, M d",strtotime(@$user_legs['pick_start_time']));	
				$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
				$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
				$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
				$cover_leg = 0;
				$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
				
				$name_arr = array("target_date"		=> $target_date,
								  "name"			=> $this->input->post('non_doobert_user_name'),	
								  "transport_id" 	=> $this->session->userdata('transport_id'),
								  "percent" 		=> $percent,
								  "leg_origin" =>$origin1,
								  "leg_destination" =>$destinations1,
								  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
								  "cover_leg" => $cover_leg

						 );			 					
				$this->join_transport_email($user_driver_email,"16",$name_arr);
		}*/
		
		$zipcode = $this->input->post('non_doobert_user_vehicle_zipcode');
		
		$user_state_city = $this->orgtrasnportation_model->get_state_city_by_zipcode($zipcode);
		
		$arr_data = array('st_name'=>$this->input->post('non_doobert_user_name'),
						  'st_phone'=>$this->input->post('non_doobert_user_phone'),
						  'st_email'=>$this->input->post('non_doobert_user_email'),
						  'st_vehicle_type'=>$this->input->post('non_doobert_user_vehicle_type'),
						  'st_vehicle_color'=>$this->input->post('non_doobert_user_vehicle_color'),
						  'st_license_plate'=>$this->input->post('non_doobert_user_vehicle_license_plate'),
						  'st_license_state'=>$this->input->post('non_doobert_user_vehicle_license_state'),
						  'st_zipcode'=>$zipcode,
						  'st_state_prefix'=>isset($user_state_city['state_prefix']) ? $user_state_city['state_prefix'] : '',
						  'st_city'=>isset($user_state_city['city']) ? $user_state_city['city'] : '',
						  'in_transportation_id'=>$this->input->post('non_doobert_user_transport_id'),
						  'in_leg_id'=>$this->input->post('non_doobert_user_transport_leg_id'),
						  'dt_created'=>date("Y-m-d H:i:s"),
						  'in_deleted'=>0,
						  'in_joining_transport_mail' => $this->input->post('joining_transport_mail')?1:0,
						  	);
		
		$insert_id 		= $this->orgtrasnportation_model->insert_non_doobert_user($arr_data);
		
		$invite_user =  $this->input->post('non_doobert_user_assign_and_invite');
		if($invite_user == '1')
		{
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("27");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
		$reply_to = $this->session->userdata('email');
		
		$patterns = array('%##url##%','%##sender_name##%','%##user_name##%','%##msg##%');
		$replacements = array(base_url(),$this->session->userdata('user_name').' '.$this->session->userdata('last_name'),$this->input->post('non_doobert_user_name'),'');
		$content = preg_replace($patterns,$replacements,$email_details[0]['st_email_body']);
		$content = str_replace("##DONATION##",$donation,$content);
		
		
		$category  =    "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
		$success_value =  $this->common_function->send_mail($this->email, $this->input->post('non_doobert_user_email'), $email_details[0]['st_email_subject'], $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
		}
		
		$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
		if(!empty($user_legs))
		{
				$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;

				$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
				if(count($route_details)<=0)
				{
					if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
					{
						$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
					}
					else
					{
						$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
					}
					if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
					{
						$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
					}
					else
					{
						$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
					}
				$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				$total_miles  	= $total_miles['distance'];	
				}
				else
				{
					$total_miles	= $route_details['fl_distance'];
				}
				$this->orgtrasnportation_model->add_distance($total_miles);
				if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0)
				{
					$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
					$percent = ($percent>=100)?100:$percent;
				}
				else
				{
					$percent = 0;
				}
				
				if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
				{
						$target_date = @date("l, M d",strtotime(@$user_legs['pick_start_time']));
				} else {
					$target_date = '';
				}		
				$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
				$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
				$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
				$cover_leg = 0;
				$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
				
				$name_arr = array("target_date"		=> $target_date,
								  "name"			=> $this->input->post('non_doobert_user_name'),	
								  "transport_id" 	=> $this->session->userdata('transport_id'),
								  "percent" 		=> $percent,
								  "leg_origin" =>$origin1,
								  "leg_destination" =>$destinations1,
								  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
								  "cover_leg" => $cover_leg,
								  "st_org_name" => $transport_details['0']['st_org_name'],
								  "st_org_code" => $transport_details['0']['st_org_code'],
								  "st_display_name" => $transport_details['0']['st_display_name'],
								  "st_email" => $transport_details['0']['st_email'],
								  "st_add_comments" => $transport_details['0']['st_add_comments'],
								  "co_user_id" => $transport_details['0']['in_user_id'],

						 );		
				$send_mail = $this->input->post('joining_transport_mail')?1:0;
				if($send_mail ==0)
				{
					$this->join_transport_email($user_driver_email,"16",$name_arr);
				}
		}
		
		
		$notification_message = '<div class="timeline-body border">
						<h2 class="last">'.$this->input->post('non_doobert_user_name').' joined the leg of transportation.</h2>
						<div class="timeline-content">
							<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
							<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
							<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
							<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
							<div class="clearfix"></div>
					  </div></div>';
		$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
									"in_transportation_id"	=> $this->session->userdata('transport_id'),
									"in_transport_leg_id" =>$arr_data['in_leg_id'],
									"in_non_doobert_user_id"=> $insert_id,									
									"in_type"				=> 25,
									"dt_created"			=> date("Y-m-d H:i:s"),
									"in_deleted"			=> "0"
								  );	
								
		$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
		
		$data['get_emails'] = $this->common_model->get_org_users_email($this->session->userdata('org_id'));
		
		//Getting email body
		$this->load->library('email');
		$email_body = $this->common_model->get_email_containt('39');
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		$send_mail = $this->input->post('joining_transport_mail')?1:0;
		if($send_mail ==0)
		{
		if(isset($email_body) && !empty($email_body))
		{
			$co_ordinator_name = '';
			$co_ordinator_email = '';
			if($transport_details['0']['st_trans_type']=='D')
			{
				$rou_tc_user 		= $this->common_model->get_user_profile($transport_details[0]['accTcid']);
				$co_ordinator_name	= $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'];
				$co_ordinator_email = $rou_tc_user[0]['st_email']; 

			} else 
			{	
				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($transport_id);
				$co_ordinator_name 	  = $transport_co_details['coordinatorname'];
			}
			$org_name = $transport_details['st_org_name'];
			$orgcode  =	($transport_details[0]['st_org_code'])? '#'.$transport_details[0]['st_org_code'] : '#DBT';
			$html_string = '';
			if(!empty($user_legs))
			{	
				if($transport_details['0']['st_trans_type']=='D' && $transport_details['0']['in_airline_transport']=='1' )
				{
					$origin1 		= ($user_legs['pick_city'] ? $user_legs['pick_city'] . " (" : "").($user_legs['pick_street'] ? $user_legs['pick_street'] . ")" : "");
					$destinations1 	= ($user_legs['drop_city'] ? $user_legs['drop_city'] . " (" : "").($user_legs['drop_street'] ? $user_legs['drop_street'] . ")" : "");
				} else 
				{		
					$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
					$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
				}
				$leg_start_date = '';
				$leg_end_date   = '';
				if(isset($user_legs['pick_start_time']) && !empty($user_legs['pick_start_time']))
				{	
					
					$leg_start_date	.= date("l F d,Y h:i A", strtotime($user_legs['pick_start_time'])).' ';
					$leg_start_date	.= $user_legs['pick_timezone'];
				}
				
				if(isset($user_legs['drop_start_time']) && !empty($user_legs['drop_start_time']))
				{	
					$leg_end_date	.= date("l F d,Y h:i A", strtotime($user_legs['drop_start_time'])).' ';
					$leg_end_date	.= $user_legs['drop_timezone'];
				}	
				if(isset($origin1) && $origin1!='' && isset($destinations1) && $destinations1!='')
				{	
					$html_string .= '<b>From </b>'.$origin1.',<b>To</b> '.$destinations1.'<br>';
				}
				
				if(isset($origin1) && $origin1!='' && isset($user_legs['route_type']) && $user_legs['route_type'] ==2)
				{	
					$html_string .= '<b>Overnight location </b> '.$origin1.'<br>';
				}
				
				if(isset($leg_end_date) && $leg_end_date!='' && isset($leg_start_date) && $leg_start_date!='')
				{	
					$html_string .= '<b>Date </b>'.$leg_start_date.',<b>To</b> '.$leg_end_date.'<br>';
				}
				if(isset($user_legs['route_type']) && $user_legs['route_type']!='')
				{	
					if($user_legs['route_type'] == 0)
					{
						$route_type = 'Road';
					}
					if($user_legs['route_type'] == 2)
					{
						$route_type = 'Overnight';
					}
					if($user_legs['route_type'] == 1)
					{
						$route_type = 'Aviation';
					}
					if($user_legs['route_type'] == 3)
					{
						$route_type = 'Airline';
					}	
					$html_string .= '<b>Type of Transportation </b>'.$route_type;
				}
				if(isset($user_legs['leg_instruction']) && !empty($user_legs['leg_instruction']))
				{
					$html_string .= '<br><b>Leg Instruction </b>'.$user_legs['leg_instruction'];
				}	
			}	
				

		
			$to = $user_email;
			$subject = $email_body[0]['st_email_subject'];
			$templete	= 	$email_body[0]['st_email_body'];
			// added by sadique
			$org_details 	= $this->common_model->get_single_org_details($transport_details[0]['in_organization_id']);	
					$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
					if($share_template == 1)
					{
						$main_image = $this->generate_fb_image_option1();
					} 
					
					else if($share_template == 5){						
						$main_image = $this->generate_fb_image_option5();						
					}
					else if($share_template == 6){						
						$main_image = $this->generate_fb_image_option6();						
					}
					else if($share_template == 7){						
						$main_image = $this->generate_fb_image_option7();						
					}
					else if($share_template == 8){						
						$main_image = $this->generate_fb_image_option8();						
					}				
					
					else {
						$main_image = $this->generate_fb_image($share_template);
					}	
				
				 $fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
				if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
				
				
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
		
			//$templete 	=   str_replace("##coordinator_email##",$transport_details[0]['st_email'],$templete);
		
			$templete  	= 	str_replace("##user_name##",$user_name,$templete);
			$templete  	= 	str_replace("##transport_id##",$orgcode.$transport_id,$templete);
			$templete  	= 	str_replace("##transport_coordinator##",$co_ordinator_name,$templete);
			$templete  	= 	str_replace("##organization_name##",$org_name,$templete);
			$templete  	= 	str_replace("##transport_day_date##",date("l, M d",strtotime($transport_details[0]['dt_target'])),$templete);
			
			if($transport_details['0']['st_trans_type']=='D' && $transport_details['0']['in_airline_transport']=='1' )
			{	
				$templete  	= 	str_replace("##transport_start_city_state##",$transport_details[0]['st_from_city']." (".$transport_details[0]['st_from_street'].")",$templete);
				$templete  	= 	str_replace("##transport_end_city_state##",$transport_details[0]['st_to_city']." (".$transport_details[0]['st_to_street'].")",$templete);	
			} else {
				$templete  	= 	str_replace("##transport_start_city_state##",$transport_details[0]['st_from_city'].", ".$transport_details[0]['st_from_state'].", ".$transport_details[0]['st_from_zip'],$templete);
				$templete  	= 	str_replace("##transport_end_city_state##",$transport_details[0]['st_to_city'].", ".$transport_details[0]['st_to_state'].", ".$transport_details[0]['st_to_zip'],$templete);	
			}
			$templete 	= 	str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
			if($transport_details['0']['st_trans_type']=='D')
			{
				//$templete 	=   str_replace("##coordinator_details##",$co_ordinator_name.' ('.$co_ordinator_email.')',$templete);
				$templete 	=   str_replace("##coordinator_details##",$co_ordinator_name,$templete);
				$templete 	=   str_replace("##coordinator_email##",$co_ordinator_email,$templete);
			} else {	
				//$templete 	=   str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);
				$templete 	=   str_replace("##coordinator_details##",$transport_details[0]['st_display_name'],$templete);
				$templete 	=   str_replace("##coordinator_email##",$transport_details[0]['st_email'],$templete);
			}
			$templete   =   str_replace("##leg_info_details##",$html_string,$templete);
			$transport_link = base_url()."org-transportation-scheduled/".$transport_id;
			$templete   =   str_replace("##transport_url##",$transport_link,$templete);
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($transport_id);
		
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
				$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
		
				$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
		
				if(isset($transport_files) && !empty($transport_files))
				{
					$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
					foreach($transport_files as $key=>$value)
					{
						$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
					}
					$additional_info_str .='</ul>';
				}
			}
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
			
			$category  =    "DBT".$transport_id." - ".$email_details[0]['st_category'];		
			$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
		}
		}
		if(strpos($_SERVER['HTTP_REFERER'], 'user-submission') !== false)
		{
			$this->session->set_flashdata('google_leg','Leg assigned to a non doobert user successfully.');
			redirect($this->config->item('base_url')."user-submission/".$this->session->userdata('transport_id')."/");
		}  else if(strpos($_SERVER['HTTP_REFERER'], 'transport-create-legs') !== false){
			$this->session->set_userdata('transport_steps',3);
			redirect($this->config->item('base_url')."transport-create-legs");
		} else {	
			$this->session->set_flashdata('success_non_doobert','Leg assigned to a non doobert user successfully.');
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
		//$this->session->set_flashdata('success_non_doobert','Leg assigned to a non doobert user successfully.');
		//redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
	}
	
	
	public function non_doobert_match_user()
	{
		//echo 'non_doobert_transport_user called';
		//echo '<pre/>';print_r($_POST);exit;
		
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		$user_id = $_POST['matched_doobert_user_id'];
		$user_email = $_POST['matched_doobert_user_email'];
		$user_name = $_POST['matched_doobert_user_name'];
		$transport_id = $_POST['matched_doobert_transport_id'];
		$legs_ids = $_POST['matched_doobert_leg_id'];
		$telephone_number = $_POST['matched_phone_number'];
		$zip_code = $_POST['matched_doobert_user_zip'];
		
		$total_participants = 0;
		$leg_required_user_cnt = $this->orgtrasnportation_model->get_leg_required_user_count_by_id($legs_ids);

		$leg_current_participant_cnt = $this->orgtrasnportation_model->get_legs_participants_by_user_id($legs_ids, '');

		if (isset($leg_current_participant_cnt) && $leg_current_participant_cnt > 0) {
			$total_participants = $total_participants + $leg_current_participant_cnt;
		}

		$leg_non_doobert_participant_cnt = $this->orgtrasnportation_model->get_non_doobert_legs_participants_details_by_leg_id($legs_ids);

		if (isset($leg_non_doobert_participant_cnt) && !empty($leg_non_doobert_participant_cnt)) {
			$total_participants = $total_participants + count($leg_non_doobert_participant_cnt);
		}

		if (isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] == 0 && $total_participants == 1) {
			$this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
			redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
		}

		if (isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] > 1) {
			if ($total_participants == $leg_required_user_cnt['in_user_num']) {
				$this->session->set_flashdata('leg_join_error', 'This leg is already joined by another user.');
				redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
			}
		}
				
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($transport_id);
		
		$user_driver_email = array();
		$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
									 "user_email"	=> $transport_details['0']['st_email'],
									 "display_name" => $transport_details['0']['st_display_name']
									);	
		
		$transport_details  = $transport_details[0];
		
		$user_details = $this->common_model->get_user_profile($user_id);
		$profile_info = $user_details[0];
		if(isset($profile_info) && $profile_info['st_primary_phone']=='')
		{
			$this->load->model('user_model');
				if($this->input->post('matched_phone_number') && $this->input->post('matched_phone_number')!='')
				{
					  $update_info = array('st_primary_phone'=>$this->input->post('matched_phone_number'));
					  $data['user_profile'] = $this->user_model->update_user_info($update_info, $user_id, 'tbl_user_profile');
					  $profile_info['st_primary_phone'] = $update_info['st_primary_phone'];
				}
		}
		
		
		if(isset($profile_info) && $profile_info['st_zip']=='')
		{
			$this->load->model('user_model');
				if($this->input->post('matched_doobert_user_zip') && $this->input->post('matched_doobert_user_zip')!='')
				{
					$address_details	=	$this->common_model->getaddress($this->input->post('matched_doobert_user_zip'));
					
					$update_info = array('st_zip'		=> $this->input->post('matched_doobert_user_zip'),
										 "st_city" 		=> isset($address_details['city']) ? $address_details['city'] : '',
										 "st_state" 	=> isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',	
										 "st_country" 	=> isset($address_details['st_country']) ? $address_details['st_country'] : '',
										 "st_time_zone" => isset($address_details['st_time_zone']) ? $address_details['st_time_zone'] : '',
										);
					$data['user_profile'] = $this->user_model->update_user_info($update_info, $user_id, 'tbl_user_profile');
					$profile_info['st_zip'] = $update_info['st_zip'];
					$profile_info['st_city'] = $update_info['st_city'];
					$profile_info['st_state'] = $update_info['st_state'];
					$profile_info['st_country'] = $update_info['st_country'];
					$profile_info['st_time_zone'] = $update_info['st_time_zone'];
						
				}
		}	
									
		$parrt_cep = $this->orgtrasnportation_model->get_legs_participants_by_user_id($legs_ids,$user_id); 
		if($parrt_cep<=0)
		{	
			$join_data = array("in_transportation_id"		=> $transport_id,
							   "in_user_id"					=> $user_id,
							   "in_transportation_leg_id"	=> $legs_ids,
							   "in_created_by"				=> $this->session->userdata('userid'),
							   "dt_created"					=> date("Y-m-d H:i:s"),
							   "in_deleted"					=> 0,
							   "in_joining_transport_mail"  => $this->input->post('matched_joining_transport_mail')?1:0,
							);
			$this->orgtrasnportation_model->join_legs($join_data);	
			
			
			$this->load->model('user_model');
			$data['arrVehicle']		= $this->user_model->get_vehicle_detail($user_id); 
			
			$leg_type =  $this->orgtrasnportation_model->get_leg_type_by_id($legs_ids);
			
			$vehicle_id = '';
		
			if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0)
			{	
				$data['arrVehicle']		= $this->user_model->get_vehicle_detail($user_id);
				if(!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id']))
				{
					$vehicle_id	= $data['arrVehicle'][0]['in_vehicle_id'];
				} else 
				{
					$lat = 0;
					$lon = 0;
					$zip = 0;
					$get_lat_long = $this->common_model->get_lattitude_longitude($profile_info['st_zip']);
					if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) 
					{
						$lat = $get_lat_long['lat'];
						$lon = $get_lat_long['lon'];
					}
					
					$zip_code = $this->session->userdata('zip');
					$available_days = array("0" => "Sun", "1" => "Mon", "2" => "Tue", "3" => "Wed", "4" => "Thu", "5" => "Fri", "6" => "Sat");
					$arrVehicle = array('in_user_id' => $user_id,
										'st_driver_availability' => serialize($available_days),
										'st_zip_vehicle' => $profile_info['st_zip'],
										'in_distance_to_drive' => 100,
										'dt_created' => date('Y-m-d H:i:s'),
										'dt_modified' => date('Y-m-d H:i:s'),
										'st_vehicle_type' => '2-Door Car',
										'in_status' => '1',
										'zip_lat'  => $lat,
										'zip_lon'	=> $lon,
										'in_deleted' => '0'
									   );
									
					$this->db->insert('tbl_user_vehicle', $arrVehicle);
					$last_insert_driver_id = $this->db->insert_id();
					$driver_profile_info['st_driver'] = "Y";
					$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
					$this->user_model->update_user_info($driver_profile_info, $user_id, 'tbl_user_profile');
					$vehicle_id	= $last_insert_driver_id;
				}
			}
			
			if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 1)
			{	
				$data['arrPlane']		= $this->user_model->get_plane_detail($user_id);
				if(!empty($data['arrPlane'][0]) && isset($data['arrPlane'][0]['in_pilot_id']))
				{
					$pilot_id	= $data['arrPlane'][0]['in_pilot_id'];
				} else 
				{
					$lat = 0;
					$lon = 0;
					$zip = 0;
					$get_lat_long = $this->common_model->get_lattitude_longitude($profile_info['st_zip']);
					if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) 
					{
						$lat = $get_lat_long['lat'];
						$lon = $get_lat_long['lon'];
					}
					
						$available_days = array("0" => "Sun", "1" => "Mon", "2" => "Tue", "3" => "Wed", "4" => "Thu", "5" => "Fri", "6" => "Sat");
						$arrPilot = array(           'in_user_id' => $user_id,
										  'st_pilot_availability' => serialize($available_days),
												  'st_pilot_zip'  =>  $profile_info['st_zip'],
										  'in_distance_to_pilot'  =>  '100',
									                'dt_created'  => date('Y-m-d H:i:s'),
												   'dt_modified'  => date('Y-m-d H:i:s'),
												     'in_status'  => '1',
												       'zip_lat'  => $lat,
												       'zip_lon'  => $lon,
												    'in_deleted'  => '0',
												 'st_plane_type'  => 'Single Engine',	
										);
								$this->db->insert('tbl_user_pilot', $arrPilot);
								$last_insert_pilot_id = $this->db->insert_id();
								$driver_profile_info['st_pilot'] = "Y";
								$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
								$this->user_model->update_user_info($driver_profile_info, $user_id, 'tbl_user_profile');
								$pilot_id	= $last_insert_pilot_id;
				}
			}
			
			if(!empty($leg_type))
			{
				if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0)
				{						
					//code to update vehicle id in leg details 
					if(!empty($vehicle_id) && isset($vehicle_id))
					{
			
					$leg_vehicle_detail = array("in_transportation_id"	=> $transport_id,
										   "in_user_id"					=> $user_id,
										   "in_vehicle_id"				=> $vehicle_id,
										   "in_transportation_leg_id"	=> $legs_ids,
										   "dt_created"					=> date("Y-m-d H:i:s"),
										   "in_deleted"					=> 0
										);
					$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
					
					}
				}
				
				if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 1)
				{						
					if(!empty($pilot_id) && isset($pilot_id))
					{
						
						$leg_pilot_detail = array("in_transportation_id"	=> $transport_id,
															  "in_user_id"	=> $user_id,
															 "in_plane_id"	=> $pilot_id,
												"in_transportation_leg_id"	=> $legs_ids,
															  "dt_created"  => date("Y-m-d H:i:s"),
															  "in_deleted"	=> 0
												);
						$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_pilot_detail);
					
					}
				}
			}
											
			$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
			if(!empty($user_legs))
			{
					$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
					
					$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
					if(count($route_details)<=0)
					{
						if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
						{
							$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
						}
						else
						{
							$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
						}
						if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
						{
							$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
						}
						else
						{
							$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
						}
					//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
					$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
					$total_miles  	= $total_miles['distance'];	
					//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
					}
					else
					{
						$total_miles	= $route_details['fl_distance'];
					}
					$this->orgtrasnportation_model->add_distance($total_miles);
					$percent = number_format(($total_miles*100)/$transport_details['in_tot_distance'],2,".","");
					$percent = ($percent>=100)?100:$percent;
					if($user_legs['pick_start_time']!='0000-00-00 00:00:00')
					{
						$target_date = @date("l, M d",strtotime(@$user_legs['pick_start_time']));
					} else {
						$target_date = '';
					}		
					$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
					$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
					$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
					$cover_leg = 0;
					$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;

					$name_arr = array("target_date"		=> $target_date,
									  "name"			=> $user_name,	
									  "transport_id" 	=> $transport_id,
									  "percent" 		=> $percent,
									  "leg_origin" =>$origin1,
									  "leg_destination" =>$destinations1,
									  "total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
									  "cover_leg" => $cover_leg,
									  "st_org_name" => $transport_details['0']['st_org_name'],
									  "st_org_code" => $transport_details['0']['st_org_code'],
									  "st_display_name" => $transport_details['0']['st_display_name'],
									  "st_email" => $transport_details['0']['st_email'],
									  "st_add_comments" => $transport_details['0']['st_add_comments'],
									  "co_user_id" => $transport_details['0']['in_user_id'],
							 );				 					
					//$this->join_transport_email($user_driver_email,"16",$name_arr);
					$send_mail 				= $this->input->post('matched_joining_transport_mail')?1:0;
					if($send_mail == 0)
					{			 
						$this->join_transport_email($user_driver_email,"16",$name_arr);
					}
			}
		}
		
		
		$link_name 	= $this->common_function->get_filtered_name($user_name);
		$url_link 	= "##base_url##user-".$user_id."-".$link_name."/";	
		$notification_message = '<div class="timeline-body border">
						<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$user_name.'</a> joined the leg of transportation.</h2>
						<div class="timeline-content">
							<p class="text17">'.date("l, M",strtotime($transport_details['dt_target'])).' <strong>'.date(" d",strtotime($transport_details['dt_target'])).'</strong></p>
							<div class="w175"><p><strong>From Location</strong><br>'.$transport_details['st_from_city'].', '.$transport_details['st_from_state'].', '.$transport_details['st_from_zip'].'</p></div>
							<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
							<div class="w175"><p><strong>To Location</strong><br>'.$transport_details['st_to_city'].', '.$transport_details['st_to_state'].', '.$transport_details['st_to_zip'].'</p></div>
							<div class="clearfix"></div>
					  </div></div>';
		$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
									"in_transportation_id"	=> $transport_id,
									"in_user_id"			=> $user_id,
									"in_type"				=> 12,
									"in_modified_by"		=> $user_id,
									"dt_created"			=> date("Y-m-d H:i:s"),
									"in_deleted"			=> "0"
								  );	
								
		$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
		$send_mail 				= $this->input->post('matched_joining_transport_mail')?1:0;
		//User Notify
		$notification_last_id = $this->db->insert_id();
		//Sending Email to all organization users 
		$data['get_emails'] = $this->common_model->get_org_users_email($this->session->userdata('org_id'));
		
		//Getting email body
		$this->load->library('email');
		$email_body = $this->common_model->get_email_containt('39');
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if($send_mail == 0)
		{	
		if(isset($email_body) && !empty($email_body))
		{
			$co_ordinator_name = '';
			$co_ordinator_email = '';
			if($transport_details['st_trans_type']=='D')
			{
				$rou_tc_user 		= $this->common_model->get_user_profile($transport_details['accTcid']);
				$co_ordinator_name	= $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'];
				$co_ordinator_email = $rou_tc_user[0]['st_email']; 

			} else 
			{	
				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($transport_id);
				$co_ordinator_name 	  = $transport_co_details['coordinatorname'];
			}
		//$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($transport_id);
		
		$org_name = $transport_details['st_org_name'];
		$orgcode  =	($transport_details[0]['st_org_code'])? '#'.$transport_details[0]['st_org_code'] : '#DBT';
		
		$to = $user_email;
		$subject = $email_body[0]['st_email_subject'];
		$templete	= 	$email_body[0]['st_email_body'];
		$org_details 	= $this->common_model->get_single_org_details($transport_details[0]['in_organization_id']);	
					$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
					if($share_template == 1)
					{
						$main_image = $this->generate_fb_image_option1();
					} 
					
					else if($share_template == 5){						
						$main_image = $this->generate_fb_image_option5();						
					}
					else if($share_template == 6){						
						$main_image = $this->generate_fb_image_option6();						
					}
					else if($share_template == 7){						
						$main_image = $this->generate_fb_image_option7();						
					}
					else if($share_template == 8){						
						$main_image = $this->generate_fb_image_option8();						
					}				
					
					else {
						$main_image = $this->generate_fb_image($share_template);
					}	
				
				 $fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
				if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
		
		$html_string = '';
		if(!empty($user_legs))
		{
			if($transport_details['st_trans_type']=='D' && $transport_details['in_airline_transport']=='1' )
			{
				$origin1 		= ($user_legs['pick_city'] ? $user_legs['pick_city'] . " (" : "").($user_legs['pick_street'] ? $user_legs['pick_street'] . ")" : "");
				$destinations1 	= ($user_legs['drop_city'] ? $user_legs['drop_city'] . " (" : "").($user_legs['drop_street'] ? $user_legs['drop_street'] . ")" : "");
			} else 
			{	
				$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
				$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
			}
			$leg_start_date = '';
			$leg_end_date   = '';
			if(isset($user_legs['pick_start_time']) && !empty($user_legs['pick_start_time']))
			{	
					
				$leg_start_date	.= date("l F d,Y h:i A", strtotime($user_legs['pick_start_time'])).' ';
				$leg_start_date	.= $user_legs['pick_timezone'];
			}
				
			if(isset($user_legs['drop_start_time']) && !empty($user_legs['drop_start_time']))
			{	
				$leg_end_date	.= date("l F d,Y h:i A", strtotime($user_legs['drop_start_time'])).' ';
				$leg_end_date	.= $user_legs['drop_timezone'];
			}	
			if(isset($origin1) && $origin1!='' && isset($destinations1) && $destinations1!='')
			{	
				$html_string .= '<b>From </b>'.$origin1.',<b>To</b> '.$destinations1.'<br>';
			}
				
			if(isset($origin1) && $origin1!='' && isset($user_legs['route_type']) && $user_legs['route_type'] ==2)
			{	
				$html_string .= '<b>Overnight location </b> '.$origin1.'<br>';
			}
				
			if(isset($leg_end_date) && $leg_end_date!='' && isset($leg_start_date) && $leg_start_date!='')
			{	
				$html_string .= '<b>Date </b>'.$leg_start_date.',<b>To</b> '.$leg_end_date.'<br>';
			}
			if(isset($user_legs['route_type']) && $user_legs['route_type']!='')
			{	
				if($user_legs['route_type'] == 0)
				{
					$route_type = 'Road';
				}
				if($user_legs['route_type'] == 2)
				{
					$route_type = 'Overnight';
				}
				if($user_legs['route_type'] == 1)
				{
						$route_type = 'Aviation';
				}
				if($user_legs['route_type'] == 3)
				{
						$route_type = 'Airline';
				}	
				$html_string .= '<b>Type of Transportation </b>'.$route_type;
			}
			if(isset($user_legs['leg_instruction']) && !empty($user_legs['leg_instruction']))
			{
				$html_string .= '<br><b>Leg Instruction </b>'.$user_legs['leg_instruction'];
			}		
		}
		
		$templete  	= 	str_replace("##user_name##",$user_name,$templete);
		$templete  	= 	str_replace("##transport_id##",$orgcode.$transport_id,$templete);
		//$templete  	= 	str_replace("##transport_coordinator##",$transport_co_details['coordinatorname'],$templete);
		$templete  	= 	str_replace("##transport_coordinator##",$co_ordinator_name,$templete);
		$templete  	= 	str_replace("##organization_name##",$org_name,$templete);
		$templete  	= 	str_replace("##transport_day_date##",date("l, M d",strtotime($transport_details['dt_target'])),$templete);
		if($transport_details['st_trans_type']=='D' && $transport_details['in_airline_transport']=='1' )
		{	
				$templete  	= 	str_replace("##transport_start_city_state##",$transport_details['st_from_city']." (".$transport_details['st_from_street'].")",$templete);
				$templete  	= 	str_replace("##transport_end_city_state##",$transport_details['st_to_city']." (".$transport_details['st_to_street'].")",$templete);	
		} else {
			$templete  	= 	str_replace("##transport_start_city_state##",$transport_details['st_from_city'].", ".$transport_details['st_from_state'].", ".$transport_details['st_from_zip'],$templete);
			$templete  	= 	str_replace("##transport_end_city_state##",$transport_details['st_to_city'].", ".$transport_details['st_to_state'].", ".$transport_details['st_to_zip'],$templete);	
		}
		$templete 	= 	str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
		if($transport_details['st_trans_type']=='D')
		{
				$templete 	=   str_replace("##coordinator_details##",$co_ordinator_name.' ('.$co_ordinator_email.')',$templete);
				$templete 	=   str_replace("##coordinator_email##",$co_ordinator_name.' ('.$co_ordinator_email.')',$templete);
		} else {
				$templete 	=   str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);			
				$templete 	=   str_replace("##coordinator_email##",$transport_details['st_email'],$templete);
		}
		$templete   =   str_replace("##leg_info_details##",$html_string,$templete);
		$transport_link = base_url()."org-transportation-scheduled/".$transport_id;
		$templete   =   str_replace("##transport_url##",$transport_link,$templete);
		
		$additional_info_str = ''; 				
		$transport_files = $this->orgtrasnportation_model->get_transport_files($transport_id);
		
		if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
		{
		$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
		
		$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
		
		if(isset($transport_files) && !empty($transport_files))
		{
		$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
		foreach($transport_files as $key=>$value)
		{
			$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
		}
		$additional_info_str .='</ul>';
		}
		}
		
		$templete = str_replace("##additional_details##", $additional_info_str, $templete);
		$templete = str_replace("##DONATIOn##", $donation, $templete);
		
		$category  =    "DBT".$transport_id." - ".$email_details[0]['st_category'];		
		$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
		}
		}
		if(strpos($_SERVER['HTTP_REFERER'], 'user-submission') !== false)
		{
			$this->session->set_flashdata('google_leg','Leg assigned to a non doobert user successfully.');
			redirect($this->config->item('base_url')."user-submission/".$this->session->userdata('transport_id')."/");
		} else if(strpos($_SERVER['HTTP_REFERER'], 'transport-create-legs') !== false)
		{
			$this->session->set_userdata('transport_steps',3);
			redirect($this->config->item('base_url')."transport-create-legs");
		} else {	
			$this->session->set_flashdata('success_non_doobert','Leg assigned to a non doobert user successfully.');
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
		//$this->session->set_flashdata('success_doobert_user','Leg assigned to a user successfully.');
		//redirect($_SERVER['HTTP_REFERER']);
		//redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
	}
	
	
	public function delete_non_doobert_user_leg()
	{
		$id = $_POST['non_doobert_id'];
		//echo $id;exit;
		$this->orgtrasnportation_model->update_non_doobert_user_leg($id);
		
		$non_doobert_detail = $this->orgtrasnportation_model->get_non_doobert_user_detail($id);
		
		$legs_ids = $non_doobert_detail['in_leg_id'];
		
		$tra_id						= $non_doobert_detail['in_transportation_id'];
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		
		$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);
		if(!empty($user_legs))
		{
				$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
				if(count($route_details)<=0)
				{
					if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
					{
						$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
					}
					else
					{
						$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
					}
					if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
					{
						$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
					}
					else
					{
						$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
					}
				$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				$total_miles  	= $total_miles['distance'];	
				}
				else
				{
					$total_miles	= $route_details['fl_distance'];
				}
				$this->orgtrasnportation_model->update_distance($total_miles);
				
				$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
				$percent = ($percent>=100)?100:$percent;
				$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));	
				$name_arr = array("target_date"		=> $target_date,
								  "coordinator_name"  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),
								  "removed_user_name" => $non_doobert_detail['st_name'],	
								  "transport_id" 	=> $non_doobert_detail['in_transportation_id'],
								  "percent" 		=> $percent,
								  "st_org_name" => $transport_details['0']['st_org_name'],
								  "st_org_code" => $transport_details['0']['st_org_code'],
								  "st_display_name" => $transport_details['0']['st_display_name'],								  
								  "st_email" => $transport_details['0']['st_email'],
								  "st_add_comments" => $transport_details['0']['st_add_comments'],
						 );				 					
				$this->remove_from_transport_email($non_doobert_detail['st_email'],"33",$name_arr);


				//$link_name 	= $this->common_function->get_filtered_name($remove_user_details['st_display_name']);
				//$url_link 	= "##base_url##user-".$remove_user_id."-".$link_name."/";
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_transport_leg_id"	=> $legs_ids,
											//"in_user_id"			=> $remove_user_id,
											"in_non_doobert_user_id"=> $id,									
											"in_type"				=> 26,
											//"in_modified_by"		=> $remove_user_id,
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);				
				
		}
	
		$this->session->set_flashdata('google_leg', 'Volunteer has been removed from transport successfully.');
		redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
	}
	
	function check_non_doobert_exists()
	{
		$email_id = $this->input->post('email_id');
		$user_result = array();
		if($email_id!='')
		{	
			$user_result = $this->orgtrasnportation_model->match_user_email_id($email_id);
		}	
		echo json_encode($user_result);exit;	
	}

	function get_non_doobert_exists()
	{
		$email_id = $this->input->post('email_id');
		$user_result = array();
		if($email_id!='')
		{
			$user_result = $this->orgtrasnportation_model->get_user_email_id($email_id);
		}	
		//print_r($user_result);
		echo json_encode($user_result);	
	}		
	
	function sksort($array, $subkey="distance", $sort_ascending=true) {

		if (count($array))
			$temp_array[key($array)] = array_shift($array);
	
		foreach($array as $key => $val){
			$offset = 0;
			$found = false;
			foreach($temp_array as $tmp_key => $tmp_val)
			{
				if(!$found and strtolower($val[$subkey]) > strtolower($tmp_val[$subkey]))
				{
					$temp_array = array_merge(    (array)array_slice($temp_array,0,$offset),
												array($key => $val),
												array_slice($temp_array,$offset)
											  );
					$found = true;
				}
				$offset++;
			}
			if(!$found) $temp_array = array_merge($temp_array, array($key => $val));
		}
	
		if ($sort_ascending) $array = array_reverse($temp_array);
	
		else $array = $temp_array;
		
		return $array;
	}
	
	function get_state_city_country_by_zipcode() 
	{
        $data_val = $_POST['zip_code'];
        $zipcode_data = $this->orgtrasnportation_model->get_state_city_country_by_zipcode($data_val);
        //print_r($zipcode_data);exit;
        echo json_encode($zipcode_data);
    }
	
	function recommend_leg_airline()
	{
		$recommend_trip_id = array();
		$form_field	=	array('pickupselect'			=> '',	
							  "origin-Comments" 			=> '',	
							  "contact_name" 			=> '',
							  "contact_email"			=> '',
					  	 	);	
		foreach($form_field as $key => $value)	
		{	
			$data['recommend_leg'][$key] = $value;	
		}	
		
		foreach ($form_field as $key => $value)
		{	
				$data['recommend_leg'][$key] = $this->input->post($key);	
		}
		
		
		$user_name= isset($data['recommend_leg']['contact_name']) && $data['recommend_leg']['contact_name']!= '' ? $data['recommend_leg']['contact_name'] : '';
		$user_email= isset($data['recommend_leg']['contact_email']) && $data['recommend_leg']['contact_email']!= '' ? $data['recommend_leg']['contact_email'] : '';
		$user_trip_date = array();
		
		$pickupselect_date = $this->input->post('pickupselect');
		$pickupselect_year = $this->input->post('pickupselect_year');
		
		if(count($pickupselect_date)>0)
		{	
			$trip_date = '';
			foreach($pickupselect_date as $key=>$value)
			{	
				if(!(empty($value)))					
				{
					$trip_date = '';
					if(isset($pickupselect_year[$key]) && $pickupselect_year[$key]!='')
					{
									$trip_date = date('Y-m-d',strtotime($value.' '.$pickupselect_year[$key]));
					} else {
									$trip_date = date('Y-m-d',strtotime($value));
					}
					
					$recommend_trip_date = array("st_user_name" => $user_name,
													 "st_email" => $user_email,
										"in_transportation_id"  => $this->session->userdata('transport_id'),
												   'trip_date'  => $trip_date,
										             "st_notes" => trim($data['recommend_leg']['origin-Comments']),
										           "dt_created" => date("Y-m-d H:i:s"),
										           "in_deleted" => "0"		
								                );
									
									$this->db->insert('tbl_recommend_tripdate',$recommend_trip_date);
									$user_trip_date[] = date("D M d",strtotime($value));
									$id = $this->db->insert_id();
									array_push($recommend_trip_id,$id);		
				}	
			}			
		}
		
		if(count($user_trip_date)>0)
		{
				$this->load->library('email');
				$email_body = $this->common_model->get_email_containt('114');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));

			if (isset($email_body) && !empty($email_body) && isset($transport_details) && !empty($transport_details)) 
			{
				$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
				$to = $rou_tc_user[0]['st_email'];
				$user_to_id = $rou_tc_user[0]['in_user_id'];
					
				$subject = $email_body[0]['st_email_subject'];				
				
				$subject = str_replace("##transport_id##", "#DBT" . $this->session->userdata('transport_id'), $subject);				
				
				$templete = $email_body[0]['st_email_body'];
				
				
				$pickup_location = '';
				if(isset($transport_details[0]['st_from_city']) && trim($transport_details[0]['st_from_city']) != '')
				{
					$pickup_location .= $transport_details[0]['st_from_city'];
				}
				if(isset($transport_details[0]['st_from_street']) && trim($transport_details[0]['st_from_street']) != '')
				{
					$pickup_location .= ' ('.$transport_details[0]['st_from_street'].') ';
				}
				
				$dropoff_location = '';
				
				if(isset($transport_details[0]['st_to_city']) && trim($transport_details[0]['st_to_city']) != '')
				{
					$dropoff_location .= $transport_details[0]['st_to_city'];
				}
				if(isset($transport_details[0]['st_to_street']) && trim($transport_details[0]['st_to_street']) != '')
				{
					$dropoff_location .= ' ('.$transport_details[0]['st_to_street'].') ';
				}
					
				$templete = str_replace("##user_display_name##", $user_name, $templete);
				$templete = str_replace("##transport_id##", "#DBT" . $this->session->userdata('transport_id'), $templete);
				$templete = str_replace("##transport_coordinator##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
									
				$templete = str_replace("##pickup_location##", $pickup_location, $templete);
				$templete = str_replace("##dropoff_location##", $dropoff_location, $templete);
				$templete = str_replace("##username##", $user_name, $templete);
				$templete = str_replace("##useremail##", $user_email, $templete);
				$templete = str_replace("##trip_date##",implode(",\r\n",$user_trip_date), $templete);
				$templete = str_replace("##notes##", nl2br($data['recommend_leg']['origin-Comments']), $templete);
				
				// added by sadique
				//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
				
				$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
				if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
					{
						$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
					} else {
						$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
					}
				
				
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				$templete	=	str_replace("##DONATION##",$donation,$templete);
					
					
				$category  =    "#DBT".$data['recommend_leg']['recommend_transport_id']."-".$email_body[0]['st_category'];	
					
				$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
					
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}
		$this->session->unset_userdata('recommend_trip_id');
		$this->session->unset_userdata('recommend_first_name');
		$this->session->unset_userdata('recommend_last_name');
		$this->session->unset_userdata('recommend_user_email');
		$this->session->set_userdata('recommend_trip_id',$recommend_trip_id);
		
		$fullename = explode(' ',$user_name);
		if(isset($fullename[0]) && !empty($fullename[0]))
		{
				$first_name = trim($fullename[0]);
				$this->session->set_userdata('recommend_first_name',$first_name);
		}

		if(isset($fullename[1]) && !empty($fullename[1]))
		{
				$last_name = trim($fullename[1]);
				$this->session->set_userdata('recommend_last_name',$last_name);
		}	
		
		//$this->session->set_userdata('recommend_user_name',$user_name);
		$this->session->set_userdata('recommend_user_email',$user_email);
		
		$this->session->set_flashdata('routing_leg', 'Your Trip Date has been recommended to transport cordinator'); 
		$this->session->set_userdata('recommend_leg_avia',1);
		//redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id'));
		redirect($this->config->item('base_url').'user-signup');	
	}
	
	function recommend_leg()
	{
		//print_r($_POST['pickup_state']);
		//exit;
		
		$form_field	=	array('recommend_transport_id' => "",
							  'recommend_user_id' => "",
							  'pick_up_location'=> "",
							  'pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pickup_state'	=> "",							  
							  'pick_zip'		=> "",
							  'drop_off_location'=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_zip"		=> "",
							  "action"			=> "",	
							  "note-comments" => '',	
								"contact_name" => '',
								"contact_email"	=> ''
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['recommend_leg'][$key] = $value;	
		}	
		
		if($this->input->post('action_recommend'))
		{	
			foreach ($form_field as $key => $value)
			{	
				$data['recommend_leg'][$key] = $this->input->post($key);	
			}
		}
		
		//print_r($data['recommend_leg']);exit;
		
		
		$dropzip='';
		$pickzp='';		
		$pickzp = explode(',',$data['recommend_leg']['pick_up_location']);
		$dropzip = explode(',',$data['recommend_leg']['drop_off_location']);
		
		
		$user_id = isset($data['recommend_leg']['recommend_user_id']) && $data['recommend_leg']['recommend_user_id']> 0 ? $data['recommend_leg']['recommend_user_id'] : '';
		$user_name= isset($data['recommend_leg']['contact_name']) && $data['recommend_leg']['contact_name']!= '' ? $data['recommend_leg']['contact_name'] : '';
		$user_email= isset($data['recommend_leg']['contact_email']) && $data['recommend_leg']['contact_email']!= '' ? $data['recommend_leg']['contact_email'] : '';
		
		if(isset($user_id)  && $user_id > 0)
		{
			$user_id = $data['recommend_leg']['recommend_user_id'];
			$user_name = $this->session->userdata('user_name').' '.$this->session->userdata('last_name');
			$user_email = $this->session->userdata('email');
		}
		
		$recommend_leg_details = array("in_user_id" => $user_id,
                    "st_user_name" 					=> $user_name,
					"st_email" 						=> $user_email,
					"in_transportation_id"			=> $data['recommend_leg']['recommend_transport_id'],
					"in_leg_type" 					=> 0,
                    "st_from_street"				=> $data['recommend_leg']['pick_street'],
                    "st_from_city" 					=> $pickzp[1], //trim($data['recommend_leg']['pick_city']),
                    "st_from_state" 				=> $pickzp[2],
                     "st_from_zipcode" 				=> $pickzp[0],//trim($data['recommend_leg']['pick_zip']),
                    "st_from_country" 				=> $pickzp[3],
                    "st_to_street"					=> $data['recommend_leg']['drop_street'], 
                    "st_to_city" 					=> $dropzip[1],
                    "st_to_state" 					=> $dropzip[2],
                    "st_to_zipcode" 				=> $dropzip[0],
                    "st_to_country" 				=> $dropzip[3],
				    "st_notes" 						=> trim($data['recommend_leg']['note-comments']),
                    "dt_created" 					=> date("Y-m-d H:i:s"),
                    "in_deleted" 					=> "0"
                );
        $leg_id = $this->orgtrasnportation_model->add_recommended_leg($recommend_leg_details);
				
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_body = $this->common_model->get_email_containt('49');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			if (isset($email_body) && !empty($email_body)) 
			{

				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($data['recommend_leg']['recommend_transport_id']);
				//echo '<pre>'; print_r($transport_co_details); die;
				$orgcode = ($transport_co_details['st_org_code'] != '')? '#'.$transport_co_details['st_org_code'] : '#DBT';
				$to = $transport_co_details['coordinatoremail'];
				//$to = 'sadique.mohammed@pulsesolutions.net';
				$subject = $email_body[0]['st_email_subject'];				
				
				$subject = str_replace("##transport_id##", $orgcode . $data['recommend_leg']['recommend_transport_id'], $subject);				
				
				$templete = $email_body[0]['st_email_body'];
				
				
				$pickup_location = '';
				if(isset($data['recommend_leg']['pick_street']) && trim($data['recommend_leg']['pick_street']) != '')
				{
					$pickup_location .= $data['recommend_leg']['pick_street'] . ', ';
				}
				if(isset($pickzp[0]) && trim($pickzp[0]) != '')
				{
					$pickup_location .= $pickzp[0] . ', ';
				}
				if(isset($pickzp[1]) && trim($pickzp[1]) != '')
				{
					$pickup_location .=$pickzp[1] . ', ';//$data['recommend_leg']['pick_city'] . ', ';
				}
				if(isset($pickzp[2]) && trim($pickzp[2]) != '')
				{
					$pickup_location .= $pickzp[2] . ', ';
				}
				if(isset($pickzp[3]) && trim($pickzp[3]) != '')
				{
					$pickup_location .= $pickzp[3];
				}
				
				
				$dropoff_location = '';
				
				if(isset($data['recommend_leg']['drop_street']) && trim($data['recommend_leg']['drop_street']) != '')
				{
					$dropoff_location .= $data['recommend_leg']['drop_street'] . ', ';
				}
				if(isset($dropzip[0]) && trim($dropzip[0]) != '')
				{
					$dropoff_location .= $dropzip[0] . ', ';;
				}
				if(isset($dropzip[1]) && trim($dropzip[1]) != '')
				{
					$dropoff_location .=$dropzip[1] . ', ';//$data['recommend_leg']['pick_city'] . ', ';
				}
				if(isset($dropzip[2]) && trim($dropzip[2]) != '')
				{
					$dropoff_location .= $pickzp[2] . ', ';
				}
				if(isset($dropzip[3]) && trim($dropzip[3]) != '')
				{
					$dropoff_location .= $dropzip[3];
				}
				
				/*if(isset($data['recommend_leg']['drop_street']) && trim($data['recommend_leg']['drop_street']) != '')
				{
					$dropoff_location .= $data['recommend_leg']['drop_street'] . ', ';
				}
				if(isset($data['recommend_leg']['drop_city']) && trim($data['recommend_leg']['drop_city']) != '')
				{
					$dropoff_location .= $data['recommend_leg']['drop_city'] . ', ';
				}
				if(isset($data['recommend_leg']['drop_state']) && trim($data['recommend_leg']['drop_state']) != '')
				{
					$dropoff_location .= $data['recommend_leg']['drop_state'] . ', ';
				}
				if(isset($dropzip[0]) && trim($dropzip[0]) != '')
				{
					$dropoff_location .= $dropzip[0]; //  $data['recommend_leg']['drop_zip'];
				}*/
				
				$templete = str_replace("##user_display_name##", $user_name, $templete);
				$templete = str_replace("##transport_id##", $orgcode . $data['recommend_leg']['recommend_transport_id'], $templete);
				$templete = str_replace("##transport_coordinator##", $transport_co_details['coordinatorname'], $templete);
				$templete = str_replace("##leg_type##", "Ground", $templete);				
				$templete = str_replace("##pickup_location##", $pickup_location, $templete);
				$templete = str_replace("##dropoff_location##", $dropoff_location, $templete);
				$templete = str_replace("##username##", $user_name, $templete);
				$templete = str_replace("##useremail##", $user_email, $templete);
				$templete = str_replace("##notes##", nl2br($data['recommend_leg']['note-comments']), $templete);
				
				// added by sadique
				//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id'].'.jpg?'.rand();
				
				$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id'].'.jpg?'.rand();
				if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id'].'.jpg'))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
				
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				$templete	=	str_replace("##DONATION##",$donation,$templete);
				
				
				//print_r($templete);exit;
				$category  =    "#DBT".$data['recommend_leg']['recommend_transport_id']."-".$email_body[0]['st_category'];	
				$user_to_id = $this->common_model->get_user_id_by_email($to);
						
				$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}
		
			$this->session->set_flashdata('success_doobert_user', 'Your route has been recommended to transport cordinator'); 
			$this->session->set_userdata('recommend_leg',1);
			redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id'));
			
	}
	
	function recommend_leg_avia()
	{
		//print_r($_POST);
		//exit;
		
		$form_field	=	array('recommend_transport_id_avia' => "",
							  'recommend_user_id_avia' => "",
							  'pickup_airport'		=> "",
							  'pickup_airport_city'		=> "",
							  'pickup_airport_state'	=> "",							  
							  "dropoff_airport"		=> "",
							  "dropoff_airport_city"		=> "",
							  "dropoff_airport_state"		=> "",
							  "action"			=> "",	
							  "note_comments_avia" => '',	
							  "contact_name_avia" => '',
							  "contact_email_avia"	=> ''
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['recommend_leg'][$key] = $value;	
		}	
		
		if($this->input->post('action_recommend_avia'))
		{	
			foreach ($form_field as $key => $value)
			{	
				$data['recommend_leg'][$key] = $this->input->post($key);	
			}
		}
		
		//print_r($data['recommend_leg']);exit;
		
		$user_id = isset($data['recommend_leg']['recommend_user_id_avia']) && $data['recommend_leg']['recommend_user_id_avia']> 0 ? $data['recommend_leg']['recommend_user_id_avia'] : '';
		$user_name= isset($data['recommend_leg']['contact_name_avia']) && $data['recommend_leg']['contact_name_avia']!= '' ? $data['recommend_leg']['contact_name_avia'] : '';
		$user_email= isset($data['recommend_leg']['contact_email_avia']) && $data['recommend_leg']['contact_email_avia']!= '' ? $data['recommend_leg']['contact_email_avia'] : '';
		
		if(isset($user_id)  && $user_id > 0)
		{
			$user_id = $data['recommend_leg']['recommend_user_id_avia'];
			$user_name = $this->session->userdata('user_name').' '.$this->session->userdata('last_name');
			$user_email = $this->session->userdata('email');
		}
		
		$recommend_leg_details = array("in_user_id" => $user_id,
                    "st_user_name" => $user_name,
					"st_email" => $user_email,
					"in_transportation_id" => $data['recommend_leg']['recommend_transport_id_avia'],
					"in_leg_type" => 1,
                    "st_from_street"	=> $data['recommend_leg']['pickup_airport'],
                    "st_from_city" => trim($data['recommend_leg']['pickup_airport_city']),
                    "st_from_state" => trim($data['recommend_leg']['pickup_airport_state']),
                    "st_to_street"		=> $data['recommend_leg']['dropoff_airport'], 
                    "st_to_city" => trim($data['recommend_leg']['dropoff_airport_city']),
                    "st_to_state" => trim($data['recommend_leg']['dropoff_airport_state']),
                    "st_notes" => trim($data['recommend_leg']['note_comments_avia']),
                    "dt_created" => date("Y-m-d H:i:s"),
                    "in_deleted" => "0"
                );
        $leg_id = $this->orgtrasnportation_model->add_recommended_leg($recommend_leg_details);
		
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_body = $this->common_model->get_email_containt('49');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			if (isset($email_body) && !empty($email_body)) 
			{

				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($data['recommend_leg']['recommend_transport_id_avia']);
				$orgcode = ($transport_co_details['st_org_code'] != '')? '#'.$transport_co_details['st_org_code'] : '#DBT';
				$to = $transport_co_details['coordinatoremail'];
				//$to = 'ghanshyam.maurya@pulsesolutions.net';
				$subject = $email_body[0]['st_email_subject'];				
				
				$subject = str_replace("##transport_id##", $orgcode . $data['recommend_leg']['recommend_transport_id_avia'], $subject);				
				
				
				$templete = $email_body[0]['st_email_body'];
				
				$pickup_airport = '';
				if(isset($data['recommend_leg']['pickup_airport']) && trim($data['recommend_leg']['pickup_airport']) != '')
				{
					$pickup_airport .= $data['recommend_leg']['pickup_airport'] . ', ';
				}
				if(isset($data['recommend_leg']['pickup_airport_city']) && trim($data['recommend_leg']['pickup_airport_city']) != '')
				{
					$pickup_airport .= $data['recommend_leg']['pickup_airport_city'] . ', ';
				}
				if(isset($data['recommend_leg']['pickup_airport_state']) && trim($data['recommend_leg']['pickup_airport_state']) != '')
				{
					$pickup_airport .= $data['recommend_leg']['pickup_airport_state'];
				}
				
				$dropoff_airport = '';
				if(isset($data['recommend_leg']['dropoff_airport']) && trim($data['recommend_leg']['dropoff_airport']) != '')
				{
					$dropoff_airport .= $data['recommend_leg']['dropoff_airport'] . ', ';
				}
				if(isset($data['recommend_leg']['dropoff_airport_city']) && trim($data['recommend_leg']['dropoff_airport_city']) != '')
				{
					$dropoff_airport .= $data['recommend_leg']['dropoff_airport_city'] . ', ';
				}
				if(isset($data['recommend_leg']['dropoff_airport_state']) && trim($data['recommend_leg']['dropoff_airport_state']) != '')
				{
					$dropoff_airport .= $data['recommend_leg']['dropoff_airport_state'];
				}
				
				$templete = str_replace("##user_display_name##", $user_name, $templete);
				$templete = str_replace("##transport_id##", $orgcode . $data['recommend_leg']['recommend_transport_id_avia'], $templete);
				$templete = str_replace("##transport_coordinator##", $transport_co_details['coordinatorname'], $templete);
				$templete = str_replace("##leg_type##", "Aviation", $templete);				
				$templete = str_replace("##pickup_location##",$pickup_airport, $templete);
				$templete = str_replace("##dropoff_location##",$dropoff_airport, $templete);
				$templete = str_replace("##username##", $user_name, $templete);
				$templete = str_replace("##useremail##", $user_email, $templete);
				$templete = str_replace("##notes##", $data['recommend_leg']['note_comments_avia'], $templete);
				
				// added by sadique
				//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id_avia'].'.jpg?'.rand();
				
				
				$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id_avia'].'.jpg?'.rand();
				if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$data['recommend_leg']['recommend_transport_id_avia'].'.jpg'))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}
				
				
				$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				$templete	=	str_replace("##DONATION##",$donation,$templete);
				
				//print_r($templete);exit;
				$category  =  "#DBT".$data['recommend_leg']['recommend_transport_id_avia']."-".$email_body[0]['st_category'];	
				$user_to_id = $this->common_model->get_user_id_by_email($to);
						
				$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}
		
			$this->session->set_flashdata('success_doobert_user', 'Your route has been recommended to transport cordinator'); 
			$this->session->set_userdata('recommend_leg',1);
			redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id'));
			
	}
	
	function add_transport_info()
	{
		//print_r($_POST);exit;
	 	$data  =	array();
		$transport_id =  $_POST['transport_id_add_info'];
		$image_file =  $_POST['image_file'];
		if(isset($_POST['additional_comments'])){
		$comments = trim($_POST['additional_comments']);
		}
		if(isset($comments) && $comments != '')
		{
			$data['comments'] = $this->orgtrasnportation_model->update_transport_details(array("st_add_comments" => $comments));
		}
		$transport_doc = explode(",", $image_file);
		for ($a = 0; $a < count($transport_doc); $a++) {
			$file_details = array();
			if ($transport_doc[$a] != '') {
				$file_details = array("in_transportation_id" => $transport_id,
					"st_file_name" => $transport_doc[$a],
					"dt_created" => date("Y-m-d H:i:s"),
					"in_deleted" => "0"
				);
				$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);
			}
		}
	
		//$this->session->set_flashdata('success_transport_info', 'success_transport_info'); 
		//redirect($_SERVER['HTTP_REFERER']);
		echo json_encode($data);
		
		
	}
	
	function update_transport_info()
	{
		//print_r($_POST);exit;
		$data  =	array();
	 	$transport_id =  $_POST['transport_id_update_info'];
		$image_file =  $_POST['image_file_update'];
		$comments = trim($_POST['additional_comments_update']);
		/*if(isset($comments) && $comments != '')
		{  
			$data['comments'] = $this->orgtrasnportation_model->update_transport_details(array("st_add_comments" => $comments));
		}*/
		$data['comments'] = $this->orgtrasnportation_model->update_transport_details(array("st_add_comments" => $comments,"in_modified_by"=>$this->session->userdata('userid')));
		$transport_doc = explode(",", $image_file);
		for ($a = 0; $a < count($transport_doc); $a++) {
			$file_details = array();
			if ($transport_doc[$a] != '') {
				$file_details = array("in_transportation_id" => $transport_id,
					"st_file_name" => $transport_doc[$a],
					"dt_created" => date("Y-m-d H:i:s"),
					"in_deleted" => "0"
				);
				$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);
			}
		}
		
		//$this->session->set_flashdata('success_transport_info', 'success_transport_info'); 
		//redirect($_SERVER['HTTP_REFERER']);
		echo json_encode($data);
		
	}
	
	function transport_info_update()
	{
		//print_r($_POST);exit;
		$data  =	array();
	 	$transport_id =  $_POST['transport_id_update_info'];
		$image_file =  $_POST['image_file_update'];
		$comments = trim($_POST['additional-comments-update']);
		/*if(isset($comments) && $comments != '')
		{
			$data['comments'] = $this->orgtrasnportation_model->update_transport_details(array("st_add_comments" => $comments));
		}*/
		$data['comments'] = $this->orgtrasnportation_model->update_transport_details(array("st_add_comments" => $comments,"in_modified_by"=>$this->session->userdata('userid')));
		$transport_doc = explode(",", $image_file);
		for ($a = 0; $a < count($transport_doc); $a++) {
			$file_details = array();
			if ($transport_doc[$a] != '') {
				$file_details = array("in_transportation_id" => $transport_id,
					"st_file_name" => $transport_doc[$a],
					"dt_created" => date("Y-m-d H:i:s"),
					"in_deleted" => "0"
				);
				$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);
			}
		}
		
		$this->session->set_flashdata('success_transport_info', 'success_transport_info'); 
		//redirect($_SERVER['HTTP_REFERER']);
		$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
		if ($transport_details['0']['in_status'] == '2') {
            redirect($this->config->item('base_url') . "org-confirm-transport/");
        }else{
			redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/#tab_2_1");
		}
	}
	
	 public function delete_transport_add_files($file_id, $animal_id) {
        //$this->load->library('user_agent');
        $data['animal_files'] = $this->orgtrasnportation_model->delete_animal_files($file_id);
        $this->session->set_flashdata('message_sys', 'Transportation file(s) deleted successfully.');
        redirect($_SERVER['HTTP_REFERER']);
        //redirect($this->agent->referrer());	
    }
	
	public function get_doobert_recent_post() {
      
		//$c=curl_init('https://www.doobert.com/feed/');
		$c=curl_init('https://www.doobert.com/category/blog-home/feed/');
		curl_setopt( $c, CURLOPT_USERAGENT,'nginx-curl-blahblahblah' );
		curl_setopt( $c, CURLOPT_RETURNTRANSFER, true );
		$r=curl_exec( $c );
		curl_close( $c );
		//print_r($r);
		
	$rss = new DOMDocument();
	$rss->loadxml($r);
	$feed = array();
	foreach ($rss->getElementsByTagName('item') as $node) {
		$item = array ( 
			'title' => $node->getElementsByTagName('title')->item(0)->nodeValue,
			'desc' => $node->getElementsByTagName('description')->item(0)->nodeValue,
			'link' => $node->getElementsByTagName('link')->item(0)->nodeValue,
			'date' => $node->getElementsByTagName('pubDate')->item(0)->nodeValue,
			);
		array_push($feed, $item);
	}
	$limit = 1;
	$blog =array();
	for($x=0;$x<$limit;$x++) {
		$title = str_replace(' & ', ' &amp; ', $feed[$x]['title']);
		$link = $feed[$x]['link'];
		$description = $feed[$x]['desc'];
	    $description = preg_replace("/<img[^>]+\>/i","", $description); 
		if(strlen($description) > 100)
			{
				$des = substr($description, 0, 99);
				$des.= '...';
			}
		
		$blog['title']=$title;
		$blog['content']=$des;
		$blog['blog_link'] = $link;
		
		//$date = date('l F d, Y', strtotime($feed[$x]['date']));
		/*echo '<p><strong><a href="'.$link.'" title="'.$title.'">'.$title.'</a></strong><br />';
		echo '<small><em>Posted on '.$date.'</em></small></p>';
		echo '<p>'.$description.'</p>';*/
		//print_r($blog);
	}
	return $blog;	
	}
	
	 public function upload_transport_share_img() {
        $upload_dir = $this->config->item('upload') . "fb_transport_share/";

        $file_name = mktime() . ".png";
        $file = $upload_dir . $file_name;

        $data = $_REQUEST['base64data'];
        //Get the base-64 string from data
        $filteredData = substr($data, strpos($data, ",") + 1);

        //Decode the string
        $unencodedData = base64_decode($filteredData);

        file_put_contents($file, $unencodedData);
        echo $file_name;
        exit;
    }
	
	public function share_transport()
	{
		$data = array();
		//$tra_id						= $_REQUEST['t_id'];
		$tra_id						= $this->uri->segment('3');
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$transport_info 			= (isset($transport_details['0']))?$transport_details['0']:"";
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_by_id($tra_id);
		
		$data['transport_details'] 				= $transport_info;
		$this->session->set_userdata('transport_id',$tra_id);
		$org_details 	= $this->common_model->get_single_org_details($transport_info['in_organization_id']);	
		$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
		if($share_template == 1)
		{
			$main_image = $this->generate_fb_image_option1();
		} 
		
		else if($share_template == 5){						
			$main_image = $this->generate_fb_image_option5();						
		}
		else if($share_template == 6){						
			$main_image = $this->generate_fb_image_option6();						
		}
		else if($share_template == 7){						
			$main_image = $this->generate_fb_image_option7();						
		}
		else if($share_template == 8){						
			$main_image = $this->generate_fb_image_option8();						
		}
		
		else {
			$main_image = $this->generate_fb_image($share_template);
		}
	
		$this->session->unset_userdata('transport_id',$tra_id);
	
		$data['main_image']  = $main_image;	
		/* code for facebook transport share ends */
		//print_r($data);exit;
		$this->load->view('share_transport',$data);
	}
	
	function share_on_fb_region_grps($start_zip,$end_zip,$transport_info,$main_image,$facebook)
	{
		//$start_zip = '00501';
		//$end_zip = '00612';
		
		$trans_start_state = $this->orgtrasnportation_model->get_state_city_by_zipcode($start_zip);
		$trans_end_state   = $this->orgtrasnportation_model->get_state_city_by_zipcode($end_zip);
		
		if(isset($trans_start_state) && $trans_start_state != '')
		{
			//echo $trans_start_state['state_prefix'];
			$region_lists = $this->common_function->region_list;
			//print_r($region_lists);
			$state_region_id = $this->array_find_deep($region_lists,$trans_start_state['state_prefix']);
			if(isset($state_region_id) && !empty($state_region_id))
			{	
				//print_r($state_region_id[0]);
				$region_id = $state_region_id[0];
				//exit;
				if($region_id == '1')
				{
					$group_id = '565140766994175';
				}
				else if($region_id == '2')
				{
					$group_id = '925572430884097';
				}
				else if($region_id == '3')
				{
					$group_id = '199871620373272';
				}
				else if($region_id == '4')
				{
					$group_id = '1678643515728244';
				}
				else if($region_id == '5')
				{
					$group_id = '557009464463686';
				}
				else if($region_id == '6')
				{
					$group_id = '782201395450057';
				} else if($region_id == '7')
				{
					$group_id = '512476269238692';
				} else if($region_id == '8')
				{
					$group_id = '2222841131373563';
				}
				
				$fb_access_data = $this->common_model->get_facebook_access_token();
				if(isset($fb_access_data) && !empty($fb_access_data))
				{	
					$fb_access_token = $fb_access_data['st_access_token']; 
					if(isset($fb_access_token) && $fb_access_token != '')
					{
					$publish = $facebook->api('/'.$group_id.'/feed', 'post',
								array(
								'scrape'=>'true',
								'access_token' => $fb_access_token,
								'message'=> 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id'],
								'link' => base_url()."org-transportation-scheduled/".$transport_info['in_transportation_id']."/",
								'picture' => base_url()."upload/fb_transport_share/".$main_image,
								'description' => 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id']
								));	
					}
				}
			}
		}
		
		if(isset($trans_end_state) && $trans_end_state != '')
		{
			if($trans_end_state['state_prefix'] != $trans_start_state['state_prefix'])
			{	
				//echo $trans_end_state['state_prefix'];
				$region_lists = $this->common_function->region_list;
				//print_r($region_lists);
				$state_region_id = $this->array_find_deep($region_lists,$trans_end_state['state_prefix']);
				if(isset($state_region_id) && !empty($state_region_id))
				{	
				//print_r($state_region_id[0]);
				$region_id = $state_region_id[0];
				//exit;
				if($region_id == '1')
				{
					$group_id = '565140766994175';
				}
				else if($region_id == '2')
				{
					$group_id = '925572430884097';
				}
				else if($region_id == '3')
				{
					$group_id = '199871620373272';
				}
				else if($region_id == '4')
				{
					$group_id = '1678643515728244';
				}
				else if($region_id == '5')
				{
					$group_id = '557009464463686';
				} else if($region_id == '6')
				{
					$group_id = '782201395450057';
				}  else if($region_id == '7')
				{
					$group_id = '512476269238692';
				} else if($region_id == '8')
				{
					$group_id = '2222841131373563';
				}
				
				$fb_access_data = $this->common_model->get_facebook_access_token();
				if(isset($fb_access_data) && !empty($fb_access_data))
				{	
					$fb_access_token = $fb_access_data['st_access_token']; 
					if(isset($fb_access_token) && $fb_access_token != '')
					{
					$publish = $facebook->api('/'.$group_id.'/feed', 'post',
								array(
								'scrape'=>'true',
								'access_token' => $fb_access_token,
								'message'=> 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id'],
								'link' => base_url()."org-transportation-scheduled/".$transport_info['in_transportation_id']."/",
								//'link' => 'apps.facebook.com/doobert-rescue/?fb_appcenter=1',
								'picture' => base_url()."upload/fb_transport_share/".$main_image,
								'description' => 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id']
								));	
					}
				}
				}	
			}
		}
		
	}	
	
	function array_find_deep($array, $search, $keys = array())
	{
		foreach($array as $key => $value) {
			if (is_array($value)) {
				$sub = $this->array_find_deep($value, $search, array_merge($keys, array($key)));
				if (count($sub)) {
					return $sub;
				}
			} elseif ($value === $search) {
				return array_merge($keys, array($key));
			}
		}

		return array();
	}
	
	function transport_email_template()
	{
		 if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
        if (!$this->session->userdata('org_id')) {
            redirect($this->config->item('base_url'));
        }
		
		$create = '0';
        $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
        $make_array_user = array();
        $check_per_flag = '';
        $user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
        if (!empty($user_permission)) {
            $make_array_user = unserialize($user_permission);
        }
        if ($owner_id != $this->session->userdata('userid')) {
            if (isset($make_array_user['transport']) && (in_array('transport_ed', $make_array_user['transport']) == true || in_array('transport_cr', $make_array_user['transport']) == true)) {
                $check_per_flag = '1';
                if (in_array('transport_ed', $make_array_user['transport']) == true && !in_array('transport_cr', $make_array_user['transport']) == true) {
                    $create = '1';
                } else {
                    $create = '0';
                }
            } else {
                $check_per_flag = '0';
                $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
            }
        }
		
		$this->load->view('transportation/transport_create_email_template');	
	}
	
	function download_transportation_pdf()
	{
		if(!($this->session->userdata('transport_id'))){
			  redirect($this->config->item('base_url'));
		}
		$this->load->helper('mpdf');
		$data['user_name'] =  $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$data['transport_data'] = $transport_data; 		
		
		if($transport_data[0]['in_status']==0)
		{
			$status = 'Incomplete';
		} else if($transport_data[0]['in_status']=='1')
		{
			$status = 'Active';
		}  else if($transport_data[0]['in_status']=='2')
		{
			$status = 'Confirmed';
		}   else if($transport_data[0]['in_status']=='3')
		{
			$status = 'Canceled';
		}  else if($transport_data[0]['in_status']=='4')
		{
			$status = 'Draft';
		} else {
			$status ='';
		}
		$data['status'] = $status;
		
		$data['leg_details'] = $this->orgtrasnportation_model->get_trans_legs_join_user("Null");
		$data['animals_cnt'] = 0;
        $data['transport_animals'] = $this->orgtrasnportation_model->get_transport_animals($this->session->userdata('transport_id'));
		$data['transport_files'] = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
		/*echo "<pre>"; print_r($data); echo "</pre>";
		die;*/
		/*$tc_privacy_setting = $this->orgtrasnportation_model->get_organization_privacy_setting_by_org_id($this->session->userdata('org_id'));
		if(count($tc_privacy_setting)>0)
		{
			$gen_info = unserialize($tc_privacy_setting['st_general_info']);
			if(is_array($gen_info) && in_array('sdisplay_tc',$gen_info))
			{
				$data['display_public_tc'] = '1';
			} else {
				$data['display_public_tc'] = '0';
			}	
		}*/
		
		$tc_privacy_setting = $this->orgtrasnportation_model->get_organization_privacy_setting_by_org_id($this->session->userdata('org_id'));
		if($tc_privacy_setting['in_tc_info']=='1')
		{
			$data['display_public_tc'] = '1';	
		} else {
			$data['display_public_tc'] = '0';
		}
			
		$user_joined_leg = $this->orgtrasnportation_model->get_all_legs();
		if(count($user_joined_leg)>0)
			$data['user_joined_transport'] = '1';
		else
			$data['user_joined_transport'] = '0';
		
		$templete = $this->load->view('transportation/download_transportation_pdf.php',$data,true);	 
		/*echo $templete;
		exit(0);*/
		$file_name = 'Transportation-Details'.$this->session->userdata('transport_id').".pdf";
   		pdf_create($templete,$file_name,'transportation_runsheet');
	}
	
	function download_transportation_route_pdf()
	{  
		if(!($this->session->userdata('transport_id'))){
			  redirect($this->config->item('base_url'));
		}
		$this->load->helper('mpdf');
		$data['user_name'] =  $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$data['transport_data'] = $transport_data; 

		$data['transport_animals'] = $this->route_animal_model->get_transport_animals($this->session->userdata('transport_id'));
		$arr = array();

		foreach($data['transport_animals'] as $a_key => $a_value){
			//echo $a_value['in_ord_trans_id'];

			$tempid = explode("_", $a_value['in_ord_trans_id']);
			$crateid = $tempid[1];
			$arr[$crateid]['img'][] = $a_value['st_animal_photo'];
			$arr[$crateid]['name'][] =  $a_value['st_animal_name'];
			$arr[$crateid]['id'][] =  $a_value['in_animal_id'];

			
		}
		$data['animal_crate'] = $arr;

		if($transport_data[0]['in_status']==0)
		{
			$status = 'Incomplete';
		} else if($transport_data[0]['in_status']=='1')
		{
			$status = 'Active';
		}  else if($transport_data[0]['in_status']=='2')
		{
			$status = 'Confirmed';
		}   else if($transport_data[0]['in_status']=='3')
		{
			$status = 'Canceled';
		}  else if($transport_data[0]['in_status']=='4')
		{
			$status = 'Draft';
		} else {
			$status ='';
		}
		$data['status'] = $status;
		
		$data['passenger_info'] = $this->orgtrasnportation_model->get_passenger_info_details();
		$data['transport_files'] = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));		
		$templete = $this->load->view('transportation/download_transportation_route_pdf.php',$data,true);	 
		// "<pre>";print_r($templete);exit();
		$file_name = 'Transportation-Details.pdf';
  		pdf_create($templete,$file_name,'transportation_runsheet');
	}
	
	
	function create_legs($id)
	{
			//$legsarray = $_POST['legsArray'];
			$legsarray = json_decode($this->input->post('legsArray'),true);
			//echo "<pre>"; print_r($legsarray);
			//die;
			$non_doobert_leg_id = '';
			foreach($legsarray as $key =>$legs)
			{	
		       if ($legs['leg_id'] == '' && $legs['update_leg'] != 'delete') {
						if ($legs['route_type_id'] == 0) {
                            $multi_user = isset($legs['multiple_drivers']) ? $legs['multiple_drivers'] : $legs['multiple_drivers_pilots'];
                            $meeting_location = isset($legs['meeting_location']) ? $legs['meeting_location'] : '';
                            $user_num = isset($legs['no_of_drivers']) ? $legs['no_of_drivers'] : '';
                        } elseif ($legs['route_type_id'] == 1) {
                            $multi_user = isset($legs['multiple_pilots']) ? $legs['multiple_pilots'] : $legs['multiple_drivers_pilots'];
                            $meeting_location = isset($legs['pilot_meeting_location']) ? $legs['pilot_meeting_location'] : '';
                            $user_num = isset($legs['no_of_pilots']) ? $legs['no_of_pilots'] : '';
                        } elseif ($legs['route_type_id'] == 2) {
                            $multi_user = '';
                            $meeting_location = isset($legs['overnight_comments']) ? $legs['overnight_comments'] : '';
                            $user_num = '';
                        }
						$leg_instruction = isset($legs['leg_instruction']) ? $legs['leg_instruction'] : '';
						$to_meeting = isset($legs['to_meeting_location']) ? $legs['to_meeting_location'] : '';
						
                        $legs_array = array("in_transportation_id" => $id,
                            "in_route_type" => $legs['route_type_id'],
                            "in_multi_user" => (isset($multi_user) && $multi_user != '') ? $multi_user : '0', //added by ghanshyam on 03Dec2014
                            "in_user_num" => (isset($user_num) && $user_num != '') ? $user_num : '0', //added by ghanshyam on 03Dec2014
                            "st_meeting_location" => (isset($meeting_location) && $meeting_location != '') ? $meeting_location : "", //added by ghanshyam on 03Dec2014,	//added by ghanshyam on 03Dec2014
                            "in_created_by" => $this->session->userdata('userid'),
                            //"in_sort_order"			=> isset($legs[$i]['in_sort_order']) ? $legs[$i]['in_sort_order'] : '',
                            "in_sort_order" => $legs['in_sort_order'],
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0",
							"st_leg_instruction" => $leg_instruction, 
							"st_to_meeting_location"=>$to_meeting,
                        );

                        $leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
						
						if($legs['user_id']=='n-d-u')
						{
								$non_doobert_leg_id =  $leg_id;
						}
						
                        if ($legs['route_type_id'] == '1') {

                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['pickup_airport']);
							
							
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
								$loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else {
								$loc = (($legs['pickup_airport'] ? $legs['pickup_airport'] . "," : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . "," : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . "," : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));								
                            }
                            $start = $this->getLatLong($loc);
							
							$pickup_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$pickup_airport = '';								
							}else{
								$pickup_airport = $legs['pickup_airport'];
							}
							
                            $pickup_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "P",
                                "st_street" => $pickup_airport,
                                "st_city" => ($start['city']) ? $start['city'] : $airport_details['st_city'],
                                "st_state" => ($start['state']) ? $start['state'] : $airport_details['st_state'],
                                "st_zip" => $start['postal_code'],
                                "st_country " => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['pickup_airport_clock'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_airport_zone'],
                                "in_deleted" => "0"
                            );
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $start['state'], "st_city" => $start['city']);
                                $this->orgtrasnportation_model->update_airports($legs['pickup_airport'], $data_airports_ar);
                            }
                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['dropoff_airport']);

                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else {
                                $loc = (($legs['dropoff_airport'] ? $legs['dropoff_airport'] . "," : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . "," : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . "," : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));
                            }
                            $finish = $this->getLatLong($loc);
							
							$dropoff_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$dropoff_airport = '';								
							}else{
								$dropoff_airport = $legs['dropoff_airport'];
							}
							
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "D",
								"st_street" => $dropoff_airport,
                                "st_city" => ($finish['city']) ? $finish['city'] : $airport_details['st_city'],
                                "st_state" => ($finish['state']) ? $finish['state'] : $airport_details['st_state'],
                                "st_zip" => $finish['postal_code'],
                                "st_country " => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['dropoff_airport_clock'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_airport_zone'],
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u')
							{
								$this->load->model('user_model');
								$data['arrPlane']			= $this->user_model->get_plane_detail($legs['user_id']);
								if(!empty($data['arrPlane'][0]) && isset($data['arrPlane'][0]['in_pilot_id']))
								{
								//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
								//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
									$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
								   "in_user_id"					=> $legs['user_id'],
								   "in_plane_id"				=> $data['arrPlane'][0]['in_pilot_id'],
								   "in_transportation_leg_id"	=> $leg_id,
								   "dt_created"					=> date("Y-m-d H:i:s"),
								   "in_deleted"					=> 0
								);
								$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
								}	
									$join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
															     "in_user_id" => $legs['user_id'],
												   "in_transportation_leg_id" => $leg_id,
													          "in_created_by" => $this->session->userdata('userid'),
													             "dt_created" => date("Y-m-d H:i:s"),
													             "in_deleted" => 0,
																 "in_joining_transport_mail" =>1,
													);
									$this->orgtrasnportation_model->join_legs($join_data);	
							
							
							$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0",
										);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
						  }
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $finish['state'], "st_city" => $finish['city']);
                                $this->orgtrasnportation_model->update_airports($legs['dropoff_airport'], $data_airports_ar);
                            }
                            #================== Add overview path for legs start===============#	
                            
                              $origin_loc 		= ($legs['pickup_airport'] ?$legs['pickup_airport'].",":"").($start['city']? $start['city'].",":"").($start['state'] ? $start['state'].",":"").($start['postal_code'] ? $start['postal_code']:"").($start['country'] ? ",".$start['country']:"");
                              $dest_loc 	= ($legs['dropoff_airport'] ? $legs['dropoff_airport'].",":"").($finish['city']? $finish['city'].",":"").($finish['state'] ? $finish['state'].",":"").($finish['postal_code'] ? $finish['postal_code']:"").($finish['country']? ",".$finish['country']:"");
                              $routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$legs['route_type_id']);

                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
                              $route_details = array(	"in_transportation_leg_id"	=> $leg_id,
                              "in_transportation_id"		=> $this->session->userdata('transport_id'),
                              "in_route_type"				=> $legs['route_type_id'],
                              "st_legs_details"			=> $routes_miles['route_path'],
                              "fl_distance"				=> $routes_miles['distance'],
                              "in_deleted"				=> "0"
                              );
                              $this->common_model->insert_data("tbl_routes",$route_details);
                              }
                             $this->orgtrasnportation_model->sort_leg_date();
                            #================== Add overview path for legs end===============#
                        } elseif ($legs['route_type_id'] == '0') { //echo "<pre>";print_r($legs);die;
                            $pickup_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "P",
                                "st_street" => $legs['pickup_street'],
                                "st_city " => $legs['pickup_city'],
                                "st_state " => $legs['pickup_state'],
                                "st_zip " => $legs['pickup_zip'],
                                "st_country " => $legs['pickup_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_2_modal'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_zone'],
                                //"st_geometry"				=> @serialize($lat_long),
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "D",
                                "st_street" => $legs['dropoff_street'],
                                "st_city " => $legs['dropoff_city'],
                                "st_state " => $legs['dropoff_state'],
                                "st_zip " => $legs['dropoff_zip'],
                                "st_country " => $legs['dropoff_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_3_modal'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_zone'],
                                //"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
									
									$this->load->model('user_model');
									$data['arrVehicle'] = $this->user_model->get_vehicle_detail($legs['user_id']);
									if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) 
									{
										$leg_vehicle_detail = array("in_transportation_id" => $this->session->userdata('transport_id'),
																	"in_user_id" => $this->session->userdata('userid'),
																	"in_vehicle_id" => $legs['user_id'],
																	"in_transportation_leg_id" => $leg_id,
																	"dt_created" => date("Y-m-d H:i:s"),
																	"in_deleted" => 0
																	);
									$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
									}
								
									$join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0,
													"in_joining_transport_mail"=>1,
													);
									$this->orgtrasnportation_model->join_legs($join_data);
								
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
											);
									$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
									
									

						    }


                            #================== Add overview path for legs start===============#	
                            /*$origin_loc = ($legs['pickup_street'] ? $legs['pickup_street'] . "," : "") . ($legs['pickup_city'] ? $legs['pickup_city'] . "," : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . "," : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? "," . $legs['pickup_country'] : "");
                            $dest_loc = ($legs['dropoff_street'] ? $legs['dropoff_street'] . "," : "") . ($legs['dropoff_city'] ? $legs['dropoff_city'] . "," : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . "," : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? "," . $legs['dropoff_country'] : "");*/
                            
							$origin_loc =  ($legs['pickup_city'] ? $legs['pickup_city'] . "," : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . "," : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? "," . $legs['pickup_country'] : "");
                            $dest_loc = 	($legs['dropoff_city'] ? $legs['dropoff_city'] . "," : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . "," : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? "," . $legs['dropoff_country'] : "");
							
							$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc), urlencode($dest_loc), "", $legs['route_type_id']);
                            //echo "Route leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                            if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                $route_details = array("in_transportation_leg_id" => $leg_id,
                                    "in_transportation_id" => $this->session->userdata('transport_id'),
                                    "in_route_type" => $legs['route_type_id'],
                                    "st_legs_details" => $routes_miles['route_path'],
                                    "fl_distance" => $routes_miles['distance'],
                                    "in_deleted" => "0"
                                );
                                $this->common_model->insert_data("tbl_routes", $route_details);
                            }
							$this->orgtrasnportation_model->sort_leg_date();
                            #================== Add overview path for legs end===============#
                        } elseif ($legs['route_type_id'] == '2') {

                            $pickup_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "O",
                                "st_street" => $legs['o_pickup_street'],
                                "st_city " => $legs['o_pickup_city'],
                                "st_state " => $legs['o_pickup_state'],
                                "st_zip " => $legs['o_pickup_zip'],
                                "st_country " => $legs['o_pickup_country'],
                                //"dt_start_time" => date('Y-m-d H:i:s'),
                                //"st_timezone"				=> $legs[$i]['pickup_zone'],
                                //"st_geometry"				=> @serialize($lat_long),
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
									
									$this->load->model('user_model');
									$join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0,
													"in_joining_transport_mail"=>1,
													);
									$this->orgtrasnportation_model->join_legs($join_data);
								
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
											);
									$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
									
									

						    }
                        }
                    }
                    if ($legs['leg_id'] != '' && $legs['update_leg'] != 'delete') {
						$leg_id = $legs['leg_id'];
						if($legs['user_id']=='n-d-u')
						{
								$non_doobert_leg_id =  $leg_id;
						}
                        $no_of_drivers_pilots = isset($legs['no_of_drivers']) ? $legs['no_of_drivers'] : '';
                       
                        if ($legs['route_type_id'] == 0) {
                            $multi_user = isset($legs['multiple_drivers']) ? $legs['multiple_drivers'] : $legs['multiple_drivers_pilots'];
                            $meeting_location = isset($legs['meeting_location']) ? $legs['meeting_location'] : '';
                            $user_num = isset($legs['no_of_drivers']) ? $legs['no_of_drivers'] : '';
                        } elseif ($legs['route_type_id'] == 1) {
                            $multi_user = isset($legs['multiple_pilots']) ? $legs['multiple_pilots'] : $legs['multiple_drivers_pilots'];
                            $meeting_location = isset($legs['pilot_meeting_location']) ? $legs['pilot_meeting_location'] : '';
                            $user_num = isset($legs['no_of_pilots']) ? $legs['no_of_pilots'] : '';
                        } elseif ($legs['route_type_id'] == 2) {
                            $multi_user = '';
                            $meeting_location = isset($legs['overnight_comments']) ? $legs['overnight_comments'] : '';
                            $user_num = '';
                        }
						
						$leg_instruction = isset($legs['leg_instruction']) ? $legs['leg_instruction'] : '';
						 $to_meeting = isset($legs['to_meeting_location']) ? $legs['to_meeting_location'] : '';
						
                        $array_update = array("in_multi_user" => (isset($multi_user) && $multi_user != '') ? $multi_user : '0', //added by ghanshyam on 03Dec2014
                            "in_user_num" => (isset($user_num) && $user_num != '') ? $user_num : '0', //added by ghanshyam on 03Dec2014
                            //"in_sort_order" => isset($legs[$i]['in_sort_order']) ? $legs[$i]['in_sort_order'] : '',
                            "in_sort_order" => $legs['in_sort_order'],
                            "st_meeting_location" => $meeting_location,
							"st_leg_instruction"  =>  $leg_instruction,
							"st_to_meeting_location" => $to_meeting); //added by ghanshyam on 03Dec2014);	
                        $this->orgtrasnportation_model->update_legs($array_update, $legs['leg_id']);
                        //echo 'data updated';die;
                        if ($legs['route_type_id'] == '1') {
                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['pickup_airport']);
							//print_r($airport_details);exit;
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else {
                                $loc = (($legs['pickup_airport'] ? $legs['pickup_airport'] . "," : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . "," : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . "," : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));
                            }

                            $start = $this->getLatLong($loc);
							$pickup_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$pickup_airport = '';								
							}else{
								$pickup_airport = $legs['pickup_airport'];
							}
                            $pickup_array = array("st_leg_type" => "P",
                                //"st_street" => $legs[$i]['pickup_airport'],
								"st_street" => $pickup_airport,
                                "st_city" => ($start['city']) ? $start['city'] : $airport_details['st_city'],
                                "st_state" => ($start['state']) ? $start['state'] : $airport_details['st_state'],
                                "st_zip" => $start['postal_code'],
                                "st_country " => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['pickup_airport_clock'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_airport_zone'],
                                "in_deleted" => "0"
                            );
                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['dropoff_airport']);
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $start['state'], "st_city" => $start['city']);
                                $this->orgtrasnportation_model->update_airports($legs['pickup_airport'], $data_airports_ar);
                            }
                            //$this->orgtrasnportation_model->add_legs_details($pickup_array);
                            $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs['leg_id'], "P");
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else {
                                $loc = (($legs['dropoff_airport'] ? $legs['dropoff_airport'] . "," : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . "," : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . "," : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));
                            }
                            $finish = $this->getLatLong($loc);
                            //print_r($finish);exit;
							$dropoff_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$dropoff_airport = '';								
							}else{
								$dropoff_airport = $legs['dropoff_airport'];
							}
                            $dropoff_array = array("st_leg_type" => "D",
                                //"st_street" => $legs[$i]['dropoff_airport'],
								"st_street" => $dropoff_airport,
                                "st_city" => ($finish['city']) ? $finish['city'] : $airport_details['st_city'],
                                "st_state" => ($finish['state']) ? $finish['state'] : $airport_details['st_state'],
                                "st_zip" => $finish['postal_code'],
                                "st_country " => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['dropoff_airport_clock'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_airport_zone'],
                                "in_deleted" => "0"
                            );
                            //$this->orgtrasnportation_model->add_legs_details($dropoff_array);
                            $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs['leg_id'], "D");
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $finish['state'], "st_city" => $finish['city']);
                                $this->orgtrasnportation_model->update_airports($legs['pickup_airport'], $data_airports_ar);
                            }
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u')
							{
								$this->load->model('user_model');
								if($legs['user_id']!=$legs['deleted_user_id'])
								{	
									 	
									if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
									{
										$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
										$this->db->where('in_user_id',$legs['deleted_user_id']);
										$this->db->where('in_transportation_leg_id',$leg_id);
										$this->db->where('in_deleted',0);
										$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
									}
									
											if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
											
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);	
											}
									
												$data['arrPlane']			= $this->user_model->get_plane_detail($legs['user_id']);
											if(!empty($data['arrPlane'][0]) && isset($data['arrPlane'][0]['in_pilot_id']))
											{
												$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
																			  "in_user_id"	=> $legs['user_id'],
																			 "in_plane_id"	=> $data['arrPlane'][0]['in_pilot_id'],
																"in_transportation_leg_id"	=> $leg_id,
																			  "dt_created"	=> date("Y-m-d H:i:s"),
																			  "in_deleted"	=> 0
																	);
												$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
											}	
											$join_data = array("in_transportation_id"  => $this->session->userdata('transport_id'),
																		"in_user_id"   => $legs['user_id'],
															"in_transportation_leg_id" => $leg_id,
																	"in_created_by"    => $this->session->userdata('userid'),
																		"dt_created"   => date("Y-m-d H:i:s"),
													             "in_deleted" => 0,
																 "in_joining_transport_mail" =>  1,
															);
									$this->orgtrasnportation_model->join_legs($join_data);	
							
							
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
															"in_transportation_id" => $this->session->userdata('transport_id'),
																	  "in_user_id" => $legs['user_id'],
																		 "in_type" => 12,
															 "in_transport_leg_id" => $leg_id,
																  "in_modified_by" => $legs['user_id'],
																	  "dt_created" => date("Y-m-d H:i:s"),
																	  "in_deleted" => "0",
															);
									$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
								}
							} else {
									if((isset($legs['volunteer_name']) && $legs['volunteer_name']=='')  || $legs['user_id']=='n-d-u')
									{
									   if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->where('in_deleted',0);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
											
										} else {	
											if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
													
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);		
												
											}
										}	
									} /*else {
										if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
										
										}
									}*/
							}

                            #================== Add overview path for legs start===============#	

                            $origin_loc = ($legs['pickup_airport'] ? $legs['pickup_airport'] . "," : "") . ($start['city'] ? $start['city'] . "," : "") . ($start['state'] ? $start['state'] . "," : "") . ($start['postal_code'] ? $start['postal_code'] : "") . ($start['country'] ? "," . $start['country'] : "");
                            $dest_loc = ($legs['dropoff_airport'] ? $legs['dropoff_airport'] . "," : "") . ($finish['city'] ? $finish['city'] . "," : "") . ($finish['state'] ? $finish['state'] . "," : "") . ($finish['postal_code'] ? $finish['postal_code'] : "") . ($finish['country'] ? "," . $finish['country'] : "");
                            $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc), urlencode($dest_loc), "", $legs['route_type_id']);
                            //echo "Avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                            $route_details = $this->orgtrasnportation_model->get_legs_path($legs['leg_id']);
                            //echo "<pre>";print_r($route_details);die;
                            if (count($route_details) > 0) {
                                if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                    $route_details = array("in_transportation_leg_id" => $legs['leg_id'],
                                        "in_transportation_id" => $this->session->userdata('transport_id'),
                                        "in_route_type" => $legs['route_type_id'],
                                        "st_legs_details" => $routes_miles['route_path'],
                                        "fl_distance" => $routes_miles['distance'],
                                        "in_deleted" => "0"
                                    );
                                    $this->orgtrasnportation_model->update_legs_path($route_details, $legs['leg_id']);
                                }
                            } else {
                                if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                    $route_details = array("in_transportation_leg_id" => $legs['leg_id'],
                                        "in_transportation_id" => $this->session->userdata('transport_id'),
                                        "in_route_type" => $legs['route_type_id'],
                                        "st_legs_details" => $routes_miles['route_path'],
                                        "fl_distance" => $routes_miles['distance'],
                                        "in_deleted" => "0"
                                    );
                                    $this->common_model->insert_data("tbl_routes", $route_details);
                                }
                            }
							$this->orgtrasnportation_model->sort_leg_date();
                            #================== Add overview path for legs end===============#
                        } elseif ($legs['route_type_id'] == '0') {
                            $pickup_array = array("st_leg_type" => "P",
                                "st_street" => $legs['pickup_street'],
                                "st_city " => $legs['pickup_city'],
                                "st_state " => $legs['pickup_state'],
                                "st_zip " => $legs['pickup_zip'],
                                "st_country " => $legs['pickup_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_2_modal'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_zone'],
                                //"st_geometry"				=> @serialize($lat_long),
                                "in_deleted" => "0"
                            );
                            //$this->orgtrasnportation_model->add_legs_details($pickup_array);
                            $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs['leg_id'], "P");

                            $dropoff_array = array("st_leg_type" => "D",
                                "st_street" => $legs['dropoff_street'],
                                "st_city " => $legs['dropoff_city'],
                                "st_state " => $legs['dropoff_state'],
                                "st_zip " => $legs['dropoff_zip'],
                                "st_country " => $legs['dropoff_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_3_modal'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_zone'],
                                //"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
                                "in_deleted" => "0"
                            );
                            //$this->orgtrasnportation_model->add_legs_details($dropoff_array);
                            $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs['leg_id'], "D");

							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
								$this->load->model('user_model');
								if($legs['user_id']!=$legs['deleted_user_id'])
								{	
									 	
									if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
									{
										$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
										$this->db->where('in_user_id',$legs['deleted_user_id']);
										$this->db->where('in_transportation_leg_id',$leg_id);
										$this->db->where('in_deleted',0);
										$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
									}
									
									if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
									{	
											$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
											$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
											
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
											$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);	
									}	
									
									
							    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($legs['user_id']);
								if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) 
								{
										$leg_vehicle_detail = array("in_transportation_id" => $this->session->userdata('transport_id'),
																	"in_user_id" => $this->session->userdata('userid'),
																	"in_vehicle_id" => $legs['user_id'],
																	"in_transportation_leg_id" => $legs['leg_id'],
																	"dt_created" => date("Y-m-d H:i:s"),
																	"in_deleted" => 0
																	);
									$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
								}
								
							     $join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $legs['leg_id'],
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0,
													"in_joining_transport_mail"=>1,
													);
								$this->orgtrasnportation_model->join_legs($join_data);
								
								 $arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
										);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
								}	
						    } else 
							{
									if((isset($legs['volunteer_name']) && $legs['volunteer_name']=='') || $legs['user_id']=='n-d-u')
									{
									   if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->where('in_deleted',0);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
										
										} else {	
											if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
												
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);		
											}
										}	
									} /*else {
										if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
											
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
											
										}
									}*/
							}

							
                            #================== Add overview path for legs start===============#	

                            /*$origin_loc = ($legs['pickup_street'] ? $legs['pickup_street'] . "," : "") . ($legs['pickup_city'] ? $legs['pickup_city'] . "," : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . "," : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? "," . $legs['pickup_country'] : "");
                            $dest_loc = ($legs['dropoff_street'] ? $legs['dropoff_street'] . "," : "") . ($legs['dropoff_city'] ? $legs['dropoff_city'] . "," : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . "," : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? "," . $legs['dropoff_country'] : "");*/
							
							
                            $origin_loc = ($legs['pickup_city'] ? $legs['pickup_city'] . "," : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . "," : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? "," . $legs['pickup_country'] : "");
                            $dest_loc 	= ($legs['dropoff_city'] ? $legs['dropoff_city'] . "," : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . "," : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? "," . $legs['dropoff_country'] : "");
                       
							
                            $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc), urlencode($dest_loc), "", $legs['route_type_id']);

                            //echo "Route leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                            $route_details = $this->orgtrasnportation_model->get_legs_path($legs['leg_id']);
                            //echo "<pre>";print_r(count($route_details));die;
                            if (count($route_details) > 0) {
                                if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                    $route_details = array("in_transportation_leg_id" => $legs['leg_id'],
                                        "in_transportation_id" => $this->session->userdata('transport_id'),
                                        "in_route_type" => $legs['route_type_id'],
                                        "st_legs_details" => $routes_miles['route_path'],
                                        "fl_distance" => $routes_miles['distance'],
                                        "in_deleted" => "0"
                                    );

                                    $this->orgtrasnportation_model->update_legs_path($route_details, $legs['leg_id']);
                                }
                            } else {
                                if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                    $route_details = array("in_transportation_leg_id" => $legs['leg_id'],
                                        "in_transportation_id" => $this->session->userdata('transport_id'),
                                        "in_route_type" => $legs['route_type_id'],
                                        "st_legs_details" => $routes_miles['route_path'],
                                        "fl_distance" => $routes_miles['distance'],
                                        "in_deleted" => "0"
                                    );
                                    $this->common_model->insert_data("tbl_routes", $route_details);
                                }
                            }
							$this->orgtrasnportation_model->sort_leg_date();
                            #================== Add overview path for legs end===============#
                        } elseif ($legs['route_type_id'] == '2') {

                            $pickup_array = array("in_transportation_leg_id" => $legs['leg_id'],
                                //"st_leg_type" 				=> "O",
                                "st_street" => $legs['o_pickup_street'],
                                "st_city " => $legs['o_pickup_city'],
                                "st_state " => $legs['o_pickup_state'],
                                "st_zip " => $legs['o_pickup_zip'],
                                "st_country " => $legs['o_pickup_country'],
                                //"dt_start_time"			=> date('Y-m-d H:i:s'),
                                //"st_timezone"				=> $legs[$i]['pickup_zone'],
                                //"st_geometry"				=> @serialize($lat_long),
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs['leg_id'], "O");

							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
								if($legs['user_id']!=$legs['deleted_user_id'])
								{	
									if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
									{
										$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
										$this->db->where('in_user_id',$legs['deleted_user_id']);
										$this->db->where('in_transportation_leg_id',$leg_id);
										$this->db->where('in_deleted',0);
										$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
									}
									
									if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
									{	
											$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
											$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
											
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
											$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);	
									}	
									$this->load->model('user_model');
									$join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0,
													"in_joining_transport_mail"=>1,
													);
									$this->orgtrasnportation_model->join_legs($join_data);
								
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
											);
									$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
									
								}	

						    } else 
							{
								if((isset($legs['volunteer_name']) && $legs['volunteer_name']=='') || $legs['user_id']=='n-d-u')
									{
									   if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->where('in_deleted',0);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
											
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
										
										} else {	
											if($legs['non_doobert_userid'] != '0' && $legs['non_doobert_userid'] != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs['non_doobert_userid']);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
												
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs['leg_id'],
																	   "in_non_doobert_user_id" => $legs['non_doobert_userid'],									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);		
											}
										}	
									} /*else {
										if(isset($legs['deleted_user_id']) && $legs['deleted_user_id']!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs['deleted_user_id']);
											$this->db->where('in_transportation_leg_id',$leg_id);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
											
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs['deleted_user_id'],
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
										
										}
									}*/
							}	
                            
                        }
                    } 
					else {
                        if ($legs['leg_id'] != '') {
						
							$parrt_cep = $this->orgtrasnportation_model->get_legs_participants($legs['leg_id']);
                            if ($parrt_cep > 0) {
                                $distance = $this->orgtrasnportation_model->get_legs_path($legs['leg_id']);
                                if (isset($distance['fl_distance']) && $distance['fl_distance'] != '') {
                                    $this->orgtrasnportation_model->update_distance($distance['fl_distance']);
                                } else {
                                    if ((isset($legs['pickup_airport']) && $legs['pickup_airport'] != '') && (isset($legs['dropoff_airport']) && $legs['dropoff_airport'] != '')) {
                                        $pickup_avi = $this->orgtrasnportation_model->get_airport_details($legs['pickup_airport']);
                                        $dropoff_avi = $this->orgtrasnportation_model->get_airport_details($legs['dropoff_airport']);

                                        if (isset($pickup_avi['st_latitude']) && isset($pickup_avi['st_longitude']) && $pickup_avi['st_latitude'] != '' && $pickup_avi['st_longitude'] != '') {
                                            $origin = $pickup_avi['st_latitude'] . "," . $pickup_avi['st_longitude'];
                                        } else {
                                            $origin = ($legs['pickup_street'] ? $legs['pickup_street'] . "," : "") . ($legs['pickup_city'] ? $legs['pickup_city'] . "," : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . "," : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? "," . $legs['pickup_country'] : "");
                                        }
                                        if (isset($dropoff_avi['st_latitude']) && isset($dropoff_avi['st_longitude']) && $dropoff_avi['st_latitude'] != '' && $dropoff_avi['st_longitude'] != '') {
                                            $destinations = $dropoff_avi['st_latitude'] . "," . $dropoff_avi['st_longitude'];
                                        } else {
                                            $destinations = ($legs['dropoff_street'] ? $legs['dropoff_street'] . "," : "") . ($legs['dropoff_city'] ? $legs['dropoff_city'] . "," : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . "," : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? "," . $legs['dropoff_country'] : "");
                                        }

                                        $total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations), "", $legs['route_type_id']);
                                        $total_miles['distance'];
                                        $this->orgtrasnportation_model->update_distance($total_miles);
                                    }
                                }
                            }
                            $this->orgtrasnportation_model->delete_legs_transport($legs['leg_id']);
                        }
                    }
			}		
					if($non_doobert_leg_id!='')
						echo $non_doobert_leg_id;
					else		
						echo 'update';
	}
     
    function update_sort_order_legs()
	{
		$legs = json_decode($this->input->post('data_val'),true);
                $legs = array_values(array_filter($legs));
				
				
                $legs_sorting = array();
                foreach ($legs as $leg_val) {
                    $legs_sorting[] = isset($leg_val['in_sort_order']) ? $leg_val['in_sort_order'] : '';
						
                }
				$sort_order = 0;
                for ($i = 0; $i < count($legs); $i++) {
					$sort_order = (!empty($legs_sorting[$i]))?$legs_sorting[$i]:$i+1;
					if ($legs[$i]['leg_id'] != '' && $legs[$i]['update_leg'] != 'delete') 
					{ 
                        $array_update = array("in_sort_order" => $sort_order); 	
                        $this->orgtrasnportation_model->update_legs($array_update, $legs[$i]['leg_id']);
					}		
			}
			
			echo "updated";
	}
	
	function get_loc_details()
	{
		$get_airport_details = $this->input->post('loc');
		$airport_details = $this->orgtrasnportation_model->get_airport_details($get_airport_details);
         if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                 $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
				 $finish = $this->getLatLong($loc);
				echo json_encode($finish);
						
         } else {
			 $finish = 'fail';
			 echo json_encode($finish);
		 }
		
		//echo $finish;
	}
	
	function delete_transport_from_routes_copy()
	{
		$id = $_POST['transport_id'];
		$status = $this->orgtrasnportation_model->delete_transport_from_routes_listing($id);
		echo $status;
	}
	
	function get_video_image($src)
	{
		$url_pieces = explode('/', $src);
		$thumbnail = '';
		if ( $url_pieces[2] == 'player.vimeo.com' ) { // If Vimeo
			$id = $url_pieces[4];
			
			$url = "http://vimeo.com/api/v2/video/".$id.".json";
			//curl request
			$curl = curl_init();
			curl_setopt($curl, CURLOPT_URL, $url);
			curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
			$curlData = curl_exec($curl);
			curl_close($curl);
			//echo '<pre/>';
			//print_r(current(json_decode($curlData, true)));
			//decoding json structure into array
			//return current(json_decode($curlData, true));
			$video_data = current(json_decode($curlData, true));
			if(isset($video_data) && !empty($video_data))
			{
				//echo 'thumbnail_medium: '.$video_data['thumbnail_medium'];
				$thumbnail = $video_data['thumbnail_medium'];
			}
			
			//$hash = unserialize(file_get_contents('http://vimeo.com/api/v2/video/' . $id . '.php'));			
			//$thumbnail = $hash[0]['thumbnail_medium'];
			
		} elseif ( $url_pieces[2] == 'www.youtube.com' ) { // If Youtube
			$extract_id = explode('?', $url_pieces[4]);
			$id = trim($extract_id[0]);
			//$thumbnail = 'http://img.youtube.com/vi/' . $id . '/mqdefault.jpg';
			//$thumbnail = 'http://img.youtube.com/vi/'.$id.'/1.jpg';
			$thumbnail = 'http://i.ytimg.com/vi/'.$id.'/1.jpg';
		}
		return $thumbnail;
	}
	
	 public function delete_transport_story($story_id,$created_by_id) {
	
		$this->orgtrasnportation_model->delete_transport_story($story_id,$created_by_id);
        
		/*//code to delete files in the rackspace starts
		if(isset($file_name) && $file_name != '')
		{
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($file_name);
		}
		//code to delete files in the rackspace end*/
		$this->session->set_userdata('attach_photo_auto_login',1);
		$this->session->set_flashdata('rescue_story', 'Transportation story has been deleted successfully.');
        redirect($this->config->item('base_url') . "org-transportation-scheduled/" . $this->session->userdata('transport_id') . "/");
    }
	
	public function delete_confirm_transport_story($story_id,$created_by_id) {
	
		$this->orgtrasnportation_model->delete_transport_story($story_id,$created_by_id);
        
		/*//code to delete files in the rackspace starts
		if(isset($file_name) && $file_name != '')
		{
			$this->load->library('opencloud');
			$this->opencloud->set_container('appcdn');
			$this->opencloud->delete_object($file_name);
		}
		//code to delete files in the rackspace end*/
		
		//$this->session->set_flashdata('message_sys', 'Transportation story has been deleted successfully.');
		$this->session->set_userdata('attach_photo_auto_login',1);	
		$this->session->set_flashdata('rescue_story', 'Transportation story has been deleted successfully.');
        redirect($this->config->item('base_url') . "org-confirm-transport/" . $this->session->userdata('transport_id') . "/");
    }
	
	public function get_rescue_story() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$get_rescue_story  = $this->orgtrasnportation_model->get_rescue_story($this->input->post('story_id'));
		echo json_encode($get_rescue_story);
		//echo $data; die;
	}
	
	function submitted_routing_request()
	{
		$routing_status = $this->common_model->transport_routing_enable($this->session->userdata('userid'));
		if(!$this->session->userdata('userid') || $routing_status!='2')
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		 if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
		$this->load->library('pagination');
        $rec_per_page = 10;
		$routing_data = $this->orgtrasnportation_model->get_all_requesting_router($limit,$rec_per_page);
		$totalrecord = $this->orgtrasnportation_model->get_all_requesting_router_count();
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		//$config = array();
        $config['base_url'] = base_url().'org_transportation/submitted_routing_request/';
        //$config['base_url'] = $config['base_url'] . $this->session->userdata('transport_id') . '/';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        //$config['file_path'] = $this->config->item('file_path');
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Previous';
        $config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        $config['next_tag_open'] = '<li class="next">';
        $config['next_tag_close'] = '</li>';

        $config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

        $config['cur_tag_open'] = '<li class="active"><a href="">';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
        $data['pagination'] = $this->pagination->create_links();
        $data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
        // ------------------------ PAGINATION ENDS HERE ------------------------------
		
		$data['routing_data'] = $routing_data;
		$this->load->view('transportation/submitted-routing-request', $data);
	}
	
	function delete_requested_transport($id)
	{
		$data = array('in_user_id'=>$this->session->userdata('userid'),
			   'in_transport_id' =>$id,
			   'dt_created'  => date('Y-m-d H:i:s'),
			   'dt_modified' => date('Y-m-d H:i:s'),
		      );
		$insert_id = $this->db->insert('tbl_trans_rout_deleted',$data);
		$this->session->set_flashdata('message', 'Transport deleted successfully');
		redirect($this->config->item('base_url') . "org_transportation/submitted_routing_request");

		//'http://crystal99/doobert-v3/';
	}
	
	function get_routing_details()
	{
		$data = array();
		$id = $_POST['id'];
		$routing_data = $this->orgtrasnportation_model->get_transport_requesting_router($id);
		echo json_encode($routing_data);
	}
	
	function transport_assign_me()
	{
		$routing_status = $this->common_model->transport_routing_enable($this->session->userdata('userid'));
		if(!$this->session->userdata('userid') || $routing_status =='0')
		{
			redirect($this->config->item('base_url'));
		}
		$id = $_POST['id'];
		$transport_details = $this->orgtrasnportation_model->get_transport_details($id);
		if((!empty($transport_details)) && ($transport_details[0]['accTcid']==0 || $transport_details[0]['accTcid']== ''))
		{	
			if($transport_details[0]['in_airline_transport']=='0' && ($transport_details[0]['in_status']==4) && ($transport_details[0]['st_selected_trans']==''))
			{
				$details = array('accTcid'=>$this->session->userdata('userid'),'dt_modified'=>date("Y-m-d H:i:s"),'in_revised_routing_notification'=>0,'in_selected_type'=>'1');
			} else {
				$details = array('accTcid'=>$this->session->userdata('userid'),'dt_modified'=>date("Y-m-d H:i:s"),'in_revised_routing_notification'=>0);
			}	
			$routing_data = $this->orgtrasnportation_model->update_transport_detail_by_id($details,$id);
			$user_profile = $this->common_model->get_user_profile($this->session->userdata('userid'));
			if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
			{	
							$transport_id = $transport_details[0]['in_transportation_id'];
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
							$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
							$owner_name = $transport_details[0]['st_display_name'];	
							//$user_name = explode(" ",$transport_details[0]['st_display_name']);
							$email_address = $user_profile[0]['st_email'];
							$phone_no	   = $user_profile[0]['st_primary_phone'];
							
							$first_name_link = str_replace(' ', '',$user_profile[0]['st_display_name']);
							$last_name_link = str_replace(' ', '',$user_profile[0]['st_last_name']);
							
							$user_link_name = '';
							$user_link_name	.=	"<a href='".base_url()."user-".$user_profile[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
							$user_link_name	.=	$user_profile[0]['st_display_name'].' '.$user_profile[0]['st_last_name'];
							$user_link_name	.=	"</a>";
							
							/*$user_id         = $transport_details[0]['in_user_id'];*/
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("98");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
							if(isset($q) && !empty($q)){					   		
									foreach($q as $qr)
									{		 
										  
										if(!empty($qr['st_image']))
										{
												$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
												$imgtitle   =   $qr['st_banner_name']; 				
												$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

												alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
											  
											  
										}
										else
										{
											   $donation='';								 
										}							  
											
									}
								}			
								   
							   else
							   {
								  $donation='';
							   }
							if (isset($email_details[0]['st_email_body'])) {
								$templete = $email_details[0]['st_email_body'];
								
								$templete = str_replace("##user##",$transport_details[0]['st_display_name'], $templete);
								$templete = str_replace("##TC_NAME##",$user_link_name, $templete);
								$templete = str_replace("##TC_EMAIL##",$email_address, $templete);
								$templete = str_replace("##DONATION##",$donation,$templete);
								if(isset($phone_no) && !empty($phone_no))
								{	
									$templete = str_replace("##TC_Phone##",$phone_no, $templete);
								} else {
									$templete = str_replace("##TC_Phone##",'', $templete);	
								}
								$templete =	str_replace("##transport_number##",$transport_link, $templete);
								$templete = str_replace("##USER_NAME##",$transport_details[0]['st_display_name'],$templete);

								// added by sadique								
								$org_details 	= $this->common_model->get_single_org_details($transport_details[0]['in_organization_id']);
								
								$this->session->set_userdata('transport_id',$transport_details[0]['in_transportation_id']);
								
								

								//print_r($org_details); die;
								$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
								if($share_template == 1)
								{
									$main_image = $this->generate_fb_image_option1();
								} 		
								
								else if($share_template == 5){						
									$main_image = $this->generate_fb_image_option5();						
								}
								else if($share_template == 6){						
									$main_image = $this->generate_fb_image_option6();						
								}
								else if($share_template == 7){						
									$main_image = $this->generate_fb_image_option7();						
								}
								else if($share_template == 8){						
									$main_image = $this->generate_fb_image_option8();						
								}		
								
								else {
									$main_image = $this->generate_fb_image($share_template);
								}	
				
								$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
								if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}
								
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $transport_details[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$reply_to = $transport_details[0]['st_email'];
								
								$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($transport_details[0]['in_trans_coods_id']).'/'.$this->common_function->encode_base64($to),$message);
		
								$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($transport_details[0]['in_trans_coods_id']).'/'.$this->common_function->encode_base64($to),$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
					
								if($transport_details[0]['st_email'] != $transport_details[0]['stSendEmail'])
								{
									$templete = $email_details[0]['st_email_body'];
									$templete = str_replace("##user##",$transport_details[0]['stSendNm'], $templete);
									$templete = str_replace("##TC_NAME##",$user_link_name, $templete);
									$templete = str_replace("##TC_EMAIL##",$email_address, $templete);
									if(isset($phone_no) && !empty($phone_no))
									{	
										$templete = str_replace("##TC_Phone##",$phone_no, $templete);
									} else {
										$templete = str_replace("##TC_Phone##",'', $templete);	
									}
									$templete =	str_replace("##transport_number##",$transport_link, $templete);
									$templete = str_replace("##USER_NAME##",$transport_details[0]['stSendNm'],$templete);	
									
									
									// added by sadique
									//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									
									$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
									{
										$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
									} else {
										$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
									}								
									
									$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								
									$strMail = $templete;
									//$to = 'rupesh@pulsesolutions.net';
									$to = $transport_details[0]['stSendEmail'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									//$reply_to = $transport_details[0]['st_email'];
								
									$message = str_replace("##change_to_daily_digest##",'',$message);
									$message = str_replace("##DONATION##",$donation,$message);
		
									$message = str_replace("##unsubscribe_url##",'',$message);
								
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
					
								}	
					
					}
			}
				
			if($transport_details[0]['in_airline_transport']== 1)
			{
				$data['base_url'] = base_url().'edit-airline-transport?id='.$id;
			} else {	
				$data['base_url'] = base_url().'org-edit-transport?id='.$id;
			}
			$data['status']	= 1;
		} else 
		{	
			$data['msg'] = 'Transport '.$orgcode.$transport_details[0]['in_transportation_id'].' has been assigned to other user';
			$data['status']	= 2;
		}
		echo json_encode($data);	
	}
	
	function request_assigned_to_me()
	{
		/*$data = array();
		$routing_data = $this->orgtrasnportation_model->get_all_assigned_router();
		$data['routing_data'] = $routing_data;*/
		$routing_status = $this->common_model->transport_routing_enable($this->session->userdata('userid'));
		if(!$this->session->userdata('userid') || $routing_status =='0')
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		 if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
		$this->load->library('pagination');
        $rec_per_page = 10;
		$routing_data = $this->orgtrasnportation_model->get_all_assigned_router($limit,$rec_per_page);
		$totalrecord = $this->orgtrasnportation_model->get_all_assigned_router_count();
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		//$config = array();
        $config['base_url'] = base_url().'org_transportation/request_assigned_to_me/';
        //$config['base_url'] = $config['base_url'] . $this->session->userdata('transport_id') . '/';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        //$config['file_path'] = $this->config->item('file_path');
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Previous';
        $config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        $config['next_tag_open'] = '<li class="next">';
        $config['next_tag_close'] = '</li>';

        $config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

        $config['cur_tag_open'] = '<li class="active"><a href="">';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
        $data['pagination'] = $this->pagination->create_links();
        $data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
        // ------------------------ PAGINATION ENDS HERE ------------------------------
		
		$data['routing_data'] = $routing_data;
		
		$this->load->view('transportation/request-assigned-to-me', $data);
	}
	
	
	function delete_assigned_transport($id)
	{
		$user_name = $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$user_email = $this->session->userdata('email');
		$details = array('accTcid'=>0,'dt_modified'=>date("Y-m-d H:i:s"),'in_revised_routing_notification'=>1);
		$routing_data = $this->orgtrasnportation_model->update_transport_detail_by_id($details,$id);
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$email_details = $this->common_model->get_email_containt("122");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if (isset($email_details[0]['st_email_body'])) 
		{				
			$this->load->library('email');
			$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
			$templete = $email_details[0]['st_email_body'];
			$templete = str_replace("##user_details##",$user_name.'('.$user_email.')', $templete);
			$templete = str_replace("##transport_id##",$orgcode.$id, $templete);
			$templete = str_replace("##DONATION##",$donation, $templete);
			$strMail = $templete;
					//$to = $get_email_address;
					$subject = $email_details[0]['st_email_subject'];				
					$category = $email_details[0]['st_category'];	
					$message = $strMail;
					$admin_list = $this->common_model->get_admin_list();
					if(count($admin_list) >0 )
					{
						foreach($admin_list as $adminkey => $adminuser)
						{
											$this->common_function->send_mail($this->email,$adminuser['email_address'], $subject, $message, $this->config->item('admin_email_from'), $cc = '', "Doobert.com", $this->email, $category);	
						}
					}	
		}
		$this->session->set_flashdata('message', 'You have been unassigned from this  Transport');
		redirect($this->config->item('base_url')."org_transportation/request_assigned_to_me");
		
	}
	
	function get_all_organization() 
	{
        $data_val = $this->input->get('term');
        $organization_name = $this->orgtrasnportation_model->get_all_organization_data($data_val);
        echo json_encode($organization_name);
    }
	
	function publish_new_transport()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		$data['organizationid']	=	$this->session->userdata('org_id');
	
		$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if(isset($user_permission) && !empty($user_permission)) 
		{
			$data['make_array_user'] = unserialize($user_permission);
		}
	
		//$data['transportation_list'] = $this->orgtrasnportation_model->get_all_draft_transportation(1,0,$this->session->userdata('userid'),$this->session->userdata('org_id'));
	
		$this->load->view('publish-new-transport',$data);	
	}
	
	function select_transport()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		$trasport_id 			= $this->uri->segment(2);
		if($trasport_id!='' || $trasport_id>'0')
		{
			$this->session->set_userdata('transport_id',$trasport_id );
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('transport_steps'))
		{ 
			if($this->session->userdata('transport_steps')==1)
				redirect($this->config->item('base_url') . "org-add-transport"); 
			if($this->session->userdata('transport_steps')==3)
				redirect($this->config->item('base_url') . "transport-create-legs"); 
			if($this->session->userdata('transport_steps')==4)
				redirect($this->config->item('base_url') . "org_transportation/transport_thank_you/");
		} else {
				redirect($this->config->item('base_url') . "org-add-transport"); 
		}
		
		$data = array();
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$date1				= date_create($transport_details[0]['dt_pickup_date']);
		$date2				= date_create($transport_details[0]['dt_target']);
		$transport_diff		= date_diff($date1,$date2);
		$date_diff          = ($transport_diff->days!=0 && isset($transport_diff))?$transport_diff->days+1:0+1;
		$data['date_diff']  = $date_diff;
		$data['transport_details'] = $transport_details[0];
		/*echo "<pre>"; print_r($transport_details[0]); echo "</pre>";
		die;*/
		if($this->input->post('action') && $this->input->post('action')=='trans_sub')
		{
			$post_transport_type = '';
			$transport_select = '';
			if($this->input->post('transport_select'))
			{
				$transport_select = $this->input->post('transport_select');
			}
			if($transport_select=='')
			{
				if($this->input->post('transport_type'))
				{	
					$post_transport_type = $this->input->post('transport_type');
				} else {
					$post_transport_type = 'U';
				}
			} else if($transport_select!='')
			{
				$this->orgtrasnportation_model->update_transport_details(array("in_selected_type"=>0,"st_selected_trans"=>$transport_select));
			}	
	
			
			if($post_transport_type == 'U')
			{
				$this->orgtrasnportation_model->update_transport_details(array("st_trans_type"=>$post_transport_type,"enable_routing_status"=>0,'in_completed_steps'=>'0'));
				redirect($this->config->item('base_url')."org_transportation/draft_transport/");
			}
			
			$perfered_vol = $this->input->post('preferred_volunteer');
			$update_transport_type = $post_transport_type;
			if($post_transport_type == 'S')
			{
				$update_transport_type = 'P';
			}
			if($update_transport_type!='')
			{
				$this->orgtrasnportation_model->update_transport_details(array("st_trans_type"=>$update_transport_type,"in_preferred_vol"=>$perfered_vol));
			}
			if($post_transport_type == 'S' || $transport_select=='S')
			{
				$auto_split 	= 	1;
				$start_time_array = array();
				$end_time_array = array();	
				$start_time     = array();
				$end_time       = array();
				$start_time_array = explode(",",$this->input->post('form_timepicker1'));
				$end_time_array   = explode(",",$this->input->post('form_timepicker2'));
				
				$start_location =  trim($transport_details[0]['st_from_zip']);
				$end_location   =  trim($transport_details[0]['st_to_zip']);
				$transPickupDt  =  $transport_details[0]['dt_pickup_date'];
				
				
				
				//$start_time    	=  date("H:i:s",strtotime($this->input->post('form_timepicker1')));
				//$end_time       =  date("H:i:s",strtotime($this->input->post('form_timepicker2')));
				
				if($this->input->post('form_timepicker1'))
				{	
					foreach($start_time_array as $key=>$value)
					{
						array_push($start_time,date("H:i:s",strtotime($value)));
					}	
				}

				if($this->input->post('form_timepicker2'))
				{	
					foreach($end_time_array as $key=>$value)
					{
						array_push($end_time,date("H:i:s",strtotime($value)));
					}	
				}
				
				$splitMiles     =  trim($this->input->post('form_distance_duration'));
				$handOver	    =  trim($this->input->post('form_handoff_time'));
				
				$default_split_val = trim($this->input->post('form_distance_duration'));
				
				$target_date	=  $transport_details[0]['dt_target'];
				
				$handoff_time = trim($this->input->post('form_handoff_time'));
				
				$this->orgtrasnportation_model->update_transport_details(array("in_system_split"=>1));
				
				$splitleg_details = array("in_transportation_id"   => $this->session->userdata('transport_id'),
											  "st_break_by" 		   => "D",
											  "st_in_bet_time" 		   => $handoff_time,
											  //"dt_start_time" 		   => date('H:i:s', strtotime($start_time)),
											  //"dt_end_time" 		   => date('H:i:s', strtotime($end_time)),
											  "dt_start_time" 		   => serialize($start_time),
											  "dt_end_time" 		   => serialize($end_time),
											  "dt_created" 		       => date('Y-m-d H:i:s'),
											  "st_split_miles"		   => $splitMiles,
											  "in_completed_process"   => '1',		
											 // "dt_modified" 		   => date('Y-m-d H:i:s')
											);
				$this->orgtrasnportation_model->add_splitleg_detail($splitleg_details);
				
				$legs_data = $this->calc_legs_data($start_location,$end_location,$transPickupDt,$start_time,$end_time,$splitMiles,$handOver);
				$this->orgtrasnportation_model->create_split_leg($legs_data,$this->session->userdata('transport_id'),$target_date);
					
					
					/*$splitleg_details = array("in_transportation_id"   => $this->session->userdata('transport_id'),
											  "st_break_by" 		   => $split_based_on,
											  "st_in_bet_time" 		   => $handoff_time,
											  "dt_start_time" 		   => date('H:i:s', strtotime($start_time)),
											  "dt_end_time" 		   => date('H:i:s', strtotime($end_time)),
											  "dt_created" 		       => date('Y-m-d H:i:s'),
											 // "dt_modified" 		   => date('Y-m-d H:i:s')
											);
					$this->orgtrasnportation_model->add_splitleg_detail($splitleg_details);*/
			}	
			
			if($post_transport_type == 'D')
			{
				$this->orgtrasnportation_model->update_transport_details(array("enable_routing_status"=>1,'in_notify_tc_users'=>1,'in_completed_steps'=>0));
				
				if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
						{	
							/*$transport_id = $transport_details[0]['in_transportation_id'];
							$owner_name = $transport_details[0]['st_display_name'];	
							$user_name = explode(" ",$transport_details[0]['st_display_name']);
							$email_address = $transport_details[0]['st_email'];
							$user_id         = $transport_details[0]['in_user_id'];*/
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';

							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("97");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							if (isset($email_details[0]['st_email_body'])) {
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##TC_user##",$this->session->userdata('user_name')." ".$this->session->userdata('last_name')  , $templete);
								$templete = str_replace("##user##",$this->session->userdata('user_name'), $templete);
								$templete = str_replace("##transport_number##",$orgcode.$this->session->userdata('transport_id'),$templete);
								
								// added by sadique
								//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
									{
										$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
									} else {
										$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
									}
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $this->session->userdata('email');
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$reply_to = $transport_details[0]['st_email'];
								
								$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
								$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
								if($transport_details[0]['st_email'] != $transport_details[0]['stSendEmail'])
								{
									$templete = $email_details[0]['st_email_body'];
									
									$templete = str_replace("##TC_user##",$transport_details[0]['stSendNm'], $templete);
									$templete = str_replace("##user##",$transport_details[0]['stSendNm'], $templete);
									$templete = str_replace("##transport_number##",$orgcode.$this->session->userdata('transport_id'),$templete);
									
									//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
									
									$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
									if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
									
									$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
									$templete	=	str_replace("##DONATION##",$donation,$templete);
									
									
									$strMail = $templete;
								
									$to = $transport_details[0]['stSendEmail'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									
								
									//$message = str_replace("##change_to_daily_digest##",'',$message);
		
									//$message = str_replace("##unsubscribe_url##",'',$message);
								
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
									
								}	
								
							}
						}
			
				$this->session->set_userdata('transport_steps',4);
				redirect($this->config->item('base_url')."org_transportation/transport_thank_you");
			}
			
			else if($post_transport_type == 'P' || $post_transport_type == 'S' || $transport_select=='S' || $transport_select=='P')
			{
				$this->session->set_userdata('transport_steps',3);
				redirect($this->config->item('base_url')."transport-create-legs");
			}
						
			else
			{
				$this->session->set_userdata('transport_steps',3);
				redirect($this->config->item('base_url')."transport-create-legs");
			}
			
		}	
		else if($this->input->post('action') && $this->input->post('action')=='trans_sub_draft')
		{
			if($this->input->post('transport_type'))
			{	
				$post_transport_type = $this->input->post('transport_type');
			} else {
				$post_transport_type = 'U';
			}
			$this->orgtrasnportation_model->update_transport_details(array("st_trans_type"=>$post_transport_type,"enable_routing_status"=>0,'in_completed_steps'=>0));
			redirect($this->config->item('base_url')."org_transportation/draft_transport/");
		} 
		$this->load->view('transportation/select-transport',$data);			
	}
	
	function transport_thank_you()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id') || !$this->session->userdata('transport_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('transport_steps'))
		{ 
			if($this->session->userdata('transport_steps')==1)
				redirect($this->config->item('base_url') . "org-add-transport");
			if($this->session->userdata('transport_steps')==2)
				redirect($this->config->item('base_url') . "select-transport/");	
			if($this->session->userdata('transport_steps')==3)
				redirect($this->config->item('base_url') . "transport-create-legs"); 
		} else {
				redirect($this->config->item('base_url') . "org-add-transport"); 
		}
		
		if($this->input->post('action') && $this->input->post('action')=='trans_sub')
		{
			redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata("org_id")."/");
		}	
			$this->load->view('transportation/what-next');
	}
	
	function create_updated_legs(){
		
		$this->load->view('transportation/create-updated-legs');				
	} 
	
	function get_all_animals()
	{
		$org_id = $this->session->userdata("org_id");
		$animal_listing = array();
		$animal_list = $this->orgtrasnportation_model->get_org_animal($org_id, "0");
		$transport_id_data = array();
		$animal_id_data = array();
		//sort($animal_list['in_transportation_id']);
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$transport_details = $transport_details[0];
		foreach($animal_list as $key=> $value){
		$test = '';
			if(isset($value['in_transportation_id']) && $value['in_transportation_id'] != '') 
			{
				$test .='<tr class="already_in_transports" style="display:none;">';
			} else {
				$test .='<tr>';
			}
			//$test .='<tr>';	
			//$test .='<td class="checkboxes"><div class="checker" id="uniform-select'.$value['in_animal_id'].'"><span>';
			$test .=' <td class="checkboxes"><div class="custom-checkbox "><input name="input" title="" type="checkbox" id="'.$value['in_animal_id'].'" value="'.$value['in_animal_id'].'" class="animal_listing_data"><label for="'.$value['in_animal_id'].'"></label></div>';
			$test .='</td>';
			$st_file_name = $this->common_model->get_animal_photo($value['in_animal_id']);
			if($st_file_name !='' && file_exists($this->config->item('upload')."animal_images/70x70/".$st_file_name))
			{
				$image_url  = $this->config->item('upload_url')."animal_images/70x70/".$st_file_name;
			}
			else
			{
				$image_url  = $this->config->item('upload_url')."animal_images/70x70/no_photo_icon.png";
			}
			$test .='<td class="animal-on-transport"><div class="circle"><img width="70px" src="'.$image_url.'" alt="'.$value['st_animal_name'].' - '.$value['st_animal_breed_name'].' '.$value['st_animal_type_name'].'" title="'.$value['st_animal_name'].' - '.$value['st_animal_breed_name'].' '.$value['st_animal_type_name'].'"></div>';
			$test .='<span class="name">'.$value['st_animal_name'].'<br>';
			$test .='<span>'.$value['st_animal_breed_name'].' '.$value['st_animal_type_name'].'</span></span></td>';
			$test .='<td class="on-transport">';
			if(isset($value['in_transportation_id']) && $value['in_transportation_id'] != '') 
			{
				$transport_ids = explode(',',$value['in_transportation_id']);
				$transport_ids = array_unique($transport_ids);
				$test .= '<div>On a Transport:<br>';
				foreach($transport_ids as $trans_ids)
				{ 
						$test .= '<a style="display:inline-table;" href="'.base_url().'org-transportation-scheduled/'.$trans_ids.'/'.'" target="_blank">DBT-'.$trans_ids.'</a>';
						$test .= '&nbsp,&nbsp;';
				}
				$test .=  '</div>';
			} 
			//$test .='</td><td class="on-transport padlr"><div></div></td>';
			$test .='</td>';
			if(file_exists($this->config->item('upload')."demeanor/31x31/".$value['st_demeanor_image']) && file_exists($this->config->item('upload')."demeanor/60x60/".$value['st_demeanor_image']))
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/31x31/".$value['st_demeanor_image'];
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/60x60/".$value['st_demeanor_image'];
			}
			else
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/31x31/no_photo_icon.png";
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/60x60/no_photo_icon.png";
			}
			$test .='<td class="icon info-icons"><div class="animal-icon"><a href="javascript:void(0);" class="preview" rel="popover" data-class="bdrt-tip'.$value['st_css_class'].'" data-placement="left" data-original-title="Couch Potato" data-content="'."<img src='".$demenor_thumb_url."'/>".$value['st_demeanor_desc'].'"><img src="'.$demenor_url.'"></a></div></td>';
			$test .='</tr>';
			$animal_listing[$key]['html'] = $test;
			$animal_listing[$key]['data'] = $value;
			$transport_id_data [$key] = $value['in_transportation_id'];	
			$animal_id_data[$key] = $value['in_animal_id'];	
		}
		array_multisort($transport_id_data, SORT_ASC, $animal_id_data, SORT_DESC, $animal_listing);
		echo json_encode($animal_listing);

	}
	
	public function ajax_file_upload() 
	{
		$this->load->library('upload');
		/*echo "<pre>"; print_r($_FILES['my_file']); echo "</pre>";
		die;*/
		//$config['upload_path']  	= $this->config->item('upload').'test_animal/';
		$config['upload_path']  	= $this->config->item('upload').'animal_images/';
		$config['max_size']			= '5120';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','', str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		$lastDot = strrpos($_FILES['my_file']['name'], ".");
		$_FILES['my_file']['name'] = str_replace(".", "", substr($_FILES['my_file']['name'], 0, $lastDot)) . substr($_FILES['my_file']['name'], $lastDot);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['my_file']['name']));
		
		//Initialization
		$this->upload->initialize($config);
			
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload('my_file');
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 
		
		$img_name_array = explode('.', $config['file_name']);
		$img_extension = end($img_name_array);
		$image_name = current(explode('.', $config['file_name'])); 
		 
		if($img_extension == "JPE" || $img_extension == "jpe")
		{
			$new_image_name = $image_name.'.jpg';
			$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $config['file_name']);
			imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
			$config['file_name'] =  $new_image_name;
		}
		
		if(!empty($this->input->post())){
			
		
			//$data = $this->upload->data();
			$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'
							);
			foreach($thumb as $key_t =>$value_t){
				$exp_value = explode('X',$value_t);
				$height = $exp_value[0];
				$width = $exp_value[1];
				$this->resizeImage($key_t,$config['file_name'],$height,$width);	
			}
		}

		
		echo "{";
		echo "file_name: '" .$config['file_name'] . "'\n";
		echo "}";
	}
	
	public function resizeImage($folder, $imagname,$height,$width)
   	{
   
      	$source_image		= $this->config->item('upload').'animal_images/'.$imagname;
		$new_image		= $this->config->item('upload').'animal_images/'.$folder.'/'.$imagname;
		$config_manip = array(
	        'image_library' => 'gd2',
	        'source_image' => $source_image,
	        'new_image' => $new_image,
	        'maintain_ratio' => TRUE,
	       	'width' => $width,
	        'height' => $height
      	);
    	 
		$this->image_lib->initialize( $config_manip );

      	$this->load->library('image_lib', $config_manip);
      	if (!$this->image_lib->resize()) {
          	echo $this->image_lib->display_errors();
      	}
		$this->image_lib->clear();
		
   	}
   	
   function distance($lat1, $lon1, $lat2, $lon2, $unit) 
   {

		$theta = $lon1 - $lon2;
		$dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
		$dist = acos($dist);
		$dist = rad2deg($dist);
		$miles = $dist * 60 * 1.1515;
		$unit = strtoupper($unit);
	
		if ($unit == "K") {
			return ($miles * 1.609344);
		} else if ($unit == "N") {
			return ($miles * 0.8684);
		} else {
			return $miles;
		}
	}
	
	
	function calc_legs_data($start_location,$end_location,$transPickupDt,$start_time,$end_time,$splitMiles,$handOver,$start_point_between='',$ind='0')
	{
		// Input from USER		
		/*$transPickupDt	=	'05/11/2017';
		$transDropoffDt	=	'05/13/2017';	
		$start_time ='08:00:00';
		$end_time  = '20:00:00';
		$handOver	=	30;
		$splitMiles = '60';		
		$start_location	=	"10023";
		$end_location	=	"74146";*/
		// ==========================
		
		$handOverTime	=		$handOver*60;
		$TTimeSec	=	strtotime($transPickupDt);		
		$leg_start_time = date("Y-m-d {$start_time[0]}", $TTimeSec);
		$leg_start_time_sec =	strtotime($leg_start_time);
		$leg_stop_time = date("Y-m-d {$end_time[0]}", $TTimeSec);
		$leg_stop_time_sec =	strtotime($leg_stop_time);

		if($start_point_between!='' && $start_point_between!='0000-00-00 00:00:00')
		{
			$PickupDt	=	date("Y-m-d",strtotime($start_point_between));
			$TTimeSec	=	strtotime($PickupDt);
			$leg_start_time_sec =	strtotime($start_point_between);
			$day_end_time = $end_time[0];
			if($ind!='0')
			{
				if(array_key_exists($ind,$end_time))
				{
					$day_end_time = $end_time[$ind];
				}
			}		
			
			$leg_stop_time = date("Y-m-d {$day_end_time}", $TTimeSec);
			$leg_stop_time_sec =	strtotime($leg_stop_time);
		}	
		
		$split_meter	=	1609 * $splitMiles;
		$google_api_key = $this->config->item('googleapi_key');
		
		$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$start_location&destination=$end_location&mode=driving&key=$google_api_key&alternatives=false&sensor=false";
		$ch = curl_init();
		
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		// $output contains the output string
		$output = curl_exec($ch);
		// close curl resource to free up system resources
		curl_close($ch);
		//echo $output;die;
		$response_array = json_decode($output, TRUE);
		//echo "<pre>"; print_r($response_array); echo "</pre>";exit;
		if($response_array['status'] == 'OK')
		{
			$this->load->library('Polyline');
			
			$ir	=	0; $m_distance	=	0;
			
			$routeLegs = $response_array['routes'][0]['legs'];
			foreach($routeLegs as $rKey =>$rVal)
			{									
				foreach($rVal['steps'] as $rsKey =>$rsVal)
				{
					$p_point	=	""; $ik=0;
					if(	$ir ==0	)
					{
						$leg_coods[$ir]['start']	=	$rsVal['start_location'];
						$leg_coods[$ir]['end']	=	$rsVal['end_location'];						
						$curr_counter		=	$ir;
					}
					
					$m_distance1	=	$m_distance	+	$rsVal['distance']['value'];
					
					if($m_distance1 < $split_meter)
					{
						//$m_distance	=	$m_distance	+	$rsVal['distance']['value'];						
						$m_distance	=	$m_distance1;						
						$leg_coods[$curr_counter]['end']	=	$rsVal['end_location'];
						$leg_coods[$curr_counter]['distance']	=	$m_distance;						
						$ir++;
					}
					else
					{
						/*echo $m_distance;	
						echo "<br>";
						echo $m_distance1;*/
						$p_point	=	$rsVal['polyline']['points'];
						$ltt_points 	= 	Polyline::decode($p_point);
						$ltt_points_cnt	=	count($ltt_points);
						
						$ik	=0;
						while($ik<$ltt_points_cnt)
						{
							
							$lat1	=	$ltt_points[$ik];
							$lon1	=	$ltt_points[$ik+1];
							$lat2	=	$leg_coods[$curr_counter]['end']['lat'];
							$lon2	=	$leg_coods[$curr_counter]['end']['lng'];
							$unit	=	'K';
							 
							
							$c_distance	=	$this->distance($lat1, $lon1, $lat2, $lon2, $unit);
							$c_distance	=	$c_distance*1000;
							
							$c_distance1	=	$m_distance	+	$c_distance;
					
							if($c_distance1 < $split_meter)
							{
								//echo "<br>".$ik; 
								//$m_distance	=	$m_distance	+	$c_distance;
								$m_distance	=	$c_distance1;
								$leg_coods[$curr_counter]['end']['lat']		=	$lat1;								
								$leg_coods[$curr_counter]['end']['lng']		=	$lon1;	
								$leg_coods[$curr_counter]['distance']	=	$m_distance;			
							}
							else{
								$ir++;
								$m_distance	=	$c_distance;
								$leg_coods[$ir]['start']['lat']		=	$leg_coods[$curr_counter]['end']['lat'];								
								$leg_coods[$ir]['start']['lng']		=	$leg_coods[$curr_counter]['end']['lng'];
								$leg_coods[$ir]['end']['lat']		=	$lat1;								
								$leg_coods[$ir]['end']['lng']		=	$lon1;
								$leg_coods[$ir]['distance']			=	$m_distance;
								$curr_counter		=	$ir;
								
																								
							}
							
							$ik	=	$ik+10;							
						}						
					}					
				}				
			}			
		}
		
		if($ind!='0')
			$d = $ind;
		else
			$d = 0;
		
		if(count($leg_coods)>0)
		{
			$gi	=	0;	$fLegCoods	=	array();
			foreach($leg_coods	as $gKey => $gVal)
			{				
				$olat	=	$gVal['start']['lat'];
				$olng	=	$gVal['start']['lng'];
				$dlat	=	$gVal['end']['lat'];
				$dlng	=	$gVal['end']['lng'];
				
				
				//$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$olat,$olng&destination=$dlat,$dlng&mode=driving&key=AIzaSyBTVY78XuqiUjblLjk4pWZiFrRTePjk2Sw&alternatives=false&sensor=false";
				$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$olat,$olng&destination=$dlat,$dlng&mode=driving&alternatives=false&sensor=false&key=$google_api_key";
				$ch = curl_init();
				
				// set url
				curl_setopt($ch, CURLOPT_URL, $url);
				//return the transfer as a string
				curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
				// $output contains the output string
				$output = curl_exec($ch);
				// close curl resource to free up system resources
				curl_close($ch);
				
				$response_array = json_decode($output, TRUE);
				//echo "<pre>"; print_r($response_array);
				
				if($response_array['status'] == 'OK')
				{	

					$LStopTime	=	$leg_start_time_sec	+	$response_array['routes'][0]['legs'][0]['duration']['value'];
					if($LStopTime > $leg_stop_time_sec)
					{
						$fLegCoods[$gi]['overnightLoc']	=	$response_array['routes'][0]['legs'][0]['start_address'];
						$overnight_time = $leg_start_time_sec - $handOverTime;
						$fLegCoods[$gi]['starttime']	=	date('Y-m-d H:i:s',$overnight_time);
						$d++;
						if(array_key_exists($d,$start_time))
						{
							$day_start_time = $start_time[$d];
						} else {
							$day_start_time = $start_time[0];
						}
							
						if(array_key_exists($d,$end_time))
						{
							$day_end_time = $end_time[$d];
						} else {
							$day_end_time = $end_time[0];
						}
						
						$TTimeSec	=	strtotime("+1 day",$TTimeSec);
						$leg_start_time = date("Y-m-d {$day_start_time}", $TTimeSec);
						$leg_start_time_sec =	strtotime($leg_start_time);
						$leg_stop_time = date("Y-m-d {$day_end_time}", $TTimeSec);
						$leg_stop_time_sec =	strtotime($leg_stop_time);
				
						$fLegCoods[$gi]['endtime']	=	date('Y-m-d H:i:s',$leg_start_time_sec);
						$fLegCoods[$gi]['type']	= 'overnight';
						
						$LStopTime	=	$leg_start_time_sec	+	$response_array['routes'][0]['legs'][0]['duration']['value'];
						$gi++;	
					}
					
					
					/*$url_start_address = "http://maps.googleapis.com/maps/api/geocode/json?address=" . $response_array['routes'][0]['legs'][0]['start_address'] . "&sensor=true&key=$google_api_key";
					$start_address_info = file_get_contents($url_start_address);
					$start_address_json = json_decode($start_address_info);
					$city = "";
					$state = "";
					$country = "";
					if (count($start_address_json->results) > 0) 
					{
						$arrComponents = $start_address_json->results[0]->address_components;
						foreach($arrComponents as $index=>$component) 
						{
							$type = $component->types[0];
							if ($city == "" && ($type == "sublocality_level_1" || $type == "locality") ) 
							{
								$city = trim($component->short_name);
							}
							
							if ($state == "" && $type=="administrative_area_level_1") 
							{
								$state = trim($component->short_name);
							}
            
							if ($country == "" && $type=="country") 
							{
								$country = trim($component->short_name);
							}
						}
					}
						
					$arrReturn = array("city"=>$city, "state"=>$state, "country"=>$country);*/
					
					
					
					$fLegCoods[$gi]['sLoc']	=	$response_array['routes'][0]['legs'][0]['start_address'];
					$fLegCoods[$gi]['eLoc']	=	$response_array['routes'][0]['legs'][0]['end_address'];
					$fLegCoods[$gi]['sCoods']	=	$gVal['start'];
					$fLegCoods[$gi]['eCoods']	=	$gVal['end'];
					$fLegCoods[$gi]['distance']	=	$response_array['routes'][0]['legs'][0]['distance']['text'];
					$fLegCoods[$gi]['duration']	=	$response_array['routes'][0]['legs'][0]['duration']['value'];
					$fLegCoods[$gi]['route_path'] 	=  $response_array['routes'][0]['overview_polyline']['points'];
					$fLegCoods[$gi]['url'] 	=  $url;
					$fLegCoods[$gi]['type']	= 'driver';
					$fLegCoods[$gi]['starttime']	=	date('Y-m-d H:i:s',$leg_start_time_sec);
					$fLegCoods[$gi]['endtime']	=	date('Y-m-d H:i:s',$LStopTime);
					//$fLegCoods[$gi]['response']	=	$response_array;
					
					$leg_start_time_sec	=	$LStopTime	+	$handOverTime;
					
				}
				$gi++;
			}
		}
		//echo count($leg_coods);
		//echo "<pre>";print_r($fLegCoods);exit;
		return $fLegCoods;
		//echo "<pre>";print_r($leg_coods);exit;		
		
	}
	
	public function get_all_image()
	{
		$animal_id = $_POST['id'];
		$animal_image_list = $this->orgtrasnportation_model->get_all_image($animal_id);
		echo json_encode($animal_image_list);
	}
	
	function update_animal_transport_status()
	{
		if(isset($_POST['transport_id']) && ($_POST['transport_id']) != '' && isset($_POST['animal_id']) && ($_POST['animal_id']) != '')
		{
			$updated = $this->orgtrasnportation_model->update_animal_transport_status($_POST['transport_id'],$_POST['animal_id']);
			return $updated;
		}
	}
	
	function user_submission()
	{
		  if(!$this->session->userdata('userid'))
		 {	
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		 }	
		 $trasport_id = $this->uri->segment(2);
		 if ($trasport_id != '' || $trasport_id > '0') 
		 {
            $this->session->set_userdata('transport_id', $trasport_id);
         }
		$tra_id = $this->session->userdata('transport_id');
        $transport_details = $this->orgtrasnportation_model->get_transport_details($tra_id);
		
		$transport_date = date('Y-m-d', strtotime($transport_details[0]['dt_target']."+7 day"));
		$today_date= date('Y-m-d');
		
		$transport_animals 	= $this->orgtrasnportation_model->get_transport_animals($tra_id);
		
		
		$today_dt = new DateTime($today_date);
		$expire_dt = new DateTime($transport_date);
		
		$permission_details 		= array();
		$permission			 		= array();
		$owner_id					= array();
		$transportation_permission  = 'N';
		
		$date1				= date_create($transport_details[0]['dt_pickup_date']);
		$date2				= date_create($transport_details[0]['dt_target']);
		$transport_diff		= date_diff($date1,$date2);
		$date_diff          = ($transport_diff->days!=0 && isset($transport_diff))?$transport_diff->days+1:0+1;
		$data['date_diff']  = $date_diff;
		
		//$permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		//$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		
		$permission = $this->common_function->get_permission($this->session->userdata('userid'),$transport_details[0]['in_organization_id']);
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$transport_details[0]['in_organization_id']);
		
		if($owner_id>0 && $owner_id == $this->session->userdata('userid'))
		{
			$permission_details['transport']		= array("transport_cr","transport_ed","transport_cnf","transport_del");
			$permission_details['fundraiser']		= array("fundraiser_cr","fundraiser_ed","fundraiser_cnf","fundraiser_del");
			$permission_details['profile_manager']	= array("pr_manager_cr","pr_manager_ed","pr_manager_cnf","pr_manager_del");
			$transportation_permission  = 'Y';
		}
		elseif(!empty($permission))
		{
			$permission_details = unserialize($permission);
			if((isset($permission_details['transport']) && (in_array('transport_ed',$permission_details['transport']))) || (isset($permission_details['transport']) && (in_array('transport_cr',$permission_details['transport']))) )
			{
				$transportation_permission  = 'Y';
			}
		}
		else
		{
			$permission_details = '';
		}
		$data['permission'] = $permission_details;
		
        if (empty($transport_details)) 
		{
            redirect($this->config->item('base_url'));
        }
		if (isset($transport_details[0]['st_trans_type']) && $transport_details[0]['st_trans_type'] == 'D' && 
			$transport_details[0]['accTcid'] != $this->session->userdata('userid') && ($expire_dt >= $today_dt) && $transport_details[0]['in_airline_transport'] == '0' ){
				 redirect($this->config->item('base_url'));
		}

		if ( $today_dt >= $expire_dt  && $transportation_permission == 'N' && $transport_details[0]['in_airline_transport'] == '0' ){
			
				 redirect($this->config->item('base_url'));
		}
		
		if ($transport_details[0]['enable_routing_status'] == 0 && $transport_details[0]['in_airline_transport'] == '0')
		{
				 redirect($this->config->item('base_url'));
		}
		
		if ($transport_details[0]['accTcid'] != $this->session->userdata('userid') && $transport_details[0]['in_airline_transport'] == '1' )
		{
			redirect($this->config->item('base_url'));
		}
	
		$photography_leg = '';
		if($this->input->post('photography_leg') || $this->input->post('photography_leg')=='0')
		{
					$photography_leg = $this->input->post('photography_leg');
		}
		
		/*if($this->input->post('action'))
		{	
			echo "<pre>"; print_r($this->input->post()); echo "</pre>";
			echo $photography_leg;
			die;
		}*/		
		if($this->input->post('action')=='cancel')
		{
				
				$legs_ids=$this->input->post('cancel_leg_id');
				$this->cancel_legs($legs_ids,'1',$photography_leg);
				$this->session->set_flashdata('google_leg', 'You have left leg(s) successfully.');
		}
		if($this->input->post('action')=='remove_vol')
		{
				$legs_ids = $this->input->post('cancel_leg_id');
				$remove_user_id = $this->input->post('remove_user_id');
				
				$remove_user_details = $this->orgtrasnportation_model->get_leg_participant_detail_by_leg_id_user_id($legs_ids,$remove_user_id);
				//echo "<pre>";print_r($remove_user_details);die;
				$removed_user_email = $remove_user_details['user_email'];
				
				if($transport_details['0']['st_trans_type']=="D")
				{
					//$this->cancel_legs($legs_ids);
					$leg_id = $legs_ids;
					//echo $leg_id;exit;
					$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);
					$order_id = $user_legs['sort_order'];
					$this->orgtrasnportation_model->delete_user_leg_by_user_id($leg_id,$remove_user_id,$photography_leg);	
					//echo "<pre>";print_r($user_legs);die;
					if(!empty($user_legs))
					{
							if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
								{
									$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
								}
								else
								{
									$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].", ":"").($user_legs['pick_city']? $user_legs['pick_city'].", ":"").($user_legs['pick_state'] ? $user_legs['pick_state'].", ":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].", ":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
								}
								if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
								{
									$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
								}
								else
								{
									$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].", ":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
								}
							//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
							$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
							$total_miles  	= $total_miles['distance'];	
							$this->orgtrasnportation_model->update_distance($total_miles);
							$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
							$percent = ($percent>=100)?100:$percent;
							$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));	
							$name_arr = array("target_date"		=> $target_date,
											  "coordinator_name"  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),
											  "removed_user_name" => $remove_user_details['st_display_name'],	
											  "transport_id" 	=> $this->session->userdata('transport_id'),
											  "percent" 		=> $percent,
											  "st_org_name" => $transport_details['0']['st_org_name'],
											  "st_org_code" => $transport_details['0']['st_org_code'],
											  "st_display_name" => $transport_details['0']['st_display_name'],
											  "st_email" => $transport_details['0']['st_email'],
											  "st_add_comments" => $transport_details['0']['st_add_comments'],
										 );				 					
							$this->remove_from_transport_email($removed_user_email,"33",$name_arr);
					
					}
					
					$link_name 	= $this->common_function->get_filtered_name($remove_user_details['st_display_name']);
					$url_link 	= "##base_url##user-".$remove_user_id."-".$link_name."/";
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   => $legs_ids,
												"in_user_id"			=> $remove_user_id,
												"in_type"				=> 22,
												"in_modified_by"		=> $remove_user_id,
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					
					//User Notify
					$notification_last_id = $this->db->insert_id();
					
					//$this->orgtrasnportation_model->leave_legs_by_user_id($legs_ids,$remove_user_id,$photography_leg);
					if($transport_details[0]['in_airline_transport']==1)
					{	
						$this->orgtrasnportation_model->update_order_legs($order_id,$this->session->userdata('transport_id'));
					}	
					$this->session->set_flashdata('google_leg', 'Volunteer has been removed from transport successfully.');
					redirect($this->config->item('base_url').'user-submission/'. $this->session->userdata('transport_id'));
				}
		}
		if($this->input->post('conf_transport'))
		{
			if($transport_details[0]['in_airline_transport']==1)
			{	
					$this->orgtrasnportation_model->update_transport_dates($this->session->userdata('transport_id'));
					$transport_details 	= $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			}
			if(count($transport_animals )<=0)
			{
				$this->session->set_flashdata('google_leg', 'Animals are not available in transportation.');
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
			}
			elseif(strtotime($transport_details[0]['dt_target'])<strtotime(date("Y-m-d")))
			{					
				$this->session->set_flashdata('google_leg', 'Current date must be less than or equal to Target date.');
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
			}
			else
			{
				$additional_email_address = array();
				
				if($this->input->post('add_email_address'))
				{
					$additional_email_address = json_decode($this->input->post('add_email_address'));
				}
				
				//echo "<pre>";print_r($this->input->post());die;
				 $status_arr = array("in_status" => "2",
									"in_modified_by" => $this->session->userdata('userid'),
									"dt_modified" => date("Y-m-d H:i:s"),
									"dt_confirm" => date("Y-m-d H:i:s")
									);
				$this->orgtrasnportation_model->update_transport_details($status_arr);
				
				$notification_message = '<div class="timeline-body border">
									<h2 class="last">Transport #DBT'.$this->session->userdata('transport_id').' has been confirmed.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div>
									</div>';							
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_type"				=> 10,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				
				$user_driver_email = $this->orgtrasnportation_model->get_trans_legs_join_user("null");
				/*$user_driver_email[] = array("user_email"	=> $transport_details['0']['st_email'],
											 "display_name" => $transport_details['0']['st_display_name']
											);*/
				$partcipant_emails = array();
				$partcipant_emails[] = array("user_email" => $transport_details['0']['st_email'],
                    "display_name" => $transport_details['0']['st_display_name']
                );
				
				
				
				if(count($additional_email_address)>0)
				{
					foreach($additional_email_address as $key=>$add_email)
					{
						if(isset($add_email->user_email) && !empty($add_email->user_email) && isset($add_email->user_name) && !empty($add_email->user_name) ) 
						{
							$partcipant_emails[] = array("user_email" => $add_email->user_email,
														 "display_name" => $add_email->user_name
														);
						}								
					}
				}								
				
				
				if($transport_details['0']['inSendOrgRunsheet']==1)
				{
					if($transport_details['0']['stSendEmail'] != $transport_details['0']['st_email'])
					{
						$partcipant_emails[] = array("user_email"  => $transport_details['0']['stSendEmail'],
													 "display_name" => $transport_details['0']['stSendNm']
													);
					}	
				}
					
				if($transport_details['0']['inRecOrgRunsheet']==1)
				{
					if($transport_details['0']['stRecEmail'] != $transport_details['0']['st_email'])
					{
						$partcipant_emails[] = array("user_email"  => $transport_details['0']['stRecEmail'],
													"display_name" => $transport_details['0']['stRecNm']
													);
					}	
				}
				
				if(isset($user_driver_email) && !empty($user_driver_email))
				{
					foreach($user_driver_email as $driver_data)
					{
						if(isset($driver_data['leg_participant_details']) && !empty($driver_data['leg_participant_details']))
						{
							foreach($driver_data['leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['user_email'],
															 "display_name" => $part_val['st_display_name']
															);
							}						
							
						}
						if(isset($driver_data['non_doobert_leg_participant_details']) && !empty($driver_data['non_doobert_leg_participant_details']))
						{
							foreach($driver_data['non_doobert_leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['st_email'],
															 "display_name" => $part_val['st_name']
															);
							}
						}
					}
				}
				
				$transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
				if(isset($transport_monitors) && !empty($transport_monitors))
				{
					foreach($transport_monitors as $trans_mon)
					{
						$partcipant_emails[] = array("user_email" => $trans_mon['st_email'],
													 "display_name" => $trans_mon['st_display_name']
													);
					}
				}							
				//echo '<pre/>';print_r($partcipant_emails);exit;		
				
				$target_date = @date("l, M d",strtotime(@$transport_details['0']['dt_target']));	
				$dt_pickup_date = @date("l, M d", strtotime(@$transport_details['0']['dt_pickup_date']));	
				$name_arr = array("target_date"	=> $target_date,
								  "dt_pickup_date" => $dt_pickup_date,	
								  "name"		=> $transport_details['0']['st_display_name'],
								  "st_org_name" => $transport_details['0']['st_org_name'],
								  "st_display_name" => $transport_details['0']['st_display_name'],
								  "st_email" => $transport_details['0']['st_email'],	
								 );					
				$this->transport_email($partcipant_emails,"6",$name_arr);
				$this->session->set_flashdata('google_leg', 'Transportation confirmed successfully.');
				redirect($this->config->item('base_url')."org-confirm-transport/");
			}
		}
		
		if($this->input->post('edit_meeting_location_action'))
		{
			//echo "<pre>";print_r($this->input->post());die; //use for testing
			if($this->input->post("txt_edit_leg_id") > 0)
			{
				$array_update = array("st_meeting_location"=> $this->input->post("txt_edit_meeting_location"),
									  "st_to_meeting_location" => ($this->input->post('txt_editto_meeting_location'))?$this->input->post('txt_editto_meeting_location'):'',		
									  "in_modified_by"	=> $this->session->userdata('userid'),
									  "dt_modified"=> date("Y-m-d H:i:s"));
				$current_leg_id = $this->input->post("txt_edit_leg_id");
				$open_tab_info = $this->input->post("open_tab_info");
				//$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->orgtrasnportation_model->update_legs($array_update,$current_leg_id);
				
				$this->session->set_flashdata('google_leg', 'Meeting location has been updated successfully.');
			}
		}
			

				if($this->input->post('recent_activity'))
				{
						$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
				}	
		
		$data['transport_details'] =  $transport_details['0'];
		$time_zone 				= $this->common_function->tbl_time_zone();
		$data['animal_transport']  = count($transport_animals);
		$data['time_zone'] 		= $time_zone;
		$this->session->set_userdata('org_id', isset($transport_details['0']['in_organization_id']) ? $transport_details['0']['in_organization_id'] : "");
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		//echo "<pre>";print_r($leg_details);die;
		$data['leg_details']		= $leg_details;
		if ($transport_details['0']['st_trans_type'] == 'D') 
		{
			if($transport_details[0]['in_airline_transport'] == '1')
			{
				$data['user_airline_date_trip'] = $this->orgtrasnportation_model->get_airline_transport_leg(); 
			} else {	
				$data['user_covering_legs'] = $this->orgtrasnportation_model->get_covering_legs(); 
			}	
        }
		
		if($transport_details[0]['in_airline_transport'] == '1')
		{
			$this->load->view('transportation/routing-request-user-submission-airline',$data);
		} else {
			$this->load->view('transportation/routing-request-user-submission',$data);
		}	
	}
	
	function routing_transportation()
	{
		$this->load->view('transportation/routing-rescue-home-transportation');
	}
	
	function get_lat_long()
	{
		$lat_long = array();
		$transport_id = $this->input->post('transport_id');
		$recommend_id = $this->input->post('in_id');	
		$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
		$lat_long['trans_source'] = $this->orgtrasnportation_model->get_lat_Lon($transport_details['0']['st_from_zip']);
		$lat_long['trans_dest'] = $this->orgtrasnportation_model->get_lat_Lon($transport_details['0']['st_to_zip']);
		$lat_long['transportsource'] = $transport_details['0']['st_from_zip'].', '.$transport_details['0']['st_from_city'].','.$transport_details['0']['st_from_state'].', '.$transport_details['0']['st_from_country']; 
		$lat_long['transportdest'] = $transport_details['0']['st_to_zip'].', '.$transport_details['0']['st_to_city'].','.$transport_details['0']['st_to_state'].', '.$transport_details['0']['st_to_country']; 
		//$from_transport_zip = ;
		$recommend_legs= $this->orgtrasnportation_model->get_routing_details($recommend_id);
		$lat_long['recomd_source'] = $this->orgtrasnportation_model->get_lat_Lon($recommend_legs['st_from_zip']);
		$lat_long['recomd_dest']   = $this->orgtrasnportation_model->get_lat_Lon($recommend_legs['st_to_zip']);
		
		$lat_long['routingsource'] = $recommend_legs['st_from_zip'].', '.$recommend_legs['st_from_city'].', '.$recommend_legs['st_from_state'].', '.$recommend_legs['st_from_country']; 
		$lat_long['routingdest']   = $recommend_legs['st_to_zip'].', '.$recommend_legs['st_to_city'].', '.$recommend_legs['st_to_state'].', '.$recommend_legs['st_to_country']; 
		$lat_long['routingtype']   = $recommend_legs['in_route_type'];
	
		
		/*$to_transport_zip   = $transport_details['0']['st_to_zip'];
		
		$from_transport_zip = $transport_details['0']['st_from_zip'];
		$to_transport_zip   = $transport_details['0']['st_to_zip'];*/
		
		echo json_encode($lat_long);
		//$animal_image_list = $this->orgtrasnport_model->get_lat_Lon();
	}
	
	function get_comments()
	{
		$in_id = $_POST['in_id'];
		$comments = $this->orgtrasnportation_model->get_routing_details($in_id);
		echo json_encode($comments['st_info']);
	}
	
	function get_airline_comments()
	{
		$in_id = $_POST['in_id'];
		$comments = $this->orgtrasnportation_model->get_routing_airline_details($in_id);
		echo json_encode($comments['st_info']);
	}
	
	function get_covering_leg_details()
	{
		$in_id = $_POST['in_id'];
		$covering_leg =  $this->orgtrasnportation_model->covering_legs($in_id);
		echo json_encode($covering_leg);
	}
	
	function get_all_driver() 
	{
        $data_val = $this->input->get('term');
        $driver_name = $this->orgtrasnportation_model->get_driver_user($data_val);
		if(count($driver_name)>0)
		{	
			echo json_encode($driver_name);
		} else {
				$arrData[]	= array("label"			=> 'Non-doobert-user',
								"value"			=> 'n-d-u',
								'name'			=> 'Non-doobert-user',
								'primary_phone' => 'n-d-u',
								);
			echo json_encode($arrData);					
		}	
        //echo json_encode($driver_name);
    }
	
	function get_all_pilot() 
	{
        $data_val = $this->input->get('term');
        $driver_name = $this->orgtrasnportation_model->get_pilot_user($data_val);
		if(count($driver_name)>0)
		{	
			echo json_encode($driver_name);
		} else {
			$arrData[]	= array("label"			=> 'Non-doobert-user',
								"value"			=> 'n-d-u',
								'name'			=> 'Non-doobert-user',
								'primary_phone' => 'n-d-u',
								);
			echo json_encode($arrData);
		}	
        //echo json_encode($driver_name);
    }
	
	function get_all_users() 
	{
        $data_val = $this->input->get('term');
        $driver_name = $this->orgtrasnportation_model->get_all_user($data_val);
		if(count($driver_name)>0)
		{	
			echo json_encode($driver_name);
		} else {
			$arrData[]	= array("label"			=> 'Non-doobert-user',
								"value"			=> 'n-d-u',
								'name'			=> 'Non-doobert-user',
								'primary_phone' => 'n-d-u',
								);
			echo json_encode($arrData);
		}	
        //echo json_encode($driver_name);
    }
	
	public function send_mail_staterules($state_rules_array,$transport_details)
	{
			$state_opt = array();		
			
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
			$tc_user_detail[] = array("user_id" => $transport_details['0']['in_user_id'],
									  "user_email"	=> $transport_details['0']['st_email'],
									  "display_name" => $transport_details['0']['st_display_name']
									 );	
									   
			$tc_user_detail[] = array("user_id" 		=> $rou_tc_user[0]['in_user_id'],
									  "user_email"		=> $rou_tc_user[0]['st_email'],
									  "display_name" 	=> $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name']
									 );
			$states =  array();
			foreach($state_rules_array as $key=>$value)
			{	
					if (in_array($value,$states)==false) 
					{	
						array_push($states,$value);	
					}
			}
									 
			if(count($tc_user_detail)>0)
			{	
				foreach($tc_user_detail as $user_key =>$user_value)
				{
				  $states_rules_content = '';	
				  $user_id =  $user_value['user_id'];		
				if(count($states) >0)
				{
					foreach($states as $key=>$value)
					{
						$verify_state_rules_opt = $this->common_model->state_rules_optout($user_id,$value);
						if(count($verify_state_rules_opt)<=0 || empty($verify_state_rules_opt))
						{
							$get_state_rules = $this->common_model->get_state_rules($value);
							if(count($get_state_rules)>0 && !empty($get_state_rules))
							{
								array_push($state_opt,$value);
								$state_name = $this->common_function->state_list[$value];
								$states_rules_content .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;">Rules For '.$state_name.'</p>';
								$states_rules_content .= '<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;">'.$get_state_rules['st_rule'].'</p>';
							}	
						}	

					}	

					$email_body = $this->common_model->get_email_containt('124');
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
					$this->load->library('email');
					if(isset($email_body) && !empty($email_body)  && !empty($states_rules_content) && isset($states_rules_content) )
					{
						
						$to = $user_value['user_email'];
						$transport_id = $transport_details['0']['in_transportation_id'];
						$subject = $email_body[0]['st_email_subject'];
						$templete	= 	$email_body[0]['st_email_body'];
						$seralize_states = (count($state_opt)>0)?serialize($state_opt):'';
						$user_to_id = $user_id;
						$opt_out_url = base_url().'user/disable_opt_rules/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($seralize_states);

						$templete = str_replace("##rules_regulation##", $states_rules_content, $templete);
						$templete = str_replace("##DONATION##", $donation, $templete);
						$templete = str_replace("##opt_out_url##",$opt_out_url,$templete);
						$templete = str_replace("##display_name##",$user_value['display_name'],$templete);
						$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
						$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);	

						$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}					
						
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);		
			
						//$category  =    "DBT".$transport_id." - ".$email_details[0]['st_category'];		
						$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					}
				}
				}	
			}		
	}
	
	public function insert_new_leg()
	{
				$legs = $_POST['legsArray'][0];
				$sort_order = $this->orgtrasnportation_model->get_last_leg_order();
				$sort_order = $sort_order+1;
				$meeting_location = $legs['meeting_location']; 
				$to_meeting_location = $legs['to_meeting_location'];
				$leg_instruction = $legs['leg_instruction'];
				$total_miles = 0;
				$state_rules_array = array();
				$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
					$legs_array = array("in_transportation_id" => $this->session->userdata('transport_id'),
										"in_route_type" => $legs['route_type_id'],
										"in_multi_user" =>  '0', //added by ghanshyam on 03Dec2014
										  "in_user_num" =>  '0', //added by ghanshyam on 03Dec2014
								  "st_meeting_location" => (isset($meeting_location) && $meeting_location != '') ? $meeting_location : "", //added by ghanshyam on 03Dec2014,	//added by ghanshyam on 03Dec2014
                                        "in_created_by" => $this->session->userdata('userid'),
										"in_sort_order" => $sort_order,
										   "dt_created" => date("Y-m-d H:i:s"),
											"in_deleted" => "0",
											"st_to_meeting_location" => (isset($to_meeting_location) && $to_meeting_location != '') ? $to_meeting_location : "",
									 "st_leg_instruction"     => (isset($leg_instruction) && $leg_instruction != '') ? $leg_instruction : "",	
									);

                    
						$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
					
						if ($legs['route_type_id'] == '1') 
						{
							$airport_details = $this->orgtrasnportation_model->get_airport_details($legs['pickup_airport']);
							//print_r($airport_details);//exit;
							if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
								$loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
							} else {
								$loc = (($legs['pickup_airport'] ? $legs['pickup_airport'] . ", " : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . ", " : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . ", " : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));								
							}
							$start = $this->getLatLong($loc);
							//print_r($start);exit;
							$pickup_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$pickup_airport = '';								
							}else{
								$pickup_airport = $legs['pickup_airport'];
							}
							//echo 'pickup_airport';
							//print_r($pickup_airport);exit;
                            $pickup_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "P",
								//"st_street" => $legs[$i]['pickup_airport'],
                                "st_street" => $pickup_airport,
                                "st_city" => ($start['city']) ? $start['city'] : $airport_details['st_city'],
                                "st_state" => ($start['state']) ? $start['state'] : $airport_details['st_state'],
                                "st_zip" => $start['postal_code'],
                                "st_country " => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                //"dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['pickup_airport_clock']))),
								 "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ",$legs['pickup_airport_clock'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_airport_zone'],
                                "in_deleted" => "0"
                            );
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $start['state'], "st_city" => $start['city']);
                                $this->orgtrasnportation_model->update_airports($legs['pickup_airport'], $data_airports_ar);
                            }
                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['dropoff_airport']);

                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') {
                                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else {
                                $loc = (($legs['dropoff_airport'] ? $legs['dropoff_airport'] . ", " : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . ", " : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . ", " : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));
                            }
                            $finish = $this->getLatLong($loc);
							
							$dropoff_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$dropoff_airport = '';								
							}else{
								$dropoff_airport = $legs['dropoff_airport'];
							}
							
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "D",
                                //"st_street" => $legs[$i]['dropoff_airport'],
								"st_street" => $dropoff_airport,
                                "st_city" => ($finish['city']) ? $finish['city'] : $airport_details['st_city'],
                                "st_state" => ($finish['state']) ? $finish['state'] : $airport_details['st_state'],
                                "st_zip" => $finish['postal_code'],
                                "st_country" => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['dropoff_airport_clock'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_airport_zone'],
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
								$this->load->model('user_model');
								$data['arrPlane']			= $this->user_model->get_plane_detail($legs['user_id']);
								if(!empty($data['arrPlane'][0]) && isset($data['arrPlane'][0]['in_pilot_id']))
								{
								//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
								//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
									$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
								   "in_user_id"					=> $legs['user_id'],
								   "in_plane_id"				=> $data['arrPlane'][0]['in_pilot_id'],
								   "in_transportation_leg_id"	=> $leg_id,
								   "dt_created"					=> date("Y-m-d H:i:s"),
								   "in_deleted"					=> 0
								);
								$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
								}	
							     $join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0
													);
								$this->orgtrasnportation_model->join_legs($join_data);
								$user_details = $this->common_model->get_user_profile($legs['user_id']);
								if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
								{	
								$transport_id = $transport_details[0]['in_transportation_id'];
								$owner_name = $transport_details[0]['st_display_name'];	
								$user_name = explode(" ",$transport_details[0]['st_display_name']);
								$email_address = $transport_details[0]['st_email'];
								$user_id         = $transport_details[0]['in_user_id'];
								$this->load->library('email');
								$email_details = $this->common_model->get_email_containt("58");
								$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
								if (isset($email_details[0]['st_email_body'])) {
									$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
									$templete = $email_details[0]['st_email_body'];
									$templete = str_replace("##user_name##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']  , $templete);
									$templete = str_replace("##tc_email##", $email_address , $templete);
									$templete = str_replace("##tc_name##", $owner_name, $templete);
									$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
									
									// added by sadique
									//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									
									
									$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
									
									$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
									$leg_date_time = '';
								
									if(!empty($start_time) && isset($start_time) && $start_time != '')
									{
										$leg_start_date = date("l F d,Y", strtotime($start_time));
										$leg_start_time = date("h:iA", strtotime($start_time));
					
										$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
										if(isset($start_time_zone) && $start_time_zone != '')	
										{
											$leg_date_time .= ' '.$start_time_zone.'.';
										}
									}
							
									$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);
								
									$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
									$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
									$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);
									$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
									$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
									
									if(isset($legs['leg_instruction']) && !empty($legs['leg_instruction']))
									{
										$leg_instruction_template = '<li style="padding-bottom:10px">'.$legs['leg_instruction'].'</li>';
									} else {
										$leg_instruction_template = '';
									}

									$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);		
									
									$strMail = $templete;
									//$to = 'rupesh@pulsesolutions.net';
									$to = $user_details[0]['st_email'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									$reply_to = $transport_details[0]['st_email'];
								
									$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
									$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
									$message = str_replace("##DONATION##",$donation,$message);
								
									$send_email = 0;							
									$sub_data = $this->common_model->check_user_unsub_emails($this->session->userdata('userid'));
									if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
									{
										$send_email = 0;										
									}
								
									$email_template_id = $email_details[0]['in_email_id'];
									$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
									if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
									{
										$send_email = 1;
									}	
								
									if($send_email == 0)
									{
										$transport_setting = $this->common_model->user_notification_setting($this->session->userdata('userid'));
										if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
										{
										$send_email = 1;
										}								
									}
								
									if($send_email == '1')
									{
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
									}
								
								}
								
								
							}
							
							$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
										);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
								$this->orgtrasnportation_model->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$legs['user_id']);
						  }
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') {
                                $data_airports_ar = array("st_state" => $finish['state'], "st_city" => $finish['city']);
                                $this->orgtrasnportation_model->update_airports($legs['dropoff_airport'], $data_airports_ar);
                            }
                            #================== Add overview path for legs start===============#	
                            
                              $origin_loc 		= ($legs['pickup_airport'] ?$legs['pickup_airport'].", ":"").($start['city']? $start['city'].",":"").($start['state'] ? $start['state'].", ":"").($start['postal_code'] ? $start['postal_code']:"").($start['country'] ? ",".$start['country']:"");
                              $dest_loc 	= ($legs['dropoff_airport'] ? $legs['dropoff_airport'].", ":"").($finish['city']? $finish['city'].",":"").($finish['state'] ? $finish['state'].",":"").($finish['postal_code'] ? $finish['postal_code']:"").($finish['country']? ", ".$finish['country']:"");
                              $routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$legs['route_type_id']);
							  $total_miles  =   $routes_miles['distance'];	
                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
                              $route_details = array(	"in_transportation_leg_id"	=> $leg_id,
                              "in_transportation_id"		=> $this->session->userdata('transport_id'),
                              "in_route_type"				=> $legs['route_type_id'],
                              "st_legs_details"			=> $routes_miles['route_path'],
                              "fl_distance"				=> $routes_miles['distance'],
                              "in_deleted"				=> "0"
                              );
                              $this->common_model->insert_data("tbl_routes",$route_details);
                              }
							  $this->orgtrasnportation_model->add_distance($total_miles);
							  
							  if($pickup_array['st_state']!='' && isset($pickup_array['st_state']))
							 {
								 array_push($state_rules_array,$pickup_array['st_state']);
							 }

							 if($dropoff_array['st_state']!='' && isset($dropoff_array['st_state']))
							 {
								 array_push($state_rules_array,$dropoff_array['st_state']);
							 }
							  
							  $this->send_mail_staterules($state_rules_array,$transport_details);
                             
                            #================== Add overview path for legs end===============#
						} elseif ($legs['route_type_id'] == '0') { //echo "<pre>";print_r($legs);die;
										$pickup_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "P",
                                "st_street" => $legs['pickup_street'],
                                "st_city" => $legs['pickup_city'],
                                "st_state" => $legs['pickup_state'],
                                "st_zip" => $legs['pickup_zip'],
                                "st_country" => $legs['pickup_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_2_modal'].' '.$legs['pick_year']))),
                                "st_timezone" => $legs['pickup_zone'],
                                //"st_geometry"				=> @serialize($lat_long),
                                "in_deleted" => "0"
                            );
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
                                "st_leg_type" => "D",
                                "st_street" => $legs['dropoff_street'],
                                "st_city" => $legs['dropoff_city'],
                                "st_state" => $legs['dropoff_state'],
                                "st_zip" => $legs['dropoff_zip'],
                                "st_country" => $legs['dropoff_country'],
                                "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['clockface_3_modal'].' '.$legs['drop_year']))),
                                "st_timezone" => $legs['dropoff_zone'],
                                //"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
                                "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
	
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
								$this->load->model('user_model');
							    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($legs['user_id']);
								if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
										$leg_vehicle_detail = array("in_transportation_id" => $this->session->userdata('transport_id'),
																	"in_user_id" => $this->session->userdata('userid'),
																	"in_vehicle_id" => $legs['user_id'],
																	"in_transportation_leg_id" => $leg_id,
																	"dt_created" => date("Y-m-d H:i:s"),
																	"in_deleted" => 0
																	);
								$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
								}
								
							     $join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0
													);
								$this->orgtrasnportation_model->join_legs($join_data);
								$user_details = $this->common_model->get_user_profile($legs['user_id']);
								if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)))
								{	
								$transport_id = $transport_details[0]['in_transportation_id'];
								$owner_name = $transport_details[0]['st_display_name'];	
								$user_name = explode(" ",$transport_details[0]['st_display_name']);
								$email_address = $transport_details[0]['st_email'];
								$user_id         = $transport_details[0]['in_user_id'];
								$this->load->library('email');
								$email_details = $this->common_model->get_email_containt("58");
								$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
								if (isset($email_details[0]['st_email_body'])) {
									$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
									$templete = $email_details[0]['st_email_body'];
									$templete = str_replace("##user_name##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']  , $templete);
									$templete = str_replace("##tc_email##", $email_address , $templete);
									$templete = str_replace("##tc_name##", $owner_name, $templete);
									$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
									
									//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									
									$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
									
									$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
									
									
									$leg_date_time = '';
									//echo '<pre/>';print_r($leg_type);
									//echo '<pre/>';print_r($user_legs);
								
									//if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && ($leg_type[0]['in_route_type'] == 0 || $leg_type[0]['in_route_type'] == 1)) 
									//{
									if(!empty($start_time) && isset($start_time) && $start_time != '')
									{
										$leg_start_date = date("l F d,Y", strtotime($start_time));
										$leg_start_time = date("h:iA", strtotime($start_time));
					
										$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
										if(isset($start_time_zone) && $start_time_zone != '')	
										{
											$leg_date_time .= ' '.$start_time_zone.'.';
										}
									}
							
									$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);
								
									$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
									$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
									$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);
									$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
									$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
									
									if(isset($legs['leg_instruction']) && !empty($legs['leg_instruction']))
									{
										$leg_instruction_template = '<li style="padding-bottom:10px">'.$legs['leg_instruction'].'</li>';
									} else {
										$leg_instruction_template = '';
									}

									$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);		
									
									$strMail = $templete;
									//$to = 'rupesh@pulsesolutions.net';
									$to = $user_details[0]['st_email'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									$reply_to = $transport_details[0]['st_email'];
								
									$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
									$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
									$message = str_replace("##DONATION##",$donation,$message);
								
									$send_email = 0;							
									$sub_data = $this->common_model->check_user_unsub_emails($this->session->userdata('userid'));
									if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
									{
										$send_email = 0;										
									}
								
									$email_template_id = $email_details[0]['in_email_id'];
									$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
									if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
									{
										$send_email = 1;
									}	
								
									if($send_email == 0)
									{
										$transport_setting = $this->common_model->user_notification_setting($this->session->userdata('userid'));
										if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
										{
										$send_email = 1;
										}								
									}
								
									if($send_email == '1')
									{
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
									}
								
								}
								}
								
								 $arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
										);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
								$this->orgtrasnportation_model->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$legs['user_id']);

						    }
			
                            #================== Add overview path for legs start===============#	
                            $origin_loc = ($legs['pickup_street'] ? $legs['pickup_street'] . ", " : "") . ($legs['pickup_city'] ? $legs['pickup_city'] . ", " : "") . ($legs['pickup_state'] ? $legs['pickup_state'] . ", " : "") . ($legs['pickup_zip'] ? $legs['pickup_zip'] : "") . ($legs['pickup_country'] ? ", " . $legs['pickup_country'] : "");
                            $dest_loc = ($legs['dropoff_street'] ? $legs['dropoff_street'] . ", " : "") . ($legs['dropoff_city'] ? $legs['dropoff_city'] . ", " : "") . ($legs['dropoff_state'] ? $legs['dropoff_state'] . ", " : "") . ($legs['dropoff_zip'] ? $legs['dropoff_zip'] : "") . ($legs['dropoff_country'] ? ", " . $legs['dropoff_country'] : "");
                            $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc), urlencode($dest_loc), "", $legs['route_type_id']);
                            $total_miles  =   $routes_miles['distance'];
							//echo "Route leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                            if (isset($routes_miles['route_path']) && $routes_miles['route_path'] != '') {
                                $route_details = array("in_transportation_leg_id" => $leg_id,
                                    "in_transportation_id" => $this->session->userdata('transport_id'),
                                    "in_route_type" => $legs['route_type_id'],
                                    "st_legs_details" => $routes_miles['route_path'],
                                    "fl_distance" => $routes_miles['distance'],
                                    "in_deleted" => "0"
                                );
                                $this->common_model->insert_data("tbl_routes", $route_details);
                            }
							$this->orgtrasnportation_model->add_distance($total_miles);
							
							if($pickup_array['st_state']!='' && isset($pickup_array['st_state']))
							{
								 array_push($state_rules_array,$pickup_array['st_state']);
							}

							if($dropoff_array['st_state']!='' && isset($dropoff_array['st_state']))
							{
								 array_push($state_rules_array,$dropoff_array['st_state']);
							}
							  
							$this->send_mail_staterules($state_rules_array,$transport_details);
							
                        }
							
						if(isset($legs['cover_leg_id']) && $legs['cover_leg_id']!=0 && !empty($legs['cover_leg_id']))
						{	
							$this->orgtrasnportation_model->update_leghandle($legs['cover_leg_id'],$leg_id);
						}
						$this->orgtrasnportation_model->sort_leg_date();
						if($legs['user_id']=='n-d-u')
						{		
							echo $leg_id;
						}	
						else {
							$this->session->set_flashdata('google_leg', 'New Leg created successfully.');	
							echo 1;	
							
						}	
	}
	
	public function insert_airline_leg()
	{
		$legs = $_POST['legsArray'][0];
		$sort_order = $this->orgtrasnportation_model->get_last_leg_order();
		$sort_order = $sort_order+1;
		$meeting_location = $legs['meeting_location'];
		$total_miles = 0;
		$state_rules_array = array();
		/*$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		if(empty($transport_details[0]["dt_pickup_date"]) || $transport_details[0]["dt_pickup_date"]=='0000-00-00' || $transport_details[0]["dt_pickup_date"]=='1969-12-31' ||
		   empty($transport_details[0]["dt_target"]) || $transport_details[0]["dt_target"]=='0000-00-00' || $transport_details[0]["dt_target"]=='1969-12-31' ||
		   (isset($sort_order) && $sort_order == 1)
		 )
		{  
			$update_transport_details = array("dt_pickup_date" 	=> date("Y-m-d", strtotime(str_replace(" - ", " ", $legs['pickup_airport_clock']))),
									"dt_target" 		=> date("Y-m-d", strtotime(str_replace(" - ", " ", $legs['dropoff_airport_clock']))),
								   "in_modified_by"     => $this->session->userdata('userid'),
							        "dt_modified" 		=> date("Y-m-d H:i:s"),
								   );
									  
			$this->orgtrasnportation_model->update_transport_details($update_transport_details);
		}*/
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			$legs_array = array("in_transportation_id" => $this->session->userdata('transport_id'),
									   "in_route_type" => 3,
									   "in_multi_user" => '0', 
									     "in_user_num" => '0', 
								 "st_meeting_location" => (isset($meeting_location) && $meeting_location != '') ? $meeting_location : "", //added by ghanshyam on 03Dec2014,	//added by ghanshyam on 03Dec2014
									   "in_created_by" => $this->session->userdata('userid'),
									   "in_sort_order" => $sort_order,
										  "dt_created" => date("Y-m-d H:i:s"),
										  "in_deleted" => "0"
								);

            $leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
			$base_airport_pickup = $this->orgtrasnportation_model->get_state_baseairport($legs['pickup_airport']);

			$base_airport_dropoff = $this->orgtrasnportation_model->get_state_baseairport($legs['dropoff_airport']);
			
			$airport_details = $this->orgtrasnportation_model->get_airport_details($base_airport_pickup['st_loc_id']);
			$start = $this->getLatLong($legs['pickup_airport']);
			$pickup_airport = '';
			if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
			{
				$pickup_airport = '';								
			}else
			{
				$pickup_airport = $legs['pickup_airport'];
			}

			

			$pickup_city 	= 	(isset($base_airport_pickup['st_city']) && !empty($base_airport_pickup['st_city'])) ? $base_airport_pickup['st_city']: $start['city'];	
			$dropoff_city 	=   (isset($base_airport_dropoff['st_city']) && !empty($base_airport_dropoff['st_city']))? $base_airport_dropoff['st_city']: $finish['city'];
			
            $pickup_array = array("in_transportation_leg_id" => $leg_id,
											   "st_leg_type" => "P",
												 "st_street" => $legs['pickup_airport'],
												   "st_city" => ($pickup_city) ? $pickup_city :'',
												  "st_state" => ($start['state']) ? $start['state'] :'',
												    "st_zip" => $start['postal_code'],
												"st_country" => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
											 //"dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['pickup_airport_clock']))),
											   "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ",$legs['pickup_airport_clock'].' '.$legs['pick_year']))),
											   "st_timezone" => $legs['pickup_airport_zone'],
                                                "in_deleted" => "0"
								  );
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') 
							{
                                $data_airports_ar = array("st_state" => $start['state'], "st_city" => $start['city']);
                                $this->orgtrasnportation_model->update_airports($legs['pickup_airport'], $data_airports_ar);
                            }
                            $airport_details = $this->orgtrasnportation_model->get_airport_details($legs['dropoff_airport']);

                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
                            if (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '' && isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') 
							{
                                $loc = $airport_details['st_latitude'] . "," . $airport_details['st_longitude'];
                            } else 
							{
                                $loc = (($legs['dropoff_airport'] ? $legs['dropoff_airport'] . ", " : "") . (isset($airport_details['st_city']) ? $airport_details['st_city'] . ", " : "") . (isset($airport_details['st_state']) ? $airport_details['st_state'] . ", " : "") . (isset($airport_details['st_iso_country']) ? strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]) : ""));
                            }
                            $finish = $this->getLatLong($base_airport_dropoff['st_loc_id']);
							
							$dropoff_airport = '';
							if((!isset($airport_details['st_city']) || $airport_details['st_city'] == '') && (!isset($airport_details['st_state']) || $airport_details['st_state'] == '') && (!isset($airport_details['st_iso_country']) || $airport_details['st_iso_country'] == ''))
							{
								$dropoff_airport = '';								
							}else
							{
								$dropoff_airport = $legs['dropoff_airport'];
							}
							
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
																"st_leg_type" => "D",
																  "st_street" => $legs['dropoff_airport'],
																	"st_city" => ($dropoff_city) ? $dropoff_city : '',
																   "st_state" => ($finish['state']) ? $finish['state'] : '',
																	 "st_zip" => $finish['postal_code'],
																 "st_country" => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$airport_details['st_iso_country']]),
															  //"dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs['dropoff_airport_clock']))),
															    "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ",$legs['dropoff_airport_clock'].' '.$legs['drop_year']))),
															    "st_timezone" => $legs['dropoff_airport_zone'],
																 "in_deleted" => "0"
												  );
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
							
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
								$this->load->model('user_model');
								$airline_detail	 = $this->user_model->get_airline_detail($legs['user_id']);	
								if(!empty($airline_detail) && isset($airline_detail[0]['in_id']))
								{
									$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
																		  "in_user_id"	=> $legs['user_id'],
																	   "in_airline_id"	=> $airline_detail[0]['in_id'],
															"in_transportation_leg_id"	=> $leg_id,
																		  "dt_created"	=> date("Y-m-d H:i:s"),
																		  "in_deleted"	=> 0
																);
									$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
								}	
							    $join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0
													);
								$this->orgtrasnportation_model->join_legs($join_data);
								$user_details = $this->common_model->get_user_profile($legs['user_id']);
								if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
								{	
									$transport_id = $transport_details[0]['in_transportation_id'];
									$owner_name = $transport_details[0]['st_display_name'];	
									$user_name = explode(" ",$transport_details[0]['st_display_name']);
									$email_address = $transport_details[0]['st_email'];
									$user_id         = $transport_details[0]['in_user_id'];
									$this->load->library('email');
									$email_details = $this->common_model->get_email_containt("58");
									$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
									if (isset($email_details[0]['st_email_body'])) 
									{
										$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
										$templete = $email_details[0]['st_email_body'];
										$templete = str_replace("##user_name##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']  , $templete);
										$templete = str_replace("##tc_email##", $email_address , $templete);
										$templete = str_replace("##tc_name##", $owner_name, $templete);
										$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
										
										
										//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
										
										
										$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
										if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
											{
												$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
											} else {
												$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
											}
										
										$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
										$leg_date_time = '';
								
										if(!empty($start_time) && isset($start_time) && $start_time != '')
										{
											$leg_start_date = date("l F d,Y", strtotime($start_time));
											$leg_start_time = date("h:iA", strtotime($start_time));
					
											$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
											if(isset($start_time_zone) && $start_time_zone != '')	
											{
												$leg_date_time .= ' '.$start_time_zone.'.';
											}
										}
							
										$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);
								
										$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
										$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
										$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);
										$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
										$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
										
										$leg_instruction_template = '';
										$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);	
										
										$strMail = $templete;
										
										//$to = 'rupesh@pulsesolutions.net';
										$to = $user_details[0]['st_email'];
										$subject = $email_details[0]['st_email_subject'];
										$category = $email_details[0]['st_category'];
										$message = $strMail;
										$reply_to = $transport_details[0]['st_email'];
								
										$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
										$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
										$message = str_replace("##DONATION##",$donation,$message);
								
										$send_email = 0;							
										$sub_data = $this->common_model->check_user_unsub_emails($this->session->userdata('userid'));
										if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
										{
											$send_email = 0;										
										}
										
										$email_template_id = $email_details[0]['in_email_id'];
										$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
										if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
										{
											$send_email = 1;
										}	
								
										if($send_email == 0)
										{
											$transport_setting = $this->common_model->user_notification_setting($this->session->userdata('userid'));
											if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
											{
											$send_email = 1;
											}								
										}
								
										if($send_email == '1')
										{
										$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
										}
								
									}
								}
							
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
															"in_transportation_id" => $this->session->userdata('transport_id'),
																	  "in_user_id" => $legs['user_id'],
																		 "in_type" => 12,
															 "in_transport_leg_id" => $leg_id,
																  "in_modified_by" => $legs['user_id'],
																	  "dt_created" => date("Y-m-d H:i:s"),
																	  "in_deleted" => "0"
															);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
								$this->orgtrasnportation_model->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$legs['user_id']);
							}
							
                            if (isset($airport_details['st_city']) && $airport_details['st_city'] == '') 
							{
                                $data_airports_ar = array("st_state" => $finish['state'], "st_city" => $finish['city']);
                                $this->orgtrasnportation_model->update_airports($legs['dropoff_airport'], $data_airports_ar);
                            }
                            #================== Add overview path for legs start===============#	
                            
                              $origin_loc 		= ($start['city']? $start['city'].", ":"").($start['state'] ? $start['state'].", ":"").($start['postal_code'] ? $start['postal_code']:"").($start['country'] ? ",".$start['country']:"");
                              $dest_loc 	    = ($finish['city']? $finish['city'].", ":"").($finish['state'] ? $finish['state'].", ":"").($finish['postal_code'] ? $finish['postal_code']:"").($finish['country']? ", ".$finish['country']:"");
                              $routes_miles  = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$legs['route_type_id']);
							  $total_miles  =   $routes_miles['distance'];		
                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
									$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
															"in_transportation_id"		=> $this->session->userdata('transport_id'),
															"in_route_type"				=> $legs['route_type_id'],
															"st_legs_details"			=> $routes_miles['route_path'],
															"fl_distance"				=> $routes_miles['distance'],
															"in_deleted"				=> "0"
															);
									$this->common_model->insert_data("tbl_routes",$route_details);
                              }
                             $this->orgtrasnportation_model->add_distance($total_miles);
                            #================== Add overview path for legs end===============#
							
							if($pickup_array['st_state']!='' && isset($pickup_array['st_state']))
							{
								 array_push($state_rules_array,$pickup_array['st_state']);
							}

							 if($dropoff_array['st_state']!='' && isset($dropoff_array['st_state']))
							 {
								 array_push($state_rules_array,$dropoff_array['st_state']);
							 }
							 
							 $this->send_mail_staterules($state_rules_array,$transport_details);
						 
						if(isset($legs['cover_leg_id']) && $legs['cover_leg_id']!=0 && !empty($legs['cover_leg_id']))
						{	
							$this->orgtrasnportation_model->update_airline_leghandle($legs['cover_leg_id'],$leg_id);
						}
						$this->orgtrasnportation_model->sort_leg_date();
						if($legs['user_id']=='n-d-u')
						{		
							echo $leg_id;
						}	
						else 
						{
							$this->session->set_flashdata('google_leg', 'New Leg created successfully.');	
							echo 1;		
						}		
						
						//$this->session->set_flashdata('google_leg', 'New Leg created successfully.');	
					//echo 1;	
	}
	
	function create_overnight_leg($id)
	{
		$legs = $_POST['legsArray'][0];
		$sort_order = $this->orgtrasnportation_model->get_last_leg_order();
		$sort_order = $sort_order+1;
		$meeting_location = $legs['meeting_location'];
		$state_rules_array = array();	
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		  $legs_array = array("in_transportation_id" => $this->session->userdata('transport_id'),
										"in_route_type" => 2,
										"in_multi_user" =>  '0', //added by ghanshyam on 03Dec2014
										  "in_user_num" =>  '0', //added by ghanshyam on 03Dec2014
								  "st_meeting_location" => (isset($meeting_location) && $meeting_location != '') ? $meeting_location : "", //added by ghanshyam on 03Dec2014,	//added by ghanshyam on 03Dec2014
                                        "in_created_by" => $this->session->userdata('userid'),
										"in_sort_order" => $sort_order,
										   "dt_created" => date("Y-m-d H:i:s"),
											"in_deleted" => "0"
									);

           $leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
		   $pickup_array = array("in_transportation_leg_id" => $leg_id,
                                              "st_leg_type" => "O",
                                                "st_street" => $legs['o_pickup_street'],
													"st_city" => $legs['o_pickup_city'],
													"st_state" => $legs['o_pickup_state'],
													"st_zip" => $legs['o_pickup_zip'],
												"st_country" => $legs['o_pickup_country'],
											    "in_deleted" => "0"
                            );
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
							if(isset($legs['user_id']) && !empty($legs['user_id']) && $legs['user_id']!='0' && $legs['user_id']!='n-d-u' )
							{
							  $join_data = array("in_transportation_id" => $this->session->userdata('transport_id'),
													"in_user_id" => $legs['user_id'],
													"in_transportation_leg_id" => $leg_id,
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => 0
													);
								$this->orgtrasnportation_model->join_legs($join_data);
								$user_details = $this->common_model->get_user_profile($legs['user_id']);
								if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
								{	
								$transport_id = $transport_details[0]['in_transportation_id'];
								$owner_name = $transport_details[0]['st_display_name'];	
								$user_name = explode(" ",$transport_details[0]['st_display_name']);
								$email_address = $transport_details[0]['st_email'];
								$user_id         = $transport_details[0]['in_user_id'];
								$this->load->library('email');
								$email_details = $this->common_model->get_email_containt("58");
								$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
								if (isset($email_details[0]['st_email_body'])) {
									$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
									$templete = $email_details[0]['st_email_body'];
									$templete = str_replace("##user_name##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']  , $templete);
									$templete = str_replace("##tc_email##", $email_address , $templete);
									$templete = str_replace("##tc_name##", $owner_name, $templete);
									$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
								
									//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									
									$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
									if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
									
									$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
									
									
									$leg_date_time = '';
								
									if(!empty($start_time) && isset($start_time) && $start_time != '')
									{
										$leg_start_date = date("l F d,Y", strtotime($start_time));
										$leg_start_time = date("h:iA", strtotime($start_time));
					
										$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
										if(isset($start_time_zone) && $start_time_zone != '')	
										{
											$leg_date_time .= ' '.$start_time_zone.'.';
										}
									}
							
									$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);
								
									$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
									$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
									$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);
									$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
									$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
									
									$leg_instruction_template = '';
									$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);	
									$templete = str_replace("##DONATION##",$donation,$templete);	
									
									$strMail = $templete;
									//$to = 'rupesh@pulsesolutions.net';
									$to = $user_details[0]['st_email'];
									$subject = $email_details[0]['st_email_subject'];
									$category = $email_details[0]['st_category'];
									$message = $strMail;
									$reply_to = $transport_details[0]['st_email'];
								
									$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
		
									$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($to),$message);
								
									$send_email = 0;							
									$sub_data = $this->common_model->check_user_unsub_emails($this->session->userdata('userid'));
									if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
									{
										$send_email = 0;										
									}
								
									$email_template_id = $email_details[0]['in_email_id'];
									$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
									if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
									{
										$send_email = 1;
									}	
								
									if($send_email == 0)
									{
										$transport_setting = $this->common_model->user_notification_setting($this->session->userdata('userid'));
										if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
										{
										$send_email = 1;
										}								
									}
								
									if($send_email == '1')
									{
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
									}
								
								}
								
								
								}
							}
							$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
										"in_transportation_id" => $this->session->userdata('transport_id'),
										"in_user_id" => $legs['user_id'],
										"in_type" => 12,
										"in_transport_leg_id" => $leg_id,
										"in_modified_by" => $legs['user_id'],
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0"
										);
								$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
								$this->orgtrasnportation_model->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$legs['user_id']);
								if($pickup_array['st_state']!='' && isset($pickup_array['st_state']))
								{
									array_push($state_rules_array,$pickup_array['st_state']);
								}
							 
								$this->send_mail_staterules($state_rules_array,$transport_details);
								$this->orgtrasnportation_model->sort_leg_date();
			$this->session->set_flashdata('google_leg', 'New leg created successfully.');

			if($legs['user_id']=='n-d-u')
			{		
							echo $leg_id;
			}	
			else {
							$this->session->set_flashdata('google_leg', 'New Leg created successfully.');	
							echo 1;	
			}	
					
	 					
							
	}
	function delete_routing_legs()
	{
		$id = $_POST['id'];
		$covering_legs_detail = $this->orgtrasnportation_model->covering_legs($id);
		$details = array('in_deleted'=>1,'dt_modified'=>date("Y-m-d H:i:s"));
		$routing_data = $this->orgtrasnportation_model->delete_routing_leg($details,$id);
		//$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$user_profile = $this->common_model->get_user_profile($covering_legs_detail['in_user_id']);
			if((!empty($covering_legs_detail)) && (count($covering_legs_detail) > 0) && (is_array($covering_legs_detail)) )
			{	
							$transport_id = $covering_legs_detail['in_transportation_id'];
							//$owner_name = $transport_details[0]['st_display_name'];	
							//$user_name = explode(" ",$transport_details[0]['st_display_name']);
							$email_address = $user_profile[0]['st_email'];
							$phone_no	   = $user_profile[0]['st_primary_phone'];
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("100");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							if (isset($email_details[0]['st_email_body'])) 
							{
								if($covering_legs_detail['in_route_type']==0)
									$type = 'Road';
								else
									$type = 'Aviation';
								
								$pick_location = $covering_legs_detail['st_from_zip'].' '.$covering_legs_detail['st_from_city'].' '.$covering_legs_detail['st_from_state'].' '.$covering_legs_detail['st_from_country'];
								$dropoff_location = $covering_legs_detail['st_to_zip'].' '.$covering_legs_detail['st_to_city'].' '.$covering_legs_detail['st_to_state'].' '.$covering_legs_detail['st_to_country'];
								
								$templete = $email_details[0]['st_email_body'];
								
								$templete = str_replace("##USER##",$user_profile[0]['st_display_name'].' '.$user_profile[0]['st_last_name'], $templete);
								$templete =	str_replace("##XXX##","#DBT".$transport_id, $templete);
								$templete = str_replace("##leg_type##",$type, $templete);
								$templete = str_replace("##pickup_location##",$pick_location, $templete);
								$templete = str_replace("##dropoff_location##",$dropoff_location, $templete);
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
						$templete	=	str_replace("##DONATION##",$donation,$templete);
								
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $user_profile[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$reply_to = $transport_details[0]['st_email'];
								
								$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_profile[0]['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
		
								$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_profile[0]['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
						}
				}
		
		$this->session->set_flashdata('google_leg', 'Requested Routing Leg Deleted Successfully');
		$base_url = base_url().'user-submission/'.$this->session->userdata('transport_id');
		echo json_encode($base_url);
	}
	
	function delete_airline_routing_legs()
	{
		$id = $_POST['id'];
		$covering_trip_date = $this->orgtrasnportation_model->get_routing_airline_details($id);
		$details = array('in_deleted'=>1,'dt_modified'=>date("Y-m-d H:i:s"));
		$trip_date = '';
		$routing_data = $this->orgtrasnportation_model->delete_airlinerouting_leg($details,$id);
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$user_profile = $this->common_model->get_user_profile($covering_trip_date['in_user_id']);
			if((!empty($covering_trip_date)) && (count($covering_trip_date) > 0) && (is_array($covering_trip_date)) )
			{	
							$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
		
							$transport_id = $transport_details[0]['in_transportation_id'];
							$email_address = $user_profile[0]['st_email'];
							$phone_no	   = $user_profile[0]['st_primary_phone'];
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("117");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							if (isset($email_details[0]['st_email_body'])) 
							{
								if(isset($covering_trip_date['dt_trip_date']) && !empty($covering_trip_date['dt_trip_date']) && $covering_trip_date['dt_trip_date']!='1969-12-31' && $covering_trip_date['dt_trip_date']!='0000-00-00')
								{
									$trip_date = date("D M d",strtotime($covering_trip_date['dt_trip_date']));
								} else {
									$trip_date = '';
								}	
										
								$pickup_location = '';
								if(isset($transport_details[0]['st_from_city']) && trim($transport_details[0]['st_from_city']) != '')
								{
									$pickup_location .= $transport_details[0]['st_from_city'];
								}
								if(isset($transport_details[0]['st_from_street']) && trim($transport_details[0]['st_from_street']) != '')
								{
									$pickup_location .= ' ('.$transport_details[0]['st_from_street'].') ';
								}
				
								$dropoff_location = '';
				
								if(isset($transport_details[0]['st_to_city']) && trim($transport_details[0]['st_to_city']) != '')
								{
									$dropoff_location .= $transport_details[0]['st_to_city'];
								}
								if(isset($transport_details[0]['st_to_street']) && trim($transport_details[0]['st_to_street']) != '')
								{
									$dropoff_location .= ' ('.$transport_details[0]['st_to_street'].') ';
								}
								
								$templete = $email_details[0]['st_email_body'];
								
								$templete = str_replace("##USER##",$user_profile[0]['st_display_name'].' '.$user_profile[0]['st_last_name'], $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
								$templete = str_replace("##trip_date##",$trip_date, $templete);
								$templete = str_replace("##pickup_location##",$pickup_location, $templete);
								$templete = str_replace("##dropoff_location##",$dropoff_location, $templete);
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
								{
									$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
								} else {
									$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
								}
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
							
								
								$strMail = $templete;
								//$to = 'rupesh@pulsesolutions.net';
								$to = $user_profile[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								//$reply_to = $transport_details[0]['st_email'];
								
								$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_profile[0]['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
		
								$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_profile[0]['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
								$message = str_replace("##DONATION##",$donation,$message);
								
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
							}
			}
		
		$this->session->set_flashdata('google_leg', 'Requested Routing Trip Date Deleted Successfully');
		$base_url = base_url().'user-submission/'.$this->session->userdata('transport_id');
		echo json_encode($base_url);
	}
	
		public function inform_driver() 
		{
		
			$this->load->library('email');
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			if($this->input->post('frm_action')=='submit') {
				//Getting email body
				//$email_body = $this->common_model->get_email_containt('37');
				
				$to_address = $this->input->post('txtoemail');
				$txtuser_name = $this->input->post('txtuser_name');
				$txtouserid = $this->input->post('txtouserid');
				$transport_information = $this->input->post('txtMessage'); 
				
				$email_details = $this->common_model->get_email_containt("108");
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$this->session->userdata('transport_id')."' target='_blank'>#DBT".$this->session->userdata('transport_id')."</a>";
				if (isset($email_details[0]['st_email_body'])) 
				{							
					
					$user_display_info = '';
					$user_display_info .= 'Email: '.$user_details[0]['st_email']."<br>";
					if(isset($user_details[0]['st_primary_phone']) && !empty($user_details[0]['st_primary_phone']))
					{	
						$user_display_info .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
					}
					
					$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
					$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
					$user_link_name	.=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
					$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
					$user_link_name	.=	"</a>";

					$templete = $email_details[0]['st_email_body'];
					$templete = str_replace("##TC_sender_name##",$user_link_name, $templete);
					$templete = str_replace("##TC_sender##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'], $templete);
					
					$templete =	str_replace("##transport_number##",$transport_link, $templete);
					$templete = str_replace("##Volunteer_name##",$txtuser_name, $templete);
					$templete = str_replace("##Transport_information##",$transport_information, $templete);
					$templete = str_replace("##TC_contact_information##",$user_display_info, $templete);
					$templete  = str_replace("#current_year#",date('Y'),$templete);	

					$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);

					
					$strMail = $templete;		
				
					$to = $to_address;
					$subject  = $email_details[0]['st_email_subject'];
					$subject  = str_replace("##TC_sender##",$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'],$subject);
					$subject  = str_replace("##XXX##",'#DBT'.$this->session->userdata('transport_id'),$subject);
					$category = $email_details[0]['st_category'];
					$message  = $strMail;
								
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($txtouserid).'/'.$this->common_function->encode_base64($to_address),$message);
		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($txtouserid).'/'.$this->common_function->encode_base64($to_address),$message);
					$message = str_replace("##DONATION##",$donation,$message);
					
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
			}				
			$this->session->set_flashdata('google_leg','Mail Sent Successfully.');
			redirect($_SERVER['HTTP_REFERER']);
			
		}
	}	
	
	function test_detail()
	{
		$this->session->set_userdata('transport_id','6970');
		$leg_details  = $this->orgtrasnportation_model->get_trans_legs_join_user_test();
		echo "<pre>";print_r($leg_details);die;
		$data['leg_details'] = $leg_details;
	}
	function check_phone_no_status()
	{
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$profile_info = $user_details[0];
		
		//if(isset($profile_info) && isset($profile_info['st_primary_phone']) && $profile_info['st_primary_phone']!='')
		if(isset($profile_info['st_primary_phone']) && $profile_info['st_primary_phone']!='')
		{
			if($profile_info['in_number_verified']==1){
				$status = '0';
			}else{
				$status = '2';
			}
		} else {
			
				$status = '1';
			
		}			
		echo $status;	
	}
	
	function get_user_legs()
	{
		$transport_id = $this->input->post('transport_id');
		$this->session->set_userdata('transport_id',$transport_id);
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$user_joined_leg = array();
		$status = array();
		//$legs_detail = $this->orgtrasnportation_model->get_trans_legs_user();
		$test = '';
		if(isset($transport_details['0']['in_status']) && $transport_details['0']['in_status'] ==1 )
		{	
			$legs_detail = $this->orgtrasnportation_model->get_trans_legs_user();
			if(count($legs_detail)>0)
			{
				foreach($legs_detail as $key=>$value)
				{
					$user_joined_leg[] = array('in_leg_id'=>$value['source_leg_id'],
										   'sort_order'=>$value['leg_order'] 
										   );
					$test .='<tr>';
					$test .='<td class="checkboxes"><div class="custom-checkbox "><input name="delete_leg[]" title="" type="checkbox" id="'.$value['source_leg_id'].'" value="'.$value['source_leg_id'].'" class="animal_listing_data"><label for="'.$value['source_leg_id'].'"></label></div>';
					$test .='</td>';	
					$test .='<td class="leg-col">Leg'.$value['leg_order'].'</td>';
					if($value['route_type_id'] == '1' || $value['route_type_id'] == '0' || $value['route_type_id'] == '3') 
					{ 
						$test .= '<td><span class="leg-date-time">'.date("M d - h:i A",strtotime($value['pick_start_time']))." - ".$value['pick_timezone'].'</span><span class="leg-date-time">'.date("M d - h:i A",strtotime($value['drop_start_time']))." - ".$value['drop_timezone'].'</span></td>';
						if($value['route_type_id'] == '3')
						{
							$test .= '<td>'.(isset($value['pick_city']) ?$value['pick_city']:"").((isset($value['pick_street']) && $value['pick_street'] != '') ?" (".$value['pick_street'].")":"").'<i class="material-icons backspace">keyboard_backspace</i>'; 
							$test .= (isset($value['drop_city'])?$value['drop_city']:"").((isset($value['drop_street']) && $value['drop_street'] != '') ?" (".$value['drop_street'].")":""); 
							//$test .= '<span class="dist-miles">(Distance –'.round($value['leg_distance']).'miles)</span>';
							$test .= '</td>';
						} else {
						$test .= '<td>'.((isset($value['pick_street']) && $value['pick_street'] != '') ?$value['pick_street'].", ":"").(isset($value['pick_city']) ?$value['pick_city'].", ":"").(isset($value['pick_state'])?$value['pick_state']:"").(isset($value['pick_zip'])?", ".$value['pick_zip']:"").'<i class="material-icons backspace">keyboard_backspace</i>'; 
						$test .= ((isset($value['drop_street']) && $value['drop_street'] != '') ?$value['drop_street'].", ":"").(isset($value['drop_city'])?$value['drop_city'].", ":"").(isset($value['drop_state'])?$value['drop_state']:"").(isset($value['drop_zip'])?", ".$value['drop_zip']:""); 
						//$test .= '<span class="dist-miles">(Distance –'.round($value['leg_distance']).'miles)</span>';
						$test .= '</td>';
						}
					} else 
					{ 
						$test .='<td>&nbsp;</td>';
						$test .='<td><strong>Overnight Leg: </strong>'.(isset($value['overnight_street']) && $value['overnight_street'] != '' ?$value['overnight_street'].", ":"").(isset($value['overnight_city']) ?$value['overnight_city'].", ":"").(isset($value['overnight_state'])?$value['overnight_state']:"").(isset($value['overnight_zip'])?", ".$value['overnight_zip']:"").'</td>';
					} 
						$test .='</tr>';							  
				}	
			}
			$status['leg_details'] = $test;
			$status['status'] = $transport_details['0']['in_status'];
		}else {
			$status['status'] = $transport_details['0']['in_status'];
		}
		echo json_encode($status);	
	}
	
	

	function delete_user_legs()
	{
		if(!$this->input->post('transport_id') || $this->input->post('transport_id')=='')
		{
			redirect($this->config->item('base_url'));
		} else {
			$this->session->set_userdata('transport_id',$this->input->post('transport_id'));	
		}
		
		$deleted_leg_ids = array();
		$deleted_leg_ids = $this->input->post('delete_leg');
		
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$this->session->set_userdata('org_id',isset($transport_details['0']['in_organization_id'])?$transport_details['0']['in_organization_id']:"");
		
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		
			if(count($deleted_leg_ids)>0)
			{	
				if($transport_details['0']['st_trans_type']=="D" && $transport_details['0']['in_airline_transport']=="1")
				{
				
							$this->delete_routing_leg($transport_details,$this->session->userdata('userid'),$deleted_leg_ids);
				} else {
							$this->delete_pre_specify_legs($transport_details,$this->session->userdata('userid'),$deleted_leg_ids);
				}
			}	
		
		$this->session->set_flashdata('google_leg', 'We have removed you from the leg and notified the transport coordinator.');
		redirect($this->config->item('base_url').'dashboard');
		
	}

	public function delete_pre_specify_legs($transport_details,$user_id,$deleted_leg_ids=array())
	{
		$total_miles_removed = 0;
		$legs_array = array();
		if(count($deleted_leg_ids)>0)
		{	
			$user_driver_email = array();
				$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
										 "user_email"	=> $transport_details['0']['st_email'],
										 "display_name" => $transport_details['0']['st_display_name']
									    );
			foreach($deleted_leg_ids as $key=>$value)
			{
				$legs_ids = $value;	
				
					if($legs_ids>0 && $legs_ids!='')
					{	
						$this->orgtrasnportation_model->leave_legs_by_user_id($legs_ids,$user_id);		
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
						if(!empty($user_legs))
						{
								$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
								 $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
								
								$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
								if(count($route_details)<=0)
								{
									if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	=  $total_miles['distance'];
								//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
								}
								else
								{
									$total_miles	=  $route_details['fl_distance'];
								}
								$total_miles_removed = $total_miles_removed + $total_miles;		
								$this->orgtrasnportation_model->update_distance($total_miles);
								
								$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));	
									 					
								$legs_array[] = array("target_date"   => $target_date,
													  "leg_origin"      => $origin1,
													  "leg_destination" => $destinations1,
													  );
						
						}
						
					}
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left leg from transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';							
					/*$arr_notification = array("in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"st_notification_msg"	=> $notification_message,
												"in_type"				=> '0',
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );*/
					$arr_notification = array(	"in_organization_id"	=> $transport_details['0']['in_organization_id'],
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   =>  $legs_ids, //added By Amit
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 13,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );	
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
			}
			$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
			$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
			$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
			$cover_leg = 0;
			$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
			if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0 && isset($transport_details['0']['in_distance_covered']) && $transport_details['0']['in_distance_covered'] > 0)
			{
					$totol_remaining = $transport_details['0']['in_distance_covered'] - $total_miles_removed;
					if($totol_remaining > 0)
					{
						$percent = number_format(($totol_remaining*100)/$transport_details['0']['in_tot_distance'],2,".","");
						$percent = ($percent>=100)?100:$percent;
					} else {
						$percent = 0;
					}	
			}
			else
			{
					$percent = 0;
			}
		
			$name_arr = array("name"		      => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
							"transport_id" 	  => $this->session->userdata('transport_id'),
						    "percent" 		  => $percent,
							"total_leg"	      => ($leg_data['cnt'] ? $leg_data['cnt'] : 0),
							"cover_leg"       => $cover_leg,
							"st_org_name"     => $transport_details['0']['st_org_name'],
							"st_display_name" => $transport_details['0']['st_display_name'],
							"st_email"        => $transport_details['0']['st_email'],
							"st_add_comments" => $transport_details['0']['st_add_comments'],
							"co_user_id"      => $transport_details['0']['in_user_id'],
						  );
			$this->delete_leg_email($user_driver_email,"109",$name_arr,$legs_array);
		}
	}
	
	
	function delete_routing_leg($transport_details,$user_id,$deleted_leg_ids=array())
	{
		$total_miles_removed = 0;
		$legs_array = array();
		if(count($deleted_leg_ids)>0)
		{	
			$user_driver_email = array();
			$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
									 "user_email"	=> $transport_details['0']['st_email'],
									 "display_name" => $transport_details['0']['st_display_name']
									);
			foreach($deleted_leg_ids as $key=>$value)
			{
				$leg_id = $value;	
				$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);
				$order_id = $user_legs['sort_order'];
				$this->orgtrasnportation_model->delete_user_legs($leg_id);	
				if(!empty($user_legs))
				{
						$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
	
						if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
						{
							$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
						}
						else
						{
							$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
						}
						if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
						{
							$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
						}
						else
						{
							$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
						}
						$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
						$total_miles  	= $total_miles['distance'];	
						$total_miles_removed = $total_miles_removed + $total_miles;		
						$this->orgtrasnportation_model->update_distance($total_miles);
					
						
					
						$legs_array[] = array("target_date"   => $target_date,
													  "leg_origin"      => $origin1,
													  "leg_destination" => $destinations1,
													  );			 					
						
			
				}
				$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
				$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
				$notification_message = '<div class="timeline-body border">
							<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left transportation.</h2>
							<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div>
							</div>';							
				$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_transport_leg_id"=>$leg_id,
											"in_user_id"			=> $this->session->userdata('userid'),
											"in_type"				=> 11,
											"in_modified_by"		=> $this->session->userdata('userid'),
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
									  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				$this->orgtrasnportation_model->update_order_legs($order_id,$this->session->userdata('transport_id'));
				
			}
			if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0  && isset($transport_details['0']['in_distance_covered']) && $transport_details['0']['in_distance_covered'] > 0)
			{
							$totol_remaining = $transport_details['0']['in_distance_covered'] - $total_miles_removed;
							if($totol_remaining > 0)
							{	
								$percent = number_format(($totol_remaining*100)/$transport_details['0']['in_tot_distance'],2,".","");
								$percent = ($percent>=100)?100:$percent;
							} else {
								$percent = 0;
							}	
			}
			else
			{
							$percent = 0;
			}
						
			$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
			$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
			$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
			$cover_leg = 0;
			$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
			$name_arr = array(    "name"		  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
							"transport_id" 	  => $this->session->userdata('transport_id'),
						    "percent" 		  => $percent,
							"total_leg"	      => ($leg_data['cnt'] ? $leg_data['cnt'] : 0),
							"cover_leg"       => $cover_leg,
							"st_org_name"     => $transport_details['0']['st_org_name'],
							"st_display_name" => $transport_details['0']['st_display_name'],
							"st_email"        => $transport_details['0']['st_email'],
							"st_add_comments" => $transport_details['0']['st_add_comments'],
							"co_user_id"      => $transport_details['0']['in_user_id'],
						  );
			$this->delete_leg_email($user_driver_email,"109",$name_arr,$legs_array);
		}		
	}

	function delete_leg_email($all_email,$email_id,$transport_details,$legs_array)
	{	
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);		
			//$templete	= str_replace("##Pickup_date##",$transport_details['target_date'],$templete);
			$templete	= str_replace("##user_display_name##",$transport_details['name'],$templete);
			
			$templete	= str_replace("##transport_id##","#DBT".$this->session->userdata('transport_id'),$templete);
			$templete	= str_replace("##percentage##",$transport_details['percent'],$templete);
			
			$templete	= str_replace("##transport_url##",base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'),$templete);
			
			$subject	= str_replace("##transport_id##","#DBT".$this->session->userdata('transport_id'),$subject);
			//$subject	= str_replace("##Pickup_date##",$transport_details['target_date'],$subject);
			
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}

			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
			}
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
			
					
			//$this->email->subject($subject);
			if(isset($transport_details['leg_origin']) && isset($transport_details['leg_destination'])){
				//<b>From</b> ##leg_start## <b>To</b> ##leg_end##
			//$templete =	str_replace("##leg_start##",$transport_details['leg_origin'], $templete);	
			//$templete =	str_replace("##leg_end##",$transport_details['leg_destination'], $templete);
			}
			if(count($legs_array)>0)
			{
				$html_content = '';
				foreach($legs_array as $key=>$value)
				{
					if(isset($value['leg_origin']) && isset($value['leg_destination']))
					{	
						$html_content .="<b>From</b> ".$value['leg_origin']." <b>To</b> ".$value['leg_destination']."<br>";
					}	
				}
				$templete =	str_replace("##leg_details##",$html_content, $templete);
			}	
			if(isset($transport_details['total_leg']) && isset($transport_details['cover_leg']))
			{
				$templete =	str_replace("##total_legs##",$transport_details['total_leg'], $templete);	
				$templete =	str_replace("##cover_legs##",$transport_details['cover_leg'], $templete);
			}
			
			$user_detail_array = array();
			if(isset($all_email) && !empty($all_email))
			{
				$inc_val = 0;
				foreach($all_email as $key=>$values)
				{
					$templete2 = str_replace("##transport_coordinator##",$values['display_name'],$templete);
					$strMail = $templete2;
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);
					
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
					
					$send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
					
					$inc_val++;
				}
				
				
					$email_type = "4"; 
					$email_type_detail = "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
					
		}
	}
	
	function generate_fb_image_option1()
	{
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option1.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string   = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? $transport_info['st_org_code'] : 'DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = 'From: '.$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = 'To: '.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		if($transport_info['dt_target']!='1969-12-31' && $transport_info['dt_target']!='0000-00-00' && $transport_info['dt_target']!='' && isset($transport_info['dt_target']) )
		{	
			$end_date 	= date("D, M d",strtotime($transport_info['dt_target']));
		} else {
			$end_date = '';
		}	
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		$arrow_image = imagecreatefrompng($arrow_pics);
		list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
		$textDarkGrey = imagecolorallocate ($im,70,70,70);
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		} 
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,160,63, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,160,83, $textColorWhite, $bold, $string2);
		imagettftext($im,11, 0, 10,145, $textDarkGrey, $font,$transport_from);
		imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+45,145, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 10,165, $textDarkGrey, $font, $start_date);
		}
		if($end_date!='')
		{	
			imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		}
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,11, 0, 10,190, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 50,190, $textColorOrange, $bold,count($leg_details).' Legs');
			$x_cor = strlen(count($leg_details))>1?108:100;
			imagettftext($im,11, 0,$x_cor,190, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "44";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				imagecopyresized($thumb, $im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,45,45,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	// added by sadique on 14-3-18
	
	function generate_fb_image_option5()
	{   
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";		
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));			
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file 	   = $upload_dir."doobert_fb_post_option5.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{
			$start_date = date("l, F d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}	
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,180,70, $textDarkGrey, $font, $string);
		imagettftext($im,11, 0,160,90, $textColorGrey, $font, $string2);
		
		imagettftext($im,11, 0,130,130, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+180,130, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 175,130, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+210,130, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 150,150, $textDarkGrey, $font, $start_date);
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,11, 0, 140,170, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 180,170, $textColorOrange, $bold,count($leg_details).' Legs');
			imagettftext($im,11, 0, 230,170, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,20,100,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;				
	}
	
	
	function generate_fb_image_option6()
	{  
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option6.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = strtoupper($transport_info['st_org_name']);
		$string3 = "ROAD TRANSPORT CREATED BY";
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		
		imagettftext($im,11, 0,170,30, $textColorWhite, $bold, $string3);
		imagettftext($im,11, 0,200,50, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,160,90, $textDarkGrey, $font, $string2);
		
		imagettftext($im,11, 0,150,115, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+200,115, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 195,115, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,115, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 160,140, $textDarkGrey, $font, $start_date); 
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 163,165, $textColorOrange, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 210,165, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "67";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,0,0,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;					
	}
	
	function generate_fb_image_option7()
	{   
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";			
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file 	   = $upload_dir."doobert_fb_post_option7.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = strtoupper($transport_info['st_org_name']);
		$string3 = "ROAD TRANSPORT CREATED BY";
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}	
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		
		imagettftext($im,11, 0,120,25, $textColorWhite, $bold, $string3);
		imagettftext($im,11, 0,150,45, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,170,80, $textColorGrey, $font, $string2);
		
		imagettftext($im,11, 0,150,115, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+200,115, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 190,115, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,115, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 160,135, $textDarkGrey, $font, $start_date); 
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 170,155, $textColorOrange, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 220,155, $textColorGrey, $font,'in this transport'); 
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,30,100,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	function generate_fb_image_option8()
	{    
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";			
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option8.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("l, F d",strtotime($transport_info['dt_pickup_date']));	
		} else {
			$start_date = '';
		}
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,180,30, $textDarkGrey, $bold, $string);
		imagettftext($im,11, 0,170,50, $textDarkGrey, $bold, $string2);
		
		imagettftext($im,11, 0,145,120, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+195,120, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 185,120, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,120, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 165,150, $textDarkGrey, $font, $start_date); 
		} 
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 170,180, $textColorGrey, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 220,180, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,0,0,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	function generate_fb_image($id)
	{
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option".$id.".jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/OpenSansBold.ttf";
		$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";		
		$string = $transport_info['st_org_name'];
		$orgcode=	($transport_info['st_org_code']) ?  $transport_info['st_org_code'] : 'DBT';		
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		if($transport_info['dt_target']!='1969-12-31' && $transport_info['dt_target']!='0000-00-00' && $transport_info['dt_target']!='' && isset($transport_info['dt_target']) )
		{	
			$end_date 	= date("D, M d",strtotime($transport_info['dt_target']));
		} else {
			$end_date = '';
		}
		
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		$arrow_image = imagecreatefrompng($arrow_pics);
		list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
		$lightColorGrey = imagecolorallocate ($im, 169, 169, 169); 
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,15,60, $textColorblack, $font,ucfirst($transport_info['st_trans_name']));
		} 
				
		$bbox1 = imagettfbbox(12, 0, $font, $transport_from_add);
		
		imagettftext($im,11, 0,110,176, $textColorblack, $light, $string);
		imagettftext($im,11, 0,110,196, $textColorblack, $light, $string2);
		imagettftext($im,12, 0,15,84, $textColorGrey, $bold,'From:');
		imagettftext($im,12, 0,$bbox1[2]+60,84, $textColorGrey,$bold,'To:');
		imagettftext($im,12, 0, 15,104, $textColorOrange, $font,$transport_from_add);
		imagecopy($im,$arrow_image,$bbox1[2]+30,94,0,0,$width1,$height1);
		imagettftext($im,12, 0,$bbox1[2]+60,104, $textColorOrange, $font,$transport_to_add);
		if($start_date!='')
		{	
			imagettftext($im,10, 0, 15,120, $lightColorGrey,$bold, $start_date);
		}	
		if($end_date!='')
		{	
			imagettftext($im,10, 0, $bbox1[2]+60,120, $lightColorGrey,$bold, $end_date);
		}
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,10, 0, 15,144, $textColorGrey, $font,'Total');
			imagettftext($im,10, 0, 50,144, $textColorOrange, $bold,count($leg_details).' LEGS');
			$x_cor = strlen(count($leg_details))>1?105:97;
			imagettftext($im,10,0,$x_cor,144, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			
			if($flag_type == 1)
			{	
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,20,164,0,0,$newwidth,$newheight);
			}	
		}
		
		//$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
	}
	
	public function send_routingtransport_recommend_driver()
	{
		$recommend_routing_id = array();
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$origin_address = $this->input->post('origin_address');
        $destination_address = $this->input->post('destination_address');
			 
		if($this->input->post('routing_details'))
		{
				$routing_data = $this->input->post('routing_details');
		} else {
				$routing_data = array();
		}	
		$origin_comments =  $this->input->post('origin_comments');
		$from = array();
		$to = array();
		$comments = array();
		$user_name = $this->input->post('user_name');
		$user_email = $this->input->post('user_email');
		$location = $origin_address['full_address'];
        $lat_long = $this->common_model->get_lat_long($location);
		if(isset($origin_address['full_address']) && !empty($origin_address['full_address']))
		{
				 $street = explode(", ", $origin_address['full_address']);
				 $streets =  @$street[0];
				 $citys	  = @$street[1];
		} else {
				 $streets =  '';
				 $citys	  = $origin_address['city'];
		}
			
		if(isset($destination_address['full_address']) && !empty($destination_address['full_address']))
		{
				 $street = explode(", ", $destination_address['full_address']);
				 $streetd =  @$street[0];
				 $cityd	  = @$street[1];
		} else {
				 $streetd =  '';
				 $cityd	  = $destination_address['city'];
		}
			
		if(!empty($this->common_function->shortCountry[$origin_address['country']]))
		{
				$countrys = strtoupper($this->common_function->shortCountry[$origin_address['country']]);
		} else {
				$countrys = $origin_address['country'];
		}
			
		if(!empty($this->common_function->shortCountry[$destination_address['country']]))
		{
				$countryd = strtoupper($this->common_function->shortCountry[$destination_address['country']]);
		} else {
				$countryd = $destination_address['country'];
		}
           
		$location2 = $destination_address['full_address'];
        $lat_long2 = $this->common_model->get_lat_long($location2);
        $street2 = explode(", ", $destination_address['full_address']);
			
			$legs_cover = array('in_transportation_id'=> $this->session->userdata('transport_id'),
								'in_route_type'	      => 0,
								'st_user_name'		  => $user_name,
								'st_email'			  => $user_email,
								'st_from_street' 	  => $streets,
								'st_from_city'		  => $citys,
								'st_from_state'		  => $origin_address['state_abbr'],	
								'st_from_zip'		  => $origin_address['zip_code'],
								'st_from_country'	  => $countrys,
								'st_to_street' 		  => $streetd,
								'st_to_city'		  => $cityd,
								'st_to_state'		  => $destination_address['state_abbr'],	
								'st_to_zip'			  => $destination_address['zip_code'],
								'st_to_country'		  => $countryd,
								'dt_created'		  => date("Y-m-d H:i:s"),
								'dt_modified'		  => date("Y-m-d H:i:s"),
								);
			if(!empty($origin_comments))
			{	
				$legs_cover['st_notes']   =  $origin_comments;
			}				
					$this->db->insert('tbl_recommend_routing_leg', $legs_cover);
					$id = $this->db->insert_id();
					array_push($recommend_routing_id,$id);
					$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
					$to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];	
					//$comments[] = $origin_comments;			
				if(count($routing_data)>0)
				{	
					foreach($routing_data as $key=>$value)
					{	
						if(isset($value['pickup_zip']) && !empty($value['pickup_zip']) && isset($value['dropoff_zip']) && !empty($value['dropoff_zip']) )
						{	
							$legs_cover = array('in_transportation_id' => $this->session->userdata('transport_id'),
													   'in_route_type' => 0,
														 'st_user_name' => $user_name,
															'st_email' => $user_email,
													  'st_from_street' => '',
														'st_from_city' => $value['pickup_city'],
													   'st_from_state' => $value['pickup_state'],	
														 'st_from_zip' => $value['pickup_zip'],
													 'st_from_country' => $value['pickup_country'],
														'st_to_street' => '',
														  'st_to_city' => $value['dropoff_city'],
														 'st_to_state' => $value['dropoff_state'],	
														   'st_to_zip' => $value['dropoff_zip'],
									                   'st_to_country' => $value['dropoff_country'],
														  'dt_created' => date("Y-m-d H:i:s"),
														 'dt_modified' => date("Y-m-d H:i:s"),
														 
											);
									if(!empty($origin_comments))
									{	
										$legs_cover['st_notes']   =  $origin_comments;
									}
									$this->db->insert('tbl_recommend_routing_leg', $legs_cover);
									$id = $this->db->insert_id();
									array_push($recommend_routing_id,$id);
									$from[] = $value['pickup_zip'].','.$value['pickup_city'].','.$value['pickup_state'];
									$to[]	= $value['dropoff_zip'].','.$value['dropoff_city'].','.$value['dropoff_state'];			
									//$comments[] = '';
						}		
					}			
				}				
			
			//$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
			
			if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
			{
							
							$transport_id = $transport_details[0]['in_transportation_id'];
							$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
							//$user_name = explode(" ",$transport_details[0]['st_display_name']);
							/*$user_id         = $transport_details[0]['in_user_id'];*/
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("112");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
							if(isset($q) && !empty($q)){					   		
									foreach($q as $qr)
									{		 
										  
										if(!empty($qr['st_image']))
										{
												$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
												$imgtitle   =   $qr['st_banner_name']; 				
												$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

												alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
											  
											  
										}
										else
										{
											   $donation='';								 
										}							  
											
									}
								}			
								   
							   else
							   {
								  $donation='';
							   }
							
							//$username_link	=	$this->common_function->get_filtered_name($user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']);
							
							//$user_link_name	=	"<a href='".base_url().'user-'.$user_details[0]['in_user_id'].'-'.$username_link."' target='_blank'>";
							
							//$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
							//$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
							
							//$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
							//$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
							//$user_link_name	.=	"</a>";
							
							
							
							//$user_display = '';
							//$user_display .= 'Name: '.$user_link_name."<br>";
							//$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
							if(count($from)>0)
							{
								$user_router_display ='';
								foreach ($from  as $key => $value)
								{
									$user_router_display .=	'Type of Leg: Ground <br>';
									$user_router_display .=	'From: '.$value."<br>";
									$user_router_display .=	'To: '.$to[$key]."<br>";
									$user_router_display .=	'<br>';
								}
								//$user_router_display .=	'Comments: ' .$origin_comments."<br>";
							}
							
							
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##transport_coordinator##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
								$templete = str_replace("##Leg_info##",$user_router_display, $templete);
								$templete = str_replace("##User_info##",$user_display, $templete);
								$templete = str_replace("##username##", $user_name, $templete);
								$templete = str_replace("##useremail##", $user_email, $templete);
								$templete =	str_replace("##user_display_name##",$user_name, $templete);
								$templete =	str_replace("##transport_id##",$transport_link, $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id,$templete);
								$templete = str_replace("##notes##", nl2br($origin_comments), $templete);
								$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($rou_tc_user[0]['st_email']),$templete);		
								$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($rou_tc_user[0]['st_email']),$templete);	
								$templete =	str_replace("##DONATION##",$donation,$templete);
								//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								
								
								$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
								if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
									{
										$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
									} else {
										$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
									}
								
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								
								$strMail = $templete;
								$to = $rou_tc_user[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								$message_vol = $strMail;
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
							}
			}
			
			$fullname = explode(' ',$user_name);
			$this->session->unset_userdata('recommend_first_name');
			$this->session->unset_userdata('recommend_last_name');
			$this->session->unset_userdata('recommend_user_email');
			$this->session->unset_userdata('ecommend_routing_id');
			$this->session->set_userdata('recommend_routing_id',$recommend_routing_id);
			if(isset($fullname[0]) && !empty($fullname[0]))
			{
				$first_name = trim($fullname[0]);
				$this->session->set_userdata('recommend_first_name',$first_name);
			}

			if(isset($fullname[1]) && !empty($fullname[1]))
			{
				$last_name = trim($fullname[1]);
				$this->session->set_userdata('recommend_last_name',$last_name);
			}	
				
			
			$this->session->set_userdata('recommend_user_email',$user_email);
						
            $this->session->set_flashdata('routing_leg', "We’ve sent your potential leg(s) and comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.");
	
	}
	
	public function delete_airline_leg()
	{
		$leg_id = $this->input->post('legsid');
		$this->orgtrasnportation_model->delete_legs_transport($leg_id);
		$legs = json_decode($this->input->post('jsondata'),true);
        $legs = array_values(array_filter($legs));
		$legs_sorting = array();
        foreach ($legs as $leg_val) 
		{
            $legs_sorting[] = isset($leg_val['in_sort_order']) ? $leg_val['in_sort_order'] : '';
		}
		$sort_order = 0;
        for ($i = 0; $i < count($legs); $i++) 
		{
			$sort_order = (!empty($legs_sorting[$i]))?$legs_sorting[$i]:$i+1;
			if ($legs[$i]['leg_id'] != '' && $legs[$i]['update_leg'] != 'delete') 
			{ 
                $array_update = array("in_sort_order" => $sort_order); 	
                $this->orgtrasnportation_model->update_legs($array_update, $legs[$i]['leg_id']);
			}		
		}
	}
	
	public function update_airline_legs()
	{
		$legs = json_decode($_POST['legsArray']);
		$result_data = array();
		$sort_order = $this->orgtrasnportation_model->get_last_leg_order();
		$sort_order = $sort_order+1;
		$meeting_location = $legs->meeting_location;
		$total_miles = 0;
		$non_doobert_leg_id = '';	
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			$base_airport_pickup = $this->orgtrasnportation_model->get_state_baseairport($legs->pickup_airport);

			$base_airport_dropoff = $this->orgtrasnportation_model->get_state_baseairport($legs->dropoff_airport);
			
			$airport_details = $this->orgtrasnportation_model->get_airport_details($base_airport_pickup['st_loc_id']);
			$start = $this->getLatLong($base_airport_pickup['st_loc_id']);
			$pickup_airport = '';
			
			$finish = $this->getLatLong($base_airport_dropoff['st_loc_id']);
			
			

			$pickup_city 	= 	(isset($base_airport_pickup['st_city']) && !empty($base_airport_pickup['st_city'])) ? $base_airport_pickup['st_city']: $start['city'];	
			$dropoff_city 	=   (isset($base_airport_dropoff['st_city']) && !empty($base_airport_dropoff['st_city']))? $base_airport_dropoff['st_city']: $finish['city'];
			
			$array_update = array("st_meeting_location" => $meeting_location); 
            $this->orgtrasnportation_model->update_legs($array_update, $legs->leg_id);
			
			if($legs->user_id=='n-d-u')
			{
				$non_doobert_leg_id =  $legs->leg_id;
			}
			
            $pickup_array = array("in_transportation_leg_id" => $legs->leg_id,
											   "st_leg_type" => "P",
												 "st_street" => $legs->pickup_airport,
												   "st_city" => ($pickup_city) ? $pickup_city :'',
												  "st_state" => ($start['state']) ? $start['state'] :'',
												    "st_zip" => $start['postal_code'],
												"st_country" => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : '',
											 "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs->pickup_airline_clock.' '.$legs->pick_year))),
											   "st_timezone" => $legs->pickup_airline_zone,
                                                "in_deleted" => "0"
								 );
								  
						$this->orgtrasnportation_model->update_leg_info($pickup_array, $legs->leg_id, "P");
                            
						$dropoff_array = array("in_transportation_leg_id" => $legs->leg_id,
														    "st_leg_type" => "D",
															  "st_street" => $legs->dropoff_airport,
																"st_city" => ($dropoff_city) ? $dropoff_city : '',
															   "st_state" => ($finish['state']) ? $finish['state'] : '',
																 "st_zip" => $finish['postal_code'],
															 "st_country" => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : '',
														  "dt_start_time" => date('Y-m-d H:i:s', strtotime(str_replace(" - ", " ", $legs->dropoff_airline_clock.' '.$legs->drop_year))),
															"st_timezone" => $legs->dropoff_airline_zone,
															 "in_deleted" => "0"
												  );
                        $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs->leg_id, "D");
						
							if(isset($legs->user_id) && !empty($legs->user_id) && $legs->user_id!='0' && $legs->user_id!='n-d-u')
							{
								$this->load->model('user_model');
								if($legs->user_id!=$legs->deleted_user_id)
								{	
									 	
									if(isset($legs->deleted_user_id) && $legs->deleted_user_id!='0')
									{
										$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
										$this->db->where('in_user_id',$legs->deleted_user_id);
										$this->db->where('in_transportation_leg_id',$legs->leg_id);
										$this->db->where('in_deleted',0);
										$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $legs->leg_id,
																				"in_user_id"	 => $legs->deleted_user_id,
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
									}
									
											if($legs->non_doobert_userid != '0' && $legs->non_doobert_userid != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs->non_doobert_userid);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
											
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs->leg_id,
																	   "in_non_doobert_user_id" => $legs->non_doobert_userid,									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);	
											}
									
												$airline_detail	 = $this->user_model->get_airline_detail($legs->user_id);
											if(!empty($airline_detail) && isset($airline_detail[0]['in_id']))
											{
												$leg_vehicle_detail = array("in_transportation_id"	=> $this->session->userdata('transport_id'),
																			  "in_user_id"	=> $legs->user_id,
																			  "in_airline_id" => $airline_detail[0]['in_id'],
																"in_transportation_leg_id"	=> $legs->leg_id,
																			  "dt_created"	=> date("Y-m-d H:i:s"),
																			  "in_deleted"	=> 0
																	);
												$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
											}	
											$join_data = array("in_transportation_id"  => $this->session->userdata('transport_id'),
																		"in_user_id"   => $legs->user_id,
															"in_transportation_leg_id" =>  $legs->leg_id,
																	"in_created_by"    => $this->session->userdata('userid'),
																		"dt_created"   => date("Y-m-d H:i:s"),
													             "in_deleted" => 0,
																 "in_joining_transport_mail" =>  1,
															);
									$this->orgtrasnportation_model->join_legs($join_data);	
							
							
									$arr_notification = array("in_organization_id" => $this->session->userdata('org_id'),
															"in_transportation_id" => $this->session->userdata('transport_id'),
																	  "in_user_id" => $legs->user_id,
																		 "in_type" => 12,
															 "in_transport_leg_id" =>  $legs->leg_id,
																  "in_modified_by" => $legs->user_id,
																	  "dt_created" => date("Y-m-d H:i:s"),
																	  "in_deleted" => "0",
															);
									$notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);	
								}
							} else {
									if($legs->volunteer_name =='' || $legs->user_id =='n-d-u')
									{
									   if(isset($legs->deleted_user_id) && $legs->deleted_user_id!='0')
										{
											$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
											$this->db->where('in_user_id',$legs->deleted_user_id);
											$this->db->where('in_transportation_leg_id',$legs->leg_id);
											$this->db->where('in_deleted',0);
											$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1",'in_deleted_transport_user'=>"1"));
										
											$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		 "in_transport_leg_id"   => $leg_id,
																				"in_user_id"	 => $legs->deleted_user_id,
																					"in_type"	 => 22,
																			  "in_modified_by"	 => $this->session->userdata('userid'),
																				  "dt_created"	 => date("Y-m-d H:i:s"),
																				   "in_deleted"	 => "0",
																	 );
									
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
												$notification_last_id   = $this->db->insert_id();
											
										} else {	
											if($legs->non_doobert_userid != '0' && $legs->non_doobert_userid != '' )
											{	
												$this->db->where('in_non_doobert_user_id',$legs->non_doobert_userid);
												$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s"),'in_deleted_transport_user'=>1));
													
												$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
																		"in_transportation_id"	=> $this->session->userdata('transport_id'),
																		"in_transport_leg_id"	=> $legs->leg_id,
																	   "in_non_doobert_user_id" => $legs->non_doobert_userid,									
																					  "in_type"	=> 26,
																				    "dt_created" => date("Y-m-d H:i:s"),
																				   "in_deleted"	=> "0"
																	);
												$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);		
												
											}
										}	
									}
							}	
						
                            #================== Add overview path for legs start===============#	
                            
                              $origin_loc 		= ($start['city']? $start['city'].", ":"").($start['state'] ? $start['state'].", ":"").($start['postal_code'] ? $start['postal_code']:"").($start['country'] ? ",".$start['country']:"");
                              $dest_loc 	    = ($finish['city']? $finish['city'].", ":"").($finish['state'] ? $finish['state'].", ":"").($finish['postal_code'] ? $finish['postal_code']:"").($finish['country']? ", ".$finish['country']:"");
                              $routes_miles  = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"");
							  $total_miles  =   $routes_miles['distance'];		
                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
									$route_details = array(	"in_route_type"				=> 3,
															"st_legs_details"			=> $routes_miles['route_path'],
															"fl_distance"				=> $routes_miles['distance'],
															);
									$this->orgtrasnportation_model->update_legs_path($route_details, $legs->leg_id);
                              }
						$result_data = array('st_from_street'	=> $pickup_array['st_street'],	
											'st_from_city'		=> $pickup_array['st_city'],
											'st_from_state'		=> $pickup_array['st_state'],
											'st_from_country'	=> $pickup_array['st_country'],
											'st_to_street'		=> $dropoff_array['st_street'],
											'st_to_city'		=> $dropoff_array['st_city'],
											'st_to_state'		=> $dropoff_array['st_state'],
											'st_to_country'		=> $dropoff_array['st_country'],
											'leg_id'			=> $legs->leg_id,	
											);            
            if($non_doobert_leg_id!='')
					echo $non_doobert_leg_id;
			else		
					echo 'update';            
			//echo json_encode($result_data);                  
	}
	
	public function airport_base()
	{
		$data_val = $this->input->get('term');
		$get_airport_data = $this->orgtrasnportation_model->get_airport_base($data_val);	
		echo json_encode($get_airport_data);
	}
	
	function create_airline_transport()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('org_country') !='USA' && $this->session->userdata('org_country') !='US' && $this->session->userdata('stcountry') !='USA' && $this->session->userdata('stcountry') !='US')
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}

				
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		/*if($this->session->userdata('transport_steps'))
		{ 
			if($this->session->userdata('transport_steps')==3)
			{	
				redirect($this->config->item('base_url') . "org-edit-transport"); 
			} else {
				$this->session->unset_userdata('transport_step');
			}		
		}*/
		
		$this->session->unset_userdata('transport_id');
		$this->session->unset_userdata('recent_activity');
		
		
		
		#================Check User permission start===============#
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		if($owner_id!=$this->session->userdata('userid'))
		{
			$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
			if(!empty($user_permission)) {
				$make_array_user = unserialize($user_permission);
			}
			if($owner_id != $this->session->userdata('userid')) {
				if(isset($make_array_user['transport']) && in_array('transport_cr',$make_array_user['transport']) == true) {
					$check_per_flag = '1';
				} else {
					$check_per_flag = '0';
					$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
					redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
				}
			}
		}
		#================Check User permission end================#
		$data = array();
		$data['Err_Msg'] 		= '';
		$data['menu_no'] 		= 'yes';
		$data['owner_id'] 		= $owner_id;
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		$c_state_list 			= $this->common_function->canadian_state_list;
		$data['c_state_list'] 	= $c_state_list;
		
		$data['all_state']     = array_merge($data['state_list'],$data['c_state_list']);
		//print_r($data['all_state']);
		//exit; 
		
		$org_id = $this->session->userdata("org_id");
		$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id')); 
		$animal_list 				= $this->orgtrasnportation_model->get_org_animal($org_id,"0");
		$animal_transport 			= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_list'] 		= $animal_list;
		$data['animal_transport'] 	= $animal_transport;
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		if(isset($org_details['st_org_name']) && !empty($org_details['st_org_name'])) {
			$data['stSendOrgNm'] = $org_details['st_org_name'];
		} else {
			$data['stSendOrgNm'] = '';
		}
		
		if(isset($user_details[0]['st_display_name']) && !empty($user_details[0]['st_display_name'])) {
			$data['stSendNm'] = $user_details[0]['st_display_name']." ".$user_details[0]['st_last_name'];
		} else {
			$data['stSendNm'] = '';
		}
		
		if(isset($user_details[0]['st_email']) && !empty($user_details[0]['st_email'])) {
			$data['stSendEmail'] = $user_details[0]['st_email'];
		} else {
			$data['stSendEmail'] = '';
		}
		
		
		if(isset($org_details['st_primary_phone']) && !empty($org_details['st_primary_phone'])) {
			$data['stSphone'] = $org_details['st_primary_phone'];
			$data['stSphone'] = preg_replace('/\D/', '', $org_details['st_primary_phone']);
		} else {
			$data['stSphone'] = '';
		}
		
		if(isset($org_details['st_has_501c3']) && !empty($org_details['st_has_501c3'])) {
			$data['stS501c3'] = $org_details['st_has_501c3'];
		} else {
			$data['stS501c3'] = '';
		}
		
		if(isset($org_details['st_zip']) && !empty($org_details['st_zip'])) {
			$data['sender_zip'] = $org_details['st_zip'];
		} else {
			$data['sender_zip'] = '';
		}
		
		$data['country_list'] 	= $this->common_function->doobertcountry;
		
		$data['transport_agree_details'] = $this->common_model->get_user_transport_agreement_detail($this->session->userdata('userid'));
		
		$data['transportation_list'] = $this->orgtrasnportation_model->get_previous_transportation('1');
		
		//echo '<pre/>';print_r($data['transport_agree_details']); exit;
		if(isset($data['transport_agree_details']) && $data['transport_agree_details']['in_transport'] != '')
		{
			$this->session->set_userdata('transport_agree',$data['transport_agree_details']['in_transport']);
		}
		
		$transport_doc			= array();
		if($this->input->post('recent_activity'))
		{
			$this->session->set_userdata('recent_activity',$this->input->post('recent_activity'));
		}
		$form_field	=	array('pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pick_state'		=> "",
							  'pick_base_airport'		=> "",
							  'pick_info' 		=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_base_airport"		=> "",
							  "drop_info"		=> "",
  							  "pickupselect"	=> "",
							  "dateselect"		=> "",
							  "action"			=> "",
							  "image_file"		=> "",
							  "need_trans_mon"	=> "",
							  "trans_unique_name" => "",
							  "allow_pics"=>"",
							  "receiving_organization_name" => '',
							  "receiving_contact_name"	 => '',		
							  "receiving_contact_email" => '',	
							  "receiving_contact_phone_no" => '',
							  "receiving-501c3-certified" => '',
							  "organization_name" => '',
                              "contact_name" => '',
                              "contact_email" => '',
                              "contact_phone_no" => '',
							  "backstory" => '',
							  "501c3-certified"=>'',
							  "sendrunsheet-sending" =>'',
							  "sendrunsheet-receiving"=>'',
							  "dropoff_airport_identifer"=>'',
							  "pickup_airport_identifer"=>'',
							  "transportation_id"=>'',
							  "fb_publish"=>'',
					  	 	);
							
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}					
		if($this->input->post('action'))
		{	
			//echo "<pre>";print_r($this->input->post());
			//die;
			
			foreach ($form_field as $key => $value)
			{	
				$data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$base_airport_pickup = $this->orgtrasnportation_model->get_state_baseairport($data['org_trasport']['pick_base_airport']);

			$base_airport_dropoff = $this->orgtrasnportation_model->get_state_baseairport($data['org_trasport']['drop_base_airport']);
	
			$pickup_city 	= 	(isset($base_airport_pickup['st_city']) && !empty($base_airport_pickup['st_city'])) ? $base_airport_pickup['st_city']: $start['city'];	
			$dropoff_city 	=   (isset($base_airport_dropoff['st_city']) && !empty($base_airport_dropoff['st_city']))? $base_airport_dropoff['st_city']: $finish['city'];
			
			//$pickup_zipcode_data = explode(',',$data['org_trasport']['pick_zip']);
			$pickup_zipcode_data = $this->getLatLong($base_airport_pickup['st_loc_id']);
			/*print_r($pickup_zipcode_data);
			$dropoff_zipcode_data = $this->getLatLong($data['org_trasport']['drop_zip']);
			print_r($dropoff_zipcode_data);
			die;*/
			$data['org_trasport']['pick_zip'] 		= isset($pickup_zipcode_data['postal_code']) ? $pickup_zipcode_data['postal_code'] : ''; 
			$data['org_trasport']['pick_city'] 		= (isset($pickup_city) && !empty($pickup_city)) ? $pickup_city : $pickup_zipcode_data['city']; 
			$data['org_trasport']['pick_state'] 	= isset($pickup_zipcode_data['state']) ? $pickup_zipcode_data['state'] : ''; 
			$data['org_trasport']['pick_country'] 	= isset($pickup_zipcode_data['country']) ? $pickup_zipcode_data['country'] : '';
			$data['org_trasport']['st_from_street'] = isset($data['org_trasport']['pick_base_airport']) ? $data['org_trasport']['pick_base_airport'] : ''; 	
			
			$dropoff_zipcode_data = $this->getLatLong($base_airport_pickup['st_loc_id']);
			$data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data['postal_code']) ? $dropoff_zipcode_data['postal_code'] : ''; 
			$data['org_trasport']['drop_city'] = (isset($dropoff_city) && !empty($dropoff_city)) ? $dropoff_city : $dropoff_zipcode_data['city']; 
			$data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data['state']) ? $dropoff_zipcode_data['state'] : ''; 
			$data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data['country']) ? $dropoff_zipcode_data['country'] : '';
			$data['org_trasport']['st_to_street'] = isset($data['org_trasport']['drop_base_airport']) ? $data['org_trasport']['drop_base_airport'] : '';	
			
			
			$error_message = '';
			/*if($_FILES['leg_upload']['name']!='' && $data['org_trasport']['action']=="driverspecify")
			{
				$error_message .= 'Upload legs only for Pre-Specify Legs.';
			}*/
			
			//echo "<pre>";print_r($sheetData);print_r($dropoff_array);print_r($pickup_array);die; 
			//$this->form_validation->set_rules('pick_street', 'Pick Up Street', 'trim|required');
			//$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim|required');
			//$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim|required');
			$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
			$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
			$this->form_validation->set_rules('pick_base_airport', 'Pick Up Zip', 'trim|required');
			//$this->form_validation->set_rules('drop_street', 'Drop Off Street', 'trim|required');
			//$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim|required');
			//$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim|required');
			$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
			$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
			$this->form_validation->set_rules('drop_base_airport', 'Drop Off Zip', 'trim|required');
			//$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			//$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');
			
			$this->form_validation->set_rules('receiving_organization_name', 'Receiving Organization Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_name', 'Receiving Contact Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_email', 'Receiving Contact Email', 'trim|required|valid_email');
			$this->form_validation->set_rules('receiving_contact_phone_no', 'Receiving Phone No', 'trim|required');
			
			$this->form_validation->set_rules('contact_name', 'Contact Name', 'trim|required');
			$this->form_validation->set_rules('contact_phone_no', 'Contact Email', 'trim|required');
			$this->form_validation->set_rules('contact_email', 'Contact Phone Number', 'trim|required|valid_email');
			
			$error = '';	
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";
					$this->load->view('transportation/add-airline-trans-details',$data);	
			}
			else
			{
				//echo "<pre>";print_r($legs_array);print_r($pickup_array);print_r($dropoff_array);die;
				$total_miles = '';				
				$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].", ":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].", ":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?", ".$data['org_trasport']['pick_zip']:"");	
				$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].", ":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].", ":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?", ".$data['org_trasport']['drop_zip']:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				//echo "<pre>";print_r($routes_miles);die; 
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($data['org_trasport']['trans_unique_name']),
											"st_from_street"	=> trim($data['org_trasport']['st_from_street']),
											"st_from_city"		=> trim($data['org_trasport']['pick_city']),
											"st_from_state"		=> trim($data['org_trasport']['pick_state']),
											"st_from_zip"		=> trim($data['org_trasport']['pick_zip']),
											"st_from_country"	=> trim($data['org_trasport']['pick_country']),
											"st_to_street"		=> trim($data['org_trasport']['st_to_street']), 
											"st_to_city"		=> trim($data['org_trasport']['drop_city']),  
											"st_to_state"		=> trim($data['org_trasport']['drop_state']), 
											"st_to_zip"			=> trim($data['org_trasport']['drop_zip']),  
											"st_to_country"		=> trim($data['org_trasport']['drop_country']),
											
											//"dt_pickup_date"	=> date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
											//"dt_target"			=> date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
											
											"st_trans_type"		=> "D",
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"dt_created"		=> date("Y-m-d H:i;s"),
											"in_status"			=> "4",/*Save as draft*/
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] != '' ? 1 : 0,
											"in_allow_pics" 	=> isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
											'stRecOrgNm'        => trim($data['org_trasport']['receiving_organization_name']),
											  'stRecNm'         => trim($data['org_trasport']['receiving_contact_name']),
											'stRecEmail'        => trim($data['org_trasport']['receiving_contact_email']),
											  'stRphone'        => trim($data['org_trasport']['receiving_contact_phone_no']),
											  'stR501c3'        => (isset($data['org_trasport']['receiving-501c3-certified'])  && $data['org_trasport']['receiving-501c3-certified']=='on' )?'Y':'N',
											  'stS501c3'        => (isset($data['org_trasport']['501c3-certified']) && $data['org_trasport']['501c3-certified']=='on' )?'Y':'N',
										   'dt_modified'        => date('Y-m-d H:i:s'),
										   'stSendOrgNm'        => trim($data['org_trasport']['organization_name']),
											  'stSendNm'	    => trim($data['org_trasport']['contact_name']),
								           'stSendEmail'        => trim($data['org_trasport']['contact_email']),
								              'stSphone'        => trim($data['org_trasport']['contact_phone_no']),
											  'stAniStory'		=> trim($data['org_trasport']['backstory']),
									   'inSendOrgRunsheet'		=> isset($data['org_trasport']['sendrunsheet-sending']) && $data['org_trasport']['sendrunsheet-sending'] != '' ? 1 : 0,
									   'inRecOrgRunsheet'		=> isset($data['org_trasport']['sendrunsheet-receiving']) && $data['org_trasport']['sendrunsheet-receiving'] != '' ? 1 : 0,
									'enable_routing_status'		=> 1,
									 'in_airline_transport'		=> 1,
									 'in_notify_tc_users'		=> 1,
									 'in_completed_steps'		=> 0,
											'in_fb_share'		=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,
											);					
				//$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
				//$this->session->set_userdata('transport_id',$transport_id);

				if(isset($data['org_trasport']['transportation_id']) && $data['org_trasport']['transportation_id']!='' && $data['org_trasport']['transportation_id']!='0' )
				{
					$this->session->set_userdata('transport_id',$data['org_trasport']['transportation_id']);	
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}	
				
				for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $data['org_details']['st_city'],
												     'st_state'				=>	$data['org_details']['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				}
				
				$this->session->set_userdata('transport_steps',4);
				//redirect(base_url().'add-animal-transport/'.$transport_id);
				redirect($this->config->item('base_url')."org_transportation/transport_thank_you");
					
					
			}
		}
		else
		{	
			$this->session->set_userdata('transport_steps',1);	
			$this->load->view('transportation/add-airline-trans-details',$data);		
		}
	}
	
	public function edit_airline_transport() 
	{

        if (!$this->session->userdata('userid')) 
		{
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
		
		if($this->session->userdata('org_country') !='USA' && $this->session->userdata('org_country') !='US' && $this->session->userdata('stcountry') !='USA' && $this->session->userdata('stcountry') !='US')
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		if (isset($_GET['id'])) {
            $this->session->set_userdata('transport_id', $_GET['id']);
        }
		
		$this->session->unset_userdata('transport_step');
		
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		//$transport_date = date('Y-m-d', strtotime($transport_data[0]['dt_target']."+7 day"));
		$today_date= date('Y-m-d');	
		
		if($transport_data[0]['dt_target'] == '0000-00-00'||$transport_data[0]['dt_target'] == '1969-12-31' || empty($transport_data[0]['dt_target'])  )
		{
			$transport_date = date('Y-m-d', strtotime("+7 day"));
		} else {	
			$transport_date = date('Y-m-d', strtotime($transport_data[0]['dt_target']."+7 day"));
		}
		
		$today_dt       = new DateTime($today_date);
		$expire_dt      = new DateTime($transport_date);
		
		if (isset($transport_data[0]['st_trans_type']) && $transport_data[0]['st_trans_type'] == 'D' && 
			$transport_data[0]['accTcid'] == $this->session->userdata('userid') && $expire_dt >= $today_dt ){
				$this->session->set_userdata('org_id',$transport_data[0]['in_organization_id']);
		} else {
			if (isset($transport_data[0]['st_trans_type'])  && $transport_data[0]['st_trans_type'] == 'D'  && 
			$transport_data[0]['accTcid'] == $this->session->userdata('userid') && $today_dt > $expire_dt)
			{
				redirect($this->config->item('base_url'));
			}				
		}
		
        if (!$this->session->userdata('org_id') || !$this->session->userdata('transport_id')) 
		{
			redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        //$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		if($transport_data[0]['accTcid'] == "0") 
		{		
			 $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));	
		} else {
			$owner_id = '';
		}
        $make_array_user = array();
        $check_per_flag = '';
        if ($owner_id != $this->session->userdata('userid')) 
		{
            if(($today_dt > $expire_dt  && $transport_data[0]['st_trans_type'] == "D") || $transport_data[0]['accTcid'] == "0" ) 
			{
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			}
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if (($owner_id != $this->session->userdata('userid') && $transport_data[0]['st_trans_type'] == "D") || $transport_data[0]['st_trans_type'] == "D") 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else if($transport_data[0]['accTcid'] == $this->session->userdata('userid')) {
					$check_per_flag = '1';
				  } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }
		
		
		/*if($transport_data[0]['st_trans_type'] == "D" && $transport_data[0]['accTcid'] == $this->session->userdata('userid')  ) 
		{
			$check_per_flag = '1';		
		} else {
			$check_per_flag = '0';
            $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
            redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
		}*/	
		
		$this->session->set_userdata('transport_cr',1);
        #================Check User permission end================#
        $data = array();
        $data['Err_Msg'] = '';
        $data['menu_no'] = 'yes';
        //$data['owner_id'] = $owner_id;
        $state_list = $this->common_function->state_list;
        $data['state_list'] = $state_list;
		$org_id 				= $this->session->userdata("org_id");
        $c_state_list = $this->common_function->canadian_state_list;
        $data['c_state_list'] = $c_state_list;

        $data['all_state'] = array_merge($data['state_list'], $data['c_state_list']);

        $data['country_list'] = $this->common_function->doobertcountry;
		
		$animal_transport 		= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['animal_transport'] 	= $animal_transport;
		
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		$org_details = $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		 
        $form_field = array('pick_street' => "",
            'pick_country' => "USA",
            'pick_city' => "",
            'pick_state' => "",
            'pick_base_airport' => "",
            'pick_info' => "",
            "drop_street" => "",
            'drop_country' => "USA",
            "drop_city" => "",
            "drop_state" => "",
            "drop_base_airport" => "",
            "drop_info" => "",
            "pickupselect" => "",
            "dateselect" => "",
            "action" => "",
            "image_file" => "",
            "need_trans_mon" => "",
			"trans_unique_name" => "",
			"allow_pics"=>"",
			"receiving_organization_name" => '',
			"receiving_contact_name"  => '',		
			"receiving_contact_email" => '',	
			"receiving_contact_phone_no" => '',
			"receiving-501c3-certified" => '',
			"organization_name" => '',
            "contact_name" => '',
            "contact_email" => '',
            "contact_phone_no" => '',
			"501c3-certified"=>'',
			"in_status"=>'',
			"backstory"=>'',
			"sendrunsheet-sending"=>'',
			"sendrunsheet-receiving"=>'',
			"dropoff_airport_identifer"=>'',
			"pickup_airport_identifer"=>'',
			"fb_publish"=>'',
        );
        foreach ($form_field as $key => $value) {
            $data['org_trasport'][$key] = $value;
        }
        if ($this->input->post('action')) {
            foreach ($form_field as $key => $value) 
			{
                $data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
            }
			//$dropoff_zipcode_data = $this->getLatLong($data['org_trasport']['dropoff_airport_identifer']);
			
			
			$base_airport_pickup = $this->orgtrasnportation_model->get_state_baseairport($data['org_trasport']['pick_base_airport']);

			$base_airport_dropoff = $this->orgtrasnportation_model->get_state_baseairport($data['org_trasport']['drop_base_airport']);

			$start_date = '';
			$end_date = '';
			if($this->input->post('pickupselect'))
			{
				if($this->input->post('pickupselect_year'))
				{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
				}	
			}
			if($this->input->post('dateselect'))
			{
				if($this->input->post('dateselect_year'))
				{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
				}	
			}
		   
		   
			$pickup_city 	= 	(isset($base_airport_pickup['st_city']) && !empty($base_airport_pickup['st_city'])) ? $base_airport_pickup['st_city']: $start['city'];	
			$dropoff_city 	=   (isset($base_airport_dropoff['st_city']) && !empty($base_airport_dropoff['st_city']))? $base_airport_dropoff['st_city']: $finish['city'];
	
	   
            $pickup_zipcode_data = $this->getLatLong($base_airport_pickup['st_loc_id']);
            $data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data['postal_code']) ? $pickup_zipcode_data['postal_code'] : '';
            $data['org_trasport']['pick_city'] = (isset($pickup_city)&&!empty($pickup_city))? $pickup_city : $pickup_zipcode_data['city'];
            $data['org_trasport']['pick_state'] = isset($pickup_zipcode_data['state']) ? $pickup_zipcode_data['state'] : '';
            $data['org_trasport']['pick_country'] = isset($pickup_zipcode_data['country']) ? $pickup_zipcode_data['country'] : '';
			
			$data['org_trasport']['st_from_street'] = isset($data['org_trasport']['pick_base_airport']) ? $data['org_trasport']['pick_base_airport'] : ''; 
			
            $dropoff_zipcode_data = $this->getLatLong($base_airport_dropoff['st_loc_id']);
            $data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data['postal_code']) ? $dropoff_zipcode_data['postal_code'] : '';
            $data['org_trasport']['drop_city'] = (isset($dropoff_city)&&!empty($dropoff_city)) ? $dropoff_city : $dropoff_zipcode_data['city'];
            $data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data['state']) ? $dropoff_zipcode_data['state'] : '';
            $data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data['country']) ? $dropoff_zipcode_data['country'] : '';
			$data['org_trasport']['st_to_street'] = isset($data['org_trasport']['drop_base_airport']) ? $data['org_trasport']['drop_base_airport'] : '';
			 
			 
            $error_message = '';
            $this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
            $this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
            //$this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
            //$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');

            $this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
            $this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
            //$this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
            //$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			
			$this->form_validation->set_rules('pick_base_airport', 'Pick Up Zip', 'trim|required');
			$this->form_validation->set_rules('drop_base_airport', 'Drop Off Zip', 'trim|required');
			
			$this->form_validation->set_rules('receiving_organization_name', 'Receiving Organization Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_name', 'Receiving Contact Name', 'trim|required');
			$this->form_validation->set_rules('receiving_contact_email', 'Receiving Contact Email', 'trim|required|valid_email');
			$this->form_validation->set_rules('receiving_contact_phone_no', 'Receiving Phone No', 'trim|required');
			
			$this->form_validation->set_rules('contact_name', 'Contact Name', 'trim|required');
			$this->form_validation->set_rules('contact_phone_no', 'Contact Email', 'trim|required');
			$this->form_validation->set_rules('contact_email', 'Contact Phone Number', 'trim|required|valid_email');

            if ($this->form_validation->run() == FALSE || $error_message != '') {
                $data['Err_Msg'] = validation_errors() . "<p>" . $error_message . "</p>";
                $this->load->view('transportation/edit-airline-trans-details', $data);
            } else {
                $origin =  ($data['org_trasport']['pick_city'] ? $data['org_trasport']['pick_city'] . "," : "") . ($data['org_trasport']['pick_state'] ? $data['org_trasport']['pick_state'] : "") . ($data['org_trasport']['pick_zip'] ? "," . $data['org_trasport']['pick_zip'] : "");
                $destinations =  ($data['org_trasport']['drop_city'] ? $data['org_trasport']['drop_city'] . "," : "") . ($data['org_trasport']['drop_state'] ? $data['org_trasport']['drop_state'] : "") . ($data['org_trasport']['drop_zip'] ? "," . $data['org_trasport']['drop_zip'] : "");
                $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
                //echo "<pre>";print_r($routes_miles);die; 
                $transport_details = array(//"in_trans_coods_id"	=> $this->session->userdata('userid'), 
                    //"in_organization_id"=> $this->session->userdata('org_id'),
                    "st_from_city" => trim($data['org_trasport']['pick_city']),
                    "st_from_state" => trim($data['org_trasport']['pick_state']),
                    "st_from_zip" => trim($data['org_trasport']['pick_zip']),
                    "st_from_country" => trim($data['org_trasport']['pick_country']),
                    "st_to_city" => trim($data['org_trasport']['drop_city']),
                    "st_to_state" => trim($data['org_trasport']['drop_state']),
                    "st_to_zip" => trim($data['org_trasport']['drop_zip']),
                    "st_to_country" => trim($data['org_trasport']['drop_country']),
					"st_from_street"	=> trim($data['org_trasport']['st_from_street']),
					"st_to_street"		=> trim($data['org_trasport']['st_to_street']),
                    //"dt_pickup_date" => (isset($data['org_trasport']['pickupselect']) && $data['org_trasport']['pickupselect']!='1969-12-31' && $data['org_trasport']['pickupselect']!='0000-00-00' && !empty($data['org_trasport']['pickupselect']))?date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])):'',
                    //"dt_target" => 		(isset($data['org_trasport']['dateselect']) && $data['org_trasport']['dateselect']!='1969-12-31' && $data['org_trasport']['dateselect']!='0000-00-00' && !empty($data['org_trasport']['dateselect']))?date("Y-m-d", strtotime($data['org_trasport']['dateselect'])):'',
                    "dt_pickup_date"	=> $start_date,
					"dt_target"			=> $end_date,
					"in_tot_distance" => $routes_miles['distance'],
                    "in_modified_by" => $this->session->userdata('userid'),
                    "dt_modified" => date("Y-m-d H:i:s"),
                    "in_need_trans_monitor" => isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] != '' ? 1 : 0,
					"st_trans_name" => trim($data['org_trasport']['trans_unique_name']),
					"in_allow_pics" => isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
					"in_reminder_sent" => 0,
					"stRecOrgNm" => trim($data['org_trasport']['receiving_organization_name']),
					"stRecNm"   => trim($data['org_trasport']['receiving_contact_name']),
					"stRecEmail" => trim($data['org_trasport']['receiving_contact_email']),
					"stRphone" => trim($data['org_trasport']['receiving_contact_phone_no']),
				    "stR501c3" => (isset($data['org_trasport']['receiving-501c3-certified'])  && $data['org_trasport']['receiving-501c3-certified']=='on' )?'Y':'N',
					"stS501c3" => (isset($data['org_trasport']['501c3-certified']) && $data['org_trasport']['501c3-certified']=='on' )?'Y':'N',
					"dt_modified" => date('Y-m-d H:i:s'),
					"stSendOrgNm" => trim($data['org_trasport']['organization_name']),
					"stSendNm"	=> trim($data['org_trasport']['contact_name']),
					"stSendEmail" => trim($data['org_trasport']['contact_email']),
					"stSphone" => trim($data['org_trasport']['contact_phone_no']),
					"in_status" => ($data['org_trasport']['in_status'])?$data['org_trasport']['in_status']:"4",
					"stAniStory" => ($data['org_trasport']['backstory'])?$data['org_trasport']['backstory']:"",
					"inSendOrgRunsheet"		=> (isset($data['org_trasport']['sendrunsheet-sending']) && $data['org_trasport']['sendrunsheet-sending'] != '') ? 1 : 0,
					"inRecOrgRunsheet"		=> (isset($data['org_trasport']['sendrunsheet-receiving']) && $data['org_trasport']['sendrunsheet-receiving'] != '') ? 1 : 0,
					"st_from_street"	=> trim($data['org_trasport']['st_from_street']),
					"st_to_street"		=> trim($data['org_trasport']['st_to_street']),
					'in_fb_share'		=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,
				);
				$in_status_transport = $data['org_trasport']['in_status'];
                //code to add log for transport datechange start
				//code to add log for transport datechange end
				
				$this->orgtrasnportation_model->update_transport_details($transport_details);
				
				if (isset($data['org_trasport']['need_trans_mon']) && $data['org_trasport']['need_trans_mon'] == '') {

                    $transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
                    if (isset($transport_monitors) && !empty($transport_monitors)) {
                        foreach ($transport_monitors as $mon_key => $mon_value) {
                            $this->orgtrasnportation_model->update_transport_monitor_status(array("in_deleted" => 1), $mon_value['in_tr_pr_id']);
                        }
                    }
                }
				
				for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $org_details['st_city'],
												     'st_state'				=>	$org_details['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				}

                $this->session->set_userdata('transport_edit', '1');
				if($this->input->post('airline_transport_enable')==1)
				{
					$this->orgtrasnportation_model->update_transport_details(array("enable_routing_status"=>1,"in_notify_tc_users"=>1,"in_completed_steps"=>0));
					$this->session->set_userdata('transport_steps',4);
					redirect($this->config->item('base_url')."org_transportation/transport_thank_you");
				} else if($this->input->post('update_status')=='1' && $in_status_transport =='4')
				{												
					$this->session->set_flashdata('message', 'Information updated successfully.');
					redirect($this->config->item('base_url')."edit-airline-transport");
				}else if($transport_data[0]['st_trans_type'] == 'D' && $transport_data[0]['accTcid'] == $this->session->userdata('userid') && $in_status_transport =='4')
				{
					redirect($this->config->item('base_url')."org_transportation/request_assigned_to_me/");
				} else if($transport_data[0]['st_trans_type'] == 'D' &&  $in_status_transport =='1' || ($this->input->post('update_status')=='1' && $in_status_transport =='1'))
				{
					redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
				}else if($transport_data[0]['accTcid'] != $this->session->userdata('userid') && $transport_data[0]['st_trans_type'] == 'D' && $in_status_transport =='4' )
				{
					redirect($this->config->item('base_url')."org_transportation/draft_transport/");
				}
				
				
            }
        } else {
            $transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
            if (empty($transport_details)) {
                redirect($this->config->item('base_url'));
            }
            //echo "<pre>";print_r($transport_details);die;
            if ($transport_details['0']['in_status'] == '3' || $transport_details['0']['in_status'] == '2') {
                $this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
                redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
            }

            $data['org_trasport'] = array();

            $data['org_trasport']['in_need_trans_monitor'] = $transport_details['0']['in_need_trans_monitor'];
			$data['org_trasport']['in_allow_pics'] = $transport_details['0']['in_allow_pics'];
			$data['org_trasport']['stAniStory'] = $transport_details['0']['stAniStory'];
            $data['org_trasport']['pick_zipcode'] = isset($transport_details['0']['st_from_zip']) ? $transport_details['0']['st_from_zip'] : '';
            $data['org_trasport']['pick_city'] = isset($transport_details['0']['st_from_city']) ? $transport_details['0']['st_from_city'] : '';
            $data['org_trasport']['pick_state'] = isset($transport_details['0']['st_from_state']) ? $transport_details['0']['st_from_state'] : '';
            $data['org_trasport']['pick_country'] = isset($transport_details['0']['st_from_country']) ? $transport_details['0']['st_from_country'] : '';
			$data['org_transport']['in_status'] = isset($transport_details['0']['in_status']) ? $transport_details['0']['in_status'] : '';
            $data['org_trasport']['pickupselect'] = (isset($transport_details['0']['dt_pickup_date']) && $transport_details['0']['dt_pickup_date']!='1969-12-31' && $transport_details['0']['dt_pickup_date']!='0000-00-00')?date("m/d/Y", strtotime($transport_details['0']['dt_pickup_date'])):'';
			//$data['org_trasport']['st_trans_type'] = $transport_details['0']['st_trans_type'];
             $data['org_trasport']['fb_share'] = isset($transport_details['0']['in_fb_share']) ? $transport_details['0']['in_fb_share'] : '0';
			$data['org_trasport']['pick_base_airport'] = $transport_details[0]['st_from_street'].' ('.$transport_details['0']['st_from_city'].')';
			$data['org_trasport']['pickup_airport_identifer'] = $transport_details[0]['st_from_street'];

            $data['org_trasport']['drop_zipcode'] = isset($transport_details['0']['st_to_zip']) ? $transport_details['0']['st_to_zip'] : '';
            $data['org_trasport']['drop_city'] = isset($transport_details['0']['st_to_city']) ? $transport_details['0']['st_to_city'] : '';
            $data['org_trasport']['drop_state'] = isset($transport_details['0']['st_to_state']) ? $transport_details['0']['st_to_state'] : '';
            $data['org_trasport']['drop_country'] = isset($transport_details['0']['st_to_country']) ? $transport_details['0']['st_to_country'] : '';
			
			$data['org_trasport']['trans_unique_name'] = isset($transport_details['0']['st_trans_name']) ? $transport_details['0']['st_trans_name'] : '';

            $data['org_trasport']['dateselect'] = (isset($transport_details['0']['dt_target']) && $transport_details['0']['dt_target']!='1969-12-31' && $transport_details['0']['dt_target']!='0000-00-00')?date("m/d/Y", strtotime($transport_details['0']['dt_target'])):'';

            /*$data['org_trasport']['drop_zip'] = $data['org_trasport']['drop_zipcode'] . ', ';

            if ($data['org_trasport']['drop_city'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_city'] . ', ';
            }
            if ($data['org_trasport']['drop_state'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_state'] . ', ';
            }
            if ($data['org_trasport']['drop_country'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_country'];
            }*/
			
			$data['org_trasport']['drop_base_airport'] = $transport_details[0]['st_to_street'].' ('.$transport_details['0']['st_to_city'].')';
			$data['org_trasport']['dropoff_airport_identifer'] = $transport_details[0]['st_to_street'];
			
			$data['org_trasport']['receiving_organization_name'] = isset($transport_details['0']['stRecOrgNm']) ? $transport_details['0']['stRecOrgNm'] : '';
			$data['org_trasport']['receiving_contact_name'] = isset($transport_details['0']['stRecNm']) ? $transport_details['0']['stRecNm'] : '';
			$data['org_trasport']['receiving_contact_email'] = isset($transport_details['0']['stRecEmail']) ? $transport_details['0']['stRecEmail'] : '';
			$data['org_trasport']['receiving-501c3-certified'] = isset($transport_details['0']['stR501c3']) ? $transport_details['0']['stR501c3'] : '';
            //$data['org_trasport']['receiving_contact_phone_no'] = isset($transport_details['0']['stRphone']) ? $transport_details['0']['stRphone'] : '';
			$data['org_trasport']['receiving_contact_phone_no'] = isset($transport_details['0']['stRphone']) ? preg_replace('/\D/', '',$transport_details['0']['stRphone']) : '';
			
			$data['org_trasport']['organization_name'] = isset($transport_details['0']['stSendOrgNm']) ? $transport_details['0']['stSendOrgNm'] : '';
			$data['org_trasport']['contact_name'] = isset($transport_details['0']['stSendNm']) ? $transport_details['0']['stSendNm'] : '';
			$data['org_trasport']['contact_email'] = isset($transport_details['0']['stSendEmail']) ? $transport_details['0']['stSendEmail'] : '';
			$data['org_trasport']['501c3-certified'] = isset($transport_details['0']['stS501c3']) ? $transport_details['0']['stS501c3'] : '';
            //$data['org_trasport']['contact_phone_no'] = isset($transport_details['0']['stSphone']) ? $transport_details['0']['stSphone'] : '';
			$data['org_trasport']['contact_phone_no'] = isset($transport_details['0']['stSphone']) ? preg_replace('/\D/', '',$transport_details['0']['stSphone']): '';
			$data['org_trasport']['st_trans_type'] = isset($transport_details['0']['st_trans_type']) ? $transport_details['0']['st_trans_type'] : '';
			$data['org_trasport']['sendrunsheet-sending'] = isset($transport_details['0']['inSendOrgRunsheet']) ? $transport_details['0']['inSendOrgRunsheet'] : '1';
            $data['org_trasport']['sendrunsheet-receiving'] = isset($transport_details['0']['inRecOrgRunsheet']) ? $transport_details['0']['inRecOrgRunsheet'] : '1';
			$data['org_trasport']['enable_routing_status'] = isset($transport_details['0']['enable_routing_status']) ? $transport_details['0']['enable_routing_status'] : '';
			$data['org_trasport']['owner_routing_status'] = (isset($transport_details['0']['accTcid']) && !empty($transport_details['0']['accTcid']) && $transport_details['0']['accTcid']==$this->session->userdata('userid') && $transport_details['0']['accTcid']!=0) ? 1 : 0;

			if($data['org_trasport']['organization_name'] == '')
			{
				$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id')); 
				$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
				if(isset($org_details['st_org_name']) && !empty($org_details['st_org_name'])) {
					$data['org_trasport']['organization_name'] = $org_details['st_org_name'];
				} else {
					$data['org_trasport']['organization_name'] = '';
				}
				
				 if(isset($user_details[0]['st_display_name']) && !empty($user_details[0]['st_display_name'])) {
					$data['org_trasport']['contact_name'] = $user_details[0]['st_display_name']." ".$user_details[0]['st_last_name'];
				} else {
					$data['org_trasport']['contact_name'] = '';
				}
				
				if(isset($user_details[0]['st_email']) && !empty($user_details[0]['st_email'])) {
					$data['org_trasport']['contact_email'] = $user_details[0]['st_email'];
				} else {
					$data['org_trasport']['contact_email'] = '';
				}
				
				
				if(isset($user_details[0]['st_primary_phone']) && !empty($user_details[0]['st_primary_phone'])) {
					$data['org_trasport']['contact_phone_no'] = $user_details[0]['st_primary_phone'];
					$data['org_trasport']['contact_phone_no'] = preg_replace('/\D/', '', $org_details['st_primary_phone']);
				} else {
					$data['org_trasport']['contact_phone_no'] = '';
				}
				
				if(isset($org_details['st_has_501c3']) && !empty($org_details['st_has_501c3'])) {
					$data['org_trasport']['501c3-certified'] = $org_details['st_has_501c3'];
				} else {
					$data['org_trasport']['501c3-certified'] = '';
				}
			}
			
			//echo "<pre>";print_r($data['org_trasport']);die;
            //$this->load->view('organization-rescue',$data);	
            $this->load->view('transportation/edit-airline-trans-details', $data);
        }
    }
	
	function get_airline_covering_leg_details()
	{
		$in_id = $_POST['in_id'];
		$startTime = "00:00:00";
		$endTime = "23:59:00";
		$covering_leg =  $this->orgtrasnportation_model->airline_date_legs($in_id);
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$user_profile = $this->common_model->get_user_profile($covering_leg['in_user_id']);	
		$covering_leg_details['st_from_street']   = $transport_details[0]['st_from_street'];
		$covering_leg_details['st_to_street']     = $transport_details[0]['st_to_street'];
		/*$covering_leg_details['start_time']       = date("Y-m-d H:i:s",strtotime($covering_leg['dt_trip_date'].$startTime));
		$covering_leg_details['end_time']         = date("Y-m-d H:i:s",strtotime($covering_leg['dt_trip_date'].$endTime));*/
		/*$covering_leg_details['start_time']       = date("d M y - h:i A",strtotime($covering_leg['dt_trip_date'].$startTime));
		$covering_leg_details['end_time']         = date("d M y - h:i A",strtotime($covering_leg['dt_trip_date'].$endTime));*/
		$covering_leg_details['start_time']       = date("D M d - h:i A",strtotime($covering_leg['dt_trip_date'].$startTime));
		$covering_leg_details['end_time']         = date("D M d - h:i A",strtotime($covering_leg['dt_trip_date'].$endTime));	
		$covering_leg_details['start_time_year']  = date("Y",strtotime($covering_leg['dt_trip_date'].$startTime));
		$covering_leg_details['end_time_year']    = date("Y",strtotime($covering_leg['dt_trip_date'].$endTime));
		$covering_leg_details['st_display_name']  = $covering_leg['st_display_name'].' '.$covering_leg['st_last_name'];
		$covering_leg_details['in_user_id']  	  = $covering_leg['in_user_id'];
		$covering_leg_details['time_zone'] 	  	  = (isset($user_profile[0]['st_time_zone']) && !empty($user_profile[0]['st_time_zone']))?$user_profile[0]['st_time_zone']:'EST'; 
		echo json_encode($covering_leg_details);
	}
	
	function get_all_airlinebases() 
	{
        $data_val = $this->input->get('term');
        $driver_name = $this->orgtrasnportation_model->get_airline_user($data_val);
		if(count($driver_name)>0)
		{	
			echo json_encode($driver_name);
		} else {
			$arrData[]	= array("label"			=> 'Non-doobert-user',
								"value"			=> 'n-d-u',
								'name'			=> 'Non-doobert-user',
								);
			echo json_encode($arrData);
		}	
        //echo json_encode($driver_name);
    }
	
	function cancel_non_doobertleg()
	{
		$leg_id = $this->input->post('leg_id');
		$this->orgtrasnportation_model->delete_legs_transport($leg_id);
	}
	
	public function delete_non_doobert_routing_user_leg()
	{
		$id = $_POST['non_doobert_id'];
		$non_doobert_detail = $this->orgtrasnportation_model->get_non_doobert_user_detail($id);
		$tra_id						= $non_doobert_detail['in_transportation_id'];
		$transport_details 			= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$legs_id 					= $non_doobert_detail['in_leg_id'];
		$rou_tc_user 				= $this->common_model->get_user_profile($transport_details[0]['accTcid']);
		//$this->orgtrasnportation_model->update_non_doobert_user_leg($id);
		//$leg_id = $legs_ids;
		
		$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_id);
		$order_id = $user_legs['sort_order'];
		$this->orgtrasnportation_model->delete_nondoobert_user_leg($legs_id,$id);
		$this->orgtrasnportation_model->update_order_legs($order_id,$tra_id);	
		if(!empty($user_legs))
		{
							if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
								{
									$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
								}
								else
								{
									$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].", ":"").($user_legs['pick_city']? $user_legs['pick_city'].", ":"").($user_legs['pick_state'] ? $user_legs['pick_state'].", ":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].", ":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
								}
								if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
								{
									$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
								}
								else
								{
									$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].", ":"").($user_legs['drop_city']? $user_legs['drop_city'].", ":"").($user_legs['drop_state'] ? $user_legs['drop_state'].", ":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].", ":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
								}
							//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
							$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
							$total_miles  	= $total_miles['distance'];	
							$this->orgtrasnportation_model->update_distance($total_miles);
							$percent = number_format(($total_miles*100)/$transport_details['0']['in_tot_distance'],2,".","");
							$percent = ($percent>=100)?100:$percent;
							$target_date = @date("l, M d",@strtotime(@$user_legs['pick_start_time']));	
							$name_arr = array("target_date"		=> $target_date,
											  "coordinator_name"  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),
											  "removed_user_name" =>$non_doobert_detail['st_name'],	
											  "transport_id" 	=> $this->session->userdata('transport_id'),
											  "percent" 		=> $percent,
											  "st_org_name" => $transport_details['0']['st_org_name'],
											  "st_org_code" => $transport_details['0']['st_org_code'],
											  "st_display_name" => $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'],
											  "st_email" => $rou_tc_user['0']['st_email'],
											  "st_add_comments" => $transport_details['0']['st_add_comments'],
										 );				 					
							$this->remove_from_transport_email($non_doobert_detail['st_email'],"33",$name_arr);
					
			
					$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
											"in_transportation_id"	=> $this->session->userdata('transport_id'),
											"in_transport_leg_id"	=> $legs_id,
											//"in_user_id"			=> $remove_user_id,
											"in_non_doobert_user_id"=> $id,									
											"in_type"				=> 26,
											//"in_modified_by"		=> $remove_user_id,
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0"
										  );
				$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
					
					//User Notify
					$notification_last_id = $this->db->insert_id();
		}			
					
		if(strpos($_SERVER['HTTP_REFERER'], 'user-submission') !== false)
		{
			$this->session->set_flashdata('google_leg','Volunteer has been removed from transport successfully.');
			redirect($this->config->item('base_url')."user-submission/".$this->session->userdata('transport_id')."/");
		} else {	
			$this->session->set_flashdata('google_leg','Volunteer has been removed from transport successfully.');
			redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id')."/");
		}
								
				
		
	
	
	}
	
	public function get_last_meeting_location()
	{
		$last_meeting_loc = '';
		$sort_order = '';
		if($this->input->post('leg_id') && $this->input->post('leg_id')!='')
		{
			$sort_order = $this->input->post('leg_id');
		} else {	
			$sort_order = $this->orgtrasnportation_model->get_last_leg_order();
		}
		
		if($sort_order > 0 && $sort_order!='')
		{	
			if($this->input->post('leg')=='route' || $this->input->post('leg')=='aviation')
			{
			 	$last_meeting_loc = $this->orgtrasnportation_model->get_last_leg_pickupaddress($sort_order);	
				echo json_encode($last_meeting_loc);	
			} 	
			else
			{
			 	$last_meeting_loc = $this->orgtrasnportation_model->get_last_leg_meetinglocation($sort_order);
			 	echo $last_meeting_loc;
			}
		
		} else {
			if($this->input->post('leg')=='route')
			{
				$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
				if(count($transport_details)>0)
				{	
					$startdate = date("D M d - h:i A",strtotime($transport_details[0]['dt_pickup_date'].'06:00:00'));
					$start_year = date("Y",strtotime($transport_details[0]['dt_pickup_date']));
					$last_meeting_loc = array( 'st_meeting_location' => '',
											'st_to_meeting_location' => '',
													 'in_route_type' => '0',
														 'st_street' => '',
													       'st_city' => $transport_details[0]['st_from_city'],
														    'st_zip' => $transport_details[0]['st_from_zip'],
													      'st_state' => $transport_details[0]['st_from_state'],
													    'st_country' => $transport_details[0]['st_from_country'],
												     'dt_start_time' => $startdate,
												     'dt_start_year' => $start_year,
										    );
											
					echo json_encode($last_meeting_loc);						
				} else 
				{
					echo $last_meeting_loc;
				}		
			} else
			{	
				echo $last_meeting_loc;
			}		
		}	
	}
	
	public function get_next_meeting_location()
	{
		$last_meeting_loc = '';
		if($this->input->post('leg_id') && $this->input->post('leg_id')!='')
		{
			$sort_order = $this->input->post('leg_id');
		} else {	
				$sort_order = '';
		}			
		if($sort_order > 0 && $sort_order!='')
		{	
			$last_meeting_loc = $this->orgtrasnportation_model->get_next_leg_meetinglocation($sort_order);
		}
		echo $last_meeting_loc;	
	}
	
	public function switch_tc()
	{
		if(!$this->session->userdata('userid') || !$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
		}
		
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		
		if($owner_id != $this->session->userdata('userid')) {
			redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");		
		}
		
		if($this->session->userdata('switchtc_search'))
		{
		 	  	$this->session->unset_userdata('switchtc_search');
		}
		if($this->session->userdata('user_switchtc_search'))
		{
			   $this->session->unset_userdata('user_switchtc_search');
		}
		$this->switch_transport_cordinator();
	}
	
	public function switch_transport_cordinator()
	{
		if(!$this->session->userdata('userid') || !$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$config = array();
			
		$this->load->library('pagination');
		$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
		$org_code = $this->common_model->get_single_org_details($this->session->userdata('org_id'));
		$orgcode	=	($org_code['st_org_code'])? $org_code['st_org_code'] : array('DBT','dbt');
		if($this->input->post('search_module'))
		{
			if($this->input->post('module_search_text')=='')
			{
				$this->session->unset_userdata('switchtc_search');	
				$this->session->unset_userdata('user_switchtc_search');	
			}
			else
			{
				if(preg_match('([a-zA-Z].*[0-9]|[0-9].*[a-zA-Z].\s)', $this->input->post('module_search_text')))
				{
							$zip_code = $this->input->post('module_search_text');
							$zip_code = str_replace(" ","",$zip_code);
							$_POST['module_search_text'] = strtoupper($zip_code);
				}
				
				$draft_search = addslashes(str_replace($orgcode,"",$this->input->post('module_search_text')));
				//$draft_search = addslashes(preg_replace('/\D/', '', $this->input->post('module_search_text')));
				$this->session->set_userdata('switchtc_search',trim($draft_search));	
				$this->session->set_userdata('user_switchtc_search',$this->common_function->custom_htmlentities($this->input->post('module_search_text')));	
			}
		}
		
		$config["base_url"] 		= base_url().'org_transportation/switch_transport_cordinator';
		
		$config["per_page"]	 		= 10;
		$config["uri_segment"] 		= 3;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';	
		
		if($this->input->post('edit_tc_action'))
		{
			$transport_id = $this->input->post('transport_id');
			$new_tc_user  = $this->input->post('tc_user');
			$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
			$user_profile = $this->common_model->get_user_profile($new_tc_user);
			$details = array('in_trans_coods_id'=>$new_tc_user,'dt_modified'=>date("Y-m-d H:i:s"));
			$routing_data = $this->orgtrasnportation_model->update_transport_detail_by_id($details,$transport_id);
			$this->load->library('email');
			
			$user_email_address[] = array("user_id" => $transport_details['0']['in_user_id'],
									  "user_email"	=> $transport_details['0']['st_email'],
									  "display_name" => $transport_details['0']['st_display_name']
									 );	
									   
			$user_email_address[] = array("user_id" 	=> $user_profile[0]['in_user_id'],
									  "user_email"		=> $user_profile[0]['st_email'],
									  "display_name" 	=> $user_profile[0]['st_display_name'].' '.$user_profile[0]['st_last_name']
									 );
			
			$email_details = $this->common_model->get_email_containt("127");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
			$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id'));
			$org_owner	 = ($org_details['st_director'])? $org_code['st_director']:'';
			
			$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
			$transportid = $orgcode.$transport_id;
			$first_name_link = str_replace(' ', '',$user_profile[0]['st_display_name']);
			$last_name_link = str_replace(' ', '',$user_profile[0]['st_last_name']);
			$user_link_name = '';
			$user_link_name	.=	"<a href='".base_url()."user-".$user_profile[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
			$user_link_name	.=	$user_profile[0]['st_display_name'].' '.$user_profile[0]['st_last_name'];
			$user_link_name	.=	"</a>";
		
			$email_address  = '<a href="mailto:'.$user_profile[0]['st_email'].'">'.$user_profile[0]['st_email'].'</a>';
		
			$new_tc_details ='';					
			$new_tc_details .=	'Transport Coordinator Name: '.$user_link_name.'<br>';
			$new_tc_details .=	'Email Address: '.$email_address."<br>";
			if(!empty($user_profile[0]['st_primary_phone']) && isset($user_profile[0]['st_primary_phone']))
			{
				$new_tc_details .=	'Telephone Number : '.$user_profile[0]['st_primary_phone'];
			}
		
			if (isset($email_details[0]['st_email_body'])) 
			{
				$templete = $email_details[0]['st_email_body'];
				$templete = str_replace("##new_tc_details##",$new_tc_details, $templete);
				//$templete =	str_replace("##display_name##",$user_name, $templete);
				$templete =	str_replace("##transport_id##",$transport_link, $templete);
				
				$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
				if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
				{
					$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
				} else {
					$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
				}		
				$templete = str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				$templete = str_replace("##Organization_Owner_Name##",$org_owner,$templete);
				
				//$templete = str_replace("##notes##", nl2br($origin_comments), $templete);		
				$strMail = $templete;
			
				$template_subject = $email_details[0]['st_email_subject'];
				$template_subject = str_replace("##transport##",$transportid, $template_subject);
				$category 		  = $email_details[0]['st_category'];
			
				if(count($user_email_address)>0)
				{
					foreach($user_email_address as $key=>$value)
					{
						if($value['user_email']!='' && isset($value['user_email']))
						{
							$message = $strMail;
							$message = str_replace("##display_name##",$value['display_name'],$message);
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($value['user_id']).'/'.$this->common_function->encode_base64($value['user_email']),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($value['user_id']).'/'.$this->common_function->encode_base64($value['user_email']),$message);		
							$message = str_replace("##DONATION##",$donation,$message);		
							$to = $value['user_email'];
							$subject = $template_subject;
							$category  = $category;
							$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
						}
					}	
				}	
			}
			
			$this->session->set_flashdata('success', 'Transport has been successfully  transferred to another transport co-ordinator.');
			redirect(base_url().'org_transportation/switch_transport_cordinator');
		}	
		
		$active_transport	= $this->orgtrasnportation_model->get_all_active_transportation($this->session->userdata('org_id'),$page,$config["per_page"]);
		$config["total_rows"] 	  = $active_transport['num_rows'];
		$data['transportation_list'] = $active_transport['transportation_list'];
		
		$this->pagination->initialize($config);
		$data["links"] = $this->pagination->create_links();
			
		$this->load->view('transportation/switch-transport-cordinator',$data);	
	}
	
	public function get_organization_member()
	{
		$owner_details = array();
		$users_id = array(); 
		$user_id = $this->input->post('user_id');
		$users = $this->orgtrasnportation_model->get_all_approved_users($this->session->userdata('org_id'),$user_id);
		$owner_details = $this->common_model->get_owner_details($this->session->userdata('org_id'));
		if(count($owner_details)>0)
		{
			if(count($users)>0)
			{	
				$users_id = array_column($users,'user_id');
			}	
			if(in_array($owner_details['0']['user_id'],$users_id)== false && $owner_details['0']['user_id']!=$user_id  )
					{
						$users[] = 	array(	'user_id'	=>	$owner_details['0']['user_id'],
											'name'		=>	$owner_details['0']['name'],
											'email'		=>	$owner_details['0']['email_address'],
											'user_name' =>  $owner_details['0']['name'].' ('.$owner_details['0']['email_address'].')',
											//'transport' =>  $st_permission['transport'],	
										);
					}		
		}	
		echo json_encode($users);
	}
	
		public function publish_new_ride()
		{
			
		 if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		 
		
		$this->session->unset_userdata('transport_step');
		$transport_status = '';
		
        if (!$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		
        $make_array_user = array();
        $check_per_flag = '';
        if ($owner_id != $this->session->userdata('userid')) 
		{
			
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if ($owner_id != $this->session->userdata('userid')) 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }	
			
		$data = array();
		$data['kitten_transportation'] = $this->orgtrasnportation_model->get_kitten_transport($this->session->userdata('org_id'));
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$this->load->model('location_favorite_model');
		$data['location_data'] = $this->location_favorite_model->get_location_by_org_id($this->session->userdata('org_id'));
		
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['profile_details'] = $user_details[0];
		
		if($this->input->post('create_new_ride'))
		{
			$in_ride_id = '';
			$quick_addition = '0';
			$in_frm_ride_id = '';
			$in_to_ride_id = '';
			if($this->input->post('quick-add'))
			{
				$pickup_street ='';
				$pickup_zip = $this->input->post('postal_code_s');
				$pickup_street .= $this->input->post('street_number_s')?$this->input->post('street_number_s').' ':'';
				$pickup_street .= $this->input->post('route_s')?$this->input->post('route_s'):'';
				$pickup_address = $this->common_model->getaddress($pickup_zip);
				$from_city = ($this->input->post('locality_s'))?trim($this->input->post('locality_s')):trim($pickup_address['city']);
				
				$pickup_location_details = array(
					'st_loc_nickname' => 	trim($pickup_address['city'].' '.$pickup_address['state_prefix']),
					'st_loc_name'		=> 	trim($pickup_address['city'].' '.$pickup_address['state_prefix']),
					'st_loc_street' 	=> 	trim($pickup_street),
					'st_loc_city'		=>	$from_city,
					'st_loc_state'		=>	trim($pickup_address['state_prefix']),
					'st_loc_zip'		=>	trim($pickup_zip),
					'st_loc_contact'	=>	trim($this->input->post('contact_name')),
					'st_loc_email'		=>	trim($this->input->post('contact_email')),
					'st_loc_phone'		=>	trim($this->input->post('contact_phone_no')),
					'in_user_id' 		=>	$this->session->userdata('userid'),
					'in_org_id' 		=>	$this->session->userdata('org_id'),
					'dt_created'		=>  date("Y-m-d H:i:s"),
					'dt_modified'		=>  date("Y-m-d H:i:s"),
					"in_deleted"		=> "0"
					);
					
				$this->db->insert('tbl_trans_location',$pickup_location_details);
				$pickup_trans_id = $this->db->insert_id();
				
				$dropoff_street ='';
				$dropoff_zip = $this->input->post('postal_code_d');
				$dropoff_street .= $this->input->post('street_number_d')?$this->input->post('street_number_d').' ':'';
				$dropoff_street .= $this->input->post('route_d')?$this->input->post('route_d'):'';
				$dropoff_address = $this->common_model->getaddress($dropoff_zip);
				$to_city  =  ($this->input->post('locality_d'))?trim($this->input->post('locality_d')):trim($dropoff_address['city']);
				

					$dropoff_location_details = array( 	'st_loc_nickname' 	=> 	trim($dropoff_address['city'].' '.$dropoff_address['state_prefix']),
														'st_loc_name'		=> 	trim($dropoff_address['city'].' '.$dropoff_address['state_prefix']),
														'st_loc_street' 	=> 	trim($dropoff_street),
													   'st_loc_city'		=>	$to_city,
													   'st_loc_state'		=>	trim($dropoff_address['state_prefix']),
													     'st_loc_zip'		=>	trim($dropoff_zip),
											          'st_loc_contact'		=>	trim($this->input->post('receiving_contact_name')),
													    'st_loc_email'		=>	trim($this->input->post('receiving_contact_email')),
													    'st_loc_phone'		=>	trim($this->input->post('receiving_contact_phone_no')),
														  'in_user_id' 		=>	$this->session->userdata('userid'),
														    'in_org_id' 	=>	$this->session->userdata('org_id'),
														   'dt_created'		=>  date("Y-m-d H:i:s"),
														  'dt_modified'		=>  date("Y-m-d H:i:s"),
														    "in_deleted" 	=> "0"
													);
					
				$this->db->insert('tbl_trans_location',$dropoff_location_details);
				$dropoff_trans_id = $this->db->insert_id();
				
				$quick_addition = '1';
				$in_frm_ride_id = $pickup_trans_id;
				$in_to_ride_id = $dropoff_trans_id;
				
				if($this->input->post('add_favorite'))
				{	
					$ride_details = array( 'st_ride_nickname' 	=> 	trim($pickup_address['city'].' '.$pickup_address['state_prefix'].' - '.$dropoff_address['city'].' '.$dropoff_address['state_prefix']),
											     'in_from_id' 	=> 	trim($pickup_trans_id),
												   'in_to_id' 	=> 	trim($dropoff_trans_id),
											 'st_instruction' 	=> 	trim($this->input->post('leg_instructions')),
												 'in_user_id' 	=>	$this->session->userdata('userid'),
											      'in_org_id' 	=>	$this->session->userdata('org_id'),
					                             "in_deleted"	=> "0"
					);
				
					$ride_details['dt_created']	= date("Y-m-d H:i:s");
					$ride_id = $this->location_favorite_model->add_ride($ride_details);
					$in_ride_id = $ride_id;
				}
				$kitten_transportation_detail[0] = array('pickup_street'		   => trim($pickup_street),
														 'pickup_city'			   => $from_city,
														 'pickup_state' 		   => trim($pickup_address['state_prefix']),
														 'pickup_zip'			   => trim($pickup_zip),
														 'sending_contact_name'    => trim($this->input->post('contact_name')),
														 'sending_email_address'   => trim($this->input->post('contact_email')),
														 'sending_phone_number'	   => trim($this->input->post('contact_phone_no')),
														 'dropoff_street'          => trim($dropoff_street),
														 'dropoff_city'			   => $to_city,
														 'dropoff_state'		   => trim($dropoff_address['state_prefix']),
														 'dropoff_zip'			   => trim($dropoff_zip),	
														 'receiving_contact_name'  => trim($this->input->post('receiving_contact_name')),
														 'receiving_email_address' => trim($this->input->post('receiving_contact_email')),	
														 'receiving_phone_number'  => trim($this->input->post('receiving_contact_phone_no')),
														 'st_instruction'		   => trim($this->input->post('leg_instructions')),	
														);	
				
			} else if($this->input->post('favorite_ride'))
			{	
				$in_ride_id = $this->input->post('favorite_ride'); 
				$kitten_transportation_detail = $this->orgtrasnportation_model->get_kitten_transport($this->session->userdata('org_id'),$this->input->post('favorite_ride'));
			}
			if(isset($kitten_transportation_detail) && count($kitten_transportation_detail)>0 )
			{	
				$kitten_transportation_detail = $kitten_transportation_detail[0];
				$from_address = $this->common_model->getaddress($kitten_transportation_detail['pickup_zip']);
				$to_address   = $this->common_model->getaddress($kitten_transportation_detail['dropoff_zip']);
				
				
				
				$from_address_country = (isset($from_address['st_country']) && !empty($from_address['st_country']))?$this->common_function->shortCountry[trim($from_address['st_country'])]:'USA';
				$to_address_country   = (isset($to_address['st_country']) && !empty($to_address['st_country']))?$this->common_function->shortCountry[trim($to_address['st_country'])]:'USA';
			
				$origin 	  = ($kitten_transportation_detail['pickup_city'] ? $kitten_transportation_detail['pickup_city'] . "," : "") . ($kitten_transportation_detail['pickup_state'] ? $kitten_transportation_detail['pickup_state'] : "") . ($kitten_transportation_detail['pickup_zip'] ? "," . $kitten_transportation_detail['pickup_zip'] : "");
                $destinations = ($kitten_transportation_detail['dropoff_city'] ? $kitten_transportation_detail['dropoff_city'] . "," : "") . ($kitten_transportation_detail['dropoff_state'] ? $kitten_transportation_detail['dropoff_state'] : "") . ($kitten_transportation_detail['dropoff_zip'] ? "," . $kitten_transportation_detail['dropoff_zip'] : "");
                $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
				
				//$transport_date = $this->input->post('transportdate')?$this->input->post('transportdate'):date("m/d/Y");
				//$latest_trans_date = $this->input->post('to_transportdate')?$this->input->post('to_transportdate'):date("m/d/Y");
				
				if($this->input->post('transportdate'))
				{	
					if($this->input->post('transportdate_year'))
						$transport_date = $this->input->post('transportdate').' '.$this->input->post('transportdate_year');
					else 
						$transport_date = $this->input->post('transportdate');
				} else {
					$transport_date = date("m/d/Y");	
				}
				
				if($this->input->post('to_transportdate'))
				{	
					if($this->input->post('to_transportdate_year'))
						$latest_trans_date = $this->input->post('to_transportdate').' '.$this->input->post('to_transportdate_year');
					else 
						$latest_trans_date = $this->input->post('to_transportdate');
				} else {
					$latest_trans_date = date("m/d/Y");	
				}
				
				
				
				
				$datepicker1 = date("Y-m-d",strtotime($transport_date));
				$latest_datepicker = date("Y-m-d",strtotime($latest_trans_date));
				$timepicker1 = date("H:i:s",strtotime($this->input->post('timepicker1')));
				$required_time_second = $routes_miles['duration_value'];
				//$time_per_sec = strtotime($this->input->post('timepicker1'))+$routes_miles['duration_value'];
				$time_per_sec = strtotime($this->input->post('timepicker2'))+$routes_miles['duration_value'];
				$latest_pickup_time = date("H:i:s",strtotime($this->input->post('timepicker2')));
				$timepicker2  = date("H:i:s",$time_per_sec);
				if(strtotime($latest_pickup_time)>=strtotime($timepicker2))
				{
					$datepicker2 = date("Y-m-d",strtotime($latest_datepicker."+1 day"));	
				} else {
					$datepicker2 = date("Y-m-d",strtotime($latest_trans_date)); 
				}
				
				//is round trip
				$round = $this->input->post('is_round');
				if(isset($round) && !empty($round)){
					$is_round = 1;
				}else{
					$is_round = 0;
				}
				$mins = $this->input->post('mins');
				if(isset($mins) && !empty($mins)) {
					$in_mins = $mins;
				}else{
					$in_mins ='';
				}

				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($kitten_transportation_detail['st_ride_nickname']),
											//"st_from_street"	=> $data['org_trasport']['pick_street'],
											"st_from_city"		=> trim($kitten_transportation_detail['pickup_city']),
											"st_from_state"		=> trim($kitten_transportation_detail['pickup_state']),
											"st_from_zip"		=> trim($kitten_transportation_detail['pickup_zip']),
											"st_from_country"	=> trim($from_address_country),
											//"st_to_street"		=> $data['org_trasport']['drop_street'], 
											"st_to_city"		=> trim($kitten_transportation_detail['dropoff_city']),  
											"st_to_state"		=> trim($kitten_transportation_detail['dropoff_state']), 
											"st_to_zip"			=> trim($kitten_transportation_detail['dropoff_zip']),  
											"st_to_country"		=> trim($to_address_country),
											//"st_from_info"		=> $data['org_trasport']['pick_info'],
											"dt_pickup_date"	=> date("Y-m-d", strtotime($transport_date)),
											"dt_target"			=> date("Y-m-d", strtotime($datepicker2)),
											//"st_to_info"		=> $data['org_trasport']['drop_info'],
											"st_trans_type"		=> "R",
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"dt_created"		=> date("Y-m-d H:i;s"),
											"in_status"			=> $this->input->post('transport_status')?$this->input->post('transport_status'):'4',
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 	=>  0,
											"st_add_comments"	=> $this->input->post('additional-comments-text'),
											  'stRecNm'         => trim($kitten_transportation_detail['receiving_contact_name']),
												'stRecEmail'        => trim($kitten_transportation_detail['receiving_email_address']),
												  'stRphone'        => trim($kitten_transportation_detail['receiving_phone_number']),
												  'stR501c3'        => 'N',
												  'stS501c3'        => 'N',
											   'dt_modified'        => date('Y-m-d H:i:s'),
												  'stSendNm'	    => trim($kitten_transportation_detail['sending_contact_name']),
											   'stSendEmail'        => trim($kitten_transportation_detail['sending_email_address']),
												  'stSphone'        => trim($kitten_transportation_detail['sending_phone_number']),
									   'inSendOrgRunsheet'			=>  1,
									   'inRecOrgRunsheet'			=>  1,
											 'in_ride_id'		=>  $in_ride_id,			
											'in_sent_sms'		=> 1,
											'in_preferred_vol'	 => $this->input->post('preferred-vol')?1:0,
											'in_round' 				=> $is_round,
											'in_mins'				=> $in_mins,
											'in_quick_add'			=> $quick_addition,
									  'in_frm_ride_location'  		=> $in_frm_ride_id,
									   'in_to_ride_location'		=> $in_to_ride_id,
										  'st_latest_pickup'		=> $this->input->post('timepicker2'),
											'dt_latest_date'		=> $latest_datepicker,
										 'in_sms_notification'		=> $this->input->post('sms_notify')? 1 : 0,
												'in_fb_share'		=> $this->input->post('fb_publish')? 1 : 0,
											);	
				if($this->input->post('passenger_type')=='1')
				{
					$transport_details['no_of_kitten'] = $this->input->post('no_of_kitten');
				}
				
											
				$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
				$this->session->set_userdata('transport_id',$transport_id);	
				$transport_status = $transport_details['in_status'];
				
				$legs_array = array("in_transportation_id"    => $this->session->userdata('transport_id'),
										"in_route_type"       => "0",
										"in_multi_user" 	  => '0', 
										  "in_user_num" 	  => '0',
								  "st_meeting_location" 	  => '',
                                        "in_created_by"	      => $this->session->userdata('userid'),
										"in_sort_order" 	  => '1',
										   "dt_created" 	  => date("Y-m-d H:i:s"),
											"in_deleted" 	  => "0",
									 "st_to_meeting_location" => "",
									 "st_leg_instruction"     => $kitten_transportation_detail['st_instruction'],	
									);

				$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
				
				$starting_date = $datepicker1.' '.$timepicker1;
				
				$pickup_array = array("in_transportation_leg_id" => $leg_id,
										"st_leg_type" => "P",
										"st_street"   => $kitten_transportation_detail['pickup_street'],
                                        "st_city"     => $kitten_transportation_detail['pickup_city'],
                                        "st_state" 	  => $kitten_transportation_detail['pickup_state'],
										"st_zip" 	  => $kitten_transportation_detail['pickup_zip'],
										"st_country " => trim($from_address_country),
										"dt_start_time" => date('Y-m-d H:i:s', strtotime($starting_date)),
										"st_timezone" => $from_address['st_time_zone'],
										"in_deleted"  => "0"
									);
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
							
							$ending_date = $datepicker2.' '.$timepicker2;
							
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
																"st_leg_type" => "D",
																"st_street"   => $kitten_transportation_detail['dropoff_street'],
																"st_city"     => $kitten_transportation_detail['dropoff_city'],
																"st_state" 	  => $kitten_transportation_detail['dropoff_state'],
																"st_zip" 	  => $kitten_transportation_detail['dropoff_zip'],
																"st_country " => trim($to_address_country),
																"dt_start_time" => date('Y-m-d H:i:s', strtotime($ending_date)),
																"st_timezone" => $to_address['st_time_zone'],
																"in_deleted" => "0"
													);
						
							
													
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
				
							
							if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
							{
									$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
																"in_transportation_id"	=> $this->session->userdata('transport_id'),
																	   "in_route_type"	=> 0,
																	 "st_legs_details"	=> $routes_miles['route_path'],
																		 "fl_distance"	=> $routes_miles['distance'],
																		  "in_deleted"	=> "0"
														   );
								$this->common_model->insert_data("tbl_routes",$route_details);
							}
							
							if($this->session->userdata('uploaded_rider_image'))
							{
								$upload_image = $this->session->userdata('uploaded_rider_image');
								$transport_doc = explode(" ",$upload_image);
			
								$this->session->unset_userdata('uploaded_rider_image');
					
					
								for ($a = 0; $a < count($transport_doc); $a++) 
								{
									$file_details = array();
								if ($transport_doc[$a] != '' && file_exists($this->config->item('upload').'trasnportation/'.$transport_doc[$a])) {
									$file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
									"st_file_name" => $transport_doc[$a],
									"dt_created" => date("Y-m-d H:i:s"),
									"in_deleted" => "0"
									);
								$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);
								}
							}	
				
			
							} 	
				if($this->input->post('passenger_type')=='2')
				{
						
					for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					//$animal_weight = 'animal-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $data['org_details']['st_city'],
												     'st_state'				=>	$data['org_details']['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				}	
						
				}
			
				
			$data['Success_Msg_reg'] = 'Transport Created successfully';
			if($transport_status=='4')
			{	
							redirect(base_url().'org_transportation/draft_transport');	
			} else {
					$this->cron_model->update_trans_coods($this->session->userdata('transport_id'));
					$this->cron_model->get_near_by_transportride_users($this->session->userdata('transport_id'));	
					redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'));
			}
			//redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'));	
			} else {
				if(!$this->input->post('favorite_ride'))
					$data['Err_Msg_reg'] = 'There are no Rides so transport cannot be created';
				else 
					$data['Err_Msg_reg'] = 'Transport not created';
			}	
		}	
		
		//print_r($data);
		$this->load->view('transportation/publish_new_ride',$data);
	}
	
	public function edit_transport_ride()
	{
		
		 if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
		 
		if (isset($_GET['id'])) {
            $this->session->set_userdata('transport_id', $_GET['id']);
        }
		
		$this->session->unset_userdata('transport_step');
		$transport_status = '';
		
        if (!$this->session->userdata('org_id') || !$this->session->userdata('transport_id')) {
			redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		
        $make_array_user = array();
        $check_per_flag = '';
        if ($owner_id != $this->session->userdata('userid')) 
		{
			
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if ($owner_id != $this->session->userdata('userid')) 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }
		$this->load->model('location_favorite_model');
        #================Check User permission end================#
        $data = array();
        $data['Err_Msg'] = '';
        $data['menu_no'] = 'yes';
        $data['owner_id'] = $owner_id;
        $state_list = $this->common_function->state_list;
        $data['state_list'] = $state_list;
		$org_id 				= $this->session->userdata("org_id");
        $c_state_list = $this->common_function->canadian_state_list;
        $data['c_state_list'] = $c_state_list;
		$data['location_data'] = $this->location_favorite_model->get_location_by_org_id($this->session->userdata('org_id'));
        $data['all_state'] = array_merge($data['state_list'], $data['c_state_list']);

        $data['country_list'] = $this->common_function->doobertcountry;
		
		$animal_transport 		= $this->orgtrasnportation_model->get_org_trans_animal($org_id,"2");
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['animal_transport'] 	= $animal_transport;
		
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		$org_details = $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		
		$data['kitten_transportation'] = $this->orgtrasnportation_model->get_kitten_transport($this->session->userdata('org_id'));
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['profile_details'] = $user_details[0];
		
		$leg_details 			= $this->orgtrasnportation_model->get_trans_legs();
		$leg_id   = key($leg_details);
		$data['leg_id'] 	= $leg_id;
		$data['pickup_date'] =  date('h:i A',strtotime($leg_details[$leg_id]['pick_start_time']));
		
		if($this->input->post('create_new_ride'))
		{
			$in_ride_id = '';
			$quick_addition = '0';
			$in_frm_ride_id = '';
			$in_to_ride_id = '';
			
			if($this->input->post('quick-add'))
			{
				$pickup_street ='';
				$pickup_zip 	= $this->input->post('postal_code_s');
				$pickup_street .= $this->input->post('street_number_s')?$this->input->post('street_number_s').' ':'';
				$pickup_street .= $this->input->post('route_s')?$this->input->post('route_s'):'';
				$pickup_address = $this->common_model->getaddress($pickup_zip);
				$from_city 		= ($this->input->post('locality_s'))?trim($this->input->post('locality_s')):trim($pickup_address['city']);
				
				$pickup_location_details = array(
					'st_loc_nickname' => 	trim($pickup_address['city'].' '.$pickup_address['state_prefix']),
					'st_loc_name'		=> 	trim($pickup_address['city'].' '.$pickup_address['state_prefix']),
					'st_loc_street' 	=> 	trim($pickup_street),
					'st_loc_city'		=>	$from_city,
					'st_loc_state'		=>	trim($pickup_address['state_prefix']),
					'st_loc_zip'		=>	trim($pickup_zip),
					'st_loc_contact'	=>	trim($this->input->post('contact_name')),
					'st_loc_email'		=>	trim($this->input->post('contact_email')),
					'st_loc_phone'		=>	trim($this->input->post('contact_phone_no')),
					'in_user_id' 		=>	$this->session->userdata('userid'),
					'in_org_id' 		=>	$this->session->userdata('org_id'),
					'dt_modified'		=>  date("Y-m-d H:i:s"),
					"in_deleted"		=> "0"
					);
				
				
				if($this->input->post('loc_id_s'))
				{
					$pickup_trans_id = $this->input->post('loc_id_s');
					$this->db->where('in_loc_id',$pickup_trans_id);
					$this->db->update('tbl_trans_location',$pickup_location_details); 
				} else {	
					$pickup_location_details['dt_created'] = date("Y-m-d H:i:s");	
					$this->db->insert('tbl_trans_location',$pickup_location_details);
					$pickup_trans_id = $this->db->insert_id();
				}
				$dropoff_street ='';
				$dropoff_zip = $this->input->post('postal_code_d');
				$dropoff_street .= $this->input->post('street_number_d')?$this->input->post('street_number_d').' ':'';
				$dropoff_street .= $this->input->post('route_d')?$this->input->post('route_d'):'';
				$dropoff_address = $this->common_model->getaddress($dropoff_zip);
				$to_city  =  ($this->input->post('locality_d'))?trim($this->input->post('locality_d')):trim($dropoff_address['city']);

					$dropoff_location_details = array( 	'st_loc_nickname'   => 	trim($dropoff_address['city'].' '.$dropoff_address['state_prefix']),
														'st_loc_name'		=> 	trim($dropoff_address['city'].' '.$dropoff_address['state_prefix']),
														'st_loc_street' 	=> 	trim($dropoff_street),
													   'st_loc_city'		=>	$to_city,
													   'st_loc_state'		=>	trim($dropoff_address['state_prefix']),
													     'st_loc_zip'		=>	trim($dropoff_zip),
											          'st_loc_contact'		=>	trim($this->input->post('receiving_contact_name')),
													    'st_loc_email'		=>	trim($this->input->post('receiving_contact_email')),
													    'st_loc_phone'		=>	trim($this->input->post('receiving_contact_phone_no')),
														  'in_user_id' 		=>	$this->session->userdata('userid'),
														    'in_org_id' 	=>	$this->session->userdata('org_id'),
														  'dt_modified'		=>  date("Y-m-d H:i:s"),
														    "in_deleted" 	=> "0"
													);
				if($this->input->post('loc_id_d'))
				{
					$dropoff_trans_id = $this->input->post('loc_id_d');
					$this->db->where('in_loc_id',$dropoff_trans_id);
					$this->db->update('tbl_trans_location',$dropoff_location_details); 
				} else 
				{
					$dropoff_location_details['dt_created'] = date("Y-m-d H:i:s");	
					$this->db->insert('tbl_trans_location',$dropoff_location_details);
					$dropoff_trans_id = $this->db->insert_id();
				}
				$quick_addition = '1';
				$in_frm_ride_id = $pickup_trans_id;
				$in_to_ride_id = $dropoff_trans_id;
				if($this->input->post('fav_list_id'))
				{
					$in_ride_id = $this->input->post('fav_list_id');
				}	
				if($this->input->post('add_favorite'))
				{	
					$ride_details = array( 'st_ride_nickname' 	=> 	trim($pickup_address['city'].' '.$pickup_address['state_prefix'].' - '.$dropoff_address['city'].' '.$dropoff_address['state_prefix']),
											     'in_from_id' 	=> 	trim($pickup_trans_id),
												   'in_to_id' 	=> 	trim($dropoff_trans_id),
											 'st_instruction' 	=> 	trim($this->input->post('leg_instructions')),
												 'in_user_id' 	=>	$this->session->userdata('userid'),
											      'in_org_id' 	=>	$this->session->userdata('org_id'),
					                             "in_deleted"	=> "0"
					);
				
					$ride_details['dt_created']	= date("Y-m-d H:i:s");
					$ride_id = $this->location_favorite_model->add_ride($ride_details);
					$in_ride_id = $ride_id;
				}
				$kitten_transportation_detail[0] = array('pickup_street'		   => trim($pickup_street),
														 'pickup_city'			   => $from_city,
														 'pickup_state' 		   => trim($pickup_address['state_prefix']),
														 'pickup_zip'			   => trim($pickup_zip),
														 'sending_contact_name'    => trim($this->input->post('contact_name')),
														 'sending_email_address'   => trim($this->input->post('contact_email')),
														 'sending_phone_number'	   => trim($this->input->post('contact_phone_no')),
														 'dropoff_street'          => trim($dropoff_street),
														 'dropoff_city'			   => $to_city,
														 'dropoff_state'		   => trim($dropoff_address['state_prefix']),
														 'dropoff_zip'			   => trim($dropoff_zip),	
														 'receiving_contact_name'  => trim($this->input->post('receiving_contact_name')),
														 'receiving_email_address' => trim($this->input->post('receiving_contact_email')),	
														 'receiving_phone_number'  => trim($this->input->post('receiving_contact_phone_no')),
														 'st_instruction'		   => trim($this->input->post('leg_instructions')),	
														);	
				
			} else if($this->input->post('favorite_ride'))
			{	
				$in_ride_id = $this->input->post('favorite_ride');
				$kitten_transportation_detail = $this->orgtrasnportation_model->get_kitten_transport($this->session->userdata('org_id'),$this->input->post('favorite_ride'));
			}
			if(isset($kitten_transportation_detail) && count($kitten_transportation_detail)>0 )
			{	
				$kitten_transportation_detail = $kitten_transportation_detail[0];
				$from_address = $this->common_model->getaddress($kitten_transportation_detail['pickup_zip']);
				$to_address   = $this->common_model->getaddress($kitten_transportation_detail['dropoff_zip']);
				
				
				
				$from_address_country = (isset($from_address['st_country']) && !empty($from_address['st_country']))?$this->common_function->shortCountry[trim($from_address['st_country'])]:'USA';
				$to_address_country   = (isset($to_address['st_country']) && !empty($to_address['st_country']))?$this->common_function->shortCountry[trim($to_address['st_country'])]:'USA';
			
				$origin =  ($kitten_transportation_detail['pickup_city'] ? $kitten_transportation_detail['pickup_city'] . "," : "") . ($kitten_transportation_detail['pickup_state'] ? $kitten_transportation_detail['pickup_state'] : "") . ($kitten_transportation_detail['pickup_zip'] ? "," . $kitten_transportation_detail['pickup_zip'] : "");
                $destinations =  ($kitten_transportation_detail['dropoff_city'] ? $kitten_transportation_detail['dropoff_city'] . "," : "") . ($kitten_transportation_detail['dropoff_state'] ? $kitten_transportation_detail['dropoff_state'] : "") . ($kitten_transportation_detail['dropoff_zip'] ? "," . $kitten_transportation_detail['dropoff_zip'] : "");
                $routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
				//$transport_date = $this->input->post('transportdate')?$this->input->post('transportdate'):date("m/d/Y");
				//$latest_trans_date = $this->input->post('to_transportdate')?$this->input->post('to_transportdate'):date("m/d/Y");
				if($this->input->post('transportdate'))
				{	
					if($this->input->post('transportdate_year'))
						$transport_date = $this->input->post('transportdate').' '.$this->input->post('transportdate_year');
					else 
						$transport_date = $this->input->post('transportdate');
				} else {
					$transport_date = date("m/d/Y");	
				}
				
				if($this->input->post('to_transportdate'))
				{	
					if($this->input->post('to_transportdate_year'))
						$latest_trans_date = $this->input->post('to_transportdate').' '.$this->input->post('to_transportdate_year');
					else 
						$latest_trans_date = $this->input->post('to_transportdate');
				} else {
					$latest_trans_date = date("m/d/Y");	
				}
				
				//$latest_trans_date = $this->input->post('to_transportdate')?$this->input->post('to_transportdate'):date("m/d/Y");
				$datepicker1 = date("Y-m-d",strtotime($transport_date));
				$latest_datepicker = date("Y-m-d",strtotime($latest_trans_date));
				$timepicker1 = date("H:i:s",strtotime($this->input->post('timepicker1')));
				$required_time_second = $routes_miles['duration_value'];
				//$time_per_sec = strtotime($this->input->post('timepicker1'))+$routes_miles['duration_value'];
				$time_per_sec = strtotime($this->input->post('timepicker2'))+$routes_miles['duration_value'];
				$latest_pickup_time = date("H:i:s",strtotime($this->input->post('timepicker2')));
				$timepicker2  = date("H:i:s",$time_per_sec);
				
				if(strtotime($latest_pickup_time)>=strtotime($timepicker2))
				{
					$datepicker2 = date("Y-m-d",strtotime($latest_datepicker."+1 day"));	
				} else {
					$datepicker2 = date("Y-m-d",strtotime($latest_trans_date)); 
				}
				
				//is round trip
				$round = $this->input->post('is_round');
				if(isset($round) && !empty($round)){
					$is_round = 1;
				}else{
					$is_round = 0;
				}
				$mins = $this->input->post('mins');
				if(isset($mins) && !empty($mins)) {
					$in_mins = $mins;
				}else{
					$in_mins ='';
				}
				
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($kitten_transportation_detail['st_ride_nickname']),
											//"st_from_street"	=> $data['org_trasport']['pick_street'],
											"st_from_city"		=> trim($kitten_transportation_detail['pickup_city']),
											"st_from_state"		=> trim($kitten_transportation_detail['pickup_state']),
											"st_from_zip"		=> trim($kitten_transportation_detail['pickup_zip']),
											"st_from_country"	=> trim($from_address_country),
											//"st_to_street"		=> $data['org_trasport']['drop_street'], 
											"st_to_city"		=> trim($kitten_transportation_detail['dropoff_city']),  
											"st_to_state"		=> trim($kitten_transportation_detail['dropoff_state']), 
											"st_to_zip"			=> trim($kitten_transportation_detail['dropoff_zip']),  
											"st_to_country"		=> trim($to_address_country),
											//"st_from_info"		=> $data['org_trasport']['pick_info'],
											"dt_pickup_date"	=> date("Y-m-d", strtotime($transport_date)),
											"dt_target"			=> date("Y-m-d", strtotime($datepicker2)),
											//"st_to_info"		=> $data['org_trasport']['drop_info'],
											"st_trans_type"			=> "R",
											"in_tot_distance"		=> $routes_miles['distance'],
											//"in_created_by"			=> $this->session->userdata('userid'),
											//"dt_created"			=> date("Y-m-d H:i;s"),
											"in_status"				=> $this->input->post('transport_status')?$this->input->post('transport_status'):'4',
											"in_deleted"			=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 		=>  0,
											  "st_add_comments"	    => $this->input->post('additional-comments-text'),
												  'stRecNm'         => trim($kitten_transportation_detail['receiving_contact_name']),
												'stRecEmail'        => trim($kitten_transportation_detail['receiving_email_address']),
												  'stRphone'        => trim($kitten_transportation_detail['receiving_phone_number']),
												  'stR501c3'        => 'N',
												  'stS501c3'        => 'N',
											   'dt_modified'        => date('Y-m-d H:i:s'),
												  'stSendNm'	    => trim($kitten_transportation_detail['sending_contact_name']),
											   'stSendEmail'        => trim($kitten_transportation_detail['sending_email_address']),
												  'stSphone'        => trim($kitten_transportation_detail['sending_phone_number']),
									   'inSendOrgRunsheet'		=>  1,
									   'inRecOrgRunsheet'		=>  1,
											 'in_ride_id'		=>  $in_ride_id,			
										 'in_sent_sms'		=> 1,
											'in_round' 		=> $is_round,
											       'in_mins'		=> $in_mins,
											  'in_quick_add'		=> $quick_addition,
									  'in_frm_ride_location'  		=> $in_frm_ride_id,
									   'in_to_ride_location'		=> $in_to_ride_id,
										  'st_latest_pickup'		=> $this->input->post('timepicker2'),
										    'dt_latest_date'		=> $latest_datepicker,
										 'in_sms_notification'		=> $this->input->post('sms_notify')? 1 : 0,
												'in_fb_share'		=> $this->input->post('fb_publish')? 1 : 0,	

											);	
				if($this->input->post('passenger_type')=='1')
				{
					$transport_details['no_of_kitten'] = $this->input->post('no_of_kitten');
				} else {
					$transport_details['no_of_kitten'] = '';
				}
				
				$transport_status = $transport_details['in_status'];							
				$this->orgtrasnportation_model->update_transport_details($transport_details);
				
				if($this->session->userdata('uploaded_rider_image'))
				{
					$upload_image = $this->session->userdata('uploaded_rider_image');
					$transport_doc = explode(" ",$upload_image);
			
					$this->session->unset_userdata('uploaded_rider_image');
					
					
						for ($a = 0; $a < count($transport_doc); $a++) {
						$file_details = array();
						if ($transport_doc[$a] != '' && file_exists($this->config->item('upload').'trasnportation/'.$transport_doc[$a])) {
							$file_details = array("in_transportation_id" => $this->session->userdata('transport_id'),
							"st_file_name" => $transport_doc[$a],
							"dt_created" => date("Y-m-d H:i:s"),
							"in_deleted" => "0"
						);
						$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);
						}
					}	
				
			
				} 
				
				if($this->input->post('leg_id') && $this->input->post('leg_id')!='')
				{
				
				$starting_date = $datepicker1.' '.$timepicker1;
				$ending_date = $datepicker2.' '.$timepicker2;	
				
				$pickup_array = array( "st_leg_type" => "P",
										"st_street"   => $kitten_transportation_detail['pickup_street'],
                                        "st_city"     => $kitten_transportation_detail['pickup_city'],
                                        "st_state" 	  => $kitten_transportation_detail['pickup_state'],
										"st_zip" 	  => $kitten_transportation_detail['pickup_zip'],
										"st_country" 	=> trim($from_address_country),
										"dt_start_time" => date('Y-m-d H:i:s', strtotime($starting_date)),
										"st_timezone" => $from_address['st_time_zone'],
										"in_deleted"  => "0"
									);
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            //$this->orgtrasnportation_model->add_legs_details($pickup_array);
							$this->orgtrasnportation_model->update_leg_info($pickup_array, $this->input->post('leg_id'), "P");
							
							
                            $dropoff_array = array("st_leg_type" => "D",
													"st_street"  => $kitten_transportation_detail['dropoff_street'],
													"st_city"    => $kitten_transportation_detail['dropoff_city'],
													"st_state" 	 => $kitten_transportation_detail['dropoff_state'],
													"st_zip" 	 => $kitten_transportation_detail['dropoff_zip'],
													"st_country" => trim($to_address_country),
													"dt_start_time" => date('Y-m-d H:i:s', strtotime($ending_date)),
													"st_timezone" => $to_address['st_time_zone'],
													"in_deleted" => "0"
													);
						
							
													
                           // $this->orgtrasnportation_model->add_legs_details($dropoff_array);
							$this->orgtrasnportation_model->update_leg_info($dropoff_array, $this->input->post('leg_id'), "D");
							
							if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
							{
									$route_details = array("st_legs_details"	=> $routes_miles['route_path'],
															"fl_distance"		=> $routes_miles['distance'],
															"in_deleted"		=> "0"
														   );
														   
									$this->orgtrasnportation_model->update_legs_path($route_details, $this->input->post('leg_id'));					   
								//$this->common_model->insert_data("tbl_routes",$route_details);
							}
				}			
				if($this->input->post('passenger_type')=='2')
				{	
					for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_id     = 'animal-id-'.$i;
					$animal_tranport_id = 'animal-trasnport-id-'.$i;
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-weight-'.$i;
					$transport_animal = array();
					
					$uploaded_photo1 = 'uploaded_photo1-'.$i;
					$uploaded_photo2 = 'uploaded_photo2-'.$i;
					$uploaded_photo3 = 'uploaded_photo3-'.$i;
					$uploaded_photo4 = 'uploaded_photo4-'.$i;
					
					$existing_photo1 = 'existing_photo1-'.$i;
					$existing_photo2 = 'existing_photo2-'.$i;
					$existing_photo3 = 'existing_photo3-'.$i;
					$existing_photo4 = 'existing_photo4-'.$i;
					
					$photos = array('photo1' => '',
									'photo2' => '',
									'photo3' => '',
									'photo4' => ''
									);
			
					$xaxis = '';
					$yaxis = '';
					$height = '';
					$width = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))	
						$acvi = $this->input->post($animal_cvi);
					else 
						$acvi = 'N';
				
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					
					$aanimalid = '';
					if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
						$aanimalid = $this->input->post($animal_id);
					else
						$aanimalid = '';
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$animal_transportation_id = '';
					if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!=0)
						$animal_transportation_id = $this->input->post($animal_tranport_id);
					else
						$animal_transportation_id = '';
					
					
					if($this->input->post($uploaded_photo1) != '' && ($this->input->post($existing_photo1) ==0 || $this->input->post($existing_photo1) =='') ) {
						$photos['photo1'] = $this->input->post($uploaded_photo1);//$_FILES['photo1']['name'];
						$img_name_array = explode('.', $photos['photo1']);
						$img_extension = end($img_name_array);
						$image_name = current(explode('.', $photos['photo1'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo1'] =  $new_image_name;
					}
				
				}
				
				if($this->input->post($uploaded_photo2) != '' && ($this->input->post($existing_photo2) ==0 || $this->input->post($existing_photo2) =='')) {
					$photos['photo2'] = $this->input->post($uploaded_photo2);//$_FILES['photo2']['name'];
					$img_name_array = explode('.', $photos['photo2']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo2'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo2'] =  $new_image_name;
					}
				}
			
				if($this->input->post($uploaded_photo3) != '' && ($this->input->post($existing_photo3) ==0 || $this->input->post($existing_photo3)=='')) {
					$photos['photo3'] = $this->input->post($uploaded_photo3);//$_FILES['photo3']['name'];
					$img_name_array = explode('.', $photos['photo3']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo3'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo3'] =  $new_image_name;
					}	
				}
			
				if($this->input->post($uploaded_photo4) != '' && ($this->input->post($existing_photo4) ==0 || $this->input->post($existing_photo4)=='') ) {
					$photos['photo4'] = $this->input->post($uploaded_photo4);//$_FILES['photo4']['name'];
					$img_name_array = explode('.', $photos['photo4']);
					$img_extension = end($img_name_array);
					$image_name = current(explode('.', $photos['photo4'])); 
				 
					if($img_extension == "JPE" || $img_extension == "jpe")
					{
						$new_image_name = $image_name.'.jpg';
						$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
						imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
						$photos['photo4'] =  $new_image_name;
					}
				}
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$_POST[$animal_name],
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $org_details['st_city'],
												     'st_state'				=>	$org_details['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													 
													);
				if($this->input->post($existing_photo1) !='0' || $this->input->post($existing_photo2)!='0' || 
				  $this->input->post($existing_photo3)!='0' || $this->input->post($existing_photo4)!='0' )
				  {	
					$profile_pic = '0';
				  } else {
					  $profile_pic = '';
				  }		
				$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'						
							);	
												
				foreach($photos as $key => $row) {	
				$config = array();	
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1-'.$i);
						$xaxis = $this->input->post('x1-'.$i);
						$yaxis = $this->input->post('y1-'.$i);
						$height = $this->input->post('h1-'.$i);
						$width = $this->input->post('w1-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2-'.$i);
						$xaxis = $this->input->post('x2-'.$i);
						$yaxis = $this->input->post('y2-'.$i);
						$height = $this->input->post('h2-'.$i);
						$width = $this->input->post('w2-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3-'.$i);
						$xaxis = $this->input->post('x3-'.$i);
						$yaxis = $this->input->post('y3-'.$i);
						$height = $this->input->post('h3-'.$i);
						$width = $this->input->post('w3-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4-'.$i);
						$xaxis = $this->input->post('x4-'.$i);
						$yaxis = $this->input->post('y4-'.$i);
						$height = $this->input->post('h4-'.$i);
						$width = $this->input->post('w4-'.$i);
						if($profile_pic == '' && $profile_pic != '1')
							$profile_pic = 1;
						else 
							$profile_pic = 0;
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					/*if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}*/
					
					//echo $_POST['set_default'];die;
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
											
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>  '',
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	date("Y-m-d H:i:s")
													);
													
									array_push($transport_animal,$data['animal_images']);	
						}
				}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id	= $this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $aanimalid;	
											$transport_animal[$key]	= $data;
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }		
								} else {	
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									 if(count($transport_animal)>0)
									 {	 
										foreach($transport_animal as $key=>$data)
										{
											$data['in_animal_id'] = $animal_id;
											$transport_animal[$key]	= $data;	
										}
											$this->orgtrasnportation_model->insert_animal_transport($transport_animal);
									 }	
								}		
							}
 					}
				} 		
				} else {
					for($i=0;$i<=$this->input->post('records'); $i++)
					{
						$animal_tranport_id = 'animal-id-'.$i;
						if($this->input->post($animal_tranport_id) && $this->input->post($animal_tranport_id)!='' && $this->input->post($animal_tranport_id)!='0' )
						{		
							$this->orgtrasnportation_model->update_animal_transport_status($this->session->userdata('transport_id'),$this->input->post($animal_tranport_id));
						}
					}
				}
			
				
			$data['Success_Msg_reg'] = 'Transport Created successfully';
			if($transport_status=='4')
			{	
							redirect(base_url().'org_transportation/draft_transport');	
			} else {		
						$this->cron_model->update_trans_coods($this->session->userdata('transport_id'));
						$this->cron_model->get_near_by_transportride_users($this->session->userdata('transport_id'));
						redirect(base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'));
			}
			} else {
				if(!$this->input->post('favorite_ride'))
					$data['Err_Msg_reg'] = 'There are no Rides so transport cannot be created';
				else 
					$data['Err_Msg_reg'] = 'Transport not created';
			}	
		} else {
			
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
            if (empty($transport_details)) {
                redirect($this->config->item('base_url'));
            }
            //echo "<pre>";print_r($transport_details);die;
            if ($transport_details['0']['in_status'] == '3' || $transport_details['0']['in_status'] == '2') {
                $this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
                redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
            }

            $data['org_trasport'] = array();
			$fav_list = 2;
			$data['org_trasport']['in_ride_id'] = $transport_details['0']['in_ride_id'];
            $data['latest_pickup'] 				 =  $transport_details['0']['st_latest_pickup'];
			$data['org_trasport']['in_quick_add'] = $transport_details['0']['in_quick_add'];
			$data['org_trasport']['in_need_trans_monitor'] = $transport_details['0']['in_need_trans_monitor'];
			$data['org_trasport']['in_allow_pics'] = $transport_details['0']['in_allow_pics'];
			$data['org_trasport']['stAniStory'] = $transport_details['0']['stAniStory'];
            $data['org_trasport']['pick_zipcode'] = isset($transport_details['0']['st_from_zip']) ? $transport_details['0']['st_from_zip'] : '';
            $data['org_trasport']['pick_city'] = isset($transport_details['0']['st_from_city']) ? $transport_details['0']['st_from_city'] : '';
            $data['org_trasport']['pick_state'] = isset($transport_details['0']['st_from_state']) ? $transport_details['0']['st_from_state'] : '';
            $data['org_trasport']['pick_country'] = isset($transport_details['0']['st_from_country']) ? $transport_details['0']['st_from_country'] : '';
			$data['org_trasport']['in_status'] = isset($transport_details['0']['in_status']) ? $transport_details['0']['in_status'] : '';
            $data['org_trasport']['pickupselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_pickup_date']));
			$data['org_trasport']['st_trans_type'] = date("m/d/Y", strtotime($transport_details['0']['st_trans_type']));
            $data['org_trasport']['pick_zip'] = $data['org_trasport']['pick_zipcode'] . ', ';
			$data['in_round'] = $transport_details['0']['in_round'];
			$data['in_mins']  = $transport_details['0']['in_mins'];
			$data['org_trasport']['sms_notify'] = isset($transport_details['0']['in_sms_notification']) ? $transport_details['0']['in_sms_notification'] : '0';	
            $data['org_trasport']['fb_share'] 	= isset($transport_details['0']['in_fb_share']) ? $transport_details['0']['in_fb_share'] : '0';
			if ($data['org_trasport']['pick_city'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_city'] . ', ';
            }
            if ($data['org_trasport']['pick_state'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_state'] . ', ';
            }
            if ($data['org_trasport']['pick_country'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_country'];
            }


            $data['org_trasport']['drop_zipcode'] = isset($transport_details['0']['st_to_zip']) ? $transport_details['0']['st_to_zip'] : '';
            $data['org_trasport']['drop_city'] = isset($transport_details['0']['st_to_city']) ? $transport_details['0']['st_to_city'] : '';
            $data['org_trasport']['drop_state'] = isset($transport_details['0']['st_to_state']) ? $transport_details['0']['st_to_state'] : '';
            $data['org_trasport']['drop_country'] = isset($transport_details['0']['st_to_country']) ? $transport_details['0']['st_to_country'] : '';
			
			$data['org_trasport']['trans_unique_name'] = isset($transport_details['0']['st_trans_name']) ? $transport_details['0']['st_trans_name'] : '';

            //$data['org_trasport']['dateselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_target']));
			
			$data['org_trasport']['dateselect'] = (isset($transport_details['0']['dt_latest_date']) && $transport_details['0']['dt_latest_date']!='' && $transport_details['0']['dt_latest_date']!='0000-00-00' && $transport_details['0']['dt_latest_date']!='1969-12-31')?date("m/d/Y", strtotime($transport_details['0']['dt_latest_date'])):date("m/d/Y", strtotime($transport_details['0']['dt_target']));

            $data['org_trasport']['drop_zip'] = $data['org_trasport']['drop_zipcode'] . ', ';

            if ($data['org_trasport']['drop_city'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_city'] . ', ';
            }
            if ($data['org_trasport']['drop_state'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_state'] . ', ';
            }
            if ($data['org_trasport']['drop_country'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_country'];
            }
			
			if($transport_details['0']['in_quick_add']==1)
			{	
				$data['leg_instruction'] = $leg_details[$leg_id]['leg_instruction'];
			}	
			
			if($transport_details['0']['in_quick_add']==1 && $transport_details['0']['in_ride_id']!='0' && $transport_details['0']['in_ride_id']!='')
			{
				$fav_list = 1;
			}

			if($transport_details['0']['in_quick_add']==1 && ($transport_details['0']['in_ride_id']=='0' || $transport_details['0']['in_ride_id']==''))
			{
				$fav_list = 0;
			}
				
			$data['fav_list'] = $fav_list;
			if($transport_details['0']['in_frm_ride_location']!='' && $transport_details['0']['in_quick_add']==1)
			{	
				$from_location_data = $this->location_favorite_model->get_by_location_id($transport_details['0']['in_frm_ride_location']);
				$data['from_location_data'] = $from_location_data;
				$from_loc ='';
				$from_loc .= (isset($from_location_data->st_loc_street) && $from_location_data->st_loc_street!='')?$from_location_data->st_loc_street.', ':'';
				$from_loc .= (isset($from_location_data->st_loc_zip) && $from_location_data->st_loc_zip!='')?$from_location_data->st_loc_zip.', ':'';
				$from_loc .= (isset($from_location_data->st_loc_city) && $from_location_data->st_loc_city!='')?$from_location_data->st_loc_city.', ':'';
				$from_loc .= (isset($from_location_data->st_loc_state) && $from_location_data->st_loc_state!='')?$from_location_data->st_loc_state.', ':'';
				$from_loc .= (isset($transport_details['0']['st_from_country']) && $transport_details['0']['st_from_country']!='')?$transport_details['0']['st_from_country']:'';
				$data['from_loc'] = $from_loc;
			}

			if($transport_details['0']['in_to_ride_location']!='' && $transport_details['0']['in_quick_add']==1)
			{	
				$to_location_data = $this->location_favorite_model->get_by_location_id($transport_details['0']['in_to_ride_location']);
				$data['to_location_data'] = $to_location_data;
				$to_loc ='';
				$to_loc .= (isset($to_location_data->st_loc_street) && $to_location_data->st_loc_street!='')?$to_location_data->st_loc_street.', ':'';
				$to_loc .= (isset($to_location_data->st_loc_zip) && $to_location_data->st_loc_zip!='')?$to_location_data->st_loc_zip.', ':'';
				$to_loc .= (isset($to_location_data->st_loc_city) && $to_location_data->st_loc_city!='')?$to_location_data->st_loc_city.', ':'';
				$to_loc .= (isset($to_location_data->st_loc_state) && $to_location_data->st_loc_state!='')?$to_location_data->st_loc_state.', ':'';
				$to_loc .= (isset($transport_details['0']['st_to_country']) && $transport_details['0']['st_to_country']!='')?$transport_details['0']['st_to_country']:'';
				$data['to_loc'] = $to_loc;
			}
			
			//$data['org_trasport']['stRecOrgNm'] = isset($transport_details['0']['stRecOrgNm']) ? $transport_details['0']['stRecOrgNm'] : '';
			//$data['org_trasport']['stRecNm'] = isset($transport_details['0']['stRecNm']) ? $transport_details['0']['stRecNm'] : '';
			//$data['org_trasport']['stRecEmail'] = isset($transport_details['0']['stRecEmail']) ? $transport_details['0']['stRecEmail'] : '';
			//$data['org_trasport']['stR501c3'] = isset($transport_details['0']['stR501c3']) ? $transport_details['0']['stR501c3'] : '';
            //$data['org_trasport']['stRphone'] = isset($transport_details['0']['stRphone']) ? $transport_details['0']['stRphone'] : '';
			//$data['org_trasport']['stRphone'] = isset($transport_details['0']['stRphone']) ?  preg_replace('/\D/', '',$transport_details['0']['stRphone']): '';
			
			//$data['org_trasport']['stSendOrgNm'] = isset($transport_details['0']['stSendOrgNm']) ? $transport_details['0']['stSendOrgNm'] : '';
			//$data['org_trasport']['stSendNm'] = isset($transport_details['0']['stSendNm']) ? $transport_details['0']['stSendNm'] : '';
			//$data['org_trasport']['stSendEmail'] = isset($transport_details['0']['stSendEmail']) ? $transport_details['0']['stSendEmail'] : '';
			//$data['org_trasport']['stS501c3'] = isset($transport_details['0']['stS501c3']) ? $transport_details['0']['stS501c3'] : '';
            //$data['org_trasport']['stSphone'] = isset($transport_details['0']['stSphone']) ? $transport_details['0']['stSphone'] : '';
			//$data['org_trasport']['stSphone'] = isset($transport_details['0']['stSphone']) ? preg_replace('/\D/', '',$transport_details['0']['stSphone']) : '';
			$data['org_trasport']['st_trans_type'] = isset($transport_details['0']['st_trans_type']) ? $transport_details['0']['st_trans_type'] : '';
			//$data['org_trasport']['inSendOrgRunsheet'] = isset($transport_details['0']['inSendOrgRunsheet']) ? $transport_details['0']['inSendOrgRunsheet'] : '1';
            //$data['org_trasport']['inRecOrgRunsheet'] = isset($transport_details['0']['inRecOrgRunsheet']) ? $transport_details['0']['inRecOrgRunsheet'] : '1';
			$data['org_trasport']['enable_routing_status'] = isset($transport_details['0']['enable_routing_status']) ? $transport_details['0']['enable_routing_status'] : '';
			$data['org_trasport']['owner_routing_status'] = (isset($transport_details['0']['accTcid']) && !empty($transport_details['0']['accTcid']) && $transport_details['0']['accTcid']==$this->session->userdata('userid') && $transport_details['0']['accTcid']!=0) ? 1 : 0;
			$data['org_trasport']['no_of_kitten']		 = 	 isset($transport_details['0']['no_of_kitten']) ? $transport_details['0']['no_of_kitten'] : '';
			$data['org_trasport']['st_add_comments']		 = 	 isset($transport_details['0']['st_add_comments']) ? $transport_details['0']['st_add_comments'] : '';
			$data['org_trasport']['in_trans_coods_id']		 = 	 isset($transport_details['0']['in_trans_coods_id']) ? $transport_details['0']['in_trans_coods_id'] : '';	
			/*if($data['org_trasport']['stSendOrgNm'] == '')
			{
				$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id')); 
				$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
				if(isset($org_details['st_org_name']) && !empty($org_details['st_org_name'])) {
					$data['org_trasport']['stSendOrgNm'] = $org_details['st_org_name'];
				} else {
					$data['org_trasport']['stSendOrgNm'] = '';
				}
				
				 if(isset($user_details[0]['st_display_name']) && !empty($user_details[0]['st_display_name'])) {
					$data['org_trasport']['stSendNm'] = $user_details[0]['st_display_name']." ".$user_details[0]['st_last_name'];
				} else {
					$data['org_trasport']['stSendNm'] = '';
				}
				
				if(isset($user_details[0]['st_email']) && !empty($user_details[0]['st_email'])) {
					$data['org_trasport']['stSendEmail'] = $user_details[0]['st_email'];
				} else {
					$data['org_trasport']['stSendEmail'] = '';
				}
				
				
				if(isset($user_details[0]['st_primary_phone']) && !empty($user_details[0]['st_primary_phone'])) {
					$data['org_trasport']['stSphone'] = $user_details[0]['st_primary_phone'];
					$data['org_trasport']['stSphone'] = preg_replace('/\D/', '',$user_details[0]['st_primary_phone']);
				} else {
					$data['org_trasport']['stSphone'] = '';
				}
				
				if(isset($org_details['st_has_501c3']) && !empty($org_details['st_has_501c3'])) {
					$data['org_trasport']['stS501c3'] = $org_details['st_has_501c3'];
				} else {
					$data['org_trasport']['stS501c3'] = '';
				}
			}*/
			
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			$data['transport_files'] = $transport_files;
			
		}	
		
		//print_r($data);
		$this->load->view('transportation/edit_new_ride',$data);
	}
	
	public function add_ride(){
		
		 
		$data = array();
		$data['Err_Msg'] = '';
		$in_user_id = $this->session->userdata('userid');
		$in_org_id = $this->session->userdata('org_id');
		$this->load->model('location_favorite_model');
		

		$form_field	=	array(
							'st_ride_nickname'	=>'',
							'in_from_id' 		=>'',
							'in_to_id'			=>'',
							'st_instruction'	=>'',
							'in_user_id' 		=>$in_user_id,
							'in_org_id' 		=>$in_org_id

					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['ride'][$key] = $value;	
		}					
		if($this->input->post('action')=='submit_ride')
		{
			$ride_id = $this->input->post('in_ride_id');
			foreach ($form_field as $key => $value)
			{	
				$data['ride'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
								
			$error_message = '';
			
			$this->form_validation->set_rules('st_ride_nickname', 'Ride Nickname', 'trim|required');
			$this->form_validation->set_rules('in_from_id', 'From Locataion', 'required');
			$this->form_validation->set_rules('in_to_id', 'To Location', 'required');
			$this->form_validation->set_rules('st_instruction', 'Specific Instruction', 'trim|required');
			
			
			$error = '';
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
				$error_msg = validation_errors()."<p>".$error_message."</p>";
				$this->session->set_flashdata('Err_Msg_reg',$error_msg);
				redirect(base_url().'publish-new-ride');	
			}
			else
			{
				
				$ride_details = array(
					'st_ride_nickname' 	=> 	trim($data['ride']['st_ride_nickname']),
					'in_from_id' 		=> 	trim($data['ride']['in_from_id']),
					'in_to_id' 			=> 	trim($data['ride']['in_to_id']),
					'st_instruction' 	=> 	trim($data['ride']['st_instruction']),
					'in_user_id' 		=>	$in_user_id,
					'in_org_id' 		=>	$in_org_id,
					"in_deleted"		=> "0"
					);
				
				
				
					$ride_details['dt_created']	= date("Y-m-d H:i:s");
					$ride_id = $this->location_favorite_model->add_ride($ride_details);
					
				//$data['Success_Msg_reg'] = 'Transport Created successfully';
				$this->session->set_flashdata('Success_Msg_reg', 'Ride details created successfully.');
				redirect($_SERVER['HTTP_REFERER']);
				//redirect(base_url().'publish-new-ride');
				
			}
		} else {
			redirect(base_url().'publish-new-ride');
		}
	}
	
	function publish_new_route()
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		$data['organizationid']	=	$this->session->userdata('org_id');

		$this->load->view('publish-new-route',$data);	
	}
	
	function publish_route()
	{
		if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        }
		 
		$data = array(); 
		$crates_array = array();
		$this->session->unset_userdata('transport_step');
		$this->session->unset_userdata('transport_id');
		
        if (!$this->session->userdata('org_id')) {
			if($_COOKIE['dev_organization_id'])
			{
				$org_id = $_COOKIE['dev_organization_id'];
				$this->session->set_userdata('org_id',$org_id);
			} else 	
				redirect($this->config->item('base_url'));
			//redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		
        $make_array_user = array();
        $check_per_flag = '';
		$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id'));
		
		$data['reservation_cost'] =  unserialize($org_details['st_reservation_cost']);
		
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['profile_details'] = $user_details[0];
		$data['org_details'] = $org_details;		
		
		
        if ($owner_id != $this->session->userdata('userid')) 
		{
			
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if ($owner_id != $this->session->userdata('userid')) 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }
		
		$data['transportation_list'] = $this->orgtrasnportation_model->get_previous_route_transportation();
		
		
		
			$form_field	=	array('pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pick_state'		=> "",
							  'pick_zip'		=> "",
							  'pick_info' 		=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_zip"		=> "",
							  "drop_info"		=> "",
  							  "pickupselect"	=> "",
							  "dateselect"		=> "",
							  "action"			=> "",
							  "trans_unique_name" => "",
							  "sms_notify"=>"",
							  "allow_pics"=>"",
							  "in_approval"=>"",							  
							  "in_status"=>"",
							  "qtyxs"=>"",
							  "qtyxs_cst_public"=>"",
							  "qtyxs_cst_private"=>"",
							  "qtys"=>"",
							  "qtys_cst_public"=>"",
							  "qtys_cst_private"=>"",
							  "qtym"=>"",
							  "qtym_cst_public"=>"",
							  "qtym_cst_private"=>"",
							  "qtyl"=>"",
							  "qtyl_cst_public"=>"",
							  "qtyl_cst_private"=>"",
							  "qtyxl"=>"",
							  "qtyxl_cst_public"=>"",
							  "qtyxl_cst_private"=>"",
							  "transportation_id"=>"",
							  "fb_publish"=>"",
							  "transport_type_notify"=>"",
							  "approvedcoalitions"=>"",
							  "approvedpartners"=>"",
							  "cnt_org_participate"=>"",
							  "manage_vehicle"=>"",
							  "st_sendOrg" => "",
							  "st_sendStreet"=>"",
							  "st_receiveOrg"=>"",
							  "st_receiveStreet" =>"",
							  "in_public_reservation" => 0,
							  "in_multiple_route" => 0,
							 
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}
		
		if($this->input->post('action'))
		{	
			foreach ($form_field as $key => $value)
			{	
				$data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$pickup_zipcode_data = explode(',',$data['org_trasport']['pick_zip']);
			//print_r($pickup_zipcode_data);
			$data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
			$data['org_trasport']['pick_city'] = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
			$data['org_trasport']['pick_state'] = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
			$data['org_trasport']['pick_country'] = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
			$dropoff_zipcode_data = explode(',',$data['org_trasport']['drop_zip']);
			//print_r($dropoff_zipcode_data);
			$data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
			$data['org_trasport']['drop_city'] = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
			$data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
			$data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
			
			
			$error_message = '';
			$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
			$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
			$this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
			$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
			$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
			$this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
			$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');		
			
			$error = '';	
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";
					$this->load->view('transportation/publish-route',$data);	
			}
			else
			{
				$private_notify_type = '';
					
				if(isset($data['org_trasport']['approvedcoalitions']) && $data['org_trasport']['approvedcoalitions'] != '')
				{
					$private_notify_type = 'coalitions';	
				} else if (isset($data['org_trasport']['approvedpartners']) && $data['org_trasport']['approvedpartners'] != '')
				{
					$private_notify_type = 'partners';
				}		
				
				$total_miles = '';				
				$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].", ":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].", ":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?", ".$data['org_trasport']['pick_zip']:"");	
				$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].", ":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].", ":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?", ".$data['org_trasport']['drop_zip']:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}
				
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($data['org_trasport']['trans_unique_name']),
											"st_from_city"		=> trim($data['org_trasport']['pick_city']),
											"st_from_state"		=> trim($data['org_trasport']['pick_state']),
											"st_from_zip"		=> trim($data['org_trasport']['pick_zip']),
											"st_from_country"	=> trim($data['org_trasport']['pick_country']), 
											"st_to_city"		=> trim($data['org_trasport']['drop_city']),  
											"st_to_state"		=> trim($data['org_trasport']['drop_state']), 
											"st_to_zip"			=> trim($data['org_trasport']['drop_zip']),  
											"st_to_country"		=> trim($data['org_trasport']['drop_country']),
											//"dt_pickup_date"	=> date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
											//"dt_target"			=> date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
											"dt_pickup_date"	=> $start_date,
											"dt_target"			=> $end_date,
											"st_trans_type"		=> "RO",
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"dt_created"		=> date("Y-m-d H:i;s"),
											'dt_modified'       => date('Y-m-d H:i:s'),
											"in_status"			=> trim($data['org_trasport']['in_status']),/*Save as draft*/
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 			=> isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
											"in_approval"				=> isset($data['org_trasport']['in_approval']) && $data['org_trasport']['in_approval'] != '' ? 1 : 0,
											"in_sms_notification"		=> isset($data['org_trasport']['sms_notify']) && $data['org_trasport']['sms_notify'] != '' ? 1 : 0,
											'in_fb_share'				=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,
											'in_route_notify_type'	 	=> isset($data['org_trasport']['transport_type_notify']) && $data['org_trasport']['transport_type_notify'] != '' ? $data['org_trasport']['transport_type_notify'] : 0,
											'st_private_type_notify' 	=> $private_notify_type,
											'in_transport_crate_vehicle' => isset($data['org_trasport']['manage_vehicle']) && $data['org_trasport']['manage_vehicle'] != '' ? $data['org_trasport']['manage_vehicle'] :'',
											'st_sendOrg' 				=> $this->input->post('st_sendOrg'),
											'st_sendStreet'				=>$data['org_trasport']['st_sendStreet'],
											'st_receiveOrg'				=>$this->input->post('st_receiveOrg'),
											'st_receiveStreet' 			=>$data['org_trasport']['st_receiveStreet'],
											'in_public_reservation'		=>$data['org_trasport']['in_public_reservation'],
											'in_multiple_route'				=>$data['org_trasport']['in_multiple_route']
											);	
										
				if(isset($data['org_trasport']['transportation_id']) && $data['org_trasport']['transportation_id']!='' && $data['org_trasport']['transportation_id']!='0' )
				{	
					$this->session->set_userdata('transport_id',$data['org_trasport']['transportation_id']);
					$transport_details["dt_modified"] = date('Y-m-d H:i:s');
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_details["dt_created"] = date("Y-m-d H:i;s");
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}
				
				$participate_org_id = $data['org_trasport']['cnt_org_participate'];
				if($participate_org_id>0)
				{
							//$participants_org_array = array();
					/*for($i=0;$i<$participate_org_id;$i++)
					{
						$cnt = $i+1;
						$part_id = 'participate_org_id_'.$cnt;
						$org_id = $this->input->post($part_id);
						$invi_type = 'invitation_type_'.$cnt;
						$st_invitation_type = $this->input->post($invi_type);
						if($org_id!='' && $st_invitation_type!='')
						{	
							$participants_org_array = array('in_transportation_id' => $this->session->userdata('transport_id'),
															  'in_organization_id' => $org_id,
															  'st_invitation_type' => $st_invitation_type,
																	  'dt_created' => date('Y-m-d H:i:s'),
														             'dt_modified' => date('Y-m-d H:i:s'),
																	  'in_deleted' => 0	
															);
														  
							$this->db->insert('tbl_org_transport_participate',$participants_org_array);
						}		
					}*/

					for($i=0;$i<$participate_org_id;$i++)
					{
						$cnt = $i+1;
						$part_id = 'participate_org_id_'.$cnt;
						$org_id = $this->input->post($part_id);
						$invi_type = 'invitation_type_'.$cnt;
						$st_invitation_type = $this->input->post($invi_type);
						$in_id = 'participate_in_id_'.$cnt;
						$participate_in_id =  $this->input->post($in_id)?$this->input->post($in_id):'';
						if($org_id!='' && $st_invitation_type!='')
						{	
							if($participate_in_id!='' && $participate_in_id!='0')
							{
								$participants_org_array = array('in_transportation_id'=>$this->session->userdata('transport_id'),
															  'in_organization_id'=>$org_id,
														      'st_invitation_type'=>$st_invitation_type,
														             'dt_modified'=>date('Y-m-d H:i:s'),
														              'in_deleted'=>0	
														    );
								
								$this->db->where('in_id',$participate_in_id);
								$this->db->update('tbl_org_transport_participate',$participants_org_array);
							} else {
								
								$participants_org_array = array('in_transportation_id'=>$this->session->userdata('transport_id'),
																  'in_organization_id'=>$org_id,
														          'st_invitation_type'=>$st_invitation_type,
														                  'dt_created'=>date('Y-m-d H:i:s'),
														                 'dt_modified'=>date('Y-m-d H:i:s'),
														                  'in_deleted'=>0	
																);
														  
								$this->db->insert('tbl_org_transport_participate',$participants_org_array);
								
							}	
						}		
					}	
				}
				
				$transport_crates = $this->orgtrasnportation_model->get_transport_crates($this->session->userdata('transport_id'));
		
				
					$qtyxs = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'XS',
									'in_crate_qty'		 => $this->input->post('qtyxs')?$this->input->post('qtyxs'):'0',
									'in_cost_public'	 => $this->input->post('qtyxs_cst_public'),
									'in_cost_private'    => $this->input->post('qtyxs_cst_private') ,
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
								
						if(count($transport_crates)>0 && isset($transport_crates['xs_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['xs_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyxs);
						} else {
							$qtyxs['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyxs);
						}										
				
				
				
					
						
					$qtys = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'S',
									'in_crate_qty'		 => $this->input->post('qtys')?$this->input->post('qtys'):'0',
									'in_cost_public'	 => $this->input->post('qtys_cst_public'),
									'in_cost_private'    => $this->input->post('qtys_cst_private'),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						
						if(count($transport_crates)>0 && isset($transport_crates['s_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['s_crate_id']);
							$this->db->update('tbl_transport_crates',$qtys);
						} else {
							$qtys['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtys);
						}				
						
						
						
				
						$qtym = array('in_transportation_id' =>$this->session->userdata('transport_id'),
											 'st_crate_type' =>'M',
											  'in_crate_qty' => $this->input->post('qtym')?$this->input->post('qtym'):'0',
											'in_cost_public' => $this->input->post('qtym_cst_public'),
										   'in_cost_private' => $this->input->post('qtym_cst_private'),
											   'dt_modified' => date("Y-m-d H:i;s"),
												'in_deleted' => 0
									 );
								  
						if(count($transport_crates)>0 && isset($transport_crates['m_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['m_crate_id']);
							$this->db->update('tbl_transport_crates',$qtym);
						} else {
							$qtym['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtym);
						}		
				
				
				
						$qtyl = array('in_transportation_id'  => $this->session->userdata('transport_id'),
											'st_crate_type'	  =>'L',
											  'in_crate_qty'  => $this->input->post('qtyl')?$this->input->post('qtyl'):'0',
											'in_cost_public'  => $this->input->post('qtyl_cst_public'),
											'in_cost_private' => $this->input->post('qtyl_cst_private'),
												'dt_modified' => date("Y-m-d H:i;s"),
												 'in_deleted' => 0
 								  );
						
						if(count($transport_crates)>0 && isset($transport_crates['l_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['l_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyl);
						} else {
							$qtyl['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyl);
						}
						
				
				
					
						$qtyxl = array('in_transportation_id'=>$this->session->userdata('transport_id'),
											 'st_crate_type' =>'XL',
											  'in_crate_qty' => $this->input->post('qtyxl')?$this->input->post('qtyxl'):'0',
											'in_cost_public' => $this->input->post('qtyxl_cst_public'),
										   'in_cost_private' => $this->input->post('qtyxl_cst_private'),
											   'dt_modified' => date("Y-m-d H:i;s"),
												'in_deleted' => 0
									  );
								  
						if(count($transport_crates)>0 && isset($transport_crates['xl_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['xl_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyxl);
						} else {
							$qtyl['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyxl);
						}
				
					if(isset($data['org_trasport']['in_multiple_route']) && $data['org_trasport']['in_multiple_route'] != '')
					{
						$this->session->set_userdata('transport_steps',3);
						redirect($this->config->item('base_url')."transport-create-legs");
					} else {

						$this->orgtrasnportation_model->update_transport_details(array('in_completed_steps'=>0));
					
						$from_address = $this->common_model->getaddress($data['org_trasport']['pick_zip']);
						$to_address   = $this->common_model->getaddress($data['org_trasport']['drop_zip']);
					
						$from_address_country = (isset($from_address['st_country']) && !empty($from_address['st_country']))?$this->common_function->shortCountry[trim($from_address['st_country'])]:'USA';
						$to_address_country   = (isset($to_address['st_country']) && !empty($to_address['st_country']))?$this->common_function->shortCountry[trim($to_address['st_country'])]:'USA';

						$legs_array = array("in_transportation_id"    => $this->session->userdata('transport_id'),
												"in_route_type"       => "0",
												"in_multi_user" 	  => '0', 
												    "in_user_num" 	  => '0',
											"st_meeting_location" 	  => '',
												"in_created_by"	      => $this->session->userdata('userid'),
												"in_sort_order" 	  => '1',
													"dt_created" 	  => date("Y-m-d H:i:s"),
													"in_deleted" 	  => "0",
											 "st_to_meeting_location" => "",
											 "st_leg_instruction"     => '',	
											);

						$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
				
				
				
						$pickup_array = array("in_transportation_leg_id"  => $leg_id,
															"st_leg_type" => "P",
														//"st_street"   => $kitten_transportation_detail['pickup_street'],
															"st_city"     => trim($data['org_trasport']['pick_city']),
															"st_state" 	  => trim($data['org_trasport']['pick_state']),
															"st_zip" 	  => trim($data['org_trasport']['pick_zip']),
															"st_country"  => $from_address_country,
													  //"dt_start_time" => date('Y-m-d 00:00:00', strtotime($data['org_trasport']['pickupselect'])),
														  "dt_start_time" => date('Y-m-d 00:00:00', strtotime($start_date)),
															"st_timezone" => $from_address['st_time_zone'],
															"in_deleted"  => "0"
											);
							
							$start_time =  $pickup_array['dt_start_time'];
							$start_time_zone = $pickup_array['st_timezone'];
							
                            $this->orgtrasnportation_model->add_legs_details($pickup_array);
							
							
							
                            $dropoff_array = array("in_transportation_leg_id" => $leg_id,
																"st_leg_type" => "D",
																//"st_street"   => $kitten_transportation_detail['dropoff_street'],
																"st_city"     => trim($data['org_trasport']['drop_city']),
																"st_state" 	  => trim($data['org_trasport']['drop_state']),
																"st_zip" 	  => trim($data['org_trasport']['drop_zip']),
																"st_country " => $to_address_country,
																//"dt_start_time" => date('Y-m-d 23:59:59', strtotime($data['org_trasport']['dateselect'])),
																"dt_start_time" => date('Y-m-d 23:59:59', strtotime($end_date)),
																"st_timezone" => $to_address['st_time_zone'],
																"in_deleted" => "0"
													);
						
							
													
                            $this->orgtrasnportation_model->add_legs_details($dropoff_array);
				
							
							if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
							{
									$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
																"in_transportation_id"	=> $this->session->userdata('transport_id'),
																	   "in_route_type"	=> 0,
																	 "st_legs_details"	=> $routes_miles['route_path'],
																		 "fl_distance"	=> $routes_miles['distance'],
																		  "in_deleted"	=> "0"
														   );
								$this->common_model->insert_data("tbl_routes",$route_details);
							}
							if($data['org_trasport']['in_status']==4)
							{
								redirect($this->config->item('base_url')."org_transportation/draft_route_transport/");
							} else {
							$this->send_receive_mail($this->session->userdata('transport_id'));	
							$transport_legs = $this->orgtrasnportation_model->get_route_cron_legs($this->session->userdata('transport_id'));		
							if(isset($transport_legs) && !empty($transport_legs) && count($transport_legs)>0)
							{
								$data_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
														"in_org_id"=>$this->session->userdata('org_id'),
														"st_transport_legs"=>serialize($transport_legs),
														"dt_created"=>date("Y-m-d H:i:s"));
					
								$insert_id = $this->orgtrasnportation_model->insert_route_legs_details($data_array);
					
							}
					
								redirect($this->config->item('base_url')."org-transportation-scheduled/".$this->session->userdata('transport_id'));
							}	
					}				
				}
		}
		
		$this->load->view('transportation/publish-route',$data);	
	}
	
	function edit_transport_route()
	{
		if (!$this->session->userdata('userid')) {
            $url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $this->session->set_userdata('url_data', $url);
            redirect($this->config->item('base_url'));
        } 

		if (isset($_GET['id'])) {
            $this->session->set_userdata('transport_id', $_GET['id']);
        }
		
		if($this->uri->segment(2))
		{
			$this->session->set_userdata('transport_id',$this->uri->segment(2));
		}		
		
		$crates_array = array();
		$this->session->unset_userdata('transport_step');
		
		
       if (!$this->session->userdata('org_id') || !$this->session->userdata('transport_id')) {
		   
		   if($_COOKIE['dev_organization_id'])
			{
				$org_id = $_COOKIE['dev_organization_id'];
				$this->session->set_userdata('org_id',$org_id);
			} else 	
				redirect($this->config->item('base_url'));
			//redirect($this->config->item('base_url'));
        }

        #================Check User permission start===============#
        $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'), $this->session->userdata('org_id'));
		$data = array();
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['profile_details'] = $user_details[0];
		
        $make_array_user = array();
        $check_per_flag = '';
        if ($owner_id != $this->session->userdata('userid')) 
		{
			
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'), $this->session->userdata('org_id'));
			
            if (!empty($user_permission)) 
			{
				$make_array_user = unserialize($user_permission);
            }
            if ($owner_id != $this->session->userdata('userid')) 
			{
                if (isset($make_array_user['transport']) && in_array('transport_cr', $make_array_user['transport']) == true) {
                    $check_per_flag = '1';
                } else {
                    $check_per_flag = '0';
                    $this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
                    redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
                }
            }
        }
		
		
			$form_field	=	array('pick_street'		=> "",
							  'pick_country'	=> "USA",
							  'pick_city'		=> "",
							  'pick_state'		=> "",
							  'pick_zip'		=> "",
							  'pick_info' 		=> "",
							  "drop_street"		=> "",
							  'drop_country'	=> "USA",
							  "drop_city"		=> "",
							  "drop_state"		=> "",
							  "drop_zip"		=> "",
							  "drop_info"		=> "",
  							  "pickupselect"	=> "",
							  "dateselect"		=> "",
							  "action"			=> "",
							  "trans_unique_name" => "",
							  "sms_notify"=>"",
							  "allow_pics"=>"",
							  "in_approval"=>"",							  
							  "in_status"=>"",
							  "qtyxs"=>"",
							  "qtyxs_cst_public"=>"",
							  "qtyxs_cst_private"=>"",
							  "qtys"=>"",
							  "qtys_cst_public"=>"",
							  "qtys_cst_private"=>"",
							  "qtym"=>"",
							  "qtym_cst_public"=>"",
							  "qtym_cst_private"=>"",
							  "qtyl"=>"",
							  "qtyl_cst_public"=>"",
							  "qtyl_cst_private"=>"",
							  "qtyxl"=>"",
							  "qtyxl_cst_public"=>"",
							  "qtyxl_cst_private"=>"",
							  "fb_publish"=>'',
							  "transport_type_notify"=>"",
							  "approvedcoalitions"=>"",
							  "approvedpartners"=>"",
							  "cnt_org_participate"=>"",
							  "manage_vehicle"=>"",
							  "st_sendOrg" => "",
							  "st_sendStreet"=>"",
							  "st_receiveOrg"=>"",
							  "st_receiveStreet" =>"",
							  "in_public_reservation" => 0,
							  "in_multiple_route" =>0,
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}
		
		if($this->input->post('action'))
		{	
			foreach ($form_field as $key => $value)
			{	
				$data['org_trasport'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}			
			$pickup_zipcode_data = explode(',',$data['org_trasport']['pick_zip']);
			//print_r($pickup_zipcode_data);
			$data['org_trasport']['pick_zip'] = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
			$data['org_trasport']['pick_city'] = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
			$data['org_trasport']['pick_state'] = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
			$data['org_trasport']['pick_country'] = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
			$dropoff_zipcode_data = explode(',',$data['org_trasport']['drop_zip']);
			//print_r($dropoff_zipcode_data);
			$data['org_trasport']['drop_zip'] = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
			$data['org_trasport']['drop_city'] = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
			$data['org_trasport']['drop_state'] = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
			$data['org_trasport']['drop_country'] = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
			
			
			$error_message = '';
			$this->form_validation->set_rules('pick_city', 'Pick Up City', 'trim');
			$this->form_validation->set_rules('pick_state', 'Pick Up State', 'trim');
			$this->form_validation->set_rules('pick_zip', 'Pick Up Zip', 'trim|required');
			$this->form_validation->set_rules('drop_city', 'Drop Off City', 'trim');
			$this->form_validation->set_rules('drop_state', 'Drop Off State', 'trim');
			$this->form_validation->set_rules('drop_zip', 'Drop Off Zip', 'trim|required');
			$this->form_validation->set_rules('dateselect', 'Drop Off date', 'trim|required');
			$this->form_validation->set_rules('pickupselect', 'Pick Up date', 'trim|required');
			
			$error = '';	
			if($this->form_validation->run()==FALSE ||$error_message!='')
			{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";
					$this->load->view('transportation/edit-route',$data);	
			}
			else
			{
				$private_notify_type = '';	
				if(isset($data['org_trasport']['approvedcoalitions']) && $data['org_trasport']['approvedcoalitions'] != '')
				{
					$private_notify_type = 'coalitions';	
				} else if (isset($data['org_trasport']['approvedpartners']) && $data['org_trasport']['approvedpartners'] != '')
				{
					$private_notify_type = 'partners';
				}
				
				$total_miles = '';				
				$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].", ":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].", ":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?", ".$data['org_trasport']['pick_zip']:"");	
				$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].", ":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].", ":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?", ".$data['org_trasport']['drop_zip']:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}
				
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($data['org_trasport']['trans_unique_name']),
											"st_from_city"		=> trim($data['org_trasport']['pick_city']),
											"st_from_state"		=> trim($data['org_trasport']['pick_state']),
											"st_from_zip"		=> trim($data['org_trasport']['pick_zip']),
											"st_from_country"	=> trim($data['org_trasport']['pick_country']), 
											"st_to_city"		=> trim($data['org_trasport']['drop_city']),  
											"st_to_state"		=> trim($data['org_trasport']['drop_state']), 
											"st_to_zip"			=> trim($data['org_trasport']['drop_zip']),  
											"st_to_country"		=> trim($data['org_trasport']['drop_country']),
											//"dt_pickup_date"	=> date("Y-m-d", strtotime($data['org_trasport']['pickupselect'])),
											//"dt_target"		=> date("Y-m-d", strtotime($data['org_trasport']['dateselect'])),
											"dt_pickup_date"	=> $start_date,
											"dt_target"			=> $end_date,
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"dt_created"		=> date("Y-m-d H:i;s"),
											'dt_modified'       => date('Y-m-d H:i:s'),
											"in_status"			=> trim($data['org_trasport']['in_status']),/*Save as draft*/
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 		=> isset($data['org_trasport']['allow_pics']) && $data['org_trasport']['allow_pics'] != '' ? 1 : 0,
											"in_approval"			=> isset($data['org_trasport']['in_approval']) && $data['org_trasport']['in_approval'] != '' ? 1 : 0,
											"in_sms_notification"	=> isset($data['org_trasport']['sms_notify']) && $data['org_trasport']['sms_notify'] != '' ? 1 : 0,
											'in_fb_share'			=> isset($data['org_trasport']['fb_publish']) && $data['org_trasport']['fb_publish'] != '' ? 1 : 0,
											'in_route_notify_type'	 => isset($data['org_trasport']['transport_type_notify']) && $data['org_trasport']['transport_type_notify'] != '' ? $data['org_trasport']['transport_type_notify'] : 0,
											'st_private_type_notify' => $private_notify_type,	
											'in_transport_crate_vehicle' => isset($data['org_trasport']['manage_vehicle']) && $data['org_trasport']['manage_vehicle'] != '' ? $data['org_trasport']['manage_vehicle'] :'',
											'st_sendOrg' 				=> $data['org_trasport']['st_sendOrg'],
											'st_sendStreet'				=>$data['org_trasport']['st_sendStreet'],
											'st_receiveOrg'				=>$data['org_trasport']['st_receiveOrg'],
											'st_receiveStreet' 			=>$data['org_trasport']['st_receiveStreet'],
											'in_public_reservation'		=>$data['org_trasport']['in_public_reservation'],
											'in_multiple_route'				=>$data['org_trasport']['in_multiple_route'],
											);											
				$this->orgtrasnportation_model->update_transport_details($transport_details);
				
				$participate_org_id = $data['org_trasport']['cnt_org_participate'];
				//$send_receive_org = $this->input->post('send_receive_org')?$this->input->post('send_receive_org'):'';
				if($participate_org_id>0)
				{
					//$participants_org_array = array();
					for($i=0;$i<$participate_org_id;$i++)
					{
						$cnt = $i+1;
						$part_id = 'participate_org_id_'.$cnt;
						$org_id = $this->input->post($part_id);
						$invi_type = 'invitation_type_'.$cnt;
						$st_invitation_type = $this->input->post($invi_type);
						$in_id = 'participate_in_id_'.$cnt;
						$participate_in_id =  $this->input->post($in_id)?$this->input->post($in_id):'';
						if($org_id!='' && $st_invitation_type!='')
						{	
							//if($participate_in_id!='')
							if($participate_in_id!='' && $participate_in_id!='0')	
							{
								$participants_org_array = array('in_transportation_id'=>$this->session->userdata('transport_id'),
															  'in_organization_id'=>$org_id,
														      'st_invitation_type'=>$st_invitation_type,
														             'dt_modified'=>date('Y-m-d H:i:s'),
														              'in_deleted'=>0	
														    );
								
								$this->db->where('in_id',$participate_in_id);
								$this->db->update('tbl_org_transport_participate',$participants_org_array);
							} else {
								
								$participants_org_array = array('in_transportation_id'=>$this->session->userdata('transport_id'),
																  'in_organization_id'=>$org_id,
														          'st_invitation_type'=>$st_invitation_type,
														                  'dt_created'=>date('Y-m-d H:i:s'),
														                 'dt_modified'=>date('Y-m-d H:i:s'),
														                  'in_deleted'=>0	
																);
														  
								$this->db->insert('tbl_org_transport_participate',$participants_org_array);
								
							}	
						}		
					}					
				}
				
				
				if(isset($data['org_trasport']['qtyxs']))
				{
					$qtyxs = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'XS',
									'in_crate_qty'		 => (!empty($data['org_trasport']['qtyxs']))?$data['org_trasport']['qtyxs']:'0',
									'in_cost_public'	 => isset($data['org_trasport']['qtyxs_cst_public']) && $data['org_trasport']['qtyxs_cst_public'] != '' ? $data['org_trasport']['qtyxs_cst_public'] : 0,
									'in_cost_private'    => isset($data['org_trasport']['qtyxs_cst_private']) && $data['org_trasport']['qtyxs_cst_private'] != '' ? $data['org_trasport']['qtyxs_cst_private'] : 0,
									'dt_created'		 => date("Y-m-d H:i;s"),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
								  
						$this->db->where('st_crate_type','XS');
						$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
						$this->db->where('in_deleted',0);		  
						$this->db->update('tbl_transport_crates',$qtyxs);			
				}
				
				if(isset($data['org_trasport']['qtys']))
				{
					$qtys = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'S',
									'in_crate_qty'		 => (!empty($data['org_trasport']['qtys']))?$data['org_trasport']['qtys']:'0',
									'in_cost_public'	 => isset($data['org_trasport']['qtys_cst_public']) && $data['org_trasport']['qtys_cst_public'] != '' ? $data['org_trasport']['qtys_cst_public'] : 0,
									'in_cost_private'    => isset($data['org_trasport']['qtys_cst_private']) && $data['org_trasport']['qtys_cst_private'] != '' ? $data['org_trasport']['qtys_cst_private'] : 0,
									'dt_created'		 => date("Y-m-d H:i;s"),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						$this->db->where('st_crate_type','S');
						$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
						$this->db->where('in_deleted',0);			  
						$this->db->update('tbl_transport_crates',$qtys);			
				}				
				if(isset($data['org_trasport']['qtym']))
				{
					$qtym = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'M',
									'in_crate_qty'		 => (!empty($data['org_trasport']['qtym']))?$data['org_trasport']['qtym']:'0',
									'in_cost_public'	 => isset($data['org_trasport']['qtym_cst_public']) && $data['org_trasport']['qtym_cst_public'] != '' ? $data['org_trasport']['qtym_cst_public'] : 0,
									'in_cost_private'    => isset($data['org_trasport']['qtym_cst_private']) && $data['org_trasport']['qtym_cst_private'] != '' ? $data['org_trasport']['qtym_cst_private'] : 0,
									'dt_created'		 => date("Y-m-d H:i;s"),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						$this->db->where('st_crate_type','M');
						$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
						$this->db->where('in_deleted',0);		  
						$this->db->update('tbl_transport_crates',$qtym);			
				}
				
				if(isset($data['org_trasport']['qtyl']))
				{
					$qtyl = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'L',
									'in_crate_qty'		 => (!empty($data['org_trasport']['qtyl']))?$data['org_trasport']['qtyl']:'0',
									'in_cost_public'	 => isset($data['org_trasport']['qtyl_cst_public']) && $data['org_trasport']['qtyl_cst_public'] != '' ? $data['org_trasport']['qtyl_cst_public'] : 0,
									'in_cost_private'    => isset($data['org_trasport']['qtyl_cst_private']) && $data['org_trasport']['qtyl_cst_private'] != '' ? $data['org_trasport']['qtyl_cst_private'] : 0,
									'dt_created'		 => date("Y-m-d H:i;s"),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						
						$this->db->where('st_crate_type','L');
						$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
						$this->db->where('in_deleted',0);	
						$this->db->update('tbl_transport_crates',$qtyl);			
				}
				
				if(isset($data['org_trasport']['qtyxl']))
				{
					$qtyxl = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'XL',
									'in_crate_qty'		 => (!empty($data['org_trasport']['qtyxl']))?$data['org_trasport']['qtyxl']:'0',
									'in_cost_public'	 => isset($data['org_trasport']['qtyxl_cst_public']) && $data['org_trasport']['qtyxl_cst_public'] != '' ? $data['org_trasport']['qtyxl_cst_public'] : 0,
									'in_cost_private'    => isset($data['org_trasport']['qtyxl_cst_private']) && $data['org_trasport']['qtyxl_cst_private'] != '' ? $data['org_trasport']['qtyxl_cst_private'] : 0,
									'dt_created'		 => date("Y-m-d H:i;s"),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						$this->db->where('st_crate_type','XL');
						$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
						$this->db->where('in_deleted',0);		  
						$this->db->update('tbl_transport_crates',$qtyxl);			
				}
				
				$this->session->set_userdata('transport_steps',3);
				redirect($this->config->item('base_url')."transport-create-legs");
			}				
		}else {
			
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
            if (empty($transport_details)) {
                redirect($this->config->item('base_url'));
            }
            //echo "<pre>";print_r($transport_details);die;
            if ($transport_details['0']['in_status'] == '3' || $transport_details['0']['in_status'] == '2') {
                $this->session->set_flashdata('rights_error', 'Invalid transportation selected.');
                redirect($this->config->item('base_url') . "org-dashboard/" . $this->session->userdata('org_id') . "/");
            }
			
			$org_transport_participate = $this->orgtrasnportation_model->get_org_transport_participate($this->session->userdata('transport_id'));
			
			if(count($org_transport_participate)>0)
			{
				$data['org_transport_participate'] = $org_transport_participate;
			}
			
			$data['org_trasport'] = array();
		
            //$data['org_trasport']['in_need_trans_monitor'] = $transport_details['0']['in_need_trans_monitor'];
			$data['org_trasport']['in_allow_pics'] = $transport_details['0']['in_allow_pics'];
            $data['org_trasport']['pick_zipcode'] = isset($transport_details['0']['st_from_zip']) ? $transport_details['0']['st_from_zip'] : '';
            $data['org_trasport']['pick_city'] = isset($transport_details['0']['st_from_city']) ? $transport_details['0']['st_from_city'] : '';
            $data['org_trasport']['pick_state'] = isset($transport_details['0']['st_from_state']) ? $transport_details['0']['st_from_state'] : '';
            $data['org_trasport']['pick_country'] = isset($transport_details['0']['st_from_country']) ? $transport_details['0']['st_from_country'] : '';
			$data['org_transport']['in_status'] = isset($transport_details['0']['in_status']) ? $transport_details['0']['in_status'] : '';
            $data['org_trasport']['pickupselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_pickup_date']));
			$data['org_trasport']['st_trans_type'] = $transport_details['0']['st_trans_type'];
            $data['org_trasport']['pick_zip'] = $data['org_trasport']['pick_zipcode'] . ', ';
			$data['org_trasport']['in_approval'] 	= isset($transport_details['0']['in_approval']) ? $transport_details['0']['in_approval'] :'0';
			
			$data['org_trasport']['in_notify_type'] = isset($transport_details['0']['in_route_notify_type']) ? $transport_details['0']['in_route_notify_type'] :'0';
			$data['org_trasport']['private_notify_type'] = (isset($transport_details['0']['st_private_type_notify']) &&  $transport_details['0']['st_private_type_notify']!='') ? $transport_details['0']['st_private_type_notify'] :'';
			$data['org_trasport']['transport_crate_vehicle'] = (isset($transport_details['0']['in_transport_crate_vehicle']) &&  $transport_details['0']['in_transport_crate_vehicle']!='') ? $transport_details['0']['in_transport_crate_vehicle'] :'';

			
			$transport_crates = $this->orgtrasnportation_model->get_transport_crates($this->session->userdata('transport_id'));
			
            if ($data['org_trasport']['pick_city'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_city'] . ', ';
            }
            if ($data['org_trasport']['pick_state'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_state'] . ', ';
            }
            if ($data['org_trasport']['pick_country'] != '') {
                $data['org_trasport']['pick_zip'] .= $data['org_trasport']['pick_country'];
            }
			
			$data['org_trasport']['sms_notify'] = isset($transport_details['0']['in_sms_notification']) ? $transport_details['0']['in_sms_notification'] : '0';
			$data['org_trasport']['fb_share'] = isset($transport_details['0']['in_fb_share']) ? $transport_details['0']['in_fb_share'] : '0';
			$data['org_trasport']['qtyxs_cst_public'] = (isset($transport_crates['qtyxs_cst_public']) && !empty($transport_crates['qtyxs_cst_public']))?$transport_crates['qtyxs_cst_public']:$this->config->item('public-cost-xs');
			$data['org_trasport']['qtyxs_cst_private'] = (isset($transport_crates['qtyxs_cst_private']) && !empty($transport_crates['qtyxs_cst_private']))?$transport_crates['qtyxs_cst_private']:$this->config->item('private-cost-xs');
            $data['org_trasport']['qtyxs'] 			 = (isset($transport_crates['qtyxs']) && !empty($transport_crates['qtyxs']))?$transport_crates['qtyxs']:'0';
			
			$data['org_trasport']['qtys_cst_public'] = (isset($transport_crates['qtys_cst_public']) && !empty($transport_crates['qtys_cst_public']))?$transport_crates['qtys_cst_public']:$this->config->item('public-cost-s');
			$data['org_trasport']['qtys_cst_private'] = (isset($transport_crates['qtys_cst_private']) && !empty($transport_crates['qtys_cst_private']))?$transport_crates['qtys_cst_private']:$this->config->item('private-cost-s');
            $data['org_trasport']['qtys'] 			 = (isset($transport_crates['qtys']) && !empty($transport_crates['qtys']))?$transport_crates['qtys']:'0';		
			
			$data['org_trasport']['qtym_cst_public'] = (isset($transport_crates['qtym_cst_public']) && !empty($transport_crates['qtym_cst_public']))?$transport_crates['qtym_cst_public']:$this->config->item('public-cost-m');
			$data['org_trasport']['qtym_cst_private'] = (isset($transport_crates['qtym_cst_private']) && !empty($transport_crates['qtym_cst_private']))?$transport_crates['qtym_cst_private']:$this->config->item('private-cost-m');
            $data['org_trasport']['qtym'] 			 = (isset($transport_crates['qtym']) && !empty($transport_crates['qtym']))?$transport_crates['qtym']:'0';		

			$data['org_trasport']['qtyl_cst_public'] = (isset($transport_crates['qtyl_cst_public']) && !empty($transport_crates['qtyl_cst_public']))?$transport_crates['qtyl_cst_public']:$this->config->item('public-cost-l');
			$data['org_trasport']['qtyl_cst_private'] = (isset($transport_crates['qtyl_cst_private']) && !empty($transport_crates['qtyl_cst_private']))?$transport_crates['qtyl_cst_private']:$this->config->item('private-cost-l');
            $data['org_trasport']['qtyl'] 			 = (isset($transport_crates['qtyl']) && !empty($transport_crates['qtyl']))?$transport_crates['qtyl']:'0';		

			$data['org_trasport']['qtyxl_cst_public'] = (isset($transport_crates['qtyxl_cst_public']) && !empty($transport_crates['qtyxl_cst_public']))?$transport_crates['qtyxl_cst_public']:$this->config->item('public-cost-xl');
			$data['org_trasport']['qtyxl_cst_private'] = (isset($transport_crates['qtyxl_cst_private']) && !empty($transport_crates['qtyxl_cst_private']))?$transport_crates['qtyxl_cst_private']:$this->config->item('private-cost-xl');
            $data['org_trasport']['qtyxl'] 			 = (isset($transport_crates['qtyxl']) && !empty($transport_crates['qtyxl']))?$transport_crates['qtyxl']:'0';		

			
			$data['org_trasport']['drop_zipcode'] = isset($transport_details['0']['st_to_zip']) ? $transport_details['0']['st_to_zip'] : '';
            $data['org_trasport']['drop_city'] = isset($transport_details['0']['st_to_city']) ? $transport_details['0']['st_to_city'] : '';
            $data['org_trasport']['drop_state'] = isset($transport_details['0']['st_to_state']) ? $transport_details['0']['st_to_state'] : '';
            $data['org_trasport']['drop_country'] = isset($transport_details['0']['st_to_country']) ? $transport_details['0']['st_to_country'] : '';
			
			$data['org_trasport']['trans_unique_name'] = isset($transport_details['0']['st_trans_name']) ? $transport_details['0']['st_trans_name'] : '';

            $data['org_trasport']['dateselect'] = date("m/d/Y", strtotime($transport_details['0']['dt_target']));

            $data['org_trasport']['drop_zip'] = $data['org_trasport']['drop_zipcode'] . ', ';

            if ($data['org_trasport']['drop_city'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_city'] . ', ';
            }
            if ($data['org_trasport']['drop_state'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_state'] . ', ';
            }
            if ($data['org_trasport']['drop_country'] != '') {
                $data['org_trasport']['drop_zip'] .= $data['org_trasport']['drop_country'];
            }

            $data['org_trasport']['st_sendOrg'] = isset($transport_details['0']['st_sendOrg']) ? $transport_details['0']['st_sendOrg'] : '';
            $data['org_trasport']['st_sendStreet'] = isset($transport_details['0']['st_sendStreet']) ? $transport_details['0']['st_sendStreet'] : '';
            $data['org_trasport']['st_receiveOrg'] = isset($transport_details['0']['st_receiveOrg']) ? $transport_details['0']['st_receiveOrg'] : '';
            $data['org_trasport']['st_receiveStreet'] = isset($transport_details['0']['st_receiveStreet']) ? $transport_details['0']['st_receiveStreet'] : '';
            $data['org_trasport']['in_public_reservation'] = isset($transport_details['0']['in_public_reservation']) ? $transport_details['0']['in_public_reservation'] : 0;
            $data['org_trasport']['in_multiple_route'] = isset($transport_details['0']['in_multiple_route']) ? $transport_details['0']['in_multiple_route'] : 0;
			
		}	
			
		$this->load->view('transportation/edit-route',$data);	
	}
	
	public function draft_route_transport() 
	{
		if(!$this->session->userdata('userid'))
		{
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		/*if(!$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
		}*/
		
			if(!$this->session->userdata('org_id')) 
			{
				if(!$this->input->post('org_id'))
				{	
					redirect($this->config->item('base_url'));
				}	else {
					if($this->session->userdata('org_id'))
					{	
						$this->session->unset_userdata('org_id');
					}		
					$this->session->set_userdata('org_id',$this->input->post('org_id'));
				}	
			}
		
		// for remove the search result 
			if($this->session->userdata('draft_search'))
			{
		 	  	$this->session->unset_userdata('draft_search');
			}
			if($this->session->userdata('user_draft_search'))
			{
			   $this->session->unset_userdata('user_draft_search');
			}
				
		#================Check User permission start===============#
		$create = '0';
		$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
		$make_array_user = array();
		$check_per_flag = '';
		$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
		if(!empty($user_permission)) {
			$make_array_user = unserialize($user_permission);
		}
		if($owner_id != $this->session->userdata('userid')) {	
			if(isset($make_array_user['transport']) && (in_array('transport_ed',$make_array_user['transport']) == true || in_array('transport_cr',$make_array_user['transport']) == true)) 				
			{
				$check_per_flag = '1';
				if(in_array('transport_ed',$make_array_user['transport']) == true && !in_array('transport_cr',$make_array_user['transport']) == true)
				{
					$create = '1';
				}
				else
				{
					$create = '0';
				}
			} else {
				$check_per_flag = '0';
				$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
				redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
			}
			
		}
		#================Check User permission end================#	
		
		$data = array();
		$config = array();
		
		$this->load->library('pagination');
		
		$config["base_url"] 		= base_url().'org_transportation/draft_route_transport';
		
		$config["per_page"]	 		= $this->config->item('records_per_page');
		$config["uri_segment"] 		= 3;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
		
		$org_code 	= $this->common_model->get_single_org_details($this->session->userdata('org_id'));
		$orgcode	=	($org_code['st_org_code'])? $org_code['st_org_code'] : array('DBT','dbt');
		
		if($this->input->post('search_module'))
		{
			if($this->input->post('module_search_text')=='')
			{
				$this->session->unset_userdata('draft_search');	
				$this->session->unset_userdata('user_draft_search');	
			}
			else
			{
				if(preg_match('([a-zA-Z].*[0-9]|[0-9].*[a-zA-Z].\s)', $this->input->post('module_search_text')))
				{
							$zip_code = $this->input->post('module_search_text');
							$zip_code = str_replace(" ","",$zip_code);
							$_POST['module_search_text'] = strtoupper($zip_code);
				}
				$draft_search = addslashes(str_replace($orgcode,"",$this->input->post('module_search_text')));
				$this->session->set_userdata('draft_search',trim($draft_search));	
				$this->session->set_userdata('user_draft_search',$this->common_function->custom_htmlentities($this->input->post('module_search_text')));	
			}
		}
		if($this->input->post('delete'))
		{
			//echo "<pre>";print_r($this->input->post('transport_id'));die;
			$this->orgtrasnportation_model->delete_transport(addslashes($this->input->post('transport_id')));
			
			//added by ghanshyam on 13Nov2014
			$animal_details = $this->orgtrasnportation_model->get_org_trans_animal($this->session->userdata('org_id'),'');			
			//print_r($animal_details);exit; //use for testing
			
			if(!empty($animal_details))
			{
				foreach($animal_details as $animal_data)
				{
					$this->orgtrasnportation_model->update_animal_transport_details($animal_data['in_animal_id']);
				}
			}
			
			$this->session->set_flashdata('success', 'Transport deleted successfully.');
			redirect(base_url().'org_transportation/draft_route_transport');
		}
		
		if ($this->input->post('edit_date_action')) {

            //$dateselect = $this->input->post('dateselect');
            //$pickup_select = $this->input->post('pickup_select');
			
			if($this->input->post('dateselect_year'))
			{	
					$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
			} else {
					$dateselect	=	$this->input->post('dateselect');
			}
			if($this->input->post('pickup_select_year'))
			{
					$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
			} else {
					$pickup_select	=	$this->input->post('pickup_select');
			}
			
			$transport_id = $this->input->post('edit_transport_id');
			
            if ($dateselect != '' && $pickup_select != '') {
                $details = array( "dt_target" => date("Y-m-d", strtotime($dateselect)),
								"dt_pickup_date" => date("Y-m-d", strtotime($pickup_select)),
								"dt_modified"	=> date("Y-m-d H:i:s"),
								"in_modified_by" => $this->session->userdata('userid'),
								);
                $this->orgtrasnportation_model->update_transport_detail_by_id($details,$transport_id);
				
                $trans_legs_details = $this->orgtrasnportation_model->get_trans_legs_copy($transport_id);

                if (isset($trans_legs_details) && !empty($trans_legs_details)) {
                    $legs = array_values(array_filter($trans_legs_details));

                    $leg_count = count($legs);            //getting the count of $books						

                    $leg_date_array = array();


                    for ($i = 0; $i < $leg_count; $i++) {
                        if (isset($legs[$i]['pick_start_time']) && $legs[$i]['pick_start_time'] != '') {
                            $leg_date_array[] = strtotime(date("Y-m-d", strtotime($legs[$i]['pick_start_time'])));
                        }
                    }

                    if (count(array_unique($leg_date_array)) == 1) {
                        for ($i = 0; $i < $leg_count; $i++) {
                            $leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
                            $leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));

                            $leg_pickup_date = date("Y-m-d", strtotime($pickup_select));
                            $pickup_leg_date_time = $leg_pickup_date . ' ' . $leg_pick_time;

                            $leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));
                            $dropoff_leg_date_time = $leg_pickup_date . ' ' . $leg_drop_time;

                            //update transport leg date time as selected start date and legs timing
                            $pickup_array = array("dt_start_time" => $pickup_leg_date_time);
                            $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs[$i]['leg_id'], "P");

                            $dropoff_array = array("dt_start_time" => $dropoff_leg_date_time);
                            $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs[$i]['leg_id'], "D");
                        }
                    } else {
						$pickup_select =  date('Y-m-d',strtotime($pickup_select));
                        for ($i = 0; $i < count($legs); $i++) {
                            
								if($i==0)
								{	
									if($legs[0]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[0]['pick_start_time'])));
									}	
								} else {
									if($legs[$i-1]['route_type_id'] != 2)
									{	
										$previous_leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i-1]['pick_start_time'])));
									}	
								} 	
								$leg_pick_time = date("H:i:s", strtotime($legs[$i]['pick_start_time']));
								$leg_drop_time = date("H:i:s", strtotime($legs[$i]['drop_start_time']));
								
								$leg_pick_date_strtotime = strtotime(date("Y-m-d", strtotime($legs[$i]['pick_start_time'])));
								//$leg_pickup_date_strtotime = strtotime(date("Y-m-d", strtotime($pickup_select)));
								
								if($previous_leg_pick_date_strtotime != $leg_pick_date_strtotime && $legs[$i]['route_type_id'] != 2 )
								{
									$next_date = date('Y-m-d', strtotime($pickup_select."+1 day"));
									$first_dt       = new DateTime($next_date);
									$last_dt      = new DateTime($dateselect);
									if($last_dt >= $first_dt)
									{
											$pickup_select = $next_date;
									}		
								}
								
								$leg_pickup_date = date("Y-m-d", strtotime($pickup_select));							
								$pickup_leg_date_time  = $leg_pickup_date.' '.$leg_pick_time;
									
								$leg_dropoff_date = date("Y-m-d", strtotime($pickup_select));							
								$dropoff_leg_date_time  = $leg_pickup_date.' '.$leg_drop_time;
                            if ($legs[$i]['route_type_id'] != 2) {
                                $pickup_array = array("dt_start_time" => $pickup_leg_date_time);
                                $this->orgtrasnportation_model->update_leg_info($pickup_array, $legs[$i]['leg_id'], "P");

                                $dropoff_array = array("dt_start_time" => $dropoff_leg_date_time);
                                $this->orgtrasnportation_model->update_leg_info($dropoff_array, $legs[$i]['leg_id'], "D");
                            }
                        }
                    }
                }

                $this->session->set_flashdata('success', 'Transport date updated successfully.');
            	redirect(base_url() . 'org_transportation/draft_route_transport');
			
            } else {
                $this->session->set_flashdata('date_error', 'Please select date.');
            }
        }
		
		$data['transportation_list'] = $this->orgtrasnportation_model->get_route_draft_transportation($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'));
		
		$data['all_read_transportation_list'] = $this->orgtrasnportation_model->get_all_read_transportation($this->session->userdata('userid'),$this->session->userdata('org_id'));
		//echo '<pre>';print_r($data['transportation_list']); die;
		
		$transport_ids_array = array();
		foreach($data['all_read_transportation_list'] as $transport_data)
		{
			$transport_ids_array[] = $transport_data['in_transportation_id'];
		}
		//echo '<pre>';		print_r($transport_ids_array); //exit;   //use for testing
		$data['transport_ids_array'] = $transport_ids_array;
		
		//Getting total rows
		$config["total_rows"] = $data['transportation_list']['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] = $this->pagination->create_links();
		//echo "<pre>";print_r($data);die;
		$this->load->view('transportation/draft-route-transportations',$data);
	}
	
	public function pre_planned_route_transport() 
	{
				
				if(!$this->session->userdata('userid'))
				{
					$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
					$this->session->set_userdata('url_data',$url);
					redirect($this->config->item('base_url'));
				}
				/*if(!$this->session->userdata('org_id')) {
					redirect($this->config->item('base_url'));
				} */
				
				if(!$this->session->userdata('org_id')) 
				{
					if(!$this->input->post('org_id'))
					{	
						redirect($this->config->item('base_url'));
					}	else {
						if($this->session->userdata('org_id'))
						{	
							$this->session->unset_userdata('org_id');
						}		
						$this->session->set_userdata('org_id',$this->input->post('org_id'));
					}	
				}
				
				// for remove the search result 
				if($this->session->userdata('preplan_search'))
				{
		 		  	 $this->session->unset_userdata('preplan_search');
				}
				if($this->session->userdata('user_preplan_search'))
				{
					 $this->session->unset_userdata('user_preplan_search');
				}
				
				#================Check User permission start===============#
				$owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
				$make_array_user = array();
				$check_per_flag = '';
				$user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
				if(!empty($user_permission)) {
					$make_array_user = unserialize($user_permission);
				}
				if($owner_id != $this->session->userdata('userid')) {
					if(isset($make_array_user['transport']) && in_array('transport_cr',$make_array_user['transport']) == true) {
						$check_per_flag = '1';
					} else {
						$check_per_flag = '0';
						$this->session->set_flashdata('rights_error', 'Please contact organization for get access this module.');
						redirect($this->config->item('base_url')."org-dashboard/".$this->session->userdata('org_id')."/");
					}
				}
				#================Check User permission end================#	
				
				$data = array();
				$config = array();
				
				$this->load->library('pagination');
				
				$config["base_url"] 		= base_url().'org_transportation/pre_planned_route_transport';
				
				$config["per_page"]	 		= $this->config->item('records_per_page');
				$config["uri_segment"] 		= 3;
			
				$config['first_link'] 		= FALSE;
				$config['last_link'] 		= FALSE;
				
				$config['full_tag_open'] 	= '<ul class="pagination">';
				$config['full_tag_close'] 	= '</ul>';
				
				$config['prev_link'] 		= 'Prev';
				$config['prev_tag_open'] 	= '<li class="prev">';
				$config['prev_tag_close'] 	= '</li>';
				
				$config['next_link'] 		= 'Next';
				$config['next_tag_open'] 	= '<li class="next">';
				$config['next_tag_close'] 	= '</li>';
				
				$config['num_tag_open'] 	= '<li>';
				$config['num_tag_close'] 	= '</li>';
				
				$config['cur_tag_open']		= '<li class="active"><a href="">';
				$config['cur_tag_close'] 	= '</a></li>';
				$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
				
				$org_code = $this->common_model->get_single_org_details($this->session->userdata('org_id'));
				$orgcode	=	($org_code['st_org_code'])? $org_code['st_org_code'] : array('DBT','dbt');
				
				if($this->input->post('search_module'))
				{
					if($this->input->post('module_search_text')=='')
					{
						$this->session->unset_userdata('preplan_search');	
						$this->session->unset_userdata('user_preplan_search');	
					}
					else
					{
						if(preg_match('([a-zA-Z].*[0-9]|[0-9].*[a-zA-Z].\s)', $this->input->post('module_search_text')))
						{
							$zip_code = $this->input->post('module_search_text');
							$zip_code = str_replace(" ","",$zip_code);
							$_POST['module_search_text'] = strtoupper($zip_code);
						}
						$draft_search = addslashes(str_replace($orgcode,"",$this->input->post('module_search_text')));
						$this->session->set_userdata('preplan_search',trim($draft_search));	
						$this->session->set_userdata('user_preplan_search',$this->common_function->custom_htmlentities($this->input->post('module_search_text')));	
					}
				}
				if($this->input->post('copy'))
				{
					//echo "<pre>";print_r($this->input->post('transport_id'));//die;
					
					//echo $_POST['pickup_select'];//die;
					//echo $_POST['dateselect'];//die;
					
					//$pickup_select	=	$_POST['pickup_select'];
					//$dateselect	=	$_POST['dateselect'];
					
					if($this->input->post('dateselect_year'))
					{	
						$dateselect	=	$this->input->post('dateselect').' '.$this->input->post('dateselect_year');
					} else {
						$dateselect	=	$this->input->post('dateselect');
					}
					if($this->input->post('pickup_select_year'))
					{
						$pickup_select	=	$this->input->post('pickup_select').' '.$this->input->post('pickup_select_year');
					} else {
						$pickup_select	=	$this->input->post('pickup_select');
					}
					
					if($dateselect!='' && $pickup_select!='')
					{
					$dt_target = date("Y-m-d",strtotime($dateselect));
					$dt_pickup_date = date("Y-m-d",strtotime($pickup_select));
					}
					$trasport_id = addslashes($this->input->post('transport_id'));
					$transport_details 		= $this->orgtrasnportation_model->get_transport_details($trasport_id);
					$leg_details 			= $this->orgtrasnportation_model->get_trans_legs_copy($trasport_id);
					$previous_start_time_only = ''; 
					
					$transport_crates = $this->orgtrasnportation_model->get_transport_crates($trasport_id);
						
					$new_transport_crates['qtyxs_cst_public'] = (isset($transport_crates['qtyxs_cst_public']) && !empty($transport_crates['qtyxs_cst_public']))?$transport_crates['qtyxs_cst_public']:$this->config->item('public-cost-xs');
					$new_transport_crates['qtyxs_cst_private'] = (isset($transport_crates['qtyxs_cst_private']) && !empty($transport_crates['qtyxs_cst_private']))?$transport_crates['qtyxs_cst_private']:$this->config->item('private-cost-xs');
					$new_transport_crates['qtyxs'] 			 = (isset($transport_crates['qtyxs']) && !empty($transport_crates['qtyxs']))?$transport_crates['qtyxs']:'';
			
					$new_transport_crates['qtys_cst_public'] = (isset($transport_crates['qtys_cst_public']) && !empty($transport_crates['qtys_cst_public']))?$transport_crates['qtys_cst_public']:$this->config->item('public-cost-s');
					$new_transport_crates['qtys_cst_private'] = (isset($transport_crates['qtys_cst_private']) && !empty($transport_crates['qtys_cst_private']))?$transport_crates['qtys_cst_private']:$this->config->item('private-cost-s');
					$new_transport_crates['qtys'] 			 = (isset($transport_crates['qtys']) && !empty($transport_crates['qtyxs']))?$transport_crates['qtys']:'';		
			
					$new_transport_crates['qtym_cst_public'] = (isset($transport_crates['qtym_cst_public']) && !empty($transport_crates['qtym_cst_public']))?$transport_crates['qtym_cst_public']:$this->config->item('public-cost-m');
					$new_transport_crates['qtym_cst_private'] = (isset($transport_crates['qtym_cst_private']) && !empty($transport_crates['qtym_cst_private']))?$transport_crates['qtym_cst_private']:$this->config->item('private-cost-m');
					$new_transport_crates['qtym'] 			 = (isset($transport_crates['qtym']) && !empty($transport_crates['qtym']))?$transport_crates['qtym']:'';		

					$new_transport_crates['qtyl_cst_public'] = (isset($transport_crates['qtyl_cst_public']) && !empty($transport_crates['qtyl_cst_public']))?$transport_crates['qtyl_cst_public']:$this->config->item('public-cost-l');
					$new_transport_crates['qtyl_cst_private'] = (isset($transport_crates['qtyl_cst_private']) && !empty($transport_crates['qtyl_cst_private']))?$transport_crates['qtyl_cst_private']:$this->config->item('private-cost-l');
					$new_transport_crates['qtyl'] 			 = (isset($transport_crates['qtyl']) && !empty($transport_crates['qtyl']))?$transport_crates['qtyl']:'';		

					$new_transport_crates['qtyxl_cst_public'] = (isset($transport_crates['qtyxl_cst_public']) && !empty($transport_crates['qtyxl_cst_public']))?$transport_crates['qtyxl_cst_public']:$this->config->item('public-cost-xl');
					$new_transport_crates['qtyxl_cst_private'] = (isset($transport_crates['qtyxl_cst_private']) && !empty($transport_crates['qtyxl_cst_private']))?$transport_crates['qtyxl_cst_private']:$this->config->item('private-cost-xl');
					$new_transport_crates['qtyxl'] 			 = (isset($transport_crates['qtyxl']) && !empty($transport_crates['qtyxl']))?$transport_crates['qtyxl']:'';		

					//$transport_details['0'][''];
					
					
					//echo "<pre>";print_r($transport_details);print_r($leg_details);die;
					$transport_copy = array(		"in_trans_coods_id"	=> $this->session->userdata('userid'), 
													"in_organization_id"=> $transport_details['0']['in_organization_id'],
													"st_from_street"	=> $transport_details['0']['st_from_street'],
													"st_from_city"		=> $transport_details['0']['st_from_city'],
													"st_from_state"		=> $transport_details['0']['st_from_state'],
													"st_from_zip"		=> $transport_details['0']['st_from_zip'],
													"st_from_country"	=> $transport_details['0']['st_from_country'],
													"st_to_street"		=> $transport_details['0']['st_to_street'], 
													"st_to_city"		=> $transport_details['0']['st_to_city'],  
													"st_to_state"		=> $transport_details['0']['st_to_state'], 
													"st_to_zip"			=> $transport_details['0']['st_to_zip'],  
													"st_to_country"		=> $transport_details['0']['st_to_country'],
													"st_from_info"		=> $transport_details['0']['st_from_info'],
													"dt_pickup_date"	=> isset($dt_pickup_date) ? $dt_pickup_date : $transport_details['0']['dt_pickup_date'],
													"dt_target"			=> isset($dt_target) ? $dt_target : $transport_details['0']['dt_target'],
													"st_to_info"		=> $transport_details['0']['st_to_info'],
													"st_trans_type"		=> $transport_details['0']['st_trans_type'],
													"in_tot_distance"	=> $transport_details['0']['in_tot_distance'],
													"in_created_by"		=> $this->session->userdata('userid'),
													"dt_created"		=> date("Y-m-d H:i;s"),
													"in_status"			=> "4",/*Save as draft*/
													"in_deleted"		=> "0",
													);
					//echo "<pre>";print_r($transport_copy);die;						
					$tra_id = $this->orgtrasnportation_model->add_transport($transport_copy);
					
					if(isset($new_transport_crates['qtyxs']))
						{
							$qtyxs = array('in_transportation_id'=>$tra_id,
												  'st_crate_type'=>'XS',
												   'in_crate_qty' => (!empty($new_transport_crates['qtyxs']))?$new_transport_crates['qtyxs']:'0',
												'in_cost_public'  => isset($new_transport_crates['qtyxs_cst_public']) && $new_transport_crates['qtyxs_cst_public'] != '' ? $new_transport_crates['qtyxs_cst_public'] : 0,
												'in_cost_private' => isset($new_transport_crates['qtyxs_cst_private']) && $new_transport_crates['qtyxs_cst_private'] != '' ? $new_transport_crates['qtyxs_cst_private'] : 0,
													 'dt_created' => date("Y-m-d H:i;s"),
													'dt_modified' => date("Y-m-d H:i;s"),
													 'in_deleted' => 0
										 );
								  
							$this->db->insert('tbl_transport_crates',$qtyxs);			
						}
				
						if(isset($new_transport_crates['qtys']))
						{
							$qtys = array('in_transportation_id' =>$tra_id,
												'st_crate_type'	 =>'S',
												 'in_crate_qty'	 => (!empty($new_transport_crates['qtys']))?$new_transport_crates['qtys']:'0',
											   'in_cost_public'	 => isset($new_transport_crates['qtys_cst_public']) && $new_transport_crates['qtys_cst_public'] != '' ? $new_transport_crates['qtys_cst_public'] : 0,
											  'in_cost_private'  => isset($new_transport_crates['qtys_cst_private']) && $new_transport_crates['qtys_cst_private'] != '' ? $new_transport_crates['qtys_cst_private'] : 0,
									               'dt_created'	 => date("Y-m-d H:i;s"),
									              'dt_modified'	 => date("Y-m-d H:i;s"),
												   'in_deleted'	 => 0
 								  );
								  
							$this->db->insert('tbl_transport_crates',$qtys);			
						}				
						if(isset($new_transport_crates['qtym']))
						{
							$qtym = array('in_transportation_id' =>$tra_id,
											'st_crate_type'		 =>'M',
											'in_crate_qty'		 => (!empty($new_transport_crates['qtym']))?$new_transport_crates['qtym']:'0',
											'in_cost_public'	 => isset($new_transport_crates['qtym_cst_public']) && $new_transport_crates['qtym_cst_public'] != '' ? $new_transport_crates['qtym_cst_public'] : 0,
											'in_cost_private'    => isset($new_transport_crates['qtym_cst_private']) && $new_transport_crates['qtym_cst_private'] != '' ? $new_transport_crates['qtym_cst_private'] : 0,
											'dt_created'		 => date("Y-m-d H:i;s"),
											'dt_modified'		 => date("Y-m-d H:i;s"),
											'in_deleted'		 => 0
 								  );
								  
							$this->db->insert('tbl_transport_crates',$qtym);			
						}
				
						if(isset($new_transport_crates['qtyl']))
						{
							$qtyl = array('in_transportation_id' =>$tra_id,
										  'st_crate_type'		 =>'L',
										    'in_crate_qty'		 => (!empty($new_transport_crates['qtyl']))?$new_transport_crates['qtyl']:'0',
										    'in_cost_public'	 => isset($new_transport_crates['qtyl_cst_public']) && $new_transport_crates['qtyl_cst_public'] != '' ? $new_transport_crates['qtyl_cst_public'] : 0,
										    'in_cost_private'    => isset($new_transport_crates['qtyl_cst_private']) && $new_transport_crates['qtyl_cst_private'] != '' ? $new_transport_crates['qtyl_cst_private'] : 0,
											'dt_created'		 => date("Y-m-d H:i;s"),
											'dt_modified'		 => date("Y-m-d H:i;s"),
											'in_deleted'		 => 0
										);
								  
							$this->db->insert('tbl_transport_crates',$qtyl);			
						}
				
						if(isset($new_transport_crates['qtyxl']))
						{
							$qtyxl = array('in_transportation_id'=>$tra_id,
											'st_crate_type'		 =>'XL',
											'in_crate_qty'		 => (!empty($new_transport_crates['qtyxl']))?$new_transport_crates['qtyxl']:'0',
											'in_cost_public'	 => isset($new_transport_crates['qtyxl_cst_public']) && $new_transport_crates['qtyxl_cst_public'] != '' ? $new_transport_crates['qtyxl_cst_public'] : 0,
											'in_cost_private'    => isset($new_transport_crates['qtyxl_cst_private']) && $new_transport_crates['qtyxl_cst_private'] != '' ? $new_transport_crates['qtyxl_cst_private'] : 0,
											'dt_created'		 => date("Y-m-d H:i;s"),
											'dt_modified'		 => date("Y-m-d H:i;s"),
											'in_deleted'		 => 0
										);
								  
							$this->db->insert('tbl_transport_crates',$qtyxl);			
						}
					
					if(isset($leg_details) && !empty($leg_details))
					{
						foreach($leg_details as $key=>$value)
						{
							//echo "<pre>";print_r($legs);die;
							if($value['route_type_id'] == 0 || $value['route_type_id'] == 1)
							{
								$multi_user = isset($value['multiple_drivers_pilots']) ? $value['multiple_drivers_pilots'] : '';
								$meeting_location = isset($value['meeting_location']) ? $value['meeting_location'] : '';
								$user_num = isset($value['no_of_drivers_pilots']) ? $value['no_of_drivers_pilots'] : '';
							}
							elseif($value['route_type_id'] == 2)
							{
								$multi_user = '';
								$meeting_location = isset($value['overnight_comments']) ? $value['overnight_comments'] : '';
								$user_num = '';
							}


							$legs_array = array("in_transportation_id"	=> $tra_id,
												"in_route_type"			=> $value['route_type_id'],
												"in_created_by"			=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0",
												"in_multi_user"			=> $multi_user, //added by ghanshyam on 09Jan2015
												"in_user_num" 			=> $user_num,	//added by ghanshyam on 09Jan2015
												"st_meeting_location"	=> $meeting_location,	//added by ghanshyam on 09Jan2015
												"in_sort_order"       =>  $value['sort_order'],  //added by Nirav on 02Sept2016
												);	
							$leg_id			= $this->orgtrasnportation_model->create_legs($legs_array);	
	
							if($value['route_type_id']=='2')
							{
								$pickup_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "O",
														"st_street" 				=> $value['o_pick_street'],
														"st_city " 					=> $value['o_pick_city'],
														"st_state " 				=> $value['o_pick_state'],
														"st_zip " 					=> $value['o_pick_zip'],
														"st_country " 				=> $value['o_pick_country'],
														"in_deleted"				=> "0"
														);					
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
																	
							}
							else
							{
								
								$pickup_leg_time_only = date("H:i:s", strtotime($value['pick_start_time']));
								
								if($previous_start_time_only!='')
								{	
									if(strtotime($pickup_leg_time_only) < strtotime($previous_start_time_only))
									{
										$next_date = date('Y-m-d', strtotime($dt_pickup_date."+1 day"));
										$first_dt       = new DateTime($next_date);
										$last_dt      = new DateTime($dt_target);
										if($last_dt >= $first_dt)
										{
											$dt_pickup_date = $next_date;
										}	
									}
								}
								
								$pickup_leg_date_time  = $dt_pickup_date.' '.$pickup_leg_time_only;
								
								$drop_leg_time_only = date("H:i:s", strtotime($value['drop_start_time']));
								$drop_leg_date_time  = $dt_pickup_date.' '.$drop_leg_time_only;
								
								$pickup_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "P",
														"st_street" 				=> $value['pick_street'],
														"st_city " 					=> $value['pick_city'],
														"st_state " 				=> $value['pick_state'],
														"st_zip " 					=> $value['pick_zip'],
														"st_country " 				=> $value['pick_country'],
														//"dt_start_time"				=> $value['pick_start_time'],
														//"dt_start_time"				=> isset($dt_pickup_date) ? $dt_pickup_date : $value['pick_start_time'],  //updated on 24oct2014 to change the new pickup selected date
														"dt_start_time"				=> $pickup_leg_date_time,
														"st_timezone"				=> $value['pick_timezone'],
														//"st_geometry"				=> @serialize($lat_long),
														"in_deleted"				=> "0"
														);					
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
								$dropoff_array 	= array("in_transportation_leg_id" 	=> $leg_id,
														"st_leg_type" 				=> "D",
														"st_street" 				=> $value['drop_street'],
														"st_city " 					=> $value['drop_city'],
														"st_state " 				=> $value['drop_state'],
														"st_zip " 					=> $value['drop_zip'],
														"st_country " 				=> $value['drop_country'],
														//"dt_start_time"				=> $value['drop_start_time'],
														//"dt_start_time"				=> isset($dt_pickup_date) ? $dt_pickup_date : $value['drop_start_time'],  //updated on 24oct2014 to change the new pickup selected date
														"dt_start_time"				=> $drop_leg_date_time,
														"st_timezone"				=> $value['drop_timezone'],
														//"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
														"in_deleted"				=> "0"
														);
								$this->orgtrasnportation_model->add_legs_details($dropoff_array);
								
								$previous_start_time_only = $pickup_leg_time_only;
								
								$origin_loc 		= ($value['pick_street'] ?$value['pick_street'].",":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].",":"").($value['pick_zip'] ? $value['pick_zip']:"").($value['pick_country'] ? ",".$value['pick_country']:"");
                              $dest_loc 	    = ($value['drop_street'] ? $value['drop_street'].",":"").($value['drop_city']? $value['drop_city'].",":"").($value['drop_state'] ? $value['drop_state'].",":"").($value['drop_zip'] ? $value['drop_zip']:"").($value['drop_country']? ",".$value['drop_country']:"");
                              $routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);

                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
								$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
														"in_transportation_id"		=> $tra_id,
														"in_route_type"				=> $value['route_type_id'],
														"st_legs_details"			=> $routes_miles['route_path'],
														"fl_distance"				=> $routes_miles['distance'],
														"in_deleted"				=> "0"
													 );
								$this->common_model->insert_data("tbl_routes",$route_details);
                              }	
                              
								
								$origin_loc 		= ($value['pick_street'] ?$value['pick_street'].",":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].",":"").($value['pick_zip'] ? $value['pick_zip']:"").($value['pick_country'] ? ",".$value['pick_country']:"");
                              $dest_loc 	    = ($value['drop_street'] ? $value['drop_street'].",":"").($value['drop_city']? $value['drop_city'].",":"").($value['drop_state'] ? $value['drop_state'].",":"").($value['drop_zip'] ? $value['drop_zip']:"").($value['drop_country']? ",".$value['drop_country']:"");
                              $routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);

                              //echo "avi leg_id==>".$legs[$i]['leg_id']."==<pre>";print_r($routes_miles);
                              if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
                              {
								$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
														"in_transportation_id"		=> $tra_id,
														"in_route_type"				=> $value['route_type_id'],
														"st_legs_details"			=> $routes_miles['route_path'],
														"fl_distance"				=> $routes_miles['distance'],
														"in_deleted"				=> "0"
													 );
								$this->common_model->insert_data("tbl_routes",$route_details);
                              }			
								
							}
											
						}
					}
					//$this->get_json();
					//$this->session->set_flashdata('success', 'Transport deleted successfully.');
					$this->session->set_flashdata('success', "Make sure to Add Animal to attach an animal to this transport.  When you're ready to publish this transport, please goto Edit Legs to verify your legs and publish this new transport.");
					//redirect(base_url().'org-transportation-scheduled/'.$tra_id);
					redirect(base_url() . 'edit-route/?id=' . $tra_id);
				}
				$data['transportation_list'] = $this->orgtrasnportation_model->get_all_preplan_route_transportation($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'));
				
				//Getting total rows
				$config["total_rows"] = $data['transportation_list']['num_rows'];
				
				//Initialize pagination
				$this->pagination->initialize($config);
				
				$data["links"] = $this->pagination->create_links();
				//echo "<pre>";print_r($data);die;
				$this->load->view('transportation/preplan_route_transportation',$data);
	}
	
	function transport_route_list($status = '1',$sort=false,$order=false,$limit=false)
	{
		$data = array();
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id'))
		{
			redirect($this->config->item('base_url'));
		}
		
		$org_list = $this->common_model->get_organization_list($this->session->userdata('org_id'));
		
		if(empty($org_list))
		{
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('org_id')) {
			$this->load->model('org_info_model');
			$get_org_details = $this->org_info_model->organization_profile($this->session->userdata('org_id'));
			isset($get_org_details['st_org_name'])?$this->session->set_userdata('org_name',$get_org_details['st_org_name']):'';
		}
		
		#=============Active Trasport============#
		//$all_trasport = $this->orgtrasnportation_model->get_transport_list("1",$this->session->userdata('org_id'));
		//$data['all_trasport'] = $all_trasport;
		
		if(!$sort)
			$sort='trid';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(6))
			$limit = $this->uri->segment(6);
		else	
			$limit = '0';	
		$rec_per_page = 5;	
		
		$total_record = $this->orgtrasnportation_model->get_transport_route_list_all_data($status,$this->session->userdata('org_id'));
		
		$all_trasport = $this->orgtrasnportation_model->get_transport_route_list_data($status,$this->session->userdata('org_id'),$rec_per_page,$limit,$sort,$order);
		
		//echo '<pre/>';
		//print_r($total_record);exit;
		//print_r($all_trasport);exit;
		
		$data['all_trasport']  = $all_trasport;
		
		if($this->uri->segment(2) && $this->uri->segment(2) != '')
		{ 
			$transport_status = $this->uri->segment(2);
			$data['transport_status']  = $transport_status;
		}else{
			$data['trasnport_status'] = '1';
		}
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_transportation/transport_route_list/';
		$config['base_url']	  	  = $config['base_url'].$status.'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;	
		$data['status'] = 	$status;
		
       $this->load->view('manage-org-route-transports',$data);		
	}
	
	public function verify_total_quantity()
	{
		$status = '1';
		$crate_type = $this->input->post('crate_type');
		$total_quantity = $this->input->post('total_quantity');
		$transport_id = $this->input->post('transportdata_id');
		$orderqty = '';
		if(isset($transport_id) && $transport_id!='0' && $transport_id!='' )
		{	
			$crate_details = $this->common_model->get_transport_crates($transport_id,$crate_type);
			$crate_id = $crate_details[0]['in_crate_id'];
			$orderqty = $this->orgtrasnportation_model->total_order_qty($crate_id);
		}
		if(empty($orderqty))
		{
			$status = '1';
		} else {
			if($total_quantity  >= $orderqty )
			{
				$status = '1';
			} else {
				$status = '0';	
			}	
			
		}
		echo $status;		
	}
	
	function check_today_date()
	{
		echo "<pre>"; print_r(date("Y-m-d H:i:s")); echo "</pre>";
	}
	/*function get_covering_leg_details()
	{
		$in_id = $_POST['in_id'];
		$covering_leg =  $this->orgtrasnportation_model->covering_legs($in_id);
		echo json_encode($covering_leg);
	}*/

	public function test_image()
	{
		$transport_id ='4429';
		if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
		{
			echo 'success';
		} else {
			echo 'failure';
		}
		echo $this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg';	
	}
	
	function org_text_redirect($id){
		redirect($this->config->item('base_url')."org-transportation-scheduled/".$id);
	}
	
	function add_new_transport()
	{
				$pickup_zipcode_data = explode(',',$this->input->post('pick_zip'));
				$pick_zip 	  = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
				$pick_city 	  = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
				$pick_state   = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
				$pick_country = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
				$dropoff_zipcode_data = explode(',',$this->input->post('drop_zip'));
				$drop_zip 	  = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
				$drop_city    = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
				$drop_state   = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
				$drop_country = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
		
				$origin 			= ($pick_city?$pick_city.", ":"").($pick_state?$pick_state:"").($pick_zip?", ".$pick_zip:"");	
				$destinations 		= ($drop_city?$drop_city.", ":"").($drop_state?$drop_state:"").($drop_zip?", ".$drop_zip:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				//echo "<pre>";print_r($routes_miles);die; 
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}	
				$transport_details = array(	"in_trans_coods_id"	=> $this->session->userdata('userid'), 
											"in_organization_id"=> $this->session->userdata('org_id'),
											"st_trans_name"		=> trim($data['org_trasport']['trans_unique_name']),
											//"st_from_street"	=> $data['org_trasport']['pick_street'],
											"st_from_city"		=> trim($pick_city),
											"st_from_state"		=> trim($pick_state),
											"st_from_zip"		=> trim($pick_zip),
											"st_from_country"	=> trim($pick_country),
											//"st_to_street"		=> $data['org_trasport']['drop_street'], 
											"st_to_city"		=> trim($drop_city),  
											"st_to_state"		=> trim($drop_state), 
											"st_to_zip"			=> trim($drop_zip),  
											"st_to_country"		=> trim($drop_country),
											//"st_from_info"		=> $data['org_trasport']['pick_info'],
											"dt_pickup_date"	=> $start_date,
											"dt_target"			=> $end_date,
											//"st_to_info"		=> $data['org_trasport']['drop_info'],
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $this->session->userdata('userid'),
											"st_trans_type"		=> "U",
											"in_status"			=> "4",/*Save as draft*/
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 	=> $this->input->post('allow_pics'),
											'stRecOrgNm'        => $this->input->post('receiving_organization_name'),
											  'stRecNm'         => $this->input->post('receiving_contact_name'),
											'stRecEmail'        => $this->input->post('receiving_contact_email'),
											  'stRphone'        => $this->input->post('receiving_contact_phone_no'),
											  'stR501c3'        => $this->input->post('receiving_501c3_certified'),
											  'stS501c3'        => $this->input->post('sending_c3_certified'),
										   'stSendOrgNm'        => $this->input->post('organization_name'),
											  'stSendNm'	    => $this->input->post('contact_name'),
								           'stSendEmail'        => $this->input->post('contact_email'),
								              'stSphone'        => $this->input->post('contact_phone_no'),
											  'stAniStory'		=> $this->input->post('backstory'),
									   'inSendOrgRunsheet'		=> $this->input->post('sendrunsheet_sending'),
									   'inRecOrgRunsheet'		=> $this->input->post('sendrunsheet_receiving'),
										'in_completed_steps'	=> 1,
										'in_sms_notification'	=> $this->input->post('sms_notify')?$this->input->post('sms_notify'):'0',
										'in_fb_share'			=> $this->input->post('fb_publish')?$this->input->post('fb_publish'):'0',
				
										);	
				if($this->session->userdata('transport_id'))
				{	
					$transport_id = $this->session->userdata('transport_id');
					$transport_details["dt_modified"] = date('Y-m-d H:i:s');
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_details["dt_created"] = date("Y-m-d H:i;s");
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}
			
			//echo json_encode($transport_details);	
		echo $transport_id; 			
	}
	
	function add_new_airline_transport()
	{
		$base_airport_pickup  = $this->orgtrasnportation_model->get_state_baseairport($this->input->post('pick_zip'));
		$base_airport_dropoff = $this->orgtrasnportation_model->get_state_baseairport($this->input->post('drop_zip'));
		$pickup_city 		  = (isset($base_airport_pickup['st_city']) && !empty($base_airport_pickup['st_city'])) ? $base_airport_pickup['st_city']: '';	
		$dropoff_city 		  =  (isset($base_airport_dropoff['st_city']) && !empty($base_airport_dropoff['st_city']))? $base_airport_dropoff['st_city']: '';
			
		$pickup_zipcode_data 					= $this->getLatLong($base_airport_pickup['st_loc_id']);
		$data['org_trasport']['pick_zip'] 		= isset($pickup_zipcode_data['postal_code']) ? $pickup_zipcode_data['postal_code'] : ''; 
		$data['org_trasport']['pick_city'] 		= (isset($pickup_city) && !empty($pickup_city)) ? $pickup_city : $pickup_zipcode_data['city']; 
		$data['org_trasport']['pick_state'] 	= isset($pickup_zipcode_data['state']) ? $pickup_zipcode_data['state'] : ''; 
		$data['org_trasport']['pick_country'] 	= isset($pickup_zipcode_data['country']) ? $pickup_zipcode_data['country'] : '';
		$data['org_trasport']['st_from_street'] = ($this->input->post('pick_zip')) ? $this->input->post('pick_zip') : ''; 	
			
		$dropoff_zipcode_data 					= $this->getLatLong($base_airport_dropoff['st_loc_id']);
		$data['org_trasport']['drop_zip'] 		= isset($dropoff_zipcode_data['postal_code']) ? $dropoff_zipcode_data['postal_code'] : ''; 
		$data['org_trasport']['drop_city'] 		= (isset($dropoff_city) && !empty($dropoff_city)) ? $dropoff_city : $dropoff_zipcode_data['city']; 
		$data['org_trasport']['drop_state'] 	= isset($dropoff_zipcode_data['state']) ? $dropoff_zipcode_data['state'] : ''; 
		$data['org_trasport']['drop_country'] 	= isset($dropoff_zipcode_data['country']) ? $dropoff_zipcode_data['country'] : '';
		$data['org_trasport']['st_to_street'] 	= ($this->input->post('drop_zip')) ? $this->input->post('drop_zip') : '';	
			
		$total_miles = '';				
		$origin 			= ($data['org_trasport']['pick_street']?$data['org_trasport']['pick_street'].", ":"").($data['org_trasport']['pick_city']?$data['org_trasport']['pick_city'].", ":"").($data['org_trasport']['pick_state']?$data['org_trasport']['pick_state']:"").($data['org_trasport']['pick_zip']?", ".$data['org_trasport']['pick_zip']:"");	
		$destinations 		= ($data['org_trasport']['drop_street']?$data['org_trasport']['drop_street'].", ":"").($data['org_trasport']['drop_city']?$data['org_trasport']['drop_city'].", ":"").($data['org_trasport']['drop_state']?$data['org_trasport']['drop_state']:"").($data['org_trasport']['drop_zip']?", ".$data['org_trasport']['drop_zip']:"");
		$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
		//echo "<pre>";print_r($routes_miles);die; 
		$transport_details = array(	"in_trans_coods_id"		=> $this->session->userdata('userid'), 
									"in_organization_id"	=> $this->session->userdata('org_id'),
									"st_trans_name"			=> $this->input->post('trans_unique_name'),
									"st_from_street"		=> trim($data['org_trasport']['st_from_street']),
									"st_from_city"			=> trim($data['org_trasport']['pick_city']),
									"st_from_state"			=> trim($data['org_trasport']['pick_state']),
									"st_from_zip"			=> trim($data['org_trasport']['pick_zip']),
									"st_from_country"		=> trim($data['org_trasport']['pick_country']),
									"st_to_street"			=> trim($data['org_trasport']['st_to_street']), 
									"st_to_city"			=> trim($data['org_trasport']['drop_city']),  
									"st_to_state"			=> trim($data['org_trasport']['drop_state']), 
									"st_to_zip"				=> trim($data['org_trasport']['drop_zip']),  
									"st_to_country"			=> trim($data['org_trasport']['drop_country']),
									"st_trans_type"			=> "D",
									"in_tot_distance"		=> $routes_miles['distance'],
									"in_created_by"			=> $this->session->userdata('userid'),
									"in_status"				=> "4",
									"in_deleted"			=> "0",
									"in_need_trans_monitor"	=> 0,
									"in_allow_pics" 		=> $this->input->post('allow_pics'),
									'stRecOrgNm'        	=> $this->input->post('receiving_organization_name'),
									'stRecNm'     			=> $this->input->post('receiving_contact_name'),
									'stRecEmail'    		=> $this->input->post('receiving_contact_email'),
									'stRphone'    			=> $this->input->post('receiving_contact_phone_no'),
									'stR501c3'    			=> $this->input->post('receiving_501c3_certified'),
									'stS501c3'    			=> $this->input->post('sending_c3_certified'),
									'stSendOrgNm'    		=> $this->input->post('organization_name'),
									'stSendNm'				=> $this->input->post('contact_name'),
								    'stSendEmail'    		=> $this->input->post('contact_email'),
								    'stSphone'    			=> $this->input->post('contact_phone_no'),
									'stAniStory'			=> $this->input->post('backstory'),
									'inSendOrgRunsheet'		=> $this->input->post('sendrunsheet_sending'),
									'inRecOrgRunsheet'		=> $this->input->post('sendrunsheet_receiving'),		
									'enable_routing_status'	=> 0,
									 'in_airline_transport'	=> 1,
									 'in_notify_tc_users'	=> 0,
									 'in_completed_steps'	=> 1,
									'in_fb_share'			=> $this->input->post('fb_publish')?$this->input->post('fb_publish'):'0',
											);					
				if($this->session->userdata('transport_id'))
				{	
					$transport_id = $this->session->userdata('transport_id');
					$transport_details["dt_modified"] = date('Y-m-d H:i:s');
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_details["dt_created"] = date("Y-m-d H:i;s");
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}
			
		echo $this->session->userdata('transport_id');
	}
	
		function add_route_transport()
		{
				$total_miles = '';
				$data = array();
				$org_participate_id = array();	
				$pickup_zipcode_data = explode(',',$this->input->post('pick_zip'));
				$pick_zip 	  = isset($pickup_zipcode_data[0]) ? $pickup_zipcode_data[0] : ''; 
				$pick_city 	  = isset($pickup_zipcode_data[1]) ? $pickup_zipcode_data[1] : ''; 
				$pick_state   = isset($pickup_zipcode_data[2]) ? $pickup_zipcode_data[2] : ''; 
				$pick_country = isset($pickup_zipcode_data[3]) ? $pickup_zipcode_data[3] : ''; 
			
				$dropoff_zipcode_data = explode(',',$this->input->post('drop_zip'));
				$drop_zip 	  = isset($dropoff_zipcode_data[0]) ? $dropoff_zipcode_data[0] : ''; 
				$drop_city    = isset($dropoff_zipcode_data[1]) ? $dropoff_zipcode_data[1] : ''; 
				$drop_state   = isset($dropoff_zipcode_data[2]) ? $dropoff_zipcode_data[2] : ''; 
				$drop_country = isset($dropoff_zipcode_data[3]) ? $dropoff_zipcode_data[3] : ''; 
		
				$origin 			= ($pick_city?$pick_city.", ":"").($pick_state?$pick_state:"").($pick_zip?", ".$pick_zip:"");	
				$destinations 		= ($drop_city?$drop_city.", ":"").($drop_state?$drop_state:"").($drop_zip?", ".$drop_zip:"");
				$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
				
				$start_date = '';
				$end_date = '';
				if($this->input->post('pickupselect'))
				{
					if($this->input->post('pickupselect_year'))
					{
						$start_date = date("Y-m-d", strtotime($this->input->post('pickupselect').' '.$this->input->post('pickupselect_year')));
					}	
				}
				if($this->input->post('dateselect'))
				{
					if($this->input->post('dateselect_year'))
					{
						$end_date = date("Y-m-d", strtotime($this->input->post('dateselect').' '.$this->input->post('dateselect_year')));
					}	
				}
				
				$transport_details = array(	"in_trans_coods_id"	 	     => $this->session->userdata('userid'), 
											"in_organization_id"	     => $this->input->post('org_id'),
											"st_trans_name"			     => $this->input->post('trans_unique_name'),
											"st_from_city"				 => trim($pick_city),
											"st_from_state"			     => trim($pick_state),
											"st_from_zip"			     => trim($pick_zip),
											"st_from_country"		     => trim($pick_country), 
											"st_to_city"				 => trim($drop_city),  
											"st_to_state"				 => trim($drop_state), 
											"st_to_zip"					 => trim($drop_zip),  
											"st_to_country"				 => trim($drop_country),
											"dt_pickup_date"			 => $start_date,
											"dt_target"				     => $end_date,
											"st_trans_type"				 => "RO",
											"in_tot_distance"		  	 => $routes_miles['distance'],
											"in_created_by"				 => $this->session->userdata('userid'),
											"dt_created"				 => date("Y-m-d H:i;s"),
											'dt_modified'       		 => date('Y-m-d H:i:s'),
											"in_status"					 => "4",/*Save as draft*/
											"in_deleted"				 => "0",
											"in_need_trans_monitor"		 => 0,
											"in_allow_pics" 			 => $this->input->post('allow_pics'),
											"in_approval"				 => $this->input->post('approval'),
											'in_completed_steps'		 => 1,
											'in_sms_notification'		 => $this->input->post('sms_notify')?$this->input->post('sms_notify'):'0',
											'in_fb_share'				 => $this->input->post('fb_publish')?$this->input->post('fb_publish'):'0',
											'in_route_notify_type'	 	 => $this->input->post('transport_type_notify')?$this->input->post('transport_type_notify') : 0,
											'st_private_type_notify' 	 => $this->input->post('private_notify_type')?$this->input->post('private_notify_type') :'',
											'in_transport_crate_vehicle' => $this->input->post('manage_vehicle')?$this->input->post('manage_vehicle') :'',	
											'st_sendOrg' 				 => $this->input->post('st_sendOrg')?$this->input->post('st_sendOrg'):'',
											'st_sendStreet'				 => $this->input->post('st_sendStreet')?$this->input->post('st_sendStreet'):'',
											'st_receiveOrg'				 => $this->input->post('st_receiveOrg')?$this->input->post('st_receiveOrg'):'',
											'st_receiveStreet' 			 => $this->input->post('st_receiveStreet')?$this->input->post('st_receiveStreet'):'',	
											'in_public_reservation'		 => $this->input->post('in_public_reservation')?$this->input->post('in_public_reservation'):0,
											'in_multiple_route'			 => $this->input->post('in_multiple_route')?$this->input->post('in_multiple_route'):0,
											);	
										
				if($this->session->userdata('transport_id'))
				{	
					$transport_id = $this->session->userdata('transport_id');
					$transport_details["dt_modified"] = date('Y-m-d H:i:s');
					$this->orgtrasnportation_model->update_transport_details($transport_details);
				} else {
					$transport_details["dt_created"] = date("Y-m-d H:i;s");
					$transport_id = $this->orgtrasnportation_model->add_transport($transport_details);
					$this->session->set_userdata('transport_id',$transport_id);	
				}
				
				
				
				$transport_crates = $this->orgtrasnportation_model->get_transport_crates($this->session->userdata('transport_id'));
		
				
					$qtyxs = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'XS',
									'in_crate_qty'		 => $this->input->post('qtyxs')?$this->input->post('qtyxs'):'0',
									'in_cost_public'	 => $this->input->post('qtyxs_cst_public'),
									'in_cost_private'    => $this->input->post('qtyxs_cst_private') ,
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
								
						if(count($transport_crates)>0 && isset($transport_crates['xs_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['xs_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyxs);
						} else {
							$qtyxs['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyxs);
						}										
				
				
				
					$qtys = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'S',
									'in_crate_qty'		 => $this->input->post('qtys')?$this->input->post('qtys'):'0',
									'in_cost_public'	 => $this->input->post('qtys_cst_public'),
									'in_cost_private'    => $this->input->post('qtys_cst_private'),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
						
						if(count($transport_crates)>0 && isset($transport_crates['s_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['s_crate_id']);
							$this->db->update('tbl_transport_crates',$qtys);
						} else {
							$qtys['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtys);
						}				
								
				
					$qtym = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'M',
									'in_crate_qty'		 => $this->input->post('qtym')?$this->input->post('qtym'):'0',
									'in_cost_public'	 => $this->input->post('qtym_cst_public'),
									'in_cost_private'    => $this->input->post('qtym_cst_private'),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
								  
						if(count($transport_crates)>0 && isset($transport_crates['m_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['m_crate_id']);
							$this->db->update('tbl_transport_crates',$qtym);
						} else {
							$qtym['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtym);
						}		
				
				
				
						$qtyl = array('in_transportation_id'=>$this->session->userdata('transport_id'),
											'st_crate_type' =>'L',
											 'in_crate_qty' => $this->input->post('qtyl')?$this->input->post('qtyl'):'0',
										   'in_cost_public'	=> $this->input->post('qtyl_cst_public'),
										  'in_cost_private' => $this->input->post('qtyl_cst_private'),
											  'dt_modified' => date("Y-m-d H:i;s"),
											    'in_deleted' => 0
 								  );
						
						if(count($transport_crates)>0 && isset($transport_crates['l_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['l_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyl);
						} else {
							$qtyl['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyl);
						}
						
				
				
					
					$qtyxl = array('in_transportation_id'=>$this->session->userdata('transport_id'),
									'st_crate_type'		 =>'XL',
									'in_crate_qty'		 => $this->input->post('qtyxl')?$this->input->post('qtyxl'):'0',
									'in_cost_public'	 => $this->input->post('qtyxl_cst_public'),
									'in_cost_private'    => $this->input->post('qtyxl_cst_private'),
									'dt_modified'		 => date("Y-m-d H:i;s"),
									'in_deleted'		 => 0
 								  );
								  
						if(count($transport_crates)>0 && isset($transport_crates['xl_crate_id']))
						{
							$this->db->where('in_crate_id',$transport_crates['xl_crate_id']);
							$this->db->update('tbl_transport_crates',$qtyxl);
						} else {
							$qtyl['dt_created'] = date("Y-m-d H:i;s");
							$this->db->insert('tbl_transport_crates',$qtyxl);
						}
						
						if($this->input->post('org_participate') &&  $this->session->userdata('transport_id'))
						{
							$org_participate_array = $this->input->post('org_participate');
							if(count($org_participate_array)>0)
							{	
								foreach($org_participate_array as $key=> $val)
								{
									$par_id = array();
									if($val['part_organization_id']!='' && $val['invitation_type']!='')
									{	
										if($val['invitation_id']!='')
										{
											$participants_org_array = array('in_transportation_id' => $this->session->userdata('transport_id'),
																			  'in_organization_id' => $val['part_organization_id'],
																			  'st_invitation_type' => $val['invitation_type'],
																					 'dt_modified' => date('Y-m-d H:i:s'),
																					  'in_deleted' => 0	
																			);
								
											$this->db->where('in_id',$val['invitation_id']);
											$this->db->update('tbl_org_transport_participate',$participants_org_array);
									
											$par_id = array('id'=>$val['participate_id'],'val'=>$val['invitation_id']);
											array_push($org_participate_id,$par_id);
									
										} else {
									
											$participants_org_array = array('in_transportation_id' => $this->session->userdata('transport_id'),
																			  'in_organization_id' => $val['part_organization_id'],
														                      'st_invitation_type' => $val['invitation_type'],
																			          'dt_created' => date('Y-m-d H:i:s'),
														                             'dt_modified' => date('Y-m-d H:i:s'),
														                              'in_deleted' => 0	
																			);
														  
											$this->db->insert('tbl_org_transport_participate',$participants_org_array);
											$participte_id = $this->db->insert_id();
									
											$par_id = array('id'=>$val['participate_id'],'val'=>$participte_id);
											array_push($org_participate_id,$par_id);
								
										}	
									}		
								}
							}
					
						}
						
					$data['org_participate_id'] = $org_participate_id;
					$data['transport_id']		= $this->session->userdata('transport_id');	
					echo json_encode($data);		
		}
	
	public function add_new_animal()
	{
		$animal_id     = 'animal_id';
		$animal_name   = 'animal_name';	
		$animal_type   = 'animal_type';
		$animal_breed  = 'animal_breed';
		$animal_gender = 'gender';
		$animal_travel = 'travelling_with';
		$animal_cvi	   = 'cvi';
		$animal_weight = 'animal_weight';
		$transport_animal = array();
					
		$atype='';
		if($this->input->post($animal_type))
		$atype = $this->input->post($animal_type);
					
		$abreed='';
		if($this->input->post($animal_breed))
		$abreed = $this->input->post($animal_breed);
					
		$agender='';
		if($this->input->post($animal_gender))
		{
			if($this->input->post($animal_gender)=='Male')
				$agender = 'M';
			else if($this->input->post($animal_gender)=='Female')
				$agender = 'F';
		}
					
		$atravel='';
		if($this->input->post($animal_travel))
		$atravel = implode(',',$_POST[$animal_travel]);
					
		$acvi ='';
		if($this->input->post($animal_cvi))	
			$acvi = $this->input->post($animal_cvi);
		else 
			$acvi = 'N';
				
		$aweight ='';
		if($this->input->post($animal_weight))
			$aweight = $this->input->post($animal_weight);
					
		$aanimalid = '';
		if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
				$aanimalid = $this->input->post($animal_id);
		else
				$aanimalid = '';
					
		if($this->input->post($animal_name))
		{
			$st_animal_name = $this->input->post($animal_name);
		} else {
			$st_animal_name = '';
		}
		
					
					if(isset($st_animal_name) && $st_animal_name != '')
					{
						
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$atype);
						
						$data['animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
													 'st_animal_name'		=>	$st_animal_name,
													 'st_gender'			=>	$agender,
													 'in_primary_breed_id'	=>	$abreed,	
													 'in_animal_type_id'     =>	$atype,
													 'st_travel_with'		=>	$atravel,
													 'st_cvi'				=>	$acvi,
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 //'st_city'				=>  $data['org_details']['st_city'],
												     //'st_state'				=>	$data['org_details']['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $aweight,
													 //'st_current_zip'		=>  trim($data['org_trasport']['pick_zip']),
													 //'st_desired_zip'  		=>  trim($data['org_trasport']['drop_zip'])
													);
				
					}						
						
						
						if(!empty($data['animal_info'])){
								if(isset($aanimalid) && !empty($aanimalid))
								{
									$animal_id = $aanimalid;
									$this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,'0');
									//$this->orgtrasnportation_model->update_animal_profile($data['animal_info'],$aanimalid,$animal_transportation_id,$this->session->userdata('transport_id'));	
								} else {	
									//$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],$this->session->userdata('transport_id'));
									$animal_id	= $this->orgtrasnportation_model->add_animal_profile($data['animal_info'],'0');	
								}		
							}
 					
		echo $animal_id;		
	}
	
	public function delete_old_transport()
	{
		$this->db->where('in_transportation_id',$this->input->post('ids'));
		$this->db->update('tbl_transportation',array('in_deleted'=>1));
	}
	
	public function test_org_user_detail()
	{
		$user_info_detail = $this->orgtrasnportation_model->order_userinfo_details('5296');
		echo "<pre>"; print_r($user_info_detail); echo "</pre>";
		die;
	}
	
	public function re_calc_legs_data()
	{
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$last_leg = $this->orgtrasnportation_model->get_last_leg_details($transport_details);
		$split_leg_detail = $this->orgtrasnportation_model->get_splitleg_info();
		if($last_leg['from_zip'] != $last_leg['to_zip'] && $split_leg_detail['in_completed_process']=='1')
		{
			//$start_location =  trim($last_leg['from_address']);
			//$end_location   =  trim($last_leg['to_address']);
			$start_time        = array();
			$end_time		   = array();
			$start_location    =  trim($last_leg['from_zip']);
			$end_location      =  trim($last_leg['to_zip']);
			$transPickupDt     =  $transport_details[0]['dt_pickup_date'];
			$start_time  	   =  unserialize($split_leg_detail['dt_start_time']);
			$end_time          =  unserialize($split_leg_detail['dt_end_time']);
			$splitMiles        =  trim($split_leg_detail['st_split_miles']);
			$handOver	       =  trim($split_leg_detail['st_in_bet_time']);
			
			$target_date	=  $transport_details[0]['dt_target'];
			
			if($start_time=='' || $start_time == 'b:0;')
			{
				$start_time[] =  $split_leg_detail['dt_start_time'];
			}
			
			if($end_time=='' || $end_time == 'b:0;')
			{
				$end_time[] =  $split_leg_detail['dt_end_time'];
			}
				
			if($last_leg['leg_type'] == 'O')
			{
				$int_date = date("Y-m-d",strtotime($last_leg['start_time']));
				$init_date = date('Y-m-d', strtotime($int_date."+1 day"));
				
				$date1				= date_create($transport_details[0]['dt_pickup_date']);
				$date2				= date_create($init_date);
				$transport_diff		= date_diff($date1,$date2);
				$d					= $transport_diff->days;
				if(array_key_exists($d,$start_time))
				{
					$day_start_time = $start_time[$d];
				} else {
					$day_start_time = $start_time[0];
				}		
				$init_date_time = $init_date.$day_start_time;
				$start_point_between = date('Y-m-d H:i:s',strtotime($init_date_time));
				//$start_point_between = $last_leg['start_time'];
			} else {
				if($split_leg_detail['st_in_bet_time']!='0' && $split_leg_detail['st_in_bet_time']!='')
				{	
					$int_date = date("Y-m-d",strtotime($last_leg['start_time']));
					$sec = $split_leg_detail['st_in_bet_time'];
					$min_utes = "+$sec minutes";
					$start_point_between = date('Y-m-d H:i:s',strtotime($min_utes,strtotime($last_leg['start_time'])));
					$date1				= date_create($transport_details[0]['dt_pickup_date']);
					$date2				= date_create($int_date);
					$transport_diff		= date_diff($date1,$date2);
					$d					= $transport_diff->days;
					//$start_point_between = $last_leg['start_time'];
				} else {
					$start_point_between = $last_leg['start_time'];
					$int_date 			= date("Y-m-d",strtotime($last_leg['start_time']));
					$date1				= date_create($transport_details[0]['dt_pickup_date']);
					$date2				= date_create($int_date);
					$transport_diff		= date_diff($date1,$date2);
					$d					= $transport_diff->days;
				}	
			}
			
			$legs_data = $this->calc_legs_data($start_location,$end_location,$transPickupDt,$start_time,$end_time,$splitMiles,$handOver,$start_point_between,$d);
			$this->orgtrasnportation_model->create_split_leg($legs_data,$this->session->userdata('transport_id'),$target_date);
		} else {
			echo "success";
		}	
	}
	
	public function send_mail_to_tc() 
	{
		$sender_name = $this->input->post('user_name');
        $sender_email_address = $this->input->post('email_address');
		$msg = nl2br($this->input->post('contactmessage'));
		$transport_id = $this->input->post('transport_id');
		$contact_email = $this->input->post('contact_email');
        $contact_name = $this->input->post('contact_name');
		
		$this->load->library('email');
        $email_details = $this->common_model->get_email_containt("62");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $templete = str_replace("##user_name##",$contact_name  , $templete);
            $templete = str_replace("##sender_name##", $sender_name , $templete);
			$templete = str_replace("##DONATION##", $donation , $templete);
			$templete = str_replace("##message##", $msg, $templete);
			$templete =	str_replace("##transport_id##","DBT".$transport_id, $templete); 
            $templete = str_replace("##sender_email##",  $sender_email_address , $templete);
            $templete = str_replace("##current_year##", date('Y'), $templete);
            $strMail = $templete;
            $to = $contact_email;
			//$to = 'nirav.motta@pulsesolutions.net';
            $subject = $email_details[0]['st_email_subject'];
			$subject = str_replace('##sender_name##', $sender_name,$subject); 
			$category = $email_details[0]['st_category'];
		   // $subject = 'Contact Request From: ' . $this->session->userdata('user_name');
            $message = $strMail;
			
			
			$user_to_id = $this->common_model->get_user_id_by_email($to);
						
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_details[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
		 		$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('from_name'),$this->email,$category);
			}
			
			$data['success'] = 1;
			echo json_encode($data);
		}
	}
	
	public function delete_animal()
	{
		$result = '0';
			if($this->input->post('animal_image'))
			{
				$animal_arr = array(
					'in_deleted' => 1,
					'dt_modified'=>date('Y-m-d H:i:s')
					);
				
				$result = $this->orgtrasnportation_model->update_animal_transport($animal_arr, $this->input->post('animal_image'));							
			}
		echo json_encode($result);	
	}


	/*public function delete_animal(){
		$imgname = $this->input->post('animal_image');		
		
		for($i = 0; $i<=count($imgname);$i++){
			if($imgname[$i]!='')
			{
				$animal_arr = array(
					'in_deleted' => 1,
					'dt_modified'=>date('Y-m-d H:i:s')
					);
				
				$result = $this->orgtrasnportation_model->update_animal_transport($animal_arr, $imgname[$i]);							
			}
		}
		echo json_encode($result);	
	}*/

	public function add_new_route_animal(){
		$animalArr = array();
		if($this->session->userdata('verify') == ''){
			$code	=	mt_rand(100000,999999);				
			$this->session->set_userdata('verify',$code);
		}else{
			$code = $this->session->userdata('verify');			
		}

		if($this->input->post('ord_id')){
			$order_id = $this->input->post('ord_id');
		}

		$animal_id     = 'animal_id';
		$animal_name   = 'animal_name';	
		$animal_type   = 'animal_type';
		$animal_breed  = 'animal_breed';
		$animal_gender = 'gender';
		$animal_travel = 'travelling_with';
		$animal_cvi	   = 'cvi';
		$animal_weight = 'animal_weight';
		$in_ord_trans_id = 'in_ord_trans_id';
		$in_animal_id = 'in_animal_id';
		$animal_pic = 'animal_pic';
		$transport_animal = array();
					
		$atype='';
		if($this->input->post($animal_type))
		$atype = $this->input->post($animal_type);
					
		$abreed='';
		if($this->input->post($animal_breed))
		$abreed = $this->input->post($animal_breed);
					
		$agender='';
		if($this->input->post($animal_gender))
		{
			if($this->input->post($animal_gender)=='Male')
				$agender = 'M';
			else if($this->input->post($animal_gender)=='Female')
				$agender = 'F';
			else if($this->input->post($animal_gender)=='Unknown')
				$agender = 'U';
		}
					
		$atravel='';
		if($this->input->post($animal_travel))
		$atravel = implode(',',$_POST[$animal_travel]);
					
		$acvi ='';
		if($this->input->post($animal_cvi))	
			$acvi = $this->input->post($animal_cvi);
		else 
			$acvi = 'N';
				
		$aweight ='';
		if($this->input->post($animal_weight))
			$aweight = $this->input->post($animal_weight);
					
		$aanimalid = '';
		if($this->input->post($animal_id) && $this->input->post($animal_id)!=0)
				$aanimalid = $this->input->post($animal_id);
		else
				$aanimalid = '';
					
		if($this->input->post($animal_name))
		{
			$st_animal_name = $this->input->post($animal_name);
		} else {
			$st_animal_name = '';
		}
		
		$ain_ord_trans_id='';
		if($this->input->post($in_ord_trans_id))
		$ain_ord_trans_id = $this->input->post($in_ord_trans_id);

		$ain_animal_id='';
		if($this->input->post($in_animal_id))
		$ain_animal_id = $this->input->post($in_animal_id);

		$aanimal_pic='';
		if($this->input->post($animal_pic))
		$aanimal_pic = $this->input->post($animal_pic);


					
		if(isset($st_animal_name) && $st_animal_name != '')
		{
			
			$demid	= $this->organimal_model->chk_demeanor('Unknown',$atype);

			if($this->input->post('ord_id')){
				$in_ord_trans_id = $order_id."_".$ain_ord_trans_id;
			}else{
				$in_ord_trans_id = $code."/".$ain_ord_trans_id;
			}

			
			$data['animal_info'] = array(
										
										'in_ord_trans_id' 		=> $in_ord_trans_id,
										'in_animal_id' 			=> $ain_animal_id,
										//'in_organization_id'	=>	$this->session->userdata('org_id'),
										'st_animal_name'		=>	$st_animal_name,
										'st_gender'				=>	$agender,
										'in_animal_type_id'     =>	$atype,
										'in_breed_id'			=>	$abreed,
										'in_weight'				=>  $aweight,													 
										'st_travel_with'		=>	$atravel,
										'st_cvi'				=>	$acvi,													
									    'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
									    'st_animal_photo' 		=>  $aanimal_pic,
										'dt_created'			=>  date('Y-m-d H:i:s')													
										);	
								$id =	$in_ord_trans_id;	
	
			
		
			if(!empty($data['animal_info'])){
				$route_animal_id[]	= $this->route_animal_model->add_animal_profile($data['animal_info']);			
			}
			$animalArr = $this->animal_by_inRouteAnimalId($id);		
			echo json_encode($animalArr);
 		}		
	}

	public function get_animal_by_id(){
		$animalArr = array();
		
		if($this->session->userdata('verify') == ''){
			$code	=	mt_rand(100000,999999);				
			$this->session->set_userdata('verify',$code);
		}else{
			$code = $this->session->userdata('verify');			
		}	
	
		$route_animal_id =array();
		$animalId = $this->input->post('in_animal_id');
		$animal_id = array_unique($animalId);
		$in_ord_trans_id = $this->input->post('in_ord_trans_id');
		
		//$animal_id = array();
		$acount = count($animal_id);
		
		for($i=0; $i<$acount; $i++){
			$animal_data = $this->organimal_model->get_animal_by_id($animal_id[$i]);

			$animal_data[0]['dt_created'] = date('Y-m-d H:i:s');
			$animal_data[0]['in_ord_trans_id'] = $code."/".$in_ord_trans_id;
			$animal_arr = $animal_data[0];
			$id = $animal_data[0]['in_ord_trans_id'];
			if(!empty($animal_arr)){
				$route_animal_id[]	= $this->route_animal_model->add_animal_profile($animal_arr);			
			
			}
		}	

		$animalArr = $this->animal_by_inRouteAnimalId($id);		
		echo json_encode($animalArr);
		
	}
	
	public function auto_split_transport_legs()
	{
		$transport_id = $this->input->post('transport_id');
		$legs_data = array();
		
		$start_time_array  =  array();
		$end_time_array    =  array();
		$start_time        = array();
		$end_time          = array();
		
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($transport_id);

		$start_location 	=  trim($transport_details[0]['st_from_zip']);
		$end_location   	=  trim($transport_details[0]['st_to_zip']);
		$transPickupDt  	=  $transport_details[0]['dt_pickup_date'];
		$start_time_array   =  $this->input->post('form_timepicker1');
		$end_time_array     =  $this->input->post('form_timepicker2');
		$splitMiles     	=  trim($this->input->post('form_distance_duration'));
		$handOver	    	=  trim($this->input->post('form_handoff_time'));
		
		$default_split_val = trim($this->input->post('form_distance_duration'));
		$target_date	=  $transport_details[0]['dt_target'];
		$handoff_time = trim($this->input->post('form_handoff_time'));
		
		foreach($start_time_array as $key=>$value)
		{
			array_push($start_time,date("H:i:s",strtotime($value)));
		}
		
		foreach($end_time_array as $key=>$value)
		{
			array_push($end_time,date("H:i:s",strtotime($value)));
		}
				
		$legs_data = $this->calc_legs_data($start_location,$end_location,$transPickupDt,$start_time,$end_time,$splitMiles,$handOver);
		if(count($legs_data)>0)
		{	
			$this->orgtrasnportation_model->delete_all_legs_trans($transport_id);
			$this->orgtrasnportation_model->create_split_leg($legs_data,$transport_id,$target_date);
			echo json_encode(1);
		} else {
			echo json_encode(0);
		}		
		
	}


	public function delete_route_animals(){
		$animalArr = array();
		$route_animal_id = $this->input->post('route_animal_id');
		$route_animal_arr = array(
			'in_deleted' 	=> 1,
			'dt_modified' 	=>  date('Y-m-d H:i:s')
			);

		$result = $this->route_animal_model->update_route_animal($route_animal_arr, $route_animal_id);
		if($result){
			$animalArr = $this->animal_by_inRouteAnimalId();					
			echo json_encode($animalArr);
		}
	}


	public function animal_by_inRouteAnimalId($id){			
		if($id){			
			$Animalarr =  $this->route_animal_model->route_animal_byOrderid($id);								
		}		
		$finalArr = $Animalarr;
		return $finalArr;
	}

	public function get_org_paypal()
	{
		$paypal_email = 'no_paypal';
		$org_id = $this->input->post('org_id');
		$org_details  = $this->common_model->get_single_org_details($org_id);
		if(count($org_details)>0 && isset($org_details['st_paypal_email']) && $org_details['st_paypal_email']!='' )
		{
			$paypal_email = $org_details['st_paypal_email'];
		}
		echo $paypal_email;	
	}
	
	public function update_org_paypal()
	{
		$paypal_email_add = $this->input->post('paypal_emailid');
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$this->db->update('tbl_organization',array('st_paypal_email'=>$paypal_email_add));
		echo json_encode(1);
	}
	
	function retrive_user_profile_data()
	{
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$profile_info = $user_details[0];
		$arrVehicle = array();
		$arrPlane 	= array();
		$route_type = $this->input->post('route_type');
		if($route_type=='0')
		{	
			$arrVehicle = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
		}
		if($route_type=='1')
		{	
			$arrPlane = $this->user_model->get_plane_detail($this->session->userdata('userid'));
		}	
		$user_detail = array('in_user_id'=>$profile_info['in_user_id'],'st_display_name'=>$profile_info['st_display_name'],'st_last_name'=>$profile_info['st_last_name'],'st_email'=>$profile_info['st_email'],'st_phone_number'=>$profile_info['st_primary_phone'],'number_verified'=>$profile_info['in_number_verified']); 
		//echo "<pre>"; print_r()
		
		$data['user_detail'] = $user_detail;
		if($route_type=='0')
		{	
			$data['vehicle_type'] = $this->common_model->get_vehicle_types();
		}
		if($route_type=='1')
		{	
			$data['plane_type'] = $this->common_model->get_plane_types();
		}
		if($route_type=='3')
		{
			$data['airline']	 = $this->common_model->get_airline();
			$data['airbase']	 = $this->common_model->get_base_airport();
			$data['airline_emp'] = $this->common_model->get_airline_profile($this->session->userdata('userid')); 
		}		
		if(isset($arrVehicle)&& count($arrVehicle)>0)
		{	
			 $data['user_vehicle'] =  array('in_vehicle_id'=>$arrVehicle[0]['in_vehicle_id'],'vehicle_type'=>$arrVehicle[0]['st_vehicle_type'],'license_plate'=>$arrVehicle[0]['st_vehicle_license_plate'],'vehicle_color'=>$arrVehicle[0]['st_vehicle_color']);
		}
		if(isset($arrPlane)&& count($arrPlane)>0)
		{	
			 $data['user_plane'] =  array('in_vehicle_id'=>$arrPlane[0]['in_pilot_id'],'vehicle_type'=>$arrPlane[0]['st_plane_type'],'license_plate'=>$arrPlane[0]['st_plane_number'],'plane_color'=>$arrPlane[0]['st_plane_color']);
		}			
		echo json_encode($data);	
	}
	
	public function send_test_sms(){
		$userid	=	$this->session->userdata('userid');
		$sid	=	$this->session->userdata('__ci_last_regenerate');
		$code	=	mt_rand(100000,999999);
		$to		=	$this->input->post('number');

		//$to = '(915) 213-9418';

		$verify =	$sid."/".$code;
		$this->session->set_userdata('verify',$verify);
		$this->session->set_userdata('number',$to);
		//$userdetails = $this->common_model->user_profile($userid);
		/*if($this->input->post('check')== "No"){
			$resultdata = $this->user_model->sendsms1($code,$to);
			if($resultdata == true){
				$result = true;
			}else{
				$result = false;
			}
		}else if($to == $userdetails['st_primary_phone'] ){
				// echo "<pre>$code==="; print_r($to); echo "</pre>"; exit;
				*/
				
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$postal_code = '';
		$country_type = trim($user_details[0]['st_country']);
		if($country_type=='USA' || $country_type=='US')
		{
							$postal_code = '+1';
		} else if($country_type=='CANADA' || $country_type=='CA')
		{
							$postal_code = '+1';
		} else if($country_type=='INDIA' || $country_type=='IN')
		{
							$postal_code = '+91';
		}  
		
		if($postal_code == '')
		{
			$user_country = $this->common_model->getaddress($this->session->userdata('zip'));
			$country_code = trim($user_country['st_country']);
			if($country_code =='CA' || $country_code=='US')
			{
							$postal_code = '+1';
			} else if($country_code =='IN')
			{
							$postal_code = '+91';
			}		
		}		

		$resultdata = $this->user_model->sendtext($code,$to,$postal_code);
		//$resultdata = $this->user_model->sendtext($code,$to,$userdetails['st_email']);
		
		
			
		
		//$result = true;
		echo json_encode($resultdata);
		exit;

	}
	
	public function check_sms_code()
	{		
			$verification = $this->input->post('verification_code');
			$verify_arr = explode("/", $this->session->userdata('verify'));
			$session_id = $this->session->userdata('__ci_last_regenerate');
			$code = $verify_arr[1];
			$sid = $verify_arr[0];
			$userid = $this->session->userdata('userid');
			// echo "<pre>";print_r($this->session->userdata());
			// echo $verification;
			if($session_id == $sid && $verification == $code){
				$userarr = array(
					'in_number_verified' => 1,
					'st_primary_phone' => $this->session->userdata('number'),
					'dt_modified' =>date('Y-m-d H:i:s')
					);
				$result = $this->user_model->update_user_profile($userarr, $userid);				
				if($result){
					$this->session->unset_userdata('verify');
					$this->session->unset_userdata('number');
					$result = true;
				}
			}else{
				//echo "else";
				$result = false;
			}
			//exit;
			echo json_encode($result);
	}
	
	public function sort_leg_date()
	{
		$this->session->set_userdata('transport_id','6587');
		$this->orgtrasnportation_model->sort_leg_date();
	}
	
	public function get_resucestore_template()
	{
			$resuce_template = '';
			$resuce_store = $this->common_model->get_resuce_store();
			if(count($resuce_store)>0)
			{	
									$resuce_template = $this->common_model->resuce_store_template($resuce_store);
			}
			echo $resuce_template;
	}
	
	public function test_ride_mail()
	{
		$this->cron_model->get_near_by_transportride_users('6424');
	}
	
	public function test_publish_facebook_image()
	{
		$this->session->set_userdata('transport_id','6792');
		$tra_id = '6792';
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$this->session->set_userdata('org_id','1341');
		$transport_info 		= (isset($transport_details['0']))?$transport_details['0']:"";	
		$main_image = 'transportfbimage_DBT6792_1742404790.jpg';		
		echo $main_image;
		echo "</br>";	
		echo base_url()."upload/fb_transport_share/".$main_image;
		echo "</br>";

				$this->load->library('facebook');
				$facebook = new Facebook(array(
				  'appId'  => '583989315385497',
				  'secret' => '16db615a5e6adaaef4c7c3f988b5b510',
				  'cookie' => true
				));
				$group_id = '668444446839315';
				$fb_access_token = 'EAAITIpuyOJkBAO96YAy1rgnYY9bZA4yv2XsYXVZBZBX0EjUhlfsNI03GmOMf7kRXjfQ0CxolY0ZADJIxj3EjklDE9fjtotvUF6k8rJYxwd5r6k4BmGKNu4nWQSVSUfVP8kiOouaZCDvaJbXzASZC2N1TuJdXMphPjR07imwJsYPz6DCSOZAZBAGULYQmLnLq5ORgOpznrPD56wZDZD'; 
						
					$publish = $facebook->api('/'.$group_id.'/feed', 'post',
								array(
								'scrape'=>'true',
								'access_token' => $fb_access_token,
								'message'=> 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id'],
								'link' => base_url()."org-transportation-scheduled/".$transport_info['in_transportation_id']."/",
								//'link' => 'apps.facebook.com/doobert-rescue/?fb_appcenter=1',
								'picture' => base_url()."upload/fb_transport_share/".$main_image,
								'description' => 'DOOBERT - Transportation #DBT '.$transport_info['in_transportation_id']
								));
		echo "<pre>"; print_r($publish); echo "</pre>";						
	}	
	
	
	
	
	
	
	
	function get_legs_test($page=false)
	{
		$tra_id					= '6970';
		if($tra_id=='')
		{
			die;
		}
		$leg_details 				= $this->orgtrasnportation_model->get_trans_legs_join_user();
		//echo '<pre>'; print_r($leg_details); die;
		$i=1;
		$legs_details = array();
		$legs_details2 = array();
		$dist_new = '0';
		if(!empty($leg_details))
		{
			//echo count($leg_details);die;
			
			//code added by ghanshyam to remove overnight legs from array starts
			/*foreach($leg_details as $leg_key=>$leg_value)
			{
				if($leg_value['route_type_id'] == 2)
				{
					unset($leg_details[$leg_key]);
				}
			}*/
			//print_r($leg_details); exit;
			//code added by ghanshyam to remove overnight legs from array ends
			
			//echo '<pre>';print_r($leg_details);die;
			if(count($leg_details)>0)
			{		 
				$leg_details = array_values($leg_details);	
				
				$legs_count = (count($leg_details))/8;
				$pages_count =  ceil($legs_count);
				$q=0;
				$dist_new = 0;
				$ar_legs_value = array_values($leg_details);
				$way_points  = '';
				//for($m=1;$m<=$pages_count;$m++)
				/*if($page)
				{
					$m = $page;
					$next_loop = 7*$page;
					$first_loop = (($next_loop - 7)+1);
				}
				else
				{
					$m = 1;
					$next_loop = 7;
					$first_loop = 0;
				}
				//echo $m;die;
					if($m==1)
					{
						$next_loop = 7;
						$first_loop = 0;
					}
					else
					{
						$first_loop = $first_loop;
						$next_loop = ($next_loop*$m)<count($ar_legs_value)?($next_loop*$m):(count($ar_legs_value)-1);	
					}
					//echo $first_loop."==".$next_loop."<br>";die;*/
					$way_points	=	'';
					//for($a=$first_loop;$a<=$next_loop;$a++)
					//echo "<pre>";print_r($ar_legs_value);die;
					for($a=0;$a<count($ar_legs_value);$a++)
					{	
					    if(isset($ar_legs_value[$a]['pick_zip']) && isset($ar_legs_value[$a]['drop_zip']) && $ar_legs_value[$a]['pick_zip'] != '' && $ar_legs_value[$a]['drop_zip'] != ''){	
							if($ar_legs_value[$a]['pick_zip']!=$ar_legs_value[$a]['drop_zip'])	
							{
								$route_details = $this->orgtrasnportation_model->get_legs_path($ar_legs_value[$a]['leg_id']);
								//echo "<pre>";print_r($route_details);die;
								if(count($route_details)<=0)
								{								
									
								$origin_loc 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].", ":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].", ":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].", ":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ", ".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc 	= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].", ":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].", ":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$ar_legs_value[$a]['route_type_id']);	
								$legs	 		= $routes_miles['routes_lat_lon'];
								$dist_new 		= $dist_new+$routes_miles['distance'];
									if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
									{
										$route_details = array(	"in_transportation_leg_id"	=> $ar_legs_value[$a]['leg_id'],
																"in_transportation_id"		=> $this->session->userdata('transport_id'),
																"in_route_type"				=> $ar_legs_value[$a]['route_type_id'],
																"st_legs_details"			=> $routes_miles['route_path'],
																"fl_distance"				=> $routes_miles['distance'],
																"in_deleted"				=> "0"
										);	
										$this->common_model->insert_data("tbl_routes",$route_details);
									}
								}
								else
								{
									$legs	 		= $this->orgtrasnportation_model->decodePolylineToArray($route_details['st_legs_details']);
									if($route_details['in_route_type']=='1')
									{
										$legs = array($legs[0],$legs[(count($legs)-1)]);
									}
									//echo "<pre>";print_r($legs);die;
									$dist_new 		= $route_details['fl_distance'];
								}			
								
								$color = $this->common_function->color[$i];
								/*if($next_loop<$a){$color = "#c8bfe1";}
								elseif($first_loop>$a){$color = "#c8bfe1";}*/
								
								if($ar_legs_value[$a]['route_type_id']=='1')
								{
									//echo "<pre>";print_r($legs);die;
									if(empty($legs))
									{
										$pickup_airport = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['pick_street']);
										$dropoff_airport  = $this->orgtrasnportation_model->get_airport_details($ar_legs_value[$a]['drop_street']);
										$legs = array(array(isset($pickup_airport['st_latitude'])?$pickup_airport['st_latitude']:"0.00",isset($pickup_airport['st_longitude'])?$pickup_airport['st_longitude']:"0.00"),array(isset($dropoff_airport['st_latitude'])?$dropoff_airport['st_latitude']:"0.00",isset($dropoff_airport['st_longitude'])?$dropoff_airport['st_longitude']:"0.00"));
										//echo "<pre>";print_r($pickup_airport);print_r($dropoff_airport);
									}
									
								}
						}
						}
						else{
									$legs = array();
						}
							if(!empty($legs))
							{  
								$origin_loc1 		= ($ar_legs_value[$a]['pick_street'] ? $ar_legs_value[$a]['pick_street'].", ":"").($ar_legs_value[$a]['pick_city']? $ar_legs_value[$a]['pick_city'].", ":"").($ar_legs_value[$a]['pick_state'] ? $ar_legs_value[$a]['pick_state'].", ":"").($ar_legs_value[$a]['pick_zip'] ? $ar_legs_value[$a]['pick_zip']:"").($ar_legs_value[$a]['pick_country'] ? ", ".$ar_legs_value[$a]['pick_country']:"");
								$dest_loc1 	= ($ar_legs_value[$a]['drop_street'] ? $ar_legs_value[$a]['drop_street'].", ":"").($ar_legs_value[$a]['drop_city']? $ar_legs_value[$a]['drop_city'].", ":"").($ar_legs_value[$a]['drop_state'] ? $ar_legs_value[$a]['drop_state'].",":"").($ar_legs_value[$a]['drop_zip'] ? $ar_legs_value[$a]['drop_zip']:"").($ar_legs_value[$a]['drop_country'] ? ",".$ar_legs_value[$a]['drop_country']:"");
								
								$screen_name = $ar_legs_value[$a]['display_name'];
								$legparticipant_user_detail = $this->orgtrasnportation_model->legparticipant_user_detail($key);							
						        $screen_name = $legparticipant_user_detail['name'];
								
								if(!isset($screen_name) || $screen_name == '')
								{
									if(isset($ar_legs_value[$a]['non_doobert_leg_participant_details']) && !empty($ar_legs_value[$a]['non_doobert_leg_participant_details']))
									{
										$screen_name = $ar_legs_value[$a]['non_doobert_leg_participant_details'][0]['st_name'];									
									}
								}
								
								
								$legparticipant_user_detail = $this->orgtrasnportation_model->legparticipant_user_detail($ar_legs_value[$a]['leg_id']);								
								$legs_details[] = array("id"			=>	$ar_legs_value[$a]['leg_id'],
														"leg_points"	=>	$legs,
														"color"			=>	$color,
														//"user"			=> array("id"=>$ar_legs_value[$a]['user_id'],"screen_name"=>$ar_legs_value[$a]['display_name'],"gravatar_hash"=>md5(time()))
														//"user"			=> array("id"=>$ar_legs_value[$a]['user_id'],"screen_name"=>$screen_name,"gravatar_hash"=>md5(time())),
														"from_loc"		=> $origin_loc1,
														"to_loc"		=> $dest_loc1,
														"user"          => isset($legparticipant_user_detail['name'])?$legparticipant_user_detail['name']:''
													);
							}
											
							if($i==8)
							{  
								$i=1;
							}
							else
							{
								$i++;					
							}	
					} 
				
			}
			else
			{ 
				$all_nal = '';	
				//echo "<pre>";print_r($leg_details);die;
				foreach($leg_details as $key=>$value)
				{
	
						if($value['route_type_id'] == 2)
						{
							$value['pick_street'] = $value['st_street'];
							$value['pick_city'] = $value['st_city'];
							$value['pick_state'] = $value['st_state'];
							$value['pick_zip'] = $value['st_zip'];
							$value['pick_country'] = $value['st_country'];
							
							$value['drop_street'] = $value['st_street'];
							$value['drop_city'] = $value['st_city'];
							$value['drop_state'] = $value['st_state'];
							$value['drop_zip'] = $value['st_zip'];
							$value['drop_country'] = $value['st_country'];
						}
	
						if(($value['pick_street']!='' || $value['pick_city']!=''|| $value['pick_state']!='' || $value['pick_zip']!='') && ($value['drop_street']!='' || $value['drop_city']!=''|| $value['drop_state']!='' || $value['drop_zip']!=''))
						{
							$route_details = $this->orgtrasnportation_model->get_legs_path($value['leg_id']);
							//echo "<pre>";print_r($route_details);die;
							if(empty($route_details))
							{
								if($value['drop_zip']!=$value['pick_zip'])
								{
								$origin_loc 		= ($value['pick_street'] ? $value['pick_street'].", ":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].", ":"").($value['pick_zip'] ? $value['pick_zip'].", ":"").($value['pick_country'] ?$value['pick_country']:"");
								$dest_loc 	= ($value['drop_street'] ? $value['drop_street'].", ":"").($value['drop_city']? $value['drop_city'].", ":"").($value['drop_state'] ? $value['drop_state']. ",":"").($value['drop_zip'] ? $value['drop_zip'].", ":"").($value['drop_country'] ?$value['drop_country']:"");
								//$routes = $this->orgtrasnportation_model->get_routes($origin_loc,$dest_loc);
								$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc),"",$value['route_type_id']);
								//echo "<pre>";print_r($routes_miles);die;
								$legs	 		= $routes_miles['routes_lat_lon'];
								$dist_new 		= $dist_new+$routes_miles['distance'];
									if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
									{
										$route_details = array(	"in_transportation_leg_id"	=> $value['leg_id'],
																"in_transportation_id"		=> $this->session->userdata('transport_id'),
																"in_route_type"				=> $value['route_type_id'],
																"st_legs_details"			=> $routes_miles['route_path'],
																"fl_distance"				=> $routes_miles['distance'],
																"in_deleted"				=> "0"
										);	
										$this->common_model->insert_data("tbl_routes",$route_details);
									}
								}
								else
								{
									$legs = array();
								}
							}
							else
							{
								$legs	 		= $this->orgtrasnportation_model->decodePolylineToArray($route_details['st_legs_details']);
								if($route_details['in_route_type']=='1')
								{
									$legs = array($legs[0],$legs[(count($legs)-1)]);								
								}
								
								$dist_new 		= $route_details['fl_distance'];
							}
							
						}
						else
						{
							$legs = array();
						}
					
					if($value['route_type_id']=='1')
					{
						//echo "<pre>";print_r($legs);die;
						if(empty($legs))
						{
							//echo $value['pick_street'].",".$value['drop_street'];
							$pickup_airport = $this->orgtrasnportation_model->get_airport_details($value['pick_street']);
							$dropoff_airport  = $this->orgtrasnportation_model->get_airport_details($value['drop_street']);
							if(isset($pickup_airport['st_latitude']) && isset($pickup_airport['st_longitude']) && isset($dropoff_airport['st_longitude']) && isset($dropoff_airport['st_latitude']) )
							{
								$legs = array(array($pickup_airport['st_latitude'],$pickup_airport['st_longitude']),array($dropoff_airport['st_latitude'],$dropoff_airport['st_longitude']));
							}
							//echo "<pre>";print_r($legs);die;
						}
						
					}	
					$color = $this->common_function->color[$i];
					if(!empty($legs))
					{
						
						$origin_loc1 		= ($value['pick_street'] ? $value['pick_street'].", ":"").($value['pick_city']? $value['pick_city'].",":"").($value['pick_state'] ? $value['pick_state'].", ":"").($value['pick_zip'] ? $value['pick_zip'].", ":"").($value['pick_country'] ?$value['pick_country']:"");
						$dest_loc1 	= ($value['drop_street'] ? $value['drop_street'].", ":"").($value['drop_city']? $value['drop_city'].", ":"").($value['drop_state'] ? $value['drop_state']. ",":"").($value['drop_zip'] ? $value['drop_zip'].", ":"").($value['drop_country'] ?$value['drop_country']:"");
						$screen_name = $value['display_name'];
								
						if(!isset($screen_name) || $screen_name == '')
						{
							if(isset($value['non_doobert_leg_participant_details']) && !empty($value['non_doobert_leg_participant_details']))
							{
								$screen_name =  $value['non_doobert_leg_participant_details'][0]['st_name'];								
							}
						}
						
						
						$legparticipant_user_detail = $this->orgtrasnportation_model->legparticipant_user_detail($key);						
						$legs_details[] = array("id"			=>	$key,
												"leg_points"	=>	$legs,
												"color"			=>	$color,
												//"user"			=> array("id"=>$value['user_id'],"screen_name"=>$value['display_name'],"gravatar_hash"=>md5(time()))
												//"user"			=> array("id"=>$value['user_id'],"screen_name"=>$screen_name,"gravatar_hash"=>md5(time())),
												"from_loc"		=> $origin_loc1,
												"to_loc"		=> $dest_loc1,
												"user"          => $legparticipant_user_detail['st_display_name']
											);
					}
									
					if($i==8)
					{  
						$i=1;
					}
					else
					{
						$i++;					
					}
				}
			}
			
		}
		$user_profile_details = $this->common_function->get_user_profile($this->session->userdata('userid'));
		//echo "<pre>";print_r($user_profile_details);die;
		$details['st_driver'] = isset($user_profile_details['st_driver']) ? $user_profile_details['st_driver'] : '';
		$details['st_pilot'] = isset($user_profile_details['st_pilot']) ? $user_profile_details['st_pilot'] : '';
		
		$res = $this->orgtrasnportation_model->get_airport_details1($user_profile_details);
		
		//echo "<pre>";print_r($leg_details);die;
		
		$details['legs_details'] = $legs_details;
		//$details['airport'] = $res;
		$user_list = $this->orgtrasnportation_model->get_user_list();
		
		//code to display user list only within 100 miles of the route starts
		$transport_details 		= $this->orgtrasnportation_model->get_transport_details($tra_id);
		$transport_info 		= (isset($transport_details) && !empty($transport_details))?$transport_details['0']:"";	

		$details['transport_type'] =  $transport_info['st_trans_type'];

		$origin_loc = ((isset($transport_info['st_from_street'])?$transport_info['st_from_street'].", ":"").(isset($transport_info['st_from_city'])?$transport_info['st_from_city'].", ":"").(isset($transport_info['st_from_state'])?$transport_info['st_from_state']:"").(isset($transport_info['st_from_zip'])?", ".$transport_info['st_from_zip']:"").(isset($transport_info['st_from_country'])?", ".$transport_info['st_from_country']:""));
		$dest_loc 	= ((isset($transport_info['st_to_street'])?$transport_info['st_to_street'].",":"").(isset($transport_info['st_to_city'])?$transport_info['st_to_city'].", ":"").(isset($transport_info['st_to_state'])?$transport_info['st_to_state']:"").(isset($transport_info['st_to_zip'])?",".$transport_info['st_to_zip']:"").(isset($transport_info['st_to_country'])?",".$transport_info['st_to_country']:""));					
		
		$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin_loc),urlencode($dest_loc));
		$routes = $routes_miles['routes_lat_lon'];
		
		$routes_points_count  = count($routes);
		//echo '<pre/>';print_r($routes);
		//exit;
		
		//foreach users in the list if users lat long distance is less than or equal to 100 miles from any of the routes points lat long then 
		//return true else return false
		
		foreach($user_list as $u_key => $u_val)
		{
			$add_in_array = 0;
			for($i=0;$i<$routes_points_count;$i++)
			{
				if(isset($routes[$i]) && !empty($routes[$i]))
				{
					$dist = $this->haversineGreatCircleDistance($u_val['lat'],$u_val['lon'],$routes[$i][0],$routes[$i][1]);
					//echo '<pre/>';
					//echo 'distance between '.$u_val['lat'].' '.$u_val['lon'].' and '.$routes[$i][0].' '.$routes[$i][1].'is : '.$dist;
					if($dist <= 100)
					{
						//echo 'distance is: '.$dist; 	
						$add_in_array = 1;
						break; 
					}
				}
			}
			//echo 'add_in_array is:' . $add_in_array ;
			if($add_in_array == 0)
			{
				unset($user_list[$u_key]);	
			}
		}
		
		$user_list = array_values($user_list);
		
		//echo '<pre/>';print_r(array_values($user_list));
		//exit;
		//code to display user list only within 100 miles of the route ends
		
		$details['user_list'] 		= $user_list;
		//echo json_encode($legs_details);
		
		$overnight_legs = $this->orgtrasnportation_model->get_overnight_legs_detail_by_trans_id();
		$details['overnight_legs'] = $overnight_legs;
		echo '<pre>'; print_r($details); die;
		//echo json_encode($details);
		//echo json_encode($legs_details);
	}	

	//Rajashri Mahapure
	//function used to send transport organization sending/receiving Notification mails
	function send_receive_mail($transport_id='')
	{		
		
		$this->load->library('email');		
		$participants = $this->trasnportation_model->get_participant_byId($transport_id);		
		$transport_details 	= $this->orgtrasnportation_model->get_transport_details($transport_id);		
		$transport_org = $transport_details[0]['st_org_name'];
		$sending_city = $transport_details[0]['st_from_city'];
		$sending_two_digit_state = $transport_details[0]['st_from_state'];
		$destination_city	= $transport_details[0]['st_to_city'];
		$destination_two_digit_state	=$transport_details[0]['st_to_state'];
		$sending_date = $transport_details[0]['dt_pickup_date'];	
		if(count($participants) >0){			
			foreach ($participants as $pkey => $pvalue) {
			if($pvalue['in_mail_sent']==0)
			{	
				$in_participant_id = $pvalue['in_id'];
				$Sending_Organization_Name 	= $pvalue['st_org_name'];
				$userId = $pvalue['in_user_id'];
				$in_organization_id = $pvalue['in_organization_id'];
				$to				= $pvalue['st_email_address'];
				//$to = "rajashri.mahapure@pulsesolutions.net";
				if($pvalue['st_invitation_type'] == "sending")
				{
					$email_details = $this->common_model->get_email_containt("171");//sending organization					
				}
				else if($pvalue['st_invitation_type'] == "receiving")
				{
					$email_details = $this->common_model->get_email_containt("172");//receiving organization											
				}

				$accept_link = base_url().'user/participant_accept/'.$this->common_function->encode_base64($userId).'/'.$this->common_function->encode_base64($in_organization_id);
				$decline_link = base_url().'user/participant_decline/'.$this->common_function->encode_base64($userId).'/'.$this->common_function->encode_base64($in_organization_id);
				if (isset($email_details[0]['st_email_body']) && $pvalue['in_mail_sent'] == 0) 
				{
		            $templete = $email_details[0]['st_email_body'];	             
		            $templete = str_replace("##Sending_Organization_Name##", $Sending_Organization_Name , $templete);
		            $templete = str_replace("##transport_org##", $transport_org , $templete);
		            $templete = str_replace("##sending_city##", $sending_city , $templete);
		            $templete = str_replace("##sending_two_digit_state##", $sending_two_digit_state , $templete);
		            $templete = str_replace("##destination_city##", $destination_city , $templete);
		            $templete = str_replace("##destination_two_digit_state##", $destination_two_digit_state , $templete);
		            //$templete = str_replace("##sending_date##", $sending_date , $templete);
		            $templete = str_replace("##sending_date##", date('M d',strtotime($sending_date)) , $templete);
					$templete = str_replace("##message##", $msg , $templete);
		            $templete = str_replace("##sender_email##", $sender_email , $templete);
		            $templete = str_replace("##current_year##", date('Y'), $templete);
		            $templete = str_replace("##accept_link##", $accept_link, $templete);
		            $templete = str_replace("##decline_link##", $decline_link, $templete);
		            
		            $strMail = $templete;		            
		            $subject = $email_details[0]['st_email_subject'];
				    $subject = str_replace('##receiving_city##',$destination_city , $subject); 
				    $subject = str_replace('##receiving_two_digit_state##',$destination_two_digit_state , $subject);
				    $subject = str_replace('##sending_city##',$sending_city , $subject); 
				    $subject = str_replace('##sending_two_digit_state##',$sending_two_digit_state , $subject);
				    //$subject = str_replace('##sending_date##',$sending_date , $subject);
				    $subject = str_replace("##sending_date##", date('M d',strtotime($sending_date) ), $subject);
				    $subject = str_replace('##transport_org_##',$transport_org , $subject);
				  
		            $message = $strMail;
					$category = $email_details[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);
								
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userId).'/'.$this->common_function->encode_base64($to),$message);		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userId).'/'.$this->common_function->encode_base64($to),$message);							
					

					$send_email = 1;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}
						
					if($send_email == '1')
					{
				 		$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('from_name'),$this->email,$category='');
						
					}
						
				}

				$update_arr = array(
					'in_mail_sent'	=> 1,
					"dt_modified" 	=> date("Y-m-d H:i:s")
					);
				$this->trasnportation_model->update_participant_transport($in_participant_id , $update_arr);
			}
			}		
		}		
		
	}
	
	public function get_ride_address()
	{
		$google_api_key = $this->config->item('googleapi_key');
		$ride_post = urlencode($this->input->post('term'));
		//$ride_post = urlencode('Vince Lombardi Travel Plaza, NJ Tpke, Ridgefield, NJ 07657');
		//$url = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input='.$ride_post.'&inputtype=textquery&fields=formatted_address,geometry&key=AIzaSyC-U1Gx77CyoAQjvyNQ69LYU34J3GfTd5o&alternatives=false&sensor=false';	
		//$url = 'https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input='.$ride_post.'&inputtype=textquery&fields=formatted_address,geometry&key=AIzaSyC-U1Gx77CyoAQjvyNQ69LYU34J3GfTd5o&alternatives=false&sensor=false';
		$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$ride_post.'&key='.$google_api_key.'&alternatives=false&sensor=false';		
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$output = curl_exec($ch);
		curl_close($ch);
			
		$json = json_decode($output);
		$street_address = '';
		$postal_code = '';
		$state = '';
		$city = '';
		$country = '';
		if($json->status=="OK")
		{
			for($a=0;$a<count($json->results[0]->address_components);$a++)
			{
				if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='route')
				{
					$street_address = $json->results[0]->address_components[$a]->short_name;
				}
				if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='postal_code')
				{
					$postal_code = $json->results[0]->address_components[$a]->short_name;
				}
				if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='administrative_area_level_1')
				{
					$state = $json->results[0]->address_components[$a]->short_name;
				}
				if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='locality')
				{
					$city = $json->results[0]->address_components[$a]->short_name;
				}
				if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='country')
				{
					$country = $json->results[0]->address_components[$a]->short_name;
				}
			}
			$google_api =  array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country"=>$country,'street_address'=>$street_address,'status'=>'ok');
			
		} else {
			$google_api =  array("status"=>"failure");
		}		
		
		
		echo json_encode($google_api);			
	}
	
	
	
	function download_driver()
	{
		
		if(!($this->session->userdata('transport_id'))){
			  redirect($this->config->item('base_url'));
		}		
	
		$this->load->helper('mpdf');
		$data=array();		
		$data['user_name'] =  $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		
		//$get_total_crates = $this->common_model->get_total_crates($this->session->userdata('transport_id'));
		$data['adoptiondata'] 	= $this->common_model->get_animalBy_trans_org($this->session->userdata('transport_id'));
		//echo '<pre>'; print_r($data['adoptiondata']); die;
		$get_total_animals = count($data['adoptiondata']);	
		
		
		if($get_total_animals > 0){
		$data['scount'] = $data['adoptiondata'][$get_total_animals-1]['scount'];
		$data['mcount'] = $data['adoptiondata'][$get_total_animals-1]['mcount'];
		$data['lcount'] = $data['adoptiondata'][$get_total_animals-1]['lcount'];
		$data['xscount'] = $data['adoptiondata'][$get_total_animals-1]['xscount'];		
		$data['xlcount'] = $data['adoptiondata'][$get_total_animals-1]['xlcount'];
		$data['nocratecount'] = $data['adoptiondata'][$get_total_animals-1]['nocratecount'];
		}
		
				
		//echo '<pre>'; print_r($data['adoptiondata']); die;
		
		
		$data['transport_data'] = $transport_data; 	
		//$data['get_total_crates'] = $get_total_crates;
		$data['get_total_animals'] = $get_total_animals;	
		//echo '<pre>';print_r($data);die;
		$templete = $this->load->view('download_driver',$data,true);	
		$file_name = 'Driver.pdf';  
  		pdf_create($templete,$file_name,'transportation_runsheet');	
		
	}
	
	function download_transport_manifest()
	{
		$data= array();		
		$data['user_name'] =  $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));	

			//print_r($transport_data); die;		
		$data['participants'] = $this->trasnportation_model->get_participant_byId($this->session->userdata('transport_id'));		
		$data['transport_data'] = $transport_data;	
		$html=$this->load->view('download_transport_manifest',$data, true);
		
		$this->load->library('m_pdf'); 
		$pdf = $this->m_pdf->load();
		$pdf->showImageErrors = true;
		$stylesheet = '<style>'.file_get_contents('css/pdf.css').'</style>';		
		$pdfFilePath ="transport_manifest".time().".pdf";		
		$pdf->AddPage('L', // L - landscape, P - portrait
            '', '', '', '',
            30, // margin_left
            30, // margin right
            30, // margin top
            30, // margin bottom
            18, // margin header
            12);
		$pdf->WriteHTML($stylesheet,1);
		
		$pdf->WriteHTML($html,2);		
		$pdf->Output($pdfFilePath, "D");
		exit;		
		
	}
	
	/*
	function testpdf(){
		
		
		$data['user_name'] =  $this->session->userdata('user_name')." ".$this->session->userdata('last_name');
		$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		
		$get_total_crates = $this->common_model->get_total_crates($this->session->userdata('transport_id'));
		$data['adoptiondata'] 	= $this->common_model->get_animalBy_trans_org($this->session->userdata('transport_id'));		
		//echo '<pre>'; print_r($data['adoptiondata']); die;
		$get_total_animals = count($data['adoptiondata']);	
		
		$data['transport_data'] = $transport_data; 	
		$data['get_total_crates'] = $get_total_crates;
		$data['get_total_animals'] = $get_total_animals;
		
		$html=$this->load->view('download_driver',$data, true);
		$this->load->library('m_pdf'); 
		$pdf = $this->m_pdf->load();
		$pdf->showImageErrors = true;
		$stylesheet = '<style>'.file_get_contents('css/pdf.css').'</style>';		
		$pdfFilePath ="download_driver".time().".pdf";		
		$pdf->WriteHTML($stylesheet,1);
		
		$pdf->WriteHTML($html,2);
		print_r($html); die;		
		$pdf->Output($pdfFilePath, "D");
		exit;		
		
	}
	
	*/
	
}
//$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
//https://maps.googleapis.com/maps/api/geocode/json?address=KDEN%27&sensor=false&key=AIzaSyBTVY78XuqiUjblLjk4pWZiFrRTePjk2Sw

//https://maps.googleapis.com/maps/api/geocode/json?address=DEN&key=AIzaSyBTVY78XuqiUjblLjk4pWZiFrRTePjk2Sw&alternatives=false&sensor=false
//https://maps.googleapis.com/maps/api/geocode/json?address=KDEN&key=AIzaSyBTVY78XuqiUjblLjk4pWZiFrRTePjk2Sw&alternatives=false&sensor=false

/* End of file user.php */
/* Location: ./application/controllers/welcome.php */
