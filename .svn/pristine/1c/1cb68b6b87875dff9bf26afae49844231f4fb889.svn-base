<?php 

class wsdl_model extends CI_Model {

    function __construct() {
        // Call the Model constructor
        parent::__construct();
    }

    function index() {
        
    }

    function user_login($data) {
        $this->db->select("in_user_id,st_display_name,st_email,wsdl_token,st_profile_image");
        if (isset($data['facebook_id']) && $data['facebook_id'] != ''){
            $this->db->where(array("st_facebook_uid" => $data['facebook_id']));
		}
		elseif(isset($data['google_id']) && $data['google_id'] != ''){
			
			$this->db->where(array("st_google_uid" => $data['google_id']));
		}
        else{
            $this->db->where(array("st_email" => addslashes($data['email']), "st_password" => md5(htmlspecialchars_decode($data['password']))));			
		}
        $this->db->where("in_deleted", 0);
        $this->db->where("(in_status = 0 OR in_status = 1)");
        $query = $this->db->get("tbl_users");
        //echo $this->db->last_query();die;
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
				
				if (isset($Row->st_profile_image) && $Row->st_profile_image != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $Row->st_profile_image)) {
                $profile_image = $this->config->item('upload_url') . "profile/250x250/" . $Row->st_profile_image;
				} else {
					$profile_image = $this->config->item('upload_url') . "profile/250x250/no_photo_icon.png";
				}
				
                $arrData['user_details'] = array("userid" => $Row->in_user_id, "first_name" => $Row->st_display_name,"email" => $Row->st_email,"wsdl_token" => $Row->wsdl_token,"profile_image" => $profile_image);
            }

            // Generating Token
            $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
            $charactersLength = strlen($characters);
            $randomString = '';
            for ($i = 0; $i < 10; $i++) {
                $randomString .= $characters[rand(0, $charactersLength - 1)];
            }
            $token = $randomString . time();
            $insData = array('wsdl_token' => $token);

            $this->db->where('in_user_id', $arrData['user_details']['userid']);
            $this->db->update('tbl_users', $insData);

            $arrData['user_details']['wsdl_token'] = $token;

            return $arrData;
        }
    }

    # *******************************************************************************************	
    #	Function	:	get_user_details	
    #	Purpose		:	User profile details
    #   added u.st_password,st_last_name by ghanshyam on 26Nov2014
    #   added u.st_fb_first_name,st_fb_first_name by ghanshyam on 01Dec2014
    # *******************************************************************************************	

    public function get_user_details($id = '', $token = '') {
        $this->db->select('	pr.in_user_id,
							pr.st_address1, 
							pr.st_address2, 
							pr.st_city, 
							pr.st_state,
							pr.st_country, 
							pr.st_zip, 
							pr.st_time_zone,
							pr.st_primary_phone, 
							pr.st_secondary_phone, 
							pr.st_fax, 
							pr.st_website,
							pr.st_driver,
							pr.st_pilot,
							pr.st_fundraiser,
							pr.in_status,
							pr.st_about_me,
							u.st_display_name,
							u.st_last_name,
							u.st_email,
							u.in_public,
							u.st_password,
							u.st_facebook_uid,
							u.st_profile_image,
							u.st_fb_first_name,
							u.st_fb_last_name,
							u.in_pushnotification,
							vp.st_identifier,
							vp.st_pilot_zip,
							vp.in_pilot_id,
							vp.in_distance_to_pilot,
							uv.in_vehicle_id,
							a.st_longitude,
							a.st_latitude,
							a.st_iso_country,pr.st_photographer,pr.in_number_verified');
        $this->db->from("tbl_user_profile pr");
        $this->db->join("tbl_users u", "pr.in_user_id = u.in_user_id AND u.wsdl_token='" . $token . "'", "INNER");
        $this->db->join("tbl_user_pilot vp", "vp.in_user_id = u.in_user_id  AND vp.in_deleted='0'", "LEFT");
        $this->db->join("tbl_user_vehicle uv", "uv.in_user_id = u.in_user_id  AND uv.in_deleted='0'", "LEFT");
        $this->db->join("tbl_airport a", "a.st_loc_id = vp.st_identifier and a.in_deleted='0'", "LEFT");
        $this->db->where('pr.in_user_id', $id);
        $this->db->where('pr.in_deleted', 0);
        $this->db->where('pr.in_deleted', 0);
        $this->db->group_by('u.in_user_id');
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        return $query->result_array();
    }

    # *******************************************************************************************	

    public function get_user_details_by_email_id($email_id) {
        $this->db->select('in_user_id,st_display_name,st_last_name');
        $this->db->from('tbl_users');
        //$this->db->where('in_status', 1);
        $this->db->where('st_email', $email_id);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        return $query->row_array();
    }

    public function get_user_details_by_user_id($user_id) {
        $this->db->select('in_user_id,st_display_name,st_last_name,st_email');
        $this->db->from('tbl_users');
        //$this->db->where('in_status', 1);
        $this->db->where('in_user_id', $user_id);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        return $query->row_array();
    }

    public function get_user_data_by_fb_id($fbid = '') {
        $this->db->select('in_user_id,st_email');
        $this->db->from('tbl_users');
        $this->db->where("in_deleted", 0);
        $this->db->where("st_facebook_uid", $fbid);
        $query = $this->db->get();
        $user_data = array();
        if ($query->num_rows() > 0) {
            $user_data = $query->row_array();
        }
        return $user_data;
    }

    function get_transport_list($status, $date, $user_id) {

	/*
        $this->db->select("	tr.dt_target,
							tr.in_status,											
							tr.in_transportation_id,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,						
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.st_trans_type,
							tr.dt_pickup_date,
							tr.in_status,
							tr.st_trans_name,
							tr.in_trans_coods_id,
							tr.in_airline_transport,
							o.in_organization_id,
							o.st_org_name,
							o.st_org_code,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,tr.in_trans_coods_id", FALSE);
        $this->db->from("tbl_transportation tr");
        $this->db->join("tbl_transportation_participants p", "p.in_transportation_id = tr.in_transportation_id ", "LEFT");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "LEFT");


        $where = "";
      
        $where .= "tr.in_deleted = 0 AND  p.in_deleted = 0 AND p.in_user_id = " . $user_id;

        if ($status == '1') {
            $where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
        } else if ($status == '2') {
            $where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
        } else {
            $where .= " AND tr.in_status = '" . $status . "'";
        }


        $this->db->where($where);
        if (isset($date['from_date']) && !empty($date['from_date']) && isset($date['to_date']) && !empty($date['to_date'])) {
            $this->db->where('tr.dt_pickup_date >=', $date['from_date']);
            $this->db->where('tr.dt_pickup_date <=', $date['to_date']);
        }
        $this->db->group_by("tr.in_transportation_id");
        $this->db->order_by("tr.in_transportation_id", "DESC");      
        $query = $this->db->get();
        $arrData = array();       
        foreach ($query->result() as $Row) {
            $flgconfirm = '';
            if ($Row->in_status == '2') {
                $flgconfirm = '1';
            } else {
                $flgconfirm = '0';
            }
			
			
			$transport_animals = $this->get_transport_animals($Row->in_transportation_id);
			
			
            $arrData[] = array("dt_target" 						=> $Row->dt_target,
                				"in_transportation_id" 			=> $Row->in_transportation_id,
								"st_from_city" 					=> $Row->st_from_city,
								"st_from_state" 				=> $Row->st_from_state,
								"st_from_zip" 					=> $Row->st_from_zip,
								"st_to_state" 					=> $Row->st_to_state,
								"st_to_city" 					=> $Row->st_to_city,
								"st_to_zip" 					=> $Row->st_to_zip,
								"in_tot_distance" 				=> $Row->in_tot_distance,
								"in_distance_covered" 			=> $Row->in_distance_covered,
								"st_trans_type" 				=> $Row->st_trans_type,
								"dt_pickup_date" 				=> $Row->dt_pickup_date,
								"in_status" 					=> $Row->in_status,
								"flgIsTransportConfirmed" 		=> $flgconfirm,
								"perc" 							=> $Row->perc,
								"org_id"						=> $Row->in_organization_id,
								"org_name"						=> $Row->st_org_name,
								"st_transport_name"             => $Row->st_trans_name,
								"transport_airline"             => $Row->in_airline_transport,
								"in_animal_count"               => count($transport_animals),
								"st_org_code"					=> $Row->st_org_code,
								"cood_user_id"					=> $Row->in_trans_coods_id,
								"leg_detail"					=> $this->get_all_legs_detail($Row->in_transportation_id, $user_id)
            );
        }
        return $arrData;
		
		*/
		
		
		
		$sql =	"SELECT DISTINCT(tr.in_transportation_id),tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.st_trans_type,
							tr.st_trans_name,
							tr.in_status,
							tr.in_trans_coods_id,							
							tr.in_tot_distance,								
							tr.in_airline_transport,
							o.in_organization_id,
							o.st_org_name,							
							concat(tu.st_display_name,' ',tu.st_last_name) as co_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							tu.st_email,o.st_org_code 
							FROM `tbl_transportation` `tr`, 
							`tbl_users` `tu`,`tbl_transportation_participants` `p`,`tbl_organization` `o` 
							WHERE (`tu`.`in_user_id` = `tr`.`in_trans_coods_id` )";
		$where = '';
		$where .= "AND o.in_organization_id = tr.in_organization_id AND o.in_deleted = 0 AND tr.in_deleted = 0  AND ((`p`.`in_transportation_id` = `tr`.`in_transportation_id` AND tr.in_deleted = 0 AND p.in_deleted = 0 AND p.in_user_id = ".$user_id.")";
		$where .= "|| (`tr`.`in_trans_coods_id`= ".$user_id." ))";
		$where .= "AND (tr.st_trans_type != 'RO')";
		//$where .= " AND tr.in_deleted = 0 AND p.in_deleted = 0 AND p.in_user_id = ".$this->session->userdata('userid');
		
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		
		/*
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		*/
		//$sql	.=	$where." GROUP BY `tr`.`in_transportation_id` ORDER BY `tr`.`in_transportation_id` DESC";
		
		$sql	.=	$where." ORDER BY `tr`.`in_transportation_id` DESC";
		
		$query = $this->db->query($sql);
	//echo $this->db->last_query(); die;
		//$query1->result_array();
		
		foreach ($query->result() as $Row) {
			 $flgconfirm = '';
            if ($Row->in_status == '2') {
                $flgconfirm = '1';
            } else {
                $flgconfirm = '0';
            }
			$transport_animals = $this->get_transport_animals($Row->in_transportation_id);
			$arrData[] = array("dt_target" 						=> $Row->dt_target,
                				"in_transportation_id" 			=> $Row->in_transportation_id,
								"st_from_city" 					=> $Row->st_from_city,
								"st_from_state" 				=> $Row->st_from_state,
								"st_from_zip" 					=> $Row->st_from_zip,
								"st_to_state" 					=> $Row->st_to_state,
								"st_to_city" 					=> $Row->st_to_city,
								"st_to_zip" 					=> $Row->st_to_zip,
								"in_tot_distance" 				=> $Row->in_tot_distance,
								"in_distance_covered" 			=> $Row->in_distance_covered,
								"st_trans_type" 				=> $Row->st_trans_type,
								"dt_pickup_date" 				=> $Row->dt_pickup_date,
								"in_status" 					=> $Row->in_status,
								"flgIsTransportConfirmed" 		=> $flgconfirm,
								"perc" 							=> $Row->perc,
								"org_id"						=> $Row->in_organization_id,
								"org_name"						=> $Row->st_org_name,
								"st_transport_name"             => $Row->st_trans_name,
								"transport_airline"             => $Row->in_airline_transport,
								"in_animal_count"               => count($transport_animals),
								"st_org_code"					=> $Row->st_org_code,
								"cood_user_id"					=> $Row->in_trans_coods_id,
								"leg_detail"					=> $this->get_all_legs_detail($Row->in_transportation_id, $user_id)
            );
			
		}
		
		 return $arrData;
		
    }

    function get_all_legs_detail($transport_id, $user_id) {
        //SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
        $this->db->select('tr.in_status,tl.st_meeting_location,tl.in_transportation_leg_id,tl.in_transportation_id,tl.in_route_type,tl.in_created_by,tl.in_multi_user,tl.in_user_num,count(tp.in_tr_pr_id) as participants_cnt,(SELECT count(np.in_non_doobert_user_id) FROM tbl_non_doobert_transport_users np WHERE `np`.`in_leg_id`=`tl`.`in_transportation_leg_id` AND np.in_deleted = 0) as non_doobert_participants_cnt');
        $this->db->from('tbl_transportation_leg tl');
        $this->db->join('tbl_transportation_participants tp', 'tp.in_transportation_leg_id=tl.in_transportation_leg_id AND tp.in_deleted = 0', 'LEFT');
		$this->db->join('tbl_transportation tr', 'tr.in_transportation_id=tl.in_transportation_id AND tr.in_deleted = 0', 'LEFT');
        $this->db->where('tl.in_transportation_id', $transport_id);
        $this->db->where('tl.in_deleted', 0);
        $this->db->group_by('tl.in_transportation_leg_id');
		$this->db->order_by('tl.in_sort_order','ASC');
        /* if(isset($user_id) && $user_id != '')
          {
          $this->db->where('tl.in_created_by',$user_id);
          } */
        $query = $this->db->get();
       // echo $this->db->last_query();die;
        //return $query->result_array();		
        $arrData = array();
		//if($q['']){
        foreach ($query->result() as $Row) {

            // $needed_driver_count=($Row->in_user_num - $Row->participants_cnt);
            // if($needed_driver_count >= 1){ $flgIsDriverNeeded='1';}
            //else{$flgIsDriverNeeded='0';}
            $sqlprogressstatus = "SELECT st_street,st_city,st_state,st_country,st_timezone,dt_start_time FROM tbl_transportation_leg_detail  where in_transportation_leg_id = '" . $Row->in_transportation_leg_id . "'";
            $sqlprogressstat = $this->db->query($sqlprogressstatus);
            $prostatus = $sqlprogressstat->result();

            //echo count($prostatus); die;
			$fromstreet = isset($prostatus[0]->st_street) ? $prostatus[0]->st_street : '';
            $fromcity = isset($prostatus[0]->st_city) ? $prostatus[0]->st_city : '';
            $fromstate = isset($prostatus[0]->st_state) ? $prostatus[0]->st_state : '';
            $fromcountry = isset($prostatus[0]->st_country) ? $prostatus[0]->st_country : '';
			$fromtimezone = isset($prostatus[0]->st_timezone) ? $prostatus[0]->st_timezone : '';
			$fromstarttime = isset($prostatus[0]->dt_start_time) ? $prostatus[0]->dt_start_time : '';
            $tocity = isset($prostatus[1]->st_city) ? $prostatus[1]->st_city : '';
            $tostate = isset($prostatus[1]->st_state) ? $prostatus[1]->st_state : '';
            $tocountry = isset($prostatus[1]->st_country) ? $prostatus[1]->st_country : '';
			$totimezone = isset($prostatus[1]->st_timezone) ? $prostatus[1]->st_timezone : '';
			$tostarttime = isset($prostatus[1]->dt_start_time) ? $prostatus[1]->dt_start_time : '';




            if ($Row->in_multi_user == '0') {
                $needed_driver_count = 1; // because in_user_num = 0//actually 1 driver needed.
            } else {
                $needed_driver_count = $Row->in_user_num - ($Row->participants_cnt + $Row->non_doobert_participants_cnt);
            }
            $flgIsDriverNeeded = '';
            if ($needed_driver_count >= '1') {
                $flgIsDriverNeeded = '1';
            } else {
                $flgIsDriverNeeded = '0';
            }

			
			
			
            $arrData[] = array( "leg_id" 					=> $Row->in_transportation_leg_id,
								"in_transportation_id" 		=> $Row->in_transportation_id,
								"in_route_type" 			=> $Row->in_route_type,
								"in_created_by" 			=> $Row->in_created_by,
								"in_multi_user" 			=> $Row->in_multi_user,
								"in_user_num" 				=> $Row->in_user_num,
								"participants_cnt" 			=> $Row->participants_cnt + $Row->non_doobert_participants_cnt,
								"needed_driver_count" 		=> $needed_driver_count,
								"fromstreet"                => $fromstreet,
								"st_from_city" 				=> $fromcity,
								"st_from_state" 			=> $fromstate,
								"st_from_country" 			=> $fromcountry,
								"st_to_city" 				=> $tocity,
								"st_to_state" 				=> $tostate,
								"st_to_country" 			=> $tocountry,
								"in_status"				    => $Row->in_status,
								"flgIsDriverNeeded" 		=> $flgIsDriverNeeded,
								"start_time_zone" 			    => $fromtimezone,
								"end_time_zone" 			    => $totimezone,
								"start_time" 			=> date("D, M d",strtotime($fromstarttime)).' '.date("h:i A",strtotime($fromstarttime)),
								"end_time" 			    =>  date("D, M d",strtotime($tostarttime)).' '.date("h:i A",strtotime($tostarttime)),
								"meeting_location"          => $Row->st_meeting_location,
								"leg_participant"           =>  $this->get_leg_participants($Row->in_transportation_leg_id)
            );
        } 
		
        return $arrData;
    }
	
	
	
	function get_leg_participants($legid)
	{  
		$this->db->select('tp.in_user_id,pr.st_address1,pr.st_address2,u.st_email,pr.st_primary_phone,u.st_display_name,pr.st_city,pr.st_state,pr.st_zip');
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join('tbl_users u', 'u.in_user_id = tp.in_user_id AND u.in_deleted = 0', 'INNER');
		$this->db->join('tbl_user_profile pr', 'pr.in_user_id = tp.in_user_id AND tp.in_deleted = 0', 'INNER');
		$this->db->where('tp.in_transportation_leg_id',$legid);
		$this->db->where('tp.in_deleted',0);
		$this->db->group_by('tp.in_user_id');
		$query	= $this->db->get();
		//return $query->result_array();
		$arrData = array();
		foreach ($query->result() as $Row) {
			$arrData[] = array("in_user_id" => $Row->in_user_id,
			//"st_address1" => ($Row->st_address1 !='')?$Row->st_address1:'',
			//"st_address2" => ($Row->st_address2 !='')?$Row->st_address2:'',
			"st_address1" => $Row->st_city.','.$Row->st_state.', '.$Row->st_zip,
			"st_email" => $Row->st_email,
			"st_primary_phone" => ($Row->st_primary_phone !='')?$Row->st_primary_phone:'',
			"st_display_name" => $Row->st_display_name,
			
			);
		}
		return $arrData;
		
	}
	

    function get_legs_participants_details_by_leg_id($transport_id = '', $leg_id = '', $user_id = '') {
		
		//echo $transport_id.' '.$leg_id.'  '. $user_id; die;
        $this->db->select('COUNT(DISTINCT p.in_tr_pr_id) AS TotalRows,p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,p.in_photography_profile,concat(u.st_display_name," " ,u.st_last_name) as full_name,u.st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,pr.st_driver as pr_driver,pr.st_pilot as pr_pilot,pr.st_photographer as pr_photographer,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,ps.st_contact,ps.st_driver,lv.in_vehicle_id as leg_vehicle_id', FALSE);
        $this->db->from('tbl_transportation_participants p');
        $this->db->join('tbl_user_profile pr', 'pr.in_user_id = p.in_user_id AND p.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_users u', 'pr.in_user_id = u.in_user_id', 'LEFT');
        //$this->db->join('tbl_leg_vehicle_detail lv','lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = '.$leg_id.' AND lv.in_deleted = 0 AND lv.in_user_id="'.$user_id.'"','LEFT');
        $this->db->join('tbl_leg_vehicle_detail lv', 'lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = ' . $leg_id . ' AND lv.in_deleted = 0 ', 'LEFT');
        $this->db->join('tbl_user_vehicle v', 'v.in_user_id = u.in_user_id AND v.in_vehicle_id=lv.in_vehicle_id  AND v.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_user_pilot vp', 'vp.in_user_id = u.in_user_id AND vp.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_user_profile_setting ps', 'ps.in_user_id = u.in_user_id AND ps.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_vehicle_image vi', 'vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0', 'LEFT');

        $this->db->where('u.in_deleted', 0);
		$this->db->where('p.in_deleted', 0);
        $this->db->where('p.in_transportation_leg_id', $leg_id);
        $this->db->where('p.in_transportation_id', $transport_id);
		
        /* if(isset($user_id) && $user_id > 0)
          {
          $this->db->where('p.in_user_id',$user_id);
          } */
        $this->db->group_by('p.in_user_id');		
		//$this->db->group_by('p.in_photography_profile');
        $query = $this->db->get();

       // echo "<pre>";print_r($this->db->last_query());die;
        //return $query->result_array();
        $arrData = array();
        foreach ($query->result() as $Row) {


            if (isset($Row->st_contact) && @in_array('st_address1', @unserialize($Row->st_contact))) {
                $flgaddress = '1';
            } else {
                $flgaddress = '0';
            }
            if (isset($Row->st_contact) && @in_array('st_primary_phone', @unserialize($Row->st_contact))) {
                $flgphone = '1';
            } else {
                $flgphone = '0';
            }
            if (isset($Row->st_contact) && @in_array('st_email', @unserialize($Row->st_contact))) {
                $flgemail = '1';
            } else {
                $flgemail = '0';
            }
            if (isset($Row->st_contact) && @in_array('st_website', @unserialize($Row->st_contact))) {
                $flgwebsite = '1';
            } else {
                $flgwebsite = '0';
            }

            if (isset($Row->st_driver) && @in_array('st_driver_availability', @unserialize($Row->st_driver))) {
                $flgavl = '1';
            } else {
                $flgavl = '0';
            }
            if (isset($Row->st_driver) && @in_array('st_vehicle_type', @unserialize($Row->st_driver))) {
                $flgvehicletype = '1';
            } else {
                $flgvehicletype = '0';
            }
            if (isset($Row->st_driver) && @in_array('st_vehicle_color', @unserialize($Row->st_driver))) {
                $flgcolor = '1';
            } else {
                $flgcolor = '0';
            }
            if (isset($Row->st_driver) && @in_array('st_vehicle_license_plate', @unserialize($Row->st_driver))) {
                $flgplate = '1';
            } else {
                $flgplate = '0';
            }
            if (isset($Row->st_driver) && @in_array('st_vehicle_license_state', @unserialize($Row->st_driver))) {
                $flgstate = '1';
            } else {
                $flgstate = '0';
            }
            if (isset($Row->st_driver) && @in_array('in_distance_to_drive', @unserialize($Row->st_driver))) {
                $flgdistance = '1';
            } else {
                $flgdistance = '0';
            }

			
			
			
			


            $this->db->select('v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,ps.st_contact,ps.st_driver,lv.in_vehicle_id as leg_vehicle_id', FALSE);
            $this->db->from('tbl_transportation_participants p');
            $this->db->join('tbl_user_profile pr', 'pr.in_user_id = p.in_user_id AND p.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_users u', 'pr.in_user_id = u.in_user_id AND u.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_user_vehicle v', 'v.in_user_id = u.in_user_id AND v.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_user_pilot vp', 'vp.in_user_id = u.in_user_id AND vp.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_user_profile_setting ps', 'ps.in_user_id = u.in_user_id AND ps.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_vehicle_image vi', 'vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0', 'LEFT');
            $this->db->join('tbl_leg_vehicle_detail lv', 'lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = ' . $leg_id . ' AND lv.in_deleted = 0 AND lv.in_user_id="' . $Row->in_user_id . '"', 'LEFT');
            $this->db->where('p.in_deleted', 0);
            $this->db->where('p.in_transportation_leg_id', $leg_id);
            $this->db->where('p.in_transportation_id', $transport_id);

            //if(isset($user_id) && $user_id > 0)
            //{
            $this->db->where('p.in_user_id', $Row->in_user_id);
            //}
            $this->db->group_by('v.in_vehicle_id');
            $query1 = $this->db->get();

            //echo $this->db->last_query(); die;
            //echo "<pre>";print_r($this->db->last_query());die;
            $vehicleArr = $query1->result_array();


            $arrData[] = array("in_tr_pr_id" => $Row->in_tr_pr_id,
								"in_user_id" => $Row->in_user_id,
								"in_transportation_leg_id" => $Row->in_transportation_leg_id,
								"f_name" => $Row->st_display_name,
								"full_name" => $Row->full_name,
								"st_profile_image" => $Row->st_profile_image,
								"st_primary_phone" => $Row->st_primary_phone,
								"pr_st_address1" => $Row->pr_st_address1,
								"pr_st_city" => $Row->pr_st_city,
								"pr_st_state" => $Row->pr_st_state,
								"pr_st_zip" => $Row->pr_st_zip,
								"user_email" => $Row->user_email,
								"in_public" => $Row->in_public,
								"in_vehicle_id" => $Row->in_vehicle_id,
								"st_vehicle_type" => $Row->st_vehicle_type,
								"st_vehicle_color" => $Row->st_vehicle_color,
								"st_vehicle_license_plate" => $Row->st_vehicle_license_plate,
								"st_vehicle_license_state" => $Row->st_vehicle_license_state,
								"st_plane_type" => $Row->st_plane_type,
								"st_plane_color" => $Row->st_plane_color,
								"st_identifier" => $Row->st_identifier,
								"st_plane_number" => $Row->st_plane_number,
								"in_plane_ifr" => $Row->in_plane_ifr,
								'flgIspublic_profile' => $Row->in_public,
								'flgIsAddressVisible' => $flgaddress,
								'flgIsPhonenoVisible' => $flgphone,
								'flgIsEmailVisible' => $flgemail,
								'flgIsWebsiteVisible' => $flgwebsite,
								'flgIsAvailableDaysVisible' => $flgavl,
								'flgIsVehicleTypeVisible' => $flgvehicletype,
								'flgIsColorVisible' => $flgcolor,
								'flgIsLicensePlateVisible' => $flgplate,
								'flgIsLicenseStateVisible' => $flgstate,
								'flgIsDriveDistanceVisible' => $flgdistance,
								"leg_vehicle_id" => $Row->leg_vehicle_id,
								"flgisDriver" => (isset($Row->pr_driver) && $Row->pr_driver=='Y' && $Row->in_vehicle_id !='')? 1:0,
								"flgIsPilot" => (isset($Row->pr_pilot) && $Row->pr_pilot=='Y' && $Row->st_plane_type !='')? 1:0,			
								"flgIsPhotographer" => (isset($Row->pr_photographer) && $Row->pr_photographer=='Y')? 1:0,
								
								"in_photography_profile" => isset($Row->in_photography_profile)? $Row->in_photography_profile : 0,
								"TotalRows"   => $Row->TotalRows,
								"vehicle_list" => $vehicleArr				
            );
        }
        return $arrData;
    }

    public function get_legs_participants($leg_id, $user_id, $transport_id,$in_photography_profile) {
        $this->db->select("in_tr_pr_id");
        $where = array("in_deleted" => "0",
            "in_transportation_leg_id" => $leg_id,
            "in_transportation_id" => $transport_id,
			"in_photography_profile" => $in_photography_profile);
			
        $where['in_user_id'] = $user_id;
        $this->db->from("tbl_transportation_participants");
        $this->db->where($where);
        $query = $this->db->get();
        return $query->num_rows();
    }

    function leave_legs($leg_id, $transport_id, $user_id, $in_photography_profile) {
        $this->db->where('in_transportation_id', $transport_id);
        $this->db->where('in_user_id', $user_id);
        $this->db->where('in_transportation_leg_id', $leg_id);
		$this->db->where('in_photography_profile', $in_photography_profile);
        $this->db->update('tbl_transportation_participants', array("in_deleted" => "1"));
		//echo $this->db->last_query(); die;
    }

    function get_animal_details($transport_id) {
        $this->db->select('a.in_animal_id,a.st_animal_name,ab.st_animal_breed_name,af.st_file_name,at.st_animal_type_name', FALSE);
        $this->db->from('tbl_animal_transportation as tr');
		$this->db->join('tbl_animal as a','a.in_animal_id = tr.in_animal_id','INNER');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type at','at.in_animal_type_id = a.in_animal_type_id','INNER');			
		$this->db->join('tbl_animal_file af','af.in_animal_id = a.in_animal_id AND af.st_file_type="P" AND af.in_deleted="0" ','LEFT');		
		$this->db->where('tr.in_deleted',0);	
		$this->db->where('tr.in_transportation_id',$transport_id);	
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
        //echo $this->db->last_query(); die;       
		$arrData = array();
		$st_file_name='';

        foreach ($query->result() as $Row) {
			
			$st_file_name = $this->get_animal_photo($Row->in_animal_id);
			
            $arrData[] = array("animal_id" => $Row->in_animal_id,
                "animal_name" => $Row->st_animal_name,
                "animal_breed_name" => $Row->st_animal_breed_name,
                "category" => $Row->st_animal_type_name,
                "animal_icon" => ($st_file_name != '' && file_exists($this->config->item('upload') . "animal_images/140x140/" . $st_file_name)) ? base_url() . 'upload/animal_images/140x140/' . $st_file_name : base_url() . 'upload/animal_images/140x140/no_photo_icon.png',
            );
        }

        return $arrData;
    }

    function get_animals_photo($animal_id) {
        $this->db->select('st_file_name,in_file_id,st_file_type,in_profile_pic');
        $this->db->from('tbl_animal_file');
        $this->db->where('in_animal_id', $animal_id);
        $this->db->where('st_file_type', 'P');
        $this->db->where('in_deleted', 0);
        $this->db->order_by('in_file_id', 'ASC');
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        $arrData = array();

        foreach ($query->result() as $Row) {
            $arrData[] = array("animal_icon" => ($Row->st_file_name != '' && file_exists($this->config->item('upload') . "animal_images/315x315/" . $Row->st_file_name)) ? base_url() . 'upload/animal_images/315x315/' . $Row->st_file_name : base_url() . 'upload/animal_images/140x140/no_photo_icon.png'
            );
        }
        return $arrData;
    }

    function get_animals_video($animal_id) {
        $this->db->select('st_file_name,in_file_id,st_file_type,in_profile_pic');
        $this->db->from('tbl_animal_file');
        $this->db->where('in_animal_id', $animal_id);
        $this->db->where('st_file_type', 'V');
        $this->db->where('in_deleted', 0);
        $this->db->order_by('in_file_id', 'ASC');
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        $arrData = array();

        foreach ($query->result() as $Row) {
            $arrData[] = array("animal_video" => $Row->st_file_name
            );
        }
        return $arrData;
    }

    function get_animal_detail($animal_id) {
        $this->db->select("a.in_animal_id,
											a.in_organization_id,
											a.st_animal_name,
											a.st_gender,
											a.in_animal_type_id,
											a.in_primary_breed_id,						
											a.in_secondry_breed_id,
											a.in_tertiary_breed_id,
											a.in_neutered_id,
											a.in_weight,
											a.st_city,
											a.st_state,
											a.st_country,
											a.in_age,											
											a.in_enter_age,
                                            a.in_dog_where,
                                            a.st_quarantine,
											a.dt_quarantine_end_date,
											a.st_timeout,
											a.dt_target_tr_date,
											a.st_travel_with,
											a.st_tr_comment,
											a.st_foster_comment,
											a.st_rabies_vaccine,
											a.dt_rabiesvac_date,
											a.st_fecal_test,
											a.dt_fecal_test_date,
											a.st_dlhhp,
											a.dt_dlhhp_date,
											a.st_heartworm_vaccine,
											a.dt_heartworm_vaccine_date,
											a.st_heartworm_brand,
											a.st_bordatella_vaccine,
											a.dt_bordatella_vaccine_date,
											a.st_bordatella_brand,
											a.st_surgery,
											a.dt_surgery_date,
                                            a.dt_microchipp_date,
                                            a.st_general_comment,
                                            a.st_birdsex,
											a.in_dog_where,
											
											
											a.st_crates_well,
											a.st_flight_risk,
											a.st_barrier_aggressive,
											a.st_ok_others,
											a.st_ok_explanation,
											a.st_micro_chipped,
											a.st_micro_chip_comp,
											a.st_medical_issue,
											a.st_medical_desc,
											a.st_profile_story,
											
											a.in_demeanor_id,	
											a.st_on_clock,
											a.dt_date,
											a.dt_created,
											a.st_recent_vaccination,
											a.dt_vaccination,
											a.st_cvi,
											a.dt_cvi,
											a.st_good_with_dogs,
											a.st_good_with_cats,
											a.st_good_with_kids,
											a.st_house_trained,
											a.st_declawed,	
											a.in_progress_status,
											a.in_next_status,
											a.in_animal_public,																			
											o.st_org_name,
											aty.st_animal_type_name,
											ab.st_animal_breed_name,
											d.st_demeanor_name", false);

        $this->db->from('tbl_animal a');
        $this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id', 'LEFT');
        $this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id', 'LEFT');
        $this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id', 'LEFT');
        $this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id', 'LEFT');
        $this->db->where('a.in_animal_id', $animal_id);
        $query = $this->db->get();

        $arrAnimal = array();


        if ($query->num_rows() > 0) {
            $age = '';
            $gender = '';
            foreach ($query->result() as $Row) {

                if ($Row->st_gender == 'M') {
                    $gender = "Male";
                }
                if ($Row->st_gender == 'F') {
                    $gender = "Female";
                }
                if ($Row->st_gender == 'U') {
                    $gender = "Unknown";
                }

                if ($Row->in_age == '2') {
                    $age = "Young";
                }


                if ($Row->in_age == '1') {
                    $age = "Baby";
                }

                if ($Row->in_age == '2') {
                    $age = "Young";
                }
                if ($Row->in_age == '3') {
                    $age = "Adult";
                }
                if ($Row->in_age == '4') {
                    $age = "Senior";
                }
                if ($Row->in_age == '5') {
                    $age = "Unknown";
                }

                if ($Row->in_neutered_id == '1') {
                    $neutered = "Yes";
                }
                if ($Row->in_neutered_id == '2') {
                    $neutered = "No";
                }
                if ($Row->in_neutered_id == '3') {
                    $neutered = "Unknown";
                }


                if ($Row->in_dog_where == '0') {
                    $indogwhere = "Shelter";
                }
                if ($Row->in_dog_where == '1') {
                    $indogwhere = "Stray";
                }
                if ($Row->in_dog_where == '2') {
                    $indogwhere = "Surrender";
                }
                if ($Row->in_dog_where == '3') {
                    $indogwhere = "Unknown";
                }


                $sqlbreed1 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '" . $Row->in_primary_breed_id . "'";
                $sqbreed1 = $this->db->query($sqlbreed1);
                $numrows1 = $sqbreed1->num_rows($sqbreed1);
                $breed1 = $sqbreed1->result();

                if ($numrows1 == 1)
                    $primary_breed = $breed1[0]->st_animal_breed_name;
                else
                    $primary_breed = '';

                $sqlbreed2 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '" . $Row->in_secondry_breed_id . "'";
                $sqbreed2 = $this->db->query($sqlbreed2);
                $numrows2 = $sqbreed2->num_rows($sqbreed2);
                $breed2 = $sqbreed2->result();

                if ($numrows2 == 1)
                    $secondary_breed = $breed2[0]->st_animal_breed_name;
                else
                    $secondary_breed = '';


                $sqlbreed3 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '" . $Row->in_tertiary_breed_id . "'";
                $sqbreed3 = $this->db->query($sqlbreed3);
                $numrows3 = $sqbreed3->num_rows($sqbreed3);
                $breed3 = $sqbreed3->result();

                if ($numrows3 == 1)
                    $tertiary_breed = $breed3[0]->st_animal_breed_name;
                else
                    $tertiary_breed = '';


                $arrAnimal = array('animal_id' 				=> $Row->in_animal_id,
									'Category' 				=> $Row->st_animal_type_name,
									'animal_name' 			=> $Row->st_animal_name,
									'gender' 				=> $gender,
									'animal_type_id' 		=> isset($Row->in_animal_type_id)?$Row->in_animal_type_id:'',
									'city' 					=> isset($Row->st_city)?$Row->st_city:'',
									'state' 				=> isset($Row->st_state)?$Row->st_state:'',
									'country' 				=> isset($Row->st_country)?$Row->st_country:'',
									'demeanor_name' 		=> isset($Row->st_demeanor_name)?$Row->st_demeanor_name:'',
									'on_clock' 				=> isset($Row->st_on_clock)?$Row->st_on_clock:'',
									'date' 					=> isset($Row->dt_date)?$Row->dt_date:'',
									'dt_created' 			=> $Row->dt_created,
									'org_name' 				=> html_entity_decode($Row->st_org_name),
									'animal_type_name' 		=> $Row->st_animal_type_name,
									'animal_breed_name' 	=> $Row->st_animal_breed_name,
									'primary_breed_id' 		=> $primary_breed,
									'secondry_breed_id' 	=> $secondary_breed,
									'tertiary_breed_id' 	=> $tertiary_breed,
									'breed_id' 				=> $Row->in_primary_breed_id,
									'neutered_id' 			=> $neutered,
									'weight' 				=> $Row->in_weight == 'U' ? 'Unknown' : $Row->in_weight,
									'crates_well' 			=> $Row->st_crates_well,
									'flight_risk' 			=> $Row->st_flight_risk,
									'barrier_aggressive' 	=> $Row->st_barrier_aggressive,
									//'st_ok_others'					    => $Row->st_ok_others == 'Y' ? 'Yes' : 'No',			
									//'st_ok_explanation'					=> $Row->st_ok_explanation,		
									'micro_chipped' 		=> $Row->st_micro_chipped == 'Y' ? 'Yes' : ($Row->st_micro_chipped == 'N' ? 'No' : 'Unknown'),
									'micro_chip_comp' 		=> $Row->st_micro_chip_comp,
									'medical_issue' 		=> $Row->st_medical_issue == 'Y' ? 'Yes' : 'No',
									'medical_desc' 			=> $Row->st_medical_desc,
									'profile_story' 		=> $Row->st_profile_story,
									'recent_vaccination' 	=> isset($Row->st_recent_vaccination)?$Row->st_recent_vaccination:'',
									'dt_vaccination' 		=> isset($Row->dt_vaccination)?$Row->dt_vaccination:'',
									'st_cvi' 				=> isset($Row->st_cvi)?$Row->st_cvi:'',
									'dt_cvi' 				=> isset($Row->dt_cvi)?$Row->dt_cvi:'',
									'good_with_dogs' 		=> isset($Row->st_good_with_dogs)?$Row->st_good_with_dogs:'',
									'good_with_cats' 		=> isset($Row->st_good_with_cats)?$Row->st_good_with_cats:'',
									'good_with_kids' 		=> isset($Row->st_good_with_kids)?$Row->st_good_with_kids:'',
									'house_trained' 		=> isset($Row->st_house_trained)?$Row->st_house_trained:'',
									'declawed' 				=> isset($Row->st_declawed)?$Row->st_declawed:'',
									'enter_age' 			=> isset($Row->in_enter_age)?$Row->in_enter_age:'',
									'dog_where' 			=> isset($Row->in_dog_where)?$Row->in_dog_where:'',
									'quarantine' 			=> isset($Row->st_quarantine)?$Row->st_quarantine:'',
									'quarantine_end_date' 	=> isset($Row->dt_quarantine_end_date)?$Row->dt_quarantine_end_date:'',
									'timeout' 				=> isset($Row->st_timeout)?$Row->st_timeout:'',
									'target_tr_date' 		=> isset($Row->dt_target_tr_date)?$Row->dt_target_tr_date:'',
									'travel_with' 			=> isset($Row->st_travel_with)?$Row->st_travel_with:'',
									'tr_comment' 			=> isset($Row->st_tr_comment)?$Row->st_tr_comment:'',
									'foster_comment' 		=> isset($Row->st_foster_comment)?$Row->st_foster_comment:'',
									'rabies_vaccine' 		=> isset($Row->st_rabies_vaccine)?$Row->st_rabies_vaccine:'',
									'rabiesvac_date' 		=> isset($Row->dt_rabiesvac_date)?$Row->dt_rabiesvac_date:'',
									'fecal_test' 			=> isset($Row->st_fecal_test)?$Row->st_fecal_test:'',
									'dt_fecal_test_date' 	=> isset($Row->dt_fecal_test_date)?$Row->dt_fecal_test_date:'',
									'dlhhp' 				=> isset($Row->st_dlhhp)?$Row->st_dlhhp:'',
									'dlhhp_date' 			=> isset($Row->dt_dlhhp_date)?$Row->dt_dlhhp_date:'',
									'heartworm_vaccine' 	=> isset($Row->st_heartworm_vaccine)?$Row->st_heartworm_vaccine:'',
									'heartworm_vaccine_date' => isset($Row->dt_heartworm_vaccine_date)?$Row->dt_heartworm_vaccine_date:'',
									'heartworm_brand' 		=> isset($Row->st_heartworm_brand)?$Row->st_heartworm_brand:'',
									'bordatella_vaccine' 	=> isset($Row->st_bordatella_vaccine)?$Row->st_bordatella_vaccine:'',
									'bordatella_vaccine_date' => isset($Row->dt_bordatella_vaccine_date)?$Row->dt_bordatella_vaccine_date:'',
									'bordatella_brand' 		=> isset($Row->st_bordatella_brand)?$Row->st_bordatella_brand:'',
									'surgery' 				=> isset($Row->st_surgery)?$Row->st_surgery:'',
									'surgery_date' 			=> isset($Row->dt_surgery_date)?$Row->dt_surgery_date:'',
									'microchipp_date' 		=> isset($Row->dt_microchipp_date)?$Row->dt_microchipp_date:'',
									'general_comment' 		=> isset($Row->st_general_comment)?$Row->st_general_comment:'',
									'birdsex' 				=> isset($Row->st_birdsex)?$Row->st_birdsex:'',
									'enter_age' 			=> isset($Row->in_enter_age)?$Row->in_enter_age:'',
									'flgIsPublicProfile' 	=> $Row->in_animal_public
                );
            }
            return $arrAnimal;
        }
    }

    function get_legs_participants_vehicle($transport_id = '', $leg_id = '', $user_id = '') {
        $this->db->select('v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,ps.st_contact,lv.in_vehicle_id as leg_vehicle_id', FALSE);
        $this->db->from('tbl_transportation_participants p');
        $this->db->join('tbl_user_profile pr', 'pr.in_user_id = p.in_user_id AND p.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_users u', 'pr.in_user_id = u.in_user_id AND u.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_user_vehicle v', 'v.in_user_id = u.in_user_id AND v.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_user_pilot vp', 'vp.in_user_id = u.in_user_id AND vp.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_user_profile_setting ps', 'ps.in_user_id = u.in_user_id AND ps.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_vehicle_image vi', 'vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0', 'LEFT');
        $this->db->join('tbl_leg_vehicle_detail lv', 'lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = ' . $leg_id . ' AND lv.in_deleted = 0', 'LEFT');
        $this->db->where('p.in_deleted', 0);
        $this->db->where('p.in_transportation_leg_id', $leg_id);
        $this->db->where('p.in_transportation_id', $transport_id);

        if (isset($user_id) && $user_id > 0) {
            $this->db->where('p.in_user_id', $user_id);
        }
        $this->db->group_by('v.in_vehicle_id');
        $query = $this->db->get();

        //echo $this->db->last_query(); die;
        //echo "<pre>";print_r($this->db->last_query());die;
        return $query->result_array();
    }

    function get_feeds($transport_id, $limit, $page, $rec_per_page) {
        $data = array();

        $this->db->select('n.in_notification_id, 
						n.in_organization_id, 
						n.in_transportation_id, 
						n.st_notification_msg,  
						n.in_modified_by, 
						n.dt_created,
						n.in_type, 
						o.st_org_image,
						o.st_org_name,
						u.st_profile_image,
						u.st_display_name as full_name,
						u.in_user_id,
						t.dt_pickup_date,t.dt_target,
						t.dt_created as tr_date,
						t.st_from_city,t.st_from_state,t.st_from_zip,
						t.st_to_city,t.st_to_state,t.st_to_zip');
        $this->db->from('tbl_notification n');
        $this->db->join('tbl_users u', 'u.in_user_id=n.in_modified_by', 'INNER');
        $this->db->join('tbl_transportation t', 't.in_transportation_id=n.in_transportation_id', 'INNER');
        $this->db->join('tbl_organization o', 'o.in_organization_id = t.in_organization_id AND o.in_deleted="0"', 'INNER');
        $this->db->where('n.in_deleted', 0);
        $this->db->where('n.in_transportation_id', $transport_id);
        $this->db->order_by('n.in_notification_id', 'DESC');

        if (!isset($limit)) {
            $limit = 0;
        }
        if ($page > 0) {
            $this->db->limit($rec_per_page, $limit);
        }
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        $data = array();
        $msg = "";
        foreach ($query->result_array() as $row) {

            if (isset($row['st_org_image']) && $row['st_org_image'] != '' && file_exists($this->config->item('upload') . "org_doc/36x36/" . $row['st_org_image'])) {
                $org_image = $this->config->item('upload_url') . "org_doc/36x36/" . $row['st_org_image'];
            } else {
                $org_image = $this->config->item('upload_url') . "org_doc/36x36/no_photo_icon.png";
            }
            if (isset($row['st_profile_image']) && $row['st_profile_image'] != '' && file_exists($this->config->item('upload') . "profile/36x36/" . $row['st_profile_image'])) {
                $profile_image = $this->config->item('upload_url') . "profile/36x36/" . $row['st_profile_image'];
            } else {
                $profile_image = $this->config->item('upload_url') . "profile/36x36/no_photo_icon.png";
            }


            if ($row['in_type'] == 5 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['st_org_name'] . ' created a new transportation.';
                }
            } else if ($row['in_type'] == 22) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['full_name'] . " has been removed from transportation.";
                }
            } else if ($row['in_type'] == 21) {
                $msg = "Transport #DBT" . $row['in_transportation_id'] . ' ' . $row['st_notification_msg'] . " completed";
            } else if ($row['in_type'] == 14 || $row['in_type'] == 1) {
                $msg = $row['full_name'] . ':' . $row['st_notification_msg'];
            } else if ($row['in_type'] == 13 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['full_name'] . ' left leg from transportation';
                }
            } else if ($row['in_type'] == 12 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {

                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['full_name'] . ' joined the transportation leg.';
                }
            } else if ($row['in_type'] == 11 || $row['in_type'] == 0) {

                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {

                    $msg = $row['full_name'] . ' left the transportation.';
                }
            } else if ($row['in_type'] == 10 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {

                    $msg = 'Transport #DBT' . $row['in_transportation_id'] . ' has been confirmed.';
                }
            } else if ($row['in_type'] == 9 || $row['in_type'] == 0) {

                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {

                    $msg = $row['full_name'] . ' joined the transportation.';
                }
            } else if ($row['in_type'] == 8 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {

                    $msg = 'Transport #DBT' . $row['in_transportation_id'] . ' has been cancelled by ' . $row['full_name'];
                }
            } else if ($row['in_type'] == 7 || $row['in_type'] == 0) {
                if ($row['st_notification_msg'] != '') {
                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = 'Transport #DBT' . $row['in_transportation_id'] . ' has been modified by ' . $row['full_name'];
                }
            } else if ($row['in_type'] == 6 || $row['in_type'] == 0) {

                if ($row['st_notification_msg'] != '') {

                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['st_org_name'] . ' updated the list of animals.';
                }
            } else if ($row['in_type'] == 23 || $row['in_type'] == 0) {

                if ($row['st_notification_msg'] != '') {

                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['full_name'] . ' has been signed up as transport monitor.';
                }
            } else if ($row['in_type'] == 24 || $row['in_type'] == 0) { 

                if ($row['st_notification_msg'] != '') {

                    $msg = $row['st_notification_msg'];
                } else {
                    $msg = $row['full_name'] . ' has been removed from transport monitor.';
                }
            }
            $data[] = array('in_type' => $row['in_type'],
                'org_name' => $row['st_org_name'],
                'org_image' => $org_image,
                'transportation_id' => $row['in_transportation_id'],
                'organization_id' => $row['in_organization_id'],
                'from_city' => $row['st_from_city'],
                'from_state' => $row['st_from_state'],
                'from_zip' => $row['st_from_zip'],
                'to_city' => $row['st_to_city'],
                'to_state' => $row['st_to_state'],
                'to_zip' => $row['st_to_zip'],
                'dt_created' => date('D, M d',strtotime($row['tr_date'])),
                'message' => $msg,
                'target_date' => date('D, M d',strtotime($row['dt_target'])),
                'pickup_date' => date('D, M d',strtotime($row['dt_pickup_date'])),
                'notification_date' => date('m/d/y H:i',strtotime($row['dt_created'])),
                'user_name' => $row['full_name'],
                'user_image' => $profile_image,
                'user_id' => $row['in_user_id'],
                'in_notification_id' => $row['in_notification_id']
            );
        }
        //return $query->result_array();
        return $data;
    }

    function get_feeds_count($transport_id) {

        $this->db->select('n.in_notification_id, 
						n.in_organization_id, 
						n.in_transportation_id, 
						n.st_notification_msg,  
						n.in_modified_by, 
						n.dt_created,
						n.in_type, 
						o.st_org_image,
						o.st_org_name,
						u.st_profile_image,
						u.st_display_name as full_name,
						u.in_user_id,
						t.dt_pickup_date,t.dt_target,
						t.dt_created as tr_date,
						t.st_from_city,t.st_from_state,t.st_from_zip,
						t.st_to_city,t.st_to_state,t.st_to_zip');
        $this->db->from('tbl_notification n');
        $this->db->join('tbl_users u', 'u.in_user_id=n.in_modified_by', 'INNER');
        $this->db->join('tbl_transportation t', 't.in_transportation_id=n.in_transportation_id', 'INNER');
        $this->db->join('tbl_organization o', 'o.in_organization_id = t.in_organization_id AND o.in_deleted="0"', 'INNER');
        $this->db->where('n.in_deleted', 0);
        $this->db->where('n.in_transportation_id', $transport_id);
        $query = $this->db->get();
        return $query->num_rows();
    }

    function user_list($username) {
        $query = $this->db->query("select u.in_user_id, u.st_email,
CONCAT(u.st_display_name,' ', u.st_last_name) as label,u.st_profile_image
									FROM (tbl_users as u)
									WHERE
										(u.st_display_name LIKE '" . $username . "%') OR CONCAT(u.st_display_name,' ', u.st_last_name) LIKE '" . $username . "%'
							
									AND u.in_deleted =  0
									AND u.in_status =  1"
        );

        $result = $query->result_array();
        //echo "<pre>";print_r($result);die;
        $data = array();
        foreach ($result as $row) {
            $data[] = array('user_id' => $row['in_user_id'],
                'user_name' => $row['label'],
                'image' => ($row['st_profile_image'] != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $row['st_profile_image'])) ? base_url() . 'upload/profile/250x250/' . $row['st_profile_image'] : base_url() . 'upload/profile/no_photo_icon.png',
                'email' => $row['st_email']
            );
        }

        return $data;
    }

   
	function get_transport_nearby($userId) {
		$details = $this->get_driver_user_lat_long($userId);
		$pilot_details = $this->get_pilot_user_lat_long($userId);
		$trns_ids_list = $this->get_current_driver_participate($userId);
		//echo "<pre>";print_r($details);die;
		//echo "<pre>";print_r($pilot_details);die;
		$trns_ids	= '';
		$driver		= '';
		$pilot		= '';
		if(!empty($trns_ids_list))
		{
			$trns_ids 		= implode(",",$trns_ids_list);
		}
		if(!empty($details) || !empty($pilot_details))
		{
			if(!empty($details))
			{
				if(count(unserialize($details['st_driver_availability']))>0)
					$days 		= "'".implode("','",unserialize($details['st_driver_availability']))."'";
				else	
					$days	=	'';	
				$lat 		= $details['lat'];
				$lon 		= $details['lon'];
				$distance 	= $details['in_distance_to_drive'];
			}
			if(!empty($pilot_details))
			{
				if(count(unserialize($pilot_details['st_pilot_availability']))>0)
					$a_days 	= "'".implode("','",unserialize($pilot_details['st_pilot_availability']))."'";
				else
					$a_days	=	'';	
				$a_lat 		= $pilot_details['st_latitude'];
				$a_lon 		= $pilot_details['st_longitude'];
				$a_distance = $pilot_details['in_distance_to_pilot'];
			}
			
			
			$this->db->select("tr.dt_target, DATE_FORMAT(tr.dt_pickup_date, '%a') as pdays, DATE_FORMAT(tr.dt_target, '%a') as days, tr.in_transportation_id,tr.in_organization_id,tr.in_organization_id as org_id, tr.in_status, tr.st_from_street, tr.st_from_city, tr.st_from_state, tr.st_from_zip, tr.st_to_street, tr.st_to_state, tr.st_to_city, tr.st_to_zip, tr.in_tot_distance, tr.in_distance_covered, tr.st_trans_type, tr.st_trans_name as st_transport_name,tr.dt_pickup_date,tr.in_status,o.st_org_image,o.in_organization_id,o.st_org_name as org_name,round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) perc, z.lat as from_lat,z.lon as from_lon,tz.lat as to_lat,tz.lon as to_lon,o.st_org_code",FALSE);
			$this->db->from("tbl_transportation tr");
			$this->db->join("tbl_zip_code z","tr.st_from_zip = z.zip_code","INNER");
			$this->db->join("tbl_zip_code tz","tr.st_to_zip = tz.zip_code","INNER");
			$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
			$this->db->join("tbl_transportation_leg tl","tr.in_transportation_id = tl.in_transportation_id AND tl.in_deleted='0'", "LEFT");
			//$where = array("tr.in_deleted"=>'0',"tr.in_status"=>"1");
			$where = array("tr.in_deleted"=>'0',"tr.st_trans_type !="=>'RO');
			$this->db->where($where);
			
			$this->db->where("(tr.in_status = 1 || (tr.in_status = 2 && tr.dt_target >= current_date()))");
			
			if(isset($date['from_date']) && $date['from_date'] != '')
			{
				//$this->db->where('tr.dt_pickup_date >=', $date['from_date']);			
				$this->db->where('tr.dt_target >=', $date['from_date']);
			}
			
			if(isset($date['to_date']) && $date['to_date'] != '')
			{
				//$this->db->where('tr.dt_pickup_date <=', $date['to_date']);
				$this->db->where('tr.dt_target <=', $date['to_date']);
			}
			
			if((!isset($date['from_date']) || $date['from_date'] == '') && (!isset($date['to_date']) || $date['to_date'] == ''))
			{
				//$this->db->where('tr.dt_pickup_date >=', date("Y-m-d"));
				$this->db->where('tr.dt_target >=', date("Y-m-d"));
			}
			
			if($trns_ids!='')
			{
				$this->db->where("tr.in_transportation_id NOT IN (".$trns_ids.") ");
			}
			$pilot_h = '';
			$driver_h = '';
			if(!empty($details))
			{
				//$driver_h = '(days in('.$days .') OR pdays in('.$days .'))';
			}
			if(!empty($pilot_details))
			{
				//$pilot_h = '(days in('.$a_days .') OR pdays in('.$a_days .'))';
			}
			$cnd_h = ($driver_h)?$driver_h:"";
			
			if($cnd_h!='' && $pilot_h!='' )
			{
				$cnd_h .= " OR ".$pilot_h;
			}
			elseif($pilot_h)
			{
				$cnd_h = $pilot_h;
			}
			if($cnd_h)
			{
				$cnd_h = "( ".$cnd_h." ) AND ";
			}
			//echo $cnd_h;die;
			
			$this->db->group_by("tr.in_transportation_id");
			//$this->db->having($cnd_h.'perc < 100');
			$this->db->order_by("tr.in_transportation_id","DESC");
			//$this->db->limit(9);
			$query =	$this->db->get();
			//echo "<pre>".$this->db->last_query();die;
			$transport_details = $query->result_array();
			$nearby_transports = array();
			$nearby_trans_cnt = 0;
			foreach($transport_details as $trans_value)
			{
				//echo 'test=======================leg======================='.$nearby_trans_cnt;
				if($trans_value['st_trans_type'] == 'P')
				{
					//echo 'pre-specified transport'. $trans_value['in_transportation_id'];	
					//echo '<br/>';	
					$transport_leg_details = $this->get_trans_legs_by_id($trans_value['in_transportation_id']);		
					//echo '<pre>';print_r($transport_leg_details);	//exit;
					$transport_leg_match = false;
					foreach($transport_leg_details as $trans_leg_value)
					{
						//echo 'test1=======================leg======================='.$nearby_trans_cnt;
						
						//if($trans_leg_value['route_type'] == 'Road' && !empty($details))	
						if($trans_leg_value['route_type'] == 'Road')	
						{
							if(isset($trans_leg_value['pick_zip']) && $trans_leg_value['pick_zip'] != '')
							{
							$lat_long_details = $this->common_model->get_lattitude_longitude($trans_leg_value['pick_zip']);
							if(isset($lat_long_details) && !empty($lat_long_details))
							{
								$start_lat		= $lat_long_details['lat'];
								$start_lon		= $lat_long_details['lon'];
							}
							else
							{
								$lat_long_details = $this->common_model->get_lat_long($trans_leg_value['pick_zip']);
								
								$start_lat		= $lat_long_details['lat'];
								$start_lon		= $lat_long_details['lng'];
							}
							}
							
							if(isset($trans_leg_value['drop_zip']) && $trans_leg_value['drop_zip'] != '')
							{
							$lat_long_details = $this->common_model->get_lattitude_longitude($trans_leg_value['drop_zip']);
							if(isset($lat_long_details) && !empty($lat_long_details))
							{
								$end_lat		= $lat_long_details['lat'];
								$end_lon		= $lat_long_details['lon'];
							}
							else
							{
								$lat_long_details = $this->common_model->get_lat_long($trans_leg_value['drop_zip']);
								$end_lat		= $lat_long_details['lat'];
								$end_lon		= $lat_long_details['lng'];
							}
							}
							
							if(isset($start_lat) && $start_lat != '' && isset($end_lat) && $end_lat != '')
							{  /*
								$this->db->select("tuv.in_distance_to_drive,tuv.st_driver_availability,tu.in_user_id,tu.st_display_name,tu.st_last_name,tu.st_email");
								$this->db->from("tbl_user_vehicle tuv");
								$this->db->join("tbl_zip_code z","tuv.st_zip_vehicle = z.zip_code","INNER");
								$this->db->join("tbl_users tu","tu.in_user_id = tuv.in_user_id","INNER");
								$this->db->where("tuv.in_deleted",'0');
								$this->db->where("tu.in_deleted",'0');
								$this->db->where("tu.in_status <>",'3');
								$this->db->where("tu.in_user_id",$userId);
								
								$driver = '((3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) <= tuv.in_distance_to_drive 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) is NULL 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'"))))<= tuv.in_distance_to_drive 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'")))) is NULL) ';
								
								$driver_h = '(tuv.st_driver_availability Like "%'.$trans_leg_value['pick_day'].'%" OR tuv.st_driver_availability Like "%'.$trans_leg_value['drop_day'].'%")';
								$this->db->where($driver);
								$this->db->where($driver_h);
								
								$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_organization_user where in_organization_id = ". $trans_value['in_organization_id']." AND in_status = 3 AND in_deleted = 0)");
								
								$query =	$this->db->get();
								
								$r_transport_leg_user_details = $query->row_array();
								*/
								//if(isset($r_transport_leg_user_details) && !empty($r_transport_leg_user_details))
								//{
									if($nearby_trans_cnt>0)
									{	
										$key = in_array($trans_value['in_transportation_id'],$this->array_column($nearby_transports,'in_transportation_id'));
										if($key==false)
										{		
											$nearby_transports[]  = $trans_value;
											$nearby_trans_cnt++;
										}
									} else {
										$nearby_transports[]  = $trans_value;
										$nearby_trans_cnt++;
									}
								//}	
								
							}
						}
						
						//if($trans_leg_value['route_type'] == 'Aviation' && !empty($pilot_details))		
						if($trans_leg_value['route_type'] == 'Aviation')
						{
							
							if(isset($trans_leg_value['pick_zip']) && $trans_leg_value['pick_zip'] != '')
							{
							$lat_long_details = $this->common_model->get_lat_long($trans_leg_value['pick_zip']);
							
							$start_lat		= $lat_long_details['lat'];
							$start_lon		= $lat_long_details['lng'];
							}
							
							if(isset($trans_leg_value['drop_zip']) && $trans_leg_value['drop_zip'] != '')
							{
							$lat_long_details = $this->common_model->get_lat_long($trans_leg_value['drop_zip']);
							$end_lat		= $lat_long_details['lat'];
							$end_lon		= $lat_long_details['lng'];
							}
							
							if(isset($start_lat) && $start_lat != '' && isset($end_lat) && $end_lat != '')
							{  /*
								$this->db->select("tuv.in_distance_to_pilot,tuv.st_pilot_availability,tu.in_user_id,tu.st_display_name,tu.st_last_name,tu.st_email");
								$this->db->from("tbl_user_pilot tuv");
								$this->db->join("tbl_zip_code z","tuv.st_pilot_zip = z.zip_code","INNER");
								$this->db->join("tbl_users tu","tu.in_user_id = tuv.in_user_id","INNER");
								$this->db->where("tuv.in_deleted",'0');
								$this->db->where("tu.in_deleted",'0');
								$this->db->where("tu.in_status <>",'3');
								$this->db->where("tu.in_user_id",$userId);
								
								$pilot = '((3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) <= tuv.in_distance_to_pilot 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) is NULL 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'"))))<= tuv.in_distance_to_pilot 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'")))) is NULL) ';
								
								$pilot_h = '(tuv.st_pilot_availability Like "%'.$trans_leg_value['pick_day'].'%" OR tuv.st_pilot_availability Like "%'.$trans_leg_value['drop_day'].'%")';
								
								$this->db->where($pilot);
								$this->db->where($pilot_h);
								
								$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_organization_user where in_organization_id = ". $trans_value['in_organization_id']." AND in_status = 3 AND in_deleted = 0)");
								
								$query =	$this->db->get();
								
								$a_transport_leg_user_details = $query->row_array();
								*/
								//if(isset($a_transport_leg_user_details) && !empty($a_transport_leg_user_details))
								//{
									if($nearby_trans_cnt>0)
									{	
										$key = in_array($trans_value['in_transportation_id'],$this->array_column($nearby_transports,'in_transportation_id'));
										if($key==false)
										{		
											$nearby_transports[]  = $trans_value;
											$nearby_trans_cnt++;
										}
									} else {
										$nearby_transports[]  = $trans_value;
										$nearby_trans_cnt++;
									}
								//}
							}
						}
						
						if($trans_leg_value['route_type'] == 'Overnight')						
						{
							if(isset($trans_leg_value['o_pick_zip']) && $trans_leg_value['o_pick_zip'] != '')
							{
							$lat_long_details = $this->common_model->get_lat_long($trans_leg_value['o_pick_zip']);
							
							$start_lat		= $lat_long_details['lat'];
							$start_lon		= $lat_long_details['lng'];
							}							
							
							
							if(isset($start_lat) && $start_lat != '' && isset($end_lat) && $end_lat != '')
							{  /*
								$this->db->select("tuv.in_distance_to_drive,tuv.st_driver_availability,tu.in_user_id,tu.st_display_name,tu.st_last_name,tu.st_email");
								$this->db->from("tbl_user_vehicle tuv");
								$this->db->join("tbl_zip_code z","tuv.st_zip_vehicle = z.zip_code","INNER");
								$this->db->join("tbl_users tu","tu.in_user_id = tuv.in_user_id","INNER");
								$this->db->where("tuv.in_deleted",'0');
								$this->db->where("tu.in_deleted",'0');
								$this->db->where("tu.in_status <>",'3');
								$this->db->where("tu.in_user_id",$userId);
								
								$driver = '((3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) <= tuv.in_distance_to_drive 
											OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) is NULL) ';
								$driver_h = '(tuv.st_driver_availability Like "%'.$trans_leg_value['o_day'].'%")';
								
								$this->db->where($driver);
								$this->db->where($driver_h);
								
								$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_organization_user where in_organization_id = ". $trans_value['in_organization_id']." AND in_status = 3 AND in_deleted = 0)");
								
								$query =	$this->db->get();
								
								$o_transport_leg_user_details = $query->row_array();
								*/
								//if(isset($o_transport_leg_user_details) && !empty($o_transport_leg_user_details))
								//{
									if($nearby_trans_cnt>0)
									{	
										$key = in_array($trans_value['in_transportation_id'],$this->array_column($nearby_transports,'in_transportation_id'));
										if($key==false)
										{		
											$nearby_transports[]  = $trans_value;
											$nearby_trans_cnt++;
										}
									} else {
										$nearby_transports[]  = $trans_value;
										$nearby_trans_cnt++;
									}
								//}
							}
						}						
						
					}
					
					/*if((isset($r_transport_leg_user_details) && !empty($r_transport_leg_user_details)) || (isset($a_transport_leg_user_details) && !empty($a_transport_leg_user_details)) || (isset($o_transport_leg_user_details) && !empty($o_transport_leg_user_details)))
					{
						$nearby_transports[]  = $trans_value;
						$nearby_trans_cnt++;
						//break;
					}*/

					
				} 
				else
				{
					//echo 'driver specified transport';
					//echo '<br/>';
					
						
					$start_lat		= $trans_value['from_lat'];
					$start_lon		= $trans_value['from_lon'];
					
					
					$end_lat		= $trans_value['to_lat'];
					$end_lon		= $trans_value['to_lon'];
					
					if(!empty($details))						
					{
						if(isset($start_lat) && $start_lat != '' && isset($end_lat) && $end_lat != '')
						{
							$this->db->select("tuv.in_distance_to_drive,tuv.st_driver_availability,tu.in_user_id,tu.st_display_name,tu.st_last_name,tu.st_email");
							$this->db->from("tbl_user_vehicle tuv");
							$this->db->join("tbl_zip_code z","tuv.st_zip_vehicle = z.zip_code","INNER");
							$this->db->join("tbl_users tu","tu.in_user_id = tuv.in_user_id","INNER");
							$this->db->where("tuv.in_deleted",'0');
							$this->db->where("tu.in_deleted",'0');
							$this->db->where("tu.in_status <>",'3');
							$this->db->where("tu.in_user_id",$userId);
							
							$driver = '((3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) <= tuv.in_distance_to_drive 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) is NULL 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'"))))<= tuv.in_distance_to_drive 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'")))) is NULL) ';
							
							$this->db->where($driver);
							
							$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_organization_user where in_organization_id = ". $trans_value['in_organization_id']." AND in_status = 3 AND in_deleted = 0)");
							
							$query =	$this->db->get();
							//echo "<pre>".$this->db->last_query();die;
							$d_transport_leg_user_details = $query->row_array();
							//echo '<pre/>';
							//print_r($transport_leg_user_details);
							//exit;
							/*if(isset($transport_leg_user_details) && !empty($transport_leg_user_details))
							{
								$nearby_transports[]  = $trans_value;
								$nearby_trans_cnt++;
								//break;
							}*/
							if(isset($d_transport_leg_user_details) && !empty($d_transport_leg_user_details))
							{
								if($nearby_trans_cnt>0)
								{	
									$key = in_array($trans_value['in_transportation_id'],$this->array_column($nearby_transports,'in_transportation_id'));
									if($key==false)
									{		
										$nearby_transports[]  = $trans_value;
										$nearby_trans_cnt++;
									}
								} else {
									$nearby_transports[]  = $trans_value;
									$nearby_trans_cnt++;
								}
							}
						}
					}
					
					if(!empty($pilot_details))						
					{
						if(isset($start_lat) && $start_lat != '' && isset($end_lat) && $end_lat != '')
						{
							$this->db->select("tuv.in_distance_to_pilot,tuv.st_pilot_availability,tu.in_user_id,tu.st_display_name,tu.st_last_name,tu.st_email");
							$this->db->from("tbl_user_pilot tuv");
							$this->db->join("tbl_zip_code z","tuv.st_pilot_zip = z.zip_code","INNER");
							$this->db->join("tbl_users tu","tu.in_user_id = tuv.in_user_id","INNER");
							$this->db->where("tuv.in_deleted",'0');
							$this->db->where("tu.in_deleted",'0');
							$this->db->where("tu.in_status <>",'3');
							$this->db->where("tu.in_user_id",$userId);
							
							$driver = '((3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) <= tuv.in_distance_to_pilot 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$start_lat.'"))*cos(radians("'.$start_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$start_lat.'")))) is NULL 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'"))))<= tuv.in_distance_to_pilot 
										OR (3959*acos(cos(radians(z.lat))*cos(radians("'.$end_lat.'"))*cos(radians("'.$end_lon.'")-radians(z.lon))+sin(radians(z.lat))*sin(radians("'.$end_lat.'")))) is NULL) ';
							
							$this->db->where($driver);
							
							$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_organization_user where in_organization_id = ". $trans_value['in_organization_id']." AND in_status = 3 AND in_deleted = 0)");
							
							$query =	$this->db->get();
							//echo "<pre>".$this->db->last_query();die;
							$p_transport_leg_user_details = $query->row_array();
							//echo '<pre/>';
							//print_r($transport_leg_user_details);
							//exit;
							/*if(isset($transport_leg_user_details) && !empty($transport_leg_user_details))
							{
								$nearby_transports[]  = $trans_value;
								$nearby_trans_cnt++;
								//break;
							}*/
							//print_r($nearby_transports);
							//exit;
							if(isset($p_transport_leg_user_details) && !empty($p_transport_leg_user_details))
							{
								if($nearby_trans_cnt>0)
								{	
									$key = in_array($trans_value['in_transportation_id'],$this->array_column($nearby_transports,'in_transportation_id'));
									if($key==false)
									{		
										$nearby_transports[]  = $trans_value;
										$nearby_trans_cnt++;
									}
								} else {
									$nearby_transports[]  = $trans_value;
									$nearby_trans_cnt++;
								}
							}
						}
					}
					
					/*if((isset($d_transport_leg_user_details) && !empty($d_transport_leg_user_details)) || (isset($p_transport_leg_user_details) && !empty($p_transport_leg_user_details)))
					{
						$nearby_transports[]  = $trans_value;
						$nearby_trans_cnt++;
						//break;
					}*/
					
					
				}
				
				/*if(isset($transport_leg_user_details) && !empty($transport_leg_user_details))
				{
					$nearby_transports[]  = $trans_value;
					$nearby_trans_cnt++;
					//break;
				}*/
							
				//if($nearby_trans_cnt == 9)
				//{
					//break;
				//} 
				//print_r($nearby_transports);
				//exit;
			}
			//print_r($transport_leg_user_details);
			//print_r($nearby_transports);
			//exit;
			return $nearby_transports;
		}
	}

    function get_driver_user_lat_long($userId) {
        //SELECT pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon
//FROM tbl_user_profile pr 
//INNER JOIN tbl_user_vehicle v ON v.in_user_id=pr.in_user_id
//WHERE  pr.in_user_id=14 AND pr.st_driver='Y'

        $this->db->select("pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon,z.lat,z.lon");
        $this->db->from("tbl_user_profile pr ");
        $this->db->join("tbl_user_vehicle v", "v.in_user_id = pr.in_user_id", 'INNER');
        $this->db->join("tbl_zip_code z", "v.st_zip_vehicle = z.zip_code", 'INNER');
        $where = array("pr.in_deleted" => '0', "pr.st_driver" => "Y", "v.in_deleted" => "0", "pr.in_user_id" => $userId);
        $this->db->where($where);
        $this->db->order_by("v.in_distance_to_drive", "DESC");
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        return $query->row_array();
    }

    function get_pilot_user_lat_long($userId) {
        //SELECT pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon
//FROM tbl_user_profile pr 
//INNER JOIN tbl_user_vehicle v ON v.in_user_id=pr.in_user_id
//WHERE  pr.in_user_id=14 AND pr.st_driver='Y'

        $this->db->select("pr.in_user_id,pr.st_driver,vp.st_pilot_availability,vp.st_pilot_zip,vp.in_distance_to_pilot,a.st_longitude,a.st_latitude");
        $this->db->from("tbl_user_profile pr ");
        $this->db->join("tbl_user_pilot vp", "vp.in_user_id = pr.in_user_id", 'INNER');
        $this->db->join("tbl_airport a", "a.st_loc_id = vp.st_identifier", 'INNER');
        $where = array("pr.in_deleted" => '0', "pr.st_pilot" => "Y", "vp.in_deleted" => "0", "a.in_deleted" => "0", "pr.in_user_id" => $userId);
        $this->db->where($where);
        $this->db->order_by("vp.in_distance_to_pilot", "DESC");
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        return $query->row_array();
    }

    function get_current_driver_participate($userId) {
        $this->db->select("in_transportation_id");
        $this->db->from("tbl_transportation_participants");
        $where = array("in_deleted" => '0', "in_user_id" => $userId);
        $this->db->where($where);
        $query = $this->db->get();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData[] = $Row->in_transportation_id;
            }
            return $arrData;
        }
    }

    # *******************************************************************************************	
    #	Function	:	get_user_profile	
    #	Purpose		:	User profile details
    #   added u.st_password,st_last_name by ghanshyam on 26Nov2014
    #   added u.st_fb_first_name,st_fb_first_name by ghanshyam on 01Dec2014
    # *******************************************************************************************	

    public function get_user_profile($id = '') {
        $this->db->select('	pr.in_user_id,
							pr.st_address1, 
							pr.st_address2, 
							pr.st_city, 
							pr.st_state,
							pr.st_country, 
							pr.st_zip, 
							pr.st_time_zone,
							pr.st_primary_phone, 
							pr.st_secondary_phone, 
							pr.st_fax, 
							pr.st_website,							
							pr.st_about_me,
							u.st_profile_image,
							u.st_display_name,
							u.st_last_name,
							u.st_email');
        $this->db->from("tbl_user_profile pr");
        $this->db->join("tbl_users u", "pr.in_user_id = u.in_user_id", "INNER");
        $this->db->where('pr.in_user_id', $id);
        $this->db->where('pr.in_deleted', 0);
        $this->db->where('pr.in_deleted', 0);
        $this->db->group_by('u.in_user_id');
        $query = $this->db->get();
        //echo $this->db->last_query();
        //return $query->result_array();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData = array("user_id" => $Row->in_user_id,
                    'profile_image' => ($Row->st_profile_image != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $Row->st_profile_image)) ? base_url() . 'upload/profile/250x250/' . $Row->st_profile_image : base_url() . 'upload/profile/no_photo_icon.png',
                    "address1" => $Row->st_address1,
                    "address2" => $Row->st_address2,
                    "city" => $Row->st_city,
                    "state" => $Row->st_state,
                    "country" => $Row->st_country,
                    "zipcode" => $Row->st_zip,
                    "time_zone" => $Row->st_time_zone,
                    "primary_phone" => $Row->st_primary_phone,
                    "secondary_phone" => $Row->st_secondary_phone,
                    "fax" => $Row->st_fax,
                    "website" => $Row->st_website,
                    "about_me" => $Row->st_about_me,
                    "display_name" => $Row->st_display_name,
                    "last_name" => $Row->st_last_name,
                    "email" => $Row->st_email
                );
            }
            return $arrData;
        }
    }

    # *******************************************************************************************	
    #	Function	:	update_user_info	
    #	Purpose		:	Updating user info
    # *******************************************************************************************

    public function update_user_info($data, $id, $table) {
        $this->db->where('in_user_id', $id);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    public function update_pilot_info($data, $id, $table) {
        $this->db->where('in_user_id', $id);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    public function update_vehicle_info($data, $id, $table) {
        $this->db->where('in_user_id', $id);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    function is_email_exists($email, $userId) {
        $this->db->select('in_user_id');
        $this->db->from('tbl_users');
        $this->db->where("st_email", $email);
        $this->db->where('in_user_id != ', $userId);

        $this->db->where("in_deleted", 0);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;	

        if ($query->num_rows() > 0)
            return true;
        else
            return false;
    }

    public function get_user_available($id) {
        $this->db->select('v.st_driver_availability');
        $this->db->from('tbl_user_vehicle as v');
        $this->db->where('v.in_user_id', $id);
        $this->db->where('v.in_deleted', 0);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        return $query->row_array();
        /* $arrData = array();

          if ($query->num_rows() > 0) {
          foreach ($query->result() as $Row) {
          $arrData[] = array('driver_availability' => unserialize($Row->st_driver_availability));
          }
          return $arrData;
          } */
    }

    public function get_vehicle_detail($userId) {
        $sql = "SELECT vh.*
		           FROM tbl_user_vehicle as vh 
				   WHERE vh.in_user_id= '" . $userId . "' AND  vh.in_deleted= '0' ";

        $query = $this->db->query($sql);
        //echo $this->db->last_query();die;
        $arrData = array();

        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $this->db->select('st_image,in_id');
                $this->db->from('tbl_vehicle_image as p');
                $this->db->where('in_vehicle_id', $Row->in_vehicle_id);
                $this->db->where('in_deleted', 0);
                $query = $this->db->get();
                //$images = $query->result_array();

                 $arrData[] = array('vehicle_id' => $Row->in_vehicle_id,
									'category' => isset($Row->st_vehicle_type) ? $Row->st_vehicle_type : '',
									'vehicle_color' => isset($Row->st_vehicle_color) ? $Row->st_vehicle_color :'',
									'vehicle_license_plate' => isset($Row->st_vehicle_license_plate) ? $Row->st_vehicle_license_plate : '',
									'vehicle_license_state' => isset($Row->st_vehicle_license_state) ? $Row->st_vehicle_license_state :'',
									'distance_to_drive' => isset($Row->in_distance_to_drive) ? $Row->in_distance_to_drive :'',
									'zipcode' => isset($Row->st_zip_vehicle) ? $Row->st_zip_vehicle :''
									//'image'	=>	$images
                );
            }
            return $arrData;
        }
    }

    public function find_transport_list($user_id, $transport_id) {
        $data = array();

        $this->db->select('t.in_transportation_id,t.st_from_country,t.st_from_street,t.st_from_city,
							t.st_from_state,t.st_from_zip,t.st_to_country,t.st_to_street,t.st_to_city,
							t.st_to_state,t.st_to_zip,t.dt_target,t.st_trans_type,t.in_status,
							t.in_created_by,t.in_organization_id,t.dt_pickup_date,o.in_organization_id,o.st_org_name,o.st_org_code', FALSE);
        $this->db->from('tbl_transportation as t');
		$this->db->join('tbl_users as u','u.in_user_id = t.in_trans_coods_id','INNER');
		$this->db->join("tbl_organization o","o.in_organization_id = t.in_organization_id  AND o.in_deleted='0'", "INNER");
        //$this->db->where('t.in_transportation_id',$transport_id);
        $this->db->like('t.in_transportation_id', $transport_id, 'both');
        $this->db->where('t.in_status', '1');
        $this->db->where('t.in_deleted', '0');
		$this->db->where('u.in_deleted',0);		
        $this->db->order_by('t.in_transportation_id', 'DESC');

        //$this->db->limit($limit,$start);
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        //$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
        //$data["num_rows"] = $query2->row()->rows;

        if ($query->num_rows() > 0) {
            $flgconfirm = '';

            foreach ($query->result_array() as $row) {
                if ($row['in_status'] == '2') {
                    $flgconfirm = '1';
                } else {
                    $flgconfirm = '0';
                }
                $data[] = array('in_transportation_id' 		=> $row['in_transportation_id'],
								'dt_target' 				=> $row['dt_target'],
								'st_from_country' 			=> $row['st_from_country'],
								'st_from_street'			=> $row['st_from_street'],
								'st_from_city' 				=> $row['st_from_city'],
								'st_from_state' 			=> $row['st_from_state'],
								'st_from_zip' 				=> $row['st_from_zip'],
								'st_to_country' 			=> $row['st_to_country'],
								'st_to_street' 				=> $row['st_to_street'],
								'st_to_city' 				=> $row['st_to_city'],
								'st_to_state' 				=> $row['st_to_state'],
								'st_to_zip' 				=> $row['st_to_zip'],
								'st_trans_type' 			=> $row['st_trans_type'],
								'in_created_by' 			=> $row['in_created_by'],
								'in_status' 				=> $row['in_status'],
								'in_organization_id' 		=> $row['in_organization_id'],
								'flgIsTransportConfirmed' 	=> $flgconfirm,
								'org_id'					=> $row['in_organization_id'],
								'org_name'					=> $row['st_org_name'],
								'st_org_code'				=> $row['st_org_code'],
								'dt_pickup_date'			=> $row['dt_pickup_date']
								
                );
            }
        }
        return $data;
    }

    public function get_transport_files($tra_id) {
        $this->db->select('st_file_name,in_transport_file_id', FALSE);
        $this->db->from('tbl_transportation_file');
        $this->db->where('in_deleted', 0);
        $this->db->where('in_transportation_id', $tra_id);
        $query = $this->db->get();
        //return $query->result_array();
        $data = array();

        if ($query->num_rows() > 0) {
            foreach ($query->result_array() as $row) {
                $data[] = array('file_name' => $row['st_file_name'],
                    'link' => base_url() . 'upload/trasnportation/' . $row['st_file_name'],
                    'in_transport_file_id' => $row['in_transport_file_id']
                );
            }
        }
        return $data;
    }

    public function insert_leg($data) {
        $user_id = $this->db->insert('tbl_transportation_leg', $data);
        $this->db->insert_id();
        return $this->db->insert_id();
    }

    public function insert_leg_detail($data) {
        $this->db->insert('tbl_transportation_leg_detail', $data);
    }

    public function get_pilotdetail($userId) {
        $sql = "SELECT * 
		           FROM tbl_user_pilot as pl 
				   WHERE pl.in_user_id= '" . $userId . "' AND  pl.in_deleted= '0' ";

        $query = $this->db->query($sql);
        //echo $this->db->last_query();die;
        $arrData = array();

        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {

                $arrData = array('airport_id' => $Row->st_identifier,
                    'pilot_id' => $Row->in_pilot_id,
                    'st_plane_type' => $Row->st_plane_type,
                    'st_plane_color' => $Row->st_plane_color,
                    'st_plane_number' => $Row->st_plane_number,
                    'in_plane_ifr' => $Row->in_plane_ifr,
                    'st_pilot_zip' => $Row->st_pilot_zip,
                    'onwayfly_distance' => $Row->in_distance_to_pilot,
                    'available_days' => unserialize($Row->st_pilot_availability)
                );
            }
            return $arrData;
        }
    }

    //added st_pilot by ghanshyam on 05Nov2014
    public function get_user_profile_setting($userId) {
        $this->db->select('u.st_contact,u.st_driver,u.st_pilot,u.st_org,u.st_foster,u.in_public');
        $this->db->from('tbl_user_profile_setting as u');
        $this->db->where('u.in_user_id', $userId);
        $this->db->where('u.in_deleted', 0);
        $query = $this->db->get();
        return $query->row_array();
    }

    public function update_user_profile_setting($data, $userId, $table) {
        //echo '<pre>'; print_r($data); die;
        $this->db->where('in_user_id', $userId);
        $this->db->update($table, $data);
        return $this->db->affected_rows();
    }

    public function update_user($data, $userId, $table) {
        $profile_status = $data['in_public'];
        $user = array('in_public' => $profile_status);
        $this->db->where('in_user_id', $userId);
        $this->db->update($table, $user);
        //echo $this->db->last_query();die;	
    }

    public function add_user_profile_setting($data, $table) {
        //echo '<pre>'; print_r($data); die;

        $arrUser = array('in_user_id' => $data['in_user_id'],
            'in_public' => $data['in_public'],
            'st_contact' => $data['st_contact'],
            'st_driver' => $data['st_driver'],
            'dt_created' => $data['dt_created'],
            'in_deleted' => '0'
        );
        $this->db->insert($table, $arrUser);
        //echo $this->db->last_query();die;	
    }

    function update_password($array, $user_id) {
        $this->db->where('in_user_id', $user_id);
        $this->db->update('tbl_users', $array);
        //$this->db->last_query();
    }

    function profile_setting($user_id) {
        $this->db->select('pr.in_public,pr.st_contact, pr.st_driver,u.st_profile_image,u.in_pushnotification');
        $this->db->from('tbl_user_profile_setting pr');
        $this->db->join('tbl_users u', 'pr.in_user_id=u.in_user_id AND u.in_deleted = 0', 'INNER');
        $this->db->where('pr.in_deleted', 0);
        $this->db->where('pr.in_user_id', $user_id);
        $query = $this->db->get();
        //echo "<pre>";print_r($this->db->last_query());die;
        //return $query->result_array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {

                if (@in_array('st_address1', unserialize($Row->st_contact))) {
                    $flgaddress = 1;
                } else {
                    $flgaddress = 0;
                }
                if (@in_array('st_primary_phone', unserialize($Row->st_contact))) {
                    $flgphone = 1;
                } else {
                    $flgphone = 0;
                }
                if (@in_array('st_email', unserialize($Row->st_contact))) {
                    $flgemail = 1;
                } else {
                    $flgemail = 0;
                }
                if (@in_array('st_website', unserialize($Row->st_contact))) {
                    $flgwebsite = 1;
                } else {
                    $flgwebsite = 0;
                }

                if (@in_array('st_driver_availability', unserialize($Row->st_driver))) {
                    $flgavl = 1;
                } else {
                    $flgavl = 0;
                }
                if (@in_array('st_vehicle_type', unserialize($Row->st_driver))) {
                    $flgvehicletype = 1;
                } else {
                    $flgvehicletype = 0;
                }
                if (@in_array('st_vehicle_color', unserialize($Row->st_driver))) {
                    $flgcolor = 1;
                } else {
                    $flgcolor = 0;
                }
                if (@in_array('st_vehicle_license_plate', unserialize($Row->st_driver))) {
                    $flgplate = 1;
                } else {
                    $flgplate = 0;
                }
                if (@in_array('st_vehicle_license_state', unserialize($Row->st_driver))) {
                    $flgstate = 1;
                } else {
                    $flgstate = 0;
                }
                if (@in_array('in_distance_to_drive', unserialize($Row->st_driver))) {
                    $flgdistance = 1;
                } else {
                    $flgdistance = 0;
                }




                $arrData = array('userimage' => ($Row->st_profile_image != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $Row->st_profile_image)) ? base_url() . 'upload/profile/250x250/' . $Row->st_profile_image : base_url() . 'upload/profile/no_photo_icon.png',
                    'notification' => (int)$Row->in_pushnotification,
                    'flgIspublic_profile' => (int)$Row->in_public,
                    'flgIsAddressVisible' => $flgaddress,
                    'flgIsPhonenoVisible' => $flgphone,
                    'flgIsEmailVisible' => $flgemail,
                    'flgIsWebsiteVisible' => $flgwebsite,
                    'flgIsAvailableDaysVisible' => $flgavl,
                    'flgIsVehicleTypeVisible' => $flgvehicletype,
                    'flgIsColorVisible' => $flgcolor,
                    'flgIsLicensePlateVisible' => $flgplate,
                    'flgIsLicenseStateVisible' => $flgstate,
                    'flgIsDriveDistanceVisible' => $flgdistance
                );
            }
            return $arrData;
        }
    }

    #*********************************************************************************************
    #	Function	:	get_org_details
    #	Purpouse	:	Get Transportation details
    #*********************************************************************************************

    public function get_org_details($transport_id) {
        $transport_details = array();
        $this->db->select("	tr.in_organization_id", FALSE);
        $where = array("tr.in_deleted" => "0", "tr.in_transportation_id" => $transport_id);
        $this->db->from("tbl_transportation tr");
        $this->db->where($where);
        $query = $this->db->get();
        if ($query->num_rows() > 0) {
            $transport_details = $query->result_array();
        }
        //echo "<pre>";print_r($transport_details);die;
        return $transport_details;
    }

    # *******************************************************************************************	
    #	Function	:	update_user_data	
    #	Purpose		:	Updating user picture
    # *******************************************************************************************

    public function update_user_data($data, $user_id) {
        $this->db->where('in_user_id', $user_id);
        $this->db->update('tbl_users', $data);
        return $this->db->affected_rows();
    }

    public function get_transport_photos($tra_id, $limit, $page, $rec_per_page) {
        $this->db->select('st_file_name,in_transport_photo_id', FALSE);
        $this->db->from('tbl_transportation_photo');
        $this->db->where('in_deleted', 0);
        $this->db->where('in_transportation_id', $tra_id);
        if (!isset($limit)) {
            $limit = 0;
        }
        if ($page > 0) {
            $this->db->limit($rec_per_page, $limit);
        }

        $query = $this->db->get();
        // echo $this->db->last_query(); die;
        //return $query->result_array();
        $data = array();
        foreach ($query->result_array() as $row) {
            $data[] = array('in_transport_photo_id' => $row['in_transport_photo_id'],
                'st_file_name' => base_url() . 'upload/trasnportation/250x250/' . $row['st_file_name']
            );
        }
        return $data;
    }

    public function get_transport_photos_count($transport_id) {
        $this->db->select('in_transport_photo_id', FALSE);
        $this->db->from('tbl_transportation_photo');
        $this->db->where('in_deleted', 0);
        $this->db->where('in_transportation_id', $transport_id);
        $query = $this->db->get();
        return $query->num_rows();
    }

    #*********************************************************************************************
    #	Function	:	get_legs_participants
    #	Purpouse	:	Session User is already join leg or not
    #*********************************************************************************************	

    function get_legs_participant($user_id, $leg_id, $transport_id, $join = '') {
        $this->db->select("in_tr_pr_id");
        $where = array("in_deleted" => "0",
            "in_transportation_leg_id" => $leg_id,
            "in_transportation_id" => $transport_id);
        if ($join == '') {
            $where['in_user_id'] = $user_id;
        }
        $this->db->from("tbl_transportation_participants");
        $this->db->where($where);
        $query = $this->db->get();
        return $query->num_rows();
    }

    # *******************************************************************************************	
    #	Function	:	delete_user_legs	
    #	Purpose		:	Delete driver legs
    # *******************************************************************************************	

    public function delete_user_leg($user_id, $leg_id, $transport_id) {
        $res = $this->get_legs_participant($user_id, $leg_id, $transport_id);

        //echo '<pre>'; print_r($res); die;
        if ($res > 0) {


            $transport_details = $this->get_transport_details($transport_id);
            /* if($transport_details[0]['st_trans_type'] != 'D')
              {
              $arrData = array("in_deleted"=>1);
              $this->db->where('in_transportation_leg_id',$leg_id);
              $this->db->where('in_user_id',$user_id);
              $this->db->update("tbl_transportation_participants",$arrData);
              } */

            $arrData = array("in_deleted" => 1);
            $this->db->where('in_transportation_leg_id', $leg_id);           
            $this->db->where('in_user_id', $user_id);
            $this->db->update("tbl_transportation_participants", $arrData);

            $arrData = array("in_deleted" => 1);
            $this->db->where('in_transportation_leg_id', $leg_id);
            $this->db->update("tbl_transportation_leg_detail", $arrData);

            $arrData = array("in_deleted" => 1);
            $this->db->where('in_transportation_leg_id', $leg_id);
            $this->db->update("tbl_transportation_leg", $arrData);

            $arrData = array("in_deleted" => 1);
            $this->db->where('in_transportation_leg_id', $leg_id);
            $this->db->update("tbl_routes", $arrData);
            //echo $this->db->last_query();die;
        }
    }

    #*********************************************************************************************
    #	Function	:	get_transport_details
    #	Purpouse	:	Get Transportation details
    #*********************************************************************************************

    public function get_transport_details($transport_id) {
        $transport_details = array();
        $this->db->select("	tr.in_transportation_id,
							tr.in_trans_coods_id,
							tr.in_organization_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_from_country,
							tr.st_to_street,
							tr.st_to_city,
							tr.st_to_state,
							tr.st_to_zip,
							tr.st_to_country,
							tr.dt_pickup_date,
							tr.dt_target,
							tr.st_from_info,
							tr.st_to_info,
							tr.st_trans_type,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.dt_confirm,
							tr.in_status,
							tr.in_created_by,
							tr.in_organization_id,
							tr.in_need_trans_monitor,
							tr.accTcid,
							tr.st_trans_name,
							tr.in_airline_transport,
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							u.st_profile_image,
							u.st_email,
							u.in_public,							
							p.in_user_id,
							p.st_primary_phone,
							p.st_address1,
							p.st_city,
							p.st_state,
							p.st_zip,
							p.st_driver,
							p.st_pilot,
							o.st_org_image,
							o.st_org_name,
							o.st_org_code,
							count(tp.in_tr_pr_id) as flgtrjoined,
							tr.in_status,					
							o.st_additional_info,
							ou.st_permission", FALSE);
        $where = array("tr.in_deleted" => "0", "tr.in_transportation_id" => $transport_id);
        $this->db->from("tbl_transportation tr");
        $this->db->join("tbl_user_profile p ", "p.in_user_id= tr.in_trans_coods_id", "INNER");
        $this->db->join("tbl_users u", "p.in_user_id = u.in_user_id", "INNER");
        $this->db->join("tbl_organization o", "o.in_organization_id = tr.in_organization_id AND o.in_deleted='0'", "INNER");
        // $this->db->join("tbl_transportation_participants tp", "tr.in_transportation_id = tp.in_transportation_id AND tp.in_deleted='0'", "INNER");
        $this->db->join("tbl_transportation_participants tp", "tr.in_transportation_id = tp.in_transportation_id AND tp.in_deleted='0'", "LEFT");
        $this->db->join("tbl_organization_user ou", "ou.in_user_id = tr.in_created_by AND ou.in_deleted='0' AND ou.in_status='1'", "LEFT");
        $this->db->where($where);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        if ($query->num_rows() > 0) {
            $transport_details = $query->result_array();
        }
        //echo "<pre>";print_r($transport_details);die;
        return $transport_details;
    }

    function get_leg_details($leg_id,$user_id='',$organization_id='') { 
//SELECT l.in_transportation_leg_id,in_transportation_id,st_leg_type,st_street,st_city,st_zip,dt_start_time,st_timezone FROM tbl_transportation_leg l,tbl_transportation_leg_detail ld WHERE ld.in_transportation_leg_id=l.in_transportation_leg_id AND l.in_transportation_leg_id='3'
        $this->db->select("tr.in_status,tr.dt_target,l.in_transportation_leg_id,l.in_multi_user,l.in_user_num,l.st_meeting_location,l.in_transportation_id,ld.st_leg_type,l.in_route_type,ld.st_street,ld.st_state,ld.st_city,ld.st_zip,ld.dt_start_time,ld.st_timezone,l.in_status as mark_completed,ld.st_country,p.st_driver,p.st_pilot,ou.st_permission,ou.in_organization_id,o.st_org_code");
        $where = array("l.in_deleted" => "0",
            "l.in_transportation_leg_id" => $leg_id);
        $this->db->from("tbl_transportation_leg l");
        $this->db->from("tbl_transportation_leg_detail ld");
        $this->db->join("tbl_transportation tr", "l.in_transportation_id = tr.in_transportation_id", "INNER");
        $this->db->join("tbl_user_profile p ", "p.in_user_id= l.in_created_by", "INNER");
        $this->db->join("tbl_organization_user ou", "ou.in_user_id = l.in_created_by AND ou.in_deleted='0' AND ou.in_status='1'", "LEFT");
        $this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id AND o.in_deleted='0'","INNER");
		$this->db->where("ld.in_transportation_leg_id=l.in_transportation_leg_id", NULL, FALSE);

        $this->db->where($where);
        $query = $this->db->get();
        $arrData = array();
        $arrData1 = array();
        $arrData2 = array();
		$flgIsJoinTransport = '';
		$flgconfirm = '';
		$flgTransportConfirmedActive ='';
        //echo $this->db->last_query();die;
        if ($query->num_rows() > 0) {
            $airport_details = array("st_latitude" => "", "st_longitude" => "");
            foreach ($query->result() as $Row) {                
                if ($Row->in_status == '2') {
                    $flgconfirm = '1';
                } else {
                    $flgconfirm = '0';
                }
				
				if($Row->in_status == '2' && ($Row->dt_target >= date('Y-m-d')))
				{
					$flgTransportConfirmedActive ='1';
				}
				else
				{
					$flgTransportConfirmedActive ='0';
				}

               /* if (@array_key_exists("transport", unserialize($Row->st_permission))) {                    
                    $flgIsJoinTransport = '1';
                } else {
                    $flgIsJoinTransport = '0';
                }*/
				
				$sqlpermission = "SELECT st_permission FROM tbl_organization_user  where in_user_id = '".$user_id."' AND in_organization_id='".$organization_id."'";
                $sqpermission = $this->db->query($sqlpermission);
                $numrows1 = $sqpermission->num_rows($sqpermission);
                $permission = $sqpermission->result();

                if (@array_key_exists("transport", @unserialize($permission[0]->st_permission))) {                    
                    $flgIsJoinTransport = '1';
                } else {
                    $flgIsJoinTransport = '0';
                }
				
				
				
				

                $arrData1['flgIsJoinTransportPermission'] = $flgIsJoinTransport;
				 if ($Row->st_leg_type == "O") {
					$arrData1['leg_type_P'] = $Row->st_leg_type;
					$arrData1['leg_id'] = $Row->in_transportation_leg_id; 
					$arrData1['pick_street'] = $Row->st_street;
					$arrData1['pick_city'] = $Row->st_city;
                    $arrData1['pick_state'] = $Row->st_state;
                    $arrData1['pick_zip'] = $Row->st_zip;
                    $arrData1['pick_country'] = $Row->st_country; 
					$arrData1['comment'] = $Row->st_meeting_location;
					$arrData1['flgIsTransportConfirmed'] = $flgconfirm;
					$arrData1['flgTransportConfirmedActive'] = $flgTransportConfirmedActive;	
					$arrData1['mark_completed'] = $Row->mark_completed;
					$arrData1['meeting_location'] = $Row->st_meeting_location;
					$arrData1['st_org_code'] = $Row->st_org_code;
					$arrData1['in_organization_id'] = $Row->in_organization_id;
					
				 }
				$inUserProfile='';	
				$sqluserprofile = "SELECT st_driver,st_pilot FROM tbl_user_profile  where in_user_id = '".$user_id."'";
                $sqprofile = $this->db->query($sqluserprofile);
                $numrows1 = $sqprofile->num_rows($sqprofile);
                $userprofile = $sqprofile->result();
				
				if ($userprofile[0]->st_driver=='Y') {                    
                    $inUserProfile = '1';
                } 
				
				if ($userprofile[0]->st_pilot == 'Y') {                       
                        $inUserProfile = '2';
                }
				 if ($userprofile[0]->st_driver == 'Y' && $userprofile[0]->st_pilot == 'Y') {                       
                        $inUserProfile = '3';
                    }
				if ($userprofile[0]->st_driver == 'N' && $userprofile[0]->st_pilot == 'N') {
                        $inUserProfile = '0';
                    }
				if ($userprofile[0]->st_driver == NULL && $userprofile[0]->st_pilot == NULL) {
                        $inUserProfile = '0';
                    }	

                if ($Row->st_leg_type == "P") {
                    if ($Row->in_route_type == '1') {
                        $airport_details = $this->get_airport_details($Row->st_street);
                    }
                    $arrData1['leg_type_P'] = $Row->st_leg_type;
					$arrData1['leg_id'] = $Row->in_transportation_leg_id;
                    $arrData1['flgIsTransportConfirmed'] = $flgconfirm;
					$arrData1['flgTransportConfirmedActive'] = $flgTransportConfirmedActive;
                    $arrData1['in_transportation_id'] = $Row->in_transportation_id;
                    $arrData1['leg_id'] = $Row->in_transportation_leg_id;
                    $arrData1['mark_completed'] = $Row->mark_completed;
                    $arrData1['pick_street'] = $Row->st_street;
                    $arrData1['pick_state'] = $Row->st_state;
                    $arrData1['pick_city'] = $Row->st_city;
                    $arrData1['pick_zip'] = $Row->st_zip;
                    $arrData1['pick_country'] = $Row->st_country;
                    $arrData1['pick_start_time'] = $Row->dt_start_time;
                    $arrData1['pick_timezone'] = $Row->st_timezone;
                    $arrData1['pick_lat'] = (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '') ? $airport_details['st_latitude'] : '';
                    $arrData1['pick_lng'] = (isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') ? $airport_details['st_longitude'] : '';
                    $arrData1['meeting_location'] = $Row->st_meeting_location;
                    $arrData1['in_multi_user'] = $Row->in_multi_user;
                    $arrData1['in_user_num'] = $Row->in_user_num;
                    $arrData1['in_volunteer_type'] = $inUserProfile;
					$arrData1['st_org_code'] = $Row->st_org_code;
                }
                if ($Row->st_leg_type == "D") {
                    if ($Row->in_route_type == '1') {
                        $airport_details = $this->get_airport_details($Row->st_street);
                    }
                    $arrData2['leg_type_D'] = $Row->st_leg_type;
                    $arrData2['leg_id'] = $Row->in_transportation_leg_id;
					$arrData2['flgTransportConfirmedActive'] = $flgTransportConfirmedActive;
                    $arrData2['mark_completed'] = $Row->mark_completed;
                    $arrData2['drop_street'] = $Row->st_street;
                    $arrData2['drop_state'] = $Row->st_state;
                    $arrData2['drop_city'] = $Row->st_city;
                    $arrData2['drop_zip'] = $Row->st_zip;
                    $arrData1['drop_country'] = $Row->st_country;
                    $arrData2['drop_start_time'] = $Row->dt_start_time;
                    $arrData2['drop_timezone'] = $Row->st_timezone;
                    $arrData2['drop_lat'] = (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '') ? $airport_details['st_latitude'] : '';
                    $arrData2['drop_lng'] = (isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') ? $airport_details['st_longitude'] : '';


                    $arrData2['meeting_location'] = $Row->st_meeting_location;
                    $arrData2['in_multi_user'] = $Row->in_multi_user;
                    $arrData2['in_user_num'] = $Row->in_user_num; 
                    $arrData2['in_volunteer_type'] = $inUserProfile;
					$arrData2['in_organization_id'] = $Row->in_organization_id;
					$arrData2['st_org_code'] = $Row->st_org_code;
                }
            }
        }
        $arrData = array_merge($arrData1, $arrData2);
        return $arrData;
    }

    public function IsUserJoinedTransport($transport_id, $user_id) {
        $this->db->select("in_tr_pr_id", FALSE);
        $where = array("in_deleted" => "0", "in_transportation_id" => $transport_id, "in_user_id" => $user_id);
        $this->db->from("tbl_transportation_participants");
        $this->db->where($where);
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function update_driver_vehicle_info($data, $vehicle_id, $table) {
        $this->db->where('in_vehicle_id', $vehicle_id);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    public function update_pilot_plane_info($data, $id, $table) {
        $this->db->where('in_pilot_id', $id);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    public function flgIsProfileVerified($id) {
        $this->db->select('v.in_verify_id');
        $this->db->from("tbl_verification v");
        $this->db->where('v.in_user_id', $id);
        $this->db->where('v.in_deleted', 0);
        $this->db->where('v.fl_doobert_verified', '1');
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        return $query->num_rows();
    }

    function profile_setting_user($user_id) {
        $this->db->select('u.in_public,u.st_profile_image,u.in_pushnotification');
        $this->db->from('tbl_users u');
        $this->db->where('u.in_deleted', 0);
        $this->db->where('u.in_user_id', $user_id);
        $query = $this->db->get();
        //echo "<pre>";print_r($this->db->last_query());die;
        //return $query->result_array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {

                $arrData = array('userimage' => ($Row->st_profile_image != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $Row->st_profile_image)) ? base_url() . 'upload/profile/250x250/' . $Row->st_profile_image : base_url() . 'upload/profile/no_photo_icon.png',
                    'notification' => (int)$Row->in_pushnotification,
                    'flgIspublic_profile' => (int)1,
                    'flgIsAddressVisible' => 1,
                    'flgIsPhonenoVisible' => 1,
                    'flgIsEmailVisible' => 1,
                    'flgIsWebsiteVisible' => 1,
                    'flgIsAvailableDaysVisible' => 1,
                    'flgIsVehicleTypeVisible' => 1,
                    'flgIsColorVisible' => 1,
                    'flgIsLicensePlateVisible' => 1,
                    'flgIsLicenseStateVisible' => 1,
                    'flgIsDriveDistanceVisible' => 1
                );
            }
            return $arrData;
        }
    }

    function get_legs_path($leg_id, $transport_id) {
        $this->db->select('	in_route_id, 
								in_transportation_leg_id, 
								in_transportation_id, 
								in_route_type, 
								st_legs_details, 
								fl_distance, 
								in_deleted');
        $this->db->from('tbl_routes');
        $this->db->where('in_transportation_id', $transport_id);
        $this->db->where('in_transportation_leg_id', $leg_id);
        $this->db->where('in_deleted', '0');
        $this->db->where_not_in('in_route_type', '2'); //added by ghanshyam on 05Dec2014
        $query = $this->db->get();
        //echo "<pre>";print_r($this->db->last_query());die;
        return $query->row_array();
    }

    # *******************************************************************************************	
    #	Function	:	update_distance	
    #	Purpose		:	Update cover distance
    # *******************************************************************************************	

    public function add_distance($distance, $transport_id) {
        /* $arrData = array("in_distance_covered=(in_distance_covered-".$distance.")",FALSE);
          $this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
          $this->db->update("tbl_transportation",$arrData); */
        $query = $this->db->query("UPDATE tbl_transportation SET in_distance_covered = if(((in_distance_covered+" . $distance . ")>=in_tot_distance),in_tot_distance,(in_distance_covered+" . $distance . ")) WHERE in_transportation_id='" . $transport_id . "'");
        //echo $this->db->last_query();die;
    }

    # *******************************************************************************************	
    #	Function	:	update_distance	
    #	Purpose		:	Update cover distance
    # *******************************************************************************************	

    public function update_distance($distance, $transport_id) {
        /* $arrData = array("in_distance_covered=(in_distance_covered-".$distance.")",FALSE);
          $this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
          $this->db->update("tbl_transportation",$arrData); */
        $query = $this->db->query("UPDATE tbl_transportation SET in_distance_covered = if(((in_distance_covered-" . $distance . ")<=0),'0',(in_distance_covered-" . $distance . ")) WHERE in_transportation_id='" . $transport_id . "'");
        //echo $this->db->last_query();die;
    }

    public function add_vehicle_info($vehicle_info) {
        $user_id = $this->db->insert('tbl_user_vehicle', $vehicle_info);
        $this->db->insert_id();
        return $this->db->insert_id();
    }

    public function add_pilot_info($pilot_info) {
        $user_id = $this->db->insert('tbl_user_pilot', $pilot_info);
        $this->db->insert_id();
        return $this->db->insert_id();
    }

    public function flgIsJoinLegPermission($user_id) {
        $this->db->select("st_driver", FALSE);
        $where = array("in_deleted" => "0", "in_user_id" => $user_id, "st_driver" => 'Y');
        $this->db->from("tbl_user_profile");
        $this->db->where($where);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        return $query->num_rows();
    }

    function get_airport_details($airport_id) {
        $this->db->select("st_state,st_city,st_longitude,st_latitude,st_iso_country");
        $this->db->from('tbl_airport');
        $this->db->where('st_loc_id', $airport_id);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        //echo $this->db->last_query();
        return $query->row_array();
    }
	
	# *******************************************************************************************	
	#	Function	:	get_animal_photo	
	#	Purpose		:	Getting one of animal photo
	# *******************************************************************************************
	
	public function get_animal_photo($id) {
		$data = '';
		$result = array();
		$this->db->select('st_file_name,in_profile_pic');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->where('st_file_type','P');
		
		$this->db->order_by('in_file_id','DESC');
		
		//$this->db->limit(1);
		$query = $this->db->get();
		
		if($query->num_rows() > 0) {
			$result = $query->result_array();
			
			foreach($query->result_array() as $row) {
				if($row['in_profile_pic'] == 1) {
					$data = ($row['st_file_name']!='')?$row['st_file_name']:''; 
				}
			}
			
			if($data == '') {
				$data = ($result[0]['st_file_name']!='')?$result[0]['st_file_name']:'';
			}
			return $data;
		}
	}
	
	
	 # *******************************************************************************************	
    #	Function	:	update_pushnotification	
    #	Purpose		:	Updating user info
    # *******************************************************************************************

    public function update_pushnotification($data, $id) {
        $this->db->where('in_user_id', $id);
        $this->db->update('tbl_users', $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }
	
	
	
	public function get_user_pushnotification($id = '') {
        $this->db->select('u.in_pushnotification');
        $this->db->from("tbl_users u");       
        $this->db->where('u.in_user_id', $id);
        $this->db->where('u.in_deleted', 0); 		
        $query = $this->db->get();
        //echo $this->db->last_query();
        return $query->row_array();
    }
	
	function airport_list($serchtext) {
        $query = $this->db->query("select a.in_id, a.st_loc_id,
a.st_state,a.st_city
									FROM (tbl_airport as a)
									WHERE a.st_loc_id LIKE '".$serchtext."%'							
									AND a.in_deleted =  0 LIMIT 100"
									
        );

        $result = $query->result_array();
        //echo "<pre>";print_r($result);die;
        $data = array();
        foreach ($result as $row) {
            $data[] = array('airport_id' => $row['in_id'],
                'loc_id' => $row['st_loc_id'], 
				'st_city' => $row['st_city'],              
                'st_state' => $row['st_state']
			
            );
        }

        return $data;
    }
	
	
	function airport_pickup_details($pickup_locationid)
	{
		$query = $this->db->query("select st_loc_id,st_state,st_city,st_iso_country,st_latitude,st_longitude
									FROM (tbl_airport)
									WHERE st_loc_id = '".$pickup_locationid."'							
									AND in_deleted ='0'"
								);

        $result = $query->result_array();
        //echo "<pre>";print_r($result);die;
        $data = array();
        foreach ($result as $row) {
            $data[] = array('loc_id' 			=> $row['st_loc_id'], 
							'st_city' 			=> $row['st_city'],              
							'st_state' 			=> $row['st_state'],
							 'st_iso_country' 	=> $row['st_iso_country'],							
							 'st_latitude' 		=> $row['st_latitude'],
							'st_longitude' 		=> $row['st_longitude']			
            );
        }

        return $data;
		
	}
	
	
	function airport_dropoff_details($dropoff_locationid)
	{
		$query = $this->db->query("select st_loc_id,st_state,st_city,st_iso_country,st_latitude,st_longitude
									FROM (tbl_airport)
									WHERE st_loc_id = '".$dropoff_locationid."'							
									AND in_deleted = '0'"
								  );

        $result = $query->result_array();
        //echo "<pre>";print_r($result);die;
        $data = array();
        foreach ($result as $row) {
            $data[] = array('loc_id' => $row['st_loc_id'], 
							'st_city' => $row['st_city'],              
							'st_state' => $row['st_state'],
							'st_iso_country' => $row['st_iso_country'],							
							'st_latitude' => $row['st_latitude'],
							'st_longitude' => $row['st_longitude']			
            );
        }

        return $data;
		
	}
	
	function airport_piczip_details($piclat,$piclon)
	{
			$query = $this->db->query("select zip_code
									FROM (tbl_zip_code)
									WHERE lat = '".$piclat."' AND lon='".$piclon."'							
									AND in_deleted =  0"									
        );

       return $query->row_array();
	}
	
	function airport_dropzip_details($droplat,$droplon)
	{
			$query = $this->db->query("select zip_code
									FROM (tbl_zip_code)
									WHERE lat = '".$droplat."' AND lon='".$droplon."'							
									AND in_deleted =  0"
									
        );

       return $query->row_array();
	}
	
	
	public function inUserProfile($user_id) {
        $this->db->select("st_driver,st_pilot", FALSE);
        $where = array("in_deleted" => "0", "in_user_id" => $user_id);
        $this->db->from("tbl_user_profile");
        $this->db->where($where);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        return $query->row_array();
    }
	
	
	function email_exists($data) {
        $this->db->select('in_user_id');
        $this->db->from('tbl_users');
        $this->db->where("st_email", $data['email']);
        $this->db->where("in_deleted", 0);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;	

        if ($query->num_rows() > 0)
            return true;
        else
            return false;
    }
	public function update_users($data) {
        $facebook_id = $data['facebook_id'];
		$google_id   = $data['google_id'];
        $user = array('st_facebook_uid' => $facebook_id,'st_google_uid' => $google_id);
        $this->db->where('st_email', $data['email']);
        $this->db->update('tbl_users', $user);
        //echo $this->db->last_query();die;	
    }
	
	
	
	public function get_transport_participant_users($transport_id = '') {
        $this->db->select('in_user_id');
        $this->db->from("tbl_transportation_participants");        
        $this->db->where('in_transportation_id', $transport_id);
        $this->db->where('in_deleted', 0);
		$this->db->group_by('in_user_id');
        $query = $this->db->get();
	   	$data = array();
        foreach ($query->result_array() as $row) {
			
			$sqltransportprofile  = "SELECT st_driver,st_pilot,st_photographer FROM tbl_user_profile  where in_user_id = '".$row['in_user_id']."' AND in_deleted=0";
													$sqlprofilestat	=	$this->db->query($sqltransportprofile);
													$numrowprofilestat		=	$sqlprofilestat->num_rows($sqlprofilestat);	
													$profilestatus			=	$sqlprofilestat->result();
													$driver				    =	($profilestatus[0]->st_driver == 'Y')? 1 : 0;
													$pilot				    =	($profilestatus[0]->st_pilot == 'Y')? 1:0;
													$photographer			=	($profilestatus[0]->st_photographer == 'Y') ? 1:0;
            $data[] = array('in_user_id'=> $row['in_user_id'],'flgIsPhotographer'=> $photographer,'flgIsDriver'=> $driver,'flgIsPilot'=> $pilot
            );
        }
        return $data;
    }
	
	
	
	/*public function get_user_orgid($user_id = '') {
        $this->db->select('in_organization_id');
        $this->db->from("tbl_organization_user");        
        $this->db->where('in_user_id', $user_id);
        $this->db->where('in_deleted', 0);
		$this->db->group_by('in_organization_id');
        $query = $this->db->get();
	   	$data = array();
        foreach ($query->result_array() as $row) {
            $data[] = array('user_orgid'=> $row['in_organization_id']
            );
        }
        return $data;
    }*/
	
	
	public function get_user_orgid($user_id = ''){
		
		
		$data = array();
		$data1 = array();
		
		$cnd  = " o.in_user_id ='".$user_id."' AND o.in_deleted='0' AND o.in_status='1' ";
		
		
		$this->db->select('o.in_organization_id, o.st_org_name, o.st_org_image',FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->where($cnd, NULL, FALSE);
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		
			foreach ($query->result_array() as $row) {
					
				if (isset($row['st_org_image']) && $row['st_org_image'] != '' && file_exists($this->config->item('upload') . "org_doc/" . $row['st_org_image'])) {
					$orglogo = $this->config->item('upload_url') . "org_doc/" . $row['st_org_image'];
				} else {
					$orglogo = $this->config->item('upload_url') . "profile/no_photo_icon.png";
				}
				
				$data1[$row['in_organization_id']] = array('user_orgid'=> $row['in_organization_id'],'orgname'=>$row['st_org_name'],'orglogo'=>$orglogo);
			}	
		
		
		
		
		
	
		$this->db->select('o.in_organization_id,ou.st_permission,o.st_org_name,o.st_org_image',FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_organization_user as ou','ou.in_organization_id = o.in_organization_id','INNER');
		
		
		$where = "  ou.in_user_id ='".$user_id."' AND ou.in_status='1' AND ou.in_deleted='0' ";
		
		$this->db->where($where, NULL, FALSE);
		
		$this->db->group_by('o.in_organization_id'); 		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		
        foreach ($query->result_array() as $row) {
			//echo '<pre>'; print_r($row);	
			
			if (isset($row['st_org_image']) && $row['st_org_image'] != '' && file_exists($this->config->item('upload') . "org_doc/" . $row['st_org_image'])) {
                $orglogo = $this->config->item('upload_url') . "org_doc/" . $row['st_org_image'];
				} else {
					$orglogo = $this->config->item('upload_url') . "profile/no_photo_icon.png";
				}
			
			
			if(isset($row['st_permission'])){
				$permission_details= unserialize($row['st_permission']);
				
				//print_r($perm['profile_manager']); die;
				//if(isset($permission_details['profile_manager']) && in_array('pr_manager_cr',$permission_details['profile_manager']) && in_array('pr_manager_ed',$permission_details['profile_manager'])){
					$data1[$row['in_organization_id']] = array('user_orgid'=> $row['in_organization_id'],'orgname'=>$row['st_org_name'],'orglogo'=>$orglogo);
				//}			
			}
			
        }
		
		foreach($data1 as $row1)
		{
			$data[] = array('user_orgid'=> $row1['user_orgid'],'orgname'=>$row1['orgname'],'orglogo'=>$row1['orglogo']);
		}
        return $data;
		
	}
	
	public function get_legs_nondoobert_participants_details_by_leg_id($transport_id = '', $leg_id = '') {
        $this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id', FALSE);
        $this->db->from('tbl_non_doobert_transport_users nd');
        $this->db->where('nd.in_deleted', 0);
        $this->db->where('nd.in_leg_id', $leg_id);
        $this->db->where('nd.in_transportation_id', $transport_id);
        $query = $this->db->get();

        //echo "<pre>";print_r($this->db->last_query());//die;
        return $query->result_array();
    }
	
	public function get_all_transport_monitors($transport_id)
	{
		$this->db->select('tp.in_transportation_id,tp.in_user_id,concat(u.st_display_name," ",u.st_last_name) as st_display_name,p.st_address1 as street,p.st_city as city,p.st_state as state,p.st_zip as zipcode,p.st_primary_phone,u.st_email',FALSE);
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join("tbl_users u","u.in_user_id = tp.in_user_id","INNER");
		$this->db->join("tbl_user_profile p ","p.in_user_id = tp.in_user_id","INNER");
		$this->db->where('tp.in_transportation_id',$transport_id);
		$this->db->where('tp.in_deleted','0');
		$this->db->where('tp.in_monitor','1');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->result_array();
	}
	
	public function join_legs($data)
	{
		$this->db->insert('tbl_transportation_participants', $data);
	}
	
	public function get_monitor_part_id($user_id,$transport_id)
	{
		$this->db->select('tp.in_tr_pr_id');
		$this->db->from('tbl_transportation_participants tp');
		$this->db->where('tp.in_transportation_id',$transport_id);
		$this->db->where('tp.in_user_id',$user_id);
		$this->db->where('tp.in_deleted','0');
		$this->db->where('tp.in_monitor','1');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->row_array();
	}
	
	public function update_transport_monitor_status($array,$transport_part_id)
	{
		$this->db->where('in_tr_pr_id',$transport_part_id);
		$this->db->update('tbl_transportation_participants',$array);
		//echo $this->db->last_query();die;
	}
	
	function get_leg_required_user_count_by_id($id) {
		$this->db->select('in_user_num');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_leg_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	
	function get_legs_participants_by_user_id($transport_id,$user_id,$leg_id, $photo_leg_type)
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_leg_id"		=> $leg_id,
						"in_transportation_id"	=> $transport_id,
						"in_photography_profile" => $photo_leg_type);
		if($user_id != '')
		{				
			$where['in_user_id'] = $user_id;				
		}
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();		
		return $query->num_rows();
	}
	
	public function get_org_list($user_id) {
        $this->db->select('o.in_organization_id,o.st_org_name,o.st_org_image');
        $this->db->from('tbl_organization as o');
        $this->db->join('tbl_organization_user as ou', 'ou.in_organization_id = o.in_organization_id', 'LEFT');
        $cnd = '';
        $cnd2 = '';

        $where = "(( o.in_user_id ='" . $user_id . "' " . $cnd . ")  
					OR( ou.in_user_id ='" . $user_id . "' )
					AND ou.in_status='1' 
					AND ou.in_deleted='0'  " . $cnd2 . ") AND o.in_deleted='0' AND o.in_status='1' 
					";
        $this->db->where($where, NULL, FALSE);
        $this->db->group_by('o.in_organization_id');
        $this->db->order_by('o.st_org_name', 'ASC');
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        $arrData = array();
        foreach ($query->result() as $Row) {
            $arrData[] = array("org_id" => $Row->in_organization_id,
                "org_name" => html_entity_decode($Row->st_org_name),
                "orgimg_url" => ($Row->st_org_image != '' && file_exists($this->config->item('upload') . "org_doc/63x63/" . $Row->st_org_image)) ? base_url() . 'upload/org_doc/63x63/' . $Row->st_org_image : base_url() . 'upload/org_doc/63x63/no_photo_icon.png',
            );
        }
        return $arrData;
    }
	# *******************************************************************************************	
    #	Function	:	add_animal_profile	
    #	Purpose		:	Adding animal information
    # *******************************************************************************************

    public function add_animal_profile($data) {
        $this->db->insert('tbl_animal', $data);
        return $this->db->affected_rows();
    }
	
	function add_animal_photo($arrData) {
        $user_id = $this->db->insert('tbl_animal_file', $arrData);
        //echo $this->db->last_query(); die;
        return $this->db->insert_id();
    }
	
	public function get_animal_list($org_id, $limit, $page, $rec_per_page) {
        $this->db->select('a.in_animal_id,a.st_animal_name,ab.st_animal_breed_name,af.st_file_name,at.st_animal_type_name', FALSE);
        $this->db->from('tbl_animal as a');
        $this->db->join('tbl_animal_file af', 'af.in_animal_id = a.in_animal_id AND af.st_file_type="P" AND af.in_deleted="0" ', 'LEFT');

        $this->db->join('tbl_demeanor as d', 'a.in_demeanor_id = d.in_demeanor_id', 'LEFT');
        $this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id = a.in_primary_breed_id', 'LEFT');
        $this->db->join('tbl_animal_type at', 'at.in_animal_type_id = a.in_animal_type_id', 'LEFT');
        //$this->db->join('tbl_animal_transportation tat', 'tat.in_animal_id = a.in_animal_id AND tat.in_deleted = 0', 'LEFT');
        //$this->db->join('tbl_transportation tt', 'tat.in_transportation_id = tt.in_transportation_id AND tt.in_status != 3', 'LEFT');        

        $this->db->where('a.in_deleted', 0);
        $this->db->where('a.in_organization_id', $org_id);
        $this->db->order_by('a.in_animal_id', 'DESC');
        $this->db->group_by('a.in_animal_id');
        if (!isset($limit)) {
            $limit = 0;
        }
        if ($page > 0) {
            $this->db->limit($rec_per_page, $limit);
        }
        $query = $this->db->get();
        //echo $this->db->last_query(); die;       
        $arrData = array();
        $st_file_name = '';

        foreach ($query->result() as $Row) {

            $st_file_name = $this->get_animal_photo($Row->in_animal_id);

            $arrData[] = array("animal_id" => $Row->in_animal_id,
                "animal_name" => $Row->st_animal_name,
                "animal_breed_name" => isset($Row->st_animal_breed_name) ? $Row->st_animal_breed_name : '',
                "category" => isset($Row->st_animal_type_name) ? $Row->st_animal_type_name : '',
                "animal_icon" => ($st_file_name != '' && file_exists($this->config->item('upload') . "animal_images/" . $st_file_name)) ? base_url() . 'upload/animal_images/' . $st_file_name : base_url() . 'upload/animal_images/no_photo_icon.png',
            );
        }

        return $arrData;
    }
	
	
	/*
	function get_add_animal_organizations($user_id) {
        $this->db->select('o.in_organization_id,o.in_created_by,o.st_org_name,o.st_org_image,ou.st_permission ', FALSE);
        $this->db->from('tbl_organization as o');
        $this->db->join('tbl_organization_user as ou', 'ou.in_organization_id = o.in_organization_id', 'LEFT');

        $where = "((o.in_user_id ='" . $user_id . "') OR (ou.in_user_id ='" . $user_id . "' AND ou.in_status='1' AND ou.in_deleted='0')) 
					AND o.in_deleted='0' AND o.in_status='1'";
        $this->db->where($where, NULL, FALSE);
        $this->db->group_by('o.in_organization_id');
        $this->db->order_by('o.st_org_name', 'ASC');
        $query = $this->db->get();      

        $arrData = array();
		$myarray=array();
        foreach ($query->result() as $Row) {
        
		$make_array_user = unserialize($Row->st_permission);	
		if($Row->in_created_by == $user_id)		
			{
				 $arrData[] = array("org_id" => $Row->in_organization_id,
					                "org_name" => html_entity_decode($Row->st_org_name),
					                "orgimg_url" => ($Row->st_org_image != '' && file_exists($this->config->item('upload') . "org_doc/" . $Row->st_org_image)) ? base_url() . 'upload/org_doc/' . $Row->st_org_image : base_url() . 'upload/org_doc/no_photo_icon.png',
				);
			}
			
			
		    
			else if(isset($make_array_user['profile_manager']) && in_array('pr_manager_cr',$make_array_user['profile_manager']) == true && in_array('pr_manager_ed',$make_array_user['profile_manager']) == true) {
            $arrData[] = array("org_id" => $Row->in_organization_id,
								"org_name" => html_entity_decode($Row->st_org_name),
								"orgimg_url" => ($Row->st_org_image != '' && file_exists($this->config->item('upload') . "org_doc/" . $Row->st_org_image)) ? base_url() . 'upload/org_doc/' . $Row->st_org_image : base_url() . 'upload/org_doc/no_photo_icon.png',
            );
			}
			
        }
        return $arrData;
    }
	
	*/
	
	function get_add_animal_organizations($user_id) {
        $this->db->select('o.in_organization_id,o.in_created_by,o.st_org_name,o.st_org_image,ou.st_permission ', FALSE);
        $this->db->from('tbl_organization as o');
        $this->db->join('tbl_organization_user as ou', 'ou.in_organization_id = o.in_organization_id', 'LEFT');

        $where = "((o.in_user_id ='" . $user_id . "') OR (ou.in_user_id ='" . $user_id . "' AND ou.in_status='1' AND ou.in_deleted='0' )) 
					AND o.in_deleted='0' AND o.in_status='1'";
        $this->db->where($where, NULL, FALSE);
        $this->db->group_by('o.in_organization_id');
        $this->db->order_by('o.st_org_name', 'ASC');
        $query = $this->db->get();        

        $arrData = array();
		$myarray=array();
        foreach ($query->result() as $Row) {
        
		$make_array_user = unserialize($Row->st_permission);	
		if($Row->in_created_by == $user_id)		
			{
				 $arrData[] = array("org_id" => $Row->in_organization_id,
					                "org_name" => html_entity_decode($Row->st_org_name),
					                "orgimg_url" => ($Row->st_org_image != '' && file_exists($this->config->item('upload') . "org_doc/" . $Row->st_org_image)) ? base_url() . 'upload/org_doc/' . $Row->st_org_image : base_url() . 'upload/org_doc/no_photo_icon.png',
				);
			}	
		
			else if(isset($Row->st_permission)) {
            $arrData[] = array("org_id" => $Row->in_organization_id,
								"org_name" => html_entity_decode($Row->st_org_name),
								"orgimg_url" => ($Row->st_org_image != '' && file_exists($this->config->item('upload') . "org_doc/" . $Row->st_org_image)) ? base_url() . 'upload/org_doc/' . $Row->st_org_image : base_url() . 'upload/org_doc/no_photo_icon.png',
            );
			}
			
        }
        return $arrData;
    }
	
	
	public function get_animal_type_list() {
        $this->db->select('at.st_animal_type_name as name,at.in_animal_type_id as type_id', FALSE);
        $this->db->from('tbl_animal_type as at');
        $this->db->where('in_status', 1);
        $this->db->where('in_deleted', 0);
        $this->db->order_by('at.st_animal_type_name', 'ASC');
        $query = $this->db->get();
        return $query->result_array();
    }
	public function get_animal_breed($id) {
        $this->db->select('st_animal_breed_name as breed_name,in_animal_breed_id as breed_id');
        $this->db->from('tbl_animal_breed');
        $this->db->where('in_status', 1);
        $this->db->where('in_animal_type_id', $id);
        $this->db->where('in_deleted', 0);
        $this->db->order_by('st_animal_breed_name', 'ASC');
        $query = $this->db->get();
        return $query->result_array();
    }
		
	public function insert_trip($data) {
        $this->db->insert('tbl_trips', $data);
    }
	
	
	public function get_trip($u_id){					
		$todaysdate=date('Y-m-d');
        $this->db->select("t.in_trip_id,t.in_filled as flgIsFilled,t.st_from_street,
		t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,
		t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_trip as trip_date,t.in_crates as crate_space,t.in_tethered as uncrate_space,t.in_paid as flgIsPaidTransport,t.in_type as transport_type
		", false);
        $this->db->from('tbl_trips t');     
		$this->db->where("t.dt_trip >= '".$todaysdate."'", NULL, FALSE);
        $this->db->where('t.in_deleted', 0);
		$this->db->where('t.in_user_id', $u_id);
        //$this->db->order_by($sortby,$order);
		$this->db->group_by('t.in_trip_id');
		$query = $this->db->get();
        //echo $this->db->last_query();  die;
         $arrTrip = array();
        if ($query->num_rows() > 0) {
			$trtype='';
			
            foreach ($query->result() as $Row) { 
				if($Row->transport_type == '1'){ $trtype = 'D';}
				if($Row->transport_type == '2'){ $trtype = 'P';}
                $arrTrip[] = array('trip_id' 	=> $Row->in_trip_id,
								'flgIsFilled' 	=> $Row->flgIsFilled, 
								'from_city' 	=> isset($Row->st_from_city) ? $Row->st_from_city:'',
								'from_state' 	=> isset($Row->st_from_state) ? $Row->st_from_state :'',
								'from_zip' 		=> isset($Row->st_from_zip) ? $Row->st_from_zip : '',
								'from_country' 	=> isset($Row->st_from_country) ? $Row->st_from_country : '',

								'from_location'  => ($Row->st_from_city ? $Row->st_from_city.", ":"").($Row->st_from_state?$Row->st_from_state.", ":"").($Row->st_from_zip? $Row->st_from_zip : ""),


								
								'to_city' 		=> isset($Row->st_to_city) ? $Row->st_to_city : '',
								'to_state' 		=> isset($Row->st_to_state) ? $Row->st_to_state : '',
								'to_zip' 		=> isset($Row->st_to_zip) ? $Row->st_to_zip : '',
								'to_country' 	=> isset($Row->st_to_country) ? $Row->st_to_country : '',
								
								'to_location'  => ($Row->st_to_city ? $Row->st_to_city.", ":"").($Row->st_to_state?$Row->st_to_state.", ":"").($Row->st_to_zip? $Row->st_to_zip : ""),
								
								
								'trip_date' 		=> isset($Row->trip_date) ? $Row->trip_date : '',
								'crate_space' 		=> isset($Row->crate_space) ? $Row->crate_space : '',
								'uncrate_space' 	=> isset($Row->uncrate_space) ? $Row->uncrate_space :'',
								'flgIsPaidTransport'=> isset($Row->flgIsPaidTransport) ? $Row->flgIsPaidTransport :'',
								'transport_type' 	=> $trtype
                );
            }
            return $arrTrip;
        }
    }
	
	
	public function get_pasttrip($uid) {					
		$todaysdate=date('Y-m-d');
        $this->db->select("t.in_trip_id,t.in_filled as flgIsFilled,t.st_from_street,
		t.st_from_city,t.st_from_state,t.st_from_zip,
		t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.dt_trip as trip_date,t.in_crates as crate_space,t.in_tethered as uncrate_space,t.in_paid as flgIsPaidTransport,t.in_type as transport_type
		", false);
        $this->db->from('tbl_trips t');     
		$this->db->where("t.dt_trip < '".$todaysdate."'", NULL, FALSE);
		$this->db->where("t.in_user_id",$uid);
        $this->db->where('t.in_deleted', 0);
        //$this->db->order_by($sortby,$order);
		$this->db->group_by('t.in_trip_id');		
        $query = $this->db->get();
        //echo $this->db->last_query();  die;
         $arrpastTrip = array();
        if ($query->num_rows() > 0) {
			$trtype='';
			
            foreach ($query->result() as $Row) { 
				if($Row->transport_type == '1'){ $trtype='D';}
			if($Row->transport_type == '2'){ $trtype='P';}
                $arrpastTrip[] = array('trip_id' 	=> $Row->in_trip_id,
								'flgIsFilled' 		=> $Row->flgIsFilled, 
								//'st_from_city' 		=> isset($Row->st_from_city) ? $Row->st_from_city:'',
								//'st_from_state' 	=> isset($Row->st_from_state) ? $Row->st_from_state :'',
								//'st_from_zip' 		=> isset($Row->st_from_zip) ? $Row->st_from_zip : '',

								'from_location'  => ($Row->st_from_city ? $Row->st_from_city.", ":"").($Row->st_from_state?$Row->st_from_state.", ":"").($Row->st_from_zip? $Row->st_from_zip : ""),
								//'st_to_city' 		=> isset($Row->st_to_city) ? $Row->st_to_city : '',
								//'st_to_state' 		=> isset($Row->st_to_state) ? $Row->st_to_state : '',
								//'st_to_zip' 		=> isset($Row->st_to_zip) ? $Row->st_to_zip : '',
								
								'to_location'  => ($Row->st_to_city ? $Row->st_to_city.", ":"").($Row->st_to_state?$Row->st_to_state.", ":"").($Row->st_to_zip? $Row->st_to_zip : ""),
								
								'trip_date' 		=> isset($Row->trip_date) ? $Row->trip_date : '',
								'crate_space' 		=> isset($Row->crate_space) ? $Row->crate_space : '',
								'uncrate_space' 	=> isset($Row->uncrate_space) ? $Row->uncrate_space :'',
								'flgIsPaidTransport'=> isset($Row->flgIsPaidTransport) ? $Row->flgIsPaidTransport :'',
								'transport_type' 	=> $trtype
                );
            }
            return $arrpastTrip;
        }
    }
	
	
	public function update_trip_info($data,$tripId,$table) {		
		$this->db->where('in_trip_id',$tripId);
		$this->db->update($table,$data);
		//echo $this->db->last_query(); die;
		return $this->db->affected_rows();	
	}
	
	public function get_trip_profile($tripId)
	{
		$this->db->select('t.in_trip_id,t.in_user_id,t.in_filled,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_trip,t.in_crates,t.in_tethered,t.in_type,t.in_paid');
		$this->db->from('tbl_trips as t');		
		$this->db->where('t.in_trip_id',$tripId);			
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	
	function get_location($ziptxt) {
        $this->db->select('z.city,z.state_prefix,z.zip_code,z.st_country');
        $this->db->from('tbl_zip_code as z');
		$where='';
		$where.="z.zip_code LIKE '".$ziptxt."%'  or lower(z.city) LIKE lower('".$ziptxt."%')  or UPPER(z.state_prefix) = UPPER('".$ziptxt."%')";
		$query=$this->db->where($where);
        $query=$this->db->get();
		//echo $this->db->last_query(); die;
        $result = $query->result_array();
        //echo "<pre>";print_r($result);die;
        $data = array();
        foreach ($result as $row) {
			$country='';
			if($row['st_country']=='US'){$country='USA';}
            $data[] = array('city'  	=> isset($row['city']) ? $row['city'] : '',
							'state' 	=> isset($row['state_prefix']) ? $row['state_prefix'] : '',
							'zip' 		=> isset($row['zip_code']) ? $row['zip_code'] : '',
							'Country' 	=> $country
            );
        }
        return $data;
    }
	
	public function delete_trip($tripId) 
	{   
		$arrTrip = 	array('in_deleted' 	=> '1' );
		$this->db->where('in_trip_id', $tripId);
		$this->db->update('tbl_trips', $arrTrip);
		return $this->db->affected_rows();
	}	
	
	
	
	
	# *******************************************************************************************	
	#	Function	:	add_notification	
	#	Purpose		:	For adding user notification
	# *******************************************************************************************
	
	public function add_notification($data) {
		$this->db->insert('tbl_notification',$data);
		$this->db->affected_rows();
	}
	
	public function get_animal_images($id) {
		$data = array();
		$animal_image = '';
		$this->db->select('st_file_name,in_file_id,st_file_type,in_profile_pic');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('st_file_type =','P');
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_file_id','ASC');
		$query = $this->db->get();
		$data = $query->row_array();
		
		if(!empty($data)) {
			$animal_image = $data['st_file_name'];
		} else {
			$animal_image = '';
		}
		
		return $animal_image;
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_owner_detail	
	#	Purpose		:	Get Owner Detail
	# *******************************************************************************************
	
	public function get_org_owner_detail($orgid) {
		$this->db->select('u.st_display_name,u.st_last_name,u.st_email');
		$this->db->from('tbl_users as u');
		$this->db->join('tbl_organization o','o.in_user_id = u.in_user_id','INNER');
		$this->db->where('o.in_organization_id',$orgid);
		$this->db->where('o.in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	check_breed_user	
	#	Purpose		:	Getting user's animal breed
	# *******************************************************************************************
	
	public function check_breed_user($animal_type,$animal_breed,$user_id) {
		$this->db->select('in_notifiable_animal_breeds');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_animal_type_id',$animal_type);
		$this->db->where('in_notifiable_animal_breeds',$animal_breed);
		$this->db->where('in_user_id',$user_id);
		
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	
	
	# *******************************************************************************************	
	#	Function	:	get_all_users
	#	Purpose		:	Getting all users which have have same animal type and breed
	# *******************************************************************************************
	
	public function get_all_users($animal_type,$animal_breed,$owner_email) {
		$this->db->select('u.st_display_name,u.st_last_name,u.st_email');
		$this->db->from('tbl_users as u');
		$this->db->join('tbl_user_notification_setting un','u.in_user_id = un.in_user_id','INNER');
		
		$this->db->where('un.in_animal_type_id',$animal_type);
		$this->db->where('un.in_notifiable_animal_breeds',$animal_breed);
		$this->db->where('u.st_email != ',$owner_email);
		
		$this->db->where('u.in_deleted',0);
		$query = $this->db->get();
		
		return $query->result_array();
	}
	
	# *******************************************************************************************	
    #	Function	:	update_animal_profile	
    #	Purpose		:	Updating animal information
    # *******************************************************************************************

    public function update_animal_profile($data,$animal_id) {
        $this->db->where('in_animal_id', $animal_id);
		$this->db->update('tbl_animal', $data);
        return $this->db->affected_rows();
    }
	
	public function delete_animal_photo($animal_id)
	{    $data=array('in_deleted' => '1');
		 $this->db->where('in_animal_id', $animal_id);
		$this->db->update('tbl_animal_file', $data);
        return $this->db->affected_rows();
	}
	
	public function get_animal_file($animalId)
	{
		$this->db->select('in_file_id');
		$this->db->from('tbl_animal_file');			
		$this->db->where('in_animal_id',$animalId);
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_file_id','ASC');
		$this->db->limit('1');
		$query = $this->db->get();		
		return $query->row_array();
	}
	
	public function update_animal_file($fileId)
	{   
		$data = array('in_profile_pic'=>'1');
		$this->db->where('in_file_id', $fileId);
		$this->db->update('tbl_animal_file', $data);
        return $this->db->affected_rows();
	}
	
	 // 27-07-16
    public function get_profile_detail($id = '') {
        $this->db->select('	u.st_profile_image,
							u.st_display_name,u.st_last_name,v.fl_doobert_verified'
        );
        $this->db->from("tbl_users u");
        $this->db->join("tbl_verification v", "v.in_user_id = u.in_user_id and v.in_deleted=0", "LEFT");
        $this->db->where('u.in_user_id', $id);
        $this->db->where('u.in_deleted', 0);
        $query = $this->db->get();
        //echo $this->db->last_query();
        //return $query->result_array();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {

                $arrData = array(
                    'profile_image' 			=> ($Row->st_profile_image != '' && file_exists($this->config->item('upload') . "profile/250x250/" . $Row->st_profile_image)) ? base_url() . 'upload/profile/250x250/' . $Row->st_profile_image : base_url() . 'upload/profile/no_photo_icon.png',
                    "display_name" 				=> $Row->st_display_name . ' ' . $Row->st_last_name,
                    "flgIsProfileVerified" 		=> isset($Row->fl_doobert_verified) ? $Row->fl_doobert_verified : '0'
                );
            }
            return $arrData;
        }
    }

    /* public function get_general_driver_profile($id = '', $token = '') {
      $this->db->select('	u.st_display_name as f_name,
      u.st_last_name as l_name,
      pr.st_primary_phone as phone,
      u.st_email as email,
      pr.st_zip as zip,
      pr.st_time_zone as time_zone');
      $this->db->from("tbl_user_profile pr");
      $this->db->join("tbl_users u", "pr.in_user_id = u.in_user_id AND u.wsdl_token='" . $token . "'", "INNER");
      $this->db->where('pr.in_user_id', $id);
      $this->db->where('pr.in_deleted', 0);
      $query = $this->db->get();
      //echo $this->db->last_query();
      // return $query->row_array();
      $arrData = array();
      if ($query->num_rows() > 0) {
      foreach ($query->result() as $Row) {

      $arrData = array(
      'f_name' 	=> isset($Row->f_name)? $Row->f_name:'',
      'l_name' 	=> isset($Row->l_name)?$Row->l_name:'',
      'phone' 	=> isset($Row->phone)?$Row->phone:'',
      'email' 	=> isset($Row->email)?$Row->email:'',
      'zip' 		=> isset($Row->zip)?$Row->zip:'',
      'time_zone' => isset($Row->time_zone)?$Row->time_zone:'',
      );
      }

      }
      return $arrData;
      } */

    public function get_general_vehicle_detail($userId) {
        $sql = "SELECT vh.*
		           FROM tbl_user_vehicle as vh 
				   WHERE vh.in_user_id= '" . $userId . "' AND  vh.in_deleted= '0' ";

        $query = $this->db->query($sql);
        //echo $this->db->last_query();die;
        $arrData = array();

        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $this->db->select('st_image,in_id');
                $this->db->from('tbl_vehicle_image as p');
                $this->db->where('in_vehicle_id', $Row->in_vehicle_id);
                $this->db->where('in_deleted', 0);
                $query = $this->db->get();
                //$images = $query->result_array();
                //$vehid=$Row->in_vehicle_id;

                $arrData[] = array(
                    'category' 				=> isset($Row->st_vehicle_type) ? $Row->st_vehicle_type : '',
                    'max_oneway_distance' 	=> isset($Row->in_distance_to_drive) ? $Row->in_distance_to_drive : '',
                    'vehicle_color' 		=> isset($Row->st_vehicle_color) ? $Row->st_vehicle_color : '',
                    'vehicle_id' 			=> $Row->in_vehicle_id,
                    'vehicle_license_plate' => isset($Row->st_vehicle_license_plate) ? $Row->st_vehicle_license_plate : '',
                    'vehicle_license_state' => isset($Row->st_vehicle_license_state) ? $Row->st_vehicle_license_state : '',
                    'google_flickr_photo' 	=> isset($Row->st_photos_url) ? $Row->st_photos_url : '',
                    'vehicle_image' 		=> $this->get_vehicle_photo($Row->in_vehicle_id)
                );
            }
            return $arrData;
        }
    }

    public function get_vehicle_photo($vid) {

        $result = array();
        $this->db->select('st_image as vehicle_image');
        $this->db->from('tbl_vehicle_image');
        $this->db->where('in_vehicle_id', $vid);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        $arrData = array();
        //return $query->result_array();	
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
				$imagepath = $this->config->item('upload') . "vehicle/" . $Row->vehicle_image;	
			   if(file_exists($imagepath)){
                $arrData[] = array(
                    'vehicle_image' => ($Row->vehicle_image != '' && file_exists($this->config->item('upload') . "vehicle/" . $Row->vehicle_image)) ? base_url() . 'upload/vehicle/' . $Row->vehicle_image : ''
                );
			   }
            }
        }
        return $arrData;
    }

    public function get_vehicle_type_list() {
        $this->db->select('v.st_vehicle_type as category,v.in_vehicle_type_id as category_id', FALSE);
        $this->db->from('tbl_vehicle_type as v');
        $this->db->where('v.in_status', '1');
        $this->db->where('v.in_deleted', '0');
        // $this->db->order_by('v.st_vehicle_type', 'ASC');
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        return $query->result_array();
    }

    // 28-07-16

    public function update_vehicle($data, $vid, $table) {
        $this->db->where('in_vehicle_id', $vid);
        $this->db->update($table, $data);
        //echo "<pre>".$this->db->last_query();	 die;	
        return $this->db->affected_rows();
    }

    function add_vehicle_photo($arrData) {
        $user_id = $this->db->insert('tbl_vehicle_image', $arrData);
        //echo $this->db->last_query(); die;
        return $this->db->insert_id();
    }

    public function delete_vehicle_photo($vid) {
        $data = array('in_deleted' => '1');
        $this->db->where('in_vehicle_id', $vid);
        $this->db->update('tbl_vehicle_image', $data);
        return $this->db->affected_rows();
    }

    public function get_pilot_available($id) {
        $this->db->select('p.st_pilot_availability,p.st_pilot_zip as zipcode,p.st_identifier as airport_id');
        $this->db->from('tbl_user_pilot as p');
        $this->db->where('p.in_user_id', $id);
        $this->db->where('p.in_deleted', 0);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        return $query->row_array();
        /* $arrData = array();

          if ($query->num_rows() > 0) {
          foreach ($query->result() as $Row) {
          $arrData[] = array('driver_availability' => unserialize($Row->st_driver_availability));
          }
          return $arrData;
          } */
    }

    public function get_general_pilot_detail($userid) {
        $this->db->select('p.st_pilot_availability,p.st_pilot_zip,p.st_identifier');
        $this->db->from('tbl_user_pilot as p');
        $this->db->where('p.in_user_id', $userid);
        $this->db->where('p.in_deleted', 0);
        $this->db->group_by('p.in_user_id');
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        //return $query->row_array(); 
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData[] = array('available_days' => isset($Row->st_pilot_availability) ? unserialize($Row->st_pilot_availability) : array(),
									'zipcode' 		=> isset($Row->st_pilot_zip) ? $Row->st_pilot_zip : '',
									'airport_id' 	=> isset($Row->st_identifier) ? $Row->st_identifier : ''
                );
            }
        }
        return $arrData;
    }

    public function get_airplane_detail($userid) {
        $this->db->select('p.in_pilot_id,p.st_plane_type,p.st_plane_color,p.st_plane_number,p.in_plane_ifr,p.in_distance_to_pilot,p.st_photos_url,pty.in_plane_type_id');
        $this->db->from('tbl_user_pilot as p');
        $this->db->join("tbl_plane_type pty", "pty.st_plane_type = p.st_plane_type and pty.in_deleted=0", "LEFT");
        $this->db->where('p.in_user_id', $userid);
        $this->db->where('p.in_deleted', 0);
		$this->db->order_by('in_pilot_id','ASC');

        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        //return $query->row_array(); 		
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData[] = array(
                    'airplane_id' 			=> $Row->in_pilot_id,
                    'category' 				=> $Row->st_plane_type,
                    'category_id' 			=> isset($Row->in_plane_type_id)?$Row->in_plane_type_id:'',
                    'airplane_color' 		=> isset($Row->st_plane_color) ? $Row->st_plane_color : '',
                    'n_number' 				=> $Row->st_plane_number,
                    'ifr_current' 			=> $Row->in_plane_ifr,
                    'max_oneway_distance' 	=> $Row->in_distance_to_pilot,
                    'google_flickr_photo' 	=> isset($Row->st_photos_url) ? $Row->st_photos_url : '',
                    'airplane_image' 		=> $this->get_plane_photo($Row->in_pilot_id),
                );
            }
        }
        return $arrData;
    }

    public function get_plane_photo($pid) {

        $result = array();
        $this->db->select('st_image as plane_image');
        $this->db->from('tbl_plane_image');
        $this->db->where('in_plane_id', $pid);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        $arrData = array();
        //return $query->result_array();	
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
				$imagepath = $this->config->item('upload') . "plane/" . $Row->plane_image;	
			   if(file_exists($imagepath)){
                $arrData[] = array(
                    'airplane_image' => ($Row->plane_image != '' && file_exists($this->config->item('upload') . "plane/" . $Row->plane_image)) ? base_url() . 'upload/plane/' . $Row->plane_image : base_url() . 'upload/plane/no_photo_icon.png'
                );
			   }
            }
        }
        return $arrData;
    }

    // 29-07-16

    public function get_airplane_type_list() {
        $this->db->select('p.st_plane_type as category,p.in_plane_type_id as category_id', FALSE);
        $this->db->from('tbl_plane_type as p');
        $this->db->where('p.in_status', '1');
        $this->db->where('p.in_deleted', '0');
        //$this->db->order_by('p.st_plane_type', 'ASC');
        $query = $this->db->get();
        //echo $this->db->last_query();die;
        return $query->result_array();
    }

    public function update_airplane_info($airplane_info, $pilotid, $table) {
        $this->db->where('in_pilot_id', $pilotid);
        $this->db->update($table, $airplane_info);
        return $this->db->affected_rows();
    }

    public function delete_plane_photo($pid) {
        $data = array('in_deleted' => '1');
        $this->db->where('in_plane_id', $pid);
        $this->db->update('tbl_plane_image', $data);
        return $this->db->affected_rows();
    }

    function add_plane_photo($arrData) {
        $this->db->insert('tbl_plane_image', $arrData);
        //echo $this->db->last_query(); die;
        return $this->db->affected_rows();
    }

    function get_photographer_profile($userid) {

        $this->db->select('p.st_photographer_availability,p.st_photographer_zipcode,p.in_distance_to_travel,p.in_pro_bono_ser');
        $this->db->from('tbl_photographer_detail as p');
        $this->db->where('p.in_user_id', $userid);
        $this->db->where('p.in_deleted', '0');
        $query = $this->db->get();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $availability_days = array();
                if (isset($Row->st_photographer_availability)) {
                    $availability_days = unserialize($Row->st_photographer_availability);
                } else {
                    $availability_days = array();
                }

				
				$sqlprogressstatus  = "SELECT st_zip FROM tbl_user_profile  where in_user_id = '".$userid."' and in_deleted=0";
										$sqlprogressstat	=	$this->db->query($sqlprogressstatus);
										$numrowprostat		=	$sqlprogressstat->num_rows($sqlprogressstat);	
										$prostatus			=	$sqlprogressstat->result();
										$stzip		=	$prostatus[0]->st_zip;
                $arrData = array('available_days' 				=> $availability_days,
									'zipcode' 					=> isset($Row->st_photographer_zipcode) ? $Row->st_photographer_zipcode : $stzip,
									'max_distance' 				=> isset($Row->in_distance_to_travel) ? $Row->in_distance_to_travel : '',
									'probono_service_offered' 	=> $Row->in_pro_bono_ser
                );
            }
        }
        return $arrData;
    }

    public function update_photographer_info($data, $userid, $table) {
        $this->db->where('in_user_id', $userid);
        $this->db->update($table, $data);
        return $this->db->affected_rows();
    }

    public function insert_photographer_info($data, $table) {
        $this->db->insert($table, $data);
        return $this->db->affected_rows();
    }

    public function insert_user_vehicle_availability($data, $table) {
        $this->db->insert($table, $data);
       return $this->db->insert_id();
    }

    //	01-08-16

    public function get_in_person_volunteer_detail($userId) {
        $this->db->select('*');
        $this->db->from('tbl_in_person_volunteer_detail as pvd');
        $this->db->where('pvd.in_user_id', $userId);
        $this->db->where('pvd.in_deleted', '0');
        $query = $this->db->get();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {

                if (isset($Row->st_volunteer_availability) && !empty($Row->st_volunteer_availability)) {
                    $days = unserialize($Row->st_volunteer_availability);
                } else {
                    $days = array();
                }

                $arrData = array(
                    'available_days' 		=> $days,
                    'zipcode'		 		=> isset($Row->st_volunteer_zipcode) ? $Row->st_volunteer_zipcode : '',
                    'max_distance' 			=> isset($Row->in_distance_to_drive) ? $Row->in_distance_to_drive : '', 
					'home_visit' 			=> $Row->in_home_visit,
                    'app_reviewer' 			=> $Row->in_app_reviewer,
                    'animal_care' 			=> $Row->in_animal_care,
                    'physical_fundraiser' 	=> $Row->in_physical_fundraiser
                );
            }
        }
        return $arrData;
    }

    public function update_in_person_volunteer_detail($data, $userid, $table) {
        $this->db->where('in_user_id', $userid);
        $this->db->update($table, $data);
        return $this->db->affected_rows();
    }

    public function insert_in_person_volunteer_detail($data, $table) {
        $this->db->insert($table, $data);
        return $this->db->affected_rows();
    }

    //	02-08-16
    public function get_virtual_volunteer_detail($userId) {

        $this->db->select('in_manage_facebook,in_manage_facebook_exp,in_manage_twitter,in_manage_twitter_exp,in_manage_gplus,in_manage_gplus_exp,
			in_manage_pin_board,in_manage_pin_board_exp,in_manage_instagram,in_manage_instagram_exp,in_manage_video,in_manage_video_exp,in_petfinder,in_petfinder_exp,in_adoptapet,in_adoptapet_exp,in_petharbor,in_petharbor_exp,in_petango,in_petango_exp,in_rescuegroups,in_rescuegroups_exp,in_shelterexchange,in_shelterexchange_exp,in_dogtime,in_dogtime_exp,in_petsoverstock,in_petsoverstock_exp,in_transport_monitor,in_transport_monitor_exp,in_adoption_application,in_adoption_application_exp,in_onlinefundraiser,in_onlinefundraiser_exp');
        $this->db->from('tbl_virtual_support_vol_detail as vsd');
        $this->db->where('vsd.in_user_id', $userId);
        $this->db->where('vsd.in_deleted', '0');
        $query = $this->db->get();

        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $key => $Row) {

                $arrData = array('manage_facebook' 			=> $Row->in_manage_facebook,
									'manage_facebook_exp' 	=> $Row->in_manage_facebook_exp,
									'manage_twitter' 		=> $Row->in_manage_twitter,
									'manage_twitter_exp' 	=> $Row->in_manage_twitter_exp,
									'manage_gplus' 			=> $Row->in_manage_gplus,
									'manage_gplus_exp' 		=> $Row->in_manage_gplus_exp,
									'manage_pin_board' 		=> $Row->in_manage_pin_board,
									'manage_pin_board_exp' 	=> $Row->in_manage_pin_board_exp,
									'manage_instagram' 		=> $Row->in_manage_instagram,
									'manage_instagram_exp' 	=> $Row->in_manage_instagram_exp,
									'manage_video' 			=> $Row->in_manage_video,
									'manage_video_exp' 		=> $Row->in_manage_video_exp,
									'petfinder' 			=> $Row->in_petfinder,
									'petfinder_exp' 		=> $Row->in_petfinder_exp,
									'adoptapet' 			=> $Row->in_adoptapet,
									'adoptapet_exp' 		=> $Row->in_adoptapet_exp,
									'petharbor' 			=> $Row->in_petharbor,
									'petharbor_exp' 		=> $Row->in_petharbor_exp,
									'petango' 				=> $Row->in_petango,
									'petango_exp' 			=> $Row->in_petango_exp,
									'rescuegroups' 			=> $Row->in_rescuegroups,
									'rescuegroups_exp' 		=> $Row->in_rescuegroups_exp,
									'shelterexchange' 		=> $Row->in_shelterexchange,
									'shelterexchange_exp' 	=> $Row->in_shelterexchange_exp,
									'dogtime' 				=> $Row->in_dogtime,
									'dogtime_exp' 			=> $Row->in_dogtime_exp,
									'petsoverstock' 		=> $Row->in_petsoverstock,
									'petsoverstock_exp' 	=> $Row->in_petsoverstock_exp,
									'transport_monitor' 	=> $Row->in_transport_monitor,
									'transport_monitor_exp' => $Row->in_transport_monitor_exp,
									'adoption_application' 	=> $Row->in_adoption_application,
									'adoption_application_exp' => $Row->in_adoption_application_exp,
									'onlinefundraiser' 		=> $Row->in_onlinefundraiser,
									'onlinefundraiser_exp' 	=> $Row->in_onlinefundraiser_exp
                );
            }
        }
        return $arrData;
    }

    public function update_virtual_volunteer_detail($data, $userid, $table) {
        $this->db->where('in_user_id', $userid);
        $this->db->update($table, $data);
        return $this->db->affected_rows();
    }

    public function insert_virtual_volunteer_detail($data, $table) {
        $this->db->insert($table, $data);
        return $this->db->affected_rows();
    }

    public function insert_vehicle($data, $table) {
        $this->db->insert($table, $data);
        $insert_id = $this->db->insert_id();
        return $insert_id;
    }

    public function insert_airplane_info($data, $table) {
        $this->db->insert($table, $data);
        $insert_id = $this->db->insert_id();
        return $insert_id;
    }

   function get_completed_transport_list($date, $user_id) {	

        $this->db->select("	tr.dt_target,																	
							tr.in_transportation_id,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.st_trans_type,
							tr.dt_pickup_date,
							tr.in_status,
							tr.st_trans_name,
							o.in_organization_id,
							o.st_org_name,
							o.st_org_code,
							round((tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc", FALSE);
        $this->db->from("tbl_transportation tr");
		$this->db->join("tbl_transportation_participants p","p.in_transportation_id = tr.in_transportation_id and p.in_deleted=0", "LEFT");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->join("tbl_transportation_leg tl","tr.in_transportation_id = tl.in_transportation_id AND tl.in_deleted='0'", "LEFT");		
        $where = '';
		$where .= "tr.in_deleted = 0";
		//$where .= "tr.in_deleted = 0 AND tr.in_trans_coods_id = ".$user_id;
		$where .= " AND (p.in_user_id = '".$user_id."' || tr.in_trans_coods_id = '".$user_id."')";		
        $where .= " AND (tr.in_status = '1' || tr.in_status = '2')";
        $this->db->where($where);       
        $this->db->group_by("tr.in_transportation_id");
        $this->db->order_by("tr.in_transportation_id", "DESC");
        $this->db->limit(20);
        $query = $this->db->get();
        $arrData = array();
        //echo $this->db->last_query();die;
        //$transport_details = $query->result_array();
        //echo "<pre>";print_r($transport_details);die;
        //return $transport_details;
        foreach ($query->result() as $Row) {
            $flgconfirm = '';
            if ($Row->in_status == '2') {
                $flgconfirm = '1';
            } else {
                $flgconfirm = '0';
            }
            $arrData[] = array("dt_target" 				=> $Row->dt_target,
								"in_transportation_id" 	=> $Row->in_transportation_id,
								"st_from_city" 			=> $Row->st_from_city,
								"st_from_state" 		=> $Row->st_from_state,
								"st_from_zip" 			=> $Row->st_from_zip,
								"st_to_state" 			=> $Row->st_to_state,
								"st_to_city" 			=> $Row->st_to_city,
								"st_to_zip" 			=> $Row->st_to_zip,
								"in_tot_distance" 		=> $Row->in_tot_distance,
								"in_distance_covered" 	=> $Row->in_distance_covered,
								"st_trans_type"			=> $Row->st_trans_type,
								"dt_pickup_date" 		=> $Row->dt_pickup_date,
								"in_status" 			=> $Row->in_status,
								"flgIsTransportConfirmed" => $flgconfirm,
								"perc" 					=> isset($Row->perc) ? $Row->perc : '',
								"org_id"				=> $Row->in_organization_id,
								"org_name"				=> $Row->st_org_name,
								"st_org_code"			=> $Row->st_org_code,
								"st_transport_name"     => $Row->st_trans_name
            );
        }
        return $arrData;
    
	
	}

    public function get_foster_home($userId) {
        $this->db->select('fad.in_foster_animal_detail_id,fad.in_foster_id,fad.in_animal_type_id,fad.in_duration_type_id,ani.st_animal_type_name');
        $this->db->from("tbl_foster_animal_type_detail fad");
        $this->db->join("tbl_foster_user_detail fud", "fud.in_foster_id = fad.in_foster_id", "INNER");
        $this->db->join("tbl_animal_type ani", "ani.in_animal_type_id = fad.in_animal_type_id", "LEFT");
        $this->db->where('fud.in_user_id', $userId);
        $this->db->where('fud.in_deleted', '0');
        $this->db->where('fad.in_deleted', '0');
        //$this->db->order_by('in_foster_animal_detail_id','ASC');				 
        $query = $this->db->get();
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData[] = array('in_foster_animal_detail_id' 	=> $Row->in_foster_animal_detail_id,
									'in_foster_id' 					=> $Row->in_foster_id,
									'animal_type_id' 				=> $Row->in_animal_type_id,
									'duration_type_id' 				=> isset($Row->in_duration_type_id) ? $Row->in_duration_type_id : '0',
									'animal_type' 					=> $Row->st_animal_type_name
                );
            }
        }
        return $arrData;
    }

    public function update_foster_info($data, $foster_animal_detail_id, $table) {
        $this->db->where('in_foster_animal_detail_id', $foster_animal_detail_id);
        $this->db->update($table, $data);
        //echo $this->db->last_query();die;
        return $this->db->affected_rows();
    }
	
	public function addorg($data)
	{
		$this->db->insert('tbl_organization', $data);
		//echo $this->db->last_query();die;		
		return  $this->db->insert_id();
	}
	
	public function get_trans_legs_by_id($transport_id)
	{	
		//echo '$transport_id '.$transport_id;
		$this->db->select('l.in_transportation_leg_id,st_zip,d.st_leg_type,l.in_route_type,DATE_FORMAT(d.dt_start_time, "%a") as day,l.in_sort_order',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$transport_id);
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$r_type = '';
				if($Row->in_route_type == 1)
				{
					$r_type = 'Aviation';
				}
				if($Row->in_route_type == 2)
				{
					$r_type = 'Overnight';
				}
				if($Row->in_route_type == 0)
				{
					$r_type = 'Road';
				}
				
				
				if($Row->st_leg_type=="P")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;	
					$arrData[$Row->in_transportation_leg_id]['pick_day']		= $Row->day;				
				}
				
				if($Row->st_leg_type=="D")
				{
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;	
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;	
					$arrData[$Row->in_transportation_leg_id]['drop_day']		= $Row->day;				
				}
				if($Row->st_leg_type=="O")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']			= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']			= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;
					
					$overnight_leg_day	= $this->get_overnight_leg_date($transport_id,$Row->in_sort_order);
					if(isset($overnight_leg_day) && isset($overnight_leg_day['day']))
					{	
						$arrData[$Row->in_transportation_leg_id]['o_day'] 	= $overnight_leg_day['day'];
					}
				}
				
			}
			return $arrData;
		}
	}
	
	public function get_overnight_leg_date($t_id,$sort_order)
	{
		//echo 'get_overnight_leg_date';
		$overnight_leg_data = array();
		//echo 't_id'.$t_id;
		//echo 'sort_order'.$sort_order;
		
		if(isset($sort_order) && $sort_order > 1)
		{
			$this->db->select('DATE_FORMAT(d.dt_start_time, "%a") as day',FALSE);
			$this->db->from('tbl_transportation_leg as l');
			$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
			$this->db->where('l.in_transportation_id',$t_id);
			$this->db->where('l.in_sort_order',($sort_order-1));
			$this->db->where('l.in_deleted',0);
			$this->db->where('d.in_deleted',0);
			$this->db->where('d.st_leg_type','D');
			$query = $this->db->get();
			//echo $this->db->last_query(); //die;
			 
			$overnight_leg_data = $query->row_array();		
		}
		//print_r($overnight_leg_data);exit;
		return $overnight_leg_data;
	}
	
	
	public function get_rescue_story_data()
	{
		$this->db->select('in_id');
		$this->db->from('tbl_transport_rescue_story');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->where('in_wp_approved_status',0);
		$this->db->order_by('in_id','DESC');
		$this->db->limit(1);
		$query = $this->db->get();
		$result_data = $query->row_array();
		$story_detail = array();
		if(isset($result_data) && !empty($result_data) && $result_data['in_id'] > 0) 
		{
			//print_r($result_data);//exit;
			
			$story_detail = $this->get_detail_transportstory_data($result_data['in_id']);
			
		}
		$image_link = array();		
		$feature_image_url = '';
		$feature_image_name = '';
		
		if(isset($story_detail['photo']) && count($story_detail['photo']) > 0)
		{ 
				$i = 0;
				foreach($story_detail['photo'] as $pic)
				{
					$i++;
					$htmlimage ='';
					$exists = $this->common_function->remoteFileExists($this->config->item('rackspace_http_url').$pic['st_file_name']);
					if ($exists) { 
							$htmlimage .=  '<a href="'.$this->config->item('rackspace_http_url').$pic['st_file_name'].'" rel="prettyPhoto[mixed]">';
							$htmlimage .=  '<img src="'.$this->config->item('rackspace_http_url').$pic['st_file_name'].'" title="'.$pic['st_file_name'].'">';
							$htmlimage .=  '</a>';			
							if($i == 1)
							{
								$feature_image_url  = $this->config->item('rackspace_http_url').$pic['st_file_name'];
								$feature_image_name = $pic['st_file_name'];
							}
					} else { 
							$htmlimage .=  '<a href="'.base_url().'upload/trasnportation/'.$pic['st_file_name'].'" rel="prettyPhoto[mixed]">';
							$htmlimage .=  '<img src="'.base_url().'upload/trasnportation/'.$pic['st_file_name'].'" title="'.$pic['st_file_name'].'">';
							$htmlimage .=  '</a>';
							if($i == 1)
							{
								$feature_image_url  = base_url().'upload/trasnportation/'.$pic['st_file_name'];
								$feature_image_name = $pic['st_file_name'];
							}
					} 
					$image_link[] = $htmlimage;
				} 
		}
		
		$video_link = array();
			if(isset($story_detail['video']) && count($story_detail['video']) > 0){ 
				foreach($story_detail['video'] as $video)
				{	
					$htmlvideo ='';
					$exists = $this->common_function->remoteFileExists($this->config->item('rackspace_http_url').$video['st_file_name']); 
					if ($exists) { 
					$htmlvideo .= '<a href="'.$this->config->item('rackspace_http_url').$video['st_file_name'].'" rel="prettyPhoto[mixed]">';
					$htmlvideo .= '<img src="'.$video['st_file_name'].'" title="'.$video['st_file_name'].'">';
					$htmlvideo .= '</a>';			
					} else { 
						if(isset($video['video_provider']) &&  $video['video_provider'] == 'youtube')
						{
							//$exp_filename = explode('/',$video); 
							$video_id = isset($video['video_id']) ? $video['video_id'] : '';
							$htmlvideo .= '<a href="http://www.youtube.com/watch?v='.$video_id.'&rel=0&showinfo=0" rel="prettyPhoto[mixed]">';
							$htmlvideo .= '<span class="play-icon"><img src="'.base_url().'assets/img/play-btn-small.png"></span>';
							$htmlvideo .= '<img src="'. $video['st_file_name'].'" title="'. $video['st_file_name'].'">';
							$htmlvideo .= '</a>';
						} elseif(isset($video['video_provider']) &&  $video['video_provider'] == 'vimeo') { 
							$video_id = $video['video_id'];
							$htmlvideo .= '<a href="http://vimeo.com/'.$video_id.'" rel="prettyPhoto[mixed]">';
							$htmlvideo .= '<span class="play-icon"><img src="'.base_url().'assets/img/play-btn-small.png"></span>';
							$htmlvideo .= '<img src="'.$video['st_file_name'].'" title="'.$video['st_file_name'].'">';
							$htmlvideo .= '</a>';                        
						} 
					} 
					$video_link[] = $htmlvideo;	
				} 
			} 	
		
		$story_detail['story_video']  = $video_link; 
		
		$story_detail['story_image']  = $image_link;
		
		$story_detail['feature_image_url']  = $feature_image_url;
		
		$story_detail['feature_image_name']  = $feature_image_name;
		
		//print_r($story_detail);exit;
		
		return $story_detail;
	}
	
	function get_detail_transportstory_data($id)
	{
		$this->db->select("trs.st_rescue_title,trs.in_id,trs.st_rescue_title,trs.st_rescue_story,trs.in_status,trs.in_transportation_id,
						  concat(u.st_display_name,' ',u.st_last_name)as display_name,trs.dt_created,trs.in_flag",FALSE);						   	
		$this->db->from('tbl_transport_rescue_story trs');
		$this->db->join("tbl_users u","trs.in_created_by = u.in_user_id","LEFT");
		$this->db->where('trs.in_id',$id);
		$this->db->where('trs.in_deleted',0);
		$query = $this->db->get(); 
		$transport_story = array();
		if($query->num_rows()>0)
		{  		
			$Row = $query->row();
			//foreach($query->row() as $Row)
		    //{
				$story1 = '';
				if($Row->in_status == 1) {
					$status = 'Approved';
				} else if($Row->in_status == 2) {
					$status = 'Rejected';
				} else {
					$status = 'Pending';
				}

				if($Row->in_flag == 0)
				{
					$story1  = $Row->st_rescue_story;
					$story1=strip_tags(html_entity_decode($story1, ENT_QUOTES));
				}
				elseif($Row->in_flag == 1)
				{
					$story_data_array = unserialize($Row->st_rescue_story);
					$story_data = $story_data_array[0];				
					
					foreach($story_data as $value)
					{  											
						$story1 .= '<p>'.$value.'</p>';
					}
					
				}
				
				 $created_date = date('m-d-Y',strtotime($Row->dt_created));
				 $date_created = ($created_date ==''|| $created_date =='00-00-0000'  || $created_date =='12-31-1969' || $created_date =='01-01-1970')?'':date("F j, Y",strtotime($Row->dt_created));	
					
				$transport_story['story'] = array('in_id' => $Row->in_id,
											'in_transportation_id' => $Row->in_transportation_id,
											'title_story' => $Row->st_rescue_title,
											'transport_story' => $story1,
											'status'=> $status,
											'author_name' => $Row->display_name,
											'dt_created' => ($Row->dt_created ==''||$Row->dt_created =='0000-00-00'  || $Row->dt_created =='1969-12-31')?'':date("m-d-Y H:i:s",strtotime($Row->dt_created)),
											'date_created' => $date_created										
										);
			/*}*/	
		}
		
		$this->db->select('st_file_name,st_file_type,st_video_provider,st_video_id,in_transport_photo_id',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transport_story_id',$id);
		$query = $this->db->get();
		if($query->num_rows()>0)
		{  		
			foreach($query->result() as $Row)
		    {	
				
				if($Row->st_file_type == "P") {	
				$transport_story['photo'][] = array('st_file_name' => $Row->st_file_name,
													'in_transportation_story_id' => $Row->in_transport_photo_id,
													'file_type' => $Row->st_file_type,		
													);
			}	
			
				if($Row->st_file_type == "V") {	
				$transport_story['video'][] = array('st_file_name' => $Row->st_file_name,
													'in_transportation_story_id' => $Row->in_transport_photo_id,
													'file_type' => $Row->st_file_type,
													'video_provider' => $Row->st_video_provider,
													'video_id'=> $Row->st_video_id,		
													);
			}	
			
			}	
		}
		//print_r($transport_story);
		//exit(0);
			return $transport_story;
	}
	
	function update_rescue_story_data($id)
	{
		$update_array = array('in_wp_approved_status' => '1','dt_modified'=>date('Y-m-d H:i:s'));
		$this->db->where('in_id', $id);
        $this->db->update('tbl_transport_rescue_story', $update_array);
	}
	
	public function get_org_detail_by($org_id) {
       $org_details = array();
       $this->db->select("org.st_org_name", FALSE);
       $where = array("org.in_deleted" => "0", "org.in_organization_id" => $org_id);
       $this->db->from("tbl_organization org");
       $this->db->where($where);
       $query = $this->db->get();
       if ($query->num_rows() > 0) {
           $org_details = $query->row_array();
       }
       //echo "<pre>";print_r($org_details);die;
       return $org_details;
    }
	
	public function array_column(array $input, $columnKey, $indexKey = null) {
        $array = array();
        foreach ($input as $value) {
            if ( ! isset($value[$columnKey])) {
                trigger_error("Key \"$columnKey\" does not exist in array");
                return false;
            }
            if (is_null($indexKey)) {
                $array[] = $value[$columnKey];
            }
            else {
                if ( ! isset($value[$indexKey])) {
                    trigger_error("Key \"$indexKey\" does not exist in array");
                    return false;
                }
                if ( ! is_scalar($value[$indexKey])) {
                    trigger_error("Key \"$indexKey\" does not contain scalar value");
                    return false;
                }
                $array[$value[$indexKey]] = $value[$columnKey];
            }
        }
        return $array;
    }
	/*
	 public function get_product_data($id) {
	
        $this->db->select(' p.st_product,							
							p.st_sku,
							p.in_organization_id,
							p.st_desc,
							p.fl_regular_price,
							p.fl_discount_price,
							p.in_stock_status,
							p.st_selected_category,
							p.st_prod_image,p.in_prod_id');
        $this->db->from("tbl_products p");       
        $this->db->where('p.in_deleted', 0);  
		$this->db->where('p.in_prod_id',$id);     
        $query = $this->db->get();
       // echo $this->db->last_query();die;
       // return $query->result_array();
	   
	   $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {			
				$this->db->select('st_image');
				$this->db->from("tbl_product_image"); 
				$this->db->where('in_product_id', $Row->in_prod_id);      
				$this->db->where('in_deleted', 0);       
				$query2 	= $this->db->get();
				 //echo $this->db->last_query(); die;
				
			
				//$res	=	$query->row_array();
				//$image_name	=	$res['st_image'];
			
			
                $arrData[] = array( 'name' 					=> $Row->st_product,
									'sku' 					=> $Row->st_sku,
									'description' 			=> $Row->st_desc,									
									'regular_price' 		=> $Row->fl_regular_price,
									'discount_price' 		=> $Row->fl_discount_price,
									'stock_status' 			=> ($Row->in_stock_status==1)?'instock' : 'outofstock',
									'category' 				=> $Row->st_selected_category,
									'image' 				=> $Row->st_prod_image,
									'thumburl'				=> $this->config->item('upload_url').'product/190x190/'.$Row->st_prod_image,								
									'organization_id'		=> $Row->in_organization_id
                );					
            }
			foreach ($query2->result() as $row) {
				  $arrData['gallery'][] = array( 'gallery_url' 	=> $this->config->item('upload_url').'product/large/190x190/'.$row->st_image
				  );
				 
				 }	
			
        }
        return $arrData;
    }*/
	
	public function get_my_transport_list($status,$user_id)
	{
		$this->db->select("tr.dt_target,
						   tr.in_transportation_id,
						   tr.st_from_street,
						   tr.st_from_city,
						   tr.st_from_state,
						   tr.st_from_zip,
						   tr.st_to_street,
						   tr.st_to_state,
						   tr.st_to_city,
						   tr.st_to_zip,
						   tr.dt_pickup_date,
						   tr.in_tot_distance,
						   tr.in_distance_covered,
						   tr.st_trans_type,
						   tr.st_trans_name,
						   tr.in_status,
						   tr.in_airline_transport,
						   o.st_org_image,
						   o.st_org_name,
						   o.st_org_code,
						   o.in_organization_id,
						   round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							(SELECT count(in_animal_trans_id) FROM tbl_animal_transportation  WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id) as animal_in_transport",FALSE);
		
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_transportation_participants p","p.in_transportation_id = tr.in_transportation_id ", "INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->join("tbl_transportation_leg tl","tr.in_transportation_id = tl.in_transportation_id AND tl.in_deleted='0'", "LEFT");
		
		$where = '';
		$where .= "tr.in_deleted = 0 AND p.in_deleted = 0 AND p.in_user_id = ".$user_id;
		if($status == 2){
		$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		if($status == 3){		
		$where .= " AND tr.in_status = '".$status."'";
		}
		$this->db->where($where);
		$this->db->group_by("tr.in_transportation_id");
		$this->db->order_by("tr.in_transportation_id","DESC");		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
        $arrData = array();
		foreach ($query->result() as $Row) {
            $flgconfirm = '';
            if ($Row->in_status == '2') {
                $flgconfirm = '1';
            } else {
                $flgconfirm = '0';
            }
			
			$transport_animals = $this->get_transport_animals($Row->in_transportation_id);
			
            $arrData[] = array("dt_target" 					=> $Row->dt_target,
								"in_transportation_id" 		=> $Row->in_transportation_id,
								"st_from_city" 				=> $Row->st_from_city,
								"st_from_state" 			=> $Row->st_from_state,
								"st_from_zip" 				=> $Row->st_from_zip,
								"st_to_city" 				=> $Row->st_to_city,
								"st_to_state" 				=> $Row->st_to_state,								
								"st_to_zip" 				=> $Row->st_to_zip,
								"in_tot_distance" 			=> $Row->in_tot_distance,
								"in_distance_covered" 		=> $Row->in_distance_covered,
								"st_trans_type"				=> $Row->st_trans_type,
								"dt_pickup_date" 			=> $Row->dt_pickup_date,
								"in_status" 				=> $Row->in_status,
								"flgIsTransportConfirmed" 	=> $flgconfirm,
								"perc" 						=> isset($Row->perc) ? $Row->perc : '',
								"org_id"					=> $Row->in_organization_id,
								"org_name"					=> $Row->st_org_name,
								"st_transport_name"         => $Row->st_trans_name,
								"transport_airline"         => $Row->in_airline_transport,
								"in_animal_count"           => count($transport_animals),
								"st_org_code"				=> $Row->st_org_code
            );
        }
        return $arrData;		
	}
	
	public function update_vehicle_zip_code($id,$zipcode,$ziplat,$ziplon)
	{
			$arrVehicle	 = 	  array('st_zip_vehicle'	=> $zipcode,
									'zip_lat'			=> $ziplat, 
									'zip_lon'			=> $ziplon,
									"dt_modified"		=>	date('Y-m-d H:i:s')
									);							
			$this->db->where_in('in_user_id', $id);
			$this->db->where('in_deleted', "0");
			$this->db->update('tbl_user_vehicle', $arrVehicle);	
	}
	
	public function update_plane_zip_code($id,$zipcode,$ziplat,$ziplon)
	{
		$plane_info = array(
								  "st_pilot_zip"			=>	$zipcode,
								  "zip_lat"					=>	$ziplat,
								  "zip_lon"					=>	$ziplon,
								  "dt_modified"			=>	date('Y-m-d H:i:s'));	
		$this->db->where('in_user_id', $id);
		$this->db->where('in_deleted', "0");
		$this->db->update("tbl_user_pilot", $plane_info);
		//echo $this->db->last_query(); die;
	}
	
	public function get_animal_media($animal_id) {
        $this->db->select('in_file_id,st_file_name,st_file_type,in_profile_pic', FALSE);
        $this->db->from('tbl_animal_file');       
        $this->db->where('in_animal_id', $animal_id); 
		$this->db->where('st_file_type !=','O');
		$this->db->where('in_deleted', 0); 
		$this->db->order_by('in_file_id','ASC');
        $query = $this->db->get();
        //echo $this->db->last_query(); die;
        //return $query->result_array();
        $data = array();
        foreach ($query->result_array() as $row) {	
			$path='';
			$youtubeid='';
		   if($row['st_file_type']=='P'){     $path= base_url() . 'upload/animal_images/' . $row['st_file_name'];}
		   elseif($row['st_file_type']=='V'){ 		   
		   $path		 = $row['st_file_name'];
		   $exp_filename = explode('/',$row['st_file_name']);
		   $youtubeid	 = $exp_filename[4];
		 //  $youtube_link = 'http://www.youtube.com/watch?v='.$youtubeid.'&rel=0&showinfo=0';	
		   $youtube_link = 'http://www.youtube.com/watch?v='.$youtubeid;
		   }
				if(isset($youtubeid) && $youtubeid!= ''){
					
					$data[] = array('st_file_name' 	=> $path,
									'media_type'	=> $row['st_file_type'],
									'youtubeid'     => $youtubeid,
									'youtube_link'	=> $youtube_link		
					);		
				}
				else
				{
					 $data[] = array('st_file_name' 	=> $path,
								     'media_type'	    => $row['st_file_type'],		
									 'profile_pic'	    => $row['in_profile_pic']								
				);
			}
		
        }
        return $data;
    }
	
	public function get_fromloc_details($fromlocid)
	{	
		$this->db->select("st_city,st_state");
		$this->db->from('tbl_airport');
		$this->db->where('in_deleted',0);
		$this->db->where('st_loc_id',$fromlocid);		
		$query = $this->db->get();
        return $query->row_array();
	}
	public function get_toloc_details($tolocid)
	{	
		$this->db->select("st_city,st_state");
		$this->db->from('tbl_airport');
		$this->db->where('in_deleted',0);
		$this->db->where('st_loc_id',$tolocid);		
		$query = $this->db->get();
        return $query->row_array();
	}
	
	public function update_transport_rescue_details($data,$id)
	{
		$this->db->where('in_id', $id);
		$this->db->update("tbl_transport_rescue_story", $data);
		return $this->db->affected_rows();
	}
	
	
	function check_video_exists($trid,$id)
	{
		$this->db->select('in_transport_photo_id');
		$this->db->from('tbl_transportation_photo');	 
		$this->db->where("in_transportation_id",$trid);
		$this->db->where("in_transport_story_id",$id);
		$this->db->where("in_deleted",0);
		$this->db->where("st_file_type",'V');	
		$query = $this->db->get();	
		if($query->num_rows()>0)
			return true;
		else
			return false;	
	}
	
	public function update_transport_photo($data,$trid,$id,$createdby)
	{
		$this->db->where('in_transportation_id',  $trid);
		$this->db->where('in_transport_story_id', $id);
		$this->db->where('in_created_by', $createdby);
		$this->db->where('st_file_type', 'V');
		$this->db->update("tbl_transportation_photo", $data);
		return $this->db->affected_rows();
	}
	
	
	function delete_transport_photo($photoids)
	{			
		$arrPhoto = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_transport_photo_id', $photoids);
		$this->db->update('tbl_transportation_photo', $arrPhoto);		
		return $this->db->affected_rows();
	}
	
	public function get_transport_story_photos($tra_id)
	{
		$this->db->select('trs.in_id,trs.in_transportation_id,trs.st_rescue_title,trs.st_rescue_story,trs.in_created_by,trs.dt_created,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,t.in_trans_coods_id',FALSE);
		$this->db->from('tbl_transport_rescue_story trs');
		$this->db->join('tbl_transportation t','t.in_transportation_id=trs.in_transportation_id','INNER');
		$this->db->where('trs.in_deleted',0);
		$this->db->where('trs.in_transportation_id',$tra_id);
		$this->db->join('tbl_users u','trs.in_created_by = u.in_user_id AND u.in_deleted = 0','LEFT');
		$this->db->order_by('dt_created','DESC');
		$query = $this->db->get();
		//return $query->result_array();
		
		$arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
			$media	=	$this->get_transport_photos_by_id($Row->in_id,$tra_id,$Row->in_created_by);
			
			$type='';
			if($Row->st_rescue_title!='' && $Row->st_rescue_story!=''){ $type = 'S'; } else{ $type = 'P';}
			
                $arrData[] = 			array("userid" 				=> $Row->in_created_by, 
											  "user_name" 			=> $Row->st_display_name,	
											  "story_id" 			=> $Row->in_id,
											  "story_title" 		=> $Row->st_rescue_title,	
											  "story" 				=> strip_tags(html_entity_decode($Row->st_rescue_story, ENT_QUOTES)),
											  "type"				=> $type,
											  "in_trans_coods_id" 	=> $Row->in_trans_coods_id,
											  "media" 				=> isset($media)?$media:array(),
											   );
            }

            return $arrData;
        }	
		
	}
	
	
	public function get_transport_photos_by_id($story_id,$tra_id,$created_by)
	{
		$this->db->select('st_file_name,st_file_type,st_video_provider,st_video_id,in_transport_photo_id',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transport_story_id',$story_id);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->where('in_created_by',$created_by);
		$query = $this->db->get();
		//return $query->result_array();
		$data=array();
		 if ($query->num_rows() > 0) {
		 
		  foreach ($query->result() as $Row) {
		  	$path='';
			$youtubeid='';
			$videourl='';
			$original_image_url='';
		   if($Row->st_file_type=='P'){     
		   $path= $this->config->item('upload_url').'trasnportation/250x250/' . $Row->st_file_name;
		   $original_image_url	=	$this->config->item('upload_url').'trasnportation/' . $Row->st_file_name;
		   }
		   elseif($Row->st_file_type=='V'){		    		   
		   $path		 = $Row->st_file_name; 		   
		   }		   
				if($Row->st_file_type== 'V'){			
				
				if($Row->st_video_provider=='youtube'){
				$videourl = 'http://www.youtube.com/watch?v='.$Row->st_video_id;
				}
				elseif($Row->st_video_provider=='vimeo'){
				$videourl = 'https://vimeo.com/'.$Row->st_video_id;
				}
					
					$data[] = array('media_type'		=> $Row->st_file_type,
								   'url' 				=> $path,
								   'youtube_vimeo_id'   => $Row->st_video_id,
								   'photo_video_id' 	=> $Row->in_transport_photo_id,
								   'video_url'			=> $videourl		
					);		
				}
				else
				{
					 $data[] = array('url' 					=> $path,
								    'media_type'	    	=> $Row->st_file_type,
									'photo_video_id' 		=> $Row->in_transport_photo_id,
									'original_image_url'	=> 	$original_image_url			
									 							
				);
			}
		  
		  }
		 return $data;
		 
		 }	
		
	}
	
	public function get_product_data($id) {
	
        $this->db->select(' p.st_product,
							p.in_wp_product_id,							
							p.st_sku,
							p.in_organization_id,
							p.st_desc,
							o.st_org_name,
							p.fl_regular_price,
							p.fl_discount_price,
							p.in_stock_status,
							p.st_selected_category,
							p.st_prod_image,p.in_prod_id,
							o.in_vendor_id,
							o.st_paypal_email');
        $this->db->from("tbl_products p"); 
		$this->db->join("tbl_organization o","p.in_organization_id = o.in_organization_id","LEFT");	
 
		$this->db->where('p.in_prod_id',$id);     
        $query = $this->db->get();
      
	   
	   $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {			
			
                $arrData[] = array( 'name' 					=> $Row->st_product,
									'sku' 					=> $Row->st_sku,
									'description' 			=> $Row->st_desc,									
									'regular_price' 		=> $Row->fl_regular_price,
									'discount_price' 		=> $Row->fl_discount_price,
									'stock_status' 			=> ($Row->in_stock_status==1)?'instock' : 'outofstock',
									'category' 				=> $Row->st_selected_category,
									'image' 				=> $Row->st_prod_image,
									'thumburl'				=> $this->config->item('upload_url').'product/190x190/'.$Row->st_prod_image,								
									'organization_id'		=> $Row->in_organization_id,
									'organization_name'		=> $Row->st_org_name,
									'wp_product_id'			=> $Row->in_wp_product_id,
									'paypal_email'          => $Row->st_paypal_email,
									'vendor_id'				=> (isset($Row->in_vendor_id) && !empty($Row->in_vendor_id)) ? $Row->in_vendor_id:'',
                );					
            }
		
			
        }
        return $arrData;
    }
	
	public function get_productdata_image($id)
	{
		$arrData = array();
		$this->db->select('st_image');
		$this->db->from("tbl_product_image"); 
		$this->db->where('in_product_id', $id);      
		$this->db->where('in_deleted', 0);       
		$query = $this->db->get();
	
		foreach ($query->result() as $row) {
				  $arrData['gallery'][] = array( 'gallery_url' 	=> $this->config->item('upload_url').'product/large/190x190/'.$row->st_image);
			}
				
		return $arrData;	
	}
	
	public function get_auction_product_data($id) {
	
        $this->db->select(' p.st_product,							
							p.st_sku,
							p.in_wp_product_id,
							p.in_organization_id,
							p.st_desc,
							o.st_org_name,
							p.fl_start_price,
							p.fl_reserve_price,
							p.fl_bid_price,
							p.fl_buy_price,
							p.dt_from,
							p.dt_to,							
							p.st_selected_category,
							p.st_prod_image,p.in_prod_id,
							o.in_vendor_id,
							o.st_paypal_email');
        $this->db->from("tbl_auction_products p");
		$this->db->join("tbl_organization o","p.in_organization_id = o.in_organization_id","LEFT");		
        //$this->db->where('p.in_deleted', 0);    
		$this->db->where('p.in_prod_id', $id);     
        $query = $this->db->get();
        //echo $this->db->last_query();die;
       // return $query->result_array();
	   
	   $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {		
				//echo $this->db->last_query();die;		 
			
			
                $arrData[] = array( 'name' 					=> $Row->st_product,
									'sku' 					=> $Row->st_sku,
									'description' 			=> $Row->st_desc,									
									'start_price' 		    => $Row->fl_start_price,
									'reserve_price' 		=> $Row->fl_reserve_price,
									'bid_price' 		    => $Row->fl_bid_price,
									'buy_price' 		    => $Row->fl_buy_price,	
									'auction_from' 			=> date('Y-m-d H:i',strtotime($Row->dt_from)),	
									'auction_to' 			=> date('Y-m-d H:i',strtotime($Row->dt_to)),								
									'stock_status' 			=> 'instock',
									'category' 				=> $Row->st_selected_category,
									'image' 				=> $Row->st_prod_image,
									'thumburl'				=> $this->config->item('upload_url').'product/190x190/'.$Row->st_prod_image,								
									'organization_id'		=> $Row->in_organization_id,
									'organization_name'		=> $Row->st_org_name,
									'wp_product_id'			=> $Row->in_wp_product_id,
									'paypal_email'          => $Row->st_paypal_email,
									'vendor_id'				=> (isset($Row->in_vendor_id) && !empty($Row->in_vendor_id)) ? $Row->in_vendor_id:'',
                );					
            }	
			
        }
        return $arrData;
    }
	
	public function get_auctiondata_image($id)
	{
		$arrData = array();
		$this->db->select('st_image');
		$this->db->from("tbl_auction_product_image"); 
		$this->db->where('in_product_id', $id);      
		$this->db->where('in_deleted', 0);       
		$query = $this->db->get();
	
		foreach ($query->result() as $row) {
				  $arrData['gallery'][] = array( 'gallery_url' 	=> $this->config->item('upload_url').'product/large/190x190/'.$row->st_image);
			}
				
		return $arrData;	
	}
	
	public function update_product_data($data,$Id,$table) {
        $this->db->WHERE('in_prod_id', $Id);
        $this->db->update($table, $data);
        return $this->db->affected_rows();
    }
	
	public function create_order($order_info) {
        $user_id = $this->db->insert('tbl_order', $order_info);
        $this->db->insert_id();
        return $this->db->insert_id();
    }
	
	public function create_order_address($order_address) {
        $user_id = $this->db->insert('tbl_order_address',$order_address);
        $this->db->insert_id();
        return $this->db->insert_id();
    }
	
	public function add_line_item($line_item) {
        $feedback_id = $this->db->insert_batch('tbl_order_items',$line_item);
		return  $this->db->insert_id();
    }
	
	public function change_order_status($order_id,$order_info) 
	{
		$this->db->where('in_wp_order_id',$order_id);
        $this->db->update('tbl_order',$order_info);
        return $this->db->affected_rows();
	}
	
	function wp_user_login($data) {
        $this->db->select("in_user_id,st_display_name,st_last_name,st_email");
        $this->db->where(array("st_email" => addslashes($data['email']), "st_password" => md5(htmlspecialchars_decode($data['password']))));
		$this->db->where("in_deleted", 0);
        $this->db->where("(in_status = 0 OR in_status = 1)");
        $query = $this->db->get("tbl_users");
        $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData = 				array(    "userid" => $Row->in_user_id, 
												 "first_name" => $Row->st_display_name,
												  "last_name" => $Row->st_last_name,
												      "email" => $Row->st_email	 
											    );
            }

            return $arrData;
        }
    }
	
	public function insert_product_bid($product_bid) {
        $user_id = $this->db->insert('tbl_auction_product_bid',$product_bid);
        $this->db->insert_id();
        return $this->db->insert_id();
    }
	
	public function verify_product_bid($bid_value,$product_id,$first_name,$last_name,$email_address) {
        $this->db->select('in_auc_prod_bid_id');
		$this->db->from('tbl_auction_product_bid');
		$this->db->where('in_deleted',0);
		$this->db->where('in_wp_product_id',$product_id);
		$this->db->where('fl_bid_price',$bid_value);
		$this->db->where('st_first_name',$first_name);
		$this->db->where('st_last_name',$last_name);
		$this->db->where('st_bid_email_address',$email_address);
		$query = $this->db->get();
		$product_bid = $query->row();
		return $product_bid->in_auc_prod_bid_id;
    }
	
	public function update_product_bid($product_bid,$bid_id) {
		$this->db->where('in_auc_prod_bid_id',$bid_id);
        $this->db->update('tbl_auction_product_bid',$product_bid);
        return $this->db->affected_rows();
    }
	
	public function insert_product_category($product_category) {
        $user_id = $this->db->insert('tbl_product_category',$product_category);
        $this->db->insert_id();
        return $this->db->insert_id();
    }
	
	public function update_prod_category($product_category,$wp_category_id) {
		$this->db->where('wp_category_id',$wp_category_id);
        $this->db->update('tbl_product_category',$product_category);
        return $this->db->affected_rows();
    }
	
	public function delete_prod_category($product_category,$wp_category_id) {
		$this->db->where('wp_category_id',$wp_category_id);
        $this->db->update('tbl_product_category',$product_category);
        return $this->db->affected_rows();
    }
	
	public function get_vendorid($vendor_id)
	{
		$this->db->select('in_organization_id');
		$this->db->from('tbl_organization');	 
		$this->db->where("in_vendor_id",$vendor_id);
		$this->db->where("in_deleted",0);	
		$query = $this->db->get();	
		return $query;
	}
	
	function delete_vendorid($vendor_data,$org_id)
	{
		$this->db->where('in_organization_id',$org_id);
		$this->db->update('tbl_organization',$vendor_data);
		return $this->db->affected_rows();
	}
	
	function check_transport_story_type($story_id)
	{
		$this->db->select('trs.in_id,trs.st_rescue_title,trs.st_rescue_story,trs.in_created_by');
		$this->db->from('tbl_transport_rescue_story trs');
		$this->db->where('trs.in_deleted',0);
		$this->db->where('trs.in_id',$story_id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function get_push_notification($userId)
	{
		$this->db->select("in_flg_trans_ani flgtransportationanimallistupdate,in_flg_trans_dt flgtransportationdatemodified,in_flg_trans_update flgtransportationupdated,in_flglegupdated flglegupdated,in_flgmsgtofeed flgmsgtofeed");
		$this->db->from('tbl_push_notification');		
		$this->db->where('in_user_id',$userId);		
		$query = $this->db->get();
        return $query->row_array();	
	}
	
	function update_push_notification_detail($array,$userId)
	{
		$this->db->where('in_user_id',  $userId);		
		$this->db->update("tbl_push_notification", $array);
		return $this->db->affected_rows();
	}	
	
	
	 public function get_push_notification_count($user_id) {
        $this->db->select('in_push_id', FALSE);
        $this->db->from('tbl_push_notification');      
        $this->db->where('in_user_id', $user_id);
        $query = $this->db->get();
		//echo $this->db->last_query(); die;
        return $query->num_rows();
    }
	
	function insert_push_notification_detail($array)
	{
		 $this->db->insert('tbl_push_notification', $array);        
         return $this->db->insert_id();
	}
	
	public function get_orgtc_details($org_id)
	{
		
		$this->db->select("in_enable_terms_condition,st_terms_condition");
		$this->db->from('tbl_organization');		
		$this->db->where('in_organization_id',$org_id);	
		$this->db->where('in_deleted', 0);	
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
        return $query->row_array();	
			
	}
	
	public function get_acceptcondition_details($user_id,$organization_id)
	{
		$this->db->select('in_id', FALSE);
        $this->db->from('tbl_users_accept_condition');      
        $this->db->where('in_user_id', $user_id);
		$this->db->where('in_organization_id', $organization_id);
		$this->db->where('in_deleted', 0);
        $query = $this->db->get();
		//echo $this->db->last_query(); die;
        return $query->num_rows();	
	}
	
	public function get_org_detail($transport_id) {
       $org_details = array();
       $this->db->select("tr.in_organization_id", FALSE);
       $where = array("tr.in_deleted" => "0", "tr.in_transportation_id" => $transport_id);
       $this->db->from("tbl_transportation tr");
       $this->db->where($where);
       $query = $this->db->get();
       if ($query->num_rows() > 0) {
           $org_details = $query->row_array();
       }
       //echo "<pre>";print_r($org_details);die;
       return $org_details;
    }
	
	public function entry_user_accept_condition($data)
	{
		$this->db->insert('tbl_users_accept_condition', $data);
	}
	
	public function verify_user_accept_condition($user_id,$org_id)
	{
		$arrData = array();
		$this->db->select("*");
		$this->db->from("tbl_users_accept_condition");
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_deleted',0);
		$query =	$this->db->get();
		if($query->num_rows() > 0)
		{
			$arrData = $query->result();							
		}
		return $arrData;
	}
	
	public function generate_token($Id)
	{
		// Generating Token
            $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
            $charactersLength = strlen($characters);
            $randomString = '';
            for ($i = 0; $i < 10; $i++) {
                $randomString .= $characters[rand(0, $charactersLength - 1)];
            }
            $token = $randomString . time();
            $insData = array('wsdl_token' => $token);

            $this->db->where('in_user_id', $Id);
            $this->db->update('tbl_users', $insData);            
            return $token;
	}
	
	public function get_transport_animals($tra_id)
	{	
		$result_array = array();
		$this->db->select('a.in_animal_id',FALSE);
		$this->db->from('tbl_animal_transportation as an_t');
		$this->db->join('tbl_animal as a','a.in_animal_id = an_t.in_animal_id','INNER');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');
		$this->db->join('tbl_animal_file af','af.in_animal_id = a.in_animal_id AND af.st_file_type="P" AND af.in_deleted="0" ','LEFT');
		//$this->db->where('a.in_deleted',0);	//commented this condition bcz we have to display the animal even if animal profile is deleted but animal relates to that transport 
		$this->db->where('an_t.in_deleted',0);
		$this->db->where('a.in_deleted',0);		
		$this->db->where('an_t.in_transportation_id',$tra_id);		
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	
	public function checksmscode($Id,$code) {
		$this->db->select('in_user_id');
		$this->db->from('tbl_users');
		$this->db->where('in_sms_code',$code);		
		$this->db->where('in_user_id',$Id);		
		$this->db->where('in_deleted',0);		
		$query = $this->db->get();
		return $query->num_rows();
	}

    # *******************************************************************************************  
    #   name        :   Rajashri Mahapure
    #   Function    :   get_rides_detail
    #   Purpose     :   For getting ride details for API
    # *******************************************************************************************
    public function get_rides_detail($userId)
    {
        $sql    = "SELECT r.in_id, r.in_user_id, r.st_ride_daytime, r.in_ride_radius, r.in_messanger, r.st_mobile
                   FROM tbl_user_rides as r 
                   WHERE r.in_user_id= '".$userId."' AND  r.in_deleted= '0' ";
                    
        $query = $this->db->query($sql);
        
        if($query->num_rows()>0){
                foreach($query->result() as $Row)
                {
                    
                    
                    $arrData[]= array('in_id'           =>  $Row->in_id,
                                      'in_user_id'      =>  $Row->in_user_id,
                                      'st_ride_daytime' =>   $Row->st_ride_daytime,
                                      'in_ride_radius'  =>  $Row->in_ride_radius, 
                                      'in_messanger'    =>  $Row->in_messanger,
                                      'st_mobile'       =>$Row->st_mobile
                                    );                  
                }           
                return $arrData;
        }
    }


    # *******************************************************************************************   
    #   name        :   Rajashri Mahapure
    #   Function    :   get_rider_available
    #   Purpose     :   For getting availabe details 
    # *******************************************************************************************

    public function get_rider_available($id){
        $this->db->select('r.st_ride_daytime,r.in_id');
        $this->db->from('tbl_user_rides as r');     
        $this->db->where('r.in_user_id',$id);
        $this->db->where('r.in_deleted',0);     
        $query = $this->db->get();
        return $query->row_array();
    }
	
    # *******************************************************************************************   
    #   name        :   Rajashri Mahapure
    #   Function    :   add_ride_info
    #   Purpose     :   For adding new records 
    # *******************************************************************************************
    public function  add_ride_info($ridedata){
        
        $this->db->insert('tbl_user_rides', $ridedata);
        return $this->db->affected_rows();
    }
	
    # *******************************************************************************************   
    #   name        :   Rajashri Mahapure
    #   Function    :   update_ride_info
    #   Purpose     :   For update existing records 
    # *******************************************************************************************
    public function update_ride_info($ridedata, $in_id){
        $this->db->where('in_id', $in_id);
        $this->db->update('tbl_user_rides', $ridedata);
        return $this->db->affected_rows();
    }
	
	
	function get_animal_sup_detail($userId)
	{
		$this->db->select('*');
		$this->db->from('tbl_user_lost_animal_support');
		$this->db->where('in_user_id',$userId);	
		$this->db->where('in_deleted',0);		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		//return $query->row_array();
		
		 $arrData = array();
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $Row) {
                $arrData = 				array("in_id" => $Row->in_id, 
											  "in_user_id" => $Row->in_user_id
											  );
				$title = $flgIsSelected = $info = '';
				for($i=0;$i<6;$i++)	{
									
				if($i==0) { $title='Caseworker'; $flgIsSelected=$Row->in_caseworker; $info='This role assists the owner by email, text and telephone.  They advise the owner on how to generate sightings and they help develop a strategy to successfully catch the animal.';}
				if($i==1) { $title='Craiglist Monitor'; $flgIsSelected=$Row->in_monitor;$info='This team of volunteers watches the multiple Craigslist sites in their local area for lost and found postings. They post flyers to the site, offer services to finders and owners of lost animals, and watch for possible matches of missing animals.';}
				if($i==2) { $title='Facebook Liason/Networker'; $flgIsSelected=$Row->in_networker;$info='This volunteer posts flyers of lost animals to other Facebook pages including rescues, shelters, community pages, vet clinics, etc.';}
				if($i==3) { $title='Facebook Admins/Flyermakers'; $flgIsSelected=$Row->in_admin;$info='These volunteers receive the lost and found reports from the owners and finders, and they use the information to create flyers to post online or in print.  Note: This volunteer position requires some technical skills.';}
				if($i==4) { $title='Matchers'; $flgIsSelected=$Row->in_matcher;$info='These volunteers watch shelter websites and Facebook pages for possible matches to missing animals.';}
				if($i==5) { $title='Dead End Microchip Volunteers'; $flgIsSelected=$Row->in_volunteer; $info='These volunteers help shelters and finders track down the owners of animals who have "dead end" microchips.  Note: Lost animal groups provide training for these types of specialized volunteers.';} 

				$arrData['lost_animal_support'][$i] = array(
											  "title" => $title,
											  "flgIsSelected" => $flgIsSelected,	
											  "info" => $info,											  
											  );										  
				}						  
            }
            return $arrData;
        }
		else
		{
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Caseworker',
											  "flgIsSelected" => '0',	
											  "info" => 'This role assists the owner by email, text and telephone.  They advise the owner on how to generate sightings and they help develop a strategy to successfully catch the animal.',											  
											  );
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Craiglist Monitor',
											  "flgIsSelected" => '0',	
											  "info" => 'This team of volunteers watches the multiple Craigslist sites in their local area for lost and found postings. They post flyers to the site, offer services to finders and owners of lost animals, and watch for possible matches of missing animals.',											  
											  );
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Facebook Liason/Networker',
											  "flgIsSelected" => '0',	
											  "info" => 'This volunteer posts flyers of lost animals to other Facebook pages including rescues, shelters, community pages, vet clinics, etc.',											  
											  );
											  
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Facebook Admins/Flyermakers',
											  "flgIsSelected" => '0',	
											  "info" => 'These volunteers receive the lost and found reports from the owners and finders, and they use the information to create flyers to post online or in print.  Note: This volunteer position requires some technical skills.',											  
											  );
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Matchers',
											  "flgIsSelected" => '0',	
											  "info" => 'These volunteers watch shelter websites and Facebook pages for possible matches to missing animals.',											  
											  );
			$arrData['lost_animal_support'][] = array(
											  "title" => 'Dead End Microchip Volunteers',
											  "flgIsSelected" => '0',	
											  "info" => 'These volunteers help shelters and finders track down the owners of animals who have "dead end" microchips.  Note: Lost animal groups provide training for these types of specialized volunteers.',											  
											  );
			return $arrData;
			
		}
	}
	
	public function add_pet_profile($data) {
        $this->db->insert('tbl_lost_found_pet', $data);
		//echo $this->db->last_query(); die;
        return $this->db->affected_rows();
    }
	
	public function update_pet_profile($data,$Id) {
        $this->db->where('in_id', $Id);
        $this->db->update('tbl_lost_found_pet', $data);
		return $this->db->affected_rows();
    }
	
	
	public function generate_pettoken($Id)
	{
		// Generating Token
            $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
            $charactersLength = strlen($characters);
            $randomString = '';
            for ($i = 0; $i < 10; $i++) {
                $randomString .= $characters[rand(0, $charactersLength - 1)];
            }
            $token = $randomString . time();
            $insData = array('pet_token' => $token);

            $this->db->where('in_id', $Id);
            $this->db->update('tbl_lost_found_pet', $insData);            
            return $token;
	}
	
	
	public function get_pet_details($id = '', $token = '')
	{
		$this->db->select('	p.in_id');
        $this->db->from("tbl_lost_found_pet p");         
        $this->db->where('p.in_id', $id);
		$this->db->where('p.in_deleted', 0);
		$this->db->where('p.pet_token', $token);     
        $query = $this->db->get();
        //echo $this->db->last_query();
        return $query->row_array();
	}
	
	
	public function get_pet_info($id)
	{
		$this->db->select('p.*,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
        $this->db->from("tbl_lost_found_pet p"); 
		$this->db->join("tbl_users u","u.in_user_id = p.in_user_id AND u.in_deleted='0'", "LEFT");
		$this->db->join("tbl_user_profile up","up.in_user_id = p.in_user_id AND up.in_deleted='0'", "LEFT");
        $this->db->where('p.in_id', $id);
		$this->db->where('p.in_deleted', 0);	     
        $query = $this->db->get();
        //echo $this->db->last_query();
       // return $query->row_array();
	   
	   
	   if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
								
							$pet_image = $Row->st_pet_image;
							
							$arrPet[]	=	array( 
													'in_pet_type'		=> $Row->in_pet_type,
													'st_gender'			=> $Row->st_gender,
													'st_color'			=> $Row->st_color,
													'st_height'			=> $Row->st_height,
													'st_weight'			=> $Row->st_weight,
													'in_age'			=> $Row->in_age,
													'st_coat_type'		=> $Row->st_coat_type,
													'st_coat_length'	=> $Row->st_coat_length,
													'in_report_type'	=> $Row->in_report_type,
													'st_location'		=> $Row->st_location,
													'st_comment'		=> $Row->st_comment,
													'st_petname'		=> $Row->st_petname,
													'st_breed'			=> $Row->st_breed,
													'dt_created'		=> $Row->dt_created,
													'st_display_name'	=> $Row->st_display_name,
													'st_email'			=> $Row->st_email,
													'st_primary_phone'	=> $Row->st_primary_phone,
													'lat'			    => $Row->lat,
													'lon'		 	    => $Row->lon,
													'state'			    => $Row->st_location_state,
													'zipcode'			=> $Row->st_location_zipcode,
													'st_pet_image'      => ($pet_image != '' && file_exists($this->config->item('upload') . "animal_images/140x140/" . $pet_image)) ? base_url() . 'upload/animal_images/140x140/' . $pet_image : base_url() . 'upload/animal_images/140x140/no_photo_icon.png',
											);
						}
						return $arrPet;						
					}
	}
	
	public function get_myreports($user_id) {
        $this->db->select('p.in_id,p.pet_token,p.st_pet_image,p.in_report_type,p.st_petname,p.dt_lostfound,p.in_pet_type,p.st_comment,p.st_breed,p.st_color,p.st_height,p.st_weight,p.st_coat_type,p.st_coat_length,p.in_age,p.st_collar_color,p.st_gender,p.st_location,p.st_location_specific,p.st_identity_mark,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone,b.st_pet_breed_name');
        $this->db->from('tbl_lost_found_pet p');  
		$this->db->join("tbl_users u","u.in_user_id = p.in_user_id AND u.in_deleted='0'", "LEFT");
		$this->db->join("tbl_user_profile up","up.in_user_id = p.in_user_id AND up.in_deleted='0'", "LEFT");
		$this->db->join("tbl_pet_breed b","b.in_pet_breed_id = p.st_breed AND b.in_deleted='0'", "LEFT");
		$this->db->where('p.in_user_id',$user_id);
        $this->db->where('p.in_deleted', 0);
        $query = $this->db->get();
		if($query->num_rows()>0){
			$arrPet = array();
			foreach($query->result() as $Row)
						{				
								
							$pet_image = $Row->st_pet_image;
							
							$arrPet[]	=	array( 
													'id'				=> $Row->in_id,
													'pet_token'	    	=> $Row->pet_token,
													'report_type'		=> $Row->in_report_type,
													'lostfound'			=> date('Y-m-d',strtotime($Row->dt_lostfound)),
													'petname'			=> $Row->st_petname,
													'species'			=> $Row->in_pet_type,													
													'contact'	    	=> $Row->st_display_name.' '.$Row->st_last_name,
													'email'				=> $Row->st_email,	
													'phone'				=> $Row->st_primary_phone,
													'comments'       	=> $Row->st_comment,
													'breed'       		=> $Row->st_breed,
													'breedname'    		=> $Row->st_pet_breed_name,
													'color'       		=> $Row->st_color,
													'height'      		=> $Row->st_height,
													'weight'      		=> $Row->st_weight,
													'coatlength'    	=> $Row->st_coat_length,
													'coattype'    		=> $Row->st_coat_type,
													'age'  		  		=> $Row->in_age,													
													'collarcolor'   	=> $Row->st_collar_color,
													'gender'        	=> $Row->st_gender,
													'location'      	=> $Row->st_location,
													'location_specific' => $Row->st_location_specific,
													'description'   	=> $Row->st_identity_mark,												
													'st_pet_image'  	=> ($pet_image != '' && file_exists($this->config->item('upload') . "animal_images/" . $pet_image)) ? base_url() . 'upload/animal_images/' . $pet_image : base_url() . 'upload/animal_images/140x140/no_photo_icon.png',
											);
						}
						return $arrPet;			
		}
    }
	
	
	public function delete_pet($id,$pet_token)
	{	$arrPet = 	array('in_deleted' 	=> '1');		
		$this->db->where('in_id', $id);
		$this->db->where('pet_token', $pet_token);
		$this->db->update('tbl_lost_found_pet', $arrPet);	
	}
	
	
		function get_transport_list_all_data($status,$userId)
	{		
		$sql =	"SELECT tr.in_transportation_id FROM `tbl_transportation` `tr`, `tbl_users` `tu`,`tbl_transportation_participants` `p` ,`tbl_organization` `o` WHERE (`tu`.`in_user_id` = `tr`.`in_trans_coods_id`)";
		$where = '';
		$where .= " AND o.in_organization_id = tr.in_organization_id AND tr.in_deleted=0 AND o.in_deleted = 0 AND ((`p`.`in_transportation_id` = `tr`.`in_transportation_id` AND tr.in_deleted = 0 AND p.in_deleted = 0 AND p.in_user_id = ".$userId.")";
		$where .= "|| (`tr`.`in_trans_coods_id`= ".$userId." ))";
		$where .= "AND (tr.st_trans_type != 'RO')";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		
		$sql	.=	$where." GROUP BY `tr`.`in_transportation_id`";
		
		$query = $this->db->query($sql);
	    
		return ($query->num_rows() > 0) ? $query->num_rows()  :  FALSE;	
	}
	
	function get_total_trip($userId)
	{
		$todaysdate=date('Y-m-d');		
        $this->db->select("t.in_trip_id", false);
        $this->db->from('tbl_trips t'); 
		//$this->db->where('t.dt_trip', 0);
		$this->db->where("t.dt_trip >= '".$todaysdate."'", NULL, FALSE);
        $this->db->where('t.in_deleted', 0);
		$this->db->where('t.in_user_id',$userId);
        $query = $this->db->get();
        //echo $this->db->last_query(); die;				
        return $query->num_rows();
	}
	
	
	public function get_user_data_by_google_id($googleid = '') {
        $this->db->select('in_user_id,st_email');
        $this->db->from('tbl_users');
        $this->db->where("in_deleted", 0);
        $this->db->where("st_google_uid", $googleid);
        $query = $this->db->get();
        $user_data = array();
        if ($query->num_rows() > 0) {
            $user_data = $query->row_array();
        }
        return $user_data;
    }
	
	public function get_userdts($id) {
		$this->db->select('st_zip');
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id',$id);
		$this->db->where('in_deleted',0);	
		$query = $this->db->get();	
		//echo $this->db->last_query(); die;		
		return $query->row_array();
	}
	
	#-----------------fetch record for tbl_trans_rides using organization id----------------------------#
    public function get_rides_by_org_id($org_id){
        $this->db->select('in_ride_id,in_user_id,st_ride_nickname');
        $this->db->from('tbl_trans_rides');
        $this->db->where('in_org_id',$org_id);
        $this->db->where('in_deleted',0);
        $query = $this->db->get();
        return $query->result_array();
    }
	
	public function get_all_animals_by_org($org_id) { 
		$data= array();                
             
		
			$this->db->select('a.in_animal_id,a.st_animal_name,a.in_progress_status,a.dt_target_tr_date,a.in_ready_transfer,a.in_animal_public,a.in_adopt,af.st_file_name,'.
                                 'af.st_file_type,' 
                                . 'at.st_animal_type_name,'
                                . '(tat.in_transportation_id) as in_transportation_id,'
                                . 'min(dt_pickup_date) as dt_pickup_date,tc.in_campaign_id,tc.st_custom_url,tc.in_status as campaign_status',FALSE);
		$this->db->from('tbl_animal as a');
                
		$this->db->join('tbl_animal_file as af','a.in_animal_id = af.in_animal_id','LEFT');
		$this->db->join('tbl_demeanor as d','a.in_demeanor_id = d.in_demeanor_id','LEFT');
		
		$this->db->join('tbl_progress_status as p','a.in_progress_status = p.in_progress_status_id','LEFT');
		
		$this->db->join('tbl_animal_type as at','a.in_animal_type_id = at.in_animal_type_id','LEFT');
		$this->db->join('tbl_campaign as tc','tc.in_animal_id = a.in_animal_id','LEFT');
                
                $this->db->join('tbl_animal_transportation tat','a.in_animal_id = tat.in_animal_id AND  tat.in_deleted = 0','LEFT');
                $this->db->join('tbl_transportation tt','tat.in_transportation_id = tt.in_transportation_id AND tt.in_status != 3','LEFT');
                
              
		
		$this->db->where("a.in_animal_id NOT IN (SELECT in_animal_id FROM tbl_animal_transfer_req WHERE in_status != 3 AND in_from_organization_id = '".$org_id."' AND in_to_organization_id = '".$org_id."')");
		// AND in_accepted_by != '".$userid."'  in_requested_by = '".$userid."'
		
                
                     //$this->db->like(array('a.in_progress_status' => $status,'a.in_next_status' => $status));
                
		$this->db->where('a.in_deleted',0);
		$this->db->where('a.in_status <>',3);
		$this->db->where('a.in_organization_id',$org_id);	
		$this->db->order_by('in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');		
		$this->db->limit($limit,$start);		
		$query = $this->db->get();
		//echo $this->db->last_query();die;	
		
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				
				
				$st_file_name = $this->get_animal_photo($row['in_animal_id']);
				$data[] = array( 				'animal_id'			=>	$row['in_animal_id'],
                                                                //'org_id'			=>	$row['in_organization_id'],
                                                                'animal_name'		=>	$row['st_animal_name'],
                                                                //'on_date'			=>	$row['dt_date'],
                                                                //'progress_status'	=>	$row['st_progress_status'],
                                                                //'next_status'		=>	$row['st_progress_status'],
                                                                //'age'				=>	$row['in_age'],
                                                                //'gender'			=>	$row['st_gender'],
                                                              	'transfer'			=>	$row['in_ready_transfer'],
																'privacy'			=>  $row['in_animal_public'],
															    //'photo'				=>	$this->get_animal_dashboard_photo($row['in_animal_id']),
																"animal_icon" 			=> ($st_file_name != '' && file_exists($this->config->item('upload') . "animal_images/" . $st_file_name)) ? base_url() . 'upload/animal_images/' . $st_file_name : base_url() . 'upload/animal_images/no_photo_icon.png',
                                                                //'file_type'			=>	$row['st_file_type'],
                                                                //'demeanor_desc'		=>	$row['st_demeanor_desc'],
                                                                //'demeanor_img'		=>	$row['st_demeanor_image'],
                                                                //'demeanor_name'		=>	$row['st_demeanor_name'],
                                                                'animal_type_name'	=>	$row['st_animal_type_name'],
                                                               // 'in_progress_status'=>	$this->get_status_name($row['in_progress_status']),
                                                               // 'in_next_status'	=>	$this->get_status_name($row['in_next_status']),
                                                               // 'css_class'			=>	$row['st_css_class'],
                                                                //'neutered'			=>	$this->common_function->neutered_spayed[$row['in_neutered_id']],
											   					//'in_campaign_id'	=>  $row['in_campaign_id'],
																'in_adopt'		=>	$row['in_adopt'],																
											   					//'campaign_status'	=>  $row['campaign_status'],
								'pickup_date'			=>	($row['dt_pickup_date'] != '' && $row['dt_pickup_date'] != '0000-00-00' && $row['dt_pickup_date'] != '1969-12-31' )?date('M d, Y',strtotime($row['dt_pickup_date'])):'',
								'transport_date' =>	($row['dt_target_tr_date'] != '' && $row['dt_target_tr_date'] != '0000-00-00' && $row['dt_target_tr_date'] != '1969-12-31')?date('M d, Y',strtotime($row['dt_target_tr_date'])):''	
                                                                );
			}
		}                
                
		return $data;
		
	}
	
	public function get_org_animal_not_on_transport($org_id)
	{	
		$animal_details = array();
		$this->db->select('a.in_animal_id,a.st_travel_with,a.in_weight,a.in_animal_type_id,a.in_primary_breed_id,a.st_gender,a.st_cvi,
						  GROUP_CONCAT(ant.in_transportation_id) as in_transportation_id,
						  a.st_animal_name,
						  a.in_demeanor_id,
						  af.st_file_name,
						  st_animal_breed_name,
						  st_animal_type_name,
						  st_demeanor_name,
						  st_css_class,
						  st_demeanor_image,
						  st_demeanor_desc',FALSE);
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');	
		$this->db->join('tbl_animal_file af',"af.in_animal_id = a.in_animal_id AND st_file_type='P'",'LEFT');
		$this->db->join('tbl_animal_transportation ant',"ant.in_animal_id=a.in_animal_id AND ant.in_deleted='0'",'LEFT');	
		$this->db->join("tbl_organization o","o.in_organization_id = a.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->where('a.in_deleted',0);		
		
		/*
		if($this->session->userdata('transport_id'))
		{
			$this->db->where("a.in_animal_id NOT IN (SELECT in_animal_id FROM tbl_animal_transportation WHERE in_deleted = 0 AND in_transportation_id = ".$this->session->userdata('transport_id').")",FALSE,FALSE);
		}
		*/
		
		$this->db->where('a.in_organization_id',$org_id);
		$this->db->where('a.in_status <>',3);		
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
			if($row['in_transportation_id'] == '' ){   // animals not on transport
				
			if(file_exists($this->config->item('upload')."demeanor/".$row['st_demeanor_image']) && file_exists($this->config->item('upload')."demeanor/".$row['st_demeanor_image']))
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/".$row['st_demeanor_image'];
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/".$row['st_demeanor_image'];
			}
			else
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/no_photo_icon.png";
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/no_photo_icon.png";
			}
				
				
				$st_file_name = $this->common_model->get_animal_photo($row['in_animal_id']);
			if($st_file_name !='' && file_exists($this->config->item('upload')."animal_images/".$st_file_name))
			{
				$image_url  = $this->config->item('upload_url')."animal_images/".$st_file_name;
			}
			else
			{
				$image_url  = $this->config->item('upload_url')."animal_images/no_photo_icon.png";
			}
				
				$data[] = 	array('animal_id'		=>	$row['in_animal_id'],                                                               
								'animal_name'		=>	$row['st_animal_name'],
								'demenor_url'       =>  $demenor_url,
								'demenor_thumb_url' =>  $demenor_thumb_url, 
								'demeanor_desc'     =>  $row['st_demeanor_desc'],
								'image_url'			=>	$image_url,                                                                
								'animal_type_name'	=>	$row['st_animal_type_name'],
								'st_animal_breed_name'	=>	$row['st_animal_breed_name']								
								);
				
				 }                                       
			
			}
			
		}
		return $data;
		
	}
	
	public function get_org_animal_on_transport($org_id)
	{	
		$animal_details = array();
		$this->db->select('a.in_animal_id,a.st_travel_with,a.in_weight,a.in_animal_type_id,a.in_primary_breed_id,a.st_gender,a.st_cvi,
						  GROUP_CONCAT(DISTINCT ant.in_transportation_id) as in_transportation_id,
						  a.st_animal_name,
						  a.in_demeanor_id,
						  af.st_file_name,
						  st_animal_breed_name,
						  st_animal_type_name,
						  st_demeanor_name,
						  st_css_class,
						  st_demeanor_image,
						  st_demeanor_desc,o.st_org_code',FALSE);
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');	
		$this->db->join('tbl_animal_file af',"af.in_animal_id = a.in_animal_id AND st_file_type='P'",'LEFT');
		$this->db->join('tbl_animal_transportation ant',"ant.in_animal_id=a.in_animal_id AND ant.in_deleted='0'",'LEFT');	
		$this->db->join("tbl_organization o","o.in_organization_id = a.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->where('a.in_deleted',0);			
		
		
		$this->db->where('a.in_organization_id',$org_id);
		$this->db->where('a.in_status <>',3);		
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
				
						if(isset($row['in_transportation_id']) && $row['in_transportation_id'] !='' ){
						$b='';
						$a=array();
						$arrtrid=array();
						$orgcode = ($row['st_org_code'] != '')? $row['st_org_code'] : 'DBT';
						$trid	=	$row['in_transportation_id'];
						$arrtrid=explode(',',$trid);
						
						foreach($arrtrid as $v)
						{
							
							$a[].= $orgcode.$v;
						}
						$b=implode(',',$a);
						
						}
						else
						{
							$b='';
						}
			
				
			if(file_exists($this->config->item('upload')."demeanor/".$row['st_demeanor_image']) && file_exists($this->config->item('upload')."demeanor/".$row['st_demeanor_image']))
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/".$row['st_demeanor_image'];
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/".$row['st_demeanor_image'];
			}
			else
			{
              $demenor_url = $this->config->item('upload_url')."demeanor/no_photo_icon.png";
              $demenor_thumb_url = $this->config->item('upload_url')."demeanor/no_photo_icon.png";
			}
				
				
				$st_file_name = $this->common_model->get_animal_photo($row['in_animal_id']);
			if($st_file_name !='' && file_exists($this->config->item('upload')."animal_images/".$st_file_name))
			{
				$image_url  = $this->config->item('upload_url')."animal_images/".$st_file_name;
			}
			else
			{
				$image_url  = $this->config->item('upload_url')."animal_images/no_photo_icon.png";
			}
				
				$data[] = 	array('animal_id'			=>	$row['in_animal_id'],                                                               
								'animal_name'			=>	$row['st_animal_name'],
								'demenor_url'       	=>  $demenor_url,
								'demenor_thumb_url' 	=>  $demenor_thumb_url, 
								'demeanor_desc'     	=>  $row['st_demeanor_desc'], 
								'image_url'				=>	$image_url,                                                                
								'animal_type_name'		=>	$row['st_animal_type_name'],
								'st_animal_breed_name'	=>	$row['st_animal_breed_name'],
								'in_transportation_id' 	=>  $b
								);		
			
			}
			
		}
		return $data;
		
	}
	
	
	function add_transport($arrData)
	{
		$user_id = $this->db->insert('tbl_transportation', $arrData);
		return  $this->db->insert_id();
	}
	
	
	
	public function add_legs_details($arrData)
	{
		$this->db->insert('tbl_transportation_leg_detail', $arrData);
		//echo "<br><br><pre>";print_r($this->db->last_query());
		$this->db->insert_id();
	}
	
	public function chk_demeanor($name ,$id)
	{
		//echo $name .$id;	
		$this->db->select('a.in_demeanor_id');
		$this->db->from('tbl_demeanor as a');
		$this->db->where('a.st_demeanor_name like',$name);	
		$this->db->where('a.in_animal_type_id =',$id);
		$this->db->where('a.in_deleted',0);
		$query = $this->db->get();
		$res= $query->result_array();
		//print_r();
		//Array ( [0] => Array ( [in_demeanor_id] => 26 ) ) 
		if(empty($res[0]['in_demeanor_id']))
		{
			$this->db->select('a.in_demeanor_id');
			$this->db->from('tbl_demeanor as a');
			$this->db->where('a.st_demeanor_name like','Unknown');	
			$this->db->where('a.in_animal_type_id =',$id);
			$this->db->where('a.in_deleted',0);
			$query2 = $this->db->get();
			$res = $query2->result_array();
		}
		return $res;	
	}
	
	public function create_legs($arrData)
	{
		$this->db->insert('tbl_transportation_leg', $arrData);
		$leg_id = $this->db->insert_id();
		return $leg_id;
	}
	
	public function get_kitten_transport($org_id='',$favorite_ride='')
	{
		$data= array();
		
		$this->db->select('t.*,
						  p.st_loc_street as pickup_street,
						  p.st_loc_city as pickup_city,
						  p.st_loc_state as pickup_state,
						  p.st_loc_zip as pickup_zip,
						  p.st_loc_contact as sending_contact_name,
						  p.st_loc_email as sending_email_address,
						  p.st_loc_phone as sending_phone_number,
						  d.st_loc_street as dropoff_street,
						  d.st_loc_city as dropoff_city,
						  d.st_loc_state as dropoff_state,
						  d.st_loc_contact as receiving_contact_name,
						  d.st_loc_email as receiving_email_address,
						  d.st_loc_phone as receiving_phone_number,
						  d.st_loc_zip as dropoff_zip',FALSE);	
		$this->db->from('tbl_trans_rides t');
		$this->db->join('tbl_trans_location p','p.in_loc_id=t.in_from_id AND p.in_deleted="0"','INNER');
		$this->db->join('tbl_trans_location d','d.in_loc_id=t.in_to_id AND d.in_deleted="0"','INNER');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_org_id AND o.in_deleted="0"','INNER');	
		$this->db->join('tbl_users u','u.in_user_id=t.in_user_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		//$this->db->where('t.in_status',4);
		$this->db->where('t.in_org_id',$org_id);

		if($favorite_ride!='')
		{
			$this->db->where('t.in_ride_id',$favorite_ride);
		}		
			
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		return $query->result_array();
		
	}
	
	
	public function add_animal_profile_local($data,$transport_id,$org_id,$user_id) 
	{   
		$this->db->insert('tbl_animal',$data);	
		$animals_id = $this->db->insert_id();
		$arraygen=array('gender','pbreed','sbreed','tbreed','age','weight','demeanor','cstatus','nstatus','city','state','clock','where','quarantine','shelter_time','shelter_contact','comments','files','photo_video','pstory','cost','social','birdsex');	
		$general = serialize($arraygen);
		$arraymed = array('neutered','rvaccine','hvaccine','fecaltest','bvaccine','microchipped','surgery','dlhhp','medical_issue','medical_comments');					
		$medical = serialize($arraymed);
		$arraytran = array('crates','frisk','baggresive','recent_vaccine','cvi','current_zip','desired_zip','available_transfer','tr_date','travel','tr_comment');
		$transport = serialize($arraytran);
		$arrayfoster = array ('other','same','trained','kids','declawed','fh_comment');
		$foster = serialize($arrayfoster);
		$date = date('Y-m-d H:i:s');
		
		$animalchkset    = array('in_animal_id'			=> $animals_id,
								 'in_user_id'			=> $user_id,
								 'in_organization_id'	=> $org_id,
								 'st_general_setting'	=> $general,
								 'st_medical_setting'	=> $medical,
								 'st_transport_setting'	=> $transport,
								 'st_foster_home_setting'=> $foster,
								 'dt_created'			=> $date,
								  'dt_modified'			=> $date
								);							
			$this->db->insert('tbl_animal_setting',$animalchkset);	
			if($transport_id!='' && $transport_id!='0')
			{	
			$arrData = array("in_transportation_id"	=> $transport_id,
							 "in_animal_id"			=> $animals_id,
							 "in_created_by"		=> $user_id,
							 "dt_created"			=> date("Y-m-d H:i:s"),
							 "in_deleted"			=> "0"
							  );
			$this->db->insert('tbl_animal_transportation', $arrData);				  
			}				  
			
			return $animals_id;
	}
	
	
	public function update_animal_profile_local($animal_id,$transport_id,$user_id)
	{   
		
			$arrData = array("in_transportation_id"	=> $transport_id,
							 "in_animal_id"			=> $animal_id,
							 "in_created_by"		=> $user_id,
							 "dt_created"			=> date("Y-m-d H:i:s"),
							 "in_deleted"			=> "0"
							  );
			$this->db->insert('tbl_animal_transportation', $arrData);
		
	}
	
	function get_org_transport_list($status,$org_id)
	{		
		$transport_details = array();
		$this->db->select("	SQL_CALC_FOUND_ROWS tr.in_transportation_id as rows,
							tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.in_tot_distance,
							tr.st_trans_name,
							tr.in_distance_covered,
							tr.in_status,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.accTcid,
							tr.in_round,
							tr.in_mins,
							tr.st_trans_type,
							tr.in_airline_transport,
							concat(u.st_display_name,' ',u.st_last_name) as co_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							u.st_email,o.st_org_code",FALSE);
		//$where = "(tr.in_deleted=0 and tr.in_organization_id=$org_id)";
		//$where = "(tr.in_deleted=0 && tr.in_organization_id='".$org_id."')";
		$where='';		
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users u","u.in_user_id=tr.in_trans_coods_id","INNER");
		$this->db->join("tbl_organization o","o.in_organization_id=tr.in_organization_id","INNER");
		$this->db->where('tr.in_organization_id',$org_id);
		$this->db->where('tr.in_deleted','0');
		$this->db->where('tr.st_trans_type <>','RO');
		if($status == '1')
		{
			$where .= "((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= "(tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else 
		{
			$where .= "tr.in_status = '".$status."'";
		}
		$this->db->where($where);			
		$this->db->order_by('tr.in_transportation_id','DESC');		
		$query =	$this->db->get();	
		//echo $this->db->last_query(); die;
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
				
				$total_legs = $this->common_model->get_total_legs_count($row['in_transportation_id']);
				$transport_filled_data 	= $this->common_model->get_transport_filled_status($row['in_transportation_id']);
				$total_legs_created = 0;
				
				if(isset($total_legs) && !empty($total_legs))
				{
					if(isset($transport_filled_data['filled_legs_count']) && !empty($transport_filled_data['filled_legs_count']))
					{
						$total_legs_created	= count($transport_filled_data['filled_legs_count']);
					}

				} else {
					$total_legs_created = '0';
				}	
				
												$transport_type = '';												
												if($row['st_trans_type'] == 'D')
												{
															if($row['in_airline_transport'] == 1)
															{																
																$transport_type = 'Airline';
															} else {																
																$transport_type = 'Assisted';
															}	
												} else if($row['st_trans_type'] == 'R') {
																$transport_type = 'Ride';
																													
												} else if($row['st_trans_type'] == 'RO') {
																$transport_type = 'Route';																
												}else {
																
																$transport_type = 'Pre-defined';
												}		
				
				$data[] = 	array('in_transportation_id'			=>	$row['in_transportation_id'],                                                               
								'dt_pickup_date'					=>	$row['dt_pickup_date'],
								'dt_target'       					=>  $row['dt_target'],								
								'st_transport_name'					=>	$row['st_trans_name'], 
								'in_status'							=>	$status,
								'st_from_street'  					=>  isset($row['st_from_street'])?$row['st_from_street']:'',
								'st_from_city' 						=>  $row['st_from_city'],
								'st_from_state'  					=>  $row['st_from_state'],
								'st_from_zip'  						=>  $row['st_from_zip'],
								'st_to_street'  					=>  isset($row['st_to_street'])?$row['st_to_street']:'',
								'st_to_state'  						=>  $row['st_to_state'],
								'st_to_city'  						=>  $row['st_to_city'],
								'st_to_zip'  						=>  $row['st_to_zip'],								
								'st_trans_type'  					=>  $transport_type,								
								'st_org_code'  						=>  isset($row['st_org_code'])?$row['st_org_code']:'',	
								'total_legs'						=>	$total_legs,
								'total_legs_joined'					=>	(int)$total_legs_created,								
								"leg_detail"						=>  $this->get_all_legs_detail($row['in_transportation_id'],$user_id='')
								);	
				
			}	
			return $data;
		}	
		
	}
	
	public function get_lat_long($zipcode)
		{
			$this->db->select('lat,lon');
			$this->db->from('tbl_zip_code');
			$this->db->where('zip_code',$zipcode);
			$query = $this->db->get()->result_array();
			return $query;	
		}
		
		public function get_participation_leg_count($photograph_type_transport,$leg_id)
		{
			$participants_cnt = '0';
			$non_doobert_participants_cnt = '0';
			$this->db->select('count(in_tr_pr_id) as participants_cnt');
			$this->db->from('tbl_transportation_participants');
			$this->db->where('in_transportation_leg_id',$leg_id);
			$this->db->where('in_photography_profile',$photograph_type_transport);
			$this->db->where('in_deleted',0);
			$query = $this->db->get();
			$doobert_leg_user_count = $query->row_array();
			$participants_cnt = $doobert_leg_user_count['participants_cnt'];
		
			if($photograph_type_transport==0)
			{
				$this->db->select('count(in_non_doobert_user_id) as non_doobert_participants_cnt');
				$this->db->from('tbl_non_doobert_transport_users');
				$this->db->where('in_leg_id',$leg_id);
				$this->db->where('in_deleted',0);
				$query = $this->db->get();
				$non_doobert_leg_user_count = $query->row_array();
				$non_doobert_participants_cnt = $non_doobert_leg_user_count['non_doobert_participants_cnt'];
			}

			return $participants_cnt+$non_doobert_participants_cnt;
		
		}
		
		function get_transport_nearby_open_leg($userId) 
		{
			$user_profile = $this->common_model->get_user_profile($userId);
			$airline_emp = $this->common_model->get_airline_profile($userId);
			$current_date = date("Y-m-d");
			$distance_to_drive = '';
			$photograph_zip = '';
			$photograph_state_prefix = '';
			$miles = '';
			$lat_long = array();
			$photograph_type_transport = '';
			$in_transportation_leg_id = array();
			$transportation_leg_id = '';
			$open_leg_details	=	array();
			$sql = '';
			if(isset($user_profile) && !empty($user_profile))
			{
				if(isset($user_profile['0']['st_driver']) && $user_profile['0']['st_driver']=='Y')
				{
					$photograph_type_transport = '0';
					$distance_to_drive	=	$this->common_model->get_transport_miles($userId);
					$lat_long = $this->get_lat_long($user_profile['0']['st_zip']);
					
				} else if(isset($user_profile['0']['st_pilot']) && $user_profile['0']['st_pilot']=='Y')
				{
					$photograph_type_transport = '0';
					$distance_to_drive	=	$this->common_model->get_pilot_miles($userId);
					$lat_long = $this->get_lat_long($user_profile['0']['st_zip']);
				} else if(isset($user_profile['0']['st_photographer']) && $user_profile['0']['st_photographer']=='Y')
				{
					$photograph_type_transport = '1';
					$distance_to_drive	=	$this->common_model->get_photographer_miles($userId);
					$photograph_zip  	 =  (isset($distance_to_drive) && count($distance_to_drive)>0 &&  !empty($distance_to_drive[0]['st_zipcode']))? $distance_to_drive[0]['st_zipcode']:'';
					$lat_long = $this->get_lat_long($photograph_zip);
				}
			
			}
			
			if(isset($distance_to_drive) && count($distance_to_drive)>0  && $distance_to_drive[0]['distance_to_drive'] !='' )
			{				
				$miles = $distance_to_drive[0]['distance_to_drive'];			
			}
			else
			{
				$photograph_type_transport = '';
				/*$local_ride_profile = $this->common_model->get_local_ride_profile($userId);
				if(isset($local_ride_profile['in_ride_radius']) && $local_ride_profile['in_ride_radius'] != 0 && isset($distance_to_drive[0]['distance_to_drive']) &&  $distance_to_drive[0]['distance_to_drive'] !='')
				{  
					$miles = $local_ride_profile['in_ride_radius'];
				}*/
			}
			
			if($photograph_type_transport=='' && count($airline_emp)<=0)
			{
					$open_leg_details['incomplete_profile'] = 1;
					return $open_leg_details; 	 
			}	
			
			if($photograph_type_transport!='')
			{		
				$this->db->select('tlg.in_transportation_leg_id,tlg.in_multi_user,tlg.in_user_num');
				$this->db->from('tbl_transportation_leg tlg');
				$this->db->join("tbl_transportation_leg_detail tlgd","tlgd.in_transportation_leg_id = tlg.in_transportation_leg_id","INNER");
				$this->db->join("tbl_transportation tr","tr.in_transportation_id = tlg.in_transportation_id","INNER");	
			
				if(!empty($miles) && count($lat_long)>0)
				{
					$this->db->join("tbl_zip_code zp","zp.zip_code=tlgd.st_zip","INNER");
					$this->db->where("((3959 * acos( cos( radians( {$lat_long[0]['lat']} ) ) * cos( radians( zp.lat ) ) * cos( radians( zp.lon ) - radians( {$lat_long[0]['lon']} ) ) + sin( radians( {$lat_long[0]['lat']} ) ) * sin( radians( zp.lat ) ) ) ) < '" . $miles . "')");
				}
		
				$this->db->where('tr.dt_target >= ',$current_date);
				$this->db->where('tr.in_deleted', 0);
				$this->db->where('tr.in_status', '1');
				$this->db->where('tlgd.in_deleted', 0);
				$this->db->where('tr.in_airline_transport', '0');
				if(!empty($type)  && $type=='P')
				{	
					$this->db->where('tr.st_trans_type', 'P');
				}
		
				if(!empty($type)  && $type=='R' && $photograph_type_transport=='0')
				{			
					$this->db->where('tr.st_trans_type', 'R');
				}
		
				if(!empty($type)  && $type=='D')
				{			
					$this->db->where('tr.st_trans_type', 'D');
				}
			
				if(empty($type) && $photograph_type_transport=='0' )
				{
					$type_array = array('P','R','D');
					$this->db->where_in('tr.st_trans_type',$type_array);
					//$sql .= " AND (tr.st_trans_type = 'R' || tr.st_trans_type = 'P' || tr.st_trans_type = 'D' )";
				}	
			
				if(empty($type) && $photograph_type_transport=='1')
				{
					$type_array = array('P','D');
					$this->db->where_in('tr.st_trans_type',$type_array);
					//$sql .= " AND ( tr.st_trans_type = 'P' || tr.st_trans_type = 'D' )";
				}
			
				if($photograph_type_transport=='0' && $userId!='')
				{
					$route_type = array('2');
					if( isset($user_profile['0']['st_driver']) && $user_profile['0']['st_driver']=='Y')
					{
						array_push($route_type,'0');
					}
					if( isset($user_profile['0']['st_pilot']) && $user_profile['0']['st_pilot']=='Y')
					{
						array_push($route_type,'1');
					}
					$this->db->where_in('tlg.in_route_type',$route_type);	
				}
		
		
				if(!empty($transport_id))
					$this->db->where('tr.in_transportation_id',$transport_id);
				if(!empty($city) && empty($miles) && empty($zip))
					$this->db->where('tlgd.st_state',$city);
				if(!empty($start_date))
					$this->db->where('Date(tlgd.dt_start_time)',$start_date);
			
				$this->db->group_by('tlg.in_transportation_leg_id');
				$this->db->order_by('tlg.in_transportation_leg_id','ASC');
				//$query = $this->db->get();
				$query = $this->db->get()->result_array();
			
				foreach($query as $key=>$value)
				{
					$total_filled_status = 0;
					$all_participants = $this->get_participation_leg_count($photograph_type_transport,$value['in_transportation_leg_id']);
					if($value['in_multi_user'] == 0 && $all_participants > 0 && $photograph_type_transport==0)
					{
						$total_filled_status=1;
					}
					else if($value['in_multi_user'] == 1  && $value['in_user_num'] == $all_participants && $photograph_type_transport==0)
					{
						$total_filled_status=1;	
					} else if($all_participants > 0 && $photograph_type_transport==1)
					{
						$total_filled_status=1;		
					} 		
				
					if($total_filled_status==0)
					{
						array_push($in_transportation_leg_id,$value['in_transportation_leg_id']);		
					}	
				}
			
				
				
				if(count($in_transportation_leg_id)>0)
				{	
					$sql .= 'Select u.st_display_name,
						   u.st_last_name,
						   u.in_user_id,
						   u.st_email,
						   org.in_organization_id,
						   org.st_org_name,
						   org.st_org_code,
						   p.st_zip as start_zip,
						   p.st_street AS start_street,
						   p.st_city AS start_city,
						   p.st_state AS start_state,
						   p.dt_start_time AS start_date,
						   p.st_timezone AS start_time_zone,
						   d.st_zip as end_zip,
						   d.st_street AS end_street,
						   d.st_city AS end_city,
						   d.st_state AS end_state,
						   d.dt_start_time AS end_date,
						   d.st_timezone AS end_time_zone,
						   tr.in_transportation_id,
						   tr.st_trans_type,
						   tr.in_airline_transport,
						   m.fl_distance from tbl_transportation_leg tlg 
						   INNER JOIN tbl_transportation_leg_detail p ON p.in_transportation_leg_id = tlg.in_transportation_leg_id  
						   INNER JOIN tbl_transportation_leg_detail d ON d.in_transportation_leg_id = tlg.in_transportation_leg_id	
					       INNER JOIN tbl_routes m ON  m.in_transportation_leg_id = tlg.in_transportation_leg_id 
					       INNER JOIN tbl_transportation tr ON tr.in_transportation_id = tlg.in_transportation_id 
					       INNER JOIN tbl_organization org ON tr.in_organization_id = org.in_organization_id  
					       INNER JOIN tbl_users u ON tr.in_trans_coods_id = u.in_user_id';
					$sql .= ' where ';
					$transportation_leg_id = implode(",",$in_transportation_leg_id);
					if(!empty($transportation_leg_id))
					{
						$sql .= '  tlg.in_transportation_leg_id IN ('.$transportation_leg_id.')  AND' ;
					}
					$sql .= " p.st_leg_type ='P' AND d.st_leg_type ='D' AND p.in_deleted = 0 AND d.in_deleted = 0  AND m.in_deleted =0 AND org.in_deleted = 0 ";
				}
				
			}
				
			//if(isset($airline_emp[0]['st_base_name']) && !empty($airline_emp[0]['st_base_name']))
			//{
					if($sql!='')
					{
						$sql .= " UNION ";
					}	
					$sql .= "select u.st_display_name,
							u.st_last_name,
							u.in_user_id,
							u.st_email,
							org.in_organization_id,
							org.st_org_name,
							org.st_org_code,
							tr.st_from_zip AS start_zip,
							tr.st_from_street AS start_street,
							tr.st_from_city AS start_city,
							tr.st_from_state AS start_state,
							DATE_FORMAT(tr.dt_pickup_date,'%Y-%m-%d %H:%i:%s') AS start_date,
							p.st_time_zone AS start_time_zone,
							tr.st_to_zip AS end_zip,
							tr.st_to_street AS end_street,
							tr.st_to_city AS end_city,
							tr.st_to_state AS end_state,
							DATE_FORMAT(tr.dt_target,'%Y-%m-%d %H:%i:%s') AS end_date,
							d.st_time_zone AS end_time_zone,	
							tr.in_transportation_id,
							tr.st_trans_type,
							tr.in_airline_transport,
							(tr.in_tot_distance - tr.in_distance_covered)	
							from tbl_transportation tr 
							INNER JOIN tbl_organization org ON tr.in_organization_id = org.in_organization_id  
							LEFT JOIN tbl_users u ON tr.accTcid = u.in_user_id
							INNER JOIN tbl_zip_code p on p.zip_code = tr.st_from_zip  
							INNER JOIN tbl_zip_code d on d.zip_code = tr.st_to_zip";

							if(!empty($miles) && count($lat_long)>0)
							{
								$sql .= ' INNER JOIN tbl_zip_code zp on zp.zip_code=tr.st_from_zip';
								//$lat_long = $this->get_lat_long($zip); 
								if (sizeof($lat_long) > 0)
								{
									$sql .= " where((3959 * acos( cos( radians( {$lat_long[0]['lat']} ) ) * cos( radians( zp.lat ) ) * cos( radians( zp.lon ) - radians( {$lat_long[0]['lon']} ) ) + sin( radians( {$lat_long[0]['lat']} ) ) * sin( radians( zp.lat ) ) ) ) < '" . $miles . "') AND ";
								}	
									else {
								$sql .= " where";			
								}
							} else 
							{
								$sql .= " where";	
							}			
			
			
							$sql .=	" tr.st_trans_type='D' && tr.in_airline_transport='1' && tr.in_status='1' 
										&& tr.in_deleted = '0' AND org.in_deleted = '0'";

							if(isset($airline_emp[0]['st_base_name']) && !empty($airline_emp[0]['st_base_name']) &&  empty($miles) && $photograph_type_transport=='') 					
							{
								$sql .= " AND (tr.st_from_street = '".$airline_emp[0]['st_base_name']."' OR tr.st_to_street = '".$airline_emp[0]['st_base_name']."' )";
							}
			//}
			if($sql!='')
			{
					$sql .= "order by in_transportation_id DESC";
					$query = $this->db->query($sql);
					if($query->num_rows() > 0 )
					{		
						foreach($query->result_array() as $key=>$row)
						{
							if($row['in_airline_transport'] == 1 && $row['st_trans_type'] == 'D' )
							{
								$from_location = $row['start_city']." (".$row['start_street'].')';
								$to_location   = $row['end_city']." (".$row['end_street'].')';
								$start_date = '';
								$end_date = '';
								$Start_date_time = 'TBD';
								$End_date_time = 'TBD';
							} else {
								$from_location = $row['start_city'].", ".$row['start_state'];
								$to_location   = $row['end_city'].", ".$row['end_state'];
								$start_date = date("h:i A",strtotime($row['start_date']))." ".$row['start_time_zone'];
								$end_date = date("h:i A",strtotime($row['end_date']))." ".$row['end_time_zone'];
								$Start_date_time = date("Y-m-d",strtotime($row['start_date']));
								$End_date_time = date("Y-m-d",strtotime($row['end_date']));
							}
							$img_name = '';
							$transport_type = '';
							
							$st_from_city  = $row['start_city'];
							$st_from_state = $row['start_state'];
							$st_from_zip   = $row['start_zip'];
							
							$st_to_city  = $row['end_city'];
							$st_to_state = $row['end_state'];
							$st_to_zip   = $row['end_zip'];
							
							if($row['st_trans_type'] == 'D')
							{
								if($row['in_airline_transport'] == 1)
								{
									$img_name = 'icon-airline.png';
									$transport_type = 'Airline';
								} else {
									$img_name = 'icon-assisted.png';
									$transport_type = 'Assisted';
								}	
							} else if($row['st_trans_type'] == 'R') 
							{
								$transport_type = 'Ride';
							}else 
							{
								$img_name = 'prespecifylegs.png';
								$transport_type = 'Pre-defined';
							}
							$tot_dist_int = round($row['fl_distance']);
							$tot_dist = strval($tot_dist_int);
							$open_leg_details[]=array('in_transportation_id'   =>  $row['in_transportation_id'],
												                  'org_name'   =>  $row['st_org_name'],
															   'st_org_code'   =>  $row['st_org_code'],
															 //'From_location'   =>  $from_location,
															 //  'To_location'   =>  $to_location,
													        'dt_pickup_date'   =>  $Start_date_time,
																 'dt_target'   =>  $End_date_time,
										                   'in_tot_distance'   =>  $tot_dist,
															  'cood_user_id'   =>   $row['in_user_id'],
										                       //'first_name'    =>   $row['st_display_name'],
										                       // 'last_name'    =>   $row['st_last_name'],
												            //'email_address'    =>   $row['st_email'],
															   'start_time'    	=>   $start_date,
																'end_time'     	=>   $end_date,
														'transport_airline'    =>   $row['in_airline_transport'],
																// 'img_name'    =>   $img_name,
															'st_trans_type'    =>   $row['st_trans_type'],
															 'st_from_city'	   =>   $st_from_city,
															'st_from_state'	   =>   $st_from_state,
															  'st_from_zip'	   =>   $st_from_zip,
															   'st_to_city'	   =>   $st_to_city,
															  'st_to_state'	   =>   $st_to_state,
															    'st_to_zip'	   =>   $st_to_zip,
																"in_status" 	=>  "1",
														 "flgIsTransportConfirmed" => "0",
														 "org_id"					=> $row['in_organization_id'],
	
									);
						}	
					}
			}

			return 	$open_leg_details;		
			
		}
		
		function get_transport_nearby_open_leg_cnt($userId) 
		{
			$user_profile = $this->common_model->get_user_profile($userId);
			$airline_emp = $this->common_model->get_airline_profile($userId);
			$current_date = date("Y-m-d");
			$distance_to_drive = '';
			$photograph_zip = '';
			$photograph_state_prefix = '';
			$miles = '';
			$lat_long = array();
			$photograph_type_transport = '';
			$in_transportation_leg_id = array();
			$transportation_leg_id = '';
			$open_leg_details	=	array();
			$sql = '';
			$total_count = '0';
			if(isset($user_profile) && !empty($user_profile))
			{
				if(isset($user_profile['0']['st_driver']) && $user_profile['0']['st_driver']=='Y')
				{
					$photograph_type_transport = '0';
					$distance_to_drive	=	$this->common_model->get_transport_miles($userId);
					$lat_long = $this->get_lat_long($user_profile['0']['st_zip']);
					
				} else if(isset($user_profile['0']['st_pilot']) && $user_profile['0']['st_pilot']=='Y')
				{
					$photograph_type_transport = '0';
					$distance_to_drive	=	$this->common_model->get_pilot_miles($userId);
					$lat_long = $this->get_lat_long($user_profile['0']['st_zip']);
				} else if(isset($user_profile['0']['st_photographer']) && $user_profile['0']['st_photographer']=='Y')
				{
					$photograph_type_transport = '1';
					$distance_to_drive	=	$this->common_model->get_photographer_miles($userId);
					$photograph_zip  	 =  (isset($distance_to_drive) && count($distance_to_drive)>0 &&  !empty($distance_to_drive[0]['st_zipcode']))? $distance_to_drive[0]['st_zipcode']:'';
					$lat_long = $this->get_lat_long($photograph_zip);
				}
			
			}
			
			if(isset($distance_to_drive) && count($distance_to_drive)>0  && $distance_to_drive[0]['distance_to_drive'] !='')
			{				
				$miles = $distance_to_drive[0]['distance_to_drive'];			
			}
			else 
			{
				$photograph_type_transport = '';
				/*$local_ride_profile = $this->common_model->get_local_ride_profile($userId);
				if(isset($local_ride_profile['in_ride_radius']) && $local_ride_profile['in_ride_radius'] != 0 && isset($distance_to_drive[0]['distance_to_drive']) &&  $distance_to_drive[0]['distance_to_drive'] !='')
				{  
					$miles = $local_ride_profile['in_ride_radius'];
				}*/
			}
			
			if($photograph_type_transport=='' && count($airline_emp)<=0)
			{
					//$open_leg_details['incomplete_profile'] = 1;
					return $total_count; 	 
			}
			
			if($photograph_type_transport!='')
			{		
				$this->db->select('tlg.in_transportation_leg_id,tlg.in_multi_user,tlg.in_user_num');
				$this->db->from('tbl_transportation_leg tlg');
				$this->db->join("tbl_transportation_leg_detail tlgd","tlgd.in_transportation_leg_id = tlg.in_transportation_leg_id","INNER");
				$this->db->join("tbl_transportation tr","tr.in_transportation_id = tlg.in_transportation_id","INNER");	
			
				if(!empty($miles) && count($lat_long)>0)
				{
					$this->db->join("tbl_zip_code zp","zp.zip_code=tlgd.st_zip","INNER");
					$this->db->where("((3959 * acos( cos( radians( {$lat_long[0]['lat']} ) ) * cos( radians( zp.lat ) ) * cos( radians( zp.lon ) - radians( {$lat_long[0]['lon']} ) ) + sin( radians( {$lat_long[0]['lat']} ) ) * sin( radians( zp.lat ) ) ) ) < '" . $miles . "')");
				}
		
				$this->db->where('tr.dt_target >= ',$current_date);
				$this->db->where('tr.in_deleted', 0);
				$this->db->where('tr.in_status', '1');
				$this->db->where('tlgd.in_deleted', 0);
				$this->db->where('tr.in_airline_transport', '0');
				if(!empty($type)  && $type=='P')
				{	
					$this->db->where('tr.st_trans_type', 'P');
				}
		
				if(!empty($type)  && $type=='R' && $photograph_type_transport=='0')
				{			
					$this->db->where('tr.st_trans_type', 'R');
				}
		
				if(!empty($type)  && $type=='D')
				{			
					$this->db->where('tr.st_trans_type', 'D');
				}
			
				if(empty($type) && $photograph_type_transport=='0' )
				{
					$type_array = array('P','R','D');
					$this->db->where_in('tr.st_trans_type',$type_array);
					//$sql .= " AND (tr.st_trans_type = 'R' || tr.st_trans_type = 'P' || tr.st_trans_type = 'D' )";
				}	
			
				if(empty($type) && $photograph_type_transport=='1')
				{
					$type_array = array('P','D');
					$this->db->where_in('tr.st_trans_type',$type_array);
					//$sql .= " AND ( tr.st_trans_type = 'P' || tr.st_trans_type = 'D' )";
				}
			
				if($photograph_type_transport=='0' && $userId!='')
				{
					$route_type = array('2');
					if( isset($user_profile['0']['st_driver']) && $user_profile['0']['st_driver']=='Y')
					{
						array_push($route_type,'0');
					}
					if( isset($user_profile['0']['st_pilot']) && $user_profile['0']['st_pilot']=='Y')
					{
						array_push($route_type,'1');
					}
					$this->db->where_in('tlg.in_route_type',$route_type);	
				}
		
		
				if(!empty($transport_id))
					$this->db->where('tr.in_transportation_id',$transport_id);
				if(!empty($city) && empty($miles) && empty($zip))
					$this->db->where('tlgd.st_state',$city);
				if(!empty($start_date))
					$this->db->where('Date(tlgd.dt_start_time)',$start_date);
			
				$this->db->group_by('tlg.in_transportation_leg_id');
				$this->db->order_by('tlg.in_transportation_leg_id','ASC');
				//$query = $this->db->get();
				$query = $this->db->get()->result_array();
			
				foreach($query as $key=>$value)
				{
					$total_filled_status = 0;
					$all_participants = $this->get_participation_leg_count($photograph_type_transport,$value['in_transportation_leg_id']);
					if($value['in_multi_user'] == 0 && $all_participants > 0 && $photograph_type_transport==0)
					{
						$total_filled_status=1;
					}
					else if($value['in_multi_user'] == 1  && $value['in_user_num'] == $all_participants && $photograph_type_transport==0)
					{
						$total_filled_status=1;	
					} else if($all_participants > 0 && $photograph_type_transport==1)
					{
						$total_filled_status=1;		
					} 		
				
					if($total_filled_status==0)
					{
						array_push($in_transportation_leg_id,$value['in_transportation_leg_id']);		
					}	
				}
			
				
				
				if(count($in_transportation_leg_id)>0)
				{	
					$sql .= 'Select u.st_display_name,
						   u.st_last_name,
						   u.in_user_id,
						   u.st_email,
						   org.st_org_name,
						   org.st_org_code,
						   p.st_zip as start_zip,
						   p.st_street AS start_street,
						   p.st_city AS start_city,
						   p.st_state AS start_state,
						   p.dt_start_time AS start_date,
						   p.st_timezone AS start_time_zone,
						   d.st_zip as end_zip,
						   d.st_street AS end_street,
						   d.st_city AS end_city,
						   d.st_state AS end_state,
						   d.dt_start_time AS end_date,
						   d.st_timezone AS end_time_zone,
						   tr.in_transportation_id,
						   tr.st_trans_type,
						   tr.in_airline_transport,
						   m.fl_distance from tbl_transportation_leg tlg 
						   INNER JOIN tbl_transportation_leg_detail p ON p.in_transportation_leg_id = tlg.in_transportation_leg_id  
						   INNER JOIN tbl_transportation_leg_detail d ON d.in_transportation_leg_id = tlg.in_transportation_leg_id	
					       INNER JOIN tbl_routes m ON  m.in_transportation_leg_id = tlg.in_transportation_leg_id 
					       INNER JOIN tbl_transportation tr ON tr.in_transportation_id = tlg.in_transportation_id 
					       INNER JOIN tbl_organization org ON tr.in_organization_id = org.in_organization_id  
					       INNER JOIN tbl_users u ON tr.in_trans_coods_id = u.in_user_id';
					$sql .= ' where ';
					$transportation_leg_id = implode(",",$in_transportation_leg_id);
					if(!empty($transportation_leg_id))
					{
						$sql .= '  tlg.in_transportation_leg_id IN ('.$transportation_leg_id.')  AND' ;
					}
					$sql .= " p.st_leg_type ='P' AND d.st_leg_type ='D' AND p.in_deleted = 0 AND d.in_deleted = 0  AND m.in_deleted =0 AND org.in_deleted = 0 ";
				}
				
			}
				
			//if(isset($airline_emp[0]['st_base_name']) && !empty($airline_emp[0]['st_base_name']))
			//{
					if($sql!='')
					{
						$sql .= " UNION ";
					}	
					$sql .= "select u.st_display_name,
							u.st_last_name,
							u.in_user_id,
							u.st_email,
							org.st_org_name,
							org.st_org_code,
							tr.st_from_zip AS start_zip,
							tr.st_from_street AS start_street,
							tr.st_from_city AS start_city,
							tr.st_from_state AS start_state,
							DATE_FORMAT(tr.dt_pickup_date,'%Y-%m-%d %H:%i:%s') AS start_date,
							p.st_time_zone AS start_time_zone,
							tr.st_to_zip AS end_zip,
							tr.st_to_street AS end_street,
							tr.st_to_city AS end_city,
							tr.st_to_state AS end_state,
							DATE_FORMAT(tr.dt_target,'%Y-%m-%d %H:%i:%s') AS end_date,
							d.st_time_zone AS end_time_zone,	
							tr.in_transportation_id,
							tr.st_trans_type,
							tr.in_airline_transport,
							(tr.in_tot_distance - tr.in_distance_covered)	
							from tbl_transportation tr 
							INNER JOIN tbl_organization org ON tr.in_organization_id = org.in_organization_id  
							LEFT JOIN tbl_users u ON tr.accTcid = u.in_user_id
							INNER JOIN tbl_zip_code p on p.zip_code = tr.st_from_zip  
							INNER JOIN tbl_zip_code d on d.zip_code = tr.st_to_zip";

							if(!empty($miles) && count($lat_long)>0)
							{
								$sql .= ' INNER JOIN tbl_zip_code zp on zp.zip_code=tr.st_from_zip';
								//$lat_long = $this->get_lat_long($zip); 
								if (sizeof($lat_long) > 0)
								{
									$sql .= " where((3959 * acos( cos( radians( {$lat_long[0]['lat']} ) ) * cos( radians( zp.lat ) ) * cos( radians( zp.lon ) - radians( {$lat_long[0]['lon']} ) ) + sin( radians( {$lat_long[0]['lat']} ) ) * sin( radians( zp.lat ) ) ) ) < '" . $miles . "') AND ";
								}	
									else {
								$sql .= " where";			
								}
							} else 
							{
								$sql .= " where";	
							}			
			
							$sql .=	" tr.st_trans_type='D' && tr.in_airline_transport='1' && tr.in_status='1' 
										&& tr.in_deleted = '0' AND org.in_deleted = '0'";						
							
							if(isset($airline_emp[0]['st_base_name']) && !empty($airline_emp[0]['st_base_name']) &&  empty($miles) && $photograph_type_transport=='')
							{
								$sql .= " AND (tr.st_from_street = '".$airline_emp[0]['st_base_name']."' OR tr.st_to_street = '".$airline_emp[0]['st_base_name']."' )";
							}
			//}
			if($sql!='')
			{
					$sql .= "order by in_transportation_id DESC";
					$query = $this->db->query($sql);
					$total_count = $query->num_rows();
			}

			return 	$total_count;		
			
		}
	
}
?>