<?php
# =======================================================
# Created by		: Sadique Mohammad
# Created date		: 07-April-2014
# File description	: Animal Model for admin
# Special - notes	: none
# Tables used		: tbl_animal_type, tbl_animal_breed
# Stored procedures	: NONE 
# Triggers used		: none
# -------------------------------------------------------
class animal_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	
	    
	#============================================================
	#	Function	:	get_total_animal_types()
	#  Parameter	: 	name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_total_animal_types($name='')
	{ 		
					
		$this->db->select("tbl_animal_type.in_animal_type_id", false);						   	
		$this->db->from('tbl_animal_type');		
		$this->db->where('tbl_animal_type.in_deleted','0');
					
		//if($name!='')
		//{			
		// $this->db->where("tbl_animal_type.st_animal_type_name LIKE '%".$name."%'", NULL, FALSE);
		///}	
		
		if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("tbl_animal_type.st_animal_type_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_animal_type.st_animal_type_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}		
		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	
	
	#============================================================
	#	Function	:	get_animal_types()
	#  Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_animal_types($sort,$order,$limit,$rec_per_page,$name)
	{
		
		
		/*$sql	= "SELECT tbl_animal_type.in_animal_type_id,
						  tbl_animal_type.st_animal_type_name,
						  tbl_animal_type.dt_created,
						  tbl_animal_type.dt_modified						  
				  FROM tbl_animal_type WHERE tbl_animal_type.in_deleted='0'";*/
				  
		$this->db->select("tbl_animal_type.in_animal_type_id,
						   tbl_animal_type.st_animal_type_name,
						   tbl_animal_type.dt_created,
						   tbl_animal_type.dt_modified", false);						   	
		$this->db->from('tbl_animal_type');		
		$this->db->where('tbl_animal_type.in_deleted','0');
					  
		//if($name!='')
		//{				  
		  //$sql.=" AND  tbl_animal_type.st_animal_type_name LIKE '%".$name."%'";
		 // $this->db->where("tbl_animal_type.st_animal_type_name LIKE '%".$name."%'", NULL, FALSE);
		//}
		
		if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("tbl_animal_type.st_animal_type_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_animal_type.st_animal_type_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
					
					switch($sort)
					{
						
						case 'name': 							
							$this->db->order_by('tbl_animal_type.st_animal_type_name',$order);
						break;	
						
						case "createddate":						
						$this->db->order_by('tbl_animal_type.dt_created',$order);
					    break;	
						
						case "modifieddate":						
						$this->db->order_by('tbl_animal_type.dt_modified',$order);
					    break;	
						
						default:						
						$this->db->order_by('tbl_animal_type.st_animal_type_name',$order);
						 break; 	         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					//$sql 	.= " LIMIT ".$limit.",".$rec_per_page;
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 
				
					
					//echo $this->db->last_query();  die;					
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrAnimal[$Row->in_animal_type_id]	=	array('in_animal_type_id'	=> $Row->in_animal_type_id,
											'st_animal_type_name'								=> $Row->st_animal_type_name,
											'dt_created'										=> $Row->dt_created,
											'dt_modified'										=> $Row->dt_modified																				
											);
						}
						return $arrAnimal;
						
					}
					
	}
	
	
	
	#=====================================================================================
	#	Function	:	delete_animal_types()
	#  Parameter	: 	animaltypeId
	#	Perpose		:	to delete single animal type details from tbl_animal_type table
	#-------------------------------------------------------------------------------------
	function delete_animal_types($animaltypeId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_animal_type_id', $animaltypeId);
		$this->db->update('tbl_animal_type', $arrAnimal);		
	}
	
	
	
	
		
	#=====================================================================================
	#	Function	:	delete_multiple_animal_types()
	#  Parameter	: 	animalIds
	#	Perpose		:	to delete multiple animal types details from tbl_animal_type table
	#--------------------------------------------------------------------------------------
	function delete_multiple_animal_types($animaltypeIds)
	{				
		$arrAnimal = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_animal_type_id', $animaltypeIds);
		$this->db->update('tbl_animal_type', $arrAnimal);		
		return $this->db->affected_rows();
	}	
	
	
	
	#==========================================================================================
	#	Function	:	get_animal_types_profile()
	#   Parameter	: 	animalbreedIds
	#	Perpose		:	getting animal types profile from tbl_animal_type table
	#------------------------------------------------------------------------------------------	
	function get_animal_types_profile($animaltypeId)
	{
		$this->db->select('a.in_animal_type_id,a.st_animal_type_name,a.in_status');
		$this->db->from('tbl_animal_type as a');		
		$this->db->where('a.in_animal_type_id',$animaltypeId);			
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	
	#==========================================================================================
	#	Function	:	update_animal_type_info()
	#   Parameter	: 	table, data, animaltypeId
	#	Perpose		:	updating animal types profile in tbl_animal_type table
	#------------------------------------------------------------------------------------------	
	function update_animal_type_info($data,$animaltypeId,$table) {		
		$this->db->where('in_animal_type_id',$animaltypeId);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
	
	
	#==========================================================================================
	#	Function	:	insertAnimalTypes()
	#   Parameter	: 	post
	#	Perpose		:	inserting animal types details in tbl_animal_type table
	#------------------------------------------------------------------------------------------	
	public function insertAnimalTypes($post)
	{
		 $arrAnimalTypes = 	  array(
								'st_animal_type_name'	=>	$post['name'],	
								'in_animal_breed_count'	=>	'',		
								'in_status'				=>	$post['active'],															
								'dt_created'			=>  date("Y-m-d H:i:s"),	
								'in_deleted'		    =>	'0'																				
								);	
								$this->db->insert('tbl_animal_type', $arrAnimalTypes);												
	}
	
	
	#==========================================================================================
	#	Function	:	get_total_animal_breed()
	#   Parameter	: 	name
	#	Perpose		:	getting total no of animal breed from  tbl_animal_breed table
	#------------------------------------------------------------------------------------------	
	public function get_total_animal_breed($name='')
	{ 	
						  
		$this->db->select("at.in_animal_type_id,							
							ab.in_animal_breed_id", false);						   	
		$this->db->from('tbl_animal_type at');
		$this->db->join('tbl_animal_breed ab', 'ab.in_animal_type_id=at.in_animal_type_id','LEFT');		
		$this->db->where('ab.in_status','1');
		$this->db->where('ab.in_deleted','0');
					
				//if($name!='')
				//{	
				// $this->db->where("ab.st_animal_breed_name LIKE '%".$name."%'", NULL, FALSE);
				//}	
				
				if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("ab.st_animal_breed_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("ab.st_animal_breed_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
					
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	
	
	#====================================================================================
	#	Function	:	get_animal_breed()
	#   Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	getting animal breed details from tbl_animal_breed
	#-------------------------------------------------------------------------------------
	public function get_animal_breed($sort,$order,$limit,$rec_per_page,$name)
	{
						  
				  
				 $this->db->select("ab.in_animal_breed_id,
									  ab.st_animal_breed_name,
									  ab.in_animal_type_id,
									  ab.dt_created,
									  ab.dt_modified,
									  at.st_animal_type_name", false);						   	
				$this->db->from('tbl_animal_breed  ab');
				$this->db->join('tbl_animal_type at', 'at.in_animal_type_id=ab.in_animal_type_id','LEFT');		
				$this->db->where('ab.in_status','1');
				$this->db->where('ab.in_deleted','0'); 
					  
				//if($name!='')
				//{	
				 // $this->db->where("ab.st_animal_breed_name LIKE '%".$name."%'", NULL, FALSE);
				//}
				
				
				if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("ab.st_animal_breed_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("ab.st_animal_breed_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
		
					
					switch($sort)
					{
						
						case 'type': 							
							$this->db->order_by('ab.in_animal_type_id',$order);
						break;	
						
						case 'name': 
							$this->db->order_by('ab.st_animal_breed_name',$order);
						break;
						case 'createddate': 
							$this->db->order_by('ab.dt_created',$order);
						break;
						
						case 'modifieddate': 
							$this->db->order_by('ab.dt_modified',$order);
						break;
						
						default:
						$this->db->order_by('ab.in_animal_type_id',$order);							         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 					
					//echo $this->db->last_query();  die;										
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrAnimal[$Row->in_animal_breed_id] =	array('in_animal_breed_id'	=> $Row->in_animal_breed_id,
											'in_animal_type_id'									=> $Row->in_animal_type_id,			
							                'st_animal_breed_name'								=> $Row->st_animal_breed_name,											
											'st_animal_type_name'								=> $Row->st_animal_type_name,
											'dt_created'										=> $Row->dt_created,
											'dt_modified'										=> $Row->dt_modified																				
											);
						}
						return $arrAnimal;						
					}					
	}
	
	
	#===========================================================================
	#	Function	:	delete_animal_breed()
	#   Parameter	: 	animalbreedId
	#	Perpose		:	delete single animal breed data from tbl_animal_breed
	#---------------------------------------------------------------------------
	function delete_animal_breed($animalbreedId,$typeId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_animal_breed_id', $animalbreedId);
		$this->db->update('tbl_animal_breed', $arrAnimal);			
		
		$this->db->select("COUNT(in_animal_breed_id) as breedcount,in_animal_type_id");
		$this->db->from("tbl_animal_breed");
		$this->db->where("in_animal_type_id", $typeId);	
		$this->db->where("in_deleted", '0');			
		$query = $this->db->get();
		return $query->row_array();		
			
	}
	
	
		
	#==========================================================================================
	#	Function	:	delete_multiple_animal_breed()
	#   Parameter	: 	animalbreedIds
	#	Perpose		:	to delete multiple animal breeds details from tbl_animal_breed table
	#------------------------------------------------------------------------------------------
	function delete_multiple_animal_breed($animalbreedIds)
	{		
		
		$arrAnimal = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_animal_breed_id', $animalbreedIds);
		$this->db->update('tbl_animal_breed', $arrAnimal);		
		return $this->db->affected_rows();
	}
	
	
	#==========================================================================================
	#	Function	:	get_animal_breed_profile()
	#   Parameter	: 	animalbreedIds
	#	Perpose		:	getting animal breeds details from tbl_animal_breed table
	#------------------------------------------------------------------------------------------	
	function get_animal_breed_profile($animalbreedId)
	{
		$this->db->select('a.in_animal_breed_id,a.in_animal_type_id,a.st_animal_breed_name,a.in_status');
		$this->db->from('tbl_animal_breed as a');		
		$this->db->where('a.in_animal_breed_id',$animalbreedId);
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	
	#==========================================================================================
	#	Function	:	update_animal_breed_info()
	#   Parameter	: 	data,animalbreedId,table
	#	Perpose		:	updating animal breeds details in tbl_animal_breed table
	#------------------------------------------------------------------------------------------	
	function update_animal_breed_info($data,$animalbreedId,$table) {
	
		$this->db->where('in_animal_breed_id',$animalbreedId);
		$this->db->update($table,$data);
		
		$this->db->select("COUNT(in_animal_breed_id) AS breedcount,in_animal_type_id");
		$this->db->from("tbl_animal_breed");
		$this->db->where("in_animal_type_id", $data['in_animal_type_id']);
		$this->db->where("in_deleted", '0');
		$query = $this->db->get();
		return $query->row_array();			
	}
	
	
	
	function update_animal_info($data,$animalId,$table) 
	{ 
		//echo '<pre>'; print_r($data); die;
		$this->db->where('in_animal_id',$animalId);
		$this->db->update($table,$data);
	}
	
	
	#==========================================================================================
	#	Function	:	insertAnimalBreeds()
	#   Parameter	: 	post
	#	Perpose		:	inserting animal breeds details in tbl_animal_breed table
	#------------------------------------------------------------------------------------------	
	public function insertAnimalBreeds($post)
	{  
		 $arrAnimalBreeds = 	  array(
								'st_animal_breed_name'	=>	$post['name'],	
								'in_animal_type_id'	    =>	$post['animaltype'],
								'in_status'				=>	$post['active'],															
								'dt_created'			=>  date("Y-m-d H:i:s"),	
								'in_deleted'		    =>  '0'																				
								);								
								$this->db->insert('tbl_animal_breed', $arrAnimalBreeds);
								
								
	        $this->db->select("COUNT(in_animal_breed_id) AS breedcount,in_animal_type_id");
			$this->db->from("tbl_animal_breed");
			$this->db->where("in_animal_type_id", $post['animaltype']);
			$this->db->where("in_deleted", '0');
			$query = $this->db->get();
			return $query->row_array();							
																				
	}
	
	
	#==========================================================================================
	#	Function	:	updateAnimalTypes()
	#   Parameter	: 	breedcount
	#	Perpose		:	updating animal type table for breedcount
	#------------------------------------------------------------------------------------------	
	public function updateAnimalTypes($breedcount)
	{  
	
	    $data['in_animal_breed_count'] = $breedcount['breedcount'];
		$this->db->where('in_animal_type_id',$breedcount['in_animal_type_id']);
		$this->db->update('tbl_animal_type',$data);
		//echo $this->db->last_query(); die;
	}
	
	
	
	public function get_total_animal($animalname,$animaltype,$animalbreed,$organization,$demeanor,$fromdate,$todate,$status)
	{
		
					if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }
					if($status == '1')   // archive
					{ $status = '3';  }
					
					if($status == '2')   // un-archive
					{ $status = '2';  }	
										
					$this->db->select("a.in_animal_id", false);						   	
					$this->db->from('tbl_animal a');
					$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','INNER');
					$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','INNER');
					$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','INNER');
					$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','INNER');
					$this->db->where('a.in_deleted','0');
					$this->db->where('aty.in_deleted','0');
					$this->db->where('o.in_deleted','0');	
					$this->db->where('ab.in_deleted','0');
					$this->db->where('d.in_deleted','0');
					if($status == '3'){
					$this->db->where('a.in_status',$status);
					}
					else if($status == '2'){
					$this->db->where('a.in_status <>',3);
					}
					
					
					//if($animalname!='')
					//{							 
					// $this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
					//}
					
					if(trim($animalname) != '') {
							if($animalname=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$animalname."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						}
					}	
					
					
					if($animaltype!='')
					{						 
					  $this->db->where("a.in_animal_type_id = '".$animaltype."'", NULL, FALSE);
					}
					if($animalbreed!='')
					{							 
					   $this->db->where("a.in_primary_breed_id = '".$animalbreed."'", NULL, FALSE);
					}
					if($organization!='')
					{						  
					  $this->db->where("a.in_organization_id = '".$organization."'", NULL, FALSE);
					}
					if($demeanor!='')
					{						 
					  $this->db->where("a.in_demeanor_id = '%".$demeanor."'", NULL, FALSE);
					}
					if($fromdate!='' && $todate!='' )
					{						
					 $this->db->where("a.dt_created >= '".$fromdate."' AND a.dt_created <='" .$todate. ' 23:59:59'."'", NULL, FALSE);
					}
		
		
					$query = $this->db->get();
					//echo $this->db->last_query(); die;			
					return $query->num_rows();
	}
	
	
	
	
	public function get_animal($sort,$order,$limit,$rec_per_page,$animalname,$animaltype,$animalbreed,$organization,$demeanor,$fromdate,$todate,$status)
	{
				if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }
					if($status == '1')   // archive
					{ $status = '3';  }
					
					if($status == '2')   // un-archive
					{ $status = '2';  }
											
						$this->db->select("a.in_animal_id,
											a.st_animal_name,
											a.st_on_clock,
											a.dt_date,
											a.dt_created,	
											a.dt_modified,								
											o.st_org_name,								
											aty.st_animal_type_name,								
											ab.st_animal_breed_name,							
											d.st_demeanor_name", false);						   	
						$this->db->from('tbl_animal a');
						$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','INNER');
						$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','INNER');
						$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','INNER');
						$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','INNER');
						$this->db->where('a.in_deleted','0');
						$this->db->where('aty.in_deleted','0');
						$this->db->where('o.in_deleted','0');	
						$this->db->where('ab.in_deleted','0');
						$this->db->where('d.in_deleted','0');	
						if($status == '3'){
						$this->db->where('a.in_status',$status);
						}
						else if($status == '2'){
						$this->db->where('a.in_status <>',3);
						}
					  
						//if($animalname!='')
						//{							 
						// $this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						//}
						
						if(trim($animalname) != '') {
							if($animalname=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$animalname."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						}
					}	
						if($animaltype!='')
						{						 
						  $this->db->where("a.in_animal_type_id = '".$animaltype."'", NULL, FALSE);
						}
						if($animalbreed!='')
						{							 
						   $this->db->where("a.in_primary_breed_id = '".$animalbreed."'", NULL, FALSE);
						}
						if($organization!='')
						{						  
						  $this->db->where("a.in_organization_id = '".$organization."'", NULL, FALSE);
						}
						if($demeanor!='')
						{						 
						  $this->db->where("a.in_demeanor_id = '".$demeanor."'", NULL, FALSE);
						}
						if($fromdate!='' && $todate!='' )
						{						
						 $this->db->where("a.dt_created >= '".$fromdate."' AND a.dt_created <='" .$todate. ' 23:59:59'."'", NULL, FALSE);
						}
					
					switch($sort)
					{
						
						case 'orgname': 						
							$this->db->order_by('o.st_org_name',$order);
						break;	
						
						case 'animalname': 							
							$this->db->order_by('a.st_animal_name',$order);
						break;
						
						case 'type': 							
							$this->db->order_by('aty.st_animal_type_name',$order);
						break;
						
						case 'breed': 							
							$this->db->order_by('ab.st_animal_breed_name',$order);
						break;
						
						case 'demeanor': 							
							$this->db->order_by('d.st_demeanor_name',$order);
						break;
						
						case 'onclock':							
							$this->db->order_by('a.st_on_clock',$order);
						break;
						
						case 'createdate': 							
							$this->db->order_by('a.dt_created',$order);
						break;
						
						case 'modifieddate': 							
							$this->db->order_by('a.dt_modified',$order);
						break;
							
						default :						
						$this->db->order_by('o.st_org_name',$order);
						break;							         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 					
					//echo $this->db->last_query();  die;	
							
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
									$date1=$Row->dt_date;
									$date2=date('Y-m-d');
									if($Row->dt_date!='0000-00-00'){
										
									$no_of_days=(strtotime($date1) - (strtotime(date('Y-m-d'))))/(60 * 60 * 24). ' days'; 
									if($no_of_days < 0)
									{
										$no_of_days = '0'.' days';
									}								
									
									}
									else
									{
										$no_of_days='-';
									}
									
									
							$arrAnimal[$Row->in_animal_id]	=	array('in_animal_id' => $Row->in_animal_id,
											'st_animal_name'						 => $Row->st_animal_name,
											'st_on_clock'							 => $no_of_days,											
											'dt_created'							 => $Row->dt_created,	
											'dt_modified'							 => $Row->dt_modified,	
											'st_org_name'							 => $Row->st_org_name,	
											'st_animal_type_name'					 => $Row->st_animal_type_name,	
											'st_animal_breed_name'					 => $Row->st_animal_breed_name,	
											'st_demeanor_name'						 => $Row->st_demeanor_name,																				
											);
						}
						return $arrAnimal;
						
					}
			
	}
	
	
	
	function delete_animal($animalId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_animal_id', $animalId);
		$this->db->update('tbl_animal', $arrAnimal);		
	}
	
	
	function delete_multiple_animal($animal_ids)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_animal_id', $animal_ids);
		$this->db->update('tbl_animal', $arrAnimal);		
		return $this->db->affected_rows();
	}	
	
	function get_animal_detail($animalId)
	{
		
						
						
						$this->db->select("a.in_animal_id,
											a.in_organization_id,
											a.st_animal_name,
											a.st_gender,
											a.in_animal_type_id,
											a.in_primary_breed_id,						
											a.in_secondry_breed_id,
											a.in_tertiary_breed_id,
											a.in_neutered_id,
											a.in_weight,
											a.st_city,
											a.st_state,
											a.st_country,
											a.in_age,
											
											a.in_enter_age,
                                            a.in_dog_where,
                                            a.st_quarantine,
											a.dt_quarantine_end_date,
											a.st_timeout,
											a.dt_target_tr_date,
											a.st_travel_with,
											a.st_tr_comment,
											a.st_foster_comment,
											a.st_rabies_vaccine,
											a.dt_rabiesvac_date,
											a.st_fecal_test,
											a.dt_fecal_test_date,
											a.st_dlhhp,
											a.dt_dlhhp_date,
											a.st_heartworm_vaccine,
											a.dt_heartworm_vaccine_date,
											a.st_heartworm_brand,
											a.st_bordatella_vaccine,
											a.dt_bordatella_vaccine_date,
											a.st_bordatella_brand,
											a.st_surgery,
											a.dt_surgery_date,
                                            a.dt_microchipp_date,
                                            a.st_general_comment,
                                            a.st_birdsex,
											a.in_dog_where,
											
											
											a.st_crates_well,
											a.st_flight_risk,
											a.st_barrier_aggressive,
											a.st_ok_others,
											a.st_ok_explanation,
											a.st_micro_chipped,
											a.st_micro_chip_comp,
											a.st_medical_issue,
											a.st_medical_desc,
											a.st_profile_story,
											
											a.in_demeanor_id,	
											a.st_on_clock,
											a.dt_date,
											a.dt_created,
											a.st_recent_vaccination,
											a.dt_vaccination,
											a.st_cvi,
											a.dt_cvi,
											a.st_good_with_dogs,
											a.st_good_with_cats,
											a.st_good_with_kids,
											a.st_house_trained,
											a.st_declawed,	
											a.in_progress_status,
											a.in_next_status,																	
											o.st_org_name,
											aty.st_animal_type_name,
											ab.st_animal_breed_name,
											d.st_demeanor_name", false);	
																   	
						$this->db->from('tbl_animal a');
						$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','LEFT');
						$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','LEFT');
						$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','LEFT');						
						$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','LEFT');												
						$this->db->where('a.in_animal_id',$animalId);						
						$query = $this->db->get(); 
			
						$arrAnimal = array();
								
								
								if($query->num_rows()>0)
								{  
									foreach($query->result() as $Row)
									{			
									
										$sqlprogressstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_progress_status."'";
										$sqlprogressstat	=	$this->db->query($sqlprogressstatus);
										$numrowprostat		=	$sqlprogressstat->num_rows($sqlprogressstat);	
										$prostatus			=	$sqlprogressstat->result();
										$progressstatus		=	$prostatus[0]->st_progress_status;
										
										
										
										$sqlnextstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_next_status."'";
										$sqlnextstat	=	$this->db->query($sqlnextstatus);
										$numrownextstat	=	$sqlnextstat->num_rows($sqlnextstat);	
										$nxtstatus		=	$sqlnextstat->result();
										$nextstatus		=	$nxtstatus[0]->st_progress_status;

									
												if($Row->in_age=='1')
												{
													$age="Baby";	
												}
												
												if($Row->in_age=='2')
												{
													$age="Young";	
												}
												if($Row->in_age=='3')
												{
													$age="Adult";	
												}
												if($Row->in_age=='4')
												{
													$age="Senior";	
												}
												if($Row->in_age=='5')
												{
													$age="Unknown";
												}
												
												if($Row->in_neutered_id=='1')
												{
													$neutered="Yes";	
												}
												if($Row->in_neutered_id=='2')
												{
													$neutered="No";	
												}
												if($Row->in_neutered_id=='3')
												{
													$neutered="Unknown";	
												}
												
												
												if($Row->in_dog_where=='0')
												{
													$indogwhere="Shelter";	
												}
												if($Row->in_dog_where=='1')
												{
													$indogwhere="Stray";	
												}
												if($Row->in_dog_where=='2')
												{
													$indogwhere="Surrender";	
												}
												if($Row->in_dog_where=='3')
												{
													$indogwhere="Unknown";	
												}
												
												
										$sqlbreed1 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_primary_breed_id."'";
										$sqbreed1	=	$this->db->query($sqlbreed1);
										$numrows1	=	$sqbreed1->num_rows($sqbreed1);	
										$breed1		=	$sqbreed1->result();
										
										if($numrows1==1)
											$primary_breed	=	$breed1[0]->st_animal_breed_name;
										else
											$primary_breed	=	'';	
											
									    $sqlbreed2 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_secondry_breed_id."'";
										$sqbreed2	=	$this->db->query($sqlbreed2);
										$numrows2	=	$sqbreed2->num_rows($sqbreed2);	
										$breed2		=	$sqbreed2->result();
										
										if($numrows2==1)
											$secondary_breed	=	$breed2[0]->st_animal_breed_name;
										else
											$secondary_breed	=	'';	
											
											
									    $sqlbreed3  = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_tertiary_breed_id."'";
										$sqbreed3	=	$this->db->query($sqlbreed3);
										$numrows3	=	$sqbreed3->num_rows($sqbreed3);	
										$breed3		=	$sqbreed3->result();
										
										if($numrows3==1)
											$tertiary_breed	=	$breed3[0]->st_animal_breed_name;
										else
											$tertiary_breed	=	'';														
			
												
										$arrAnimal	=	array('in_animal_id' 				=> $Row->in_animal_id,
														'in_organization_id'				=> $Row->in_organization_id,
														'st_animal_name'					=> $Row->st_animal_name,
														'st_gender'						    => $Row->st_gender,
														'in_animal_type_id'					=> $Row->in_animal_type_id,											
														'in_primary_breed_id'				=> $primary_breed,											
														'in_age'						 	=> $age,
														'st_city'						    => $Row->st_city,
														'st_state'						    => $Row->st_state,	
														'st_country'					    => $Row->st_country,	
														'age'						 	    => $Row->in_age,
														'in_demeanor_id'					=> $Row->in_demeanor_id,
														'st_on_clock'						=> $Row->st_on_clock,
														'dt_date'							=> $Row->dt_date,
														'dt_created'						=> $Row->dt_created,
														'st_org_name'						=> $Row->st_org_name,		
														'st_animal_type_name'				=> $Row->st_animal_type_name,		
														'st_animal_breed_name'				=> $Row->st_animal_breed_name,		
														'st_demeanor_name'					=> $Row->st_demeanor_name,																												
														'in_secondry_breed_id'				=> $secondary_breed,	
														'in_tertiary_breed_id'				=> $tertiary_breed,	
														'in_neutered_id'					=> $neutered,	
															
														'in_weight'							=> $Row->in_weight == 'U' ? 'Unknown' : $Row->in_weight, 
															
														'st_crates_well'					=> $Row->st_crates_well,		
														'st_flight_risk'					=> $Row->st_flight_risk,  	
														'st_barrier_aggressive'				=> $Row->st_barrier_aggressive,			
														//'st_ok_others'					    => $Row->st_ok_others == 'Y' ? 'Yes' : 'No',			
														//'st_ok_explanation'					=> $Row->st_ok_explanation,		
														'st_micro_chipped'					=> $Row->st_micro_chipped == 'Y' ?'Yes' : ($Row->st_micro_chipped=='N' ? 'No': 'Unknown'),			
														'st_micro_chip_comp'				=> $Row->st_micro_chip_comp,		
														'st_medical_issue'					=> $Row->st_medical_issue == 'Y' ? 'Yes' : 'No',			
														'st_medical_desc'					=> $Row->st_medical_desc,		
														'st_profile_story'					=> $Row->st_profile_story,
														'st_recent_vaccination'				=> $Row->st_recent_vaccination,
														'dt_vaccination'					=> $Row->dt_vaccination,
														'st_cvi'							=> $Row->st_cvi,
														'dt_cvi'							=> $Row->dt_cvi,
														'st_good_with_dogs'					=> $Row->st_good_with_dogs,
														'st_good_with_cats'					=> $Row->st_good_with_cats,
														'st_good_with_kids'					=> $Row->st_good_with_kids,
														'st_house_trained'					=> $Row->st_house_trained,
														'st_declawed'						=> $Row->st_declawed,	
														'in_progress_status'				=> $progressstatus,	
														'in_next_status'					=> $nextstatus,													
														
														'in_enter_age'					    => $Row->in_enter_age,
														'in_dog_where'						=> $Row->in_dog_where,
														'st_quarantine'						=> $Row->st_quarantine,
														'dt_quarantine_end_date'			=> $Row->dt_quarantine_end_date,
														'st_timeout'						=> $Row->st_timeout,
														'dt_target_tr_date'					=> $Row->dt_target_tr_date,
														'st_travel_with'					=> $Row->st_travel_with,
														'st_tr_comment'						=> $Row->st_tr_comment,
														'st_foster_comment'					=> $Row->st_foster_comment,
														'st_rabies_vaccine'					=> $Row->st_rabies_vaccine,														
														'dt_rabiesvac_date'					=> $Row->dt_rabiesvac_date,
														'st_fecal_test'						=> $Row->st_fecal_test,
														'dt_fecal_test_date'				=> $Row->dt_fecal_test_date,
														'st_dlhhp'							=> $Row->st_dlhhp, 
														
														'dt_dlhhp_date'						=> $Row->dt_dlhhp_date,
														'st_heartworm_vaccine'				=> $Row->st_heartworm_vaccine,
														'dt_heartworm_vaccine_date'			=> $Row->dt_heartworm_vaccine_date,
														'st_heartworm_brand'				=> $Row->st_heartworm_brand,
														'st_bordatella_vaccine'				=> $Row->st_bordatella_vaccine,
														'dt_bordatella_vaccine_date'		=> $Row->dt_bordatella_vaccine_date,														
														'st_bordatella_brand'				=> $Row->st_bordatella_brand,
														'st_surgery'						=> $Row->st_surgery,
														'dt_surgery_date'					=> $Row->dt_surgery_date,
														'dt_microchipp_date'				=> $Row->dt_microchipp_date,
														'st_general_comment'				=> $Row->st_general_comment,
														'st_birdsex'						=> $Row->st_birdsex,
														'in_dog_where'						=> $indogwhere													
																											
														);
									}
									return $arrAnimal;
									
								}
			
	}
	
	
	
	
	public function insertAnimal($data)
	{
		$this->db->insert('tbl_animal', $data); 
		return $this->db->insert_id();		
	}
	
	
		
	public function get_total_transfer_animal($fromorganization,$toorganization,$fromdate,$todate,$name)
	{
					if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }				
		
					
					$this->db->select("at.in_transfer_req_id", false);						   	
					$this->db->from('tbl_animal_transfer_req at');
					$this->db->join('tbl_animal a', 'a.in_animal_id=at.in_animal_id','LEFT');
					$this->db->join('tbl_organization org', 'org.in_organization_id=at.in_from_organization_id AND org.in_organization_id=at.in_to_organization_id','LEFT');
					$this->db->where('at.in_deleted','0');
					$this->db->where('at.in_status','0');					
					
					if($fromorganization!='')
					{						
					 $this->db->where("at.in_from_organization_id = '".$fromorganization."'", NULL, FALSE);
					}
					if($toorganization!='')
					{						  
					    $this->db->where("at.in_to_organization_id = '".$toorganization."'", NULL, FALSE);
					}					
					
					if($fromdate!='' && $todate!='' )
					{						
					  $this->db->where("at.dt_created >= '".$fromdate."' AND   at.dt_created <='" .$todate.' 23:59:59'."'", NULL, FALSE);
					}
					
					//if($name!='')
					// {		 
						//  $this->db->where("a.st_animal_name LIKE '%".$name."%'", NULL, FALSE);
					// }
					
					if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	public function get_transfer_animal($sort,$order,$limit=0,$rec_per_page=0,$fromorganization='',$toorganization='',$fromdate='',$todate='',$name='')
	{		
					if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }
							
					    $this->db->select("at.in_transfer_req_id,	
											at.in_from_organization_id,  
											at.in_to_organization_id, 
											org.st_org_name, 
											at.dt_created,
											at.dt_modified,
											a.st_animal_name, 
											a.in_progress_status,
											a.in_next_status,
											a.in_age, 
											a.st_gender ", false);						   	
						$this->db->from('tbl_animal_transfer_req at');
						$this->db->join('tbl_animal a', 'a.in_animal_id=at.in_animal_id','INNER');
						$this->db->join('tbl_organization org', 'org.in_organization_id=at.in_from_organization_id AND org.in_organization_id=at.in_to_organization_id','LEFT');
						$this->db->where('at.in_deleted','0');
						$this->db->where('at.in_status','0');			
							
							
						
					
					    if($fromorganization!='')
						{						
						 $this->db->where("at.in_from_organization_id = '".$fromorganization."'", NULL, FALSE);
						}
						if($toorganization!='')
						{						  
							$this->db->where("at.in_to_organization_id = '".$toorganization."'", NULL, FALSE);
						}					
						
						if($fromdate!='' && $todate!='' )
						{						
						  $this->db->where("at.dt_created >= '".$fromdate."' AND   at.dt_created <='" .$todate.' 23:59:59'."'", NULL, FALSE);
						}
						if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
					
					switch($sort)
					{
						
						case 'name': 							
							$this->db->order_by('a.st_animal_name',$order);
						break;	
						
						case 'fromloc': 							
							$this->db->order_by('at.in_from_organization_id',$order);
						break;	
						
						case 'toloc': 							
							$this->db->order_by('at.in_to_organization_id',$order);
						break;	
						
						case 'currstatus':							
							$this->db->order_by('a.in_progress_status',$order);
						break;	
						
						case 'nextstatus':							
							$this->db->order_by('a.in_next_status',$order);
						break;	
						
						case 'age': 							
							$this->db->order_by('a.in_age',$order);
						break;
							
						case 'sex': 						
							$this->db->order_by('a.st_gender',$order);
						break;
							
						case 'createdate':							
							$this->db->order_by('at.dt_created',$order);
						break;
						
						
						case 'modifieddate':							
							$this->db->order_by('at.dt_modified',$order);
						break;
						
						default:
						$this->db->order_by('a.st_animal_name',$order);
						break;	
								         
					}						  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 				
					//echo $this->db->last_query(); die;	
				
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
					
						
						foreach($query->result() as $Row)
						{		
									
									$sqlfromorg   = "SELECT st_org_name FROM tbl_organization  where in_organization_id = '".$Row->in_from_organization_id."'";
									$sqfromorg	=	$this->db->query($sqlfromorg);
									$numrowsfromorg	=	$sqfromorg->num_rows($sqfromorg);	
									$fromorg=$sqfromorg->result();	
									$from_org	=	$fromorg[0]->st_org_name;
									
									
									$sqltoorg   = "SELECT st_org_name FROM tbl_organization  where in_organization_id = '".$Row->in_to_organization_id."'";
									$sqtoorg	=	$this->db->query($sqltoorg);
									$numrowstoorg	=	$sqtoorg->num_rows($sqtoorg);	
									$toorg=$sqtoorg->result();	
									$to_org	=	$toorg[0]->st_org_name;
									
									
									
									$sqlprogressstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_progress_status."'";
									$sqlprogressstat	=	$this->db->query($sqlprogressstatus);
									$numrowprostat		=	$sqlprogressstat->num_rows($sqlprogressstat);	
									$prostatus			=	$sqlprogressstat->result();
									$progressstatus		=	$prostatus[0]->st_progress_status;
									
									
									
									$sqlnextstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_next_status."'";
									$sqlnextstat	=	$this->db->query($sqlnextstatus);
									$numrownextstat	=	$sqlnextstat->num_rows($sqlnextstat);	
									$nxtstatus		=	$sqlnextstat->result();
									$nextstatus		=	$nxtstatus[0]->st_progress_status;
						
						
							
									if($Row->in_age=='1')
									{
										$age="Baby";	
									}
									
									if($Row->in_age=='2')
									{
										$age="Young";	
									}
									if($Row->in_age=='3')
									{
										$age="Adult";	
									}
									if($Row->in_age=='4')
									{
										$age="Senior";	
									}
									
									if($Row->st_gender=='M')
									{
											$gender	=	"Male";
									}
									if($Row->st_gender=='F')
									{
											$gender	=	"Female";
									}
									
									
									if($Row->in_progress_status=='0' )
									{
											$progressstatus	=	"No Status";
											
									}
									
									if($Row->in_next_status=='0')
									{
											$nextstatus	=	"No Status";
											
									}	
											

									
							$arrAnimal[]	=	array('in_transfer_req_id' 					=> $Row->in_transfer_req_id,
											'in_from_organization_id'						=> $from_org,
											'in_to_organization_id'							=> $to_org,											
											'st_animal_name'								=> $Row->st_animal_name,											
											'in_progress_status'							=> $progressstatus,
											'in_next_status'							    => $nextstatus,
											'in_age'						 				=> $age,
											'st_gender'						 	    		=> $gender,
											'dt_created'						    		=> $Row->dt_created,				
											'dt_modified'						    		=> $Row->dt_modified																											
											);
						}
						return $arrAnimal;
						
					}
								
		
	}
	
	public function delete_multiple_transfer($transferrequest_ids)
	{			
	 // print_r($transferrequest_ids); die;		
		$arrAnimal = 	array('in_deleted' => '1' );
		$this->db->where_in('in_transfer_req_id', $transferrequest_ids);
		$this->db->update('tbl_animal_transfer_req', $arrAnimal);		
		return $this->db->affected_rows();				
	}
	
	public function get_transfer_animal_view($transferreqId)
	{			
							
						$this->db->select("at.in_transfer_req_id,	
											at.in_from_organization_id,  
											at.in_to_organization_id, 
											org.st_org_name, 
											at.dt_created,
											a.st_animal_name,			
											a.st_city,		
											a.st_state,									 		
											a.in_animal_type_id, 	
											a.in_primary_breed_id, 		
											a.in_secondry_breed_id, 	
											a.in_tertiary_breed_id, 
											a.in_neutered_id, 
											a.in_weight, 
											a.st_crates_well, 
											a.st_flight_risk, 
											a.st_barrier_aggressive,
											a.st_ok_others,
											a.st_ok_explanation,
											a.st_micro_chipped,
											a.st_micro_chip_comp,
											a.st_on_clock,
											a.dt_date,
											a.st_medical_issue,
											a.st_medical_desc,
											a.st_profile_story,	
											a.in_animal_id,																	
											a.in_progress_status,
											a.in_next_status,
											a.in_age, 		
											a.in_demeanor_id,									
											a.st_gender,
											
											
											
											a.st_recent_vaccination,
											a.dt_vaccination,
											a.st_cvi,
											a.dt_cvi,
											a.st_good_with_dogs,
											a.st_good_with_cats,
											a.st_good_with_kids,
											a.st_house_trained,
											a.st_declawed,
											a.dt_created,
											a.in_animal_type_id", false);	
																   	
						$this->db->from('tbl_animal_transfer_req at');
						$this->db->join('tbl_animal a', 'a.in_animal_id=at.in_animal_id','LEFT');						
						$this->db->join('tbl_organization org', 'org.in_organization_id=at.in_from_organization_id AND org.in_organization_id=at.in_to_organization_id	','LEFT');
						$this->db->where('at.in_transfer_req_id',$transferreqId);							
						$query = $this->db->get(); 		
					    //echo $this->db->last_query(); die;
				
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
					
						
						foreach($query->result() as $Row)
						{		
									
									$sqlfromorg   = "SELECT st_org_name FROM tbl_organization  where in_organization_id = '".$Row->in_from_organization_id."'";
									$sqfromorg	=	$this->db->query($sqlfromorg);
									$numrowsfromorg	=	$sqfromorg->num_rows($sqfromorg);	
									$fromorg=$sqfromorg->result();	
									$from_org	=	$fromorg[0]->st_org_name;
									
									$sqldemeanor   = "SELECT st_demeanor_name FROM tbl_demeanor  where in_demeanor_id = '".$Row->in_demeanor_id."'";
									$sqldemeanorname	=	$this->db->query($sqldemeanor);
									$numrowssqldemeanor	=	$sqldemeanorname->num_rows($sqldemeanorname);	
									$demeanor			=	$sqldemeanorname->result();	
									$demeanor_name		=	$demeanor[0]->st_demeanor_name;
									
									
									$sqltoorg   = "SELECT st_org_name FROM tbl_organization  where in_organization_id = '".$Row->in_to_organization_id."'";
									$sqtoorg	=	$this->db->query($sqltoorg);
									$numrowstoorg	=	$sqtoorg->num_rows($sqtoorg);	
									$toorg=$sqtoorg->result();	
									$to_org	=	$toorg[0]->st_org_name;
									
									
									
									$sqlanimaltype   = "SELECT st_animal_type_name FROM tbl_animal_type  where in_animal_type_id = '".$Row->in_animal_type_id."'";
									$sqtype	=	$this->db->query($sqlanimaltype);
									$numrowstype	=	$sqtype->num_rows($sqtype);	
									$type=$sqtype->result();	
									$animal_type	=	$type[0]->st_animal_type_name;
									
									
									
									
									
									$sqlbreed1 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_primary_breed_id."'";
									$sqbreed1	=	$this->db->query($sqlbreed1);
									$numrows1	=	$sqbreed1->num_rows($sqbreed1);	
									$breed1		=	$sqbreed1->result();
									
									if($numrows1==1)
										$primary_breed	=	$breed1[0]->st_animal_breed_name;
									else
										$primary_breed	=	'';	
										
									$sqlbreed2 = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_secondry_breed_id."'";
									$sqbreed2	=	$this->db->query($sqlbreed2);
									$numrows2	=	$sqbreed2->num_rows($sqbreed2);	
									$breed2		=	$sqbreed2->result();
									
									if($numrows2==1)
										$secondary_breed	=	$breed2[0]->st_animal_breed_name; 
									else
										$secondary_breed	=	'';	
										
										
									$sqlbreed3  = "SELECT st_animal_breed_name FROM tbl_animal_breed  where in_animal_breed_id = '".$Row->in_tertiary_breed_id."'";
									$sqbreed3	=	$this->db->query($sqlbreed3);
									$numrows3	=	$sqbreed3->num_rows($sqbreed3);	
									$breed3		=	$sqbreed3->result();
									
									if($numrows3==1)
										$tertiary_breed	=	$breed3[0]->st_animal_breed_name;
									else
										$tertiary_breed	=	'';	
						
						
							
									if($Row->in_age=='1')
									{
										$age="Baby";	
									}
									
									if($Row->in_age=='2')
									{
										$age="Young";	
									}
									if($Row->in_age=='3')
									{
										$age="Adult";	
									}
									if($Row->in_age=='4')
									{
										$age="Senior";	
									}
									
									if($Row->st_gender=='M')
									{
											$gender	=	"Male";
									}
									if($Row->st_gender=='F')
									{
											$gender	=	"Female";
									}
									
									
									
									$sqlprogressstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_progress_status."'";
									$sqlprogressstat	=	$this->db->query($sqlprogressstatus);
									$numrowprostat	=	$sqlprogressstat->num_rows($sqlprogressstat);	
									$prostatus		=	$sqlprogressstat->result();
									$progressstatus	=	$prostatus[0]->st_progress_status;
									
									
									
									$sqlnextstatus  = "SELECT st_progress_status FROM tbl_progress_status  where in_progress_status_id = '".$Row->in_next_status."'";
									$sqlnextstat	=	$this->db->query($sqlnextstatus);
									$numrownextstat	=	$sqlnextstat->num_rows($sqlnextstat);	
									$nxtstatus		=	$sqlnextstat->result();
									$nextstatus	=	$nxtstatus[0]->st_progress_status;
									
									
									if($Row->in_progress_status=='0')
									{
											$progressstatus	=	"No Status";
											
									}
									
									
									
									if($Row->in_next_status=='0')
									{
											$nextstatus	=	"No Status";
											
									}	
									
									
									if($Row->in_neutered_id=='1')
									{
										$neutered="Yes";	
									}
									if($Row->in_neutered_id=='2')
									{
										$neutered="No";	
									}
									if($Row->in_neutered_id=='3')
									{
										$neutered="Unknown";	
									}
									
																
									
									

									
							$arrAnimal	=	array('in_transfer_req_id' 					    => $Row->in_transfer_req_id,
											'in_from_organization_id'						=> $from_org,
											'in_to_organization_id'							=> $to_org,											
											'st_animal_name'								=> $Row->st_animal_name,	
											'st_city'										=> $Row->st_city,	
											'st_state'										=> $Row->st_state,																						
											'in_progress_status'							=> $progressstatus,
											'in_next_status'							    => $nextstatus,
											'in_age'						 				=> $age,
											'st_gender'						 	    		=> $gender,
											'st_animal_type'								=> $animal_type,
											'in_primary_breed_id'							=> $primary_breed,
											'in_secondry_breed_id'							=> $secondary_breed,
											'in_tertiary_breed_id'							=> $tertiary_breed,
											'in_neutered_id'								=> $neutered,
											'in_demeanor_id'								=> $demeanor_name,
											'in_weight'										=> $Row->in_weight,	
											'st_crates_well'								=> $Row->st_crates_well == 'Y' ? 'Yes' : 'No',	
											'st_flight_risk'								=> $Row->st_flight_risk == 'Y' ? 'Yes' : 'No',	
											'st_barrier_aggressive'							=> $Row->st_barrier_aggressive== 'Y' ? 'Yes' : 'No',	
											'st_ok_others'									=> $Row->st_ok_others== 'Y' ? 'Yes' : 'No',	
											'st_ok_explanation'								=> $Row->st_ok_explanation,
											'st_micro_chipped'								=> $Row->st_micro_chipped == 'Y' ? 'Yes' : 'No',	
											'st_micro_chip_comp'							=> $Row->st_micro_chip_comp,
											'st_on_clock'									=> $Row->st_on_clock == 'Y' ? 'Yes' : 'No',	
											'dt_date'									    => $Row->dt_date,
											'st_medical_issue'								=> $Row->st_medical_issue == 'Y' ? 'Yes' : 'No',	
											'st_medical_desc'								=> $Row->st_medical_desc,
											'st_profile_story'								=> $Row->st_profile_story,			
											'in_animal_id'									=> $Row->in_animal_id,										
											'dt_created'						    		=> $Row->dt_created,
											
											'st_recent_vaccination'							=> $Row->st_recent_vaccination,												
											'dt_vaccination'								=> $Row->dt_vaccination,	
											'dt_cvi'										=> $Row->dt_cvi,	
											'st_cvi'										=> $Row->st_cvi,	
											'st_good_with_dogs'								=> $Row->st_good_with_dogs,	
											'st_good_with_cats'								=> $Row->st_good_with_cats,	
											'st_good_with_kids'								=> $Row->st_good_with_kids,	
											'st_house_trained'								=> $Row->st_house_trained,												
											'st_declawed'									=> $Row->st_declawed,
											'in_animal_type_id'								=> $Row->in_animal_type_id
											);
						}
						return $arrAnimal;
						
					}
							
							
	}
	
	
	public function doPetImageUpload()
		{
			$uploadedFiles	=	array();
			//echo $cnt; die;
			$config['upload_path'] = $this->config->item('upload')."animal_images/";
			$config['allowed_types'] = 'gif|jpg|jpeg|png';
			$config['max_size']	= '2048';  // 2 MB
			//$config['max_width']  = '1024';
			//$config['max_height']  = '768';			
			$this->load->library('upload', $config);			
			
			// for thumb
			
			$this->load->library('image_lib');	
			
		
			foreach($_FILES as $key =>$value)
			{			
				
				$config['file_name']	= time().$_FILES[$key]['name'];
				
				$this->upload->initialize($config);
				
				/* Handle the file upload */ 					
				$upload = $this->upload->do_upload($key);  
				/* File failed to upload - continue */
				if($upload === FALSE) continue;				
				/* Get the data about the file */
				$data = $this->upload->data();
				
				array_push($uploadedFiles, $data);				
				
				//print_r($uploadedFiles); die;
				//echo count($uploadedFiles); die;
				

				if($data['is_image'] == 1) {
				
					$configThumb = array();
					$configThumb['image_library'] = 'gd2';					
					$configThumb['maintain_ratio'] = TRUE;
					$configThumb['source_image'] = $data['full_path'];
					
					//for 100x100
					$configThumb['new_image'] = $this->config->item('upload')."animal_images/thumb/".$data['file_name'];									
					$configThumb['width'] = 100;
					$configThumb['height'] = 100;			
					$this->image_lib->initialize($configThumb);
					$this->image_lib->resize();


					//for 63x63
					$configThumb['new_image'] = $this->config->item('upload')."animal_images/63x63/".$data['file_name'];									
					$configThumb['width'] = 63;
					$configThumb['height'] = 63;			
					$this->image_lib->initialize($configThumb);
					$this->image_lib->resize();


					//for 140x140
					$configThumb['new_image'] = $this->config->item('upload')."animal_images/140x140/".$data['file_name'];									
					$configThumb['width'] = 140;
					$configThumb['height'] = 140;			
					$this->image_lib->initialize($configThumb);
					$this->image_lib->resize();
					
					//for 36x36
					$configThumb['new_image'] = $this->config->item('upload')."animal_images/36x36/".$data['file_name'];									
					$configThumb['width'] = 36;
					$configThumb['height'] = 36;			
					$this->image_lib->initialize($configThumb);
					$this->image_lib->resize();

				}
			}			
			return $uploadedFiles;
		}
		
		
		public  function insert_petimage($petimages,$animalId)
		  {			  
				$date_added = date('Y-m-d');
				//echo '<pre>'; print_r($post); die;
				foreach($petimages as $imgData)
				{	
					if($imgData['file_name']!='')
					{			 
						$arrPetImage	 = 	  array('in_animal_id' 	=> $animalId,									
												'st_file_name'		=> $imgData['file_name'],
												'st_file_type'		=> 'P',
												'dt_created'		=> $date_added,									
												'in_deleted'	    => '0'	
											);						
						$this->db->insert('tbl_animal_file', $arrPetImage);
					}
				}
			}
			
			
    # *******************************************************************************************	
	#	Function	:	add_animal_cost	
	#	Purpose		:	Adding animal costs
	# *******************************************************************************************

	public function add_animal_cost($data) {
		$this->db->insert('tbl_animal_cost',$data);	
		//echo $this->db->last_query();die;
	}
	
	# *******************************************************************************************	
	#	Function	:	get_video_detail	
	#	Purpose		:	Getting animal videos
	# *******************************************************************************************
	public function get_video_detail($animalId)
	{
					   
				    $this->db->select("im.in_file_id,im.st_file_name,im.in_animal_id", false);						   	
					$this->db->from('tbl_animal_file im');					
					$this->db->where('im.in_animal_id',$animalId);
					$this->db->where('im.st_file_type','V');
					$this->db->where('im.in_deleted','0');
				  	
					$query = $this->db->get();
					//echo $this->db->last_query();die;
					
					if($query->num_rows()>0){
					foreach($query->result() as $Row)
							{
								
								$arrData[]=	array('st_file_name'				=>	$Row->st_file_name,
												  'in_animal_id'				=>	$Row->in_animal_id,
												  'in_file_id'					=>	$Row->in_file_id
													);					
							}
							
							return $arrData;
					}
	}
	
	
	
	
	
	# *******************************************************************************************	
	#	Function	:	get_animal_cost	
	#	Purpose		:	Getting animal costs
	# *******************************************************************************************
	public function get_animal_cost($animalId)
	{
						   
				    $this->db->select("cost.in_cost_id,cost.in_animal_id,cost.st_cost_desc,cost.in_amount", false);						   	
					$this->db->from('tbl_animal_cost cost');					
					$this->db->where('cost.in_animal_id',$animalId);
					$this->db->where('cost.in_deleted','0');
				  	
					$query = $this->db->get();
					//echo $this->db->last_query();die;
					
					if($query->num_rows()>0){
					foreach($query->result() as $Row)
							{
								
								$arrData[]=	array('st_cost_desc'				=>	$Row->st_cost_desc,
												  'in_animal_id'				=>	$Row->in_animal_id,
												  'in_cost_id'					=>	$Row->in_cost_id,
												  'in_amount'					=>	$Row->in_amount
													);					
							}
							
							return $arrData;
					}
	}
		
	# *******************************************************************************************	
	#	Function	:	update_animal_cost	
	#	Purpose		:	Adding animal costs
	# *******************************************************************************************

	public function update_animal_cost($data,$costId) {
		
		$this->db->where('in_cost_id',$costId);
		$this->db->update('tbl_animal_cost',$data);	
		
	}
	public function delete_file($id) {
		$this->db->where('in_file_id',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_animal_file',$data);
		return $this->db->affected_rows();
	}
	
	public function delete_cost($id) {
		$this->db->where('in_cost_id',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_animal_cost',$data);
		return $this->db->affected_rows();
	}
	
	function is_animal_exists($name)
	{ 
		$this->db->select('in_animal_type_id');
		$this->db->from('tbl_animal_type');							
		$this->db->where("st_animal_type_name",$name); 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;
		
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
	
	function is_breed_exists($name,$animaltype)
	{ 
		$this->db->select('in_animal_breed_id');
		$this->db->from('tbl_animal_breed');							
		$this->db->where("st_animal_breed_name",$name); 
		$this->db->where("in_animal_type_id",$animaltype); 		
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;	
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
# *******************************************************************************************	
	#	Function	:	add_animal_images	
	#	Purpose		:	Adding animal images
	# *******************************************************************************************

	public function add_animal_images($data) {		
		$this->db->insert('tbl_animal_file',$data);	
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_profile	
	#	Purpose		:	Deleting animal profile
	# *******************************************************************************************
	
	public function delete_profile($id) {
		$data = array('in_deleted' => 1);
		$this->db->where('in_animal_id',$id);
		$this->db->update('tbl_animal',$data);
		return $this->db->affected_rows();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_animal_photos	
	#	Purpose		:	Getting all selected animal photo
	# *******************************************************************************************
	
	public function get_animal_photos($id) {
		$this->db->select('st_file_name,in_file_id,st_file_type,in_profile_pic');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->where('st_file_type <>','O');
		$this->db->order_by('in_file_id','ASC');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	
	
	
    # *******************************************************************************************	
	#	Function	:	cost_to_org	
	#	Purpose		:	Cost to organization
	# *******************************************************************************************
	
	public function cost_to_org($animalId) {
		$this->db->select('st_cost_desc,in_amount,in_cost_id');
		$this->db->from('tbl_animal_cost');
		$this->db->where('in_animal_id',$animalId);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}	
	
	
	
	function get_animal_profile($animalId)
	{
		
					
						
						$this->db->select("a.in_animal_id,
											a.in_organization_id,
											a.st_animal_name,
											a.st_gender,
											a.in_animal_public,
											a.in_animal_type_id,
											a.in_primary_breed_id,						
											a.in_secondry_breed_id,
											a.in_tertiary_breed_id,											
											
											a.st_city,
											a.st_state,
											a.in_age,
											a.in_enter_age,
											a.in_demeanor_id,
											a.in_neutered_id,
											a.in_weight,
											a.in_dog_where,
											a.st_quarantine,
											a.dt_quarantine_end_date,
											a.st_timeout,
											a.dt_target_tr_date,
											a.st_travel_with,
											a.st_tr_comment,
											a.st_foster_comment,
											a.st_rabies_vaccine,
											a.dt_rabiesvac_date,
											a.st_fecal_test,
											a.dt_fecal_test_date,
											a.st_dlhhp,
											a.dt_dlhhp_date,
											a.st_heartworm_vaccine,
											a.dt_heartworm_vaccine_date,
											a.st_heartworm_brand,
											a.st_bordatella_vaccine,
											a.dt_bordatella_vaccine_date,
											a.st_bordatella_brand,
											a.st_surgery,
											a.dt_surgery_date,
											a.dt_microchipp_date,
											a.st_general_comment,
											a.st_birdsex,
											a.st_micro_chipped,
											a.st_micro_chip_comp,								
											
											a.st_crates_well,
											a.st_flight_risk,
											a.st_barrier_aggressive,											
											a.st_medical_issue,
											a.st_medical_desc,
											a.st_profile_story,											
											
											a.st_on_clock,
											a.dt_date,
											a.dt_created,
											a.st_recent_vaccination,
											a.dt_vaccination,
											a.st_cvi,
											a.dt_cvi,
											a.st_good_with_dogs,
											a.st_good_with_cats,
											a.st_good_with_kids,
											a.st_house_trained,
											a.st_declawed,	
											a.in_progress_status,
											a.in_next_status,					
											o.st_org_name,
											aty.st_animal_type_name,
											ab.st_animal_breed_name,
											
											
											d.st_demeanor_name", false);	
																   	
						$this->db->from('tbl_animal a');
						$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','LEFT');
						$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','LEFT');
						$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','LEFT');						
						$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','LEFT');												
						$this->db->where('a.in_animal_id',$animalId);						
						$query = $this->db->get(); 
			
						$arrAnimal = array();
								
								
								if($query->num_rows()>0)
								{  
									foreach($query->result() as $Row)
									{	
												
										$arrAnimal	=	array('in_animal_id' 				=> $Row->in_animal_id,
														'in_organization_id'				=> $Row->in_organization_id,
														'st_animal_name'					=> $Row->st_animal_name,
														'st_gender'						    => $Row->st_gender,
														'in_animal_type_id'					=> $Row->in_animal_type_id,											
														'in_primary_breed_id'				=> $Row->in_primary_breed_id,											
														'in_age'						 	=> $Row->in_age,
														'in_animal_public'				 	=> $Row->in_animal_public,
														'age'						 	    => $Row->in_age,
														'st_city'						 	    => $Row->st_city,
														'st_state'						 	    => $Row->st_state,
														'in_demeanor_id'					=> $Row->in_demeanor_id,
														'st_on_clock'						=> $Row->st_on_clock,
														'dt_date'							=> $Row->dt_date,
														'dt_created'						=> $Row->dt_created,
														'st_org_name'						=> $Row->st_org_name,		
														'st_animal_type_name'				=> $Row->st_animal_type_name,		
														'st_animal_breed_name'				=> $Row->st_animal_breed_name,		
														'st_demeanor_name'					=> $Row->st_demeanor_name,														
														'in_secondry_breed_id'				=> $Row->in_secondry_breed_id,	
														'in_tertiary_breed_id'				=> $Row->in_tertiary_breed_id,	
														'in_neutered_id'					=> $Row->in_neutered_id,		
														'in_weight'							=> $Row->in_weight,		
														'st_crates_well'					=> $Row->st_crates_well,	 	
														'st_flight_risk'					=> $Row->st_flight_risk,	
														'st_barrier_aggressive'				=> $Row->st_barrier_aggressive,		
														//'st_ok_others'					    => $Row->st_ok_others, 			
														//'st_ok_explanation'					=> $Row->st_ok_explanation,		
														'st_micro_chipped'					=> $Row->st_micro_chipped,			
														'st_micro_chip_comp'				=> $Row->st_micro_chip_comp,		
														'st_medical_issue'					=> $Row->st_medical_issue,			
														'st_medical_desc'					=> $Row->st_medical_desc,		
														'st_profile_story'					=> $Row->st_profile_story,
														'st_recent_vaccination'				=> $Row->st_recent_vaccination,
														'dt_vaccination'					=> $Row->dt_vaccination,
														'st_cvi'							=> $Row->st_cvi,
														'dt_cvi'							=> $Row->dt_cvi,
														'st_good_with_dogs'					=> $Row->st_good_with_dogs,
														'st_good_with_cats'					=> $Row->st_good_with_cats,
														'st_good_with_kids'					=> $Row->st_good_with_kids,
														'st_house_trained'					=> $Row->st_house_trained,
														'st_declawed'						=> $Row->st_declawed,	
														'in_progress_status'				=> $Row->in_progress_status,	
														'in_next_status'					=> $Row->in_next_status,
														'in_enter_age'						=> $Row->in_enter_age,
														'in_dog_where'						=> $Row->in_dog_where,
														'st_quarantine'						=> $Row->st_quarantine,	
														'dt_quarantine_end_date'			=> $Row->dt_quarantine_end_date,
														'st_timeout'						=> $Row->st_timeout,
														'dt_target_tr_date'					=> $Row->dt_target_tr_date,
														'st_travel_with'					=> $Row->st_travel_with,
														'st_tr_comment'						=> $Row->st_tr_comment,
														'st_foster_comment'					=> $Row->st_foster_comment,
														'st_rabies_vaccine'					=> $Row->st_rabies_vaccine,
														'dt_rabiesvac_date'					=> $Row->dt_rabiesvac_date,
														'st_fecal_test'						=> $Row->st_fecal_test,
														'dt_fecal_test_date'				=> $Row->dt_fecal_test_date,
														'st_dlhhp'							=> $Row->st_dlhhp,
														'dt_dlhhp_date'						=> $Row->dt_dlhhp_date,
														'st_heartworm_vaccine'				=> $Row->st_heartworm_vaccine,
														'dt_heartworm_vaccine_date'			=> $Row->dt_heartworm_vaccine_date,
														'st_heartworm_brand'				=> $Row->st_heartworm_brand,														
														'st_bordatella_vaccine'				=> $Row->st_bordatella_vaccine,
														'dt_bordatella_vaccine_date'		=> $Row->dt_bordatella_vaccine_date,
														'st_bordatella_brand'				=> $Row->st_bordatella_brand,
														'st_surgery'						=> $Row->st_surgery,
														'dt_surgery_date'					=> $Row->dt_surgery_date,
														'dt_microchipp_date'				=> $Row->dt_microchipp_date,
														'st_general_comment'				=> $Row->st_general_comment,
														'st_birdsex'						=> $Row->st_birdsex
														);
									}
									return $arrAnimal;
									
								}
			
	}
	
	
	public function add_animal_file($data)
	{   
		$this->db->insert('tbl_animal_file', $data);	
	}
	
	# *******************************************************************************************	
	#	Function	:	get_animal_doc	
	#	Purpose		:	Getting all selected animal doc
	# *******************************************************************************************
	
	public function get_animal_doc($id) {
		$this->db->select('st_file_name,in_file_id,st_file_type');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('st_file_type','O');
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_file_id','ASC');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	add_social_pages	
	#	Purpose		:	Adding social data
	# *******************************************************************************************

	public function add_social_pages($data) {
		$this->db->insert('tbl_animal_social',$data);	
	}
	
		# *******************************************************************************************	
	#	Function	:	delete_social_pages	
	#	Purpose		:	Deleting social pages
	# *******************************************************************************************
	
	public function delete_social_pages($id) {
		$this->db->where('in_animal_id', $id);
		$this->db->delete('tbl_animal_social');
		return $this->db->affected_rows();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_social_pages	
	#	Purpose		:	Getting social pages for animal
	# *******************************************************************************************
	
	public function get_social_pages($id) {
		$this->db->select('in_social_id,st_social_page_title,st_social_page_url');
		$this->db->from('tbl_animal_social');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	add_shelter_contact	
	#	Purpose		:	Adding animal contact information
	# *******************************************************************************************

	public function add_shelter_contact($data) {
		$this->db->insert('tbl_shelter_contact',$data);	
		return $this->db->affected_rows();
	}
	
		# *******************************************************************************************	
	#	Function	:	get_shelter_contact	
	#	Purpose		:	Getting shelter contact
	# *******************************************************************************************
	
	public function get_shelter_contact($id) {
		$this->db->select('in_shelter_contact,st_shelter_name,st_shelter_email,st_shelter_phone');
		$this->db->from('tbl_shelter_contact');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_contact	
	#	Purpose		:	Deleting animal contact
	# *******************************************************************************************
	
	public function delete_contact($id) {		
		$this->db->where('in_animal_id', $id);
		$this->db->delete('tbl_shelter_contact'); 
		return $this->db->affected_rows();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	update_primary_pic	
	#	Purpose		:	Updating animal profile picture
	# *******************************************************************************************

	public function update_primary_pic($data,$id) {
		
		$this->db->where('in_file_id',$id);
		$this->db->update('tbl_animal_file',$data);	
		//echo $this->db->last_query(); die;
	}
	
	# *******************************************************************************************	
	#	Function	:	remove_profile_pic	
	#	Purpose		:	Removing animal profile picture
	# *******************************************************************************************

	public function remove_profile_pic($data,$id) {
		$this->db->where('in_animal_id',$id);
		$this->db->update('tbl_animal_file',$data);	
	}
	
	public function delete_cont($id) {
		$this->db->where('in_shelter_contact',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_shelter_contact',$data);
		return $this->db->affected_rows();
	}
	
	// added by sadiq on 8-1-15
	
	public function get_animal_transport_date($id) {
		$tr_date = array();
		
		$this->db->select('t.dt_pickup_date');
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_animal_transportation at','t.in_transportation_id = at.in_transportation_id','LEFT');
		$this->db->where('at.in_deleted',0);
		$this->db->where('t.in_deleted',0);
		$this->db->where_in('t.in_status',array('1,2,4'));
		
		
		$this->db->where('at.in_animal_id',$id);
		$query = $this->db->get();
		
		$tr_date =  $query->row_array();
		
		if(!empty($tr_date)) {
			return (isset($tr_date['dt_pickup_date']))?$tr_date['dt_pickup_date']:'';
		}
		
	}
	
	public function get_total_deleted_animal($animalname,$animaltype,$animalbreed,$organization,$demeanor,$fromdate,$todate)
	{
		
					if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }
										
					$this->db->select("a.in_animal_id", false);						   	
					$this->db->from('tbl_animal a');
					$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','INNER');
					$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','INNER');
					$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','INNER');
					$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','INNER');
					$this->db->where('a.in_deleted','1');
					$this->db->where('aty.in_deleted','0');
					$this->db->where('o.in_deleted','0');	
					$this->db->where('ab.in_deleted','0');
					$this->db->where('d.in_deleted','0');
					
					
					//if($animalname!='')
					//{							 
					// $this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
					//}
					
					if(trim($animalname) != '') {
							if($animalname=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$animalname."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						}
					}	
					
					
					if($animaltype!='')
					{						 
					  $this->db->where("a.in_animal_type_id = '".$animaltype."'", NULL, FALSE);
					}
					if($animalbreed!='')
					{							 
					   $this->db->where("a.in_primary_breed_id = '".$animalbreed."'", NULL, FALSE);
					}
					if($organization!='')
					{						  
					  $this->db->where("a.in_organization_id = '".$organization."'", NULL, FALSE);
					}
					if($demeanor!='')
					{						 
					  $this->db->where("a.in_demeanor_id = '%".$demeanor."'", NULL, FALSE);
					}
					if($fromdate!='' && $todate!='' )
					{						
					 $this->db->where("a.dt_created >= '".$fromdate."' AND a.dt_created <='" .$todate. ' 23:59:59'."'", NULL, FALSE);
					}
		
		
					$query = $this->db->get();
					//echo $this->db->last_query(); die;			
					return $query->num_rows();
	}
	
	
	public function get_deleted_animal($sort,$order,$limit,$rec_per_page,$animalname,$animaltype,$animalbreed,$organization,$demeanor,$fromdate,$todate)
	{
				if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }
											
						$this->db->select("a.in_animal_id,
											a.st_animal_name,
											a.st_on_clock,
											a.dt_date,
											a.dt_target_tr_date,
											a.dt_created,	
											a.dt_modified,								
											o.st_org_name,								
											aty.st_animal_type_name,								
											ab.st_animal_breed_name,							
											d.st_demeanor_name", false);						   	
						$this->db->from('tbl_animal a');
						$this->db->join('tbl_organization o', 'o.in_organization_id=a.in_organization_id','INNER');
						$this->db->join('tbl_animal_type aty', 'aty.in_animal_type_id=a.in_animal_type_id','INNER');
						$this->db->join('tbl_animal_breed ab', 'ab.in_animal_breed_id=a.in_primary_breed_id','INNER');
						$this->db->join('tbl_demeanor d', 'd.in_demeanor_id=a.in_demeanor_id','INNER');
						$this->db->where('a.in_deleted','1');
						$this->db->where('aty.in_deleted','0');
						$this->db->where('o.in_deleted','0');	
						$this->db->where('ab.in_deleted','0');
						$this->db->where('d.in_deleted','0');					
					  
						//if($animalname!='')
						//{							 
						// $this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						//}
						
						if(trim($animalname) != '') {
							if($animalname=='%'){
							$this->db->where("a.st_animal_name RLIKE '%".$animalname."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("a.st_animal_name LIKE '%".$animalname."%'", NULL, FALSE);
						}
					}	
						if($animaltype!='')
						{						 
						  $this->db->where("a.in_animal_type_id = '".$animaltype."'", NULL, FALSE);
						}
						if($animalbreed!='')
						{							 
						   $this->db->where("a.in_primary_breed_id = '".$animalbreed."'", NULL, FALSE);
						}
						if($organization!='')
						{						  
						  $this->db->where("a.in_organization_id = '".$organization."'", NULL, FALSE);
						}
						if($demeanor!='')
						{						 
						  $this->db->where("a.in_demeanor_id = '".$demeanor."'", NULL, FALSE);
						}
						if($fromdate!='' && $todate!='' )
						{						
						 $this->db->where("a.dt_created >= '".$fromdate."' AND a.dt_created <='" .$todate. ' 23:59:59'."'", NULL, FALSE);
						}
					
					switch($sort)
					{
						
						case 'orgname': 						
							$this->db->order_by('o.st_org_name',$order);
						break;	
						
						case 'animalname': 							
							$this->db->order_by('a.st_animal_name',$order);
						break;
						
						case 'type': 							
							$this->db->order_by('aty.st_animal_type_name',$order);
						break;
						
						case 'breed': 							
							$this->db->order_by('ab.st_animal_breed_name',$order);
						break;
						
						case 'demeanor': 							
							$this->db->order_by('d.st_demeanor_name',$order);
						break;
						
						case 'onclock':							
							$this->db->order_by('a.st_on_clock',$order);
						break;
						
						case 'trdate': 							
							$this->db->order_by('a.dt_target_tr_date',$order);
						break;
						
						case 'createdate': 							
							$this->db->order_by('a.dt_created',$order);
						break;
						
						case 'modifieddate': 							
							$this->db->order_by('a.dt_modified',$order);
						break;
							
						default :						
						$this->db->order_by('o.st_org_name',$order);
						break;							         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 					
					//echo $this->db->last_query();  die;	
							
					$arrAnimal = array();					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
									$date1=$Row->dt_date;
									$date2=date('Y-m-d');
									if($Row->dt_date!='0000-00-00'){
										
									$no_of_days=(strtotime($date1) - (strtotime(date('Y-m-d'))))/(60 * 60 * 24). ' days'; 
									if($no_of_days < 0)
									{
										$no_of_days = '0'.' days';
									}								
									
									}
									else
									{
										$no_of_days='-';
									}
									
									
							$arrAnimal[$Row->in_animal_id]	=	array('in_animal_id' => $Row->in_animal_id,
											'st_animal_name'						 => $Row->st_animal_name,
											'st_on_clock'							 => $no_of_days,
											'dt_created'							 => $Row->dt_created,	
											'dt_modified'							 => $Row->dt_modified,	
											'st_org_name'							 => $Row->st_org_name,	
											'st_animal_type_name'					 => $Row->st_animal_type_name,	
											'st_animal_breed_name'					 => $Row->st_animal_breed_name,	
											'st_demeanor_name'						 => $Row->st_demeanor_name,
											'dt_target_tr_date'						 => $Row->dt_target_tr_date			
											);
						}
						return $arrAnimal;						
					}
			
	}
	
	// added by sadiq on 15-03-16
	function reactivate_animal($animalId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '0' );		
		$this->db->where('in_animal_id', $animalId);
		$this->db->update('tbl_animal', $arrAnimal);		
	}
	
	
	function reactivate_multiple_animal($animal_ids)
	{
		$arrAnimal = 	array('in_deleted' 	=> '0' );
		$this->db->where_in('in_animal_id', $animal_ids);
		$this->db->update('tbl_animal', $arrAnimal);
		//echo $this->db->last_query(); die;		
		return $this->db->affected_rows();
	}
	public function get_total_animal_weight($name='')
	{ 		
					
		$this->db->select("*", false);						   	
		$this->db->from('tbl_animal_weight');		
		$this->db->where('in_deleted','0');
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	
	
	#============================================================
	#	Function	:	get_animal_types()
	#  Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_animal_weight($sort,$order,$limit,$rec_per_page,$name)
	{				  
		$this->db->select("*", false);						   	
		$this->db->from('tbl_animal_weight');		
		$this->db->where('in_deleted','0');
					  
		
				if(trim($name) != '') {
							if($name=='%'){ 
							$this->db->where("tbl_animal_weight.st_label RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_animal_weight.st_label LIKE '%".$name."%'", NULL, FALSE);
						}
						
					}
					
					switch($sort)
					{
						
						case 'name': 							
							$this->db->order_by('st_label',$order);
						break;	
						
						case "createddate":						
						$this->db->order_by('dt_created',$order);
					    break;	
						
						case "modifieddate":						
						$this->db->order_by('dt_modified',$order);
					    break;	
						
						default:						
						$this->db->order_by('in_id',$order);
						 break; 	         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 			
									
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrAnimal[$Row->in_id]	=				array(		'in_id'				=> $Row->in_id,
																			'weight_label'			=> $Row->st_label,
																			'weight_value'			=> $Row->st_value,
																			'dt_created'			=> $Row->dt_created,
																			'dt_modified'			=> $Row->dt_modified																				
																		);
						}
						return $arrAnimal;
						
					}
					
	}
	
	
	
	#=====================================================================================
	#	Function	:	delete_animal_types()
	#  Parameter	: 	animaltypeId
	#	Perpose		:	to delete single animal type details from tbl_animal_type table
	#-------------------------------------------------------------------------------------
	function delete_animal_weight($animaltypeId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_id', $animaltypeId);
		$this->db->update('tbl_animal_weight', $arrAnimal);		
	}
	
		
	#=====================================================================================
	#	Function	:	delete_multiple_animal_types()
	#  Parameter	: 	animalIds
	#	Perpose		:	to delete multiple animal types details from tbl_animal_type table
	#--------------------------------------------------------------------------------------
	function delete_multiple_animal_weight($animaltypeIds)
	{				
		$arrAnimal = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_id', $animaltypeIds);
		$this->db->update('tbl_animal_weight', $arrAnimal);		
		return $this->db->affected_rows();
	}

	#==========================================================================================
	#	Function	:	get_animal_types_profile()
	#   Parameter	: 	animalbreedIds
	#	Perpose		:	getting animal types profile from tbl_animal_type table
	#------------------------------------------------------------------------------------------	
	function get_animal_weight_profile($animaltypeId)
	{
		$this->db->select('*');
		$this->db->from('tbl_animal_weight');		
		$this->db->where('in_id',$animaltypeId);			
		$query = $this->db->get();
		return $query->row_array();	
	}
	#==========================================================================================
	#	Function	:	insertAnimalWeights()
	#   Parameter	: 	post
	#	Perpose		:	inserting animal weights details in tbl_animal_weight table
	#------------------------------------------------------------------------------------------	
	public function insertAnimalWeights($post)
	{
		 $arrAnimalwights = 	  array(
								'st_label'	=>	$post['label'],	
								'st_value'	=>	$post['value'],																	
								'dt_created'			=>  date("Y-m-d H:i:s"),					
								'in_deleted'		    =>	'0'																				
								);	
								$this->db->insert('tbl_animal_weight', $arrAnimalwights);												
	}

	function get_animal_age_profile($animaltypeId)
	{
		$this->db->select('*');
		$this->db->from('tbl_animal_age');		
		$this->db->where('in_id',$animaltypeId);			
		$query = $this->db->get();
		return $query->row_array();	
	}	
	function update_animal_weight_info($data,$animalwightId,$table) {		
		$this->db->where('in_id',$animalwightId);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
	function update_animal_age_info($data,$animalwightId,$table) {		
		$this->db->where('in_id',$animalwightId);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
		function is_animal_weight_exists($name)
	{ 
		$this->db->select('in_id');
		$this->db->from('tbl_animal_weight');							
		$this->db->where("st_label",$name); 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;
		
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	public function get_total_animal_age($name='')
	{ 		
					
		$this->db->select("*", false);						   	
		$this->db->from('tbl_animal_age');		
		$this->db->where('in_deleted','0');
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	function is_animal_age_exists($name)
	{ 
		$this->db->select('in_id');
		$this->db->from('tbl_animal_age');							
		$this->db->where("st_label",$name); 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;
		
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
	
	
	#============================================================
	#	Function	:	get_animal_types()
	#  Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_animal_age($sort,$order,$limit,$rec_per_page,$name)
	{				  
		$this->db->select("*", false);						   	
		$this->db->from('tbl_animal_age');		
		$this->db->where('in_deleted','0');
					  
		
				if(trim($name) != '') {
							if($name=='%'){ 
							$this->db->where("tbl_animal_age.st_label RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_animal_age.st_label LIKE '%".$name."%'", NULL, FALSE);
						}
						
					}
					
					switch($sort)
					{
						
						case 'name': 							
							$this->db->order_by('st_label',$order);
						break;	
						case 'value': 							
							$this->db->order_by('st_value',$order);
						break;
						case "createddate":						
						$this->db->order_by('dt_created',$order);
					    break;	
						
						case "modifieddate":						
						$this->db->order_by('dt_modified',$order);
					    break;	
						
						default:						
						$this->db->order_by('in_id',$order);
						 break; 	         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 			
								
					$arrAnimal = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrAnimal[$Row->in_id]	=				array(		'in_id'				=> $Row->in_id,
																			'weight_label'			=> $Row->st_label,
																			'weight_value'			=> $Row->st_value,
																			'dt_created'			=> $Row->dt_created,
																			'dt_modified'			=> $Row->dt_modified																				
																		);
						}
						return $arrAnimal;
						
					}
					
	}
	
	public function insertAnimalAge($post)
	{
		 $arrAnimalwights = 	  array(
								'st_label'	=>	$post['label'],	
								'st_value'	=>	$post['value'],																	
								'dt_created'			=>  date("Y-m-d H:i:s"),							
								'in_deleted'		    =>	'0'																				
								);	
								$this->db->insert('tbl_animal_age', $arrAnimalwights);												
	}	
	function delete_animal_age($animaltypeId)
	{
		$arrAnimal = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_id', $animaltypeId);
		$this->db->update('tbl_animal_age', $arrAnimal);		
	}
	
	
	function delete_multiple_animal_age($animaltypeIds)
	{				
		$arrAnimal = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_id', $animaltypeIds);
		$this->db->update('tbl_animal_age', $arrAnimal);		
		return $this->db->affected_rows();
	}
	
}
?>