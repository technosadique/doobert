<?php
# =======================================================
# Created by		: Sadique Mohammad
# Created date		: 25-March-2014
# File description	: Member Model for admin
# Special - notes	: none
# Tables used		: tbl_users
# Stored procedures	: NONE 
# Triggers used		: none
# -------------------------------------------------------
class member_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	
	    
	#============================================================
	#	Function	:	get_total_user()
	#   Parameter	: 	name,email
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_total_user()
	{ 	
				if($this->nativesession->get('searchadmin1')!="")
					$name = $this->nativesession->get('searchadmin1');
				else
					$name = "";
					
					if($this->nativesession->get('searchadmin2')!="")
					$email = $this->nativesession->get('searchadmin2');
				else
					$email = "";

				if($this->nativesession->get('searchadmin3')!="")
					$fromdate = $this->nativesession->get('searchadmin3');
				else
					$fromdate = "";	
					
				if($this->nativesession->get('searchadmin4')!="")
					$todate = $this->nativesession->get('searchadmin4');
				else
					$todate = "";
					
				if($this->nativesession->get('searchadmin5')!="")
					$wid = $this->nativesession->get('searchadmin5');
				else
					$wid = "";

				if($this->nativesession->get('searchadmin6')!="")
					$driver = $this->nativesession->get('searchadmin6');
				else
					$driver = "";

				if($this->nativesession->get('searchadmin7')!="")
					$pilot = $this->nativesession->get('searchadmin7');
				else
					$pilot = "";
					
				if($this->nativesession->get('searchadmin8')!="")
					$foster_home = $this->nativesession->get('searchadmin8');
				else
					$foster_home = "";
					
				if($this->nativesession->get('searchadmin9')!="")
					$photographer = $this->nativesession->get('searchadmin9');
				else
					$photographer = "";
					
				if($this->nativesession->get('searchadmin10')!="")
					$in_person_volunteer = $this->nativesession->get('searchadmin10');
				else
					$in_person_volunteer = "";
					
				if($this->nativesession->get('searchadmin11')!="")
					$virtual_support_volunteer = $this->nativesession->get('searchadmin11');
				else
					$virtual_support_volunteer = "";
				
				if($this->nativesession->get('searchadmin12')!="")
					$airline_volunteer = $this->nativesession->get('searchadmin12');
				else
					$airline_volunteer = "";
				if($this->nativesession->get('searchadmin13')!="")
					$organization_name = $this->nativesession->get('searchadmin13');
				else
					$organization_name = "";
				
				if($fromdate=='1969-12-31'){ $fromdate='';  }
				if($todate=='1969-12-31'){ $todate='';  }
				  
				$this->db->select("u.in_user_id", false);						   	
				$this->db->from('tbl_users u');
				$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id','INNER');
				//$this->db->join('tbl_organization as o','u.in_user_id = o.in_user_id AND o.in_deleted = 0 AND o.in_status = 1','LEFT');
				//$this->db->join('tbl_organization_user as ou','u.in_user_id = ou.in_user_id AND ou.in_deleted = 0 AND ou.in_status = 1','LEFT');	
				$this->db->where('u.in_deleted','0');
				$this->db->where('up.in_deleted','0');
				$this->db->where('u.in_status <>','3');
				
				if(!empty($wid)){
				$this->db->where('u.in_user_from',$wid);	
				}
				  
				//if($name!=''){					
				
				//$this->db->where("u.st_display_name LIKE '%".$name."%'", NULL, FALSE);
				//}
				
				if(trim($name) != '') {
							$name = str_replace("%","\%",$name);			
							$this->db->where("concat(u.st_display_name,' ',u.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}	
				if($fromdate!='' && $todate!='') {
							$this->db->where("u.dt_created >= '".$fromdate."' AND u.dt_created <= '".$todate. ' 23:59:59'."'", NULL, FALSE);
				}
				
				
				if(!empty($driver)){
					$this->db->where("up.st_driver = '".$driver."'", NULL, FALSE);
				}
				
				if(!empty($pilot)){
					$this->db->where("up.st_pilot = '".$pilot."'", NULL, FALSE);
				}
				
				if(!empty($foster_home)){
					$this->db->where("up.st_foster_home = '".$foster_home."'", NULL, FALSE);
				}
				
				if(!empty($photographer)){
					$this->db->where("up.st_photographer = '".$photographer."'", NULL, FALSE);
				}
				
				if(!empty($in_person_volunteer)){
					$this->db->where("up.st_in_person_volunteer = '".$in_person_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($st_virtual_support_volunteer)){
					$this->db->where("up.st_driver = '".$virtual_support_volunteer."'", NULL, FALSE);
				}	
				
				if(!empty($airline_volunteer)){
					$this->db->where("up.st_airline_emp = '".$airline_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($organization_name)){
					
					//$this->db->join('tbl_organization as o','u.in_user_id = o.in_user_id AND o.in_deleted = 0 AND o.in_status = 1','LEFT');
				//$this->db->join('tbl_organization_user as ou','u.in_user_id = ou.in_user_id AND ou.in_deleted = 0 AND ou.in_status = 1','LEFT');	
					$where_org_name = " (u.in_user_id IN (SELECT ou.in_user_id FROM tbl_organization_user AS ou INNER JOIN tbl_organization AS o ON ou.in_organization_id = o.in_organization_id AND o.in_deleted = 0 AND o.in_status = 1 AND ou.in_deleted = 0 AND ou.in_status = 1 AND o.in_organization_id='".$organization_name."') OR u.in_user_id IN (SELECT o.in_user_id FROM tbl_organization AS o WHERE o.in_deleted = 0 AND o.in_status = 1 AND o.in_organization_id='".$organization_name."'))";
					
					//$where_org_name = '(o.in_organization_id="'.$organization_name.'" OR ou.in_organization_id="'.$organization_name.'")';
					$this->db->where($where_org_name, NULL, FALSE);
				}
				
				//$this->db->group_by('u.in_user_id');
				
				$query = $this->db->get();	
				//echo $this->db->last_query(); die;				
				return $query->num_rows();
	}
	
	
	
	#============================================================
	#	Function	:	get_user()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email
	#	Perpose		:	to get user details
	#------------------------------------------------------------
	public function get_user($sort,$order,$limit,$rec_per_page)
	{		
				if($this->nativesession->get('searchadmin1')!="")
					$name = $this->nativesession->get('searchadmin1');
				else
					$name = "";
					
					if($this->nativesession->get('searchadmin2')!="")
					$email = $this->nativesession->get('searchadmin2');
				else
					$email = "";

				if($this->nativesession->get('searchadmin3')!="")
					$fromdate = $this->nativesession->get('searchadmin3');
				else
					$fromdate = "";	
					
				if($this->nativesession->get('searchadmin4')!="")
					$todate = $this->nativesession->get('searchadmin4');
				else
					$todate = "";
					
				if($this->nativesession->get('searchadmin5')!="")
					$wid = $this->nativesession->get('searchadmin5');
				else
					$wid = "";

				if($this->nativesession->get('searchadmin6')!="")
					$driver = $this->nativesession->get('searchadmin6');
				else
					$driver = "";

				if($this->nativesession->get('searchadmin7')!="")
					$pilot = $this->nativesession->get('searchadmin7');
				else
					$pilot = "";
					
				if($this->nativesession->get('searchadmin8')!="")
					$foster_home = $this->nativesession->get('searchadmin8');
				else
					$foster_home = "";
					
				if($this->nativesession->get('searchadmin9')!="")
					$photographer = $this->nativesession->get('searchadmin9');
				else
					$photographer = "";
					
				if($this->nativesession->get('searchadmin10')!="")
					$in_person_volunteer = $this->nativesession->get('searchadmin10');
				else
					$in_person_volunteer = "";
					
				if($this->nativesession->get('searchadmin11')!="")
					$virtual_support_volunteer = $this->nativesession->get('searchadmin11');
				else
					$virtual_support_volunteer = "";
				
				
					if($fromdate=='1969-12-31'){$fromdate='';  }
					if($todate=='1969-12-31'){$todate='';  }	
				$this->db->select("u.in_user_id,
								  u.st_email,
								  u.dt_created,
								  u.dt_modified,
								  u.in_status,
								  up.st_pilot,
								  up.st_driver,
								  up.st_airline_emp,
								  up.st_city,
								  up.st_state,
								  up.st_zip,
								  u.st_password,
								  u.st_facebook_uid,
								  u.st_referred_by,
								  u.dt_transport_agree,
								  u.in_app,
								  concat(u.st_display_name, ' ',u.st_last_name) as st_display_name,
								  uv.dt_modified as driver_modified,
								  p.dt_modified as pilot_modified,
								  ua.dt_modified as fhmodified,
								  fud.dt_modified as foster_modified,
								  pd.dt_modified as photographer_modified,
								  pvd.dt_modified as per_vol_modified,
								  vsd.dt_modified as vir_vol_modified,
								  v.in_verify_id,
								  v.fl_doobert_verified,
								  v.dt_doobert_verified,
								  group_concat(distinct org.st_org_name SEPARATOR ', ') as org_owners", false);						   	
				$this->db->from('tbl_users u');	
				$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id AND `up`.`in_deleted` = 0','INNER');				
				$this->db->join('tbl_user_vehicle uv', 'u.in_user_id = uv.in_user_id AND `uv`.`in_status` = 1 AND `uv`.`in_deleted` = 0','LEFT');
				$this->db->join('tbl_user_pilot p', 'u.in_user_id = p.in_user_id AND `p`.`in_status` = 1 AND `p`.`in_deleted` = 0','LEFT');
				
				$this->db->join('tbl_foster_user_detail fud', 'u.in_user_id = fud.in_user_id AND `fud`.`in_deleted` = 0','LEFT');
				$this->db->join('tbl_photographer_detail pd', 'u.in_user_id = pd.in_user_id AND `pd`.`in_deleted` = 0','LEFT');
				$this->db->join('tbl_in_person_volunteer_detail pvd', 'u.in_user_id = pvd.in_user_id AND `pvd`.`in_deleted` = 0','LEFT');
				$this->db->join('tbl_virtual_support_vol_detail vsd', 'u.in_user_id = vsd.in_user_id AND `vsd`.`in_deleted` = 0','LEFT');
				//$this->db->join('tbl_user_pilot p', 'u.in_user_id = p.in_user_id AND `p`.`in_status` = 1','LEFT');
				
				$this->db->join('tbl_user_addition_info as ua', 'u.in_user_id = ua.in_user_id AND `ua`.`in_status` = 1 AND `ua`.`in_deleted` = 0','LEFT');
				
				$this->db->join('tbl_verification as v','u.in_user_id = v.in_user_id AND v.in_deleted = 0 AND v.fl_doobert_verified = 1','LEFT');
				
				$this->db->join('tbl_organization as org','u.in_user_id = org.in_user_id AND org.in_deleted = 0 AND org.in_status = 1','LEFT');
												
				$this->db->where('u.in_deleted','0');
				//$this->db->where('up.in_deleted','0');
				$this->db->where('u.in_status <>','3');
				
				if(!empty($wid)){
				$this->db->where('u.in_user_from',$wid);	
				}
				
				if(trim($name) != '') {
							$name = str_replace("%","\%",$name);				
							$this->db->where("concat(u.st_display_name,' ',u.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}	
				if($fromdate!='' && $todate!='') {
							$this->db->where("u.dt_created >= '".$fromdate."' AND u.dt_created <= '".$todate. ' 23:59:59'."'", NULL, FALSE);
				}
				
				if(!empty($driver)){
					$this->db->where("up.st_driver = '".$driver."'", NULL, FALSE);
				}
				
				if(!empty($pilot)){
					$this->db->where("up.st_pilot = '".$pilot."'", NULL, FALSE);
				}
				
				if(!empty($foster_home)){
					$this->db->where("up.st_foster_home = '".$foster_home."'", NULL, FALSE);
				}
				
				if(!empty($photographer)){
					$this->db->where("up.st_photographer = '".$photographer."'", NULL, FALSE);
				}
				
				if(!empty($in_person_volunteer)){
					$this->db->where("up.st_in_person_volunteer = '".$in_person_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($st_virtual_support_volunteer)){
					$this->db->where("up.st_driver = '".$virtual_support_volunteer."'", NULL, FALSE);
				}

				
				$this->db->group_by('u.in_user_id');
						switch($sort)
						{							
							case 'name':								
								$this->db->order_by('st_display_name',$order);
							break;	
							
							case 'email': 								
								$this->db->order_by('u.st_email',$order);
							break;
							
							case 'createat': 								
								$this->db->order_by('u.dt_created',$order);
							break;	
							
							case 'status': 								
								$this->db->order_by('u.in_status',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('u.st_password',$order);
							break;	
							
							case 'doobert_verified': 								
								$this->db->order_by('v.in_verify_id',$order);
							break;
							
							case 'city': 								
								$this->db->order_by('up.st_city',$order);
							break;
							
							case 'state': 								
								$this->db->order_by('up.st_state',$order);
							break;
							
							case 'zip': 								
								$this->db->order_by('up.st_zip',$order);
							break;
							
							
							default: 								
								$this->db->order_by('st_display_name',$order);
							break;	
								         
						}
					  
					  
					 if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 
					//echo $this->db->last_query();  die;					
					$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{		
									
							$arrUser[$Row->in_user_id]	=	array('in_user_id'	=> $Row->in_user_id,
											'st_email'							=> $Row->st_email,
											'st_city'							=> $Row->st_city,
											'st_state'							=> $Row->st_state,
											'st_zip'							=> $Row->st_zip,		
											'dt_created'						=> $Row->dt_created,		
											'dt_modified'						=> $Row->dt_modified,
											'st_driver'							=> $Row->st_driver,		
											'st_pilot'							=> $Row->st_pilot,
											'st_airline'						=> $Row->st_airline_emp,											
											'in_status'							=> $Row->in_status,
											'st_display_name'				    => $Row->st_display_name,
											//'st_last_name'				    	=> $Row->st_last_name,
											'password'							=> $Row->st_password,
											'facebook_id'						=> $Row->st_facebook_uid,
											'in_app'							=> $Row->in_app,
											'driver_modified'					=> $Row->driver_modified,
											'pilot_modified'					=> $Row->pilot_modified,
											//'foster_home_modified'				=> $Row->fhmodified,
											'foster_home_modified'				=> $Row->foster_modified,
											'photographer_modified'				=> $Row->photographer_modified,
											'per_vol_modified'					=> $Row->per_vol_modified,
											'vir_vol_modified'					=> $Row->vir_vol_modified,
											'dt_transport_agree'				=> $Row->dt_transport_agree,
											'in_verify_id'						=> $Row->in_verify_id,
											'doobert_verified'					=> ($Row->fl_doobert_verified==1)?'Yes':'No',
											'dt_doobert_verified'				=>	$Row->dt_doobert_verified,
											'st_referred_by'					=>	trim($Row->st_referred_by)!=''?htmlspecialchars_decode($Row->st_referred_by):'',
											'org_owners'						=>	$Row->org_owners
											);
						}
						return $arrUser;
						
					}
					
	}
	
	
		
	#======================================================================
	#	Function	:	get_total_blocked_user()
	#   Parameter	: 	name,email
	#	Perpose		:	to get total no of block user from tbl_users table
	#----------------------------------------------------------------------
	public function get_total_blocked_user($name='',$email='')
	{ 	
						  
				$this->db->select("tbl_users.in_user_id", false);						   	
				$this->db->from('tbl_users');				
				$this->db->where('tbl_users.in_deleted','0');
				$this->db->where('tbl_users.in_status','3');
				  
				//if($name!=''){	
				//$this->db->where("tbl_users.st_display_name LIKE '%".$name."%'", NULL, FALSE);
				//}	
				
				if(trim($name) != '') {
							if($name=='%'){ 
							$this->db->where("concat(tbl_users.st_display_name,' ',tbl_users.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("(tbl_users.st_display_name LIKE '%".$name."%' OR tbl_users.st_last_name LIKE '%".$name."%')", NULL, FALSE);
						}
					}	
							
				if($email!=''){	
				$this->db->where("tbl_users.st_email LIKE '%".$email."%'", NULL, FALSE);
				}	  
				$query = $this->db->get();	
				//echo $this->db->last_query();  die;							
				return $query->num_rows();
	}
	
	
		
	#======================================================================
	#	Function	:	get_blocked_user()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email
	#	Perpose		:	to get block user details from tbl_users table
	#----------------------------------------------------------------------
	public function get_blocked_user($sort,$order,$limit,$rec_per_page,$name,$email)
	{
		
		
		/*$sql	= "SELECT tbl_users.in_user_id,
						  tbl_users.st_email,
						  tbl_users.st_display_name						  
				  FROM tbl_users WHERE tbl_users.in_deleted='0' AND  tbl_users.in_status='3'";*/
				  
				$this->db->select("tbl_users.in_user_id,
								   tbl_users.st_email,
								   tbl_users.dt_created,
								   tbl_users.dt_modified,
								   tbl_users.st_last_name,
								   tbl_users.st_password,
								   tbl_users.st_facebook_uid,
								   tbl_users.in_app,
								   tbl_users.st_display_name", false);						   	
				$this->db->from('tbl_users');				
				$this->db->where('tbl_users.in_deleted','0');
				$this->db->where('tbl_users.in_status','3');
				  
		
				//if($name!=''){	
				//$this->db->where("tbl_users.st_display_name LIKE '%".$name."%'", NULL, FALSE);
				//}	
				if(trim($name) != '') {
							$name = str_replace("%","\%",$name);	
			
							$this->db->where("concat(tbl_users.st_display_name,' ',tbl_users.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}			
				if($email!=''){	
				$this->db->where("tbl_users.st_email LIKE '%".$email."%'", NULL, FALSE);
				}		
						
						
						switch($sort)
						{							
														
							case 'name': 								
								$this->db->order_by('tbl_users.st_display_name',$order);
							break;
								
							case 'email': 								
								$this->db->order_by('tbl_users.st_email',$order);
							break;	
							
							case 'createdat': 								
								$this->db->order_by('tbl_users.dt_created',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('tbl_users.st_password',$order);
							break;
							
							case 'modifiedat': 								
								$this->db->order_by('tbl_users.dt_modified',$order);
							break;	         
						}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 					
					//echo $this->db->last_query();  die;											
					$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrUser[$Row->in_user_id]	=	array('in_user_id'	=> $Row->in_user_id,
											'st_email'							=> $Row->st_email,	
											'dt_created'						=> $Row->dt_created,
											'dt_modified'						=> $Row->dt_modified,											
											'st_display_name'				    => $Row->st_display_name,
											'st_last_name'				        => $Row->st_last_name,
											'password'							=> $Row->st_password,
											'facebook_id'						=> $Row->st_facebook_uid,
											'in_app'							=> $Row->in_app																													
											);
						}
						return $arrUser;
						
					}
					
	}
	
	
		
	#======================================================================
	#	Function	:	delete_user()
	#   Parameter	: 	userId
	#	Perpose		:	to delete single user details from tbl_users table
	#----------------------------------------------------------------------
	function delete_user($userId)
	{
		$arrUser = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_user_id', $userId);
		$this->db->update('tbl_users', $arrUser);		
	}
	
	
		
	#======================================================================
	#	Function	:	block_user()
	#   Parameter	: 	userId
	#	Perpose		:	block user in tbl_users table
	#----------------------------------------------------------------------	
	function block_user($userId)
	{
		$arrUser = 	array('in_status' 	=> '3' );		
		$this->db->where('in_user_id', $userId);
		$this->db->update('tbl_users', $arrUser);		
	}
	
	
		
	#========================================================================
	#	Function	:	unblock_user()
	#   Parameter	: 	userIds
	#	Perpose		:	to unblock user from tbl_users table
	#------------------------------------------------------------------------
	function unblock_user($userId)
	{
		$arrUser = 	array('in_status' 	=> '1' );		
		$this->db->where('in_user_id', $userId);
		$this->db->update('tbl_users', $arrUser);		
	}
	
	
		
	#========================================================================
	#	Function	:	delete_multiple_user()
	#   Parameter	: 	userIds
	#	Perpose		:	to delete multiple user details from tbl_users table
	#------------------------------------------------------------------------
	function delete_multiple_user($userIds)
	{			
		$arrUser = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_user_id', $userIds);
		$this->db->update('tbl_users', $arrUser);		
		return $this->db->affected_rows();
	}
	
	
		
	#========================================================================
	#	Function	:	delete_multiple_blocked_user()
	#   Parameter	: 	userIds
	#	Perpose		:	to delete multiple blocked user details from tbl_users table
	#------------------------------------------------------------------------
	function delete_multiple_blocked_user($userIds)
	{				
		$arrUser = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_user_id', $userIds);
		$this->db->update('tbl_users', $arrUser);		
		return $this->db->affected_rows();
	}
	
	
		
	#========================================================================
	#	Function	:	get_user_profile()
	#   Parameter	: 	userIds
	#	Perpose		:	to get user profile from tbl_users table
	#------------------------------------------------------------------------
	function get_user_profile($userId)
	{
		$this->db->select('u.in_user_id,u.st_email,u.st_display_name,u.st_last_name,u.st_password,u.dt_created,u.st_referred_by,u.in_preferred_vol,
		  ua.in_animal_type_id,ua.in_animal_breed_id,ua.in_demeanor_id,ua.in_no_animal,
		  ua.in_duration_type,ua.in_duration,at.st_animal_type_name,up.dt_exp_tc_date,u.in_tc_request_board,up.st_primary_phone,up.in_number_verified,up.st_country,
		  ab.st_animal_breed_name,d.st_demeanor_name,u.dt_modified,uv.dt_modified as driver_modified,p.dt_modified as pilot_modified,pd.dt_modified as photographer_modified,pvd.dt_modified as per_vol_modified,vsd.dt_modified as vir_vol_modified,u.dt_transport_agree,fud.dt_modified as foster_modified_date');
		$this->db->from('tbl_users as u');
		
		//$this->db->join('tbl_user_vehicle uv', 'u.in_user_id = uv.in_user_id AND `uv`.`in_status` = 1 AND `uv`.`in_deleted` = 0','LEFT');
		//$this->db->join('tbl_user_pilot p', 'u.in_user_id = p.in_user_id AND `p`.`in_status` = 1 AND `p`.`in_deleted` = 0','LEFT');
		$this->db->join('tbl_user_profile as up','u.in_user_id=up.in_user_id','LEFT');
		$this->db->join('tbl_user_addition_info as ua','u.in_user_id = ua.in_user_id','LEFT');		
		$this->db->join('tbl_animal_type as at','ua.in_animal_type_id = at.in_animal_type_id','LEFT');
		$this->db->join('tbl_animal_breed as ab','ua.in_animal_breed_id = ab.in_animal_breed_id','LEFT');
		$this->db->join('tbl_demeanor as d','ua.in_demeanor_id = d.in_demeanor_id','LEFT');
		
		$this->db->join('tbl_user_vehicle uv', 'u.in_user_id = uv.in_user_id  AND `uv`.`in_status` = 1 AND `uv`.`in_deleted` = 0','LEFT');
		$this->db->join('tbl_user_pilot p', 'u.in_user_id = p.in_user_id AND `p`.`in_status` = 1 AND `p`.`in_deleted` = 0','LEFT');
		
		$this->db->join('tbl_foster_user_detail fud', 'u.in_user_id = fud.in_user_id AND `fud`.`in_deleted` = 0','LEFT');
		$this->db->join('tbl_photographer_detail pd', 'u.in_user_id = pd.in_user_id AND `pd`.`in_deleted` = 0','LEFT');
		$this->db->join('tbl_in_person_volunteer_detail pvd', 'u.in_user_id = pvd.in_user_id AND `pvd`.`in_deleted` = 0','LEFT');
		$this->db->join('tbl_virtual_support_vol_detail vsd', 'u.in_user_id = vsd.in_user_id AND `vsd`.`in_deleted` = 0','LEFT');
			
		$this->db->where('u.in_user_id',$userId);			
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();	
	}
	
	
		
	#========================================================================
	#	Function	:	update_user_info()
	#   Parameter	: 	userIds
	#	Perpose		:	to update user profile in tbl_users table
	#------------------------------------------------------------------------
	function update_user_info($data,$userid,$table) {	
		$this->db->where('in_user_id',$userid);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
	
	
	function getOrgId($userId)
	{   
	    $this->db->distinct();
		$this->db->select('org.in_organization_id');
		$this->db->from('tbl_organization_user as org');		
		$this->db->where('org.in_user_id',$userId);		
		$this->db->where('org.in_status','1');		
		return $query = $this->db->get()->result_array();
		//echo $this->db->last_query(); die;
		//return $query->row_array();	
		//return $query->result();
	}
	function getOrgName($orgId)
	{
		//echo '<pre>'; print_r($orgId); die;
		$i=0;
		for($i=0;$i<count($orgId);$i++)
		{
			 $org[]	=	$orgId[$i]['in_organization_id'];	
		}
		
		//echo count($orgId); die;
		//echo '<pre>'; print_r($orgId); die;
		
		$this->db->select('org.st_org_name');
		$this->db->from('tbl_organization as org');				
		$this->db->where_in('org.in_organization_id',$org);		
		return $query = $this->db->get()->result_array();
		//echo $this->db->last_query(); die;
		//return $query->row_array();	
	}
	
	public function get_org_list($userId)
	{	
	//print_r($org_id); die;
		$this->db->select('o.st_org_name,o.in_organization_id ',FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_organization_user as ou','ou.in_organization_id = o.in_organization_id','LEFT');
		$cnd  = '';
		
		
		$where = "(( o.in_user_id ='".$userId."' ".$cnd.")  
					OR( ou.in_user_id ='".$userId."' )
					AND ou.in_status='1' 
					AND ou.in_deleted='0'  ".$cnd2.") AND o.in_deleted='0' AND o.in_status='1' 
					";
		$this->db->where($where, NULL, FALSE);
		$this->db->group_by('o.in_organization_id'); 
		$this->db->order_by('o.st_org_name','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($query->result_array());die;
		return $query->result_array();	
	}
	
	
	function is_email_exists($email,$userId)
	{ 
		$this->db->select('in_user_id');
		$this->db->from('tbl_users');							
		$this->db->where("st_email",$email);
		$this->db->where('in_user_id != ',$userId);
		 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;	
		
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
	public function get_user_vehicle_detail($id)
	{
		$this->db->select('uv.st_vehicle_type,uv.st_zip_vehicle,uv.st_vehicle_type,uv.st_vehicle_color,uv.st_vehicle_license_plate,uv.st_vehicle_license_state,uv.in_distance_to_drive,uv.st_driver_availability');
						
		$this->db->from('tbl_user_vehicle as uv');
		$this->db->where('uv.in_user_id',$id);
		//$this->db->where('uv.in_status',0);
		$this->db->where('uv.in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		return $query->result_array();
		
	}
	
	public function get_user_pilot_detail($id)
	{
		$this->db->select('p.dt_modified as pilot_modified,
		  p.st_pilot_availability,
		  p.st_pilot_zip,
		  p.st_identifier,
		  p.st_plane_type,
		  p.st_plane_color,
		  p.st_plane_number,
		  p.in_plane_ifr,
		  p.in_distance_to_pilot,
		  p.zip_lat as plat,
		  p.zip_lon as plon');
						
		$this->db->from('tbl_user_pilot as p');
		$this->db->where('p.in_user_id',$id);
		//$this->db->where('uv.in_status',0);
		$this->db->where('p.in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		return $query->result_array();
		
	}
	
	#=========================================================
	#	Function : get_user_verified
	#	Purpose  : Checking user is Verified or not
	#=========================================================
	
	public function get_user_verified($id) {
		$this->db->select('in_user_id,dt_doobert_verified');
		$this->db->from('tbl_verification');
		$this->db->where('in_user_id',$id);
		$this->db->where('fl_doobert_verified',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		//return $query->row_array();
		return $query->num_rows();
	}
	
	public function get_total_pending_invitation()
	{
		$this->db->select('ou.in_org_user_id,
						   ou.dt_created,ou.st_permission,ou.in_invite_by,ou.in_org_user_id,
						   o.in_organization_id,o.st_org_name,o.st_city,
						   o.st_state,o.st_zip,CONCAT(u.st_display_name," ",u.st_last_name) as fullname',FALSE);
		$this->db->from('tbl_organization_user as ou');		
		$this->db->join('tbl_organization o','o.in_organization_id = ou.in_organization_id','LEFT');
		$this->db->join('tbl_users u','u.in_user_id = ou.in_invite_by','LEFT');	
		$this->db->where('ou.in_invite_by !=','0');		
		$this->db->where('ou.in_status','5');		
        $this->db->where('ou.in_deleted','0');
		$this->db->where('o.in_status','1');	
		$this->db->where('o.in_deleted','0');		
		$query = $this->db->get();
	    //echo $this->db->last_query();	 die;			
		return $query->num_rows();
	}
	
	public function get_pending_invitation($sort,$order,$limit,$rec_per_page)
	{
		$data=array();
		$this->db->select('ou.in_org_user_id,
						   ou.dt_created,ou.st_permission,ou.in_invite_by,ou.in_user_id,ou.in_org_user_id,
						   o.in_organization_id,o.st_org_name,o.st_city,
						   o.st_state,o.st_zip,CONCAT(u.st_display_name," ",u.st_last_name) as fullname',FALSE);
		$this->db->from('tbl_organization_user as ou');		
		$this->db->join('tbl_organization o','o.in_organization_id = ou.in_organization_id','LEFT');
		$this->db->join('tbl_users u','u.in_user_id = ou.in_invite_by','LEFT');	
		$this->db->where('ou.in_invite_by !=','0');		
		$this->db->where('ou.in_status','5');		
        $this->db->where('ou.in_deleted','0');
		$this->db->where('o.in_status','1');	
		$this->db->where('o.in_deleted','0');	
		switch($sort)
						{							
							case 'orgname':								
								$this->db->order_by('o.st_org_name',$order);
							break;
							
							case 'invitedby': 								
								$this->db->order_by('ou.in_invite_by',$order);								
							break;
							
							case 'invitedto': 								
								$this->db->order_by('ou.in_user_id',$order);								
							break;
							
							case 'date': 								
								$this->db->order_by('ou.dt_created',$order);
							break;
							default: 								
								$this->db->order_by('o.st_org_name',$order);
							break;	
								         
						}
					  
					  
			 if(!isset($limit))
				{
					$limit=0;
				}					
		$this->db->limit($rec_per_page,$limit);		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				
				$location = '';
				
				if(isset($row['st_city']) && $row['st_city'] != '')
				{
					$location .= $row['st_city'].', ';
				}
				
				if(isset($row['st_state']) && $row['st_state'] != '')
				{
					$location .= $row['st_state'].', ';
				}
				
				if(isset($row['st_zip']) && $row['st_zip'] != '')
				{
					$location .= $row['st_zip'];
				}
				
				$fullname			=	$row['fullname'];
				
				$sqlprogressstatus  = "SELECT CONCAT(st_display_name,' ',st_last_name) as fullname FROM tbl_users  where in_user_id = '".$row['in_user_id']."'";
										$sqlprogressstat	=	$this->db->query($sqlprogressstatus);										
										$prostatus			=	$sqlprogressstat->result();
										$fullname2			=	$prostatus[0]->fullname;
				
				
				$data['pending_invitation_list'][] 		= array('org_name'	=>	$row['st_org_name'],
															'in_org_id'		=>	$row['in_organization_id'],
															'location'		=>	$location,		
															'invited_by'    =>  $fullname,	
															'invited_to'    =>  $fullname2,	
															'date'			=>	$row['dt_created'], 
															'access_level'	=>	unserialize($row['st_permission']), 
															'in_org_user_id'=>  $row['in_org_user_id'],
															'in_user_id'    =>  $row['in_user_id']
													);
			}
			
		}
		return $data;
		
	}
	
	public function status_accept($orguserId)
	{
		$arrUser = 	array('in_status' 	=> '1' );		
		$this->db->where_in('in_org_user_id', $orguserId);
		$this->db->update('tbl_organization_user', $arrUser);	
		//echo $this->db->last_query(); die;	
		
	}
	
	public function status_reject($orguserId)
	{
		$arrUser = 	array('in_status' 	=> '4' );		
		$this->db->where_in('in_org_user_id', $orguserId);
		$this->db->update('tbl_organization_user', $arrUser);	
	}
	
	
	#========================================================================
	#	Function	:	delete_multiple_pending_invitation()
	#   Parameter	: 	orguserIds
	#	Perpose		:	to delete multiple organization user details from tbl_organization_users table
	#------------------------------------------------------------------------
	function delete_multiple_pending_invitation($orguserIds)
	{			
		$arrUser = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_org_user_id', $orguserIds);
		$this->db->update('tbl_organization_user', $arrUser);
		return $this->db->affected_rows();
	}
	
	public function join_org_notification($data) {
		$this->db->insert('tbl_notification',$data);
		return $this->db->affected_rows();
	}
	
	public function get_organization_list_by_user_id($user_id)
	{	
		$this->db->select('o.st_org_name,o.in_organization_id ',FALSE);
		$this->db->from('tbl_organization as o');
		
		$where = "o.in_user_id =".$user_id." AND o.in_deleted='0' AND o.in_status='1'";
		$this->db->where($where, NULL, FALSE);
		$this->db->order_by('o.in_organization_id','DESC');
		$query = $this->db->get();
		
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($query->result_array());die;
		return $query->result_array();	
	}
	
	public function get_organization_user_list_by_user_id($user_id)
	{	
		$this->db->select('ou.in_org_user_id,ou.in_organization_id',FALSE);
		$this->db->from('tbl_organization_user as ou');
		
		$where = "ou.in_user_id =".$user_id." AND ou.in_deleted='0' AND ou.in_status='1'";		
		$this->db->where($where, NULL, FALSE);
		$this->db->order_by('ou.in_org_user_id','DESC');
		$query = $this->db->get();
		
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($query->result_array());die;
		return $query->result_array();	
	}
	
	public function update_organization_user_id($org_id,$user_id)
	{			
		$arrUser = 	array('in_user_id' 	=> $user_id);
		$this->db->where('in_organization_id', $org_id);
		$this->db->update('tbl_organization', $arrUser);
		return $this->db->affected_rows();
	}
	
	public function update_join_organization_user_id($org_user_id,$user_id)
	{			
		$arrUser = 	array('in_user_id' 	=> $user_id);
		$this->db->where('in_org_user_id', $org_user_id);
		$this->db->update('tbl_organization_user', $arrUser);
		return $this->db->affected_rows();
	}
	
	public function update_user_alternate_email_id($merge_in_user_id,$selected_user_id)
	{
		$this->db->select('st_email');
		$this->db->from('tbl_users as u');
		$where = "u.in_user_id =".$selected_user_id."";
		$this->db->where($where, NULL, FALSE);
		$query = $this->db->get();
		//echo $this->db->last_query();//die;
		//echo "<pre>";print_r($query->result_array());die;
		$user_alt_email = $query->row_array();
		//print_r($user_alt_email);exit;
		
		$arr_user = 	array('st_alternate_email' 	=> $user_alt_email['st_email']);
		$this->db->where('in_user_id', $merge_in_user_id);
		$this->db->update('tbl_user_profile', $arr_user);
		
		$user_arr =  array('in_deleted' 	=> '1');
		$this->db->where('in_user_id', $selected_user_id);
		$this->db->update('tbl_users', $user_arr);
		return $this->db->affected_rows();
		
	}
	
	public function get_user_emails($user_email_id,$current_user_id)
	{
		$this->db->select("u.st_email as label, u.in_user_id as value",FALSE);
		$this->db->from('tbl_users u');
		$this->db->where('u.in_deleted','0');
		$this->db->where('u.in_user_id <>',$current_user_id);
		$this->db->where('u.in_status <>','3');
		
		$this->db->where('u.st_email LIKE "'.$user_email_id.'%"',FALSE,FALSE);
		$this->db->limit("15");		
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->label,
									"value"			=> $Row->value);
			}
			return $arrData;
		}
		//return $query->result_array();
	}
	
	public function get_vehicle_detail_by_user_id($current_user_id)
	{
		$this->db->select("uv.in_vehicle_id, uv.in_user_id",FALSE);
		$this->db->from('tbl_user_vehicle uv');
		$this->db->where('uv.in_deleted','0');
		$this->db->where('uv.in_user_id',$current_user_id);		
		//echo $this->db->last_query(); die;
		
		$query = $this->db->get();
		
		return $query->result_array();
	}
	
	public function update_vehicle_user_id($vehicle_id,$user_id,$merge_in_user_id)
	{			
		$this->db->select("uv.st_driver_availability, uv.st_zip_vehicle",FALSE);
		$this->db->from('tbl_user_vehicle uv');
		$this->db->where('uv.in_deleted','0');
		$this->db->where('uv.in_user_id',$user_id);
		$this->db->order_by('uv.in_vehicle_id','DESC');
		$this->db->limit("1");	
		$query = $this->db->get();
		
		$merge_driver_details = $query->row_array();
		
		if(isset($merge_driver_details) && !empty($merge_driver_details))
		{
			$this->db->select("up.st_zip",FALSE);
			$this->db->from('tbl_user_profile up');
			$this->db->where('up.in_deleted','0');
			$this->db->where('up.in_user_id',$merge_in_user_id);
			$query_zip = $this->db->get();
			$merge_driver_zipcode = $query_zip->row_array();
			
			$arr_update = 	array('in_user_id' 	=> $merge_in_user_id, 'st_driver_availability' => $merge_driver_details['st_driver_availability'], 'st_zip_vehicle' => $merge_driver_zipcode['st_zip']);
			$this->db->where('in_vehicle_id', $vehicle_id);
			$this->db->update('tbl_user_vehicle', $arr_update);
			return $this->db->affected_rows();
		}
	}
	
	public function get_all_transportations_by_org_id($org_id)
	{
		$this->db->select("tt.in_transportation_id, tt.in_organization_id, tt.in_trans_coods_id, tt.in_created_by",FALSE);
		$this->db->from('tbl_transportation tt');
		$this->db->where('tt.in_deleted','0');
		$this->db->where('tt.in_organization_id',$org_id);
		
		$query = $this->db->get();
		
		return $query->result_array();
	}
	
	public function update_transport_user_id($transport_id,$transport_coordinator_id,$transport_created_by_id,$user_id,$merge_user_id)
	{		
		$arr_update = array();	
		if($transport_coordinator_id == $user_id && $transport_created_by_id == $user_id)
		{
			$arr_update = 	array('in_trans_coods_id' 	=> $merge_user_id, 'in_created_by' => $merge_user_id);
		}
		
		if($transport_coordinator_id == $user_id && $transport_created_by_id != $user_id)
		{
			$arr_update = 	array('in_trans_coods_id' 	=> $merge_user_id);
		}
		
		if($transport_coordinator_id != $user_id && $transport_created_by_id == $user_id)
		{
			$arr_update = 	array('in_created_by' 	=> $merge_user_id);
		}
		
		if(isset($arr_update) && !empty($arr_update))
		{
			$this->db->where('in_transportation_id', $transport_id);
			$this->db->update('tbl_transportation', $arr_update);
			return $this->db->affected_rows();
		}
	}
	
	
	
	// added by sadique on 09-02-16
	public function get_user_details($userId)
	{   //echo $userId; die;
		$this->db->select('u.in_user_id,u.st_display_name,u.st_last_name,up.st_state,u.st_email,v.st_mname,v.st_age,
		v.st_dl_num,v.fl_have_pets,v.in_num_pets,v.st_vt_name,v.st_vt_off_name,v.st_vt_off_phone,v.st_vt_email,v.fl_animal_volunteer,v.dt_volunteer_from,v.dt_volunteer_to,
		v.st_org_phone,v.st_org_email,v.st_addi_info,v.st_pet_type,v.st_pet_name,v.st_org_name,v.st_info_agree,v.st_info_agree_name,v.in_felony,v.st_ph_with_vet,v.st_driver_license_photo');
		$this->db->from('tbl_users u');		
		$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id','LEFT');	
		$this->db->join('tbl_verification v', 'v.in_user_id=u.in_user_id','LEFT');	
		$this->db->where('u.in_user_id',$userId);	
		$this->db->where('u.in_deleted',0);	
		$this->db->where('up.in_deleted',0);
		//echo $this->db->last_query(); die;
		$query=$this->db->get();
		return $query->row_array();	
		
	}
	// added by sadique on 09-02-16
	public function insertVerifyUser($data)
	{
		$userId = $data['in_user_id'];
		$arrUser = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_user_id', $userId);
		$this->db->update('tbl_verification', $arrUser);
					
		$this->db->insert('tbl_verification',$data);
		$insert_id = $this->db->insert_id();
		return  $insert_id;
	}
		public function verify_transport_create_permission($id)
	{
		$this->db->select('in_organization_id');
		$this->db->from('tbl_organization');
		//$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_user_id',$id);
		$this->db->where('in_deleted', 0);
		$this->db->where('in_status',1);
		$query = $this->db->get()->result_array();
		//echo $this->db->last_query();
		//exit;
		
		if(count($query) > 0)
			return 'true';
		else {
			$this->db->select('in_org_user_id,st_permission');
			$this->db->from('tbl_organization_user');
			//$this->db->where('in_organization_id',$org_id);
			$this->db->where('in_user_id',$id);
			$this->db->where("(st_permission LIKE '%transport_cr%' OR st_permission LIKE '%transport_ed%')", NULL, FALSE);
			$this->db->where('in_deleted', 0);
			$this->db->where('in_status',1);
			$query = $this->db->get()->result_array();
			if(count($query) > 0)
			{
				return 'true';	
			}
			else 
				return 'false';
		}
	}	
	
	
	public function get_user_data($sort,$order,$limit,$rec_per_page)
	{		
				if($this->nativesession->get('searchadmin1')!="")
					$name = $this->nativesession->get('searchadmin1');
				else
					$name = "";
					
					if($this->nativesession->get('searchadmin2')!="")
					$email = $this->nativesession->get('searchadmin2');
				else
					$email = "";

				if($this->nativesession->get('searchadmin3')!="")
					$fromdate = $this->nativesession->get('searchadmin3');
				else
					$fromdate = "";	
					
				if($this->nativesession->get('searchadmin4')!="")
					$todate = $this->nativesession->get('searchadmin4');
				else
					$todate = "";
					
				if($this->nativesession->get('searchadmin5')!="")
					$wid = $this->nativesession->get('searchadmin5');
				else
					$wid = "";

				if($this->nativesession->get('searchadmin6')!="")
					$driver = $this->nativesession->get('searchadmin6');
				else
					$driver = "";

				if($this->nativesession->get('searchadmin7')!="")
					$pilot = $this->nativesession->get('searchadmin7');
				else
					$pilot = "";
					
				if($this->nativesession->get('searchadmin8')!="")
					$foster_home = $this->nativesession->get('searchadmin8');
				else
					$foster_home = "";
					
				if($this->nativesession->get('searchadmin9')!="")
					$photographer = $this->nativesession->get('searchadmin9');
				else
					$photographer = "";
					
				if($this->nativesession->get('searchadmin10')!="")
					$in_person_volunteer = $this->nativesession->get('searchadmin10');
				else
					$in_person_volunteer = "";
					
				if($this->nativesession->get('searchadmin11')!="")
					$virtual_support_volunteer = $this->nativesession->get('searchadmin11');
				else
					$virtual_support_volunteer = "";
				
				if($this->nativesession->get('searchadmin12')!="")
					$airline_volunteer = $this->nativesession->get('searchadmin12');
				else
					$airline_volunteer = "";
				
				if($this->nativesession->get('searchadmin13')!="")
					$organization_name = $this->nativesession->get('searchadmin13');
				else
					$organization_name = "";
					
				if($fromdate=='1969-12-31'){$fromdate='';  }
				if($todate=='1969-12-31'){$todate='';  }	
				$this->db->select("u.in_user_id,
								  u.st_email,
								  u.dt_created,
								  u.dt_modified,
								  u.in_status,
								  u.in_tc_request_board,	
								  u.st_page_referer,
								  u.in_app,
								  u.st_google_uid,
								  up.st_pilot,
								  up.st_driver,
								  up.st_city,
								  up.st_state,
								  up.st_airline_emp,
								  up.st_zip,
								  up.st_arpa_cert,
								  up.st_arpa_cert_foster,
								  up.st_arpa_cert_tnr,
								  up.st_primary_phone,
								  up.in_number_verified,
								  u.st_facebook_uid,
								  concat(u.st_display_name, ' ',u.st_last_name) as st_display_name,
								  u.in_email_verify_status,
								  v.in_verify_id,v.fl_doobert_verified", false);						   	
				$this->db->from('tbl_users u');	
				$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id AND `up`.`in_deleted` = 0','INNER');				
				$this->db->join('tbl_verification as v','u.in_user_id = v.in_user_id AND v.in_deleted = 0 AND v.fl_doobert_verified = 1','LEFT');
				//$this->db->join('tbl_organization as o','u.in_user_id = o.in_user_id AND o.in_deleted = 0 AND o.in_status = 1','LEFT');
				//$this->db->join('tbl_organization_user as ou','u.in_user_id = ou.in_user_id AND ou.in_deleted = 0 AND ou.in_status = 1','LEFT');
				$this->db->where('u.in_deleted','0');
				$this->db->where('u.in_status <>','3');
				
				if(!empty($wid)){
				$this->db->where('u.in_user_from',$wid);	
				}
				
				if($name!= '') {	
							$name = str_replace("%","\%",$name);				
							$this->db->where("concat(u.st_display_name,' ',u.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}

				if($fromdate!='' && $todate!='') {
							$this->db->where("u.dt_created >= '".$fromdate."' AND u.dt_created <= '".$todate. ' 23:59:59'."'", NULL, FALSE);
				}
				
				if(!empty($driver)){
					$this->db->where("up.st_driver = '".$driver."'", NULL, FALSE);
				}
				
				if(!empty($pilot)){
					$this->db->where("up.st_pilot = '".$pilot."'", NULL, FALSE);
				}
				
				if(!empty($foster_home)){
					$this->db->where("up.st_foster_home = '".$foster_home."'", NULL, FALSE);
				}
				
				if(!empty($photographer)){
					$this->db->where("up.st_photographer = '".$photographer."'", NULL, FALSE);
				}
				
				if(!empty($in_person_volunteer)){
					$this->db->where("up.st_in_person_volunteer = '".$in_person_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($st_virtual_support_volunteer)){
					$this->db->where("up.st_driver = '".$virtual_support_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($airline_volunteer)){
					$this->db->where("up.st_airline_emp = '".$airline_volunteer."'", NULL, FALSE);
				}

				if(!empty($organization_name)){
					//$where_org_name = '(o.in_organization_id="'.$organization_name.'" OR ou.in_organization_id="'.$organization_name.'")';
					//$where_org_name = " u.in_user_id IN (SELECT ou.in_user_id FROM tbl_organization_user AS ou INNER JOIN tbl_organization AS o ON ou.in_organization_id = o.in_organization_id AND o.in_deleted = 0 AND o.in_status = 1 AND ou.in_deleted = 0 AND ou.in_status = 1 AND o.in_organization_id='".$organization_name."')";
					$where_org_name = " (u.in_user_id IN (SELECT ou.in_user_id FROM tbl_organization_user AS ou INNER JOIN tbl_organization AS o ON ou.in_organization_id = o.in_organization_id AND o.in_deleted = 0 AND o.in_status = 1 AND ou.in_deleted = 0 AND ou.in_status = 1 AND o.in_organization_id='".$organization_name."') OR u.in_user_id IN (SELECT o.in_user_id FROM tbl_organization AS o WHERE o.in_deleted = 0 AND o.in_status = 1 AND o.in_organization_id='".$organization_name."'))";
					$this->db->where($where_org_name, NULL, FALSE);
				}
				
				$this->db->group_by('u.in_user_id');
						switch($sort)
						{							
							case 'name':								
								$this->db->order_by('u.st_display_name',$order);
							break;

							case 'userid':								
								$this->db->order_by('u.in_user_id',$order);
							break;
							
							case 'email': 								
								$this->db->order_by('u.st_email',$order);
							break;
							
							case 'email_confirmed': 								
								$this->db->order_by('u.in_email_verify_status',$order);
							break;
							
							case 'mobile_number': 								
								$this->db->order_by('up.st_primary_phone ',$order);
							break;

							case 'city': 								
								$this->db->order_by('up.st_city',$order);
							break;
							
							case 'state': 								
								$this->db->order_by('up.st_state',$order);
							break;
							
							case 'createat': 								
								$this->db->order_by('u.dt_created',$order);
							break;	
							
							case 'status': 								
								$this->db->order_by('u.in_status',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('u.st_password',$order);
							break;	
							
							case 'doobert_verified': 								
								$this->db->order_by('v.in_verify_id',$order);
							break;	
							
							case 'referer': 								
								$this->db->order_by('u.st_page_referer',$order);
							break;								
							
							
							case 'arpa_transport': 								
								$this->db->order_by('up.st_arpa_cert',$order);
							break;

							case 'arpa_foster': 								
								$this->db->order_by('up.st_arpa_cert_foster',$order);
							break;

							case 'arpa_tnr': 								
								$this->db->order_by('up.st_arpa_cert_tnr',$order);
							break;								

							default: 								
								$this->db->order_by('st_display_name',$order);
							break;	
								         
						}
					  
					  
					 if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 
					//echo $this->db->last_query(); die;				
					$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{		
							$verify_permission = $this->verify_transport_create_permission($Row->in_user_id);

							$sqluseractivity  = "SELECT dt_created,st_device_info FROM tbl_user_activity  where in_user_id = '".$Row->in_user_id."' order by dt_created desc limit 1";
							$sqlcreateddate	    =	$this->db->query($sqluseractivity);							
							$numrowprostat		=	$sqlcreateddate->num_rows($sqlcreateddate);	
							$sqldtcreated		=	$sqlcreateddate->result();										
							$lastlogin			=	$sqldtcreated[0]->dt_created;
							$deviceinfo			=	$sqldtcreated[0]->st_device_info;
							
							$arrUser[$Row->in_user_id]	=	array('in_user_id'	=> $Row->in_user_id,
											'st_email'							=> $Row->st_email,
											'st_city'							=> $Row->st_city,
											'st_state'							=> $Row->st_state,
											'st_zip'							=> $Row->st_zip,		
											'dt_created'						=> $Row->dt_created,		
											'st_driver'							=> $Row->st_driver,		
											'st_pilot'							=> $Row->st_pilot,
											'st_airline'						=> $Row->st_airline_emp,
											'in_status'							=> $Row->in_status,
											'st_display_name'				    => $Row->st_display_name,
											'facebook_id'						=> $Row->st_facebook_uid,
											'in_verify_id'						=> $Row->in_verify_id,
											'email_confirmed'					=> $Row->in_email_verify_status,
											'doobert_verified'					=> ($Row->fl_doobert_verified==1)?'Yes':'No',
											'st_page_referer'					=> $Row->st_page_referer,
											'in_app'							=> $Row->in_app,
											'arpa_enabled'						=> ($Row->st_arpa_cert == 'Y')?'Yes':'No',
											'cr_ed_trans_permission'			=> (!empty($verify_permission) && $verify_permission == 'true')?'1':'0',
											'request_board_enabled'				=> $Row->in_tc_request_board,
											'arpa_foster_enabled'				=> ($Row->st_arpa_cert_foster == 'Y')?'Yes':'No',
											'arpa_tnr_enabled'					=> ($Row->st_arpa_cert_tnr == 'Y')?'Yes':'No', 						
											'lastlogin'							=> $lastlogin,
											'deviceinfo'						=> $deviceinfo,
											'mobile_number' 					=> $Row->st_primary_phone,
											'is_verified'						=> $Row->in_number_verified,
											'dt_modified'						=> $Row->dt_modified,
											'google_id'							=> $Row->st_google_uid,	
											);
						}
						//print_r($arrUser);die;
						return $arrUser;
					}
					
	}
	
	#======================================================================
	#	Function	:	get_total_deleted_user()
	#   Parameter	: 	name,email
	#	Perpose		:	to get total no of block user from tbl_users table
	#----------------------------------------------------------------------
	public function get_total_deleted_user($name='',$email='')
	{ 	
						  
				$this->db->select("tbl_users.in_user_id", false);						   	
				$this->db->from('tbl_users');				
				$this->db->where('tbl_users.in_deleted','1');
				//$this->db->where('tbl_users.in_status','3');		
				
				if(trim($name)!= '') {			
							$name = str_replace("%","\%",$name);			
							$this->db->where("concat(tbl_users.st_display_name,' ',tbl_users.st_last_name) LIKE '%".$name."%'", NULL, FALSE);					
					}
							
				if($email!=''){	
				$this->db->where("tbl_users.st_email LIKE '%".$email."%'", NULL, FALSE);
				}	  
				$query = $this->db->get();	
				//echo $this->db->last_query();  die;							
				return $query->num_rows();
	}
	
	
		
	#======================================================================
	#	Function	:	get_deleted_user()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email
	#	Perpose		:	to get block user details from tbl_users table
	#----------------------------------------------------------------------
	public function get_deleted_user($sort,$order,$limit,$rec_per_page,$name,$email)
	{
		
		
		/*$sql	= "SELECT tbl_users.in_user_id,
						  tbl_users.st_email,
						  tbl_users.st_display_name						  
				  FROM tbl_users WHERE tbl_users.in_deleted='0' AND  tbl_users.in_status='3'";*/
				  
				$this->db->select("tbl_users.in_user_id,
								   tbl_users.st_email,
								   tbl_users.dt_created,
								   tbl_users.dt_modified,								   
								   tbl_users.st_password,
								   tbl_users.st_facebook_uid,
								   concat(tbl_users.st_display_name,' ',tbl_users.st_last_name) as st_display_name", false);						   	
				$this->db->from('tbl_users');				
				$this->db->where('tbl_users.in_deleted','1');
				//$this->db->where('tbl_users.in_status','3');	  
		
				
				if(trim($name)!= '') {						
							$name = str_replace("%","\%",$name);	
			
							$this->db->where("concat(tbl_users.st_display_name,' ',tbl_users.st_last_name) LIKE '%".$name."%'", NULL, FALSE);						
					}		
				if($email!=''){	
				$this->db->where("tbl_users.st_email LIKE '%".$email."%'", NULL, FALSE);
				}		
						
						
						switch($sort)
						{							
														
							case 'name': 								
								$this->db->order_by('tbl_users.st_display_name',$order);
							break;
								
							case 'email': 								
								$this->db->order_by('tbl_users.st_email',$order);
							break;	
							
							case 'createdat': 								
								$this->db->order_by('tbl_users.dt_created',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('tbl_users.st_password',$order);
							break;
							
							case 'modifiedat': 								
								$this->db->order_by('tbl_users.dt_modified',$order);
							break;	         
						}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 					
					//echo $this->db->last_query();  die;											
					$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrUser[$Row->in_user_id]	=	array('in_user_id'	=> $Row->in_user_id,
											'st_email'							=> $Row->st_email,	
											'dt_created'						=> $Row->dt_created,
											'dt_modified'						=> $Row->dt_modified,											
											'st_display_name'				    => $Row->st_display_name,
											//'st_last_name'				        => $Row->st_last_name,
											'password'							=> $Row->st_password,
											'facebook_id'						=> $Row->st_facebook_uid																													
											);
						}
						return $arrUser;
					}
					
	}
	
	function undelete_user($userId)
	{
		$arrUser = 	array('in_status'=> '1','in_deleted'=> '0');		
		$this->db->where('in_user_id', $userId);
		$this->db->update('tbl_users', $arrUser);		
	}
	
	function check_email_exists($email)
	{ 
		$this->db->select('in_user_id');
		$this->db->from('tbl_users');							
		$this->db->where("st_email",$email);		 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;		
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
	
	function InserUserArchive($userId)
	{		
		$this->db->select('*');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id', $userId);
		$query = $this->db->get();
		$row	=	$query->row_array();		
	    $this->db->insert('tbl_users_archive',$row);			 
	}	
	
	function row_delete($id)
	{
	   $this->db->where('in_user_id', $id);
	   $this->db->delete('tbl_users'); 
	   //echo $this->db->last_query(); die;
	}
	
	public function get_user2($sort,$order,$limit,$rec_per_page)
	{			
	
				if($this->nativesession->get('searchadmin1')!="")
					$name = $this->nativesession->get('searchadmin1');
				else
					$name = "";
					
					if($this->nativesession->get('searchadmin2')!="")
					$email = $this->nativesession->get('searchadmin2');
				else
					$email = "";

				if($this->nativesession->get('searchadmin3')!="")
					$fromdate = $this->nativesession->get('searchadmin3');
				else
					$fromdate = "";	
					
				if($this->nativesession->get('searchadmin4')!="")
					$todate = $this->nativesession->get('searchadmin4');
				else
					$todate = "";
					
				if($this->nativesession->get('searchadmin5')!="")
					$wid = $this->nativesession->get('searchadmin5');
				else
					$wid = "";

				if($this->nativesession->get('searchadmin6')!="")
					$driver = $this->nativesession->get('searchadmin6');
				else
					$driver = "";

				if($this->nativesession->get('searchadmin7')!="")
					$pilot = $this->nativesession->get('searchadmin7');
				else
					$pilot = "";
					
				if($this->nativesession->get('searchadmin8')!="")
					$foster_home = $this->nativesession->get('searchadmin8');
				else
					$foster_home = "";
					
				if($this->nativesession->get('searchadmin9')!="")
					$photographer = $this->nativesession->get('searchadmin9');
				else
					$photographer = "";
					
				if($this->nativesession->get('searchadmin10')!="")
					$in_person_volunteer = $this->nativesession->get('searchadmin10');
				else
					$in_person_volunteer = "";
					
				if($this->nativesession->get('searchadmin11')!="")
					$virtual_support_volunteer = $this->nativesession->get('searchadmin11');
				else
					$virtual_support_volunteer = "";
				
				$this->db->select('u.in_user_id,
								  u.st_email,
								  u.dt_created,
								  u.dt_modified,
								  u.in_status,								 
								  u.st_facebook_uid,
								  u.st_referred_by,
								  u.dt_transport_agree,
								  u.st_display_name,
								  u.st_last_name,
								  up.st_pilot,
								  up.st_driver,
								  up.st_airline_emp,
								  up.st_city,
								  up.st_state,
								  up.st_zip,
								  v.in_verify_id,								 
								  v.dt_doobert_verified', false);								  
				$this->db->from('tbl_users u');	
				$this->db->join('tbl_user_profile as up', 'up.in_user_id=u.in_user_id AND `up`.`in_deleted` = 0','INNER');
				$this->db->join('tbl_verification as v','u.in_user_id = v.in_user_id AND v.in_deleted = 0 AND v.fl_doobert_verified = 1','LEFT');
				$this->db->where('u.in_deleted','0');				
				$this->db->where('u.in_status <>','3');			
				$this->db->order_by('u.in_user_id',$order);
				
				if(!empty($wid)){
				$this->db->where('u.in_user_from',$wid);	
				}
				
				if($name!= '') {	
							$name = str_replace("%","\%",$name);				
							$this->db->where("concat(u.st_display_name,' ',u.st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}

				if($fromdate!='' && $todate!='') {
							$this->db->where("u.dt_created >= '".$fromdate."' AND u.dt_created <= '".$todate. ' 23:59:59'."'", NULL, FALSE);
				}
				
				if(!empty($driver)){
					$this->db->where("up.st_driver = '".$driver."'", NULL, FALSE);
				}
				
				if(!empty($pilot)){
					$this->db->where("up.st_pilot = '".$pilot."'", NULL, FALSE);
				}
				
				if(!empty($foster_home)){
					$this->db->where("up.st_foster_home = '".$foster_home."'", NULL, FALSE);
				}
				
				if(!empty($photographer)){
					$this->db->where("up.st_photographer = '".$photographer."'", NULL, FALSE);
				}
				
				if(!empty($in_person_volunteer)){
					$this->db->where("up.st_in_person_volunteer = '".$in_person_volunteer."'", NULL, FALSE);
				}
				
				if(!empty($st_virtual_support_volunteer)){
					$this->db->where("up.st_driver = '".$virtual_support_volunteer."'", NULL, FALSE);
				}
				
				
				switch($sort)
						{							
							case 'name':								
								$this->db->order_by('u.st_display_name',$order);
							break;

							case 'userid':								
								$this->db->order_by('u.in_user_id',$order);
							break;
							
							case 'email': 								
								$this->db->order_by('u.st_email',$order);
							break;
							
							case 'city': 								
								$this->db->order_by('up.st_city',$order);
							break;
							
							case 'state': 								
								$this->db->order_by('up.st_state',$order);
							break;
							
							case 'createat': 								
								$this->db->order_by('u.dt_created',$order);
							break;	
							
							case 'status': 								
								$this->db->order_by('u.in_status',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('u.st_password',$order);
							break;	
							
							case 'doobert_verified': 								
								$this->db->order_by('v.in_verify_id',$order);
							break;								
							
							default: 								
								$this->db->order_by('u.st_display_name',$order);
							break;	
								         
						}
				
				if(!isset($limit))
				{
					$limit=0;
				}					
				$this->db->limit($rec_per_page,$limit);		
				$query = $this->db->get(); 
				//echo $this->db->last_query();die;
				
				
				
				$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{		
						
							$sqluseractivity  = "SELECT dt_created,st_device_info FROM tbl_user_activity  where in_user_id = '".$Row->in_user_id."' order by dt_created desc limit 1";
							$sqlcreateddate	    =	$this->db->query($sqluseractivity);							
							$numrowprostat		=	$sqlcreateddate->num_rows($sqlcreateddate);	
							$sqldtcreated		=	$sqlcreateddate->result();										
							$lastlogin			=	$sqldtcreated[0]->dt_created;
							$deviceinfo			=	$sqldtcreated[0]->st_device_info;
							
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_user_vehicle');
							$this->db->where('in_user_id',$Row->in_user_id);
							$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();							
							if (isset($row1))
							{
								$driver_modified	=	$row1->dt_modified;
							}else{
								$driver_modified	=	"";
							}
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_user_pilot');
							$this->db->where('in_user_id',$Row->in_user_id);
							$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$pilot_modified	=	$row1->dt_modified;
							}else{
								$pilot_modified	=	"";
							}
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_foster_user_detail');
							$this->db->where('in_user_id',$Row->in_user_id);
							//$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$foster_modified	=	$row1->dt_modified;
							}else{
								$foster_modified	=	"";
							}
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_photographer_detail');
							$this->db->where('in_user_id',$Row->in_user_id);
							//$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$photographer_modified	=	$row1->dt_modified;
							}else{
								$photographer_modified	=	"";
							}
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_in_person_volunteer_detail');
							$this->db->where('in_user_id',$Row->in_user_id);
							//$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$per_vol_modified	=	$row1->dt_modified;
							}else{
								$per_vol_modified	=	"";
							}
							$this->db->select("dt_modified", false);						   	
							$this->db->from('tbl_virtual_support_vol_detail');
							$this->db->where('in_user_id',$Row->in_user_id);
							//$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$vir_vol_modified	=	$row1->dt_modified;
							}else{
								$vir_vol_modified	=	"";
							}
							$this->db->select("group_concat(distinct st_org_name SEPARATOR ', ') as org_owners", false);						   	
							$this->db->from('tbl_organization');
							$this->db->where('in_user_id',$Row->in_user_id);
							$this->db->where('in_status','1');
							$this->db->where('in_deleted','0');
							$this->db->order_by('dt_modified','DESC');
							$this->db->limit(1);
							$query1 = $this->db->get();
							$row1	=	$query1->row();
							if (isset($row1))
							{
								$org_owners	=	$row1->org_owners;
							}else{
								$org_owners	=	"";
							}
							
							
				
							$arrUser[$Row->in_user_id]	=	array('in_user_id'	=> $Row->in_user_id,
											'st_email'							=> $Row->st_email,
											'st_city'							=> $Row->st_city,
											'st_state'							=> $Row->st_state,
											'st_zip'							=> $Row->st_zip,		
											'dt_created'						=> $Row->dt_created,		
											'dt_modified'						=> $Row->dt_modified,
											'st_driver'							=> $Row->st_driver,		
											'st_pilot'							=> $Row->st_pilot,
											'st_airline'						=> $Row->st_airline_emp,											
											'in_status'							=> $Row->in_status,
											'st_display_name'				    => $Row->st_display_name.' '.$Row->st_last_name,																						
											'facebook_id'						=> $Row->st_facebook_uid,
											'driver_modified'					=> $driver_modified,
											'pilot_modified'					=> $pilot_modified,											
											'foster_home_modified'				=> $foster_modified,
											'photographer_modified'				=> $photographer_modified,
											'per_vol_modified'					=> $per_vol_modified,
											'vir_vol_modified'					=> $vir_vol_modified,
											'dt_transport_agree'				=> $Row->dt_transport_agree,
											'in_verify_id'						=> $Row->in_verify_id,
											'doobert_verified'					=> ($Row->fl_doobert_verified==1)?'Yes':'No',
											'dt_doobert_verified'				=>	$Row->dt_doobert_verified,
											'st_referred_by'					=>	trim($Row->st_referred_by)!=''?htmlspecialchars_decode($Row->st_referred_by):'',
											'org_owners'						=>	$org_owners,
											'lastlogin'							=> $lastlogin,
											'deviceinfo'						=> $deviceinfo,
											);
						}
					}
				//echo "<pre>";print_r($arrUser);die;
				return $arrUser;
					
	}

	public function get_organization()
	{
		$this->db->select("org.in_organization_id,org.st_org_name", false);						   	
		$this->db->from('tbl_organization org');					
		$this->db->where('org.in_status','1');
		$this->db->where('org.in_deleted','0');  	
		$query = $this->db->get();
		return 	$query->result_array();
	}	
	
	public function get_total_driver($email='',$orgname='')
	{ 		
					
		$this->db->select("tp.in_tr_pr_id", false);						   	
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join('tbl_transportation t', 't.in_transportation_id = tp.in_transportation_id AND t.in_deleted = 0','INNER');
		$this->db->join('tbl_organization o', 'o.in_organization_id = t.in_organization_id AND o.in_deleted = 0','INNER');
		$this->db->join('tbl_users u', 'u.in_user_id = tp.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->where('tp.in_deleted',0);	
		if($email!='')
		{			
		 $this->db->where("st_email LIKE '%".$email."%'", NULL, FALSE);
		}

		if($orgname!='')
		{			
		 $this->db->where("st_org_name LIKE '%".$orgname."%'", NULL, FALSE);
		}
		//$this->db->group_by('tp.in_transportation_id');	
		
		//$this->db->group_by('tp.in_user_id');
		$this->db->group_by('o.in_organization_id');		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	
	
	public function get_driver($sort,$order,$limit,$rec_per_page,$email,$orgname)
	{				  
		$this->db->select("tp.in_tr_pr_id,u.in_user_id,u.st_email,o.st_org_name,o.in_organization_id,o.st_city,o.st_state");						   	
		$this->db->from('tbl_transportation_participants tp');	
		$this->db->join('tbl_transportation t', 't.in_transportation_id = tp.in_transportation_id AND t.in_deleted = 0','INNER');
		$this->db->join('tbl_organization o', 'o.in_organization_id = t.in_organization_id AND o.in_deleted = 0','INNER');
		$this->db->join('tbl_users u', 'u.in_user_id = tp.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->where('tp.in_deleted',0);
		if($email!='')
		{			
		 $this->db->where("st_email LIKE '%".$email."%'", NULL, FALSE);
		}
		if($orgname!='')
		{			
		 $this->db->where("st_org_name LIKE '%".$orgname."%'", NULL, FALSE);
		}
		//$this->db->group_by('tp.in_transportation_id');	
		//$this->db->group_by('tp.in_user_id');
		$this->db->group_by('o.in_organization_id');		
		//echo $this->db->last_query(); die;

		switch($sort)
					{	
						case 'email': 							
							$this->db->order_by('u.st_email',$order);
						break;
						case 'orgname': 							
							$this->db->order_by('o.st_org_name',$order);
						break;
						case 'city': 							
							$this->db->order_by('o.st_city',$order);
						break;
						case 'state': 							
							$this->db->order_by('o.st_state',$order);
						break;
					}
					  
					  if(!isset($limit))
						{
							$limit=0;
						}	
					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 	
					$arrDriver = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{	
						
						$this->db->select("count(o.in_organization_id) as cnt");						   	
						$this->db->from('tbl_transportation_participants tp');
						$this->db->join('tbl_transportation t', 't.in_transportation_id = tp.in_transportation_id AND t.in_deleted = 0','LEFT');		
						$this->db->join('tbl_organization o', 'o.in_organization_id = t.in_organization_id AND o.in_deleted = 0','LEFT');		
						
						$this->db->where('tp.in_user_id',$Row->in_user_id);
						$this->db->where('o.in_organization_id',$Row->in_organization_id);
						$this->db->where('tp.in_deleted',0);
						$query2 = $this->db->get(); 
						$nooftransports =  $query2->row_array();
						//echo '<pre>'; print_r($nooftransports['cnt']);die;
								
							
								
							$arrDriver[]	=	array('email'			=> $Row->st_email,
													  'org_name'		=> $Row->st_org_name,
													  'nooftransports'	=> $nooftransports['cnt'],
													  'orgid'           => $Row->in_organization_id,
													  'st_city'			=> $Row->st_city,
													   'st_state'		=> $Row->st_state
													  );
						}
						return $arrDriver;						
					}
	}
}
?>