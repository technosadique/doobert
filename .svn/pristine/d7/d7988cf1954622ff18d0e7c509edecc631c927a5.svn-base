<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Org_dashboard_modern extends CI_Controller {

	public function __construct() {
		parent::__construct();
		if($_SERVER['REMOTE_ADDR']=='172.68.144.175' || $_SERVER['REMOTE_ADDR']=='162.158.154.19')
		{
			//$this->output->enable_profiler(TRUE);
		}
		else
		{ 
			$this->output->enable_profiler(FALSE);
		}
		$this->load->library('common_function');
		$this->common_function->check_front_logged_in($this); 
		$this->load->model('common_model');
		$this->load->model('organimal_model');
		$this->load->model('sponsorship_model');
		$this->load->library('pagination');
		$this->load->library('form_validation');		
		$this->load->helper('url');
		//$this->load->helper('cookie');
		$this->load->model('foster_model');
		$this->load->model('partner_model');		
	}	
	
	#=========================================================
	#	Function : index
	#	Purpose  : organization dashboard
	#---------------------------------------------------------
	
	public function index($org_id=false) 
	{ 
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		
		// for find partner organization unset session data on changeing the organization. 
		$this->session->unset_userdata('find_partner1');
        $this->session->unset_userdata('find_partner2');
        $this->session->unset_userdata('find_partner3');
        $this->session->unset_userdata('find_partner4');
		$this->session->unset_userdata('find_partner5');
		$this->session->unset_userdata('find_partner6');

		$user_id = $this->session->userdata('userid');
		
		
		$data = array();
		if($this->uri->segment(2) && $this->uri->segment(2)!='')
			$org_id = $this->uri->segment(2);
		else if($this->session->userdata('org_id') && $this->session->userdata('org_id')!='')
			$org_id = $this->session->userdata('org_id');
		else if($_COOKIE['dev_organization_id'])
		{
			$org_id = $_COOKIE['dev_organization_id'];
			$this->session->set_userdata('org_id',$org_id);
			$this->session->set_userdata('user_org_id',$org_id);
		} else 	
			redirect($this->config->item('base_url'));
			
		$org_list = $this->common_model->get_organization_list($org_id);
		$org_detail = $this->common_model->get_single_org_details($org_id);
		if($org_id != '') { 
			$this->session->set_userdata('org_id',$org_id);
			$this->session->set_userdata('user_org_id',$org_id);				
			$this->session->set_userdata('org_name',$org_list[0]['st_org_name']);
			$this->session->set_userdata('org_zip',$org_detail['st_zip']);
			$this->session->set_userdata('storgtype',$org_detail['st_org_type']);
			$this->session->set_userdata('org_country',$org_detail['st_country']);
			setcookie("dev_organization_id",$org_id,0,"/",'.dev.doobert.com');
		} else {
			$org_id = '';
		}

			
		//echo '<pre>'; print_r($org_list); die;
		if(empty($org_list))
		{  
			redirect($this->config->item('base_url'));
		}
		
		if($this->input->post('dashboard_view_type'))
		{
			$this->session->unset_userdata('dashboard_view_type');
			$this->session->set_userdata('dashboard_view_type',$this->input->post('dashboard_view_type'));
		}
		
		if(!$this->session->userdata('dashboard_view_type'))
		{
			$this->session->set_userdata('dashboard_view_type','N');
		}
		
		if($this->session->userdata('dashboard_view_type')=='O')
		{
			redirect($this->config->item('base_url').'org-dashboard/'.$org_id.'/');
		}
		
		$transport_limit = '0';
		$animal_limit = '0';
		$favorite_limit = '0';
		/*echo "<pre>"; print_r($this->input->post()); echo "</pre>";
		die;*/
		if($this->input->post('pagination_type')=='transport' && $this->input->post('pagination_limit'))
		{	
			if($this->input->post('pagination_limit'))
			{	
				$transport_limit = $this->input->post('pagination_limit');
			}	
		}
		if($this->input->post('pagination_type')=='animal' && $this->input->post('pagination_limit'))
		{	
			if($this->input->post('pagination_limit'))
			{	
				$animal_limit = $this->input->post('pagination_limit');
			}	
		}
		
		if($this->input->post('pagination_type')=='favorite' && $this->input->post('pagination_limit'))
		{	
			if($this->input->post('pagination_limit'))
			{	
				$favorite_limit = $this->input->post('pagination_limit');
			}	
		}
		// $this->session->set_userdata('org_id',$org_id);				
		// $this->session->set_userdata('org_name',$org_list[0]['st_org_name']);
		
		$membership_status = $this->common_model->check_org_arpa($org_id);
		$rec_per_page =10;
		$data['transport_data'] = $this->get_transport_list($org_id,$rec_per_page);	
		if(isset($membership_status) && count($membership_status) > 0)
		{
					$member_ship_status = $membership_status['in_membership'];
					if($member_ship_status == 1)
					{
						$small_image_path = base_url().'assets/img/silver-certified.png';	
					}
					 else if($member_ship_status == 2)
					{
						$small_image_path = base_url().'assets/img/gold-certified.png';	
					}
					else if($member_ship_status == 3)
					{
						$small_image_path = base_url().'assets/img/platinum-certified.png';
					}
					else {
						$small_image_path = base_url().'assets/img/not-rated.png';
					}	
		} else {
						$small_image_path = base_url().'assets/img/not-rated.png';
		}		
		
		$data['small_image_path'] = $small_image_path;
		
		
		$data['donation_detail'] = $this->sponsorship_model->get_donation_summary($org_id);
		$data['events'] = $this->common_model->get_organization_event($this->session->userdata('org_id'));
		$data['transport_events'] = $this->common_model->get_all_transportation($this->session->userdata('org_id'));
		$data['get_user_permission'] = $this->common_model->get_user_permission();
		$data['event_data'] = array_merge($data['events'],$data['transport_events']);		
	
		$data['q1']			=	$this->common_model->get_orgdashboard_banner_detail('O');
		//$data['favorite']		 = $this->get_favorite_partner_list($user_id,$favorite_limit,$rec_per_page);
		$data['favorite_record']   = $this->get_favorite_partner_list($user_id,$favorite_limit,$rec_per_page);
		// animals_dashboard
        $this->session->unset_userdata('quick_call_from');		
        $verify_in_animal_id =  $this->uri->segment(3);
        if(empty($verify_in_animal_id))
		{
			$this->session->unset_userdata('status');
			$this->session->unset_userdata('search_text');
		}
		
        $data['progress_status'] = $this->common_model->get_progress_status();
        if(isset($_POST['search_module']))
		{
            $pstatus          =   $this->input->post('select_status');
            $psearch_text     =   trim($this->input->post('module_search_text'));
            
            $session_data   = array(
                                        'status'        =>  $pstatus,
                                        'search_text'   =>  $psearch_text
                                    );
            $this->session->set_userdata($session_data);
        }

        $status       =   $this->session->userdata('status');
        $search_text         =   $this->session->userdata('search_text');
		$sort='in_animal_id';
        $order ='DESC';
		$data['get_animals'] = $this->get_animal_list($rec_per_page,$this->session->userdata('userid'),$this->session->userdata('org_id'),$sort,$order,$status,$search_text);
        $data['pending_invitation'] = $this->common_model->get_pending_invitation();
	    $data['all_pending_reservation'] = $this->common_model->get_pending_reservation();

		
		
		// learn more video
	  
	    $signup_video		 =	$this->common_model->get_signup_demo_video();
		
		//echo '<pre>'; print_r($signup_video);die;
		foreach($signup_video as $val){				
				$arr_v	=	explode('v=',$val['st_url']);
				$data['signup_video'][$val['id_demo_videos']]	=	$arr_v[1];
		}
       
		$this->load->view('modern-org-dashboard-view.php',$data);
	}
	
	function disp_transport_listing()
	{
		$org_id = $this->session->userdata('org_id');
		
		$rec_per_page = $this->input->post('trans_counter_record')?$this->input->post('trans_counter_record')*10:'10';
		$transport_val = $this->input->post('transport_id')?$this->input->post('transport_id'):'';
		$transport_id = preg_replace('/[^0-9]/', '',$transport_val);
		$transport_detail = $this->get_transport_list($org_id,$rec_per_page,$transport_id);
		$transport_list = $transport_detail['transport_list'];
		$totalrecord 	= $transport_detail['totalrecord'];	
		$transport_html_listing = '';
		$transport_mobile_html_listing = '';
		$data = array();
		if(!empty($transport_list))
        {
			for($a=0;$a<count($transport_list);$a++)
			{
				$all_legs_count = 0;
				$transport_all_legs 	= $this->common_model->get_all_legs_count($transport_list[$a]['in_transportation_id']);
												
				if(isset($transport_all_legs['total_count']) && !empty($transport_all_legs['total_count']))
				{
					$all_legs_count	= $transport_all_legs['total_count'];
				}
												
				$rou_tc_user = $this->common_model->get_user_profile($transport_list[$a]['accTcid']);
												
				if($transport_list[$a]['dt_target'] == '0000-00-00'||$transport_list[$a]['dt_target'] == '1969-12-31' || empty($transport_list[$a]['dt_target'])  )
				{
					$transport_date = date('Y-m-d', strtotime("+7 day"));
				} else {	
					$transport_date = date('Y-m-d', strtotime($transport_list[$a]['dt_target']."+7 day"));
				}
												
				//$transport_date = date('Y-m-d', strtotime($transport_list[$a]['dt_target']."+7 day"));
				$today_date= date('Y-m-d');
				$today_dt = new DateTime($today_date);
				$expire_dt = new DateTime($transport_date);	
				
				if(	($expire_dt  >= $today_dt) && (isset($rou_tc_user) && count($rou_tc_user)>0))
				{	
					$coordinator_name = $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'];
					$email_address    = $rou_tc_user[0]['st_email'];
				} else 
				{
					$coordinator_name = $transport_list[$a]['co_name'];
					//$telephone_number = $transport_details['st_primary_phone'];
					$email_address    = $transport_list[$a]['st_email'];
				}
                                                
				$miles_covered='';
				$total_legs = $this->common_model->get_total_legs_count($transport_list[$a]['in_transportation_id']);
				$transport_filled_data 	= $this->common_model->get_transport_filled_status($transport_list[$a]['in_transportation_id']);
				$total_legs_created = 0;
				//die;
                                                    
				if(isset($transport_filled_data['filled_legs_count']) && !empty($transport_filled_data['filled_legs_count']))
                {
                    $legs_covered = count($transport_filled_data['filled_legs_count']);
                } else {
                    $legs_covered = '0';
                }
													
                if(isset($total_legs) && !empty($total_legs))
                {
					if(isset($transport_filled_data['filled_legs_count']) && !empty($transport_filled_data['filled_legs_count']))
					{
						$total_legs_created	= count($transport_filled_data['filled_legs_count']);
					}
                     
                } else {
                        $total_legs_created = '0';
                }	
                                                    
                if($transport_list[$a]['st_trans_type']== 'P')
				{
                    $total_filled_legs = 0;
                    if(isset($transport_filled_data['filled_legs_count']) && !empty($transport_filled_data['filled_legs_count']))
                    {
                        $total_filled_legs	= count($transport_filled_data['filled_legs_count']);
                        $legs_filled =  ($total_filled_legs/$total_legs)*100;
                        $miles_covered = number_format($legs_filled,"2",".","");
                    } else {
                        $miles_covered='0';
                    }
                } else {
					if($transport_list[$a]['perc']>0)
					{
						if($transport_list[$a]['perc']<100)
						{
                            $miles_covered = $transport_list[$a]['perc'];
						} else
						{
							$miles_covered= "100";
						}
					} else
					{ 
						$miles_covered= "0";
					}	
				}

				$transport_type = '';									
				$img_tag= '';
				$trip ='';									
				$class_name = '';									
				$img_url = '';																		
				if($transport_list[$a]['st_trans_type'] == 'D')									
				{									
					if($transport_list[$a]['in_airline_transport'] == 1)										
					{										
						$class_name = "airline";										
						$img_url = base_url().'modernview/images/icon_dashboard_airline.png';										
						$transport_type = 'Airline';										
					} else {										
						$class_name = "assisted";										
						$img_url = base_url().'modernview/images/icon-assisted.png';										
						$transport_type = 'Assisted';										
					}											
				} else if($transport_list[$a]['st_trans_type'] == 'R') {									
						$class_name = "ride";										
						$transport_type = 'Ride';										
						$img_url = base_url().'modernview/images/icon_dashboard_ride.png';										
						if($transport_list[$a]['in_round']==1){										
							$trip = '(Round Trip)';										
						}										
				} else if($transport_list[$a]['st_trans_type'] == 'RO') {									
						$class_name="route";										
						$transport_type = 'Route';										
						$img_url = base_url().'modernview/images/icon_dashboard_car.png';										
				}else {									
						$class_name="predefined";										
						$img_url = base_url().'modernview/images/icon_dashboard_predefined.png';										
						$transport_type = 'Pre-defined';										
				}
				
				$org_code = ($transport_list[$a]['st_org_code'])? $transport_list[$a]['st_org_code']:'DBT';
				$transportID = $org_code.$transport_list[$a]['in_transportation_id'];
				$transport_html_listing .= '<tr>';
				$transport_html_listing .= 	'<td class="id"><a href="'.base_url().'org-transportation-scheduled/'.$transport_list[$a]['in_transportation_id'].'/" class="'.$class_name.'">'.$transportID.'<span><img src="'.$img_url.'" alt=""/></span></a></td>';
				if(isset($transport_list[$a]['dt_pickup_date']) && $transport_list[$a]['dt_pickup_date']!='1969-12-31' && $transport_list[$a]['dt_pickup_date']!='0000-00-00' &&
					isset($transport_list[$a]['dt_target']) && $transport_list[$a]['dt_target']!='1969-12-31' && $transport_list[$a]['dt_target']!='0000-00-00')
					$transport_html_listing .= 	'<td>'.date("D M d",strtotime($transport_list[$a]['dt_pickup_date'])).' - <br>'.date("D M d",strtotime($transport_list[$a]['dt_target'])).'</td>';
				else 
					$transport_html_listing .= 	'<td>TBD - TBD</td>';
					$transport_html_listing .=	'<td>'.$transport_list[$a]['st_from_city'].', '.$transport_list[$a]['st_from_state'].'<i class="material-icons backspace">arrow_right_alt</i> <i id="iconr" class="material-icons">directions_car</i>'.$transport_list[$a]['st_to_city'].', '.$transport_list[$a]['st_to_state'].'<br>';
				if(isset($transport_list[$a]['st_trans_name']) && $transport_list[$a]['st_trans_name'] != '') 
				{
					$transport_html_listing .=	'<a href="'.base_url()."org-transportation-scheduled/".$transport_list[$a]['in_transportation_id'].'/" class="linkgreyu">'.$transport_list[$a]['st_trans_name'].'</a>';
				}
				$transport_html_listing .=	'</td>';
				$transport_html_listing .=	'<td>'.$all_legs_count.' legs <span class="lightgrey">'.($transport_list[$a]['in_tot_distance']!=''?$transport_list[$a]['in_tot_distance']:"0").' miles</span></td>';
				$transport_html_listing .=	'<td>'.$coordinator_name.'<br><a href="mailto:'.$email_address.'" class="linkgrey">'.$email_address.'</a></td>';
				$transport_html_listing .=	'</tr>';

				$transport_mobile_html_listing .= '<li>';
				$transport_mobile_html_listing .='<div class="id"><a href="'.base_url().'org-transportation-scheduled/'.$transport_list[$a]['in_transportation_id'].'/" class="'.$class_name.'">'.$transportID.'<span><img src="'.$img_url.'" alt=""/></span></a></div>';
				$transport_mobile_html_listing .= '<div class="details">';
						if(isset($transport_list[$a]['dt_pickup_date']) && $transport_list[$a]['dt_pickup_date']!='1969-12-31' && $transport_list[$a]['dt_pickup_date']!='0000-00-00' &&
							isset($transport_list[$a]['dt_target']) && $transport_list[$a]['dt_target']!='1969-12-31' && $transport_list[$a]['dt_target']!='0000-00-00')
							{
				$transport_mobile_html_listing .= '<p class="date">'.date("D M d",strtotime($transport_list[$a]['dt_pickup_date'])).' - <br>'.date("D M d",strtotime($transport_list[$a]['dt_target'])).'</p>';
							} else {
				$transport_mobile_html_listing .= '<p class="date">TBD - TBD</p>';
							}
				$transport_mobile_html_listing .= '<p class="pickdrop">'.$transport_list[$a]['st_from_city'].', '.$transport_list[$a]['st_from_state'].'<i class="material-icons backspace">arrow_right_alt</i> <i id="iconr" class="material-icons">directions_car</i>'.$transport_list[$a]['st_to_city'].', '.$transport_list[$a]['st_to_state'];
								if(isset($transport_list[$a]['st_trans_name']) && $transport_list[$a]['st_trans_name'] != '') 
								{	
				$transport_mobile_html_listing .= '<br><a href="'.base_url()."org-transportation-scheduled/".$transport_list[$a]['in_transportation_id'].'/" class="linkgreyu">'.$transport_list[$a]['st_trans_name'].'</a>';
								}
				$transport_mobile_html_listing .= '</p>';
							
				$transport_mobile_html_listing .= '<p class="legs">'.$all_legs_count.' legs <span class="lightgrey">'.($transport_list[$a]['in_tot_distance']!=''?$transport_list[$a]['in_tot_distance']:"0").' miles</span></p>';
				$transport_mobile_html_listing .= '<p class="coordinator">'.$coordinator_name.'<br><a href="mailto:'.$email_address.'" class="linkgrey">'.$email_address.'</a></p>';
				$transport_mobile_html_listing .= '</div><div class="br"></div></li>';	
															
																		
			}
		} else {
			$transport_html_listing .=	'<tr><td colspan="7">No Record found.</td></tr>';
			$transport_mobile_html_listing .='<li>No Record found.</li>';
		}
		$data['transport_html_listing'] = $transport_html_listing;
		$data['transport_mobile_html_listing'] = $transport_mobile_html_listing;
		$data['load_more'] = (isset($totalrecord) &&  $totalrecord > count($transport_list))?'1':'0';
		echo json_encode($data);	
	}		
	
	public function get_transport_list($org_id,$rec_per_page,$transport_id='')
	{
		$data = array();
		$limit = '0';	
		$transport_detail = $this->common_model->get_transport_list($org_id,$limit,$rec_per_page,$transport_id);
		$data['transport_list'] = $transport_detail['transport_details'];
		$data['totalrecord'] 	= $transport_detail['total_count'];
		return $data;
		
	}
	
	function disp_animal_listing()
	{
		$org_id = $this->session->userdata('org_id');
		
		$rec_per_page = $this->input->post('trans_counter_record')?$this->input->post('trans_counter_record')*10:'10';
		$status       =   $this->session->userdata('status');
        $search_text         =   $this->input->post('animal_name')?$this->input->post('animal_name'):'';
		$sort='in_animal_id';
        $order ='DESC';
		$animal_detail = $this->get_animal_list($rec_per_page,$userid,$this->session->userdata('org_id'),$sort,$order,$status,$search_text);
		$animal_list = $animal_detail['animal_list'];
		$totalrecord 	= $animal_detail['totalrecord'];	
		$animal_html_listing = '';
		$animal_mobile_html_listing = '';
		$data = array();
		if(!empty($animal_list))
        {
			foreach($animal_list as $row)
			{
			
				$i++;
				$UrlTopass_t  =  base_url()."animal-".$row['animal_id']."-".$row['animal_name'];
				$animal_photo = 'doobert-animal-no-image-70.gif';
				if(isset($row['photo']) && $row['photo'] != '0')
				{ 
					if($row['photo']!='' && file_exists($this->config->item('upload')."animal_images/70x70/".$row['photo'])) 
					{
						$animal_photo = $row['photo'];
					}
															
				}
				
				$onclick_event1 = "return get_alert_transfer('".$row['animal_id']."')";
				$onclick_event2 = "return get_alert('".$row['animal_id']."')";
				$checked1 = ($row['in_adopt']==1)?'checked':'';
				$checked2 = ($row['transfer']==1)?'checked':'';
				$ani_date = ($row['pickup_date'] != '')?$row['pickup_date']:$row['transport_date'];
				$animal_html_listing.='<tr>';
				$animal_html_listing.='<td class="paw"><a href="'.base_url().'org_animal/animal_profile_details/'.$row['animal_id'].'"><img src="'.$this->config->item('upload_url').'animal_images/70x70/'.$animal_photo.'" alt=""/></a></td>';
				$animal_html_listing.='<td><a href="'.base_url().'org_animal/animal_profile_details/'.$row['animal_id'].'">'.$row['animal_type_name'].'</strong> - '.$row['animal_name'].'</a></td>';
				$animal_html_listing.='<td>'.$ani_date.'</td>';
				$animal_html_listing.='<td class="center"><div class="switch-container clearfix"><label class="switch float-r-custom"><input type="checkbox" id="checkboxtacceptDogtrans_'.$row['animal_id'].'" onChange="'.$onclick_event1.'" '.$checked1.'><span class="slider round margin-tb0"></span></label></div></td>';
				$animal_html_listing.='<td class="center"><div class="switch-container clearfix"><label class="switch float-r-custom"><input type="checkbox" id="checkboxtacceptDog_'.$row['animal_id'].'" onChange="'.$onclick_event2.'" '.$checked2.'><span class="slider round margin-tb0"></span></label></div></td>';
				$animal_html_listing.='</tr>';

				$animal_mobile_html_listing .='<li>';
				$animal_mobile_html_listing .='<div class="id paw"><a href="'.base_url().'org_animal/animal_profile_details/'.$row['animal_id'].'"><img src="'.$this->config->item('upload_url').'animal_images/70x70/'.$animal_photo.'" alt=""/></a></div>';
				$animal_mobile_html_listing	.='<div class="details">';
				$animal_mobile_html_listing	.='<p class="animalname"><a href="'.base_url().'org_animal/animal_profile_details/'.$row['animal_id'].'">'.$row['animal_type_name'].'</strong> - '.$row['animal_name'].'</a></p>';
				$animal_mobile_html_listing	.='<p class="date"><span>Transport Date:</span>'.$ani_date.'</p>';
				$animal_mobile_html_listing	.='<div class="transfer"><label class="w165">Transfer or Adopt <a href="javascript:void(0);" class="title-tipso question tipso_style mobile" title="Turn on to indicate the animal is available for transfer OR adoption. This will be seen on Doobert and we also post automatically to Facebook both to Doobert FB groups and ones you enter. Watch the LEARN MORE video to the right to learn how."></a></label>
												<div class="switch-container clearfix"><label class="switch float-r-custom"><input type="checkbox" id="checkboxtacceptDogtransmb_'.$row['animal_id'].'" onChange="'.$onclick_event1.'" '.$checked1.'><span class="slider round margin-tb0"></span></label></div><div class="br"></div></div>';
				$animal_mobile_html_listing	.= '<div class="transfer"><label class="w165">Org Transfer Only <a href="javascript:void(0);"  class="title-tipso question tipso_style mobile" title="Turn on to indicate the animal is available ONLY for transfer to another org. This will be seen on Doobert and we also post automatically to Facebook both to Doobert FB groups and ones you enter. Watch the LEARN MORE video to the right to learn how."></a></label>
												<div class="switch-container clearfix"><label class="switch float-r-custom"><input type="checkbox" id="checkboxtacceptDogmb_'.$row['animal_id'].'" onChange="'.$onclick_event2.'" '.$checked2.'><span class="slider round margin-tb0"></span></label></div><div class="br"></div></div>';								
				$animal_mobile_html_listing .='</div><div class="br"></div></li>';	
																		
			}
		} else {
			$animal_html_listing .=	'<tr><td colspan="7">No Record found.</td></tr>';
			$animal_mobile_html_listing .=	'<li>No Record found.</li>';
		}
		$data['animal_html_listing'] = $animal_html_listing;
		$data['animal_mobile_html_listing'] = $animal_mobile_html_listing;
		$data['load_more'] = (isset($totalrecord) &&  $totalrecord > count($animal_list))?'1':'0';
		echo json_encode($data);	
	}
	
	public function get_animal_list($rec_per_page,$userid,$org_id,$sort,$order,$status,$search_text)
	{
		//$transport_detail = $this->common_model->get_transport_list($org_id,$limit,$rec_per_page);
		$data = array();
		$limit = '0';	
		$get_animals = $this->organimal_model->get_all_animals_by_org($rec_per_page,$limit,$userid,$org_id,$sort,$order,$status,$search_text);
		$animal_list   = $get_animals['animal_list'];
		$totalrecord   = $get_animals['num_rows'];
		
		$data['animal_list'] = $animal_list;
		$data['totalrecord'] = $totalrecord;
		return $data;	
	}
	
	function disp_favorite_partner_listing()
	{
		$org_id = $this->session->userdata('org_id');
		
		$rec_per_page = $this->input->post('trans_counter_record')?$this->input->post('trans_counter_record')*10:'10';
		$search_partner = $this->input->post('partner_name')?$this->input->post('partner_name'):'';
		$favorite_limit = '0';
		$favorite_detail = $this->get_favorite_partner_list($this->session->userdata('userid'),$favorite_limit,$rec_per_page,$search_partner);
		$favorite = $favorite_detail['favorite'];
		$totalrecord 	= $favorite_detail['totalrecord'];	
		$partner_html_listing = '';
		$partner_mobile_html_listing = '';
		$data = array();
		if(!empty($favorite))
        {
			foreach($favorite as $key_p => $value_p)
			{
			
				$org_id = $value_p['in_organization_id'];
				$link = base_url().'organization-'.$org_id.'-'.$value_p['st_org_name'];
				$onclick_function = 'onClick="show_animal("'.$value_p['st_zip'].','.$org_id.'");"';
				
				$partner_html_listing.= '<tr>';
				$partner_html_listing.='<td class="heart"><a href="javascript:void(0);" data-value ="'.$org_id.'" onClick="remove_favorite(this)" ><i class="fa fa-heart" aria-hidden="true"></i></a></td>';
				$partner_html_listing.='<td><a href="'.$link.'" class="semibold">'.$value_p['st_org_name'].'</a></td>';
				$partner_html_listing.=	'<td>'.$value_p['st_display_name'].' '.$value_p['st_last_name'].'</td>';
				$partner_html_listing.=	'<td><a href="mailto:'.$value_p['st_email'].'" class="linkgreyu">'.$value_p['st_email'].'</a></td>';
				$partner_html_listing.=	'<td><a href="tel:'.$value_p['st_primary_phone'].'" class="linkgrey">'.$value_p['st_primary_phone'].'</a></td>';
				$partner_html_listing.=	'<td class="show"><a href="javascript:void(0);"'.$onclick_function.'>SHOW AVAILABLE<br>ANIMALS</a></td>';
				$partner_html_listing.= '</tr>';
				
				$partner_mobile_html_listing .='<li>';
				$partner_mobile_html_listing .='<div class="id heart"><a href="javascript:void(0);" data-value ="'.$org_id.'" onClick="remove_favorite(this)"><i class="fa fa-heart" aria-hidden="true"></i></a></div>';
				$partner_mobile_html_listing .='<div class="details">';
				$partner_mobile_html_listing .='<p class="animalname"> <a href="'.$link.'">'.$value_p['st_org_name'].'</a></p>';
				$partner_mobile_html_listing .='<p><span class="semibold">Contact Name:</span>'.$value_p['st_display_name'].' '.$value_p['st_last_name'].'</p>';
				$partner_mobile_html_listing .='<p><span class="semibold">Email:</span> <a href="mailto:'.$value_p['st_email'].'" class="linkgreyu">'.$value_p['st_email'].'</a></p>';
				$partner_mobile_html_listing .='<p><span class="semibold">Phone:</span> <a href="tel:'.$value_p['st_primary_phone'].'" class="linkgrey">'.$value_p['st_primary_phone'].'</a></p>';
				$partner_mobile_html_listing .='<p class="show"><a href="javascript:void(0);" '.$onclick_function.'>SHOW AVAILABLE<br>ANIMALS</a></p>';
				$partner_mobile_html_listing .='</div><div class="br"></div></li>';
																		
			}
		} else {
			$partner_html_listing .=	'<tr><td colspan="7">No Record found.</td></tr>';
			$partner_mobile_html_listing .=	'<li>No Record found.</li>';
		}
		$data['partner_html_listing'] = $partner_html_listing;
		$data['partner_mobile_html_listing'] = $partner_mobile_html_listing;
		$data['load_more'] = (isset($totalrecord) &&  $totalrecord > count($favorite))?'1':'0';
		echo json_encode($data);	
	}
	
	public function get_favorite_partner_list($user_id,$limit,$rec_per_page,$search_partner='')
	{
		$favorite	 = $this->partner_model->get_favorite_partner($user_id,$limit,$rec_per_page,$search_partner);
		//$transport_list = $transport_detail['transport_details'];
		$totalrecord 	= $this->partner_model->get_favorite_partner_count($user_id,$search_partner);
		$data['favorite'] = $favorite;
		$data['totalrecord'] = $totalrecord;
		return $data;
	}

	public function org_dashboard_html($org_id=986) { 

		
		/*if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}*/
		
		// for find partner organization unset session data on changeing the organization. 
		$this->session->unset_userdata('find_partner1');
        $this->session->unset_userdata('find_partner2');
        $this->session->unset_userdata('find_partner3');
        $this->session->unset_userdata('find_partner4');
		$this->session->unset_userdata('find_partner5');
		$this->session->unset_userdata('find_partner6');
		
		
		$data = array();
		if($this->uri->segment(2) && $this->uri->segment(2)!='')
			$org_id = $this->uri->segment(2);
		elseif($this->session->userdata('org_id') && $this->session->userdata('org_id')!='')
			$org_id = $this->session->userdata('org_id');
		else	
			$org_id = '';
			
		$org_list = $this->common_model->get_organization_list($org_id);

		if($org_id != '') { 
			$this->session->set_userdata('org_id',$org_id);	
			$this->session->set_userdata('user_org_id',$org_id);			
			$this->session->set_userdata('org_name',$org_list[0]['st_org_name']);

		} else {
			$org_id = '';
		}		
		//echo '<pre>'; print_r($org_list); die;
		/*if(empty($org_list))
		{  
			redirect($this->config->item('base_url'));
		}*/
		
		// $this->session->set_userdata('org_id',$org_id);				
		// $this->session->set_userdata('org_name',$org_list[0]['st_org_name']);
		$transport_list = $this->common_model->get_transport_list($org_id);
		//echo "<pre>";print_r($transport_list);die;
		$data['transport_list'] = $transport_list;
		
			$membership_status = $this->common_model->check_org_arpa($org_id);
				
		if(isset($membership_status) && count($membership_status) > 0)
		{
					$member_ship_status = $membership_status['in_membership'];
					if($member_ship_status == 1)
					{
						$small_image_path = base_url().'assets/img/silver-certified.jpg';	
					}
					 else if($member_ship_status == 2)
					{
						$small_image_path = base_url().'assets/img/gold-certified.jpg';	
					}
					else if($member_ship_status == 3)
					{
						$small_image_path = base_url().'assets/img/platinum-certified.jpg';
					}
					else {
						$small_image_path = '';
					}	
		} else {
						$small_image_path = '';
		}		
		
		$data['small_image_path'] = $small_image_path;
		
		
		$data['donation_detail'] = $this->sponsorship_model->get_donation_summary($org_id);
		$data['events'] = $this->common_model->get_organization_event($this->session->userdata('org_id'));
		$data['transport_events'] = $this->common_model->get_all_transportation($this->session->userdata('org_id'));
		$data['get_user_permission'] = $this->common_model->get_user_permission();
		
		//echo '<pre>'; print_r($data['transport_events']); die;
		$data['event_data'] = array_merge($data['events'],$data['transport_events']);		
		//echo '<pre>'; print_r($data['event_data']); die;
		//$this->load->view('organization-dashboard',$data);  
		
		$data['q1']			=	$this->common_model->get_orgdashboard_banner_detail('O');	
        //echo '<pre>'; print_r($data['q1']); die;		
		$this->load->view('org_dashboard_html',$data);
	}
	
	#=========================================================
	#	Function : org_photo_upload
	#	Purpose  : Changing organization photo
	#=========================================================
	
	public function org_photo_upload() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'org_doc/';
		$config['max_size']			= '1024';
		$config['image_width']		= '300';
		$config['image_height']		= '300';
		$config['allowed_types']	= 'jpg|png|gif';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.$this->session->userdata('org_id').'_'.mt_rand().'_'.$_FILES['org_profile_photo']['name']);
		
		//Initialization
		$this->upload->initialize($config);
			
		//RW permission to upload folder.
		//chmod($this->config->item('upload')."org_doc/", 0777);
		
		//Upload image by calling do_upload method.
		$this->upload->do_upload('org_profile_photo');
		$file_errors = array('errors' => $this->upload->display_errors());
		
		//Display errors of file upload.
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			$this->session->set_flashdata($data);
			
			redirect(base_url().'org-dashboard/'.$this->session->userdata('org_id'));
		}
		
		/*$img_data = getimagesize($this->config->item('upload').'org_doc/'.$config['file_name']);
		
		if($img_data[0] <= 300 || $img_data[1] <= 300) {
			$data = array('resize_error' => 'Image max height & width must be more than 300 X 300');
			$this->session->set_flashdata($data);
			redirect(base_url().'org-dashboard/'.$this->session->userdata('org_id'));
		}*/
				
		//Resize the image with ratio (4 Thumbnails)
		$thumb = array(	'thumb'			=>	'181',
						'small_thumb'	=>	'115',
						'36x36'			=>	'36',
						'63x63'			=>	'63'
					);
		
		foreach($thumb as $key => $value) {
			$config['image_library'] 	= 'gd2';
			$config['source_image']		= $this->config->item('upload').'org_doc/'.$config['file_name'];
			$config['new_image']		= $this->config->item('upload').'org_doc/'.$key.'/'.$config['file_name'];
			$config['maintain_ratio'] 	= TRUE;
			$config['width']	 		= $value;
			$config['height']			= $value;
			
			$this->load->library('image_lib');
			$this->load->library('image_lib', $config); 
			$this->image_lib->initialize($config);
			$this->image_lib->resize();
		}
		
		/*$config['image_library'] 	= 'gd2';
		$config['source_image']		= $this->config->item('upload').'org_doc/'.$config['file_name'];
		$config['new_image']		= $this->config->item('upload').'org_doc/thumb/'.$config['file_name'];
		$config['maintain_ratio'] 	= TRUE;
		$config['width']	 		= 181;
		$config['height']			= 181;
		
		$this->load->library('image_lib');
		$this->load->library('image_lib', $config); 
		$this->image_lib->initialize($config);
		$this->image_lib->resize();
		
		//Resize the image with ratio (Thumbnail2)
		$config['image_library'] 	= 'gd2';
		$config['source_image']		= $this->config->item('upload').'org_doc/'.$config['file_name'];
		$config['new_image']		= $this->config->item('upload').'org_doc/small_thumb/'.$config['file_name'];
		$config['maintain_ratio'] 	= TRUE;
		$config['width']	 		= 115;
		$config['height']			= 115;
		
		$this->load->library('image_lib');
		$this->load->library('image_lib', $config); 
		$this->image_lib->initialize($config);
		$this->image_lib->resize();*/
		
		//Updating data
		$data['picture'] = array('st_org_image' => $config['file_name']);
		$data['upload_photo'] = $this->common_model->update_org_data($data['picture']);
		
		if($data['upload_photo'] == 1) {
			redirect(base_url().'org-dashboard/'.$this->session->userdata('org_id'));
		}
	}
	
	#=========================================================
	#	Function : organization_event_detail
	#	Purpose  : Getting Evenets for current organization
	#=========================================================
	
	public function organization_event_detail($id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['event_detail'] = $this->common_model->get_event_detail($id);
		
		if(empty($data['event_detail'])) {
			redirect(base_url().'org-dashboard/'.$this->session->userdata('org_id'));
		}
	
		$data['events'] = $this->common_model->get_organization_event($this->session->userdata('org_id'));
		$data['transport_events'] = $this->common_model->get_all_transportation($this->session->userdata('org_id'));
		$data['get_user_permission'] = $this->common_model->get_user_permission();
		$data['event_data'] = array_merge($data['events'],$data['transport_events']);
		
		$this->load->view('organization_event_detail',$data);
	}
	
	#=========================================================
	#	Function : add_organization_event
	#	Purpose  : Adding an organization event
	#=========================================================
	
	public function add_organization_event() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		if($this->input->post('frm_action') == 'add_event') {
		
			$req_fields = array(	array('field'   => 'event_title',		'label'  => 'Event Title',				'rules' => 'required|trim'),
									array('field'   => 'event_from_date', 	'label'  => 'Event From Date', 	'rules' => 'required|trim'),
									array('field'   => 'event_to_date', 	'label'  => 'Event To Date', 	'rules' => 'required|trim'),
									array('field'   => 'event_time', 		'label'  => 'Event Time', 	'rules' => 'required|trim'),
									array('field'   => 'event_timezone',	'label'  => 'Event Timezone',		'rules' => 'required|trim'),
									array('field'   => 'event_desc', 		'label'  => 'Event Description', 	'rules' => 'required|trim'),
									array('field'   => 'event_zip', 		'label'  => 'Event Zip', 	'rules' => ''),
									array('field'   => 'event_city', 		'label'  => 'Event City', 	'rules' => ''),
									array('field'   => 'event_state', 		'label'  => 'Event State', 	'rules' => ''),
									array('field'   => 'event_country', 		'label'  => 'Event Country', 	'rules' => ''),
									array('field'   => 'event_address1', 		'label'  => 'Event Address1', 	'rules' => ''),
									array('field'   => 'event_address2', 		'label'  => 'Event Address2', 	'rules' => '')
								);
			$this->form_validation->set_rules($req_fields);
		}
		
		if ($this->form_validation->run() == FALSE) {
			// Validation Error				
			$data['error_msg'] = validation_errors();
			$this->load->view('organization-add-event',$data);
		} else {
			//Convert date into minutes & seconds
			$event_time = date('H:i:s',strtotime($this->input->post('event_time')));
			
			//Adding Event Data
			$data['event_data'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
										'st_event_title'		=>	$this->input->post('event_title'),
										'dt_start'				=>	date('Y-m-d H:i:s',strtotime($this->input->post('event_from_date').' '.$event_time)),
										'dt_end'				=>	date('Y-m-d',strtotime($this->input->post('event_to_date'))),
										'st_timezone'			=>	$this->input->post('event_timezone'),
										'st_address1'			=>	$this->input->post('event_address1'),
										'st_address2'			=>	$this->input->post('event_address2'),
										'st_city'				=>	$this->input->post('event_city'),
										'st_state'				=>	$this->input->post('event_state'),
										'st_country'			=>	$this->input->post('event_country'),
										'st_zip'				=>	$this->input->post('event_zip'),
										'st_event_desc'			=>	$this->input->post('event_desc'),
										'in_created_by'			=>	$this->session->userdata('userid'),
										'in_modified_by'		=>	$this->session->userdata('userid'),
										'dt_created'			=>	date('Y-m-d H:i:s'),
										'dt_modified'			=>	date('Y-m-d H:i:s'),
										'in_status'				=>	'1'
									);
			$data['add_event'] = $this->common_model->add_event($data['event_data']);
			
			$this->session->set_flashdata('add_event','Event Added Successfully. <a href="'.base_url().'org-dashboard">Click Here</a>');
			redirect(base_url().'add-organization-event');
		}
	}
	
	#=========================================================
	#	Function : create_ical
	#	Purpose  : Creating ICal
	#=========================================================
	
	public function create_ical() {
		
		$data = array();
		
		$data['all_events']	= $this->common_model->get_all_org_events($this->session->userdata('org_id'));
		
		$data['transport_events'] = $this->common_model->get_all_transportation($this->session->userdata('org_id'));
		$data['event_data'] = array_merge($data['all_events'],$data['transport_events']);
		//echo "<pre>"; print_r($data['event_data']);die;
		$fcreated = '';
		$ics_contents  = "BEGIN:VCALENDAR\n";
		$ics_contents .= "PRODID:-//Google Inc//Google Calendar 70.9054//EN\n";
		$ics_contents .= "VERSION:2.0\n";
		$ics_contents .= "CALSCALE:GREGORIAN\n";		
		$ics_contents .= "METHOD:PUBLISH\n";
		$ics_contents .= "X-WR-CALNAME:Doobert_events_".$this->session->userdata('org_id')."\n";		
		$ics_contents .= "X-WR-CALDESC:\n";
		$ics_contents .= "X-WR-TIMEZONE:America/Chicago\n";
		$ics_contents .= "BEGIN:VTIMEZONE\n";
		$ics_contents .= "TZID:America/Chicago\n";
		$ics_contents .= "END:VTIMEZONE\n";
		if(!empty($data['event_data'])) {
			foreach($data['event_data'] as $key=>$events) {
				
			  $id            = date('Ymdhis');//mt_rand();
			  $start_date    = date('Y-m-d',strtotime($events['start_date']));
			  $start_time    = date('h:i:s',strtotime($events['start_date']));
			  $end_date      = date('Y-m-d',strtotime($events['end_date']));
			  $end_time      = date('h:i:s',strtotime($events['end_date']));
			  $description	 = '';
			  $summary = '';
			  
			  # Remove '-' in $start_date and $end_date
			  $estart_date   = str_replace("-", "", $start_date);
			  $eend_date     = str_replace("-", "", $end_date);
			 
			  # Remove ':' in $start_time and $end_time
			  $estart_time   = str_replace(":", "", $start_time);
			  $eend_time     = str_replace(":", "", $end_time);
			  
			  //$ics_contents .= "BEGIN:VEVENT\n";
			  if(isset($events['tr_title'])) {
				  $ics_contents .= "BEGIN:VEVENT\n";		  
				  $ics_contents .= "DTSTART:".$estart_date."T".$estart_time. "\n";		
				  $ics_contents .= "DTEND:".$eend_date."T".$eend_time. "\n";
				  $ics_contents .= "DTSTAMP:" . date('Ymd') . "T". date('his') . "Z\n";		  
				  $ics_contents .= "UID:"     . $id . "\n";
				  //$ics_contents .= "CREATED:"     . date('Ymd') . "T". date('His') . "Z\n";
				  if($events['in_status'] == 1) {
				  	$ics_contents .= "DESCRIPTION: "     . $events['location'].", URL: ".base_url().'org-transportation-scheduled/'.$events['tr_title']. "\n";
				  } else if($events['in_status'] == 2) {
					$ics_contents .= "DESCRIPTION: "     . $events['location'].", URL: ".base_url().'org-confirm-transport/'.$events['tr_title']. "\n";  
				  } else {
					$ics_contents .= "DESCRIPTION: "     . $events['location'].", URL: ".base_url().'org-cancel-transport/'.$events['tr_title']. "\n";
				  }
				  //$ics_contents .= "LAST-MODIFIED:"     . date('Ymd') . "T". date('His') . "Z\n";		  
				  $ics_contents .= "LOCATION:"    . $events['location'] . "\n";
				  //$ics_contents .= "SEQUENCE:5\n";
				  $ics_contents .= "SUMMARY:#DBT" . $events['tr_title'] . "\n";
				  
				  $ics_contents .= "TRANSP:OPAQUE\n";
				  $ics_contents .= "END:VEVENT\n";
				  
			  } else {
				  $ics_contents .= "BEGIN:VEVENT\n";		  
				  $ics_contents .= "DTSTART:".$estart_date."T".$estart_time. "\n";		
				  $ics_contents .= "DTEND:".$eend_date."T".$eend_time. "\n";
				  $ics_contents .= "DTSTAMP:" . date('Ymd') . "T". date('his') . "Z\n";		  
				  $ics_contents .= "UID:"     . $id . "\n";
				  //$ics_contents .= "CREATED:"     . date('Ymd') . "T". date('His') . "Z\n";
				  $ics_contents .= "DESCRIPTION:" . $events['description'] . "\n";
				  //$ics_contents .= "LAST-MODIFIED:"     . date('Ymd') . "T". date('His') . "Z\n";		  
				  $ics_contents .= "LOCATION:"    . $events['location'] . "\n";
				  //$ics_contents .= "SEQUENCE:5\n";
				  $ics_contents .= "SUMMARY:"     . $events['title'] . "\n";
				  $ics_contents .= "TRANSP:OPAQUE\n";
				  $ics_contents .= "END:VEVENT\n";
			  }
			}
		}
		$ics_contents .= "END:VCALENDAR\n";
		
		# File to write the contents
		$ics_file   = 'ical/doobert_events_'.$this->session->userdata("org_id").'.ics'; 
				
			//if (file_exists ( $ics_file ) &&  is_writable($ics_file)) {
	  if (!$handle = fopen($ics_file, 'w')) {
		 $response = "Cannot open file ($ics_file)\n\n";
		 exit;
	  }
	 
	  # Write $ics_contents to opened file
	  if (fwrite($handle, $ics_contents) === FALSE) {
		$response = "Cannot write to file ($ics_file)\n\n";
		exit;
	  }
	 
	   fclose($handle);
	   echo "Success, wrote to <b>".$ics_file."</b><br>\n\n";
		
	   $fcreated .=  "File Created : <b>".$ics_file."</b><br>\n\n";
	   echo $fcreated;
	}
	
	function dateToCal($timestamp) {
  		return date('Ymd\THis\Z', $timestamp);
	}
 
	// Escapes a string of characters
	function escapeString($string) {
  		return preg_replace('/([\,;])/','\\\$1', $string);
	}
	
	# *******************************************************************************************	
	#	Function	:	user_profile_pic_upload
	#	Purpose		:	Uploading files with ajax
	# *******************************************************************************************
	
	public function org_profile_pic_upload() {
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'org_doc/';
		$config['max_size']			= '5120';
		$config['image_width']		= '300';
		$config['image_height']		= '300';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.$this->session->userdata('org_id').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']);
		
		$lastDot = strrpos($_FILES[$this->input->post('file_name')]['name'], ".");
		$_FILES[$this->input->post('file_name')]['name'] = str_replace(".", "", substr($_FILES[$this->input->post('file_name')]['name'], 0, $lastDot)) . substr($_FILES[$this->input->post('file_name')]['name'], $lastDot);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
	
		
		
		//Initialization
		$this->upload->initialize($config);
			
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload($this->input->post('file_name'));
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 
		
		echo "{";
		echo "file_name: '" . $config['file_name'] . "'\n";
		echo "}";
	}
	
	
	public function update_org_profile_pic() {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$this->load->library('upload');
		
		$xaxis = '';
		$yaxis = '';
		$height = '';
		$width = '';
		
		//echo 'uploaded_photo1'.$this->input->post('uploaded_photo1');
		//exit;
						
		if($this->input->post('org_uploaded_photo1') != '') {
			$photo1 = $this->input->post('org_uploaded_photo1');
		}
	
		if(isset($photo1)) 
		{
			
			$img_name_array = explode('.', $photo1);
			$img_extension = end($img_name_array);
			$image_name = current(explode('.', $photo1)); 
			 
			if($img_extension == "JPE" || $img_extension == "jpe")
			{
				$new_image_name = $image_name.'.jpg';
				$image = imagecreatefromjpeg($this->config->item('upload') . 'org_doc/' . $photo1);
				imagejpeg($image, $this->config->item('upload') . 'org_doc/' . $new_image_name);
				$photo1 =  $new_image_name;
			}
			
			$rotate_angle = $this->input->post('org_rotate_angle1');
			$xaxis = $this->input->post('org_x1');
			$yaxis = $this->input->post('org_y1');
			$height = $this->input->post('org_h1');
			$width = $this->input->post('org_w1');
			
			$config['file_name'] = $photo1;
			
			$this->load->library('image_lib');
			
			if($rotate_angle < 0 ) {
				$rotate_angle	=	360+$rotate_angle;
			}
			
			//rotate image if 90 or 270 deg rotation 
			//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
			if($rotate_angle > 0 )
			{
				if($rotate_angle == 90)
				{
					$rotate_angle = 270;
				}
				else if($rotate_angle == 270){
					$rotate_angle = 90;
				}
				
				$config['image_library'] = 'gd2';
				$config['source_image']	= $this->config->item('upload').'org_doc/'.$config['file_name'];
				$config['rotation_angle'] = $rotate_angle;
				
				$this->image_lib->initialize($config);
				if ( ! $this->image_lib->rotate()) {
					echo $this->image_lib->display_errors();
				}
			}
			$this->image_lib->clear();
			
			//code to fix image orientation for iphone mobile pic starts
			$this->correctImageOrientation($this->config->item('upload').'org_doc/'.$config['file_name']);
			//code to fix image orientation for iphone mobile pic ends
			
			//Cropping Image
			$config['image_library'] = 'gd2';
			$config['source_image']	= $this->config->item('upload').'org_doc/'.$config['file_name'];
			$config['new_image']	= $this->config->item('upload').'org_doc/cropped_images/'.$config['file_name'];
			$config['maintain_ratio'] 	= FALSE;
			$config['x_axis'] = $xaxis;
			$config['y_axis'] = $yaxis;					
			$config['width'] = $width;
			$config['height'] = $height;
			
			$this->image_lib->initialize($config); 
			if ( ! $this->image_lib->crop()) {
				echo $this->image_lib->display_errors();
			}
			$this->image_lib->clear();
				
			//Resize the image with ratio (4 Thumbnails)
			$thumb = array(	'thumb'			=>	'181X181',
						'small_thumb'	=>	'115X115',
						'36x36'			=>	'36X36',
						'63x63'			=>	'63X63'
					);
					
			foreach($thumb as $key => $value) {
				$exp_value = explode('X',$value);
				
				//Resizing Image
				$config['image_library'] 	= 'gd2';
				$config['source_image']		= $this->config->item('upload').'org_doc/cropped_images/'.$config['file_name'];
				$config['new_image']		= $this->config->item('upload').'org_doc/'.$key.'/'.$config['file_name'];
				$config['maintain_ratio'] 	= TRUE;
				$config['width']	 		= $exp_value[0];
				$config['height']			= $exp_value[1];
				
				$this->image_lib->initialize($config);
				$this->image_lib->resize();
				$this->image_lib->clear();
				
			}
			
			$file_errors = array('errors' => $this->image_lib->display_errors());
			
			//Display errors of file upload.
			if(!empty($file_errors['errors'])) {
				$data = array('upload_error' => strip_tags($file_errors['errors']));
				$this->session->set_flashdata($data);
				
				redirect(base_url().'org-dashboard/'.$this->session->userdata('org_id'));
			}
			
			//Updating data
			$data['picture'] = array('st_org_image' => $config['file_name']);
			$data['upload_photo'] = $this->common_model->update_org_data($data['picture']);
			
			if($data['upload_photo'] == 1) {
				redirect(base_url().'org-modern-dashboard/'.$this->session->userdata('org_id').'/');
			}
			
		}
	}
	
	//this is for the foster home volunteer search functions..

	public function foster_home_volunteer_search($limit = false)
	{
		  if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }

        //$this->load->library('pagination');
        $this->session->unset_userdata('searchadmin1');
		$zipcode = $this->session->userdata('zip');
		$this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        $this->session->unset_userdata('searchadmin2');
		$radius = '50';
		$this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        $this->session->unset_userdata('searchadmin3');
        $this->session->unset_userdata('searchadmin4');
        $this->session->unset_userdata('searchadmin5');
        $this->session->unset_userdata('searchadmin6');
		$this->get_foster_volunteer_search();
	}
	
	 public function get_foster_volunteer_search($limit = false){
      

        //echo $this->uri->segment(3);die;
        $data = array();
        $data['Err_Msg'] = '';
        $zipcode = '';
        $radius = '';
        $otherhouseholdanimal = '';
        $data['animal_type'] = $this->common_model->get_animal_types();
        //echo '<pre>'; print_r($data['animal_type']); die;		


        if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
        if ($this->input->post('txtsearchzipcode')) {
            if ($this->session->userdata('searchadmin1'))
                $this->session->unset_userdata('searchadmin1');
				
					
			$zip_code = $this->input->post('txtsearchzipcode');
			$zip_code = str_replace(" ","",$zip_code);
			$_POST['txtsearchzipcode'] = strtoupper($zip_code);		
			$zipcode = trim(addslashes($this->input->post('txtsearchzipcode')));
            $this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        }
        if ($this->input->post('txtsearchradius')) {
            if ($this->session->userdata('searchadmin2'))
                $this->session->unset_userdata('searchadmin2');

            $radius = trim(addslashes($this->input->post('txtsearchradius')));
            $this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        }

        if ($this->input->post('txtsearchmaxnumber')) {
            if ($this->session->userdata('searchadmin3'))
                $this->session->unset_userdata('searchadmin3');

            $maxnumber = trim(addslashes($this->input->post('txtsearchmaxnumber')));
            $this->session->set_userdata('searchadmin3', $this->common_function->custom_htmlentities($maxnumber));
        }

        if ($this->input->post('txtsearchanimaltype')) {
            if ($this->session->userdata('searchadmin4'))
                $this->session->unset_userdata('searchadmin4');

            $animaltype = trim(addslashes($this->input->post('txtsearchanimaltype')));
            $this->session->set_userdata('searchadmin4', $this->common_function->custom_htmlentities($animaltype));
        }

        if ($this->input->post('txtsearchduration')) { 
            if ($this->session->userdata('searchadmin5'))
                $this->session->unset_userdata('searchadmin5');

            $duration = trim(addslashes($this->input->post('txtsearchduration')));
            $this->session->set_userdata('searchadmin5', $this->common_function->custom_htmlentities($duration));
        }

        if ($this->input->post('txtsearchmaxsize')) {
            if ($this->session->userdata('searchadmin6'))	
                $this->session->unset_userdata('searchadmin6');

            $maxsize = trim(addslashes($this->input->post('txtsearchmaxsize')));
            $this->session->set_userdata('searchadmin6', $this->common_function->custom_htmlentities($maxsize));
        }
	//	print_r($this->input->post('household_animals'));
        if ($this->input->post('household_animals')) {
            $householdanimal = array();
            $data['householdanimal'] = $this->input->post('household_animals');
            $otherhouseholdanimal = implode(',', $this->input->post('household_animals'));
         //  echo $otherhouseholdanimal; die;
        }


       // $rec_per_page = $this->config->item('per_page');
	   	$rec_per_page =12;	
		
		 // GET COUNT of TOTAL RECORDS
        // $totalrecord = $this->foster_model->get_total_foster($this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin4'), $this->session->userdata('searchadmin5'), $this->session->userdata('searchadmin6'), $otherhouseholdanimal);
         $totalrecord = $this->foster_model->get_foster($limit, $rec_per_page, $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin4'), $this->session->userdata('searchadmin5'), $this->session->userdata('searchadmin6'), $otherhouseholdanimal,2);

        $data['foster_list1'] = $this->foster_model->get_foster($limit, $rec_per_page, $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin4'), $this->session->userdata('searchadmin5'), $this->session->userdata('searchadmin6'), $otherhouseholdanimal);
       // echo '<pre>'; print_r($data['foster_list1']); die;
       $data['foster_list']='';
	  
	// ------------------------ PAGINATION STARTS HERE -----------------------------
        $config["base_url"] = base_url() . 'org_dashboard/get_foster_volunteer_search';
        $config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Prev';
        //$config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
		 $config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        //$config['next_tag_open'] = '<li class="next" onClick="return getAjaxdata()"  >';
		$config['next_tag_open'] = '<li class="next">';
        $config['next_tag_close'] = '</li>';

        //$config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
		$config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

      
		
		 //$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
		$config['cur_tag_open'] = '<li class="active"><a href="" >';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
        // ------------------------ PAGINATION ENDS HERE -------------------------------		
        // SET DATA to MAINTAIN record track on any action			
        $data['limit'] = $limit;
        $this->session->set_userdata('a_limit', $limit);
        if ($totalrecord == 0) {
            $data['Err_Msg'] = 'No Record(s) Found!';
        }
		
		if($this->input->post('getmap')) // map data send only first load page and search page 
		{
			$all=1;
			$allfoster = $this->foster_model->get_foster($this->input->post('limit'), $rec_per_page , $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin4'), $this->session->userdata('searchadmin5'), $this->session->userdata('searchadmin6'), $otherhouseholdanimal , $all);
		
		if($this->session->userdata('zip') == $zipcode){			
			$user_lat_long =$this->organimal_model->get_user_latlong($this->session->userdata('zip'));	
			}
			else {
			$user_lat_long =$this->organimal_model->get_user_latlong($zipcode);
			}
				
		if (!empty($allfoster)) {

            //echo '<pre>'; print_r($data['foster_list']);die;
            $f = $ph = $pd = $u = $v = $d = $p = $l='';
			$finalstring = '';
            foreach ($allfoster as $row) {

                //echo '<pre>'; print_r($row);die;
                $data['name'][] = $this->common_function->custom_addslashes($row['st_display_name']);
              //  $data['latlong'][] = '["' . $this->common_function->custom_addslashes($row['st_display_name']) . '",' . $row['lat'] . ',' . $row['lon'] . ']';

				$data['latlong'][] = '["' . $row['st_display_name'] . '",' . $row['lat'] . ',' . $row['lon'] . ']';
                $animaltype = $row['st_animal_type_name'];
                $fosterduration = $row['fosterduration'];
                $days = $row['st_maximum_foster_days'];
                $size = $row['st_maximum_foster_size'];
                $otheranimal = $row['st_household_other_animals'];
                $username = $row['st_display_name'];
                $stemail = $row['st_email'];
				$vertitle='';
				//print_r($row['verified']['dt_doobert_verified']);/*[in_user_id] => 18
   /* [dt_doobert_verified] => 2016-02-10
				die;*/
				if(!empty($row['verified'])){
					$verified_url =  base_url().'assets/img/small_doobert_verified_logo.jpg' ; 
					
					}else {
					$verified_url =  base_url().'assets/img/gray_logo.jpg' ;	
					}
				$vertitle = ( isset($row['verified']) && $row['verified'] != '0000-00-00')?date('F d, Y',strtotime($row['verified'])):'';
                //$fosterid=$row['in_foster_animal_detail_id'];	
                if ($row['st_profile_image'] == '') {
                    $path = $this->config->item('upload_url') . "profile/63x63/no_photo.png";
                } else {
                    $path = $this->config->item('upload_url') . "profile/63x63/" . $row['st_profile_image'];
                }
				if(!empty($row['arpa_cert']) && $row['arpa_cert'] =='Y') { 
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified.png" title="Certified Animal Rescue Transporter" />'; 
					} else {
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified-grey.png" />'; 
				}

                if (isset($row['st_foster_home']) && $row['st_foster_home'] == 'Y') {
                    $f = '<li><img src="' . base_url() . 'assets/img/icon-foster-home.png" alt="Foster Home" title="Foster Home" /></li>';
                }
                if (isset($row['st_photographer']) && $row['st_photographer'] == 'Y') {
                    $ph = '<li><img src="' . base_url() . 'assets/img/icon-photographer.png" alt="Volunteer" title="Photographer" /></li>';
                }
                if (isset($row['st_pilot']) && $row['st_pilot'] == 'Y') {
                    $p = '<li><img src="' . base_url() . 'assets/img/icon-pilot-profile.png" alt="Pilot Profile" title="Pilot Profile" /></li>';
                }
                if (isset($row['st_driver']) && $row['st_driver'] == 'Y') {
                    $d = '<li><img src="' . base_url() . 'assets/img/icon-driver.png" alt="Driver" title="Driver"/></li>';
                }
                if (isset($row['st_in_person_volunteer']) && $row['st_in_person_volunteer'] == 'Y') {
                    $u = '<li><img src="' . base_url() . 'assets/img/icon-person.png" alt="User" title="In Person Volunteer"/></li>';
                }
                if (isset($row['st_virtual_support_volunteer']) && $row['st_virtual_support_volunteer'] == 'Y'){
                    $v = '<li><img src="' . base_url() . 'assets/img/icon-virtual-support-volunteers.png" alt="Volunteer" title="Volunteer" /></li>';
                }
				 if (isset($row['st_lost_animal_support']) && $row['st_lost_animal_support'] == 'Y'){
                    $l = '<li><img src="' . base_url() . 'assets/img/icon-dd-lost-aimal-support.png" alt="Lost Animal Support" title="Lost Animal Support" /></li>';
                }

				/*$data['pop_up_desc'][] = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part">     <a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph . $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part"><p><span>Animal Type:</span>' . $animaltype . '</p><p><span>Durations Able to Foster For:</span>' . $fosterduration . '</p><p><span>Max number of Days Can Foster:</span>' . $days . '</p><p><span>Maximum Size of Animal Can Foster:</span>' . $size . '</p><p><span>Other Animals in The Household:</span>' . $otheranimal . '</p></div></div></div>';*/
				
				$finalstring = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part">     <a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph . $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part">';
				
				if (in_array("st_animal_type_ids",$row['st_foster']) && $animaltype){
				$finalstring .='<p><span>Animal Type:</span>' . $animaltype . '</p>';
				}
				
				if (in_array("in_duration_type",$row['st_foster']) && $fosterduration){
				$finalstring .='<p><span>Durations Able to Foster For:</span>' . $fosterduration . '</p>';
				}
				
				if (in_array("st_max_foster_days",$row['st_foster']) && $days){
					$finalstring .= '<p><span>Max number of Days Can Foster:</span>' . $days . '</p>';
				}
				
				if (in_array("st_max_animal_size",$row['st_foster']) && $size){
					$finalstring .='<p><span>Maximum Size of Animal Can Foster:</span>' . $size . '</p>';
				}
				if (in_array("st_household_animal_ids",$row['st_foster'])&& $otheranimal){
					$finalstring .='<p><span>Other Animals in The Household:</span>' . $otheranimal . '</p>';
				}
				
				$finalstring .='</div></div></div>';
				
				$data['pop_up_desc'][] =$finalstring; 
				
				//$data['pop_up_desc'][] = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part">     <a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4><ul>' . $f . $ph . $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part"><p><span>Animal Type:</span>' . $animaltype . '</p><p><span>Durations Able to Foster For:</span>' . $fosterduration . '</p><p><span>Max number of Days Can Foster:</span>' . $days . '</p><p><span>Maximum Size of Animal Can Foster:</span>' . $size . '</p><p><span>Other Animals in The Household:</span>' . $otheranimal . '</p></div></div></div>';
			}
			
				$finalpopup =array();
				$finallatlong = array();
				$finalname    = array();
				if(isset($data['latlong']) && $data['latlong']!='')
				{ 
				$j=0;
				//foreach($data['latlong'] as $v){
				for($i=0;$i<count($data['latlong']);$i++){	
				$res = explode(",", $data['latlong'][$i]);
				if($res[1]!='')
				{
				$finallatlong[$j] = $data['latlong'][$i]; 
				$finalpopup[$j]   = $data['pop_up_desc'][$i];
				$finalname[$j]    = $data['name'][$i]; 
				$j++;
				}
				}
				}
				if($data['pop_up_desc']) {
				$data2['pop_up_desc']= $finalpopup;
				$data2['name'] = $finalname; 
				$data2['latlong'] = $finallatlong;
				$data2['latlong_count'] = count($finallatlong);
				$data2['user_lat_long'] = $user_lat_long;
				if($this->input->post('search')){
				$data2['search']='yes';
				}else {
				$data2['search']='no';	
				}
				echo json_encode($data2);
				}
			}
		} else {
		//----------------------DATA SEND TO AJAX REQUEST---------------------------------   
			
		$i=0;
		//$foster_list      = $this->foster_model->get_foster($limit, $rec_per_page, $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin4'), $this->session->userdata('searchadmin5'), $this->session->userdata('searchadmin6'), $otherhouseholdanimal);
		 $finalfoster_list =array(); 	
		
		$finalpopup =array();
		$finallatlong = array();
		$finalname    = array();
		if(isset($data['latlong']) && $data['latlong']!='')
		{ 
			$j=0;
			//foreach($data['latlong'] as $v){
			for($i=0;$i<count($data['latlong']);$i++){	
			$res = explode(",", $data['latlong'][$i]);
			if($res[1]!='')
			{
			$finallatlong[$j] = $data['latlong'][$i]; 
			$finalpopup[$j]   = $data['pop_up_desc'][$i];
			$finalname[$j]    = $data['name'][$i]; 
			$j++;
			}
			}
		}
		$data['zipcode']  = $this->session->userdata('searchadmin1');
		$data['radius']  = $this->session->userdata('searchadmin2');
		//print_r($data['foster_list']);
		$data['foster_list'] = $finalfoster_list;
		$data['counter']= count($finalfoster_list);
		$data['pagination'] = $data['pagination'];
		$data['total_rows'] = $data['total_rows'];
		$data['pop_up_desc']= $finalpopup;
		$data['name'] = $finalname; 
		//$data1['name']=$data['name'];
        $data['latlong'] = $finallatlong;
		$data['latlong_count'] = count($finallatlong);
		/*echo "<pre>"; print_r($data1);
		exit;*/
        $this->load->view('foster-home-volunteer-search', $data);
		}
    }
	
	// for photographer volunteer search function 
	
	 public function photographer_volunteer_search() 
	 {
		  if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }

        //$this->load->library('pagination');
        $this->session->unset_userdata('searchadmin1');
		$zipcode = $this->session->userdata('zip');
		$this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        $this->session->unset_userdata('searchadmin2');
		$radius = '50';
		$this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        $this->session->unset_userdata('searchadmin3');
        $this->session->unset_userdata('searchadmin4');
		$this->get_photographer_volunteer_search();	
	 }	 
	
	
    public function get_photographer_volunteer_search() 
	{
		
		$data = array();
        $data['Err_Msg'] = '';
        $zipcode = '';
        $radius = '';
        $avilabledays = '';
        $data['animal_type'] = $this->common_model->get_animal_types();
        //echo '<pre>'; print_r($data['animal_type']); die;		

        if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
        if ($this->input->post('photographerzipcode')) {
            if ($this->session->userdata('searchadmin1'))
                $this->session->unset_userdata('searchadmin1');

				$zip_code = $this->input->post('photographerzipcode');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['photographerzipcode'] = strtoupper($zip_code);	

            $zipcode = trim(addslashes($this->input->post('photographerzipcode')));
            $this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        }
        if ($this->input->post('photographerradius')) {
            if ($this->session->userdata('searchadmin2'))
                $this->session->unset_userdata('searchadmin2');

            $radius = trim(addslashes($this->input->post('photographerradius')));
            $this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        }
		//echo "<br> number :".$this->input->post('photographerprobonoservice');
        if ($this->input->post('photographerprobonoservice')!='') {
            if ($this->session->userdata('searchadmin3'))
                $this->session->unset_userdata('searchadmin3');

            $maxnumber = trim(addslashes($this->input->post('photographerprobonoservice')));
           // $this->session->set_userdata('searchadmin3', $this->common_function->custom_htmlentities($maxnumber));
		   $this->session->set_userdata('searchadmin3',$maxnumber);
       }
		$data['available']='';
	//	print_r($this->input->post('household_animals'));
        if ($this->input->post('available')) {
            $avilabledays = array();
            $data['available'] = $this->input->post('available');
            $avilabledays = implode(',', $this->input->post('available'));
			$this->session->set_userdata('searchadmin4',$avilabledays);
        }

		if ($this->session->userdata('searchadmin4'))
		{	 
			$keyword4 = $this->session->userdata('searchadmin4'); 
			$data['available'] = explode(',',$keyword4);
		}	
		//$rec_per_page = $this->config->item('per_page');
		$rec_per_page =	12;	
		
		 // GET COUNT of TOTAL RECORDS
        $totalrecord = $this->foster_model->get_total_foster_photographer($this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$data['available']);
		/*print_r($totalrecord);
		die();*/	
		
		$data['photographer_list1'] = $this->foster_model->get_foster_photographer($limit, $rec_per_page, $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$data['available']);	
		
	
		/*echo "<pre>"; print_r($data['photographer_list1']);
		die;*/
		
	// ------------------------ PAGINATION STARTS HERE -----------------------------
        $config["base_url"] = base_url() . 'org_dashboard/get_photographer_volunteer_search/';
        //$config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Prev';
        //$config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
		$config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        //$config['next_tag_open'] = '<li class="next" class="selected" onClick="return getAjaxdata()" >';
		$config['next_tag_open'] = '<li class="next" class="selected">';
        $config['next_tag_close'] = '</li>';

        //$config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
		$config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

        
		
		//$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
		$config['cur_tag_open']  = '<li class="active"><a href="" >';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
		$data['limit'] = $limit;
        // ------------------------ PAGINATION ENDS HERE -------------------------------		
        // SET DATA to MAINTAIN record track on any action			
        $data['limit'] = $limit;
        $this->session->set_userdata('a_limit', $limit);
        if ($totalrecord == 0) {
            $data['Err_Msg'] = 'No Record(s) Found!';
        }
		 $data['pop_up_desc']='';
		 $data['latlong']='';
		 $data['name']='';
		 $data['zipcode'] = $this->session->userdata('searchadmin1');
		 $data['radius'] = $this->session->userdata('searchadmin2');
		 $j=0; 	
		
		if($this->input->post('getmap')){
			$all=1;
			$getall = $this->foster_model->get_foster_photographer($this->input->post('limit'), $rec_per_page, $this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$data['available'] ,$all);	
			/*echo "<pre>" ; print_r($getall);
			die();*/
			
			if($this->session->userdata('zip') == $zipcode){			
			$user_lat_long =$this->organimal_model->get_user_latlong($this->session->userdata('zip'));	
			}
			else {
			$user_lat_long =$this->organimal_model->get_user_latlong($zipcode);
			}
					
			if(!empty($getall))
			{
				 $data['pop_up_desc']= array();
				 $data['latlong']=array();
				 $data['name']=array();
				 $j=0; 	
				 
				foreach($getall as $foster){
					  $f = $ph = $pd = $u = $v = $d = $p = $l = '';
					$finalstring ='';
					//print_r($foster['photograph']); 
				if($foster['lat']!='' && $foster['lon']!='' && $foster['photograph'])
					{		
						if ($foster['st_profile_image'] == '') {
						$path = $this->config->item('upload_url') . "profile/63x63/no_photo.png";
						} else {
						$path = $this->config->item('upload_url') . "profile/63x63/" . $foster['st_profile_image'];
						}
						$username =$foster['st_display_name'];
						$stemail = $foster['st_email'];
						
					if($foster['verified']){
					$verified_url =  base_url().'assets/img/small_doobert_verified_logo.jpg' ; 
					}else {
					$verified_url =  base_url().'assets/img/gray_logo.jpg' ;	
					}
				$vertitle = ( isset($foster['verified']) && $foster['verified'] != '0000-00-00')?date('F d, Y',strtotime($foster['verified'])):'';	
					
				if(!empty($foster['arpa_cert']) && $foster['arpa_cert'] =='Y') { 
						$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified.png" title="Certified Animal Rescue Transporter" />'; 
				} else {
						$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified-grey.png" />'; 
				}
					
					
				if (isset($foster['st_foster_home']) && $foster['st_foster_home'] == 'Y') {
                    $f = '<li><img src="' . base_url() . 'assets/img/icon-foster-home.png" alt="Foster Home" title="Foster Home" /></li>';
                }
                if (isset($foster['st_photographer']) && $foster['st_photographer'] == 'Y') {
                    $ph = '<li><img src="' . base_url() . 'assets/img/icon-photographer.png" alt="Photographer" title="Photographer" /></li>';
                }
                if (isset($foster['st_pilot']) && $foster['st_pilot'] == 'Y') {
                    $p = '<li><img src="' . base_url() . 'assets/img/icon-pilot-profile.png" alt="Pilot Profile" title="Pilot Profile" /></li>';
                }
                if (isset($foster['st_driver']) && $foster['st_driver'] == 'Y') {
                    $d = '<li><img src="' . base_url() . 'assets/img/icon-driver.png" alt="Driver" title="Driver" /></li>';
                }
                if (isset($foster['st_in_person_volunteer']) && $foster['st_in_person_volunteer'] == 'Y') {
                    $u = '<li><img src="' . base_url() . 'assets/img/icon-person.png" alt="In Person Volunteer" title="In Person Volunteer" /></li>';
                }
                if (isset($foster['st_virtual_support_volunteer']) && $foster['st_virtual_support_volunteer'] == 'Y'){
                    $v = '<li><img src="' . base_url() . 'assets/img/icon-virtual-support-volunteers.png" alt="Volunteer" title="Volunteer" /></li>';
                }
				
				if (isset($foster['st_lost_animal_support']) && $foster['st_lost_animal_support'] == 'Y'){
                    $l = '<li><img src="' . base_url() . 'assets/img/icon-dd-lost-aimal-support.png" alt="Lost Animal Support" title="Lost Animal Support" /></li>';
                }

					$tempstring=''; //$finalfoster_list[$i]['temparray']='';
					if(isset($foster['st_photographer_availability']) && $foster['st_photographer_availability']!=''){
					$temparray = unserialize($foster['st_photographer_availability']);
					$tcnt=count($temparray); $tempcnt=1; 
					foreach($temparray as $test) { if($tempcnt==$tcnt){ $tempstring =$tempstring . $test; } else {$tempstring =$tempstring.$test.', '; $tempcnt++;} }  
					}
					
					if($foster['in_pro_bono_ser']==1) { $service =' Yes' ;}else {$service =' No';}
					
					$data['latlong'][$j] = '["' . $this->common_function->custom_addslashes($foster['st_display_name']) . '",' . $foster['lat'] . ',' . $foster['lon'] . ']';
					
					 $data['name'][$j] = $this->common_function->custom_addslashes($foster['st_display_name']); 
					
				  	 
					$finalstring = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part"> <a href="' . base_url() . 'user-' . $foster['user_id'] . '-' . $this->common_function->get_filtered_name($foster['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><h4><a href="' . base_url() . 'user-' . $foster['user_id'] . '-' . $this->common_function->get_filtered_name($foster['st_display_name']) . '">' . $username . '</a></h4><span style="float:right;"><img src="'.$verified_url.'" alt="verified Logo" title="'.$vertitle.'" /></span><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/' . $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph. $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part">';
					
					if(in_array('st_photographer_zipcode',$foster['photograph']) && $foster['st_photographer_zipcode']){
						
						$finalstring .='<p><span>Zip Code:</span>' . $foster['st_photographer_zipcode']. '</p>';
					}
					if(in_array('in_distance_to_travel',$foster['photograph']) && $foster['in_distance_to_travel']){
						$finalstring .= '<p><span>Distance from Zip to Travel:</span>' . $foster['in_distance_to_travel'] . '</p>';
					}
					if(in_array('in_pro_bono_ser',$foster['photograph'])&& $service){
						$finalstring .= '<p><span>Pro Bono Services Offered:</span>' . $service . '</p>';
					}
					if(in_array('st_photographer_availability',$foster['photograph']) && $tempstring){
						$finalstring .= '<p><span>Availability Days :</span>' . $tempstring . '</p>';
					}
					 $finalstring .='</div></div></div>';
					
					$data['pop_up_desc'][$j] = $finalstring ;
					
					$j++;
					}
						
				}
			}
			
		$data2['pop_up_desc']= $data['pop_up_desc'];
		$data2['name'] = $data['name']; 
		$data2['latlong'] = $data['latlong'];
		$data2['latlong_count'] = $j;
		$data2['user_lat_long'] = $user_lat_long;
		if($this->input->post('search'))
		$data2['search'] ='yes';	
		else 
		$data2['search'] ='no';
		
		echo json_encode($data2);
		} else {
		$this->load->view('photographer-volunteer-search',$data);
		
	  }
  
	}	
	
	// in personal volunteer search Function 
	public function inperson_volunteer_search()
	{
		  if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }

        //$this->load->library('pagination');
        $this->session->unset_userdata('searchadmin1');
		$zipcode = $this->session->userdata('zip');
		$this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        $this->session->unset_userdata('searchadmin2');
		$radius = '50';
		$this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        $this->session->unset_userdata('searchadmin3');
        $this->session->unset_userdata('searchadmin4');
        $this->session->unset_userdata('searchadmin5');
        $this->session->unset_userdata('searchadmin6');
		$this->get_inperson_volunteer_search();
	}
	
	public function get_inperson_volunteer_search() 
	{
		  
        /* if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        } */
		
		//$this->load->library('pagination');      
     		
		$data = array();
        $data['Err_Msg'] = '';
        $zipcode = '';
        $radius = '';
        $inpersonal = '';
		$inspector ='';
		$reviewer ='';
		$fundraiser='';
		$animalcare= '';
		
		if ($this->uri->segment(2))
            $limit = $this->uri->segment(2);
        else
            $limit = '0';
		
        if ($this->input->post('inpersonzipcode')) {			
			$zip_code = $this->input->post('inpersonzipcode');
			$zip_code = str_replace(" ","",$zip_code);
			$_POST['inpersonzipcode'] = strtoupper($zip_code);	

            $zipcode = trim(addslashes($this->input->post('inpersonzipcode')));
            $this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        }
        if ($this->input->post('inpersonradius')) {            
            $radius = trim(addslashes($this->input->post('inpersonradius')));
            $this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        }
		if ($this->input->post('inpersoninspector')) {            
            $inspector = trim(addslashes($this->input->post('inpersoninspector')));
            $this->session->set_userdata('searchadmin3', $this->common_function->custom_htmlentities($inspector));
        }		 
		if ($this->input->post('inpersonreviewer')) {            
            $reviewer = trim(addslashes($this->input->post('inpersonreviewer')));
            $this->session->set_userdata('searchadmin4', $this->common_function->custom_htmlentities($reviewer));
        } 
		if ($this->input->post('inpersonfundraiser')) {            
            $fundraiser = trim(addslashes($this->input->post('inpersonfundraiser')));
            $this->session->set_userdata('searchadmin5', $this->common_function->custom_htmlentities($fundraiser));
        }
		 if ($this->input->post('inpersonanimalcare')) {            
            $animalcare = trim(addslashes($this->input->post('inpersonanimalcare')));
            $this->session->set_userdata('searchadmin6', $this->common_function->custom_htmlentities($animalcare));
        }	
		
		$rec_per_page =12;
		//-----------------------LOAD MAP DATA FOR AJAX-------------------

		if($this->input->post('getmap')) // map data send only first load page and search page 
		{
			$all=1;
			$allinperson = $this->foster_model->get_foster_inpersonal($limit, $rec_per_page ,$this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'), $all);
			


			if($this->session->userdata('zip') == $zipcode){			
			$user_lat_long =$this->organimal_model->get_user_latlong($this->session->userdata('zip'));	
			}
			else {
			$user_lat_long =$this->organimal_model->get_user_latlong($zipcode);
			}
				
		if (!empty($allinperson)) {

            //echo '<pre>'; print_r($data['foster_list']);die;
            $f = $ph = $pd = $u = $v = $d = $p = $l='';
			$finalstring = '';
			$i = 0;
            foreach ($allinperson as $row) {

                //echo '<pre>'; print_r($row);die;
                $data['name'][] = $this->common_function->custom_addslashes($row['st_display_name']);
              //  $data['latlong'][] = '["' . $this->common_function->custom_addslashes($row['st_display_name']) . '",' . $row['lat'] . ',' . $row['lon'] . ']';

				$data['latlong'][] = '["' . $row['st_display_name'] . '",' . $row['lat'] . ',' . $row['lon'] . ']';
               
                $username = $row['st_display_name'];
                $stemail = $row['st_email'];
				$vertitle='';
				
				if(!empty($row['verified'])){
					$verified_url =  base_url().'assets/img/small_doobert_verified_logo.jpg' ; 
					
					}else {
					$verified_url =  base_url().'assets/img/gray_logo.jpg' ;	
					}
				$vertitle = ( isset($row['verified']) && $row['verified'] != '0000-00-00')?date('F d, Y',strtotime($row['verified'])):'';
                //$fosterid=$row['in_foster_animal_detail_id'];	
                if ($row['st_profile_image'] == '') {
                    $path = $this->config->item('upload_url') . "profile/63x63/no_photo.png";
                } else {
                    $path = $this->config->item('upload_url') . "profile/63x63/" . $row['st_profile_image'];
                }
				if(!empty($row['arpa_cert']) && $row['arpa_cert'] =='Y') { 
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified.png" title="Certified Animal Rescue Transporter" />'; 
					} else {
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified-grey.png" />'; 
				}

                if (isset($row['st_foster_home']) && $row['st_foster_home'] == 'Y') {
                    $f = '<li><img src="' . base_url() . 'assets/img/icon-foster-home.png" alt="Foster Home" title="Foster Home" /></li>';
                }
                if (isset($row['st_photographer']) && $row['st_photographer'] == 'Y') {
                    $ph = '<li><img src="' . base_url() . 'assets/img/icon-photographer.png" alt="Volunteer" title="Photographer" /></li>';
                }
                if (isset($row['st_pilot']) && $row['st_pilot'] == 'Y') {
                    $p = '<li><img src="' . base_url() . 'assets/img/icon-pilot-profile.png" alt="Pilot Profile" title="Pilot Profile" /></li>';
                }
                if (isset($row['st_driver']) && $row['st_driver'] == 'Y') {
                    $d = '<li><img src="' . base_url() . 'assets/img/icon-driver.png" alt="Driver" title="Driver"/></li>';
                }
                if (isset($row['st_in_person_volunteer']) && $row['st_in_person_volunteer'] == 'Y') {
                    $u = '<li><img src="' . base_url() . 'assets/img/icon-person.png" alt="User" title="In Person Volunteer"/></li>';
                }
                if (isset($row['st_virtual_support_volunteer']) && $row['st_virtual_support_volunteer'] == 'Y'){
                    $v = '<li><img src="' . base_url() . 'assets/img/icon-virtual-support-volunteers.png" alt="Volunteer" title="Volunteer" /></li>';
                }
				 if (isset($row['st_lost_animal_support']) && $row['st_lost_animal_support'] == 'Y'){
                    $l = '<li><img src="' . base_url() . 'assets/img/icon-dd-lost-aimal-support.png" alt="Lost Animal Support" title="Lost Animal Support" /></li>';
                }
					
					/*	$finalfoster_list[$i]['link_arpa_cert'] = $image_cert_url;
					
					$finalfoster_list[$i]['homelink']='';
					if(isset($foster['st_foster_home']) && $foster['st_foster_home']== 'Y'){
					$finalfoster_list[$i]['st_foster_home'] = $foster['st_foster_home'];
					$finalfoster_list[$i]['homelink'] = base_url().'assets/img/icon-foster-home.png' ;
					}
					 $finalfoster_list[$i]['photolink']='';
					if (isset($foster['st_photographer']) && $foster['st_photographer'] == 'Y'){
					 $finalfoster_list[$i]['st_photographer'] = $foster['st_photographer'];
					 $finalfoster_list[$i]['photolink'] = base_url().'assets/img/icon-photographer.png';
					}
					$finalfoster_list[$i]['pilotlink']='';
					if(isset($foster['st_pilot']) && $foster['st_pilot'] == 'Y') {
						$finalfoster_list[$i]['st_pilot'] = $foster['st_pilot'];
						$finalfoster_list[$i]['pilotlink'] = base_url().'assets/img/icon-pilot-profile.png';
					}	
					$finalfoster_list[$i]['driverlink']='';
					if (isset($foster['st_driver']) && $foster['st_driver'] == 'Y'){
						$finalfoster_list[$i]['st_driver'] = $foster['st_driver'];
						$finalfoster_list[$i]['driverlink'] = base_url().'assets/img/icon-driver.png';
					}
					
					$finalfoster_list[$i]['personlink']='';
					if (isset($foster['st_in_person_volunteer']) && $foster['st_in_person_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_in_person_volunteer'] = $foster['st_in_person_volunteer'];
						$finalfoster_list[$i]['personlink'] = base_url().'assets/img/icon-person.png';
					}
					
					$finalfoster_list[$i]['virtuallink']='';
					if (isset($foster['st_virtual_support_volunteer']) && $foster['st_virtual_support_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_virtual_support_volunteer'] = $foster['st_virtual_support_volunteer'];
						$finalfoster_list[$i]['virtuallink'] = base_url().'assets/img/icon-virtual-support-volunteers.png';
					}
					
					$finalfoster_list[$i]['lostanimallink']='';
					if (isset($foster['st_lost_animal_support']) && $foster['st_lost_animal_support'] == 'Y') {
						$finalfoster_list[$i]['st_lost_animal_support'] = $foster['st_lost_animal_support'];
						$finalfoster_list[$i]['lostanimallink'] = base_url().'assets/img/icon-dd-lost-aimal-support.png';
					}*/
					
					

								
				$finalstring = '<div id="subscribe-pop"><div class="foster-popup-result-box">
								<div class="top-part">
									<a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a>
									<h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4>
									<a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph . $p . $d . $u . $v . '</ul>
								</div>
								<div class="clear"></div>
								<div class="bottom-part">---------';
				
				if($row['inpersonal']!=''){
					if(in_array('in_home_visit',$row['inpersonal']) && $row['in_home_visit'] == 1){
					$finalstring .='<p><span>Adoption/Foster home visit inspector</span> (visiting the home of an applicant)</p>';
					}
					if(in_array('in_app_reviewer',$row['inpersonal']) && $row['in_app_reviewer']== 1){
					$finalstring .= '<p><span>Adoption application reviewer</span> (reviewing applications at a booth or facility)</p>';
					}
					if(in_array('in_physical_fundraiser',$row['inpersonal']) && $row['in_physical_fundraiser'] == 1){
					$finalstring .= '<p><span>Physical fundraiser</span> (i.e. booth at an event or actual fundraising event)</p>';
					}
					if(in_array('in_animal_care',$row['inpersonal']) && $row['in_animal_care'] == 1){
					$finalstring .='<p><span>Animal care at a facility</span> (walking or socializing animals, cleaning cages)</p>';
					}
				}
				$finalstring .='</div></div></div>';	
				
				$data['pop_up_desc'][] =$finalstring; 
				
				
				
		
			}//foreach
			
				$finalpopup =array();
				$finallatlong = array();
				$finalname    = array();
				if(isset($data['latlong']) && $data['latlong']!='')
				{ 
				$j=0;
				//foreach($data['latlong'] as $v){
				for($i=0;$i<count($data['latlong']);$i++){	
				$res = explode(",", $data['latlong'][$i]);
				if($res[1]!='')
				{
				$finallatlong[$j] = $data['latlong'][$i]; 
				$finalpopup[$j]   = $data['pop_up_desc'][$i];
				$finalname[$j]    = $data['name'][$i]; 
				$j++;
				}
				}
				}
				if($data['pop_up_desc']) {
				$data2['pop_up_desc']= $finalpopup;
				$data2['name'] = $finalname; 
				$data2['latlong'] = $finallatlong;
				$data2['latlong_count'] = count($finallatlong);
				$data2['user_lat_long'] = $user_lat_long;
				if($this->input->post('search')){
				$data2['search']='yes';
				}else {
				$data2['search']='no';	
				}
				echo json_encode($data2);
				}
			}
		} else {
			###############################
			//echo'<pre>'; print_r($limit);
 	
		//$rec_per_page = $this->config->item('per_page');
			
		
		 // GET COUNT of TOTAL RECORDS
        $totalrecord = $this->foster_model->get_total_foster_inpersonal($this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'));
		/*print_r($totalrecord);
		die();*/	
		
		$data['inpersonal_list1'] = $this->foster_model->get_foster_inpersonal($limit, $rec_per_page ,$this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'));
		$data['inpersonal_list'] = '';
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
       // $config["base_url"] = base_url() . 'org_dashboard/inperson_volunteer_search/';
	     $config["base_url"] = base_url() . 'org_dashboard/get_inperson_volunteer_search/';
        $config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';
        //$config['full_tag_open'] = '<tr class="pagination">';
        //$config['full_tag_close'] = '</tr>'; 
        $config['prev_link'] = 'Prev';
        $config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        $config['next_tag_open'] = '<li class="next" class="selected" onClick="return getAjaxdata()"  >';
        $config['next_tag_close'] = '</li>';

        $config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
        $config['num_tag_close'] = '</li>';

       
		
		$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
        // ------------------------ PAGINATION ENDS HERE -------------------------------		
        // SET DATA to MAINTAIN record track on any action			
        $data['limit'] = $limit;
        $this->session->set_userdata('a_limit', $limit);
        if ($totalrecord == 0) {
            $data['Err_Msg'] = '<tr><td colspan="5">No Record(s) Found!</td></tr>';
        }
		$data['totalrecord']=$totalrecord;
			################################
			
		$finalpopup =array();
	
		//print_r($data['foster_list']);
		$data['zipcode']  = $this->session->userdata('searchadmin1');
		$data['radius']  = $this->session->userdata('searchadmin2');
		$data['foster_list'] = $finalfoster_list;
		$data['counter']= count($finalfoster_list);
		$data['pagination'] = $data['pagination'];
		//$data['total_rows'] = $data['total_rows'];
		$data['Err_Msg']	= $data['Err_Msg'];	
		
		$this->load->view('inperson-volunteer-search', $data);
	
	}	
		 
	}
	
	// virtual volunteer search data
	 public function virtual_volunteer_search() 
	 {
		
		  if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }

        //$this->load->library('pagination');
        $this->session->unset_userdata('profile_text');
        $this->session->unset_userdata('virtual_support');
        $this->session->unset_userdata('profile_posting');
        $this->session->unset_userdata('social_media');
		$this->get_virtual_volunteer_search(); 
	 }	 
	
	 public function get_virtual_volunteer_search() {

       
		$social_media = array();
		$profile_posting = array();
		$virtual_support =array();
		$data = array();
		$profile_text ='';
			if($this->input->post('social_media'))
			{
				if ($this->session->userdata('social_media'))	
                $this->session->unset_userdata('social_media');
				$social_media_seralize = implode(',', $this->input->post('social_media'));
				$social_media =$this->input->post('social_media');
				$this->session->set_userdata('social_media', $social_media_seralize);
			} else {
				if($this->session->userdata('social_media'))
				{
					$social_media = explode(',',$this->session->userdata('social_media'));
					//$social_media = $this->session->userdata('social_media');
				}	
			}
			if($this->input->post('profile_posting'))
			{
				if ($this->session->userdata('profile_posting'))
                $this->session->unset_userdata('profile_posting');
				$profile_posting_seralize = implode(',', $this->input->post('profile_posting'));
				$profile_posting = $this->input->post('profile_posting');
				$this->session->set_userdata('profile_posting', $profile_posting_seralize);
			} else {
				if($this->session->userdata('profile_posting'))
				{
					$profile_posting = explode(',',$this->session->userdata('profile_posting'));
					//$profile_posting =$this->session->userdata('profile_posting');
				}	
			}
			if($this->input->post('virtual_support'))
			{
				if ($this->session->userdata('virtual_support'))
                $this->session->unset_userdata('virtual_support');
				$virtual_support_seralize = implode(',', $this->input->post('profile_posting'));
				$virtual_support = $this->input->post('virtual_support');
				$this->session->set_userdata('virtual_support',$virtual_support_seralize );
			}  else {
				if($this->session->userdata('virtual_support'))
				{
					$virtual_support = explode(',',$this->session->userdata('virtual_support'));
					//$virtual_support =$this->session->userdata('virtual_support');
				}	
			}
			if($this->input->post('profile_text'))
			{
				if ($this->session->userdata('profile_text'))
                $this->session->unset_userdata('profile_text');

				$profile_text = $this->input->post('profile_text');
				$this->session->set_userdata('profile_text', $profile_text);
			} else {
				if($this->session->userdata('profile_text'))
				{
					$profile_text =$this->session->userdata('profile_text');
				}	
			}
	
		$data['Err_Msg'] = '';
		
		$data['social_media'] = $social_media;
		$data['profile_text'] = $profile_text;
		$data['virtual_support'] = $virtual_support;
		$data['profile_posting'] = $profile_posting;
       	
		if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
		
		//$rec_per_page = $this->config->item('per_page');
		$rec_per_page =12;	
		
		 // GET COUNT of TOTAL RECORDS
        $totalrecord = $this->foster_model->get_total_foster_virtual($social_media ,$profile_posting ,$virtual_support ,$profile_text);
		/*print_r($totalrecord);
		die();	*/
		
		$data['virtual_volunteer'] = $this->foster_model->get_foster_virtual($limit, $rec_per_page , $social_media ,$profile_posting ,$virtual_support ,$profile_text);
		
		/*echo "<pre>"; print_r($data['virtual_volunteer']);
		die();*/
				
		//------------------------ PAGINATION STARTS HERE -----------------------------
        $config["base_url"] = base_url() . 'org_dashboard/get_virtual_volunteer_search/';
        $config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Prev';
        //$config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
		$config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        //$config['next_tag_open'] = '<li class="next" class="selected" onClick="return getAjaxdata()"  >';
		$config['next_tag_open'] = '<li class="next" class="selected">';
        $config['next_tag_close'] = '</li>';

        //$config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
		$config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

        /*$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="javascript:void(0);" >';
        $config['cur_tag_close'] = '</a></li>';*/
		
    	 //$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
		$config['cur_tag_open'] = '<li class="active"><a href="" >';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
		$data['totalrecord'] =$totalrecord;
		$data['limit'] = $limit;
		//----------------------DATA SEND TO AJAX REQUEST---------------------------------   
		if($this->input->post('getmap')){
			$zipcode = '';
			$finalfoster_list = array();
			/*$social_media = array();
			$profile_posting = array();
			$virtual_support =array();
			$profile_text ='';*/
			$all=1;
			$virtual_volunteer = $this->foster_model->get_foster_virtual($this->input->post('limit'), $rec_per_page , $social_media ,$profile_posting ,$virtual_support ,$profile_text);

			if($this->session->userdata('zip')){			
				$user_lat_long =$this->organimal_model->get_user_latlong($this->session->userdata('zip'));	
			}
			else {
				$user_lat_long =$this->organimal_model->get_user_latlong($zipcode);
			}

			if (!empty($virtual_volunteer)) {

				$f = $ph = $pd = $u = $v = $d = $p = $l='';
				$fnalstriing = '';

				foreach ($virtual_volunteer as $row) {
					
					$data['name'][] = $this->common_function->custom_addslashes($row['st_display_name']);
					$data['latlong'][] = '["' . $row['st_display_name'] . '",' . $row['lat'] . ',' . $row['lon'] . ']';
               
	                $username = $row['st_display_name'];
	                $stemail = $row['st_email'];
					$vertitle='';
					
					if(!empty($row['verified'])){
						$verified_url =  base_url().'assets/img/small_doobert_verified_logo.jpg' ; 
						
					}else {
						$verified_url =  base_url().'assets/img/gray_logo.jpg' ;	
					}
					$vertitle = ( isset($row['verified']) && $row['verified'] != '0000-00-00')?date('F d, Y',strtotime($row['verified'])):'';
					if ($row['st_profile_image'] == '') {
	                    $path = $this->config->item('upload_url') . "profile/63x63/no_photo.png";
	                } else {
	                    $path = $this->config->item('upload_url') . "profile/63x63/" . $row['st_profile_image'];
	                }
					if(!empty($row['arpa_cert']) && $row['arpa_cert'] =='Y') { 
						$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified.png" title="Certified Animal Rescue Transporter" />'; 
					} else {
						$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified-grey.png" />'; 
					}

	                if (isset($row['st_foster_home']) && $row['st_foster_home'] == 'Y') {
	                    $f = '<li><img src="' . base_url() . 'assets/img/icon-foster-home.png" alt="Foster Home" title="Foster Home" /></li>';
	                }
	                if (isset($row['st_photographer']) && $row['st_photographer'] == 'Y') {
	                    $ph = '<li><img src="' . base_url() . 'assets/img/icon-photographer.png" alt="Volunteer" title="Photographer" /></li>';
	                }
	                if (isset($row['st_pilot']) && $row['st_pilot'] == 'Y') {
	                    $p = '<li><img src="' . base_url() . 'assets/img/icon-pilot-profile.png" alt="Pilot Profile" title="Pilot Profile" /></li>';
	                }
	                if (isset($row['st_driver']) && $row['st_driver'] == 'Y') {
	                    $d = '<li><img src="' . base_url() . 'assets/img/icon-driver.png" alt="Driver" title="Driver"/></li>';
	                }
	                if (isset($row['st_in_person_volunteer']) && $row['st_in_person_volunteer'] == 'Y') {
	                    $u = '<li><img src="' . base_url() . 'assets/img/icon-person.png" alt="User" title="In Person Volunteer"/></li>';
	                }
	                if (isset($row['st_virtual_support_volunteer']) && $row['st_virtual_support_volunteer'] == 'Y'){
	                    $v = '<li><img src="' . base_url() . 'assets/img/icon-virtual-support-volunteers.png" alt="Volunteer" title="Volunteer" /></li>';
	                }
					 if (isset($row['st_lost_animal_support']) && $row['st_lost_animal_support'] == 'Y'){
	                    $l = '<li><img src="' . base_url() . 'assets/img/icon-dd-lost-aimal-support.png" alt="Lost Animal Support" title="Lost Animal Support" /></li>';
	                }

					/*$finalfoster_list[$i]['link_arpa_cert'] = $image_cert_url;
					$finalfoster_list[$i]['homelink']='';
					if(isset($foster['st_foster_home']) && $foster['st_foster_home']== 'Y'){
					$finalfoster_list[$i]['st_foster_home'] = $foster['st_foster_home'];
					$finalfoster_list[$i]['homelink'] = base_url().'assets/img/icon-foster-home.png' ;
					}
					 $finalfoster_list[$i]['photolink']='';
					if (isset($foster['st_photographer']) && $foster['st_photographer'] == 'Y'){
					 $finalfoster_list[$i]['st_photographer'] = $foster['st_photographer'];
					 $finalfoster_list[$i]['photolink'] = base_url().'assets/img/icon-photographer.png';
					}
					$finalfoster_list[$i]['pilotlink']='';
					if(isset($foster['st_pilot']) && $foster['st_pilot'] == 'Y') {
						$finalfoster_list[$i]['st_pilot'] = $foster['st_pilot'];
						$finalfoster_list[$i]['pilotlink'] = base_url().'assets/img/icon-pilot-profile.png';
					}	
					$finalfoster_list[$i]['driverlink']='';
					if (isset($foster['st_driver']) && $foster['st_driver'] == 'Y'){
						$finalfoster_list[$i]['st_driver'] = $foster['st_driver'];
						$finalfoster_list[$i]['driverlink'] = base_url().'assets/img/icon-driver.png';
					}
					
					$finalfoster_list[$i]['personlink']='';
					if (isset($foster['st_in_person_volunteer']) && $foster['st_in_person_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_in_person_volunteer'] = $foster['st_in_person_volunteer'];
						$finalfoster_list[$i]['personlink'] = base_url().'assets/img/icon-person.png';
					}
					
					$finalfoster_list[$i]['virtuallink']='';
					if (isset($foster['st_virtual_support_volunteer']) && $foster['st_virtual_support_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_virtual_support_volunteer'] = $foster['st_virtual_support_volunteer'];
						$finalfoster_list[$i]['virtuallink'] = base_url().'assets/img/icon-virtual-support-volunteers.png';
					}
					
					$finalfoster_list[$i]['lostanimallink']='';
					if (isset($foster['st_lost_animal_support']) && $foster['st_lost_animal_support'] == 'Y') {
						$finalfoster_list[$i]['st_lost_animal_support'] = $foster['st_lost_animal_support'];
						$finalfoster_list[$i]['lostanimallink'] = base_url().'assets/img/icon-dd-lost-aimal-support.png';
					}*/


					$finalstring = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part">     <a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph . $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part">';

					$finalstring .='</div></div></div>';
					
						$finalstring .='Social Media Section:';	
						if($row['in_manage_facebook'] == 1 && in_array('in_manage_facebook',$row['virtual']))
							$finalstring .='Managing Facebook Page(s) , ';
						if($foster['in_manage_twitter'] == 1 && in_array('in_manage_twitter',$row['virtual']))
							$finalstring .='Tweeting (Twitter), ';
						if($row['in_manage_gplus'] == 1 && in_array('in_manage_gplus',$row['virtual']))
							$finalstring .='Google+ Pages , ';
						if($fosrowter['in_manage_pin_board'] == 1 && in_array('in_manage_pin_board',$row['virtual']))
							$finalstring .='Managing Pin Boards (Pinterest) , ';
						if($row['in_manage_instagram'] == 1 && in_array('in_manage_instagram',$row['virtual']))
							$finalstring .='Instagram Posting , ';
						if($row['in_manage_video'] == 1 && in_array('in_manage_video',$row['virtual']))	
						    $finalstring .='Managing Videos (YouTube) , ';
						if($row['in_social_media'] == 1 && in_array('in_social_media',$row['virtual']))	
						    $finalstring .='Other, ';						
						//$finalfoster_list[$i]['social_link'] = rtrim($soci,' ,'); //$soci;		
						
						$finalstring .= '<br>';
						$finalstring .= 'Animal Profile Posting Section:';
						if($row['in_petfinder'] == 1 && in_array('in_petfinder',$row['virtual']))
							$finalstring .= 'Petfinder.com , ';
						if($row['in_adoptapet'] == 1 && in_array('in_adoptapet',$row['virtual']))
							$finalstring .='AdoptaPet.com , ';
						if($row['in_petharbor'] == 1 && in_array('in_petharbor' ,$row['virtual']))
							$finalstring .='PetHarbor.com , ';
						if($row['in_petango'] == 1 && in_array('in_petango',$row['virtual']))
							$finalstring .='Petango , ';
						if($row['in_rescuegroups'] == 1 && in_array('in_rescuegroups',$row['virtual']))
							$finalstring .='RescueGroups.org  , ';
						if($row['in_shelterexchange'] == 1 && in_array('in_shelterexchange',$row['virtual']))
							$finalstring .='ShelterExchange.org , ';
						if($row['in_dogtime'] == 1 && in_array('in_dogtime',$row['virtual']))
							$finalstring .='Dogtime.com  ';
						if($row['in_petsoverstock'] == 1 && in_array('in_petsoverstock',$row['virtual']))
							$finalstring .='Pets.overstock.com  , ';
						if($row['in_animal_profile'] == 1 && in_array('in_animal_profile',$row['virtual']))
							$finalstring .='Other , ';
						//$finalfoster_list[$i]['profile_posting'] = rtrim($posti,' ,'); //$posti;
						$finalstring .= '<br>';
						$finalstring .= 'Additional Virtual Support Possibilities Section:';
						if($row['in_transport_monitor'] == 1 && in_array('in_transport_monitor',$row['virtual']))
							$finalstring .='Transport Monitor , ';
						if($row['in_adoption_application'] == 1 && in_array('in_adoption_application',$row['virtual']))
							$finalstring .='Adoption Application Reviewer  , ';
						if($row['in_onlinefundraiser'] == 1 && in_array('in_onlinefundraiser',$row['virtual']))
							$finalstring .='Online fundraiser , ';
						//$finalfoster_list[$i]['virtual_support'] = rtrim($vir,' ,'); //$vir;
						$data['pop_up_desc'][] =$finalstring; 
				
								
				
				
		
			}//foreach
			
				$finalpopup =array();
				$finallatlong = array();
				$finalname    = array();
				if(isset($data['latlong']) && $data['latlong']!='')
				{ 
				$j=0;
				//foreach($data['latlong'] as $v){
				for($i=0;$i<count($data['latlong']);$i++){	
				$res = explode(",", $data['latlong'][$i]);
				if($res[1]!='')
				{
				$finallatlong[$j] = $data['latlong'][$i]; 
				$finalpopup[$j]   = $data['pop_up_desc'][$i];
				$finalname[$j]    = $data['name'][$i]; 
				$j++;
				}
				}
				}
				if($data['pop_up_desc']) {
				$data2['pop_up_desc']= $finalpopup;
				$data2['name'] = $finalname; 
				$data2['latlong'] = $finallatlong;
				$data2['latlong_count'] = count($finallatlong);
				$data2['user_lat_long'] = $user_lat_long;
				if($this->input->post('search')){
				$data2['search']='yes';
				}else {
				$data2['search']='no';	
				}
				echo json_encode($data2);
				}
			}
		} else { 
		
		
		 /*echo "<pre>"; print_r($data);
		die();*/
		
		$data['foster_list'] = $finalfoster_list;
		$data['counter']= count($finalfoster_list);
		$data['pagination'] = $data['pagination'];
		$data['total_rows'] = $data['total_rows'];
		$data['Err_Msg']	= $data['Err_Msg'];	
		
		$this->load->view('virtual-volunteer-search', $data);
		}
		//$this->load->view('virtual-volunteer-search', $data);
    
	}

	public function foster_home_search_mail() {

        $user_name = $this->input->post('contact_name');
        $user_email = $this->input->post('contact_email');
		$sender_name = $this->session->userdata('user_name');
		$sender_email = $this->session->userdata('email');
        $msg = nl2br($this->input->post('contactmessage'));
		
		$this->load->library('email');
        $email_details = $this->common_model->get_email_containt("52");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							
							$imgpath	=	'http://crystal99/doobert-v3/upload/affiliate_images/orig/'.$qr['st_image'];
							//$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $templete = str_replace("##user_name##", $user_name , $templete);
			$templete = str_replace("##DONATION##", $donation , $templete);
            $templete = str_replace("##sender_name##", $sender_name , $templete);
			$templete = str_replace("##message##", $msg , $templete);
            $templete = str_replace("##sender_email##", $sender_email , $templete);
            $templete = str_replace("##current_year##", date('Y'), $templete);
            $strMail = $templete;
            $to = $user_email;
            $subject = $email_details[0]['st_email_subject'];
		    $subject = str_replace('##sender_name##',$sender_name , $subject); 
		   // $subject = 'Contact Request From: ' . $this->session->userdata('user_name');
            $message = $strMail;
			$category = $email_details[0]['st_category'];
			
			$user_to_id = $this->common_model->get_user_id_by_email($to);
						
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_details[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
		 		$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('from_name'),$this->email,$category);
			}
			
			$data['success'] = 1;
			echo json_encode($data);
		}
		
   }

	
	
	 public function animal_rescue(){

        if (!$this->session->userdata('userid')){
            redirect($this->config->item('base_url'));        
        }
        $data = array();
		
		$org_id = $this->uri->segment(2);
		
		if($org_id ==''){
		
			 redirect($this->config->item('base_url'));
		}
		else {
					
				$data['org_id']=$org_id;
				// for redirection to the map view 
				if ($this->uri->segment(3)){
				$limit = $this->uri->segment(3);
				if($limit == 1)
				$this->session->set_userdata("from-map",1);	
				}
				else
				$limit = '0';
				
				if($this->input->post('org_id')){
					$org_id=$this->input->post('org_id');
				}
				
				$data['org_detail']=$this->organimal_model->get_org_details($org_id); 
				

				//echo $limit;
				//echo $org_id;
				$this->load->library('pagination');
				
				$rec_per_page =10;
				// GET COUNT of TOTAL RECORDS
				$totalrecord = $this->organimal_model->get_total_transfer_animals($org_id);
			
				
				$data['animal']=$this->organimal_model->get_all_transfer_animals($limit, $rec_per_page, $org_id);
				// echo $this->db->last_query();
				// echo "<pre>";print_r($data);
				// exit;
				$data['animaltype'] =$this->organimal_model->get_animal_types();

		// ------------------------ PAGINATION STARTS HERE -----------------------------
        $config["base_url"] = base_url() . 'org_dashboard/animal_rescue/';
        $config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination fr">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Prev';
        $config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        $config['next_tag_open'] = '<li class="next" class="selected" onClick="return getAjaxdata()" >';
        $config['next_tag_close'] = '</li>';

        $config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
        $config['num_tag_close'] = '</li>';

        $config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
        $config['cur_tag_close'] = '</a></li>';
		
		

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
        // ------------------------ PAGINATION ENDS HERE -------------------------------
		
		if($this->input->post('ajax'))
		{
			/*print_r($data['animal']);
			die();*/
			$i=0; //$j=0;
			$animalage = $this->common_function->age;
			$final_list =array(); 	
			 if (!empty($data['animal'])) {
			foreach ($data['animal'] as $foster){	
			
				$final_list[$i]['viewlink']= $this->config->item('base_url').'animal-'.$foster['in_animal_id'].'-'.$foster['animal_name'];
				$final_list[$i]['link']=$this->config->item('base_url').'org_animal/animal_profile_details';
				$final_list[$i]['animal_name'] = $foster['animal_name'];
				$final_list[$i]['animal_type'] = $foster['animal_type'];
				
				if($foster['gender'] == 'M'){ $g='Male';}else if($foster['gender']=='F'){ $g='Female';}else {$g='Unknown';}
				
				$final_list[$i]['gender']=$g;
				$final_list[$i]['breed']=$foster['breed'];
				$a=$foster['age'];	
				if($a==0){$a=5;}
				$final_list[$i]['age']= $animalage[$a];
				$i++;
				}
			 }
			$data1['foster_list'] = $final_list;
			$data1['counter']  = count($final_list);
			$data1['pagination'] = $data['pagination'];
			$data1['total_rows'] = $data['total_rows'];
			
			echo json_encode($data1);
	}else {
			$this->load->view('animal-rescue', $data);
		}
	  }
	}
	
	
	
	//lost animal volunteer search Function
	public function lost_animal_volunteer_search() 
	{
		 if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }
		
        $this->session->unset_userdata('searchadmin1');
		$zipcode = $this->session->userdata('zip');
		$this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        $this->session->unset_userdata('searchadmin2');
		$radius = '50';
		$this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
		$this->session->unset_userdata('searchadmin3');
		$this->session->unset_userdata('searchadmin4');
		$this->session->unset_userdata('searchadmin5');
		$this->session->unset_userdata('searchadmin6');
		$this->session->unset_userdata('searchadmin7');
		$this->session->unset_userdata('searchadmin8');
		$this->get_animal_volunteer_search();
	}	
	
	 public function get_animal_volunteer_search() 
	 {
       	
		$data = array();
        $data['Err_Msg'] = '';
        $zipcode = '';
        $radius = '';
        $caseworker = '';
		$monitor ='';
		$networker ='';
		$admin='';
		$matcher= '';
		
		if ($this->uri->segment(3))
            $limit = $this->uri->segment(3);
        else
            $limit = '0';
        if ($this->input->post('inpersonzipcode')) {
            if ($this->session->userdata('searchadmin1'))
                $this->session->unset_userdata('searchadmin1');
			
			$zip_code = $this->input->post('inpersonzipcode');
			$zip_code = str_replace(" ","",$zip_code);
			$_POST['inpersonzipcode'] = strtoupper($zip_code);	

            $zipcode = trim($this->input->post('inpersonzipcode')); 
            $this->session->set_userdata('searchadmin1', $this->common_function->custom_htmlentities($zipcode));
        }
		
        if ($this->input->post('inpersonradius')) {
            if ($this->session->userdata('searchadmin2'))
                $this->session->unset_userdata('searchadmin2');

            $radius = trim(addslashes($this->input->post('inpersonradius')));
            $this->session->set_userdata('searchadmin2', $this->common_function->custom_htmlentities($radius));
        }
		
		if ($this->input->post('caseworker')) {
            if ($this->session->userdata('searchadmin3'))
                $this->session->unset_userdata('searchadmin3');

            $caseworker = $this->input->post('caseworker');
            $this->session->set_userdata('searchadmin3', $this->common_function->custom_htmlentities($caseworker));
        }
		 
		 if ($this->input->post('monitor')) {
            if ($this->session->userdata('searchadmin4'))
                $this->session->unset_userdata('searchadmin4');

            $monitor = $this->input->post('monitor');
            $this->session->set_userdata('searchadmin4', $this->common_function->custom_htmlentities($monitor));
        }
		 if ($this->input->post('networker')) {
            if ($this->session->userdata('searchadmin5'))
                $this->session->unset_userdata('searchadmin5');

            $networker = $this->input->post('networker');
            $this->session->set_userdata('searchadmin5', $this->common_function->custom_htmlentities($networker));
        }
		
		 if ($this->input->post('admin')) {
            if ($this->session->userdata('searchadmin6'))
                $this->session->unset_userdata('searchadmin6');

            $admin = $this->input->post('admin');
            $this->session->set_userdata('searchadmin6', $this->common_function->custom_htmlentities($admin));
        }
		
		 if ($this->input->post('matcher')) {
            if ($this->session->userdata('searchadmin7'))
                $this->session->unset_userdata('searchadmin7');

            $matcher = $this->input->post('matcher');
            $this->session->set_userdata('searchadmin7', $this->common_function->custom_htmlentities($matcher));
        }
		
		 if ($this->input->post('volunteer')) {
            if ($this->session->userdata('searchadmin8'))
                $this->session->unset_userdata('searchadmin8');

            $volunteer = $this->input->post('volunteer');
            $this->session->set_userdata('searchadmin8', $this->common_function->custom_htmlentities($volunteer));
        }
		
		
		$rec_per_page = 12;	
		
		 // GET COUNT of TOTAL RECORDS
       $totalrecord = $this->foster_model->get_total_lost_animal($this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'),$this->session->userdata('searchadmin7'),$this->session->userdata('searchadmin8')); 
		//print_r($totalrecord);
		//die();*/	
		
		$data['lostanimal_list'] = $this->foster_model->get_lost_animal($limit, $rec_per_page ,$this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'),$this->session->userdata('searchadmin7'),$this->session->userdata('searchadmin8'));
		
		//echo "<pre>"; print_r($data['lostanimal_list']); die;
		
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
        $config["base_url"] = base_url() . 'org_dashboard/get_animal_volunteer_search/';
        //$config['base_url'] = $config['base_url'] . '/';
		//$config['base_url']	= '';
        $config['total_rows'] = $totalrecord;
        $config['per_page'] = $rec_per_page;
        $config['cur_page'] = $limit;
        $config['num_links'] = '3';
        $config['first_link'] = FALSE;
        $config['last_link'] = FALSE;

        $config['full_tag_open'] = '<ul class="pagination">';
        $config['full_tag_close'] = '</ul>';

        $config['prev_link'] = 'Prev';
        //$config['prev_tag_open'] = '<li class="prev" onClick="return getAjaxdata()">';
		$config['prev_tag_open'] = '<li class="prev">';
        $config['prev_tag_close'] = '</li>';

        $config['next_link'] = 'Next';
        //$config['next_tag_open'] = '<li class="next" class="selected" onClick="return getAjaxdata()">';
		$config['next_tag_open'] = '<li class="next" class="selected">';
        $config['next_tag_close'] = '</li>';

        //$config['num_tag_open'] = '<li onClick="return getAjaxdata()" >';
		$config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';

        //$config['cur_tag_open'] = '<li class="active" onClick="return getAjaxdata()" ><a href="" >';
		$config['cur_tag_open'] = '<li class="active"><a href="" >';
        $config['cur_tag_close'] = '</a></li>';

        $config['display_pages'] = TRUE;
        $this->pagination->initialize($config);
		$data['total_rows'] = $config['total_rows'];
        $data['currrent_page'] = floor(($config['cur_page'] / $config['per_page']) + 1);
        $data['total_no_page'] = ceil($config['total_rows'] / $config['per_page']);
        $data['per_page'] = $config['per_page'];
		$data['pagination'] = $this->pagination->create_links();
		
		//print_r($data['pagination']);exit;
        // ------------------------ PAGINATION ENDS HERE -------------------------------		
        // SET DATA to MAINTAIN record track on any action			
        $data['limit'] = $limit;
        $this->session->set_userdata('a_limit', $limit);
        if ($totalrecord == 0) {
            $data['Err_Msg'] = '<tr><td>&nbsp;</td><td>&nbsp;</td><td class="center">No Record(s) Found!</td><td>&nbsp;</td><td>&nbsp;</td></tr>';
			
        }
		//$data['totalrecord']=$totalrecord;
			//-----------------------LOAD MAP DATA FOR AJAX-------------------

		if($this->input->post('getmap')) // map data send only first load page and search page 
		{
			
			$all=1;
			$allanimal = $this->foster_model->get_lost_animal($limit, $rec_per_page ,$this->session->userdata('searchadmin1'), $this->session->userdata('searchadmin2'), $this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'),$this->session->userdata('searchadmin5') ,$this->session->userdata('searchadmin6'),$this->session->userdata('searchadmin7'),$this->session->userdata('searchadmin8'));


			if($this->session->userdata('zip') == $zipcode){			
				$user_lat_long =$this->organimal_model->get_user_latlong($this->session->userdata('zip'));	
			}
			else {
				$user_lat_long =$this->organimal_model->get_user_latlong($zipcode);
			}
				
		if (!empty($allanimal)) {

            //echo '<pre>'; print_r($data['foster_list']);die;
            $f = $ph = $pd = $u = $v = $d = $p = $l='';
			$finalstring = '';
            foreach ($allanimal as $row) {

                //echo '<pre>'; print_r($row);die;
                $data['name'][] = $this->common_function->custom_addslashes($row['st_display_name']);
              //  $data['latlong'][] = '["' . $this->common_function->custom_addslashes($row['st_display_name']) . '",' . $row['lat'] . ',' . $row['lon'] . ']';

				$data['latlong'][] = '["' . $row['st_display_name'] . '",' . $row['lat'] . ',' . $row['lon'] . ']';
               
                $username = $row['st_display_name'];
                $stemail = $row['st_email'];
				$vertitle='';
				
				if(!empty($row['verified'])){
					$verified_url =  base_url().'assets/img/small_doobert_verified_logo.jpg' ; 
					
					}else {
					$verified_url =  base_url().'assets/img/gray_logo.jpg' ;	
					}
				$vertitle = ( isset($row['verified']) && $row['verified'] != '0000-00-00')?date('F d, Y',strtotime($row['verified'])):'';
                //$fosterid=$row['in_foster_animal_detail_id'];	
                if ($row['st_profile_image'] == '') {
                    $path = $this->config->item('upload_url') . "profile/63x63/no_photo.png";
                } else {
                    $path = $this->config->item('upload_url') . "profile/63x63/" . $row['st_profile_image'];
                }
				if(!empty($row['arpa_cert']) && $row['arpa_cert'] =='Y') { 
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified.png" title="Certified Animal Rescue Transporter" />'; 
					} else {
									$image_cert_url = '<img src="'.base_url().'assets/img/arpa-certified-grey.png" />'; 
				}

                if (isset($row['st_foster_home']) && $row['st_foster_home'] == 'Y') {
                    $f = '<li><img src="' . base_url() . 'assets/img/icon-foster-home.png" alt="Foster Home" title="Foster Home" /></li>';
                }
                if (isset($row['st_photographer']) && $row['st_photographer'] == 'Y') {
                    $ph = '<li><img src="' . base_url() . 'assets/img/icon-photographer.png" alt="Volunteer" title="Photographer" /></li>';
                }
                if (isset($row['st_pilot']) && $row['st_pilot'] == 'Y') {
                    $p = '<li><img src="' . base_url() . 'assets/img/icon-pilot-profile.png" alt="Pilot Profile" title="Pilot Profile" /></li>';
                }
                if (isset($row['st_driver']) && $row['st_driver'] == 'Y') {
                    $d = '<li><img src="' . base_url() . 'assets/img/icon-driver.png" alt="Driver" title="Driver"/></li>';
                }
                if (isset($row['st_in_person_volunteer']) && $row['st_in_person_volunteer'] == 'Y') {
                    $u = '<li><img src="' . base_url() . 'assets/img/icon-person.png" alt="User" title="In Person Volunteer"/></li>';
                }
                if (isset($row['st_virtual_support_volunteer']) && $row['st_virtual_support_volunteer'] == 'Y'){
                    $v = '<li><img src="' . base_url() . 'assets/img/icon-virtual-support-volunteers.png" alt="Volunteer" title="Volunteer" /></li>';
                }
				 if (isset($row['st_lost_animal_support']) && $row['st_lost_animal_support'] == 'Y'){
                    $l = '<li><img src="' . base_url() . 'assets/img/icon-dd-lost-aimal-support.png" alt="Lost Animal Support" title="Lost Animal Support" /></li>';
                }
					
					$finalfoster_list[$i]['link_arpa_cert'] = $image_cert_url;
					
					$finalfoster_list[$i]['homelink']='';
					if(isset($foster['st_foster_home']) && $foster['st_foster_home']== 'Y'){
					$finalfoster_list[$i]['st_foster_home'] = $foster['st_foster_home'];
					$finalfoster_list[$i]['homelink'] = base_url().'assets/img/icon-foster-home.png' ;
					}
					 $finalfoster_list[$i]['photolink']='';
					if (isset($foster['st_photographer']) && $foster['st_photographer'] == 'Y'){
					 $finalfoster_list[$i]['st_photographer'] = $foster['st_photographer'];
					 $finalfoster_list[$i]['photolink'] = base_url().'assets/img/icon-photographer.png';
					}
					$finalfoster_list[$i]['pilotlink']='';
					if(isset($foster['st_pilot']) && $foster['st_pilot'] == 'Y') {
						$finalfoster_list[$i]['st_pilot'] = $foster['st_pilot'];
						$finalfoster_list[$i]['pilotlink'] = base_url().'assets/img/icon-pilot-profile.png';
					}	
					$finalfoster_list[$i]['driverlink']='';
					if (isset($foster['st_driver']) && $foster['st_driver'] == 'Y'){
						$finalfoster_list[$i]['st_driver'] = $foster['st_driver'];
						$finalfoster_list[$i]['driverlink'] = base_url().'assets/img/icon-driver.png';
					}
					
					$finalfoster_list[$i]['personlink']='';
					if (isset($foster['st_in_person_volunteer']) && $foster['st_in_person_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_in_person_volunteer'] = $foster['st_in_person_volunteer'];
						$finalfoster_list[$i]['personlink'] = base_url().'assets/img/icon-person.png';
					}
					
					$finalfoster_list[$i]['virtuallink']='';
					if (isset($foster['st_virtual_support_volunteer']) && $foster['st_virtual_support_volunteer'] == 'Y') {
						$finalfoster_list[$i]['st_virtual_support_volunteer'] = $foster['st_virtual_support_volunteer'];
						$finalfoster_list[$i]['virtuallink'] = base_url().'assets/img/icon-virtual-support-volunteers.png';
					}
					
					$finalfoster_list[$i]['lostanimallink']='';
					if (isset($foster['st_lost_animal_support']) && $foster['st_lost_animal_support'] == 'Y') {
						$finalfoster_list[$i]['st_lost_animal_support'] = $foster['st_lost_animal_support'];
						$finalfoster_list[$i]['lostanimallink'] = base_url().'assets/img/icon-dd-lost-aimal-support.png';
					}
					
					

								
				$finalstring = '<div id="subscribe-pop"><div class="foster-popup-result-box"><div class="top-part">     <a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '"><img src="' . $path . '" alt="' . $username . '" title="' . $username . '" class="foster-img" /></a><h4><a href="' . base_url() . 'user-' . $row['user_id'] . '-' . $this->common_function->get_filtered_name($row['st_display_name']) . '">' . $username . '</a></h4><a href="#user-contact2" data-toggle="modal" class="foster-contact" onClick="contactUser2(\''. $stemail . '/'. $username . '\')"><i class="fa fa-envelope-o "></i>Contact Me</a><ul>' . $f . $ph . $p . $d . $u . $v . '</ul></div><div class="clear"></div><div class="bottom-part">';
				
				
				$finalstring .='</div></div></div>';
				if(is_array($row['lost_animal'])){
					if(in_array('in_caseworker',$row['lost_animal'])){
					$finalstring .= '<p><span>Caseworker</span></p>';
					}
					if(in_array('in_monitor',$row['lost_animal'])){
					$finalstring .= '<p><span>Craigslist Monitor</span></p>';
					}
					if(in_array('in_networker',$row['lost_animal'])){
					$finalstring .= '<p><span>Facebook Liason/Networker</span></p>';
					}
					if(in_array('in_admin',$row['lost_animal'])){
					$finalstring .= '<p><span>Facebook Admins/Flyermakers</span></p>';
					}
					
					if(in_array('in_matcher',$row['lost_animal'])){
					$finalstring .= '<p><span>Matchers</span></p>';
					}
					
					if(in_array('in_volunteer',$row['lost_animal'])){
					$finalstring .= '<p><span>Dead End Microchip Volunteers</span></p>';
					}
				}
								
				
				$data['pop_up_desc'][] =$finalstring; 
				
				
		
			}//foreach
			
				$finalpopup =array();
				$finallatlong = array();
				$finalname    = array();
				if(isset($data['latlong']) && $data['latlong']!='')
				{ 
				$j=0;
				//foreach($data['latlong'] as $v){
				for($i=0;$i<count($data['latlong']);$i++){	
				$res = explode(",", $data['latlong'][$i]);
				if($res[1]!='')
				{
				$finallatlong[$j] = $data['latlong'][$i]; 
				$finalpopup[$j]   = $data['pop_up_desc'][$i];
				$finalname[$j]    = $data['name'][$i]; 
				$j++;
				}
				}
				}
				if($data['pop_up_desc']) {
				$data2['pop_up_desc']= $finalpopup;
				$data2['name'] = $finalname; 
				$data2['latlong'] = $finallatlong;
				$data2['latlong_count'] = count($finallatlong);
				$data2['user_lat_long'] = $user_lat_long;
				if($this->input->post('search')){
				$data2['search']='yes';
				}else {
				$data2['search']='no';	
				}
				echo json_encode($data2);
				}
			}
		} else {
		
		$data1=array();
		//print_r($finalanimal_list); die;
		$data['zipcode']  = $this->session->userdata('searchadmin1');
		$data['radius']  = $this->session->userdata('searchadmin2');
		$data['animal_list'] = $finalanimal_list;
		$data['counter']	  = count($finalanimal_list);
		$data['pagination']  = $data['pagination'];
		$data['total_rows']  = $data['total_rows'];
		$data['Err_Msg']	  = $data['Err_Msg'];
			
		
		//echo "<pre>"; print_r($data);die;
		
		//echo json_encode($data1);
		
		 /*echo "<pre>"; print_r($data);
		die();*/
		$this->load->view('lost-animal-volunteer-search', $data);
		}
	}
	
	//function to fix image orientation for iphone mobile pic starts
	function correctImageOrientation($filename) {
	  if (function_exists('exif_read_data')) {
		$exif = exif_read_data($filename);
		if($exif && isset($exif['Orientation'])) {
		  $orientation = $exif['Orientation'];
		  if($orientation != 1){
			$img = imagecreatefromjpeg($filename);
			$deg = 0;
			switch ($orientation) {
			  case 3:
				$deg = 180;
				break;
			  case 6:
				$deg = 270;
				break;
			  case 8:
				$deg = 90;
				break;
			}
			if ($deg) {
			  $img = imagerotate($img, $deg, 0);        
			}
			// then rewrite the rotated image back to the disk as $filename 
			imagejpeg($img, $filename, 95);
		  } // if there is some rotation necessary
		} // if have the exif orientation info
	  } // if function exists      
	}
	
	
	public function organization_resources()
	{
		$data = array();
		$this->load->view('organization-resources',$data);
	}
	
	public function organization_account_settings()
	{
		$this->load->model('rescue_animal_model');
		$data = array();
		$organization_id = $this->session->userdata('org_id');
		$animal_rescue_id = $this->rescue_animal_model->get_rescue_org_id($organization_id);
		
		//print_r($animal_rescue_id); die;
		if(!empty($animal_rescue_id)){
			$data['rescue_group_id'] = $animal_rescue_id[0]['in_rescue_group_id'];
			$data['shelter_group_id'] = $animal_rescue_id[0]['in_adopt_a_pet_id'];
			$data['shelter_api_key'] = $animal_rescue_id[0]['in_adopt_a_pet_key'];
			$data['shelterluv_api_key'] = $animal_rescue_id[0]['in_shelterluv_id'];	
			$data['shelterluv_cron_status'] = $animal_rescue_id[0]['in_shelterluv_cron_status'];		
			$data['shelter_manager_account'] = $animal_rescue_id[0]['st_shelter_manager_account'];
			$data['shelter_manager_username'] = $animal_rescue_id[0]['st_shelter_manager_username'];
			$data['shelter_manager_password'] = $animal_rescue_id[0]['st_shelter_manager_password'];
			
			$data['shelter_buddy_username'] = $animal_rescue_id[0]['st_shelter_buddy_username'];
			$data['shelter_buddy_password'] = $animal_rescue_id[0]['st_shelter_buddy_password'];
			
		}else{
			$data['rescue_group_id'] = '';
			$data['shelter_group_id'] = '';
			$data['shelter_api_key'] = '';
			$data['shelterluv_api_key'] = '';
			$data['shelterluv_cron_status'] = '';	
			$data['shelter_manager_account'] = '';
			$data['shelter_manager_username'] = '';
			$data['shelter_manager_password'] = '';			
			$data['shelter_buddy_username'] = '';
			$data['shelter_buddy_password'] = '';
		}		
		
		$this->load->view('organization-account-settings',$data);
	}	   
	
	public function fbshare_template()
	{ 
		if(!($this->session->userdata('org_id')))
		{
			redirect($this->config->item('base_url'));
		}
		$org_details = $this->common_model->get_single_org_details($this->session->userdata('org_id'));	
		$data['share_template'] = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
		$data['disastermode']   = ($org_details['in_disaster']=='1')? 'on': 'off';
		$data['st_org_name']   = 	 (isset($org_details['st_org_name'])&& $org_details['st_org_name']!='')?$org_details['st_org_name']:'';
		//echo '<pre>'; print_r($data['share_template']); die;
		$this->load->view('fbshare-layout-choose',$data);
	}
	
	public function fbshare_update_temp()
	{
		//$this->input->post('selected_template');
		if($this->input->post('selected_template'))
		{	
			$update_temp = array('in_fb_templateid'=> $this->input->post('selected_template'),
								 'dt_modified'	   => date('Y-m-d h:i:s')
								);
			$this->db->where('in_organization_id',$this->session->userdata('org_id'));
			$update_value = $this->db->update('tbl_organization',$update_temp);
			//echo $update_value;
		}
		echo $this->db->last_query();die;	
	}
	
	public function manage_partnar()
	{
		echo "here";
		$this->load->view('manage-partner-list -html');
	}
	
	
	
	public function items_offer_list()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		
		$this->session->unset_userdata('searchadmin1');
		$this->session->unset_userdata('searchadmin2');
		$this->session->unset_userdata('searchadmin3');
		$this->page();		
	}
	
	public function page($sort=false,$order=false,$limit=false)
	{
		
		$data			 	=	array();
		if(!$sort)
			$sort='name';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';


		if($this->input->post('txtname') && ($this->input->post('action') == 'search'))
				{				
					$txtname = trim($this->input->post('txtname'));				
					$this->session->set_userdata('searchadmin1',$this->common_function->custom_htmlentities($txtname));				
				}	

		if($this->input->post('txtcat') && ($this->input->post('action') == 'search'))
				{				
					$txtcat = trim($this->input->post('txtcat'));				
					$this->session->set_userdata('searchadmin2',$txtcat);				
				}

		if($this->input->post('txttype') && ($this->input->post('action') == 'search'))
				{				
					$txttype = trim($this->input->post('txttype'));				
					$this->session->set_userdata('searchadmin3',$txttype);				
				}
		$rec_per_page = 12;	
		
		$data['category_list'] = $this->common_model->get_category();
		//echo '<pre>'; print_r($data['category_list']); die;
		
		$total_record = $this->partner_model->get_item_list_all_data($this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'));
		
		
		
		
		$all_item = $this->partner_model->get_item_list_data($rec_per_page,$limit,$sort,$order,$this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'));
		
		//echo '<pre/>';
		//print_r($all_item);exit;
		
		$data['all_item']  = $all_item;
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_dashboard/page/';
		$config['base_url']	  	  = $config['base_url'].'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;		
		
		$this->load->view('items-offer-list',$data);
	}
	
	public function items_offer_delete($id=false)
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		
		$this->partner_model->item_delete($id);
		$this->session->set_flashdata('message','Item Deleted successfully.');
		redirect($this->config->item('base_url').'org_dashboard/items_offer_list');
	}
	
	
	public function add_item()
   {  
		$item_info = array('in_org_id'      =>$this->session->userdata('org_id'),
							'st_item_name'  =>$this->input->post('name'),
							'in_item_qty'   =>$this->input->post('qty'),
							'in_item_cat'   =>$this->input->post('cat'),
							'st_item_desc'  =>$this->input->post('desc'),
							'st_item_type'  =>$this->input->post('itemtype'),
							'dt_created'    => date('Y-m-d H:i:'),
							'dt_modified'   => date('Y-m-d H:i:'),
							);
							
		if($_POST['name']!='' && $_POST['qty']!='' && $_POST['cat']!='' && $_POST['desc']!='' ){
			$id =	$this->partner_model->add_item_details($item_info);
			$this->session->set_flashdata('message','Item added successfully.');
			$redirect = $this->config->item('base_url') . "org_dashboard/items_offer_list/";
			redirect($redirect);
		}
		else{
			$redirect = $this->config->item('base_url') . "org_dashboard/items_offer_list/";
			redirect($redirect);
		}
	   //echo json_encode($id);
	   
   }
   
   
   public function update_item()
   {
	   $id=$this->input->post('id');
	   $item_info = array(
							'st_item_name'  =>$this->input->post('name1'),
							'in_item_qty'   =>$this->input->post('qty1'),
							'in_item_cat'   =>$this->input->post('cat1'),
							'st_item_desc'  =>$this->input->post('desc1'),
							'st_item_type'  =>$this->input->post('itemtype1'),							
							'dt_modified'   => date('Y-m-d H:i:'),
							);
							
		if($_POST['name1']!='' && $_POST['qty1']!='' && $_POST['cat1']!='' && $_POST['desc1']!='' ){
			$idd =	$this->partner_model->update_item_details($item_info,$id);
			$this->session->set_flashdata('message','Item updated successfully.');
			$redirect = $this->config->item('base_url') . "org_dashboard/items_offer_list/";
			redirect($redirect);
		}
		else{
			$redirect = $this->config->item('base_url') . "org_dashboard/items_offer_list/";
			redirect($redirect);
		}
	   
   }
   
   public function add_offer()
   {  
   
   
   //echo $this->session->userdata('sessorgemail'). $this->session->userdata('sessdirector');die;
		$offer_info = array('in_org_id'     => $this->session->userdata('org_id'),
							'in_item_id'    => $this->input->post('itmid'),
							'st_comments'   => $this->input->post('comments1'),
							'st_item_type'  => 'O',
							'dt_created'    => date('Y-m-d H:i:'),
							'dt_modified'   => date('Y-m-d H:i:'),
							);
							
	   if($_POST['comments1'] != ''){
	   $id=	$this->partner_model->add_offer_details($offer_info);
	   
	   // mail start
	   $data = array();
	   
	   $email_details = $this->common_model->get_email_containt("148");
	   $q			=	$this->common_model->get_affiliate_donation_detail('3');	

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							
							$imgpath	=	'http://crystal99/doobert-v3/upload/affiliate_images/orig/'.$qr['st_image'];
							//$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
	   $this->load->library('email');
	   
	   
	   if(isset($email_details[0]['st_email_body']))
				{  
					$templete  = $email_details[0]['st_email_body'];					
					$templete  = str_replace("##comment##",$this->input->post('comments1'),$templete);

					$templete  = str_replace("##itemname##",$this->input->post('offeritemname'),$templete);
					$templete  = str_replace("##qty##",$this->input->post('offeritemqty'),$templete);
					$templete  = str_replace("##category##",$this->input->post('offeritemcat'),$templete);
					
					$templete  = str_replace("##current_year##",date('Y'),$templete);	
					$templete  = str_replace("##DONATION##",$donation,$templete);	
					$templete  = str_replace("##user_name##",$this->input->post('offerdirector'),$templete);
					
					$templete  = str_replace("##ORGANIZATION##",$this->session->userdata('org_name'),$templete);
					$url=base_url()."org_dashboard/items_searched_needed/";
					$templete  = str_replace("##url##",$url,$templete);
							
							
							$strMail 	= 	$templete;
							//$to			=	$userDetail['email_address'];
							$to			=	$this->input->post('offeremail');
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail; 
							
							
							$user_to_id = $this->common_model->get_user_id_by_email($to);						
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
															
								
							
							$this->common_function->send_mail($this->email, $to, $subject, $message,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));			
							
						   //echo $this->email->print_debugger();	
				}
	   
	   
	   
	   // mail end
	   
	   //echo json_encode($id);
	   
	   $this->session->set_flashdata('message','Offer sent successfully.');
	   $redirect = $this->config->item('base_url') . "org_dashboard/items_searched_needed/";
	   redirect($redirect);
	   }
	   else{   
	    $redirect = $this->config->item('base_url') . "org_dashboard/items_searched_needed/";
	    redirect($redirect);
	   }
   }
   
   
   public function add_request()
   {
	   $request_info = array('in_org_id'    =>$this->session->userdata('org_id'),
							'in_item_id'    =>$this->input->post('itmrqid'),
							'st_comments'   =>$this->input->post('comments'),
							'st_item_type'  => 'N',
							'dt_created'    => date('Y-m-d H:i:'),
							'dt_modified'   => date('Y-m-d H:i:'),
							);
							
							
							
		// mail start
	   $data = array();
	   if($_POST['comments'] != ''){
		$id=	$this->partner_model->add_offer_details($request_info);
	   $email_details = $this->common_model->get_email_containt("150");
	   $q			=	$this->common_model->get_affiliate_donation_detail('3');	

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							
							$imgpath	=	'http://crystal99/doobert-v3/upload/affiliate_images/orig/'.$qr['st_image'];
							//$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
	   $this->load->library('email');
	   
	   
	   if(isset($email_details[0]['st_email_body']))
				{  
					$templete  = $email_details[0]['st_email_body'];					
					$templete  = str_replace("##comment##",$this->input->post('comments'),$templete);
					$templete  = str_replace("##DONATION##",$donation,$templete);

					$templete  = str_replace("##itemname##",$this->input->post('requestitemname'),$templete);
					$templete  = str_replace("##qty##",$this->input->post('requestitemqty'),$templete);
					$templete  = str_replace("##category##",$this->input->post('requestitemcat'),$templete);
					
					$templete  = str_replace("##current_year##",date('Y'),$templete);					
					$templete  = str_replace("##user_name##",$this->input->post('requestdirector'),$templete);
					
					$templete  = str_replace("##ORGANIZATION##",$this->session->userdata('org_name'),$templete);
					$url=base_url()."org_dashboard/items_searched_needed/";
					$templete  = str_replace("##url##",$url,$templete);
							
							
							$strMail 	= 	$templete;
							//$to			=	$userDetail['email_address'];
							$to			=	$this->input->post('requestemail');
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail; 
							
							
							$user_to_id = $this->common_model->get_user_id_by_email($to);						
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
															
								
							
							$this->common_function->send_mail($this->email, $to, $subject, $message,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));			
							
						   //echo $this->email->print_debugger();	
				}
	   
	   
	   $this->session->set_flashdata('message','Request sent successfully.');
	   $redirect = $this->config->item('base_url') . "org_dashboard/items_searched_needed/";
	   redirect($redirect);
	   }
	   else{		   
		$redirect = $this->config->item('base_url') . "org_dashboard/items_searched_needed/";
	    redirect($redirect);
	   }	   
   }
   
   
   
   public function get_item_details()
   {
	   $item_id =  $this->input->post('id');
	   $item_details = $this->partner_model->get_item($item_id);		
	   echo json_encode($item_details);
   }
   
   public function get_ajax_item_details()
   {
	   $item_id =  $this->input->post('id');
	   $item_details = $this->partner_model->get_ajax_item($item_id);		
	   echo json_encode($item_details);
   }
   
   
   public function available_animal_list()
	{   
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		if(is_numeric($this->uri->segment(3)) && $this->uri->segment(3)!=''){		
		$this->session->set_userdata('partnerorg_id',$this->uri->segment(3));
		}
		
		
		
		$this->session->unset_userdata('searchadmin1');
		$this->session->unset_userdata('searchadmin2');
		$this->session->unset_userdata('searchadmin3');
		$this->page2();		
	}
	
	public function page2($sort=false,$order=false,$limit=false)
	{
		
		$data			 	=	array();
		if(!$sort)
			$sort='name';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';


		if($this->input->post('txtname') && ($this->input->post('action') == 'search'))
				{				
					$txtname = trim($this->input->post('txtname'));				
					$this->session->set_userdata('searchadmin1',$this->common_function->custom_htmlentities($txtname));				
				}	

		if($this->input->post('txtcat') && ($this->input->post('action') == 'search'))
				{				
					$txtcat = trim($this->input->post('txtcat'));				
					$this->session->set_userdata('searchadmin2',$txtcat);				
				}

		if($this->input->post('txttype') && ($this->input->post('action') == 'search'))
				{				
					$txttype = trim($this->input->post('txttype'));				
					$this->session->set_userdata('searchadmin3',$txttype);				
				}
		$rec_per_page = 12;	
		
		$data['category_list'] = $this->common_model->get_category();
		//echo '<pre>'; print_r($data['category_list']); die;
		
		$data['org_name'] = $this->common_model->get_org();
		
		//print_r($data['org_name']['st_org_name']); die;
		
		$total_record = $this->partner_model->get_item_list_all_data_available($this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'));		
		
		$all_item = $this->partner_model->get_item_list_data_available($rec_per_page,$limit,$sort,$order,$this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'));
		
		//echo '<pre/>';
		//print_r($all_item);exit;
		
		//echo $all_item[0]['orgemail'];die;
		$this->session->set_userdata('sessorgemail',$all_item[0]['orgemail']);
		$this->session->set_userdata('sessdirector',$all_item[0]['director']);
		
		
		$data['all_item']  = $all_item;
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_dashboard/page2/';
		$config['base_url']	  	  = $config['base_url'].'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;		
		
		$this->load->view('available-animal-list',$data);
	}
	
	public function items_searched_needed()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}	
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		
		$this->session->unset_userdata('searchadmin1');
		$this->session->unset_userdata('searchadmin2');
		$this->session->unset_userdata('searchadmin3');
		$this->session->unset_userdata('searchadmin4');
		$this->page3();		
	}
	public function page3($sort=false,$order=false,$limit=false)
	{	
		
		$data			 	=	array();
		if(!$sort)
			$sort='name';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';
		
		if($this->input->post('txtname') && ($this->input->post('action') == 'search'))
				{				
					$txtname = trim($this->input->post('txtname'));				
					$this->session->set_userdata('searchadmin1',$this->common_function->custom_htmlentities($txtname));				
				}	

		if($this->input->post('txtcat') && ($this->input->post('action') == 'search'))
				{				
					$txtcat = trim($this->input->post('txtcat'));				
					$this->session->set_userdata('searchadmin2',$txtcat);				
				}

		if($this->input->post('txttype') && ($this->input->post('action') == 'search'))
				{				
					$txttype = trim($this->input->post('txttype'));				
					$this->session->set_userdata('searchadmin3',$txttype);				
				}
		if($this->input->post('txtpartner') && ($this->input->post('action') == 'search'))
				{				
					$txtpartner = trim($this->input->post('txtpartner'));				
					$this->session->set_userdata('searchadmin4',$txtpartner);				
				}
				
		$rec_per_page = 12;			
		$data['category_list'] = $this->common_model->get_category();	
		$data['partner_list'] = $this->common_model->get_partner();	
		//echo '<pre>'; print_r($data['partner_list']); die;
		//echo $this->session->userdata('org_id');
		$total_record = $this->partner_model->get_item_searched_needed_list_all_data($this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4')); 
		
		
		
		$all_item = $this->partner_model->get_item_searched_needed_list_data($rec_per_page,$limit,$sort,$order,$this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'),$this->session->userdata('searchadmin3'),$this->session->userdata('searchadmin4'));
		
		//echo '<pre/>';
		//print_r($all_item);exit;
		
		$data['all_item']  = $all_item;
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_dashboard/page3/';
		$config['base_url']	  	  = $config['base_url'].'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;		
		
		$this->load->view('items-searched-needed',$data);
		
	}
	
	
	public function add_offer2()
   {     
		$offer_info = array('in_org_id'     => $this->session->userdata('org_id'),
							'in_item_id'    => $this->input->post('itmid'),
							'st_comments'   => $this->input->post('comments1'),
							'st_item_type'  => 'O',
							'dt_created'    => date('Y-m-d H:i:'),
							'dt_modified'   => date('Y-m-d H:i:'),
							);
	   
	  
	   
	   // mail start
	   $data = array();
	   if($_POST['comments1'] != ''){
	   $id=	$this->partner_model->add_offer_details($offer_info);
	   $email_details = $this->common_model->get_email_containt("148");
	   $q			=	$this->common_model->get_affiliate_donation_detail('3');	

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							
							$imgpath	=	'http://crystal99/doobert-v3/upload/affiliate_images/orig/'.$qr['st_image'];
							//$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
	   
	   $this->load->library('email');
	   
	   
	   if(isset($email_details[0]['st_email_body']))
				{  
					$templete  = $email_details[0]['st_email_body'];					
					$templete  = str_replace("##comment##",$this->input->post('comments1'),$templete);
					$templete  = str_replace("##DONATION##",$donation,$templete);

					$templete  = str_replace("##itemname##",$this->input->post('offeritemname'),$templete);
					$templete  = str_replace("##qty##",$this->input->post('offeritemqty'),$templete);
					$templete  = str_replace("##category##",$this->input->post('offeritemcat'),$templete);
					
					$templete  = str_replace("##current_year##",date('Y'),$templete);					
					$templete  = str_replace("##user_name##",$this->session->userdata('sessdirector'),$templete);
					$templete  = str_replace("##ORGANIZATION##",$this->session->userdata('org_name'),$templete);
					$url=base_url()."org_dashboard/available_animal_list/".$this->session->userdata('partnerorg_id');
					$templete  = str_replace("##url##",$url,$templete);
							
							
							$strMail 	= 	$templete;							
							$to			=	$this->session->userdata('sessorgemail');
							//$to			=	'sadique.mohammed@pulsesolutions.net';
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail; 
							
							
							$user_to_id = $this->common_model->get_user_id_by_email($to);						
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
															
								
							
							$this->common_function->send_mail($this->email, $to, $subject, $message,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));			
							
						   //echo $this->email->print_debugger();	
				}
	   
	   
	   
	   // mail end
	   
	   $this->session->set_flashdata('message','Offer sent successfully.');
	   $redirect = $this->config->item('base_url') . "org_dashboard/available_animal_list/";
	   redirect($redirect);
	   }
	   else
	   {
		   $redirect = $this->config->item('base_url') . "org_dashboard/available_animal_list/";
	   redirect($redirect);
		   
	   }
   }
   
   
   public function add_request2()
   {
	   $request_info = array('in_org_id'    =>$this->session->userdata('org_id'),
							'in_item_id'    =>$this->input->post('itmrqid'),
							'st_comments'   =>$this->input->post('comments'),
							'st_item_type'  => 'N',
							'dt_created'    => date('Y-m-d H:i:'),
							'dt_modified'   => date('Y-m-d H:i:'),
							);
							
							
							
		// mail start
	   $data = array();
	   if($_POST['comments']){
		 $id=	$this->partner_model->add_offer_details($request_info);
	   $email_details = $this->common_model->get_email_containt("150");
	   $q			=	$this->common_model->get_affiliate_donation_detail('3');	

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							
							$imgpath	=	'http://crystal99/doobert-v3/upload/affiliate_images/orig/'.$qr['st_image'];
							//$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
	   $this->load->library('email');
	   
	   
	   if(isset($email_details[0]['st_email_body']))
				{  
					$templete  = $email_details[0]['st_email_body'];					
					$templete  = str_replace("##comment##",$this->input->post('comments'),$templete);
					$templete  = str_replace("##DONATION##",$donation,$templete);
					$templete  = str_replace("##itemname##",$this->input->post('requestitemname'),$templete);
					$templete  = str_replace("##qty##",$this->input->post('requestitemqty'),$templete);
					$templete  = str_replace("##category##",$this->input->post('requestitemcat'),$templete);
					$templete  = str_replace("##current_year##",date('Y'),$templete);					
					$templete  = str_replace("##user_name##",$this->session->userdata('sessdirector'),$templete);
					
					$templete  = str_replace("##ORGANIZATION##",$this->session->userdata('org_name'),$templete);
					$url=base_url()."org_dashboard/available_animal_list/".$this->session->userdata('partnerorg_id');
					$templete  = str_replace("##url##",$url,$templete);
							
							
							$strMail 	= 	$templete;
							//$to			=	$userDetail['email_address'];
							$to			=	$this->session->userdata('sessorgemail');
							//$to			=	'sadique.mohammed@pulsesolutions.net';
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail; 
							
							
							$user_to_id = $this->common_model->get_user_id_by_email($to);						
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);							
								
							
							$this->common_function->send_mail($this->email, $to, $subject, $message,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));			
							
						   //echo $this->email->print_debugger();	
				}
	   
	   
	   
	   // mail end  
	  
	   $this->session->set_flashdata('message','Request sent successfully.');
	   $redirect = $this->config->item('base_url') . "org_dashboard/available_animal_list/";
	   redirect($redirect);
	   }
	   else{
		   $redirect = $this->config->item('base_url') . "org_dashboard/available_animal_list/";
	       redirect($redirect);
	   }
   }

	public function manage_volunteer_users(){
		
		$signup_video		=	$this->common_model->get_signup_demo_video();
		foreach($signup_video as $val){
				
				$arr_v	=	explode('v=',$val['st_url']);
				$data['signup_video'][$val['id_demo_videos']]	=	$arr_v[1];
		}		
		$this->load->view('manage-volunteer-users',$data);
	}
	
	public function list_drivers(){	
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		$this->session->unset_userdata('searchusername');	
		$this->session->unset_userdata('searchorgname');	
		$this->page4();			
	}
	
	function page4($sort=false,$order=false,$limit=false)
	{ 
	   //echo $this->session->userdata('org_id'); die;
	
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}	
		
		$data			 	=	array();
		$data['Err_Msg']	=	'';	
		$username			=	'';			
		
		
		// SET DEFAULT RULES FOR PAGE LIST RESULT 
		if(!$sort)
			$sort='username';
		
		if(!$order)
			$order = 'asc';
			
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';
	
		// GET SEARCH KEYWORDS AND MAINTAIN FOR PAGINATION
		
		if($this->input->post('txtsearch'))
		{			
			if($this->session->userdata('searchusername'))
				$this->session->unset_userdata('searchusername');						
				
			$username = trim($this->input->post('txtsearch'));				
			$this->session->set_userdata('searchusername',$this->common_function->custom_htmlentities($username));	
		}		

		$rec_per_page =	  $this->config->item('per_page');		
		
		// GET COUNT of TOTAL RECORDS
		$total_record		= $this->organimal_model->get_total_driver($this->session->userdata('searchusername'));
		// GET PAGE LIST RESULT HERE
		
		$data['driver_list']	= $this->organimal_model->get_driver($sort,$order,$limit,$rec_per_page,$this->session->userdata('searchusername'));
		
		//echo '<pre>'; print_r($data['driver_list']); die;
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_dashboard/page4/';
		$config['base_url']	  	  = $config['base_url'].'/'.$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;	
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $total_record ) ? $total_record : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']			= $to;
		$this->load->view('list-drivers',$data);
	}
	
	
	public  function mvr_check()
	{		
		$userid=$this->input->post('userid');	
		
		for($i=0;$i<count($userid);$i++)
					{		
							$mvrcheck = array('in_user_id' 			=> $userid[$i],
											  'in_organization_id' 	=> $this->session->userdata('org_id'),
											  'in_completed' 		=> 1,													
											  'dt_created' 			=> date("Y-m-d H:i:s"),
											  'dt_modified' 		=> date("Y-m-d H:i:s"),														 
											);														
							$this->db->insert('tbl_mvr_check', $mvrcheck);									
							$id = $this->db->insert_id();												
					}
		   $this->session->set_flashdata('success','MVR Check updated successfully.');
		   $redirect = $this->config->item('base_url') . "org_dashboard/list_drivers/";
	       redirect($redirect);				
	}
	
	function animal_org_notification(){
		$this->load->view('org_animal_notification14-8-18.php');
	}
	public function organization_fb_groups()
	{
		if($_POST)
		{
			$data = array();
			$check = '';
			//print_r($_POST);
			
			$this->form_validation->set_rules('email', 'Email', 'required|valid_email');
			if ($this->form_validation->run() == FALSE)
				{
					//$this->form_validation->set_error_delimiters('<div class="error">', '</div>');
					$data['Err_Msg'] = validation_errors();
					$redirect = $this->config->item('base_url') . "org_dashboard/organization_fb_groups";
					redirect($redirect);
				}
				
				if($this->session->userdata('org_id'))
				{
					$check = $this->organimal_model->check_facebook_group($_POST['email'],$this->session->userdata('org_id'));
			
					if($check)
						{ 
							$data['Err_Msg']	=	'Email Already exist.';
							$data['result_fb'] = $this->organimal_model->fetch_facebook_groups($this->session->userdata('org_id'));
							$this->load->view('organization-facebook-groups',$data);	
						}
						else{
							$data = array('st_email'=>$_POST['email'],'in_status'=>'1','in_deleted'=>'0','in_organization_id'=>$this->session->userdata('org_id'));
							$this->organimal_model->facebook_group($data);
							$data['result_fb'] = $this->organimal_model->fetch_facebook_groups($this->session->userdata('org_id'));
							$redirect = $this->config->item('base_url') . "org_dashboard/organization_fb_groups";
							redirect($redirect);
					
							
							
						}
				}
				else{
							$data['Err_Msg']	=	'Please Select Organization';
							$data['result_fb'] = $this->organimal_model->fetch_facebook_groups($this->session->userdata('org_id'));
							$this->load->view('organization-fb-groups',$data);	
				}
			
			
			 //redirect($redirect);		
		}
		else{
			$data = array();
			$this->session->userdata('org_id');
			
			
			$data['result_fb'] = $this->organimal_model->fetch_facebook_groups($this->session->userdata('org_id'));
			
			$this->load->view('organization-facebook-groups',$data);
		}
		
	}
	public function email_delete()
	{
		
		$this->organimal_model->email_delete($_POST['mail_id'],$this->session->userdata('org_id'));
		echo 'success';
		
	}
	
	
	
	public function adoption_request()
	{
		
		if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }	
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		
        $this->get_adoption_request();			
	}
	
	
	public function get_adoption_request($limit=false)
	{
		
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else		
			$limit = '0';
			
		$rec_per_page = 15;			
			
		$total_record = $this->organimal_model->get_total_adoption();
		$data['all_animal'] = $this->organimal_model->get_all_adoption($limit,$rec_per_page);
		 
		 //echo '<pre>'; print_r($data['all_animal'][0]['photo']); die;
		 // ------------------------ PAGINATION STARTS HERE -----------------------------
				
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_dashboard/get_adoption_request/';
		//$config['base_url']	  	  = $config['base_url'].$transport_id;
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination fr">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Previous"; //<i class=\"fa fa-angle-left\" title=\"Prev\"></i>
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next"; //<i class=\"fa fa-angle-right\" title=\"Next\"></i>
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['limit']	=	$limit;	
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $total_record ) ? $total_record : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']			= $to;	
		
		$this->load->view('adoption-request-view',$data);
		
	}
	
	public function get_ajax_adoption_details()
   {
	   $adoption_id =  $this->input->post('id');
	   $item_details = $this->organimal_model->get_ajax_adoption_details($adoption_id);		
	   echo json_encode($item_details);
   }
   
   
   public function status_accept($id=false)
   {
	   
	  
	   $email_details = $this->common_model->get_email_containt("163");  // accepted
	   
	   $data['user_detail'] = $this->organimal_model->get_adoption_detail($id);
	   
	   //echo '<pre>'; print_r($data['user_detail']); die;
	   $username = $data['user_detail'][0]['st_fname'].' '.$data['user_detail'][0]['st_lname'];
	   $useremail = $data['user_detail'][0]['st_email'];
	   foreach($data['user_detail'] as $val){
		   
		   $animal[] = $val['st_animal_name'];
		  
	   }
	//  print_r($animal); die;
	
	 $animalval=implode(', ',$animal);
	
	   if(isset($email_details[0]['st_email_body']))
			{
				$templete = $email_details[0]['st_email_body'];				
				$templete  = str_replace("##user_name##",$username,$templete);
				$templete  = str_replace("##animal##",$animalval,$templete);
				$templete  = str_replace("##organization_name##",$this->session->userdata('org_name'),$templete);	
				$templete  = str_replace("##current_year##",date('Y'),$templete);		
				
				$strMail = $templete; 
				/*$this->email->message($strMail);
				$this->email->send();*/
				
				//$to		 = 'sadique.mohammed@pulsesolutions.net';
				$to = $useremail;
				$message = $strMail;
				$subject = $email_details[0]['st_email_subject'];
				$this->load->library('email');				
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);				
			}
			
			
			//$arrData = 	array('in_status' 	=> 1);		
			//$this->db->where('in_adoption_id', $id);
			//$this->db->update('tbl_adoption_order', $arrData);
			
			$arrData = 	array('in_status' 	=> 1);		
			$this->db->where('in_adoption_id', $id);
			$this->db->update('tbl_adoption_order', $arrData);	

			$animal_dets=$this->organimal_model->get_adoption_detail($id);
			
			//echo '<pre>'; print_r($animal_dets); die;
			foreach($animal_dets as $animalval ){			 			 
				$arrData = 	array('in_status' 	=> 2);		
				$this->db->where('in_adoption_id <>', $id);
				$this->db->where('in_animal_id', $animalval['in_animal_id']);
				$this->db->update('tbl_adoption_order', $arrData);						
				//$this->status_reject($animalval['in_adoption_id']);
				
				$this->db->select('in_adoption_id');
				$this->db->from('tbl_adoption_order');
				$this->db->where('in_adoption_id <>', $id);
				$this->db->where('in_deleted', 0);
				
				$this->db->where('in_animal_id', $animalval['in_animal_id']);
				$query = $this->db->get();
				//echo $this->db->last_query();die;
				$q = $query->row_array();
				//print_r($q);die;
				if(count($q) > 0){ 
				$this->status_reject2($q['in_adoption_id']);
				}
				
			}			
			
			$this->session->set_flashdata('success', 'Adoption Request has been accepted successfully.');		
		    redirect($this->config->item('base_url').'org_dashboard/adoption_request/');
	   
   }
   
   
   public function status_reject2($id=false)
   {
	   
	  
	   $email_details = $this->common_model->get_email_containt("164");  // rejected
	   
	   $data['user_detail'] = $this->organimal_model->get_adoption_detail($id);
	   
	   //echo '<pre>'; print_r($data['user_detail']); die;
	   $username = $data['user_detail'][0]['st_fname'].' '.$data['user_detail'][0]['st_lname'];
	   $useremail = $data['user_detail'][0]['st_email'];
	   foreach($data['user_detail'] as $val){
		   
		   $animal[] = $val['st_animal_name'];
		  
	   }
	     //  print_r($animal); die;
	
	 $animalval=implode(', ',$animal);
	 
	   
			if(isset($email_details[0]['st_email_body']))
			{
				$templete = $email_details[0]['st_email_body'];				
				$templete  = str_replace("##user_name##",$username,$templete);
				$templete  = str_replace("##animal##",$animalval,$templete);
				$templete  = str_replace("##organization_name##",$this->session->userdata('org_name'),$templete);	
				$templete  = str_replace("##current_year##",date('Y'),$templete);		
				
				$strMail = $templete; 
				/*$this->email->message($strMail);
				$this->email->send();*/
				
				//$to		 = 'sadique.mohammed+u809@pulsesolutions.net';
				$to = $useremail;
				$message = $strMail;
				$subject = $email_details[0]['st_email_subject'];
				$this->load->library('email');				
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);				
			}
			
			
			$arrData = 	array('in_status' 	=> 2,'in_deleted' =>1);		
			$this->db->where('in_adoption_id', $id);
			$this->db->update('tbl_adoption_order', $arrData);
			
			$this->session->set_flashdata('success', 'Adoption Request has been accepted successfully.');		
		    redirect($this->config->item('base_url').'org_dashboard/adoption_request/');
	   
   }
   
   
   
   public function status_reject($id=false)
   {
	   
	  
	   $email_details = $this->common_model->get_email_containt("164");  // rejected
	   
	   $data['user_detail'] = $this->organimal_model->get_adoption_detail($id);
	   
	   //echo '<pre>'; print_r($data['user_detail']); die;
	   $username = $data['user_detail'][0]['st_fname'].' '.$data['user_detail'][0]['st_lname'];
	   $useremail = $data['user_detail'][0]['st_email'];
	   foreach($data['user_detail'] as $val){
		   
		   $animal[] = $val['st_animal_name'];
		  
	   }
	     //  print_r($animal); die;
	
	 $animalval=implode(', ',$animal);
	 
	   
			if(isset($email_details[0]['st_email_body']))
			{
				$templete = $email_details[0]['st_email_body'];				
				$templete  = str_replace("##user_name##",$username,$templete);
				$templete  = str_replace("##animal##",$animalval,$templete);
				$templete  = str_replace("##organization_name##",$this->session->userdata('org_name'),$templete);	
				$templete  = str_replace("##current_year##",date('Y'),$templete);		
				
				$strMail = $templete; 
				/*$this->email->message($strMail);
				$this->email->send();*/
				
				//$to		 = 'sadique.mohammed+u809@pulsesolutions.net';
				$to = $useremail;
				$message = $strMail;
				$subject = $email_details[0]['st_email_subject'];
				$this->load->library('email');				
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);				
			}
			
			
			$arrData = 	array('in_status' 	=> 2,'in_deleted' =>1);		
			$this->db->where('in_adoption_id', $id);
			$this->db->update('tbl_adoption_order', $arrData);
			
			$this->session->set_flashdata('success', 'Adoption Request has been rejected successfully.');		
		    redirect($this->config->item('base_url').'org_dashboard/adoption_request/');
	   
   }
   
   
   
   
   
   
   
   
   public function manage_org_route_cost()
   {
	   if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
	  
	   $data=array();
	   $data['route_cost'] = $this->common_model->get_single_org_details($this->session->userdata('org_id'));  
	   
	   //echo '<pre>'; print_r($data['route_cost']); die;
	   $data['reservation_cost'] =  unserialize($data['route_cost']['st_reservation_cost']);
	   
	   //echo '<pre>'; print_r($data['reservation_cost']);die;
	   $form_field	=	array('xs_public_cost'		=> "",	
							  'xs_private_cost'		=> "",
								's_public_cost'		=> "",
								's_private_cost'	=> "",
								'm_public_cost'		=> "",
								'm_private_cost'	=> "",
								'l_public_cost'		=> "",
								'l_private_cost'	=> "",
								'xl_public_cost'    => "",
								'xl_private_cost'   => "",
							);
			foreach($form_field as $key => $value)	
			{	
				$data['add'][$key] = $value;	
			}
	   
	   
	   if($this->input->post('frm_action') == 'ADD')
	   {		   
		  
		   foreach ($form_field as $key => $value) {	
					$data['add'][$key] = $this->input->post($key);	
				}
				
				$this->form_validation->set_rules('xs_public_cost', 'XS Public Cost', 'trim|required');
				$this->form_validation->set_rules('xs_private_cost', 'XS Doobert Org Cost', 'trim|required');
				
				$this->form_validation->set_rules('s_public_cost', 'Small Public Cost', 'trim|required');
				$this->form_validation->set_rules('s_private_cost', 'Small Doobert Org Cost', 'trim|required');
				
				$this->form_validation->set_rules('m_public_cost', 'Medium Public Cost', 'trim|required');
				$this->form_validation->set_rules('m_private_cost', 'Medium  Doobert Org Cost', 'trim|required');
				
				$this->form_validation->set_rules('l_public_cost', 'Large Public Cost', 'trim|required');
				$this->form_validation->set_rules('l_private_cost', 'Large Doobert Org Cost', 'trim|required');
				
				$this->form_validation->set_rules('xl_public_cost', 'Extra Large Public Cost', 'trim|required');
				$this->form_validation->set_rules('xl_private_cost', 'Extra Large Doobert Org Cost', 'trim|required');
				
				
				
				if($this->form_validation->run() == FALSE)
				{  
						$data['Err_Msg'] = validation_errors();											
						$this->load->view('org-route-cost',$data);
						return;
				}
				else{
					
					//$dataArr = array('in_cost_public'	=> $this->input->post('public_cost'),
									// 'in_cost_private'	=> $this->input->post('private_cost'),														
									// 'dt_created'       => date('y-m-d H:i:s')									
								   //);
								   
								   
								   $reservation_space[0]['xs_public_cost']	    =	$this->input->post('xs_public_cost');
						           $reservation_space[0]['xs_private_cost']		=	$this->input->post('xs_private_cost');
								   
								   $reservation_space[1]['s_public_cost']	    =	$this->input->post('s_public_cost');
						           $reservation_space[1]['s_private_cost']		=	$this->input->post('s_private_cost');
								   
								   $reservation_space[2]['m_public_cost']	    =	$this->input->post('m_public_cost');
						           $reservation_space[2]['m_private_cost']		=	$this->input->post('m_private_cost');
								   
								   $reservation_space[3]['l_public_cost']	    =	$this->input->post('l_public_cost');
						           $reservation_space[3]['l_private_cost']		=	$this->input->post('l_private_cost');
								   
								   $reservation_space[4]['xl_public_cost']	    =	$this->input->post('xl_public_cost');
						           $reservation_space[4]['xl_private_cost']		=	$this->input->post('xl_private_cost');
								   
								   $reservation_val	=	serialize($reservation_space);
								   
								   //echo '<pre>'; print_r($reservation_val); die;
								   
								   
					$this->organimal_model->updateorgroutecost($reservation_val);									
				}
				
				$this->session->set_flashdata('success', 'Crate Cost updated successfully.'); 				
				redirect($this->config->item('base_url') . "org_dashboard/manage_org_route_cost/");
						
	   }
	   else{
	   
	   $this->load->view('org-route-cost',$data);
	   }
	   
   }
     
   
   
   
   
   public function org_import_csv()
   {
	   $this->load->library('email');
	   $email_details = $this->common_model->get_email_containt("166");
	   
	   $org_detail = $this->common_model->get_org_import();
	   //echo '<pre>'; print_r($org_detail); die;
	   
	  
	   foreach($org_detail as $val)
	   {	
		   		   
		   
		   //user entry
		   
		   if($val['org_type']== 'Rescue'){$orgtype='R';}
		   if($val['org_type']== 'Shelter'){$orgtype='S';}	
			//$pwd = md5(rand(100000,9999999));
			$pwd = rand(100000,9999999);
		   
		   $data['user'] = array('st_email' 		=> $val['email'],
						         'st_password' 		=> md5($pwd),
								 'in_status'		=> 1
						);
						
			$userid = $this->common_model->adduser($data['user']);
			
			
			//user profile entry
			
		    $data['userprofile'] = array('in_user_id' 			=> $userid,
						                 'st_address1' 			=> $val['address'],   
										 'st_city' 				=> $val['city'], 
										 'st_state' 			=> $val['state'],
										 'st_country' 			=> 'USA',
										 'st_zip' 				=>  $val['zip'], 
										 'st_primary_phone' 	=>  $val['phone'],
										 'st_website' 			=>  $val['website'],
										 'in_status'			=> 1
						);
						
			$this->common_model->adduserprofile($data['userprofile']);
			
			//org profile entry
			
			$data['org'] = array(		 'in_user_id' 			=> $userid,
						                 'st_org_type' 			=> $orgtype,   
										 'st_org_name' 			=> $val['name'], 
										 'st_address1'          => $val['address'],
										 'st_city' 				=> $val['city'], 
										 'st_state' 			=> $val['state'],
										 'st_country' 			=> 'USA',
										 'st_zip' 				=>  $val['zip'], 
										 'st_email_address'     =>  $val['email'],
										 'st_primary_phone' 	=>  $val['phone'], 
										 'st_website' 			=>  $val['website'],
										 'in_status'			=>  1										 
						);
						
			$orgid = $this->common_model->addorg($data['org']); 
			if($orgid)
			{
			    // mail functiuonality	
				if(isset($email_details[0]['st_email_body']))
				{			
								   
					$templete	= 	$email_details[0]['st_email_body'];
					$templete  	= 	str_replace("##link##",$this->config->item('base_url'),$templete);
					$templete  	= 	str_replace("##org_name##",$val['name'],$templete);	
					$templete  	= 	str_replace("##email##",$val['email'],$templete);
					$templete  	= 	str_replace("##password##",$pwd,$templete);
					$templete  	= 	str_replace("##current_year##",date('Y'),$templete);
					$strMail 	= 	$templete;
					$to			=	'sadique.mohammed@pulsesolutions.net';
					$subject	=	$email_details[0]['st_email_subject'];
					$message	=	$strMail;  
					$category  =    $email_details[0]['st_category'];
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
				
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
					
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}				
				
			}		
		   
	   }  
	   
	   
   }
   
  
	
	
	public function zipcode_import_csv()
   {    
	   $zip_detail = $this->common_model->get_zipcode_import();
	   //echo '<pre>'; print_r($zip_detail); die;
	   
	  
	   foreach($zip_detail as $val)
	   {		
			
			$data['zip'] = array(		 'zip_code' 		=> $val['zip_code'], 
						                 'city' 			=> $val['city'],  
										 'state_prefix' 	=> $val['state_prefix'], 
										 'lat'              => $val['lat'],
										 'lon' 				=> $val['lon'], 
										 'st_time_zone' 	=> 'IST',
										 'st_country' 		=> $val['st_country']																			 
						);
						
			$this->common_model->addzip($data['zip']);
			$this->common_model->update_zipcode_import($val['id']);		
			
	   } 
	   
   }
   
}

/* End of file Org_dashboard.php */
/* Location: ./application/controllers/Org_dashboard.php */