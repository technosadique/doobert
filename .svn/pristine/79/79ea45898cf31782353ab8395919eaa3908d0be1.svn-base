<?php
# =======================================================
# Created by		: Sadique Mohammad
# Created date		: 25-March-2014
# File description	: Member Model for admin
# Special - notes	: none
# Tables used		: tbl_users
# Stored procedures	: NONE 
# Triggers used		: none
# -------------------------------------------------------
class history_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	
	    
	#============================================================
	#	Function	:	get_total_user()
	#   Parameter	: 	name,email
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_total_history($name='',$email='')
	{ 	
				   
				   
				$this->db->select("us.in_subscription_id", false);						   	
				$this->db->from('tbl_user_subscription us');
				$this->db->join('tbl_users u', 'u.in_user_id=us.in_user_id','INNER');	
				$this->db->where('u.in_deleted','0');
				$this->db->where('us.in_deleted','0');
				//$this->db->where('u.in_status <>','3');				  
				
				
				if($name!= '') {							
							$name = str_replace("%","\%",$name);			
							$this->db->where("concat(st_display_name,' ',st_last_name) LIKE '%".$name."%'", NULL, FALSE);						
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}	
				$query = $this->db->get();					
				return $query->num_rows();
	}
	
	
	
	#============================================================
	#	Function	:	get_user()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email
	#	Perpose		:	to get user details
	#------------------------------------------------------------
	public function get_history($sort,$order,$limit,$rec_per_page,$name,$email)
	{						  
				$this->db->select("us.in_subscription_id,
								   us.in_subscription_type,
								   us.in_subscription_amt,
								   us.dt_created,
								   us.dt_renewal,
								   us.in_status,
								   concat(u.st_display_name,' ', u.st_last_name) as st_display_name,
								   u.st_email,
								   up.st_pilot,
								   up.st_driver", false);						   	
				$this->db->from('tbl_user_subscription us');
				$this->db->join('tbl_users u', 'u.in_user_id=us.in_user_id','INNER');	
				$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id','INNER');	
				$this->db->where('u.in_deleted','0');
				$this->db->where('us.in_deleted','0');		
				$this->db->where('up.in_deleted','0');			  			
				
				
				if($name!= '') {	
							$name = str_replace("%","\%",$name);				
							$this->db->where("concat(st_display_name,' ',st_last_name) LIKE '%".$name."%'", NULL, FALSE);
					}
				
				if($email!=''){				
				
				$this->db->where("u.st_email LIKE '%".$email."%'", NULL, FALSE);
				}					
						
						switch($sort)
						{							
							case 'name':								
								$this->db->order_by('u.st_display_name',$order);
							break;	
							
							case 'email': 								
								$this->db->order_by('u.st_email',$order);
							break;
							
							case 'subscriptiontype': 								
								$this->db->order_by('us.in_subscription_type',$order);
							break;
							
							
							
							case 'subscriptiondate': 								
								$this->db->order_by('us.dt_created',$order);
							break;
							
							case 'renewaldate': 								
								$this->db->order_by('us.dt_renewal',$order);
							break;
							
							case 'status': 								
								$this->db->order_by('us.in_status',$order);
							break;
							
							case 'registertype': 								
								$this->db->order_by('u.st_password',$order);
							break;
							
							default: 								
								$this->db->order_by('u.st_display_name',$order);
							break;	
								         
						}
					  
					  
					 if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 
					//echo $this->db->last_query();  die;					
					$arrUser = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{		
									
							$arrUser[$Row->in_subscription_id]	=	array('in_subscription_id'	=> $Row->in_subscription_id,
							                'st_display_name'				    => $Row->st_display_name,	
											'st_email'							=> $Row->st_email,												
											'in_subscription_type'				=> $Row->in_subscription_type,	 						
											'st_driver'							=> $Row->st_driver,		
											'st_pilot'							=> $Row->st_pilot,
											'dt_created'						=> $Row->dt_created,
											'in_subscription_amt'				=> $Row->in_subscription_amt,
											'dt_renewal'						=> $Row->dt_renewal,
											'in_status'						    => $Row->in_status																								
											);
						}
						return $arrUser;
						
					}
					
	}
	
	
	function get_history_details($subscriptionId)
	{
					$this->db->select('us.in_subscription_id,us.in_subscription_type,us.in_subscription_amt,
									   us.dt_created,us.dt_renewal,us.in_status,
									   u.st_display_name,u.st_last_name,u.st_email,up.st_driver,up.st_pilot');
					$this->db->from('tbl_user_subscription as us');						
					$this->db->join('tbl_users u', 'u.in_user_id=us.in_user_id','INNER');	
					$this->db->join('tbl_user_profile up', 'up.in_user_id=u.in_user_id','INNER');						
					$this->db->where('us.in_subscription_id',$subscriptionId);				
					$query = $this->db->get();
					return $query->row_array();	
	}
	
	
	
		#======================================================================
	#	Function	:	delete_history()
	#   Parameter	: 	subscriptionId
	#	Perpose		:	to delete single subscription history from tbl_user_subscription table
	#----------------------------------------------------------------------
	function delete_history($subscriptionId)
	{
		$arrHistory = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_subscription_id', $subscriptionId);
		$this->db->update('tbl_user_subscription', $arrHistory);		
	}
	
	
	#========================================================================
	#	Function	:	delete_multiple_history()
	#   Parameter	: 	subscriptionIds
	#	Perpose		:	to delete multiple history subscription details from tbl_user_subscriptiontable
	#------------------------------------------------------------------------
	function delete_multiple_history($subscriptionIds)
	{			
		$arrHistory = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_subscription_id', $subscriptionIds);
		$this->db->update('tbl_user_subscription', $arrHistory);		
		return $this->db->affected_rows();
	}
	
	function update_history_info($data,$subscriptionId,$table) {	
		$this->db->where('in_subscription_id',$subscriptionId);
		$this->db->update($table,$data);
		//echo $this->db->last_query(); die;
		return $this->db->affected_rows();	
	}
	
	
}
?>