var UserEdit = function () {

	var handleUserEdit = function() {

		$('.form-horizontal').validate({ 
	            errorElement: 'span', //default input error message container
	            errorClass: 'help-block', // default input error message class
	            focusInvalid: false, // do not focus the last invalid input
	            rules: {
					 name: {
	                    required: true
	                },
					 lastname: {
	                    required: true
	                },
	                email: {
	                    required: true,
						email:true
	                },
	                password: {
	                    required: false,
						minlength:6
	                },
					cpassword: {
                         required : {
						depends: function(element){
								if($('#password').val()!='')
								{									
									return true;
								} else {
									return false;
								}
							}
						},                       
						equalTo: "#password"
                    }
						               
	            },

	            messages: {
					 name: {
	                    required: "First Name is required."
	                },
					lastname: {
	                    required: "Last Name is required."
	                },
	                email: {
	                    required: "Email is required.",
						email:"Please Enter valid email"
	                },
	                password: {
	                    required: "Password is required."
	                },
					cpassword: {
                        required: "Please provide a confirm password",                       
						equalTo: "Password and Confirm password do not match"					
                    }				
					
	            },

	            invalidHandler: function (event, validator) { //display error alert on form submit   
	                $('.alert-danger', $('.form-horizontal')).show();
	            },

	            highlight: function (element) { // hightlight error inputs
	                $(element)
	                    .closest('.form-group').addClass('has-error'); // set error class to the control group
	            },

	            success: function (label) {
	                label.closest('.form-group').removeClass('has-error');
	                label.remove();
	            },

	            errorPlacement: function (error, element) {
	                error.insertAfter(element.closest('.form-group div'));
	            },

	            submitHandler: function (form) {
	                form.submit(); // form validation success, call ajax form submit
	            }
	        });

	        $('.form-horizontal input').keypress(function (e) {
	            if (e.which == 13) {
	                if ($('.form-horizontal').validate().form()) {
	                    $('.form-horizontal').submit(); //form validation success, call ajax form submit
	                }
	                return false;
	            }
	        });
	}
    return {
        //main function to initiate the module
        init: function () {        	
            handleUserEdit();    
			$('#portlet-config').modal('show');       
        }
    };
}();