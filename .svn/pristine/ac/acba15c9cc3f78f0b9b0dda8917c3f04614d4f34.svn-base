<?php
class CI_common_function {
	
	public $shortCountry;
	public $doobertcountry;
	public $state_list;
	public $cur_year;
	public $exp_month;
	public $exp_year;
	public $demeanor;
	public $days;
	public $age;
	public $neutered_spayed;
	public $animal_status;
	public $org_type;
	public $time_zone;
	public $duration;
	public $transportation_type;
	public $campaign_type;
	public $donation_for;
	public $bk_color;
	public $color_pattern;
	public $font_opt;
	public $sponsorship_status;
	public $exp_month_full;
	public $color_pattern_css;
	public $canadian_state_list;
	public $declawed_property;
	public $table_name;
	public $roles;
	public $column_name;
	public $role_name;
	public $color;
	public $color_class;
	public $type;
	public $subscription_type;
	public $colorcodes;
	public $org_feeds;
	public $org_feeds_notification;
	public $animal_where;
	public $travel_with;
	public $dlhhp;
	public $petcolor;
	public $petheight;
	public $petweight;
	public $petcoat;
	public $petlength;
	public $animal_weight;
	public $animal_age;
	public $indian_state_list;
	
	function CI_common_function() {
		$this->petgender = array('Male','Female','Sex Uncertain');
		$this->petheight = array('Short: Under 1','Medium: 1-2','Large: Over 2');
		$this->petcolor = array('None','White','Black','Tan or Cream','Brown','Silver or Grey','Rust or Reddish','Blue','Yellow or Blond or Golden','Green','Orange','Other');
		
		$this->petweight = array('Under 5 lbs','5-10 lbs','10-20 lbs','20-30 lbs','30-40 lbs','Over 50 lbs');
		$this->petcoat = array('Smooth','Wiry','Wavy','Not Applicable');
		//$this->petlength = array('Small','Medium','Long','Not Applicable');
		$this->petlength = array('Short','Medium','Long','Not Applicable');
		
		
		$this->animal_weight = array('0-15'=>'< 0-15 lbs >','15-25'=>'< 15-25 lbs >','25-35'=>'< 25-35 lbs >','35-45'=>'< 35-45 lbs >');
		$this->animal_age = array('1'=>'<1 year','2'=>'<2 year','3'=>'<3 year');
									
		#------------------------- State List ----------------------------------
	
		$this->state_list = array(
						'AL'=>"Alabama",  
						'AK'=>"Alaska",  
						'AZ'=>"Arizona",  
						'AR'=>"Arkansas",  
						'CA'=>"California",  
						'CO'=>"Colorado",  
						'CT'=>"Connecticut",  
						'DE'=>"Delaware",  
						'DC'=>"District Of Columbia",  
						'FL'=>"Florida",  
						'GA'=>"Georgia",  
						'HI'=>"Hawaii",  
						'ID'=>"Idaho",  
						'IL'=>"Illinois",  
						'IN'=>"Indiana",  
						'IA'=>"Iowa",  
						'KS'=>"Kansas",  
						'KY'=>"Kentucky",  
						'LA'=>"Louisiana",  
						'ME'=>"Maine",  
						'MD'=>"Maryland",  
						'MA'=>"Massachusetts",  
						'MI'=>"Michigan",  
						'MN'=>"Minnesota",  
						'MS'=>"Mississippi",  
						'MO'=>"Missouri",  
						'MT'=>"Montana",
						'NE'=>"Nebraska",
						'NV'=>"Nevada",
						'NH'=>"New Hampshire",
						'NJ'=>"New Jersey",
						'NM'=>"New Mexico",
						'NY'=>"New York",
						'NC'=>"North Carolina",
						'ND'=>"North Dakota",
						'OH'=>"Ohio",  
						'OK'=>"Oklahoma",  
						'OR'=>"Oregon",  
						'PA'=>"Pennsylvania", 
						'PR' =>'Puerto Rico',
						'RI'=>"Rhode Island",  
						'SC'=>"South Carolina",  
						'SD'=>"South Dakota",
						'TN'=>"Tennessee",  
						'TX'=>"Texas",  
						'UT'=>"Utah",  
						'VT'=>"Vermont",  
						'VA'=>"Virginia",  
						'WA'=>"Washington",  
						'WV'=>"West Virginia",  
						'WI'=>"Wisconsin",  
						'WY'=>"Wyoming");

$this->shortCountry = array (
						"US" => "USA",
						"CA" => "Canada",
						"AF" => "Afghanistan",
						"AL" => "Albania",
						"DZ" => "Algeria",
						"AS" => "American Samoa",
						"AD" => "Andorra",
						"AO" => "Angola",
						"AI" => "Anguilla",
						"AQ" => "Antarctica",
						"AG" => "Antigua and Barbuda",
						"AR" => "Argentina",
						"AM" => "Armenia",
						"AW" => "Aruba",
						"AU" => "Australia",
						"AT" => "Austria",
						"AZ" => "Azerbaijan",
						"BS" => "Bahamas",
						"BH" => "Bahrain",
						"BD" => "Bangladesh",
						"BB" => "Barbados",
						"BY" => "Belarus",
						"BE" => "Belgium",
						"BZ" => "Belize",
						"BJ" => "Benin",
						"BM" => "Bermuda",
						"BT" => "Bhutan",
						"BO" => "Bolivia",
						"BA" => "Bosnia and Herzegovina",
						"BW" => "Botswana",
						"BV" => "Bouvet Island",
						"BR" => "Brazil",
						"BN" => "Brunei Darussalam",
						"BG" => "Bulgaria",
						"BF" => "Burkina Faso",
						"BI" => "Burundi",
						"KH" => "Cambodia",
						"CM" => "Cameroon",						
						"CV" => "Cape Verde",
						"KY" => "Cayman Islands",
						"CF" => "Central African Republic",
						"TD" => "Chad",
						"CL" => "Chile",
						"CN" => "China",
						"CC" => "Cocos (Keeling) Islands",
						"CO" => "Colombia",
						"KM" => "Comoros",
						"CG" => "Congo",
						"CK" => "Cook Islands",
						"CR" => "Costa Rica",
						"CI" => "Cote d'Ivoire",
						"HR" => "Croatia",
						"CU" => "Cuba",
						"CY" => "Cyprus",
						"CZ" => "Czech Republic",
						"DK" => "Denmark",
						"DJ" => "Djibouti",
						"DM" => "Dominica",
						"DO" => "Dominican Republic",
						"TL" => "East Timor",
						"EC" => "Ecuador",
						"EG" => "Egypt",
						"SV" => "El Salvador",
						"GQ" => "Equatorial Guinea",
						"ER" => "Eritrea",
						"EE" => "Estonia",
						"ET" => "Ethiopia",
						"FK" => "Falkland Islands",
						"FO" => "Faroe Islands",
						"FJ" => "Fiji",
						"FI" => "Finland",
						"FR" => "France",
						"GF" => "French Guiana",
						"PF" => "French Polynesia",
						"GA" => "Georgia",
						"GM" => "Gambia",
						"DE" => "Germany",
						"GH" => "Ghana",
						"GR" => "Greece",
						"GL" => "Greenland",
						"GD" => "Grenada",
						"GP" => "Guadeloupe",
						"GU" => "Guam",
						"GT" => "Guatemala",
						"GN" => "Guinea",
						"GW" => "Guinea-Bissau",
						"GY" => "Guyana",
						"HT" => "Haiti",
						"HN" => "Honduras",
						"GG" => "Guernsey",
						"HK" => "Hong Kong",
						"HU" => "Hungary",
						"IS" => "Iceland",
						"IN" => "India",
						"ID" => "Indonesia",
						"IR" => "Iran",
						"IQ" => "Iraq",
						"IE" => "Ireland",
						"IL" => "Israel",
						"IT" => "Italy",
						"JM" => "Jamaica",
						"JP" => "Japan",
						"JO" => "Jordan",
						"KZ" => "Kazakhstan",
						"KE" => "Kenya",
						"KI" => "Kiribati",
						"KP" => "North Korea",
						"KR" => "South Korea",
						"KW" => "Kuwait",
						"KG" => "Kyrgyzstan",
						"LV" => "Latvia",
						"LB" => "Lebanon",
						"LS" => "Lesotho",
						"LR" => "Liberia",
						"LY" => "Libya",
						"LI" => "Liechtenstein",
						"LT" => "Lithuania",
						"LU" => "Luxembourg",
						"MO" => "Macau",
						"MK" => "Macedonia",
						"MG" => "Madagascar",
						"MW" => "Malawi",
						"MY" => "Malaysia",
						"MV" => "Maldives",
						"ML" => "Mali",
						"MT" => "Malta",
						"MH" => "Marshall Islands",
						"MQ" => "Martinique",
						"MR" => "Mauritania",
						"MU" => "Mauritius",
						"YT" => "Mayotte",
						"MX" => "Mexico",
						"FM" => "Micronesia",
						"MD" => "Moldova",
						"MC" => "Monaco",
						"MN" => "Mongolia",
						"MS" => "Montserrat",
						"MA" => "Morocco",
						"MZ" => "Mozambique",
						"MM" => "Myanmar",
						"NA" => "Namibia",
						"NR" => "Nauru",
						"NP" => "Nepal",
						"NL" => "Netherlands",
						"NC" => "New Caledonia",
						"NZ" => "New Zealand",
						"NI" => "Nicaragua",
						"NE" => "Niger",
						"NG" => "Nigeria",
						"NU" => "Niue",
						"NF" => "Norfolk Island",
						"MP" => "Northern Mariana Islands",
						"NO" => "Norway",
						"OM" => "Oman",
						"PK" => "Pakistan",
						"PW" => "Palau",
						"PA" => "PANAMA",
						"PG" => "Papua New Guinea",
						"PY" => "Paraguay",
						"PE" => "Peru",
						"PH" => "Philippines",
						"PN" => "Pitcairn",
						"PL" => "Poland",
						"PT" => "Portugal",
						"PR" => "Puerto Rico",
						"QA" => "Qatar",
						"RE" => "Reunion",
						"RO" => "Romania",
						"RU" => "Russian Federation",
						"RW" => "Rwanda",
						"KN" => "Saint Kitts and Nevis",
						"LC" => "Saint Lucia",
						"WS" => "Samoa",
						"SM" => "San Marino",
						"ST" => "Sao Tome and Principe",
						"SA" => "Saudi Arabia",
						"SN" => "Senegal",
						"SC" => "Seychelles",
						"SL" => "Sierra Leone",
						"SG" => "Singapore",
						"SK" => "Slovakia",
						"SI" => "Slovenia",
						"SB" => "Solomon Islands",
						"SO" => "Somalia",
						"ZA" => "South Africa",
						"ES" => "Spain",
						"LK" => "Sri Lanka",
						"PM" => "St Pierre and Miquelon",
						"SD" => "Sudan",
						"SR" => "Suriname",
						"SZ" => "Swaziland",
						"SE" => "Sweden",
						"CH" => "Switzerland",
						"SY" => "Syrian Arab Republic",
						"TW" => "Taiwan",
						"TJ" => "Tajikistan",
						"TZ" => "Tanzania",
						"TH" => "Thailand",
						"TG" => "Togo",
						"TK" => "Tokelau",
						"TO" => "Tonga",
						"TT" => "Trinidad and Tobago",
						"TN" => "Tunisia",
						"TR" => "Turkey",
						"TM" => "Turkmenistan",
						"TC" => "Turks and Caicos Islands",
						"TV" => "Tuvalu",
						"UG" => "Uganda",
						"UA" => "Ukraine",
						"AE" => "United Arab Emirates",
						"GB" => "United Kingdom (Great Britain)",
						"UY" => "Uruguay",
						"UZ" => "Uzbekistan",
						"VU" => "Vanuatu",
						"VE" => "Venezuela",
						"VN" => "VietNam",
						"VI" => "Virgin Islands U.S.",
						"YE" => "Yemen",
						"CD" => "Zaire",
						"ZM" => "Zambia",
						"ZW" => "Zimbabwe",
						"AQ" => "Antarctica",
						"BL" => "Bonaire (Netherlands Antilles)",
						"IO" => "British Indian Ocean Territory",
						"IC" => "Canary Islands (Spain)",
						"CX" => "Christmas Island (Australia)",
						"CB" => "Curacao (Netherlands Antilles)",
						"TP" => "East Timor",
						"EN" => "England",
						"TF" => "French Southern Territories",
						"GI" => "Gibraltar",
						"HM" => "Heard Island and McDonald Islands",
						"HO" => "Holland",
						"VA" => "Holy See (Vatican City)",
						"JE" => "Jersey",
						"ME" => "Montenegro",
						"AN" => "Netherlands Antilles",
						"NB" => "Northern Ireland",
						"PS" => "Palestinian Territory, Occupied",
						"GE" => "Republic of Georgia",
						"SS" => "Saba",
						"SW" => "Saint Christopher (St. Kitts) and Nevis",
						"SH" => "Saint Helena",
						"VC" => "Saint Vincent and the Grenadines",
						"SF" => "Scotland",
						"RS" => "Serbia",
						"GS" => "South Georgia and the South Sandwich Islands",
						"NT" => "St. Barthelemy",
						"EU" => "St. Eustatius (Netherlands Antilles)",
						"MB" => "St. Maarten (Netherlands Antilles)",
						"TB" => "St. Martin (Guadeloupe)",
						"SJ" => "Svalbard and Jan Mayen",
						"UM" => "United States Minor Outlying Islands",
						"VG" => "Virgin Islands, British",
						"WL" => "Wales",
						"WF" => "Wallis and Futuna",
						"EH" => "Western Sahara",
						"YU" => "Yugoslavia"	
					);	

								  
		$this->exp_month = array(
									'01'=>'Jan',
									'02'=>'Feb',
									'03'=>'Mar',
									'04'=>'Apr',
									'05'=>'May',
									'06'=>'Jun',
									'07'=>'Jul',
									'08'=>'Aug',
									'09'=>'Sep',
									'10'=>'Oct',
									'11'=>'Nov',
									'12'=>'Dec'
								 );
								 
		$this->cur_year = date('Y');
		for($i=$this->cur_year;$i<=($this->cur_year+10);$i++)
		{
			$this->exp_year[$i] = $i;
		}	
		
		$this->demeanor = array(
								'1'=>'Unknown',
								'2'=>'Purple',
								'3'=>'Orange',
								'4'=>'Green',
								'5'=>'Blue'
								 );						  							
		
		$this->days = array(
							'1'=>'Unknown',
							'2'=>'Purple',
							'3'=>'Orange',
							'4'=>'Green',
							'5'=>'Blue'
							);
							
		$this->age = array(
							"1" => 'Baby',
                        	"2" => 'Young',
                        	"3" => 'Adult',
                        	"4" => 'Senior',
							"5" => 'Unknown'
						);
		$this->neutered_spayed = array(
										"1" => 'Yes',
										"2" => 'No',
										"3" => 'Unknown'
									);	
		$this->donation_for = array(
										"0" => 'General',
										"1" => 'Shelter Fees',
										"2" => 'Vet Bills',
										"3" => 'CVI',
										"4" => 'Gas Money'
									);	
		$this->transportation_type = array(
										"P" => 'Pre Defined',
										"D" => 'Driver Specify'									
									);	
		$this->campaign_type = array(
										"P" => 'Pledge',
										"D" => 'Donation'									
									);
									//				
		$this->animal_status = array(
									"0" => 'No Status',
									"1" => 'At Shelter',
									"2" => 'On Transporation',
									"3" => 'At Rescue Shelter'
									);
									
		$this->org_type = array("R"		=>	"Rescue",
								"S"		=>	"Shelter",
								"TC"	=>	"Transport coordinator",
								"FS"	=>	"Friend of Shelter",
								"O"		=>  "Other",
								"CT"	=>	"Commercial",
								);	
																
		$this->time_zone = array("EST"		=>	"EST",
								 "CST"		=>	"CST",
								 "PST"		=>	"PST",
								 "MST"		=>	"MST",
								 "IST"		=>	"IST",
								 "AST"		=>	"AST"
								);								
		$this->duration = array("0"		=>	"Days",
								"1"		=>	"Week",
								"2"		=>	"Month",
								'3'		=>	"Not Decided"
								);	
								
       $this->color_list = array('tip-dem-purple'=>'Purple',
								 'tip-dem-orange'=>'Orange',
								 'tip-dem-green'=>'Green',
								 'tip-dem-blue'=>'Blue'
								);
								
		$this->bk_color = array('1' => 'bgoption1',
								'2' => 'bgoption2',
								'3' => 'bgoption3',
								'4' => 'bgoption4',
								'5' => 'bgoption5',
								'6' => 'bgoption6',
								'7' => 'bgoption7',
								'8' => 'bgoption8',
								'9' => 'bgoption9',
								'10' => 'bgoption10',
								'11' => 'bgoption11',
								'12' => 'bgoption12'
								);
								
		$this->color_pattern = array('1' => 'blue.css',
									 '2' => 'red.css',
									 '3' => 'green.css',
									 '4' => 'orange.css',
									 '5' => 'violet.css',
									 '6' => 'skyblue.css'
									);
									
		$this->font_opt = 	array('1' => 'fontoption1',
								  '2' => 'fontoption2',
								  '3' => 'fontoption3',
								  '4' => 'fontoption4',
								  '5' => 'fontoption5',
								  '6' => 'fontoption6',
								  '7' => 'fontoption7',
								  '8' => 'fontoption8',
								  '9' => 'fontoption9',
								  '10' => 'fontoption10'
								);
								
		$this->sponsorship_status = array(	'1'	=>	'Active',	
											'2'	=>	'Inactive',
											'3' =>	'Draft'
										); 
										
		$this->exp_month_full = array(
									'01'=>'January',
									'02'=>'February',
									'03'=>'March',
									'04'=>'April',
									'05'=>'May',
									'06'=>'June',
									'07'=>'July',
									'08'=>'August',
									'09'=>'September',
									'10'=>'October',
									'11'=>'November',
									'12'=>'December'
								 );
								 
		$this->color_pattern_css = array('blue.css'		=>	'1',
									 	 'red.css'		=>	'2',
									 	 'green.css'	=>	'3',
									 	 'orange.css'	=>	'4',
									 	 'violet.css'	=>	'5',
									 	 'skyblue.css'	=>	'6'
										);
		$this->canadian_state_list	= array(
						'AB'=> 'Alberta',
						'BC'=> 'British Columbia',
						'MB'=> 'Manitoba',
						'NU'=> 'Nunavut',
						'NB'=> 'New Brunswick',
						'NL'=> 'Newfoundland and Labrador',
						'NT'=> 'Northwest Terroitories',
						'NS'=> 'Nova Scotia',
						'ON'=> 'Ontario',
						'PE'=> 'Prince Edward Island',
						'QC'=> 'Quebec',
						'SK'=> 'Saskatchewan',
						'YT'=> 'Yukon'
					);
		$this->indian_state_list	= array(
						'AP'=> 'Andhra Pradesh',
						'AN'=> 'Andaman and Nicobar Islands',
						'AR'=> 'Arunachal Pradesh',
						'AS'=> 'Assam',
						'BR'=> 'Bihar',
						'CH'=> 'Chandigarh',
						'CG'=> 'Chhattisgarh',
						'DH'=> 'Dadar and Nagar Haveli',
						'DD'=> 'Daman and Diu',
						'DL'=> 'Delhi',
						'GA'=> 'Goa',
						'GJ'=> 'Gujrat',
						'HR'=> 'Haryana',						
						'HP'=> 'Himachal Pradesh',
						'JK'=> 'Jammu and Kashmir',
						'JH'=> 'Jharkhand',
						'KA'=> 'Karnataka',
						'KL'=> 'Kerala',
						'LD'=> 'Lakshadweep',
						'MP'=> 'Madhya Pradesh',
						'MH'=> 'Maharashtra',
						'MN'=> 'Manipur',
						'ML'=> 'Meghalaya',
						'MZ'=> 'Mizoram',
						'NL'=> 'Nagaland',
						'OR'=> 'Odisha',						
						'PY'=> 'Pondicherry',
						'PB'=> 'Punjab',
						'RJ'=> 'Rajasthan',
						'SK'=> 'Sikkim',
						'TN'=> 'Tamil Nadu',
						'TS'=> 'Telangana',
						'TR'=> 'Tripura',
						'UP'=> 'Uttar Pradesh',
						'UK'=> 'Uttarakhand',
						'WB'=> 'West Bangal',							
					);
		$this->doobertcountry = array("USA"		=> "United States",
									  "CANADA" 	=> "Canada",
									  "IN" 	    => "India",
									  "INDIA" 	=> "India");
		
		$this->declawed_property = array('FO' => 'Front Only',
									   	'FP' => 'Four Paws',
										'N' => 'No',
										'U' => 'Unknown'
										);			
		$this->table_name = array(	'D' => 'tbl_user_vehicle',
									'P'	=> 'tbl_user_pilot',
									'F'	=> 'tbl_user_addition_info',
									'M'	=> 'tbl_user_profile'
								);
		$this->roles = array(	'D' => 'driver.png',
								'V' => 'volunteer.png',
								'P' => 'pilot.png',
								'F' => 'foster.png',
								'S' => 'shelter.png',
								'M' => 'multi.png',
								'0' => 'multi.png'
								);
		$this->column_name = array(	'D' => 'in_distance_to_drive',
									'P'	=> 'in_distance_to_pilot',
									'F'	=> ''
								);
		$this->role_name = array(	'D' => 'in_distance_to_drive',
									'P'	=> 'in_distance_to_pilot',
									'F'	=> ''
								);
									
		$this->color = array('1' => '#c8490a',
							 '2' => '#c12e97',
							 '3' => '#ee304c',
							 '4' => '#497372',
							 '5' => '#0f3e86',
							 '6' => '#db1962',
							 '7' => '#fe4e19',
							 '8' => '#187449'
							);
		$this->color_class = array('1' => 'orange',
							 '2' => 'dark-purple',
							 '3' => 'red',
							 '4' => 'green',
							 '5' => 'blue',
							 '6' => 'dark-pink',
							 '7' => 'dark-orange',
							 '8' => 'dark-green'
							);
							
		$this->type = array('D' => 'st_driver',
							'P' => 'st_pilot',
							'F' => 'st_foster_home' 
							);	
		$this->subscription_type = array(
										"1" => 'Monthly',
										"2" => 'Annually'										
									);
									
		$this->colorcodes = array("#35aa47","#852b99","#d84a38","#4d90fe","#555555","#808080","#ffb848","#fd42a0","#FF82AB", "#00C5CD", "#FF8C00", "#E066FF", "#0e7770", "#b22260", "#d81f27", "#808000", "#1280b5", "#8180ac", "#95c65b", "#e54657", "#c79762", "#80bbe5");
		
		$this->org_feeds = array(	'2'	=> "<div class='timeline-body border'><h2><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;added a new animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></h2></div>",
									'3'	=> "<div class='timeline-body border'><h2><span><img src='##animal_image##' alt='animal_image'  width='32'></span><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;updated animal profile of&nbsp;##breed_string##&nbsp;<a class='profile' href='##animal_url##'>##animal_name##</a></h2></div>",
									'4'	=> "<div class='timeline-body border'><h2><span><img src='##animal_image##' alt='animal_image'  width='32'></span><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;transferred&nbsp;<a class='profile' href='##animal_url##'>##animal_name##s</a>&nbsp;animal profile to ##org_name_to##.</h2></div>",
									'5'	=> '<div class="timeline-body border"><h2><span><img src="##org_image##" alt=""  width="32"></span><a href="##url_link##" class="profile">##org_name##</a> created a new transportation.</h2><div class="timeline-content"><p class="text17">##dt_target##</strong></p><div class="w175"><p><strong>From Location</strong><br>##st_from_city##, ##st_from_state##, ##st_from_zip##</p></div><div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div><div class="w175"><p><strong>To Location</strong><br>##st_to_city##, ##st_to_state##, ##st_to_zip##.</p></div><div class="clearfix"></div></div></div>',
									
									'18' => "<div class='timeline-body border'><h2><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;deleted animal profile for ##breed_string##&nbsp;##type_string## named ##animal_name##.</h2></div>",
									'19' => "<div class='timeline-body border'><h2><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;accepted animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></h2></div>",
									'20' => "<div class='timeline-body border'><h2><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;rejected animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></h2></div>"
								);	
		$this->org_feeds_notification = array(	'2'	=> "<div class='timeline-body border'><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;added a new animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></span></div>",
												'3'	=> "<div class='timeline-body border'><span><img src='##animal_image##' alt='animal_image'  width='32'></span><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;updated animal profile of&nbsp;##breed_string##&nbsp;<a class='profile' href='##animal_url##'>##animal_name##</a></span></div>",
												'4'	=> "<div class='timeline-body border'><span><img src='##animal_image##' alt='animal_image'  width='32'></span><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;transferred&nbsp;<a class='profile' href='##animal_url##'>##animal_name##s</a>&nbsp;animal profile to ##org_name_to##.</span></div>",
												'5'	=> '<div class="timeline-body border"><span><img src="##org_image##" alt=""  width="32"></span><span class="notification-info"><a href="##url_link##" class="profile">##org_name##</a> created a new transportation.</span></div>',
									
									'18' => "<div class='timeline-body border'><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;deleted animal profile for ##breed_string##&nbsp;##type_string## named ##animal_name##.</span></div>",
									'19' => "<div class='timeline-body border'><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;accepted animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></span></div>",
									'20' => "<div class='timeline-body border'><span><img src='##animal_image##' 	alt='animal_image'  width='32'></span><span class='notification-info'><a class='profile' href='##org_url##'>##org_name##</a>&nbsp;rejected animal profile for a&nbsp;##breed_string##&nbsp;##type_string##&nbsp;named&nbsp;<a class='profile' href='##animal_url##'>##animal_name##.</a></span></div>"
								);								
								
								
	
	$this->shortAllState = array(
						'AL'=>"Alabama",  
						'AK'=>"Alaska",  
						'AZ'=>"Arizona",  
						'AR'=>"Arkansas",  
						'CA'=>"California",  
						'CO'=>"Colorado",  
						'CT'=>"Connecticut",  
						'DE'=>"Delaware",  
						'DC'=>"District Of Columbia",  
						'FL'=>"Florida",  
						'GA'=>"Georgia",  
						'HI'=>"Hawaii",  
						'ID'=>"Idaho",  
						'IL'=>"Illinois",  
						'IN'=>"Indiana",  
						'IA'=>"Iowa",  
						'KS'=>"Kansas",  
						'KY'=>"Kentucky",  
						'LA'=>"Louisiana",  
						'ME'=>"Maine",  
						'MD'=>"Maryland",  
						'MA'=>"Massachusetts",  
						'MI'=>"Michigan",  
						'MN'=>"Minnesota",  
						'MS'=>"Mississippi",  
						'MO'=>"Missouri",  
						'MT'=>"Montana",
						'NE'=>"Nebraska",
						'NV'=>"Nevada",
						'NH'=>"New Hampshire",
						'NJ'=>"New Jersey",
						'NM'=>"New Mexico",
						'NY'=>"New York",
						'NC'=>"North Carolina",
						'ND'=>"North Dakota",
						'OH'=>"Ohio",  
						'OK'=>"Oklahoma",  
						'OR'=>"Oregon",  
						'PA'=>"Pennsylvania",
						'PR' =>'Puerto Rico',
						'RI'=>"Rhode Island",  
						'SC'=>"South Carolina",  
						'SD'=>"South Dakota",
						'TN'=>"Tennessee",  
						'TX'=>"Texas",  
						'UT'=>"Utah",  
						'VT'=>"Vermont",  
						'VA'=>"Virginia",  
						'WA'=>"Washington",  
						'WV'=>"West Virginia",  
						'WI'=>"Wisconsin",  
						'WY'=>"Wyoming",
						'AB'=>"Alberta",
						'BC'=>"British Columbia",
						'MB'=>"Manitoba",
						'NU'=>"Nunavut",
						'NB'=>"New Brunswick",
						'NL'=>"Newfoundland and Labrador",
						'NT'=>"Northwest Terroitories",
						'NS'=>"Nova Scotia",
						'ON'=>"Ontario",
						'PE'=>"Prince Edward Island",
						'QC'=>"Quebec",
						'SK'=>"Saskatchewan",
						'YT'=>"Yukon");
						
		$this->animal_where = array('0' => 'Shelter',
									'1' => 'Stray  ',
									'2' => 'Surrender',
									'3' => 'Unknown');
		$this->travel_with = array('1' => 'Collar',
								'2' => 'Leash',
								'3' => 'Crate',
								'4' => 'Medicine');
		$this->dlhhp = array('1' => '1st',
							'2' => '2nd',
							'3' => '3rd',
							'U' => 'Unknown');
							
		$this->time_zone_abbr = array("EST"		=>	"America/New_York",
								 "CST"		=>	"America/Chicago",
								 "PST"		=>	"America/Los_Angeles",
								 "MST"		=>	"America/Anchorage",
								 "IST"		=>	"Asia/Calcutta",
								 "AST"		=>	"Canada/Atlantic"
								);
		
		$this->region_list = array("1"	=>	array('AK','WA','OR','CA','HI'),
								   "2"	=>	array('OK','TX','AR','LA'),
								   "3"  =>  array('WI','IL','MI','IN','OH','WV'),
								   "4"  =>  array('PA','NY','ME','VT','NH','MA','RI','CT','NJ','DE'),
								   "5"  =>  array('MS','SC','GA','AL','FL'),
								   "6"  =>  array('NC','TN','KY','VA','MD','DC'),
								   "7"	=>	array('ND','SD','NE','KS','MO','IA','MN'),
								   "8"	=>  array('MT','ID','WY','CO','UT','NV','AZ','NM'),
									);
		
		/*$this->region_list = array("1"	=>	array('AK','WA','OR','CA','NV','ID','UT','AZ','MT','WY','CO','NM'),
								   "2"	=>	array('NE','KS','OK','TX','IA','MO','AR','LA','MS'),
								   "3"  =>  array('ND','SD','MN','WI','IL','MI','IN','OH','KY'),
								   "4"  =>  array('PA','NY','ME','VT','NH','MA','RI','CT','NJ','DE'),
								   "5"  =>  array('MD','DC','WV','VA','NC','TN','SC','GA','AL','FL')
									);*/
		
		/*$this->region_list = array("1"	=>	array('AK','WA','OR','CA','NV','ID','UT','AZ','MT','WY','CO','NM','HI'),
								   "2"	=>	array('NE','KS','OK','TX','IA','MO','AR','LA','MS'),
								   "3"  =>  array('ND','SD','MN','WI','IL','MI','IN','OH','KY'),
								   "4"  =>  array('PA','NY','ME','VT','NH','MA','RI','CT','NJ','DE'),
								   "5"  =>  array('MD','DC','WV','VA','NC','TN','SC','GA','AL','FL')
									);*/
	}
	
	function custom_htmlentities($value)
	{
		return htmlspecialchars($value);
	}
	function clean($string) {
	   $string = str_replace(' ', '-', $string); // Replaces all spaces with hyphens.
	   return preg_replace('/[^A-Za-z0-9\-]/', '', $string); // Removes special chars.
	}
	
	function custom_addslashes($value)
	{
		//CodeIgniter Always removes effect of magic quotes so that input data is always be unslashed by defalut.
		if(get_magic_quotes_gpc())
		{
			return $value;
		}
		else
		{
			return addslashes($value);
		}
	}
	
	function check_admin_logged_in($caller)
	{
		$siteurl = $caller->config->item('admin_base_url');
		if(!$caller->session->userdata('sess_admin_id'))
		{
			$caller->session->set_userdata("ref-page",$siteurl.substr($caller->uri->ruri_string(), 1,strlen($caller->uri->ruri_string())));
			redirect($siteurl.'home/');
		}
	}
	function check_front_logged_in($caller)
	{
		/*$siteurl = $caller->config->item('base_url');
		if(!$caller->session->userdata('userid'))
		{
			$caller->session->set_userdata("ref-page",$siteurl.substr($caller->uri->ruri_string(), 1,strlen($caller->uri->ruri_string())));
			redirect($siteurl);
		}*/
	}
	
	public function get_picture($org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$picture = $CI->common_model->get_org_picture($org_id);
		if(!empty($picture)) {
			return $picture['st_org_image'];
		}
	}
	
	public function get_permission($user_id,$org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$permission = $CI->common_model->get_permission($user_id,$org_id);
		if(!empty($permission)) {
			return $permission['st_permission'];
		}
	}
	
	public function get_org_owner_id($user_id,$org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$owner = $CI->common_model->get_org_owner_id($user_id,$org_id);
		if(!empty($owner)) {
			return $owner['in_user_id'];
		} else {
			return 0;
		}
	}
	
	function get_filtered_name($name){
		if(!is_null($name)){
			$name = trim($name);
			$name = str_replace(' ','-',trim($name));			
			$name = preg_replace("![^a-z0-9&~_-]+!i", "", $name);
			$name = str_replace('---','-',trim($name));
			if(substr($name,-1) == '.')
				$name = substr($name,0,-1);
		}
		return strtolower($name);
	}
	
	public function get_user_picture($org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$picture = $CI->common_model->get_user_picture($org_id);
		if(!empty($picture)) {
			return $picture['st_profile_image'];
		}
	}
	
	public function get_user_profile($user_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$user_details = $CI->common_model->get_user_profile($user_id);
		if(!empty($user_details)) {
			return $user_details[0];
		}
	}
	public function tbl_time_zone() {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$all_time_zone = $CI->common_model->time_zone();
		return $all_time_zone;
	}

	function send_mail($o_email, $to, $subject, $message, $from = '',$cc ='', $name ='',$o_sendgrid='',$category='',$reply_to='')
	{	
		$CI = & get_instance();
		//$CI->load->model('common_model');
		
		//$verify_user = $CI->common_model->verify_unsubscribe_user($to);
		//if(strpos($to,'pulsesolutions') !== false || $to == 'test@test.com' )
		//if(strpos($to,'pulsesolutions') !== false || strpos($to,'qaps971@gmail.com') !== false )
		//if((strpos($to,'pulsesolutions') !== false || strpos($to,'qaps971@gmail.com') !== false ) &&  $verify_user<=0 )	
		if((strpos($to,'pulsesolutions') !== false || strpos($to,'qaps971@gmail.com') !== false ) )	
		{
			$o_email->clear();
			if($category!='')
			{					
				//$o_sendgrid->setCategory($category); 
				$o_sendgrid->add_custom_header('X-SMTPAPI', '{"category":"'.$category.'"}');
			}
			//$xsmtpapi = $o_sendgrid->as_string();
			//$o_email->add_custom_header('X-SMTPAPI',$xsmtpapi); 
			$o_email->to($to);
			$o_email->cc($cc);
			//$o_email->bcc('rupesh.kumar@pulsesolutions.net');
			if($_SERVER['HTTP_HOST']!='crystal9')
			{ 
				//$o_email->bcc('rajesh.ramakrishnan@pulsesolutions.net');	
				//$o_email->bcc('ghanshyam.maurya@pulsesolutions.net');	
			}
			$o_email->from($from,$name);
			$o_email->subject($subject);
		
			if($reply_to != '') {
				$o_email->reply_to($reply_to);
			}
		
			$mail_message = str_replace("##current_year##",date('Y'),$message);
		
			$o_email->message($mail_message);
			//echo "<pre>";;print_r($o_email);
			$check_mail_sent = $o_email->send();
			return $check_mail_sent;
			//$o_email->print_debugger();die;
			//@mail('jigar.patel@pulsesolutions.com',$subject,$message."<br><br>To email: ".$to, "MIME-Version: 1.0 \r\n"."Content-type: text/html; charset=iso-8859-1 \r\n".'From: '.$name.' <'.$from.'>'."\r\n");
		}
	}	
	
	public function get_time_difference($time) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$get_time_difference = $CI->common_model->get_time_difference($time);
		return $get_time_difference;
	}
	
	public function check_sponsorship_exist($animal_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$sponsorship = $CI->common_model->check_sponsorship_exist($animal_id);
		return $sponsorship;
	}
	
	public function check_animal_transport($animal_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$transport = $CI->common_model->check_animal_transport($animal_id);
		return $transport;
	}
	
	public function encode_base64($sData){
		$sBase64 = base64_encode($sData);
		return str_replace('=', '', strtr($sBase64, '+/', '-_'));
	}

	public function decode_base64($sData){
		$sBase64 = strtr($sData, '-_', '+/');
		return base64_decode($sBase64.'==');
	}
	
	public function pending_requests($org_id,$date='') {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$data = array();
		
		//Calling models
		$pending_requests = $CI->common_model->pending_requests($org_id,$date);
		
		//$pending_requests = $CI->common_model->get_last_pending_users($org_id,$date);
		
		//Storing data in array
		$data['pending_requests'] = $pending_requests;
		
		return $data;
	}
	
	public function pending_notifications($org_id,$date='') {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$data = array();
		
		//Calling models
		$pending_notifications = $CI->common_model->pending_notifications($org_id,$date);
		
		//Storing data in array
		$data['notifications'] = $pending_notifications;
		
		return $data;
	}
	
	public function pending_transefer_req($org_id,$date='') {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$data = array();
		
		//Calling models
		$pending_transefer_req = $CI->common_model->pending_transefer_req($org_id,$date);
		
		//Storing data in array
		$data['transefer_req'] = $pending_transefer_req;
		
		return $data;
	}
	
	//
	public function pending_notifications_front($user_id,$date='') {
		$CI = & get_instance();
		
		if($CI->session->userdata('userid')) {
			$CI->load->model('common_model');
			$data = array();
			
			//Calling models
			//$pending_notifications_front = $CI->common_model->pending_notifications_front($user_id,$date);
			$pending_notifications_front = $CI->common_model->get_my_notification_count($user_id,$date);
			//echo "<p style=color:red>".$CI->db->last_query()."</p>";
			//Storing data in array
			$data['notifications'] = $pending_notifications_front;
			//echo "<p style=color:red;>".$data['notifications']."</p>";
			return $data['notifications'];
		}
	}
	
	public function pending_notifications_message($user_id,$date='') {
		$CI = & get_instance();
		
		//if($CI->session->userdata('userid')) {
			if($user_id) {
			$CI->load->model('common_model');
			$data = array();
			
			//Calling models
			//$pending_notifications_front = $CI->common_model->pending_notifications_front($user_id,$date);
			$pending_notifications_front = $CI->common_model->get_my_notification_message($user_id,$date);
			//echo "<p style=color:red>".$CI->db->last_query()."</p>";
			//Storing data in array
			$data['notifications'] = $pending_notifications_front;
			//echo "<p style=color:red;>".$data['notifications']."</p>";
			return $data['notifications'];
		}
	}
	
	public function pending_transportation($user_id,$date='') {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$data = array();
		
		//Calling models
		$pending_transportation = $CI->common_model->pending_transportation($user_id,$date);
		
		//Storing data in array
		$data['transportation'] = $pending_transportation;
		
		return $data;
	}
	
	//function get_organization_profile to get organization profile privacy data
	public function get_organization_profile($org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$org_details = $CI->common_model->get_organization_profile($org_id);
		if(!empty($org_details)) {
			return $org_details;
		}
	}
	
	public function pending_org_feed_cnt($org_id,$date='') {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$feed_count['feed_count'] = $CI->common_model->get_org_feed_cnt($org_id,$date);
		
		if(!empty($feed_count)) {
			return $feed_count;
		}
	}
	
	function get_filtered_event($name){
		if(!is_null($name)){
			$name = trim($name);
			$name = preg_replace("![^a-z0-9&~_-]+!i", " ", $name);
			$name = str_replace('---',' ',trim($name));
			if(substr($name,-1) == '.') $name = substr($name,0,-1);
		}
		return strtolower($name);
	}
	
	public function pending_draft_transport($org_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$draft_count['draft_count'] = $CI->common_model->get_draft_transport_cnt($org_id);
		
		if(!empty($draft_count)) {
			return $draft_count;
		}
	}
	
	public function get_filtered_name_ucfirst($name){
		if(!is_null($name)){
			$name = trim($name);
			$name = str_replace(' ',' ',trim($name));			
			//$name = preg_replace("![^a-z0-9&~_-]+!i", " ", $name);
			$name = preg_replace("![^a-z0-9&~_,'-]+!i", " ", $name);
			$name = str_replace('---','-',trim($name));
			if(substr($name,-1) == '.')
				$name = substr($name,0,-1);
		}
		return ucfirst($name);
	}
	
	public function check_animal_for_aviation($animal_id) {
		$data = array();
		
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$data['check_aviation'] = $CI->common_model->check_animal_for_aviation($animal_id);
		
		return $data['check_aviation'];
	}
	
	public function dateDifference($date_1 , $date_2 , $differenceFormat = '%y Year %m Month %d Day %h Hours %i Minute %s Seconds' ) {
		$datetime1 = date_create($date_1);
		$datetime2 = date_create($date_2);
		
		$interval = date_diff($datetime1, $datetime2);
		
		return $interval->format($differenceFormat);
    
	}
	
	public function get_vehicle_detail_by_id($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$vehicle_details = $CI->common_model->get_vehicle_detail_by_id($id);
		
		if(!empty($vehicle_details)) {
			return $vehicle_details;
		}
	}
	
	public function get_plane_detail_by_id($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$plane_details = $CI->common_model->get_plane_detail_by_id($id);
		
		if(!empty($plane_details)) {
			return $plane_details;
		}
	}
	
	public function vehicle_images_by_id($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$vehicle_images = $CI->common_model->vehicle_images_by_id($id);
		
		if(!empty($vehicle_images)) {
			return $vehicle_images;
		}
	}
	
	public function plane_images_by_id($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$vehicle_images = $CI->common_model->plane_images_by_id($id);
		
		if(!empty($vehicle_images)) {
			return $vehicle_images;
		}
	}
	
	public function get_user_part_ids_by_leg_id($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$user_part_ids = $CI->common_model->get_user_part_ids_by_leg_id($id);
		
		if(!empty($user_part_ids)) {
			return $user_part_ids;
		}else {
		   $user_part_ids = array();
		   return $user_part_ids ;
		}
	}
	
	public function get_filled_legs_count($id) {
	
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		
		$filled_legs_count = $CI->common_model->get_filled_legs_count($id);
		return $filled_legs_count;
		
	}
	
	public function pending_invitation_cnt($user_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$invitation_count = $CI->common_model->get_pending_invitation_cnt($user_id);
		
		return $invitation_count;
	}
	
	public function pending_invitation_name($user_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$invitation_name = $CI->common_model->get_pending_invitation_org_name($user_id);
		
		return $invitation_name;
	}
	
	public function get_demo_video_link_by_id($id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$link = $CI->common_model->get_demo_video_link_by_id($id);
		
		return $link;
	}
	
	//function get_user_subscription_detail to get user subscription date added by ghanshyam on 19Aug2014
	public function get_user_subscription_detail($user_id) { 
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$user_sub_details = $CI->common_model->get_user_subscription_detail($user_id);
		
		if(!empty($user_sub_details)) {
			return $user_sub_details;
		}
	}
	
	public function get_transport_coordinator($transport_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$co_details = $CI->common_model->get_transport_coordinator($transport_id);
		if(!empty($co_details)) {
			return $co_details;
		}
	}
	
	public function get_transport_organization($transport_id) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$co_details = $CI->common_model->get_transport_organization($transport_id);
		if(!empty($co_details)) {
			return $co_details;
		}
	}
	
	function remoteFileExists($url) {
		$curl = curl_init($url);
	
		//don't fetch the actual page, you only want to check the connection is ok
		curl_setopt($curl, CURLOPT_NOBODY, true);
	
		//do request
		$result = curl_exec($curl);
	
		$ret = false;
	
		//if request did not fail
		if ($result !== false) {
			//if request was ok, check response code
			$statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);  
	
			if ($statusCode == 200) {
				$ret = true;   
			}
		}
	
		curl_close($curl);
	
		return $ret;
	}
	
	function check_auto_login_status()
	{
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$auto_login_status = $CI->common_model->check_auto_login_status();
		
		return $auto_login_status;
	}
	
	function check_email_verification_status()
	{
		$CI = & get_instance();
		$CI->load->model('common_model');
		
		$user_email_verify_status = '';
		if($CI->session->userdata('userid'))
		{
		$user_email_verify_status = $CI->common_model->check_email_verification_status($CI->session->userdata('userid'));
		}
		return $user_email_verify_status;
	}
}

?>