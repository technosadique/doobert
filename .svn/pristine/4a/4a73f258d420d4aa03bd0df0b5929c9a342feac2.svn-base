<?php
# ======================================================================================
# Created by		: Sadique Mohammad
# Created date		: 30-May-2017
# File description	: non doobert org Model for admin
# Special - notes	: none
# Tables used		: tbl_non_doobert_org
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class non_doobert_org_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	#==================================================================================================
	#	Function	:	get_total_org()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email,city,state,zip
	#	Perpose		:	to get total no of blocked organization
	#--------------------------------------------------------------------------------------------------
	public function get_total_org($name='', $email='', $city='',  $state='', $zip='')
	{ 				
					
					$this->db->select("org.inNonDoobertOrgId", false);						   	
					$this->db->from('tbl_non_doobert_org org');	
					$this->db->where('org.inDeleted',0);
					
					
					if($name!= '') { 
						$name = str_replace("%","\%",$name);							
						$this->db->where("(org.stOrgName LIKE '%".addslashes($name)."%')", NULL, FALSE);		
					}
					
					
					if(trim($email) != '') {
							$this->db->where("org.stOrgEmail LIKE '%".$email."%'", NULL, FALSE);
					}	
					
					
					if(trim($city) != '') {
							$this->db->where("org.stCity LIKE '%".$city."%'", NULL, FALSE);
					}				
					
					if(trim($state) != '') {
							$this->db->where("org.stState LIKE '%".$state."%'", NULL, FALSE);
					}				
					
					if(trim($zip) != '') {
							if($zip=='%'){
							$this->db->where("org.stZip RLIKE '%".$zip."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("org.stZip LIKE '%".$zip."%'", NULL, FALSE);
						}
					}
					
					$query = $this->db->get();
					//echo $this->db->last_query(); die;		
					return $query->num_rows();
	}
	
	
	
	
	#==================================================================================================
	#	Function	:	get_org()
	#   Parameter	: 	sort,order,limit,rec_per_page,name,email,city,state,zip
	#	Perpose		:	to get nondoobert organization details
	#--------------------------------------------------------------------------------------------------
	public function get_org($sort,$order,$limit,$rec_per_page,$name,$email,$city,$state,$zip)
	{		
					
					
					$this->db->select("org.inNonDoobertOrgId,
									   org.stOrgName,
									   org.stOrgEmail,
									   org.stCity,
									   org.stState,	
									   org.stZip", false);						   	
					$this->db->from('tbl_non_doobert_org org');	
					$this->db->where('org.inDeleted',0);  
					
					if($name!= '') { 
						$name = str_replace("%","\%",$name);							
						$this->db->where("(org.stOrgName LIKE '%".addslashes($name)."%')", NULL, FALSE);		
					}
					
					
					if(trim($email) != '') {
							$this->db->where("org.stOrgEmail LIKE '%".$email."%'", NULL, FALSE);
					}	
					
					
					if(trim($city) != '') {
							$this->db->where("org.stCity LIKE '%".$city."%'", NULL, FALSE);
					}				
					
					if(trim($state) != '') {
							$this->db->where("org.stState LIKE '%".$state."%'", NULL, FALSE);
					}				
					
					if(trim($zip) != '') {
							if($zip=='%'){
							$this->db->where("org.stZip RLIKE '%".$zip."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("org.stZip LIKE '%".$zip."%'", NULL, FALSE);
						}
					}
		
					switch($sort)
						{
							
							
							case 'name': 								
								$this->db->order_by('org.stOrgName',$order);
							break;
							
							case 'email':							
								$this->db->order_by('org.stOrgEmail',$order);
							break;
							
							case 'city':							
								$this->db->order_by('org.stCity',$order);
							break;
							
							case 'state': 								
								$this->db->order_by('org.stState',$order);
							break;	
							
							case 'zip': 								
								$this->db->order_by('org.stZip',$order);
							break;
							
							default:							
							$this->db->order_by('org.stOrgName',$order);
							break;
								         
						}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 	
					
					//echo $this->db->last_query();  die;					
					$arrOrg = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrOrg[$Row->inNonDoobertOrgId]	= array( 'orgid'	=> $Row->inNonDoobertOrgId,
																		 'orgname'	=> $Row->stOrgName,
																		 'orgemail'	=> $Row->stOrgEmail,
																		 'orgcity'	=> $Row->stCity,
																		 'orgstate'	=> $Row->stState,
																		 'orgzip'	=> $Row->stZip
																	);
						}
						return $arrOrg;
						
					}
					
	}
		
		
	
	#======================================================================
	#	Function	:	get_org_profile()
	#   Parameter	: 	orgId
	#	Perpose		:	to get org profile from tbl_non_doobert_org table
	#----------------------------------------------------------------------
	function get_org_profile($orgId)
	{
		$this->db->select('o.inNonDoobertOrgId,o.stOrgName,o.stOrgEmail,o.stOrgWeb,o.stAddr1,o.stAddr2,o.stCity,o.stState,o.stZip');
		$this->db->from('tbl_non_doobert_org as o');		
		$this->db->where('o.inNonDoobertOrgId',$orgId);			
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	
	function is_email_exists($email)
	{ 
		$this->db->select('inNonDoobertOrgId');
		$this->db->from('tbl_non_doobert_org');							
		$this->db->where("stOrgEmail",$email); 
		$this->db->where("inDeleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;	
		if($query->num_rows()>0)
			return true;
		else
			return false;				
	}
	
	
	#======================================================================
	#	Function	:	update_org_info()
	#   Parameter	: 	data,orgId,table
	#	Perpose		:	to update admin profile in tbl_non_doobert_org table
	#----------------------------------------------------------------------
	public function update_org_info($data,$orgId,$table) {		
		$this->db->where('inNonDoobertOrgId',$orgId);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
	
	#======================================================================
	#	Function	:	org_delete()
	#   Parameter	: 	orgId
	#	Perpose		:	to delete single org details from tbl_non_doobert_org table
	#----------------------------------------------------------------------
	function org_delete($orgId)
	{
		$arrOrg= 	array('inDeleted' 	=> '1' );		
		$this->db->where('inNonDoobertOrgId', $orgId);
		$this->db->update('tbl_non_doobert_org', $arrOrg);		
	}
	
	#========================================================================
	#	Function	:	delete_multiple_org()
	#   Parameter	: 	orgIds
	#	Perpose		:	to delete multiple org details from tbl_non_doobert_org table
	#------------------------------------------------------------------------
	function delete_multiple_org($orgIds)
	{				
		$arrOrg = 	array('inDeleted' 	=> '1' );
		$this->db->where_in('inNonDoobertOrgId', $orgIds);
		$this->db->update('tbl_non_doobert_org', $arrOrg);		
		return $this->db->affected_rows();
	}
}
?>