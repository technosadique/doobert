<?php
# ======================================================================================
# Created by		: Sadique Mohammad
# Created date		: 09-April-2014
# File description	: Vehicle Model for admin
# Special - notes	: none
# Tables used		: tbl_exam,tbl_user_profile
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class exam_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
    
	#============================================================
	#  Function	:	get_total_vehicle_types()
	#  Parameter	: 	name
	#  Perpose		:	to get total no of vehicle types from tbl_exam
	#------------------------------------------------------------
	public function get_total_exam($name='')
	{ 				
					$this->db->select("tbl_exam.in_exam_id", false);						   	
					$this->db->from('tbl_exam');					
					$this->db->where('tbl_exam.in_deleted','0');
					
		if($name!='')
		{	 
		  $this->db->where("tbl_exam.st_exam_title LIKE '%".$name."%'", NULL, FALSE);
		}
		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	#============================================================
	#	Function	:	get_vehicle_types()
	#  Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	to get vehicle types details
	#------------------------------------------------------------
	public function get_exam($sort,$order,$limit,$rec_per_page,$name)
	{	  
				   $this->db->select("in_exam_id,st_exam_title,st_exam_price,in_passing_score,in_no_of_attempts,dt_created,in_status", false);						   	
					$this->db->from('tbl_exam');					
					$this->db->where('in_deleted','0');
					  
		if($name!='')
		{	 
		   $this->db->where("tbl_exam.st_exam_title LIKE '%".$name."%'", NULL, FALSE);
		}
		
					
					switch($sort)
					{
						case 'title': 						
							$this->db->order_by('tbl_exam.st_exam_title',$order);
						break;

						case 'price': 						
							$this->db->order_by('tbl_exam.st_exam_price',$order);
						break;
						
							
						case 'score': 						
							$this->db->order_by('tbl_exam.in_passing_score',$order);
						break;	
							
						
						case 'attempt': 						
							$this->db->order_by('tbl_exam.in_no_of_attempts',$order);
						break;
						
						
						case 'status': 						
							$this->db->order_by('tbl_exam.in_status',$order);
						break;
							
						case 'createddate': 							
							$this->db->order_by('tbl_exam.dt_created',$order);
						break;
						
						case 'modified_date': 							
							$this->db->order_by('tbl_exam.dt_modified',$order);
						break;
						
							 
						default:
						   $this->db->order_by('tbl_exam.st_exam_title',$order);
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 	
					//echo $this->db->last_query();  die;					
					$arrExam = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrExam[]	=	array('in_exam_id'	=> $Row->in_exam_id,
													'st_exam_title'								        => $Row->st_exam_title,
													'st_exam_price'								        => $Row->st_exam_price,
													'in_passing_score'								    => $Row->in_passing_score,
													'in_no_of_attempts'								    => $Row->in_no_of_attempts,
													'dt_created'									    => $Row->dt_created,
													'in_status'								            => $Row->in_status	
											);
						}
						return $arrExam;
						
					}
					
	}
	
	
	#====================================================================================
	#	Function	:	delete_vehicle_types()
	#   Parameter	: 	vehicletypeId
	#	Perpose		:	to delete single vehicle type details from tbl_exam table
	#------------------------------------------------------------------------------------
	public function delete_exam($id)
	{
				$arrExam = 	array('in_deleted' 	=> '1' );		
				$this->db->where('in_exam_id', $id);
				$this->db->update('tbl_exam', $arrExam);		
	}
	
	
	
	#==========================================================================================
	#	Function	:	delete_multiple_vehicle_types()
	#   Parameter	: 	vehicletypeIds
	#	Perpose		:	to delete multiple vehicle types details from tbl_exam table
	#------------------------------------------------------------------------------------------
	public function delete_multiple_exam($id)
	{			
				$arrExam = 	array('in_deleted' 	=> '1' );
				$this->db->where_in('in_exam_id', $id);
				$this->db->update('tbl_exam', $arrExam);		
				return $this->db->affected_rows();
	}
	
	
	
	#============================================================================
	#	Function	:	get_vehicle_types_profile()
	#   Parameter	: 	vehicletypeIds
	#	Perpose		:	to get vehicle types details from tbl_exam table
	#----------------------------------------------------------------------------
	public function get_exam_profile($id)
	{
				$this->db->select('e.in_exam_id,e.st_exam_title,e.st_exam_desc,e.in_exam_duration,e.st_exam_price,e.in_total_score,e.in_passing_score,e.in_no_of_attempts,e.in_status,e.st_description,e.st_retake_price');
				$this->db->from('tbl_exam as e');		
				$this->db->where('e.in_exam_id',$id);
				$query = $this->db->get();
				return $query->row_array();	
	}
	
	#============================================================================
	#	Function	:	update_vehicle_type_info()
	#   Parameter	: 	data,vehicletypeId,table
	#	Perpose		:	to update vehicle types details tbl_exam table
	#----------------------------------------------------------------------------
	public function update_exam_info($data,$id,$table) {
				$this->db->where('in_exam_id',$id);
				$this->db->update($table,$data);
				return $this->db->affected_rows();	
	}
	
	public function update_exam_question($examid,$question) {		
		$data=array('st_question'=>$question);
		$this->db->where('in_exam_id',$examid);				
		$this->db->update('tbl_exam_question',$data);
		return $this->db->affected_rows();	
	}
	
	
    #============================================================================
	#	Function	:	insertVehicleTypes()
	#   Parameter	: 	post
	#	Perpose		:	to insert vehicle types details in tbl_exam table
	#----------------------------------------------------------------------------
	public function insertExam($post)
	{
				 $arrExam = 	  array(
										'st_exam_title'			=>	$post['title'],								
										'st_exam_desc'			=>	$post['description'],								
										'in_exam_duration'		=>	$post['duration'],								
										'st_exam_price'			=>	$post['price'],								
										'st_retake_price'		=>	$post['retake_price'],								
										'in_total_score'		=>	$post['totalscore'],								
										'in_passing_score'		=>	$post['passingscore'],								
										'in_no_of_attempts'		=>	$post['attempt'],								
										'in_status'				=>	$post['active'],															
										'dt_created'			=>  date("Y-m-d H:i:s")																											
										);	
										$this->db->insert('tbl_exam', $arrExam);	

	}
	
	
	function is_title_exists($title)
	{ 
				$this->db->select('in_exam_id');
				$this->db->from('tbl_exam');							
				$this->db->where("st_exam_title",$title);
				$this->db->where("in_deleted",0);
				$query = $this->db->get();		
				//echo $this->db->last_query(); die;	
				
				if($query->num_rows()>0)
					return true;
				else
					return false;				
	}
			
	function add_exam_question($examid,$questid)
	{   
		$arrExam = 	  array(
							'in_exam_id'			=>	$examid,	
							'st_question'			=>	$questid,	
							'dt_created'			=>  date("Y-m-d H:i:s")																											
							);	
		$this->db->insert('tbl_exam_question', $arrExam);	
	}
	
	public function get_question()
	{
		$this->db->select('q.in_ques_id,q.st_question');
		$this->db->from('tbl_survey_questions q');
		$this->db->where('q.in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function is_record_exist($examid)
	{
		$this->db->select('in_id');
		$this->db->from('tbl_exam_question');
		$this->db->where('in_exam_id',$examid);
		$this->db->where('in_deleted',0);	
		$query = $this->db->get();		
		if($query->num_rows()>0)
					return true;
				else
					return false;				
	}
	
	public function selected_question_list($id)
	{
		$this->db->select('st_question');
		$this->db->from('tbl_exam_question');		
		$this->db->where('in_exam_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		return $query->row_array();
	}
	
}
?>