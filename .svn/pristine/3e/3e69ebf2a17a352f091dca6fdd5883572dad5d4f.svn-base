$(window).on('load',function(){
	 //$('#route_tab').tab('#tab_2_2');
	jQuery('#cancel-config').modal('show');
	//$('#non_doobert_user_phone').inputmask("(999) 999-9999");
	$('#non_doobert_user_phone').mask('(999) 999-9999',{placeholder: "(___) ___-____"},{'translation': {9: {pattern: /[0-9*]/,optional:false}}});
	 
});	
function delete_leg(id)
{

	if(confirm('Are you sure you want to reject this volunteer suggested leg?'))
	{	
		$.ajax({
			  type: "POST",
			  url: base_url+'org_transportation/delete_routing_legs/',
			  beforeSend: function(){
				 $('#delete_leg_covering').modal('toggle');
			  },
			  data: {
				  id:id
			  },
			  //dataType:"json",			  
			  complete: function(){
				$('#delete_leg_covering').modal('hide');
			  },
			  success:function(data)
			  {
				 var url =  JSON.parse(data);
				 if(data!='')
					 //console.log(url);
						window.location.href=url;
					//console.log(url);
					
					
					
			  }
		   });
	}		
}
var leg_type
var from_date_setup;
var to_date_setup;
var from_date_setup_year;
var to_date_setup_year;
$(document).ready(function(){
$(document).on('change','#select_module',function()
{
	//alert($(this).val());
	if($(this).val()=='ground-leg')
	{
		leg_type = '0';
		$("#add_ground_leg").trigger( "click" );
		//$("#add_ground_leg").click();
	}
	if($(this).val()=='aviation-leg')
	{	
		leg_type = '1';
		$('#add_aviation_leg').trigger( "click" );
		//simulateClick
	}
	if($(this).val()=='overnight-leg')
	{	
		leg_type = '2';
		$('#add_overnight_leg').trigger( "click" );
		//simulateClick
	}
	
	
});
});

        jQuery(document).ready(function() {       
           // initiate layout and plugins
		   //$("#add_ground_leg").trigger( "click" );
		    // $("#add_ground_leg")[0].click();
		
           ComponentsPickers.init();		 	
        });

function display_date_picker()
{	
ToEndDate.setDate(ToEndDate.getDate()+365);

$('.from_date1').datetimepicker({ 
    endDate: date_end,    
	format: "D M dd - HH:ii P",
	showMeridian: true,
	autoclose: true,
	pickerPosition: "bottom-left",
	startDate:date_start	
}).on('changeDate', function(e) {
	var d = new Date(e.date);
	var y = d.getFullYear();
	if(leg_type=='0')
	{
		from_date_setup = $('#clockface_2_modal1').val();
		from_date_setup_year = 	d.getFullYear();
	} else 	if(leg_type=='1')
	{
		from_date_setup = $('#pickup_airport_clock1').val();
		from_date_setup_year = 	d.getFullYear();
	}
}).on('hide', function(e) {
	if(leg_type=='0')
	{
		$('#clockface_2_modal1').val(from_date_setup);
		$('#clockface_2_modal1_year').val(from_date_setup_year);		
	} else 	if(leg_type=='1')
	{
		 $('#pickup_airport_clock1').val(from_date_setup);
		 $('#pickup_airport_clock1_year').val(from_date_setup_year);
	}
});

$('.to_date1').datetimepicker({
        endDate: date_end,
		format: "D M dd - HH:ii P",
		showMeridian: true,
		autoclose: true,
		//todayBtn: false,
		pickerPosition: "bottom-left",
		startDate: date_start
    }).on('changeDate', function(e) {
	var d = new Date(e.date);
	if(leg_type=='0')
	{
		to_date_setup = $('#clockface_3_modal1').val();
		to_date_setup_year = d.getFullYear();	
	} else 	if(leg_type=='1')
	{
		to_date_setup = $('#dropoff_airport_clock1').val();
		to_date_setup_year = d.getFullYear();
	}
}).on('hide', function(e) {
	if(leg_type=='0')
	{
		$('#clockface_3_modal1').val(to_date_setup);
		$('#clockface_3_modal1_year').val(to_date_setup_year);	
	} else 	if(leg_type=='1')
	{
		 $('#dropoff_airport_clock1').val(to_date_setup);
		 $('#dropoff_airport_clock1_year').val(to_date_setup_year);
	}
});
}		
		
function display_date_picker_one()
{	
ToEndDate.setDate(ToEndDate.getDate()+365);

$('.from_date1').datetimepicker({ 
    endDate: date_end,    
	format: "D M dd - HH:ii P",
	showMeridian: true,
	autoclose: true,
	pickerPosition: "bottom-left",
	startDate:date_start	
}).on('hide', function(e) {
	
	var eventDate = $('.from_date1 input').val();
	console.log('eventDate'+eventDate);
	
	var date = new Date(e.date),
		  now = new Date(),
		  hoursDetla = now.getHours() - now.getUTCHours();
	date.setTime(date.getTime() - hoursDetla * 3600 * 1000);
	
	date.setFullYear(now.getFullYear());
	 
	console.log('on hide date is:'+date);
	
	var weekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
	var main_day = weekday[date.getDay()];
	console.log('day is:'+day);
	if(eventDate != '')
	{
		var dateandtimeElement = eventDate.split("-");
		var dateElement = dateandtimeElement[0];
		var timeElement = dateandtimeElement[1];

		var dateElementArray = dateElement.split(" ");
		var day = main_day;
		var month = dateElementArray[1];
		var date = dateElementArray[2];
		if(typeof day != 'undefined')
		{
			$('.from_date1 input').val(day+' '+month+' '+date+' -'+timeElement);	
		}
		console.log($('.from_date1 input').val());
	}	
	
});

$('.to_date1').datetimepicker({
        endDate: date_end,
		format: "D M dd - HH:ii P",
		showMeridian: true,
		autoclose: true,
		//todayBtn: false,
		pickerPosition: "bottom-left",
		startDate: date_start
    }).on('hide', function(e) {
	
	var eventDate =	$('.to_date1 input').val();
	console.log('eventDate'+eventDate);
	
	var date = new Date(e.date),
		  now = new Date(),
		  hoursDetla = now.getHours() - now.getUTCHours();
	date.setTime(date.getTime() - hoursDetla * 3600 * 1000);
	
	date.setFullYear(now.getFullYear());
	 
	console.log('on hide date is:'+date);
	
	var weekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
	var main_day = weekday[date.getDay()];
	console.log('day is:'+day);
	if(eventDate != '')
	{
		var dateandtimeElement = eventDate.split("-");
		var dateElement = dateandtimeElement[0];
		var timeElement = dateandtimeElement[1];

		var dateElementArray = dateElement.split(" ");
		var day = main_day;
		var month = dateElementArray[1];
		var date = dateElementArray[2];
		
		$('.to_date1 input').val(day+' '+month+' '+date+' - '+timeElement);	
		console.log($('.to_date1 input').val());
	}		
});
}	
	//});		
var map;        
var myCenter;
function leg_map(transport_id,in_id)
{  
			var retrive_lat_lon = $.ajax({
									type: "POST",
									url: base_url+'org_transportation/get_lat_long',
									data: {
										transport_id:transport_id,
										in_id:in_id
										}, 
									async:false,	
									dataType:"json",
									success:function(data) 
									{
									}
								});
						
directionsDisplay = new google.maps.DirectionsRenderer({
				map:map,
			suppressMarkers: true
});
directionsDisplay1 = new google.maps.DirectionsRenderer({
		map:map,
		suppressMarkers: true
});
	var directionsService1 = new google.maps.DirectionsService;
	var directionsService2 = new google.maps.DirectionsService;
  
	var lat_long = retrive_lat_lon.responseJSON;
	var trans_source_lat = lat_long['trans_source']['lat'];
	var trans_source_lon = lat_long['trans_source']['lon'];
	var trans_dest_lat = lat_long['trans_dest']['lat'];
	var trans_dest_lon = lat_long['trans_dest']['lon'];
	
	var trans_recommend_lat =  parseFloat(lat_long['recomd_source']['lat']);
	var trans_recommend_lon =  parseFloat(lat_long['recomd_source']['lon']);
	var trans_recommend_lat1 = parseFloat(lat_long['recomd_dest']['lat']);
	var trans_recommend_lon1 = parseFloat(lat_long['recomd_dest']['lon']);
	var pinA;
	var pinB;
	myCenter=new google.maps.LatLng(lat_long['trans_source']['lat'], lat_long['trans_source']['lon']);
	var mapProp = {
	  center: new google.maps.LatLng(lat_long['trans_source']['lat'], lat_long['trans_source']['lon']),
      zoom:7,
      draggable: true,
      scrollwheel: true,
      mapTypeId:google.maps.MapTypeId.ROADMAP,
	  zoomControlOptions: {
						position: google.maps.ControlPosition.LEFT_TOP
						},
      panControlOptions: {
						position: google.maps.ControlPosition.LEFT_TOP
                    },
      mapTypeControlOptions: {
                        position: google.maps.ControlPosition.BOTTOM_CENTER
                    }
	};
  
		map=new google.maps.Map(document.getElementById("map-canvas"),mapProp);
 	
		var origin1 = new google.maps.LatLng(trans_source_lat,trans_source_lon);
		var des1	= new google.maps.LatLng(trans_dest_lat,trans_dest_lon);
		
		var temorigin2 = new google.maps.LatLng(trans_recommend_lat,trans_recommend_lon);
		var temdes2	= new google.maps.LatLng(trans_recommend_lat1,trans_recommend_lon1);
		
		var transport_source = lat_long['transportsource'];
		var transport_dest   = lat_long['transportdest'];
		
		var routing_source = lat_long['routingsource'];
		var routing_dest   = lat_long['routingdest'];
		
		if (temorigin2.equals(origin1)) 
		{
			var currentMarkerLat = trans_recommend_lat + (Math.random() -.5) / 100;
			var currentMarkerLon =  trans_recommend_lon + (Math.random() -.5) / 100;
			var origin2 = new google.maps.LatLng(currentMarkerLat,currentMarkerLon);
		} else {
			var origin2 = new google.maps.LatLng(trans_recommend_lat,trans_recommend_lon);
		}
		
		if (temdes2.equals(des1)) 
		{
			var currentMarkerLat = trans_recommend_lat1 + (Math.random() -.5) / 100;
			var currentMarkerLon =  trans_recommend_lon1 + (Math.random() -.5) / 100;
			
			var des2 = new google.maps.LatLng(currentMarkerLat,currentMarkerLon);
		} else {
			var des2	= new google.maps.LatLng(trans_recommend_lat1,trans_recommend_lon1);
		}
		
		if(lat_long['routingtype'] == '0')
		{
		var request = {
          origin: origin2,  
          destination: des2, 
		  optimizeWaypoints: true,
          travelMode: 'DRIVING'
        };
		 directionsService2.route(request, function(result, status) {
          if (status == 'OK') {
			var path = new google.maps.MVCArray();
		    var bounds = new google.maps.LatLngBounds();
			var poly = new google.maps.Polyline({
				map: map,
				strokeColor: '#c8490a',
				geodesic: true,
				strokeOpacity: 2.0,
				strokeWeight: 6
			});
			poly.setPath(path);
		  
		  
		  
          for (var k = 0, len = result.routes[0].overview_path.length; k < len; k++) {
            path.push(result.routes[0].overview_path[k]);
            bounds.extend(result.routes[0].overview_path[k]);
            map.fitBounds(bounds);
          }
		  
		  var markerA = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=OA|00FF00|000000',
				//size: new google.maps.Size(24, 27),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			
			var markerB = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=OB|00FF00|000000',
				//size: new google.maps.Size(24, 28),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			
			var infowindow3 = new google.maps.InfoWindow({ 
				content:routing_source 
			}); 
			
			var infowindow4 = new google.maps.InfoWindow({ 
				content:routing_dest
			});
			
			var _route = result.routes[0].legs[0];
				pinOA = new google.maps.Marker({
				position: _route.start_location,
				map: map,
				icon:markerA,
			});
				pinOB = new google.maps.Marker({
				position: _route.end_location,
				map: map,
				icon:markerB,	
			});
		  
			pinOA.setMap(map); 
			pinOB.setMap(map);
			google.maps.event.addListener(pinOA, 'click', function() { 
				infowindow3.open(map,pinOA); 
			});	
			
			google.maps.event.addListener(pinOB, 'click', function() { 
				infowindow4.open(map,pinOB); 
			});	
        }
           else {
            //window.alert('Directions request failed due to ' + status);
			window.alert('We are currently having a problem with the Google Maps API.  The technical team is working on it and it should be resolved shortly');
          }
        });
		
		} else {
			 var flightPlanCoordinates = [
          {lat: trans_recommend_lat, lng: trans_recommend_lon},
          {lat: trans_recommend_lat1, lng: trans_recommend_lon1}
        ];
			var flightPath = new google.maps.Polyline({
					path: flightPlanCoordinates,
					strokeColor: '#c8490a',
					geodesic: true,
					strokeOpacity: 2.0,
					strokeWeight: 6
			});

			flightPath.setMap(map);
			
			  var markerA = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=OA|00FF00|000000',
				//size: new google.maps.Size(24, 27),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			
			var markerB = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=OB|00FF00|000000',
				//size: new google.maps.Size(24, 28),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			
			var infowindow3 = new google.maps.InfoWindow({ 
				content:routing_source 
			}); 
			
			var infowindow4 = new google.maps.InfoWindow({ 
				content:routing_dest
			});
			
			var origin2 = new google.maps.LatLng(trans_recommend_lat,trans_recommend_lon);
				pinOA = new google.maps.Marker({
				position: origin2,
				map: map,
				icon:markerA,
			});
			var des2	= new google.maps.LatLng(trans_recommend_lat1,trans_recommend_lon1);
				pinOB = new google.maps.Marker({
				position: des2,
				map: map,
				icon:markerB,	
			});
		  
			pinOA.setMap(map); 
			pinOB.setMap(map);
			google.maps.event.addListener(pinOA, 'click', function() { 
				infowindow3.open(map,pinOA); 
			});	
			
			google.maps.event.addListener(pinOB, 'click', function() { 
				infowindow4.open(map,pinOB); 
			});	
		}
		
		  var request1 = {
          origin: origin1,  // Haight.
          destination: des1,  // Ocean Beach.
		  optimizeWaypoints: true,
          travelMode: 'DRIVING'
        };
		 directionsService1.route(request1, function(response, status) {
          if (status == 'OK') {
			  directionsDisplay.setMap(map);
            directionsDisplay.setDirections(response);
			var markerA = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=A|FF0000|000000',
				//size: new google.maps.Size(24, 27),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			
			var markerB = {
				url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=B|FF0000|000000',
				//size: new google.maps.Size(24, 28),
				//origin: new google.maps.Point(0, 0),
				//anchor: new google.maps.Point(17, 34),
				//scaledSize: new google.maps.Size(25, 25)
			};
			var _route = response.routes[0].legs[0];
			
			var infowindow1 = new google.maps.InfoWindow({ 
			content:transport_source 
			}); 
			
			var infowindow2 = new google.maps.InfoWindow({ 
			content:transport_dest
			});
			
			
			pinA = new google.maps.Marker({
				position: _route.start_location,
				map: map,
				icon:markerA,
				
			});
			pinB = new google.maps.Marker({
				position: _route.end_location,
				map: map,
				icon:markerB,
				
			});
			pinA.setMap(map); 
			pinB.setMap(map);
			google.maps.event.addListener(pinA, 'click', function() { 
				infowindow1.open(map,pinA); 
			});	
			
			google.maps.event.addListener(pinB, 'click', function() { 
				infowindow2.open(map,pinB); 
			});	
			
			//infowindow1.open(map,pinA); 
          } else {
            //window.alert('Directions request failed due to' + status);
			window.alert('We are currently having a problem with the Google Maps API.  The technical team is working on it and it should be resolved shortly');
          }
        });
		 $('#myMapModal').modal('show');
		 //var center = map.getCenter();
		 //google.maps.event.trigger(map, "resize");
		 //map.setCenter(center); 
		 resizeMap();
		  
		 
}	

var lat_long=[];
jQuery(document).ready(function(){

$('#myMapModal').on('hide.bs.modal', function() {
});

$('#myMapModal').on('show.bs.modal', function() {
   //resizeMap();
});
});

function resizeMap() {
   if(typeof map =="undefined") return;
   setTimeout( function(){resizingMap();} , 400);
}

function resizingMap() {
   if(typeof map =="undefined") return;
   var center = map.getCenter();
   google.maps.event.trigger(map, "resize");
   map.setCenter(center); 
}

function view_comment(id)
{
				$.ajax({
						type: "POST",
						url: base_url+'org_transportation/get_comments',
						data: {
							in_id:id
						}, 
						async:false,	
						dataType:"json",
						success:function(data) {
							console.log(data);
							if(data!=null)
							{
								$('.content-comments p').html(data);		
								$('#comment_popup').modal();
							} else {
								alert("Comments for this route does not exits");
							}	
						}
				});

}

function create_leg(id)
{
	
				$.ajax({
						type: "POST",
						url: base_url+'org_transportation/get_covering_leg_details',
						data: {
							in_id:id
						}, 
						async:false,	
						dataType:"json",
						success:function(data) 
						{
							console.log(data);
							if(data['in_route_type'] == '0')
							{	
		
								//$('#createlegModal').modal('toggle');
								
								$("#add_ground_leg").trigger( "click" );
								$('#cover_ground_leg').val(id);
								$("#pickup_street1").val(data['st_from_street']);
								$("#pickup_location1").val(data['st_from_zip']+', '+data['st_from_city']+', '+data['st_from_state']+', '+data['st_from_country']);
								$("#pickup_city1").val(data['st_from_city']);
								$("#pickup_state1").val(data['st_from_state']);
								$("#pickup_zip1").val(data['st_from_zip']);
								$("#pickup_country1").val(data['st_from_country']);
								$("#dropoff_street1").val(data['st_to_street']);
								$("#dropoff_location1").val(data['st_to_zip']+', '+data['st_to_city']+', '+data['st_to_state']+', '+data['st_to_country']);
								$("#dropoff_city1").val(data['st_to_city']);
								$("#dropoff_state1").val(data['st_to_state']);
								$("#dropoff_zip1").val(data['st_to_zip']);
								$("#dropoff_country1").val(data['st_to_country']);
								$('#assign_user_name1').val(data['st_display_name']+' '+data['st_last_name']);
								$('#assignuid-driver1').val(data['in_user_id']);
								
							} else if(data['in_route_type'] == '1')	
							{	
								$('#add_aviation_leg').trigger( "click" );
								$('#cover_aviation_leg').val(id);
								$("#pickup_airport1").val(data['st_from_street']);
								$("#pickup_airport_city1").val(data['st_from_city']);
								$("#pickup_airport_state1").val(data['st_from_state']);
								$("#dropoff_airport1").val(data['st_to_street']);
								$("#dropoff_airport_city1").val(data['st_to_city']);
								$("#dropoff_airport_state1").val(data['st_to_state']);
								$('#assign_user_name-pilot1').val(data['st_display_name']+' '+data['st_last_name']);
								$('#assignuid-pilot1').val(data['in_user_id']);
								
							}	
						}
				});

}

var legsArray = new Array();
$(document).ready(function(){
	$(document).on('click','#submit',function()
	{	
		if($('#addlegs_ground').valid() == false){ 
			
		} else {
		var to_date = $('#clockface_3_modal1').val();
		var from_date = $('#clockface_2_modal1').val();
		var to_date_split = to_date.split('-');
		var from_date_split = from_date.split('-');
		
		var frm_year = $('#clockface_2_modal1_year').val();
		var to_year  = $('#clockface_3_modal1_year').val();
	  
		var start_time_date = new Date(from_date_split[0]);
		var end_time_date = new Date(to_date_split[0]);
	  
		//var end_date = new Date(end_time_date.getFullYear(), end_time_date.getMonth(), end_time_date.getDate()); 
		//var start_date = new Date(start_time_date.getFullYear(), start_time_date.getMonth(), start_time_date.getDate());

		var end_date = new Date(to_year, end_time_date.getMonth(), end_time_date.getDate()); 
		var start_date = new Date(frm_year, start_time_date.getMonth(), start_time_date.getDate());
	  
		if (start_date > end_date) {
			alert("Start Date is greather than End Date.");
			return false;
		} 
		if (end_date < start_date) {
			alert("End Date is less than Start Date.");
			return false;
		}

		if($.trim($('#assignuid-driver1').val())=='' || $.trim($('#assignuid-driver1').val())==0)
		{
			alert('Please select driver user');
			return false;	
		} else {
			var user_id = $('#assignuid-driver1').val();
		}	
		
		/*if($('#assignuid-driver1').length >0)
		{
			var user_id = $('#assignuid-driver1').val();
		} else {
			var user_id = '0';
		}*/	
		legsArray.push({"pickup_street":addslashes($("#pickup_street1").val()),"pickup_city":addslashes($("#pickup_city1").val()),"pickup_state":addslashes($("#pickup_state1").val()),"pickup_zip":addslashes($("#pickup_zip1").val()),"pickup_country":addslashes($("#pickup_country1").val()),"clockface_2_modal":$("#clockface_2_modal1").val(),"pickup_zone":$("#pickup_zone1").val(),"dropoff_street":addslashes($("#dropoff_street1").val()),"dropoff_city":addslashes($("#dropoff_city1").val()),"dropoff_state":addslashes($("#dropoff_state1").val()),"dropoff_zip":addslashes($("#dropoff_zip1").val()),"dropoff_country":addslashes($("#dropoff_country1").val()),"clockface_3_modal":$("#clockface_3_modal1").val(),"dropoff_zone":$("#dropoff_zone1").val(),"route_type":0,"route_type_id":0,"pickup_airport":addslashes($("#pickup_airport1").val()),"pickup_airport_clock":$("#pickup_airport_clock1").val(),"pickup_airport_zone":$("#pickup_airport_zone1").val(),"dropoff_airport":addslashes($("#dropoff_airport1").val()),"dropoff_airport_clock":$("#dropoff_airport_clock1").val(),"dropoff_airport_zone":$("#dropoff_airport_zone1").val(),"dropoff_airport_state":addslashes($("#dropoff_airport_state1").val()),"dropoff_airport_city":addslashes($("#dropoff_airport_city1").val()),"pickup_airport_state":addslashes($("#pickup_airport_state1").val()),"pickup_airport_city":addslashes($("#pickup_airport_city1").val()),"meeting_location":addslashes($("#meeting_location_from_driver").val()),"user_id":user_id,'cover_leg_id':addslashes($('#cover_ground_leg').val()),'to_meeting_location':addslashes($('#meeting_location_to_driver').val()),leg_instruction:addslashes($("#leg_instructions").val()),'pick_year':addslashes($('#clockface_2_modal1_year').val()),'drop_year':addslashes($('#clockface_3_modal1_year').val())});
			
			$('#createlegModal').modal('hide');
			
			$.ajax({
			type:'POST',
			url:base_url+'org_transportation/insert_new_leg/'+transport_id+'/',
			data:{
				legsArray:legsArray
			},
			 beforeSend:function(){
					$('#create_leg_loader').modal('toggle');
			},
			success:function(data) 
			{
				if(legsArray.length > 0) {
					legsArray.pop();
			}
				if(user_id=='n-d-u')
				{
					$('#create_leg_loader').modal('hide');
					$('#non_doobert_user_transport_leg_id').val(data);
					$('#non_doobert_user_transport_id').val(transport_id);
					$('#assign-nondoobert-user').modal('show');
				} else {	
					location.reload();
				}		
			},
			complete:function(){
					$('#create_leg_loader').modal('hide');
			},	
			});
		}		
	}); 
	
		$(document).ready(function(){
			
		$.validator.addMethod("telephone_number", function (value, element) {
				 var a = /^(1\s|1|)?((\(\d{3}\))|\d{3})(\-|\s)?(\d{3})(\-|\s)?(\d{4})$/.test(value);
				return a;
		},'Please enter valid telephone number');
		
		$.validator.addMethod("non_zero_number", function (value, element) {
						//return this.optional(element) || value != '0';
						return parseInt(value) !== 0;
		},'Please enter valid zip code');
			
		    $('#non_doobert_user_frm').validate({
					errorElement: 'span', //default input error message container
					errorClass: 'help-block', // default input error message class
					focusInvalid: true, // do not focus the last invalid input
					rules: {
						non_doobert_user_name: {
							required: true
						},
						non_doobert_user_phone: {
							required: true,
							telephone_number:true
						},
						non_doobert_user_email: {
							required: true,
							email:true
						},
						non_doobert_user_vehicle_zipcode: {
							required: true,
							non_zero_number: true
						},
						/*non_doobert_user_vehicle_type: {
							required: true
						}*/												
					},
			
					messages: {
						non_doobert_user_name: {
							required: 'Please Enter Name.'
						},
						non_doobert_user_phone: {
							required: 'Please Enter Phone Number.'
						},
						non_doobert_user_email: {
							required: 'Please Enter Email.',
							email: 'Please Enter Valid Email.'
						},
						non_doobert_user_vehicle_zipcode: {
							required: 'Please Enter Zipcode.'
						}
						
					},
			
					invalidHandler: function (event, validator) { //display error alert on form submit   
						$('#assign-nondoobert-user').show();
						
						var errors = validator.numberOfInvalids();
						if (errors) {
						  var message = errors == 1
							? 'You missed 1 field. It has been highlighted'
							: 'You missed ' + errors + ' fields. They have been highlighted';
						  alert(message);
						}
					},
			
					highlight: function (element) { // hightlight error inputs
						$(element)
							.closest('.form-group').addClass('has-error'); // set error class to the control group
					},
			
					success: function (label) { //alert(label);
						label.closest('.form-group').removeClass('has-error');
						label.remove();
					},
			
					errorPlacement: function (error, element) { 
						error.addClass('help-block').insertAfter(element.closest('.form-control'));
					}
			
				
	 });

		$(document).on('click','#close_non_doobert_user_form,#non_doobert_cancel',function(){

		var leg_id = $('#non_doobert_user_transport_leg_id').val();
			$.ajax({
				type:'POST',
				url:base_url+'org_transportation/cancel_non_doobertleg/'+transport_id+'/',
				data:{
					leg_id:leg_id,
				},
				beforeSend:function()
				{
				},
				success:function(data) 
				{	
					location.reload();		
				},
			complete:function(){
			},	
			});
		});
	
		$(document).on('click','#non_doobert_assign_leg',function(e){
			$('#non_doobert_user_assign_and_invite').val('0');
			
		if($('#non_doobert_user_frm').valid() == false) {
			return false;
		} else {
		
			var non_doobert_email_id = $('#non_doobert_user_email').val();
			
			//alert(non_doobert_email_id);
			$.ajax({
			type: "POST",
				  url: base_url+'org_transportation/check_non_doobert_exists',
				  beforeSend: function() {
					$('#non-doobert_leg_loader').modal('toggle');
					
				  },
				  data: {
					  email_id : non_doobert_email_id
				  },
				  dataType:"json",
				  complete: function() {
					$('#non-doobert_leg_loader').modal('hide');
				  },
				  success:function(data) {
					  //alert(data);
				
					  //alert(data.st_display_name);
					  //alert(data.st_last_name);
					  //alert(data.in_user_id);
					  if(data !=null && data.in_user_id > 0  )
					  {
						
						//if(data.st_primary_phone!='' && data.st_driver== 'Y')
						//{	
							$('#match_doobert_user_popup_email_add').html(non_doobert_email_id);
							$('#match_doobert_user_popup_email_name').html(data.st_display_name+' '+data.st_last_name);
							$('#matched_doobert_user_id').val(data.in_user_id);
							$('#matched_doobert_user_email').val(data.st_email);
							$('#matched_doobert_transport_id').val($('#non_doobert_user_transport_id').val());
							$('#matched_doobert_leg_id').val($('#non_doobert_user_transport_leg_id').val());
							$('#matched_doobert_user_name').val(data.st_display_name+' '+data.st_last_name);
							var telephone_number = $('#non_doobert_user_phone').val();
							$('#matched_phone_number').val(telephone_number);
							$('#matched_doobert_user_zip').val($('#non_doobert_user_vehicle_zipcode').val());
							$('#match_doobert_user_popup').modal('show');
							//e.preventDefault();							
							return false;
						/*} else {
							//alert("this user cannot be selected");
							$('#noneuser_match_doobert_user_popup').modal('show');
							return false;
						}*/
						
					  }else{
						 if($.browser.msie) {
									$('.display_loader').html('<img id="loadimg" src="'+base_url+'assets/img/ajax-loading.gif" alt="loader" />');
								}
							$('.display_loader').show();
							
							$('#loadimg_mail').show();
							$('#assign-nondoobert-user').modal('hide');
							
							if($.browser.msie) {
								$('.display_loader').html('<div id="loader" style="display: none;"><img src="'+base_url+'assets/img/ajax-modal-loading.gif" width="32" height="32" align="absmiddle">&nbsp;<span id="loadertext">Loading...</span></div>');
							}
							
							$('.display_loader').show();
							$('#loader').show();
							$('#non_doobert_user_frm').submit();
							
						 }
					 
				  }
		});
		}
		}); 
		
		$(document).on('click','#non_doobert_assign_leg_invite',function(){			
			$('#non_doobert_user_assign_and_invite').val('1');
		
		if($('#non_doobert_user_frm').valid() == false) {
			return false;
		} else {
			
			var non_doobert_email_id = $('#non_doobert_user_email').val();
			
			//alert(non_doobert_email_id);
			$.ajax({
			type: "POST",
				  url: base_url+'org_transportation/check_non_doobert_exists',
				  beforeSend: function() {
					$('#non-doobert_leg_loader').modal('toggle');
					
				  },
				  data: {
					  email_id : non_doobert_email_id
				  },
				  dataType:"json",
				  complete: function() {
					$('#non-doobert_leg_loader').modal('hide');
				  },
				  success:function(data) {
					  
					  if(data !=null && data.in_user_id > 0)
					  {
						//if(data.st_primary_phone!='' && data.st_driver== 'Y')
						//{	
							$('#match_doobert_user_popup_email_add').html(non_doobert_email_id);
							$('#match_doobert_user_popup_email_name').html(data.st_display_name+' '+data.st_last_name);
							$('#matched_doobert_user_id').val(data.in_user_id);
							$('#matched_doobert_user_email').val(data.st_email);
							$('#matched_doobert_transport_id').val($('#non_doobert_user_transport_id').val());
							$('#matched_doobert_leg_id').val($('#non_doobert_user_transport_leg_id').val());
							$('#matched_doobert_user_name').val(data.st_display_name+' '+data.st_last_name);
							var telephone_number = $('#non_doobert_user_phone').val();
							$('#matched_phone_number').val(telephone_number);
							$('#matched_doobert_user_zip').val($('#non_doobert_user_vehicle_zipcode').val());
							$('#match_doobert_user_popup').modal('show');	
							return false;
						/*} else {
							
							$('#noneuser_match_doobert_user_popup').modal('show');
							return false;
						}*/
					  }else{
						 if($.browser.msie) {
									$('.display_loader').html('<img id="loadimg" src="'+base_url+'assets/img/ajax-loading.gif" alt="loader" />');
								}
							$('.display_loader').show();
							
							$('#loadimg_mail').show();
							$('#assign-nondoobert-user').modal('hide');
							
							if($.browser.msie) {
								$('.display_loader').html('<div id="loader" style="display: none;"><img src="'+base_url+'assets/img/ajax-modal-loading.gif" width="32" height="32" align="absmiddle">&nbsp;<span id="loadertext">Loading...</span></div>');
							}
							
							$('.display_loader').show();
							$('#loader').show();
							$('#non_doobert_user_frm').submit();
							return false;
						 }
					 
				  }
		});
		}
		
		});

	$(document).on('blur','#non_doobert_user_email',function(){
	var non_doobert_email_id = $('#non_doobert_user_email').val();
			
			//alert(non_doobert_email_id);
			$.ajax({
			type: "POST",
				  url: base_url+'org_transportation/get_non_doobert_exists',
				  /*beforeSend: function() {
					$('#loader').show();
				  },*/
				  data: {
					  email_id : non_doobert_email_id
				  },
				  dataType:"json",
				  complete: function() {
					 $('#loader').hide();
				  },
				  success:function(data) {
					  
					  if(data !=null && data.in_user_id > 0)
					  {
						//if(data.st_primary_phone!='' && data.st_driver== 'Y')
						//{	
							$('#non_doobert_user_name').val(data.st_display_name+' '+data.st_last_name);
							$('#non_doobert_user_phone').val(data.st_primary_phone);
							$('#non_doobert_user_vehicle_zipcode').val(data.st_zip);
							$('#non_doobert_user_vehicle_type').val(data.st_zip);
							$('#non_doobert_user_vehicle_license_plate').val(data.st_vehicle_license_plate);
							$('#non_doobert_user_vehicle_license_state').val(data.st_vehicle_license_state);
							$('#non_doobert_user_vehicle_type').val(data.st_vehicle_type);
							$('#non_doobert_user_vehicle_color').val(data.st_vehicle_color);	
							return false;
						//}
					  }
					 
				  }
		});
		});
		
$(document).on('click','#modal_confirm_match_user',function(){
			$('#non_doobert_match_user_frm').submit();
			}); 
	});
	
	$(document).on('click','#airport_submit',function()
	{
	if($('#addlegs_aviation').valid() == false){ 
			
	} else { 	
	  var to_date = $('#dropoff_airport_clock1').val();
	  var from_date = $('#pickup_airport_clock1').val();
	  
	  var frm_year = $('#pickup_airport_clock1_year').val();
	  var to_year  = $('#dropoff_airport_clock1_year').val();
	 
	  var b;
	  var to_date_split = to_date.split('-');
	  var from_date_split = from_date.split('-');
	  
	  var start_time_date = new Date(from_date_split[0]);
	  var end_time_date = new Date(to_date_split[0]);
	  
	  //var end_date = new Date(end_time_date.getFullYear(), end_time_date.getMonth(), end_time_date.getDate()); 
	  //var start_date = new Date(start_time_date.getFullYear(), start_time_date.getMonth(), start_time_date.getDate()); 
	  
	  var end_date = new Date(to_year, end_time_date.getMonth(), end_time_date.getDate()); 
	  var start_date = new Date(frm_year, start_time_date.getMonth(), start_time_date.getDate()); 
	  
	  if (start_date > end_date) {
			alert("Start Date is greather than End Date.");
			return false;
	  } 
	  if (end_date < start_date) {
			alert("End Date is less than Start Date.");
			return false;
	  }
	  
	  	if($.trim($('#assignuid-pilot1').val())=='' || $.trim($('#assignuid-pilot1').val())==0)
		{
			alert('Please select pilot user');
			return false;
			
		} else {
			var user_id = $('#assignuid-pilot1').val();
		}
	  
	  /*if($('#assignuid-pilot1').length >0)
	  {
			var user_id = $('#assignuid-pilot1').val();
	  } else {
			var user_id = '0';
	  }*/
	  
	  legsArray.push({"pickup_street":addslashes($("#pickup_street1").val()),"pickup_city":addslashes($("#pickup_city1").val()),"pickup_state":addslashes($("#pickup_state1").val()),"pickup_zip":addslashes($("#pickup_zip1").val()),"pickup_country":addslashes($("#pickup_country1").val()),"clockface_2_modal":$("#clockface_2_modal1").val(),"pickup_zone":$("#pickup_zone1").val(),"dropoff_street":addslashes($("#dropoff_street1").val()),"dropoff_city":addslashes($("#dropoff_city1").val()),"dropoff_state":addslashes($("#dropoff_state1").val()),"dropoff_zip":addslashes($("#dropoff_zip1").val()),"dropoff_country":addslashes($("#dropoff_country1").val()),"clockface_3_modal":$("#clockface_3_modal1").val(),"dropoff_zone":$("#dropoff_zone1").val(),"route_type":1,"route_type_id":1,"pickup_airport":addslashes($("#pickup_airport1").val()),"pickup_airport_clock":$("#pickup_airport_clock1").val(),"pickup_airport_zone":$("#pickup_airport_zone1").val(),"dropoff_airport":addslashes($("#dropoff_airport1").val()),"dropoff_airport_clock":$("#dropoff_airport_clock1").val(),"dropoff_airport_zone":$("#dropoff_airport_zone1").val(),"dropoff_airport_state":addslashes($("#dropoff_airport_state").val()),"dropoff_airport_city":addslashes($("#dropoff_airport_city1").val()),"pickup_airport_state":addslashes($("#pickup_airport_state1").val()),"pickup_airport_city":addslashes($("#pickup_airport_city1").val()),"meeting_location":addslashes($("#meeting_location_from_pilot").val()),"user_id":user_id,'cover_leg_id':addslashes($('#cover_aviation_leg').val()),'leg_instruction':addslashes($("#leg_instructions_aviation").val()),'to_meeting_location':addslashes($('#meeting_location_to_pilot').val()),'pick_year':addslashes($('#pickup_airport_clock1_year').val()),'drop_year':addslashes($('#dropoff_airport_clock1_year').val())});
	 		
			$('#createlegModal-pilot').modal('hide');
			
			$.ajax({
			type:'POST',
			url:base_url+'org_transportation/insert_new_leg/'+transport_id+'/',
			data:{
				legsArray:legsArray
			},
			 beforeSend:function(){
					$('#create_leg_loader').modal('toggle');
			},
			success:function(data) 
			{
				if(legsArray.length > 0) {
					legsArray.pop();
				}
				if(user_id=='n-d-u')
				{
					$('#create_leg_loader').modal('hide');
					$('#non_doobert_user_transport_leg_id').val(data);
					$('#non_doobert_user_transport_id').val(transport_id);
					$('#assign-nondoobert-user').modal('show');
				} else {	
					location.reload();
				}	
			},
			complete:function(){
					$('#create_leg_loader').modal('hide');
			},	
			});
}			
});

	$(document).on('click','#overnight_submit',function()
	{
		
	if($('#addlegs_overnight').valid() == false){ 
			
	} else { 

	  if($.trim($('#assignuid-overnight1').val())=='' || $.trim($('#assignuid-overnight1').val())==0)
		{
			alert('Please select Overnight user');
			return false;
			
		} else {
			var user_id = $('#assignuid-overnight1').val();
		}	
	
	  /*if($('#assignuid-overnight1').length >0)
	  {
			var user_id = $('#assignuid-overnight1').val();
	  } else {
			var user_id = '0';
	  }*/
	  
	  legsArray.push({"o_pickup_street":addslashes($("#o_pickup_street").val()), "o_pickup_city":addslashes($("#o_pickup_city").val()), "o_pickup_state":addslashes($("#o_pickup_state").val()), "o_pickup_zip":addslashes($("#o_pickup_zip").val()), "o_pickup_country":addslashes($("#o_pickup_country").val()), "route_type":2,"route_type_id":2,"meeting_location":addslashes($("#overnight_comments").val()),"user_id":user_id});
	 	/*jQuery.post("<?php echo base_url(); ?>org_transportation/insert_new_leg/<?php echo $transport_details['in_transportation_id'];?>/",{legsArray:legsArray}, function( data ) {
			if(legsArray.length > 0) {
					legsArray.pop();
			}
			location.reload();				
			});*/
			
			$('#overnight-leg').modal('hide');
			
			$.ajax({
			type:'POST',
			url:base_url+'org_transportation/create_overnight_leg/'+transport_id+'/',
			data:{
				legsArray:legsArray
			},
			 beforeSend:function(){
					$('#create_leg_loader').modal('toggle');
			},
			success:function(data) 
			{
				if(legsArray.length > 0) {
					legsArray.pop();
				}
				if(user_id=='n-d-u')
				{
					$('#create_leg_loader').modal('hide');
					$('#non_doobert_user_transport_leg_id').val(data);
					$('#non_doobert_user_transport_id').val(transport_id);
					$('#assign-nondoobert-user').modal('show');
				} else {	
					location.reload();
				}	
			//location.reload();	
			},
			complete:function(){
					$('#create_leg_loader').modal('hide');
			},	
			});
}			
});
	
});

$(document).on("keydown.autocomplete","#assign_user_name1",function(e){
	$('#assign_user_name1').autocomplete({
		source: function (request, response)
   		 {
			request = $.trim(request.term);
			$.ajax(
			{
				url: base_url+"org_transportation/get_all_driver/" ,
				dataType: "json",
				data:
				{
					term: request
				},
				success: function (data)
				{
					if(data!='0')
					{
						response(data);
					} else {
					  if(data!='0')
					  {	  
						alert('Please select driver user');
						$("#assign_user_name1").val(name);
						$("#assignuid-driver1" ).val(' ');
					  }  	
					}
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#assign_user_name1" ).width()) },
		focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			/*var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name1").val(' ');
				$("#assignuid-driver1" ).val(' ');
				alert('This User has not submitted phone number in profile page');
			} else {*/
				$("#assign_user_name1" ).val(name);
				$("#assignuid-driver1" ).val(user_id);
			//}
			return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name1").val(' ');
				$("#assignuid-driver1" ).val(' ');
				alert('This user has not submitted phone number in general profile page');
			} else {
				$("#assign_user_name1" ).val(name);
				$("#assignuid-driver1" ).val(user_id);
			}
			return false;
		}
	});	
});

	$(document).on('change','#assign_user_name1',function()
	{
		var term = $('#assign_user_name1').val().replace(/\s/g,'');
		if(term!='')
		{	
	  $.ajax({
            url: base_url+"org_transportation/get_all_driver/",
            dataType: "json",
            data:
            {
                term: term,
            },
            success: function (data)
            {
				if(data)
				{
					var id = data[0].label;
					var name = data[0].name;
					var user_id =  data[0].value;
					if(data[0].primary_phone == '')
					{
						$("#assign_user_name1").val(' ');
						$("#assignuid-driver1" ).val(' ');
						alert('This user has not submitted phone number in general profile page');
					} else {
						$("#assign_user_name1").val(name);
						$("#assignuid-driver1").val(user_id);
					}
				}
				else
				{
					if(data == null || data === '' || data == '0')
					{
						alert('Please select driver user');
						$("#assign_user_name1").val(' ');
						$("#assignuid-driver1" ).val(' ');
					}
				}
			}
		});	
		}
});

$(document).on("keydown.autocomplete","#assign_user_name-pilot1",function(e){
	$('#assign_user_name-pilot1').autocomplete({
		source: function (request, response)
   		 {
			request = $.trim(request.term);
			$.ajax(
			{
				url: base_url+"org_transportation/get_all_pilot/" ,
				dataType: "json",
				data:
				{
					term: request
				},
				success: function (data)
				{
					if(data=="1")
					{
						//window.location.href=base_url;
					}
					if(data!='0')
					{
						response(data);
					} else {
					  if(data!='0')
					  {	  
						alert('Please select pilot user');
						$("#assign_user_name-pilot1").val(' ');
						$("#assignuid-pilot1" ).val(' ');
					  }  	
					}
					
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#assign_user_name-pilot1" ).width()) },
		focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			/*var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name-pilot1").val(' ');
				$("#assignuid-pilot1" ).val(' ');
				alert('This User has not submitted phone number in profile page');
			} else {*/
				$("#assign_user_name-pilot1").val(name);
				$("#assignuid-pilot1" ).val(user_id);
			//}
				return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name-pilot1").val(' ');
				$("#assignuid-pilot1" ).val(' ');
				alert('This user has not submitted phone number in general profile page');
			} else {
				$("#assign_user_name-pilot1").val(name);
				$("#assignuid-pilot1").val(user_id);
			}
			return false;
		}
	});	
});


	$(document).on('change','#assign_user_name-pilot1',function()
	{
		var term = $('#assign_user_name-pilot1').val().replace(/\s/g,'');
		if(term!='')
		{	
		$.ajax({
            url: base_url+"org_transportation/get_all_pilot/",
            dataType: "json",
            data:
            {
                term: term,
            },
            success: function (data)
            {
				if(data)
				{
					var id = data[0].label;
					var name =data[0].name;
					var user_id =  data[0].value;
					var phone_number =  data[0].primary_phone;
					if(phone_number == '')
					{
						$("#assign_user_name-pilot1").val(' ');
						$("#assignuid-pilot1" ).val(' ');
						alert('This user has not submitted phone number in general profile page');
					} else {
						$("#assign_user_name-pilot1").val(name);
						$("#assignuid-pilot1").val(user_id);
					}
				}
				else
				{
					if(data == null || data === '' || data == '0')
					{
						alert('Please select pilot user');
						$("#assign_user_name-pilot1").val(' ');
						$("#assignuid-pilot1" ).val(' ');
					}
				}
			}
		});	
		}	
  
});


$(document).on("keydown.autocomplete","#assign_user_name-overnight1",function(e){
	$('#assign_user_name-overnight1').autocomplete({
		source: function (request, response)
   		 {
			request = $.trim(request.term);
			$.ajax(
			{
				url: base_url+"org_transportation/get_all_users/" ,
				dataType: "json",
				data:
				{
					term: request
				},
				success: function (data)
				{
					
					if(data=="1")
					{
						//window.location.href=base_url;
					}
					if(data!='0')
					{
						response(data);
					} else {
					  if(data!='0')
					  {	  
						alert('Please select doobert user');
						$("#assign_user_name-overnight1").val(' ');
						$("#assignuid-overnight1" ).val(' ');
					  }  	
					}
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#assign_user_name-overnight1" ).width()) },
		focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			/*var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name-overnight1").val(' ');
				$("#assignuid-overnight1" ).val(' ');
				alert('This User has not submitted phone number in profile page');
			} else {*/
				$("#assign_user_name-overnight1").val(name);
				$("#assignuid-overnight1" ).val(user_id);
			//}
			return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.name;
			var user_id =  ui.item.value;
			var phone_number =  ui.item.primary_phone;
			if(phone_number == '')
			{
				$("#assign_user_name-overnight1").val(' ');
				$("#assignuid-overnight1" ).val(' ');
				alert('This user has not submitted phone number in general profile page');
			} else {
				$("#assign_user_name-overnight1").val(name);
				$("#assignuid-overnight1").val(user_id);
			}
			return false;
		}
	});	
});

	$(document).on('change','#assign_user_name-overnight1',function()
	{
		var term = $('#assign_user_name-overnight1').val().replace(/\s/g,'');
		if(term!='')
		{
		$.ajax({
            url: base_url+"org_transportation/get_all_users/",
            dataType: "json",
            data:
            {
                term: term,
            },
            success: function (data)
            {
				if(data)
				{
					var id = data[0].label;
					var name = data[0].name;
					var user_id =  data[0].value;
					var phone_number =  data[0].primary_phone;
					if(phone_number == '')
					{
						$("#assign_user_name-overnight1").val(' ');
						$("#assignuid-overnight1" ).val(' ');
						alert('This user has not submitted phone number in general profile page');
					} else { 
						$("#assign_user_name-overnight1").val(name);
						$("#assignuid-overnight1").val(user_id);
					}
				}
				else
				{
					if(data == null || data === '' || data == '0')
					{
						alert('Please select doobert user');
						$("#assign_user_name-overnight1").val(' ');
						$("#assignuid-overnight1" ).val(' ');
					}
				}
			}
		});	
		}	
  
});

//$(document).ready(function(){
$(document).on("keydown.autocomplete","#pickup_location1",function(e){	
$('#pickup_location1').autocomplete({
	//source:"<?php echo base_url(); ?>org_transportation/get_zip_code/", 
	source: function (request, response)
    {
		request.term = $.trim(request.term);
		var str	= request.term;
		var letters = /^[a-zA-Z ]+$/;	
		if(str.match(letters))
		{
			request.term = str; 
		} else {
			str = str.toUpperCase();
			request.term = str.replace(/\s/g, ''); 
		}	
        $.ajax(
        {
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: request.term,
				city: $("#pick_city1" ).val(),
				state: $("#pick_state1" ).val()
            },
            success: function (data)
            {
				//console.log(data);
				if(data=="1")
				{
					window.location.href=base_url;
				}
				else
				{
                	response(data);
				}
            }
        });
    },
	minLength:1,
	open: function() { $('.ui-menu').width($("#pickup_location1" ).width())},
	focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.value;
			$("#pickup_location1" ).val(name);
			$("#pickup_country1" ).val(ui.item.st_country);
			//country_state(ui.item.st_country,"pick");
			$("#pickup_city1" ).val(ui.item.city);
			$("#pickup_state1" ).val(ui.item.state_prefix);
			$("#pickup_zip1").val(name);
			//alert('value replace');
			return false;
	},     
	select: function( event, ui ) {
		var id = ui.item.label;
		var name = ui.item.value;
		//$("#pick_zip" ).val(name);
		$("#pickup_location1" ).val(id);
		$("#pickup_country1" ).val(ui.item.st_country);
		//country_state(ui.item.st_country,"pick");
		$("#pickup_city1" ).val(ui.item.city);
		$("#pickup_state1" ).val(ui.item.state_prefix);
		$("#pickup_zip1").val(name);
		
		return false;
	}
	});
	
$(document).on('change','#pickup_location1',function(){
//var selected_zipcode = $(this).val();
var selected_zipcode = $.trim($(this).val());
var str	= selected_zipcode; 
//selected_zipcode = str.replace(/\s/g, '');  

var letters = /^[a-zA-Z ]+$/;	
if(str.match(letters))
{
			 selected_zipcode = str; 
} else {
			 str = str.toUpperCase();  	
			 selected_zipcode = str.replace(/\s/g, ''); 
}

//alert(selected_zipcode);
//alert($("#pick_city" ).val());
var select_pickup_city = $("#pickup_city1" ).val();
//alert(select_pickup_city);
var select_pickup_state = $("#pickup_state1").val();
//alert(select_pickup_state);
var select_pickup_country = $("#pickup_country1").val();
//alert(select_pickup_country);
//alert($("#pick_zip").val());
//alert($("#pick_zip").val().indexOf(','));

if ($("#pickup_location1").val().indexOf(',') != -1 && $("#pickup_location1").val().indexOf('USA') != -1 && $("#pickup_location1").val().indexOf('Canada') != -1) {
	if(selected_zipcode != '' && select_pickup_city != '' && select_pickup_state != '' && select_pickup_country != '')
	{
		$("#pickup_location1").val(selected_zipcode+', '+select_pickup_city+', '+select_pickup_state+', '+select_pickup_country);
	}
}
else
{
	if(selected_zipcode!=''){
	  $.ajax({
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: selected_zipcode,
				city: $("#pickup_city1" ).val(),
				state: $("#pickup_state1" ).val()
            },
            success: function (data)
            {
				//alert(data);
				//alert(data.length);
				console.log(data);
				//console.log(data[0].label);
				if(data)
				{
				$("#pickup_location1").val(data[0].label);
				$("#pickup_country1" ).val(data[0].st_country);
				//country_state(data[0].st_country,"pick");
				$("#pickup_city1" ).val(data[0].city);
				$("#pickup_state1" ).val(data[0].state_prefix);
				$("#pickup_zip1").val(data[0].value);
				}
				else
				{
					if($("#pickup_location1").val().indexOf(',') == -1)
					{
						alert('Please enter valid pickup location');
						$("#pickup_location1").val('');
					}
				}
				
            }
        });
	}//!=''		
}
});
});
$(document).on("keydown.autocomplete","#dropoff_location1",function(e){	
$('#dropoff_location1').autocomplete({
	//source:"<?php echo base_url(); ?>org_transportation/get_zip_code/", 
	source: function (request, response)
    {
		request.term = $.trim(request.term);
		var str	= request.term;
		var letters = /^[a-zA-Z ]+$/;	
		if(str.match(letters))
		{
			request.term = str; 
		} else {
			str = str.toUpperCase();
			request.term = str.replace(/\s/g, ''); 
		}	
        $.ajax(
        {
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: request.term,
				city: $("#dropoff_city1" ).val(),
				state: $("#dropoff_state1" ).val()
            },
            success: function (data)
            {
				//console.log(data);
				if(data=="1")
				{
					window.location.href=base_url;
				}
				else
				{
                	response(data);
				}
            }
        });
    },
	minLength:1,
	open: function() { $('.ui-menu').width($("#dropoff_location1" ).width())},
	focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.value;
			$("#dropoff_location1" ).val(name);
			$("#dropoff_country1" ).val(ui.item.st_country);
			//country_state(ui.item.st_country,"pick");
			$("#dropoff_city1" ).val(ui.item.city);
			$("#dropoff_state1" ).val(ui.item.state_prefix);
			$("#dropoff_zip1").val(name);
			//alert('value replace');
			return false;
	},     
	select: function( event, ui ) {
		//alert('in select');
		var id = ui.item.label;
		var name = ui.item.value;
		//$("#pick_zip" ).val(name);
		$("#dropoff_location1" ).val(id);
		$("#dropoff_country1" ).val(ui.item.st_country);
		//country_state(ui.item.st_country,"pick");
		$("#dropoff_city1" ).val(ui.item.city);
		$("#dropoff_state1" ).val(ui.item.state_prefix);
		$("#dropoff_zip1").val(name);
		
		return false;
	}
	});
	
$(document).on('change','#dropoff_location1',function(){
//var selected_zipcode = $(this).val();
var selected_zipcode = $.trim($(this).val());
var str	= selected_zipcode; 
//selected_zipcode = str.replace(/\s/g, '');  

var letters = /^[a-zA-Z ]+$/;	
if(str.match(letters))
{
			 selected_zipcode = str; 
} else {
			 str = str.toUpperCase();  	
			 selected_zipcode = str.replace(/\s/g, ''); 
}

//alert(selected_zipcode);
//alert($("#pick_city" ).val());
var select_pickup_city = $("#dropoff_city1" ).val();
//alert(select_pickup_city);
var select_pickup_state = $("#dropoff_state1" ).val();
//alert(select_pickup_state);
var select_pickup_country = $("#dropoff_country1" ).val();
//alert(select_pickup_country);
//alert($("#pick_zip").val());
//alert($("#pick_zip").val().indexOf(','));

if ($("#dropoff_location1").val().indexOf(',') != -1 && $("#dropoff_location1").val().indexOf('USA') != -1 && $("#dropoff_location1").val().indexOf('Canada') != -1) {
	if(selected_zipcode != '' && select_pickup_city != '' && select_pickup_state != '' && select_pickup_country != '')
	{
		$("#dropoff_location1").val(selected_zipcode+', '+select_pickup_city+', '+select_pickup_state+', '+select_pickup_country);
	}
}
else
{
	if(selected_zipcode!=''){
	  $.ajax({
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: selected_zipcode,
				city: $("#dropoff_city1" ).val(),
				state: $("#dropoff_state1" ).val()
            },
            success: function (data)
            {
				//alert(data);
				//alert(data.length);
				console.log(data);
				//console.log(data[0].label);
				if(data)
				{
				$("#dropoff_location1").val(data[0].label);
				$("#dropoff_country1" ).val(data[0].st_country);
				//country_state(data[0].st_country,"drop");
				$("#dropoff_city1" ).val(data[0].city);
				$("#dropoff_state1" ).val(data[0].state_prefix);
				$("#dropoff_zip1").val(data[0].value);
				}
				else
				{
					if($("#dropoff_location1").val().indexOf(',') == -1)
					{
						alert('Please enter valid dropoff location');	
						$('#dropoff_location1').val('');
					}
				}
				
            }
        });	
	}//!=''		
}
});
});

$(document).on("keydown.autocomplete","#pickup_airport1",function(e){	
$('#pickup_airport1').autocomplete({
		source: function (request, response)
   		 {
			request.term = $.trim(request.term);
			var str	= request.term;
			var letters = /^[a-zA-Z ]+$/;	
			if(str.match(letters))
			{
				request.term = str; 
			} else {
				str = str.toUpperCase();
				request.term = str.replace(/\s/g, ''); 
			}
			
			$.ajax(
			{
				//url: "<?php echo base_url(); ?>org_transportation/get_airports_by_zipcode/" ,
				url: base_url+"org_transportation/get_airports_by_zipcode_or_airport_id/" ,
				dataType: "json",
				data:
				{
					term: request.term
				},
				success: function (data)
				{
					if(data=="1")
					{
						window.location.href=base_url;
					}
					if(1)
					{
						response(data);
					}
					
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#pickup_airport1" ).width())},
		focus: function( event, ui ) {
				var id = ui.item.label;
				//alert(id);
				var name = ui.item.value;
				$( "#pickup_airport1" ).val(name);
				$( "#pickup_airport_state1" ).val(ui.item.st_state);
				$( "#pickup_airport_city1" ).val(ui.item.st_city);
				return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.value;
			$("#pickup_airport1" ).val(name);
			$("#pickup_airport_state1" ).val(ui.item.st_state);
			$("#pickup_airport_city1" ).val(ui.item.st_city);
			return false;
		}
	});	
$(document).on('change','#pickup_airport1',function(){
//var selected_zipcode = $(this).val();
var selected_zipcode = $.trim($(this).val());
var str	= selected_zipcode; 
//selected_zipcode = str.replace(/\s/g, ''); 

var letters = /^[a-zA-Z ]+$/;	
if(str.match(letters))
{
			 selected_zipcode = str; 
} else {
			 str = str.toUpperCase();  	
			 selected_zipcode = str.replace(/\s/g, ''); 
}

//alert($("#pick_city" ).val());
var select_pickup_city = $("#pickup_airport_city1" ).val();
//alert(select_pickup_city);
var select_pickup_state = $("#pickup_airport_state1" ).val();
//alert(select_pickup_state);
//var select_pickup_country = $("#pickup_country" ).val();
//alert(select_pickup_country);
//alert($("#pick_zip").val());
//alert($("#pick_zip").val().indexOf(','));

if ($("#pickup_airport1").val().indexOf(',') != -1 && $("#pickup_airport1").val().indexOf('USA') != -1 && $("#pickup_airport1").val().indexOf('Canada') != -1) {
	if(selected_zipcode != '' && select_pickup_city != '' && select_pickup_state != '' && select_pickup_country != '')
	{
		//$("#pickup_location").val(selected_zipcode+', '+select_pickup_city+', '+select_pickup_state+', '+select_pickup_country);
	}
}
else
{
	if(selected_zipcode!=''){	
	  $.ajax({
            url: base_url+"org_transportation/get_airports_by_zipcode_or_airport_id/" ,
            dataType: "json",
            data:
            {
                term: selected_zipcode,
				city: $("#pickup_airport_city1" ).val(),
				state: $("#pickup_airport_state1" ).val()
            },
            success: function (data)
            {
				//alert(data);
				//alert(data.length);
				//console.log(data);
				//console.log(data[0].label);
				if(data)
				{
				var name = data[0].label;
				//alert(name);
				$( "#pickup_airport1" ).val(data[0].label);
				$( "#pickup_airport_state1" ).val(data[0].st_state);
				$( "#pickup_airport_city1" ).val(data[0].st_city);
				}
				else
				{
					if(data == null || data === '')
					{
						alert('Please enter valid from location');
						$("#pickup_airport1").val('');
					}
				}
				
            }
        });	
	}//!=''			
}
});	
});
$(document).on("keydown.autocomplete","#dropoff_airport1",function(e){
$('#dropoff_airport1').autocomplete({
		source: function (request, response)
   		 {
			request.term = $.trim(request.term);
			var str	= request.term;
			var letters = /^[a-zA-Z ]+$/;	
			if(str.match(letters))
			{
				request.term = str; 
			} else {
				str = str.toUpperCase();
				request.term = str.replace(/\s/g, ''); 
			}	 
			$.ajax(
			{
				url: base_url+"org_transportation/get_airports_by_zipcode_or_airport_id/" ,
				dataType: "json",
				data:
				{
					term: request.term
				},
				success: function (data)
				{
					//console.log(data);
					if(data=="1")
					{
						window.location.href=base_url;
					}
					/*if(data == null || data === '')
					{
						alert('Please enter valid to Zipcode/Airport ID');
						$("#dropoff_airport").val('');
					}
					else*/
					if(1)
					{
						response(data);
					}
				}
			});
  	  	}, 
		minLength:1,
		open: function() { $('.ui-menu').width($("#dropoff_airport1" ).width()) },
		focus: function( event, ui ) {
				var id = ui.item.label;
				var name = ui.item.value;
				$("#dropoff_airport1" ).val(name);
				$("#dropoff_airport_state1" ).val(ui.item.st_state);
				$("#dropoff_airport_city1" ).val(ui.item.st_city);
				return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.value;
			$("#dropoff_airport1" ).val(name);
			$("#dropoff_airport_state1" ).val(ui.item.st_state);
			$("#dropoff_airport_city1" ).val(ui.item.st_city);
			return false;
		}
	});	
$(document).on('change','#dropoff_airport1',function(){
//var selected_zipcode = $(this).val();
var selected_zipcode = $.trim($(this).val());
var str	= selected_zipcode; 
//selected_zipcode = str.replace(/\s/g, ''); 

var letters = /^[a-zA-Z ]+$/;	
if(str.match(letters))
{
			 selected_zipcode = str; 
} else {
			 str = str.toUpperCase();  	
			 selected_zipcode = str.replace(/\s/g, ''); 
}

//alert($("#pick_city" ).val());
var select_pickup_city = $("#dropoff_airport_city1" ).val();
//alert(select_pickup_city);
var select_pickup_state = $("#dropoff_airport_state1" ).val();
//alert(select_pickup_state);
//var select_pickup_country = $("#pickup_country" ).val();
//alert(select_pickup_country);
//alert($("#pick_zip").val());
//alert($("#pick_zip").val().indexOf(','));

if ($("#dropoff_airport1").val().indexOf(',') != -1 && $("#dropoff_airport1").val().indexOf('USA') != -1 && $("#dropoff_airport1").val().indexOf('Canada') != -1) {
	if(selected_zipcode != '' && select_pickup_city != '' && select_pickup_state != '' && select_pickup_country != '')
	{
		//$("#pickup_location").val(selected_zipcode+', '+select_pickup_city+', '+select_pickup_state+', '+select_pickup_country);
	}
}
else
{
	if(selected_zipcode!=''){
	  $.ajax({
            url: base_url+"org_transportation/get_airports_by_zipcode_or_airport_id/" ,
            dataType: "json",
            data:
            {
                term: selected_zipcode,
				city: $("#dropoff_airport_city1" ).val(),
				state: $("#dropoff_airport_state1" ).val()
            },
            success: function (data)
            {
				//alert(data);
				//alert(data.length);
				//console.log(data);
				//console.log(data[0].label);
				if(data)
				{
				var name = data[0].label;
				//alert(name);
				$( "#dropoff_airport1" ).val(data[0].label);
				$( "#dropoff_airport_state1" ).val(data[0].st_state);
				$( "#dropoff_airport_city1" ).val(data[0].st_city);
				}
				else
				{
					if(data == null || data === '')
					{
						alert('Please enter valid to location');
						$("#dropoff_airport1").val('');
					}
				}
				
            }
        });		
	} //!=''
}
});	
});	

$(document).on("keydown.autocomplete","#o_pickup_location",function(e){	
$('#o_pickup_location').autocomplete({
	//source:"<?php echo base_url(); ?>org_transportation/get_zip_code/", 
	source: function (request, response)
    {
		request.term = $.trim(request.term);
		var str	= request.term;
		var letters = /^[a-zA-Z ]+$/;	
		if(str.match(letters))
		{
			request.term = str; 
		} else {
			str = str.toUpperCase();
			request.term = str.replace(/\s/g, ''); 
		}	
        $.ajax(
        {
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: request.term,
				city: $("#o_pickup_city" ).val(),
				state: $("#o_pickup_state" ).val()
            },
            success: function (data)
            {
				//console.log(data);
				if(data=="1")
				{
					window.location.href=base_url;
				}
				else
				{
                	response(data);
				}
            }
        });
    },
	minLength:1,
	open: function() { $('.ui-menu').width($("#o_pickup_location" ).width())},
	focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.value;
			$("#o_pickup_location" ).val(name);
			$("#o_pickup_country" ).val(ui.item.st_country);
			//country_state(ui.item.st_country,"pick");
			$("#o_pickup_city" ).val(ui.item.city);
			$("#o_pickup_state" ).val(ui.item.state_prefix);
			$("#o_pickup_zip").val(name);
			//alert('value replace');
			return false;
	},     
	select: function( event, ui ) {
		//alert('in select');
		var id = ui.item.label;
		var name = ui.item.value;
		//$("#pick_zip" ).val(name);
		$("#o_pickup_location" ).val(id);
		$("#o_pickup_country" ).val(ui.item.st_country);
		//country_state(ui.item.st_country,"pick");
		$("#o_pickup_city" ).val(ui.item.city);
		$("#o_pickup_state" ).val(ui.item.state_prefix);
		$("#o_pickup_zip").val(name);
		
		return false;
	}
	});
	
$(document).on('change','#o_pickup_location',function(){
//var selected_zipcode = $(this).val();
var selected_zipcode = $.trim($(this).val());
var str	= selected_zipcode; 
//selected_zipcode = str.replace(/\s/g, '');  

var letters = /^[a-zA-Z ]+$/;	
if(str.match(letters))
{
			 selected_zipcode = str; 
} else {
			 str = str.toUpperCase();  	
			 selected_zipcode = str.replace(/\s/g, ''); 
}

//alert(selected_zipcode);
//alert($("#pick_city" ).val());
var select_pickup_city = $("#o_pickup_city" ).val();
//alert(select_pickup_city);
var select_pickup_state = $("#o_pickup_state" ).val();
//alert(select_pickup_state);
var select_pickup_country = $("#o_pickup_country" ).val();
//alert(select_pickup_country);
//alert($("#pick_zip").val());
//alert($("#pick_zip").val().indexOf(','));

if ($("#o_pickup_location").val().indexOf(',') != -1 && $("#o_pickup_location").val().indexOf('USA') != -1 && $("#o_pickup_location").val().indexOf('Canada') != -1) {
	if(selected_zipcode != '' && select_pickup_city != '' && select_pickup_state != '' && select_pickup_country != '')
	{
		$("#o_pickup_location").val(selected_zipcode+', '+select_pickup_city+', '+select_pickup_state+', '+select_pickup_country);
	}
}
else
{
	if(selected_zipcode!=''){
	  $.ajax({
            url: base_url+"org_transportation/get_zip_code2/" ,
            dataType: "json",
            data:
            {
                term: selected_zipcode,
				city: $("#o_pickup_city" ).val(),
				state: $("#o_pickup_state" ).val()
            },
            success: function (data)
            {
				//alert(data);
				//alert(data.length);
				console.log(data);
				//console.log(data[0].label);
				if(data)
				{
				$("#o_pickup_location").val(data[0].label);
				$("#o_pickup_country" ).val(data[0].st_country);
				//country_state(data[0].st_country,"drop");
				$("#o_pickup_city" ).val(data[0].city);
				$("#o_pickup_state" ).val(data[0].state_prefix);
				$("#o_pickup_zip").val(data[0].value);
				}
				else
				{
					if($("#o_pickup_location").val().indexOf(',') == -1)
					{
						alert('Please enter valid dropoff location');	
						$('#o_pickup_location').val('');
					}
				}
				
            }
        });	
	}//!=''		
}
});
});

$(document).ready(function(){
	$(document).on('click','#add_ground_leg',function()
	{
			//alert("HII1212");
			$('#addlegs_ground').validate({
			errorElement: 'span', //default input error message container
			errorClass: 'help-block', // default input error message class
			focusInvalid: true, // do not focus the last invalid input
			rules: {
			pickup_zone1: {
				required: true
			},
			clockface_2_modal1: {
				required: true
			},
			dropoff_zone1: {
				required: true
			},
			clockface_3_modal1: {
				required: true
			},
			dropoff_location1: {
				required: true
			},
			pickup_location1: {
				required: true
			},
			assign_user_name1:{
				required: true
			},	
			},

		messages: {
			pickup_zone1: {
				required: 'Please select pick up time zone.'
			},
			clockface_2_modal1: {
				required: "Please select start time."
			},
			dropoff_zone1: {
				required: 'Please select drop off time zone.'
			},
			clockface_3_modal1: {
				required: "Please select end time."
			},
			pickup_location1:{
				required :"Please enter pickup location"
			},
			dropoff_location1:{
				required :"Please enter dropoff location"
			},
			
		},

		invalidHandler: function (event, validator) { //display error alert on form submit   
			$('#addlegs_ground').show();
			
			var errors = validator.numberOfInvalids();
			if (errors) {
			  var message = errors == 1
				? 'You missed 1 field. It has been highlighted'
				: 'You missed ' + errors + ' fields. They have been highlighted';
			  alert(message);
			}
		},

		highlight: function (element) { // hightlight error inputs
			$(element)
				.closest('.form-group').addClass('has-error'); // set error class to the control group
		},

		success: function (label) { //alert(label);
			label.closest('.form-group').removeClass('has-error');
			label.remove();
		},

		errorPlacement: function (error, element) { 
			//error.addClass('help-small no-left-padding').insertAfter(element.closest('.form-group'));
			//error.addClass('help-block').insertAfter(element.closest('.form-group'));
			if (element.attr("name") == "clockface_2_modal1" || element.attr("name") == "clockface_3_modal1" )
			{
				error.addClass('help-block').insertAfter(element.closest('.input-group'));
			}
			else
			{
				error.addClass('help-block').insertAfter(element.closest('.form-control'));
			}
		}

	});
		display_date_picker();
			$.ajax({
				type: "POST",
				  url: base_url+'org_transportation/get_last_meeting_location',
				  async:false,
				  success:function(data) 
				  {
					if(data!='')
					{
						$('#meeting_location_from_driver').val(data);
					}
				  }
			});
		$('#createlegModal').modal('show');
	});
	$(document).on('click','#add_aviation_leg',function()
	{
			$('#addlegs_aviation').validate({
			errorElement: 'span', //default input error message container
			errorClass: 'help-block', // default input error message class
			focusInvalid: true, // do not focus the last invalid input
			rules: {
			pickup_airport_zone1: {
				required: true
			},
			pickup_airport_clock1: {
				required: true
			},
			dropoff_airport_zone1: {
				required: true
			},
			dropoff_airport_clock1: {
				required: true
			},
			dropoff_airport1: {
				required: true
			},
			pickup_airport1: {
				required: true
			},
			assign_user_name1:{
				required: true
			},	
			},

		messages: {
			pickup_airport_zone1: {
				required: 'Please select pick up time zone.'
			},
			pickup_airport_clock1: {
				required: "Please select start time."
			},
			dropoff_airport_zone1: {
				required: 'Please select drop off time zone.'
			},
			dropoff_airport_clock1: {
				required: "Please select end time."
			},
			pickup_airport1:{
				required :"Please enter pickup location"
			},
			dropoff_airport1:{
				required :"Please enter dropoff location"
			},
			
		},

		invalidHandler: function (event, validator) { //display error alert on form submit   
			$('#addlegs_ground').show();
			
			var errors = validator.numberOfInvalids();
			if (errors) {
			  var message = errors == 1
				? 'You missed 1 field. It has been highlighted'
				: 'You missed ' + errors + ' fields. They have been highlighted';
			  alert(message);
			}
		},

		highlight: function (element) { // hightlight error inputs
			$(element)
				.closest('.form-group').addClass('has-error'); // set error class to the control group
		},

		success: function (label) { //alert(label);
			label.closest('.form-group').removeClass('has-error');
			label.remove();
		},

		errorPlacement: function (error, element) { 
			//error.addClass('help-small no-left-padding').insertAfter(element.closest('.form-group'));
			//error.addClass('help-block').insertAfter(element.closest('.form-group'));
			if (element.attr("name") == "pickup_airport_clock1" || element.attr("name") == "dropoff_airport_clock1" )
			{
				error.addClass('help-block').insertAfter(element.closest('.input-group'));
			}
			else
			{
				error.addClass('help-block').insertAfter(element.closest('.form-control'));
			}
		}

		});
		display_date_picker();
		$.ajax({
				type: "POST",
				  url: base_url+'org_transportation/get_last_meeting_location',
				  async:false,
				  success:function(data) 
				  {
					if(data!='')
					{
						$('#meeting_location_from_pilot').val(data);
					}
				  }
			});
		$('#createlegModal-pilot').modal('show');
	});
	
	$(document).on('click','#add_overnight_leg',function()
	{
			$('#addlegs_overnight').validate({
			errorElement: 'span', //default input error message container
			errorClass: 'help-block', // default input error message class
			focusInvalid: true, // do not focus the last invalid input
			rules: {
			o_pickup_location: {
				required: true
			},
			assign_user_name1:{
				required: true
			},	
			},

		messages: {
			o_pickup_location:{
				required :"Please enter Overnight location"
			},
			
			
		},

		invalidHandler: function (event, validator) { //display error alert on form submit   
			$('#addlegs_ground').show();
			
			var errors = validator.numberOfInvalids();
			if (errors) {
			  var message = errors == 1
				? 'You missed 1 field. It has been highlighted'
				: 'You missed ' + errors + ' fields. They have been highlighted';
			  alert(message);
			}
		},

		highlight: function (element) { // hightlight error inputs
			$(element)
				.closest('.form-group').addClass('has-error'); // set error class to the control group
		},

		success: function (label) { 
			label.closest('.form-group').removeClass('has-error');
			label.remove();
		},

		errorPlacement: function (error, element) { 
			if (element.attr("name") == "pickup_airport_clock1" || element.attr("name") == "dropoff_airport_clock1" )
			{
				error.addClass('help-block').insertAfter(element.closest('.input-group'));
			}
			else
			{
				error.addClass('help-block').insertAfter(element.closest('.form-control'));
			}
		}

		});
		//display_date_picker();
			$.ajax({
				type: "POST",
				  url: base_url+'org_transportation/get_last_meeting_location',
				  async:false,
				  success:function(data) 
				  {
					if(data!='')
					{
						$('#overnight_comments').html(data);
					}
				  }
			});
		$('#overnight-leg').modal('show');	
	});
	
});

function addslashes(str) {
	if(str)
	{
		str=str.replace(/\\/g,'\\\\');
		str=str.replace(/\'/g,'\\\'');
		str=str.replace(/\"/g,'\\"');
		str=str.replace(/\0/g,'\\0');
		return str;
	}
	else{
		return "";
	}
}
function stripslashes(str) {
	if(str)
	{
		str=str.replace(/\\'/g,'\'');
		str=str.replace(/\\"/g,'"');
		str=str.replace(/\\0/g,'\0');
		str=str.replace(/\\\\/g,'\\');
		return str;
	}
	else{
		return "";
	}
}
$(document).ready(function()
{
$(document).on('click','.create_leg',function(){
	if($( window ).width() <= 767)
		{
			$('.transport-legs.small-only').show();
		} else {
			$('.transport-legs.large-only').show();
		}
});
});
$(document).ready(function()
{
$(document).on('click','#cancel_g,.close-ground-leg',function()
	{
			$('.help-block').remove();
			$('.form-group').removeClass('has-error');
			$('#select_module').val('0');
			$('#cover_ground_leg').val('0');
			$("#pickup_street1").val('');
			$("#pickup_location1").val('');
			$("#pickup_city1").val('');
			$("#pickup_state1").val('');
			$("#pickup_zip1").val('');
			$("#pickup_country1").val('');
			$("#dropoff_street1").val('');
			$("#dropoff_location1").val('');
			$("#dropoff_city1").val('');
			$("#dropoff_state1").val('');
			$("#dropoff_zip1").val('');
			$("#dropoff_country1").val('');
			$('#assign_user_name1').val('');
			$('#assignuid-driver1').val('');
			$('#clockface_3_modal1').val('');
			$('#clockface_2_modal1').val('');
			$('#createlegModal').modal('hide');
	});
	$(document).on('click','#cancel_a,.close-aviation-leg',function()
	{
		$('#select_module').val('0');
		$('.help-block').remove();
		$('.form-group').removeClass('has-error');
		$('#cover_aviation_leg').val('0');
		$("#pickup_airport1").val('');
		$("#pickup_airport_city1").val('');
		$("#pickup_airport_state1").val('');
		$("#dropoff_airport1").val('');
		$("#dropoff_airport_city1").val('');
		$("#dropoff_airport_state1").val('');
		$('#assign_user_name-pilot1').val('');
		$('#assignuid-pilot1').val('');
		$('#pickup_airport_clock1').val('');
		$('#dropoff_airport_clock1').val('');
		$('#createlegModal-pilot').modal('hide');
		
	});	
	
	$(document).on('click','#cancel_o,.close-overnight-leg',function()
	{
		$('#select_module').val('0');
		$('.help-block').remove();
		$('.form-group').removeClass('has-error');
		$('#cover_overnight_leg').val('0');
		$("#o_pickup_street").val('');
		$("#o_pickup_location").val('');
		$("#o_pickup_city").val('');
		$("#o_pickup_state").val('');
		$("#o_pickup_country").val('');
		$("#o_pickup_zip").val('');
		$('#assign_user_name-overnight1').val('');
		$('#assignuid-overnight1').val('');
		$('#overnight-leg').modal('hide');
		
	});	
});	
function display_share_email_popup()
{
		$('#email-config').modal('show');
}

$(document).ready(function() {
$(document).on('click','#send_mail',function(){
	if($('#txtMessage').val()=='') {
		alert("Please Enter Message");
		return false;
	} else {
		$('#send_mail').hide();
		
		if($.browser.msie) {
				$('.display_loader').html('<img id="loadimg" src="'+base_url+'assets/img/ajax-loading.gif" alt="loader" />');
			}
		$('.display_loader').show();
		
		$('#loadimg_mail').show();
		$('#email-config').modal('hide');
		
		if($.browser.msie) {
			$('.display_loader').html('<div id="loader" style="display: none;"><img src="'+base_url+'assets/img/ajax-modal-loading.gif" width="32" height="32" align="absmiddle">&nbsp;<span id="loadertext">Loading...</span></div>');
		}
		
		$('.display_loader').show();
		$('#loader').show();
	}
	}); 


$(".remove_doobert_user").on("click",function()
	{
		$('#remove_doobert_userpopup').modal('show');
		return false;
	});
});	
function remove_leg_and_transport()
	{
		$('#action').val('remove_vol');
		$('#legs_select').submit();
		return true;
	}

	$(document).ready(function() {
	$(".cancel_leg").on("click",function(){
	if($(this).attr("legtype")=='join')
	{
		//$(".loder_cancel,#select_leg,#leave_transport").hide();
		$('.'+$(this).attr("data-val")).show();
		$('.cancel_leg,.btn-secondary,.driver-ono-user').hide();
		
		$('#legs_select').submit();
		return true;
	}
	else if($(this).attr("legtype")=='remove')
	{
		$('#remove_popup_'+$('#cancel_leg_id').val()).modal('show');
		return false;
	}
	else
	{
		//alert($('#cancel_leg_id').val());
		//$('#exit_popup_transport_leg ')
		//$('#cancel_popup_'+$('#cancel_leg_id').val()).modal('show');
		$('#exit_popup_transport_leg').modal('show');
		return false;
		
	}

	});
});	

function cancel_leg_or_transport()
{
	$('.cancel_leg,.btn-secondary,.driver-ono-user').hide();
	$('.'+$(this).attr("data-val")).show();
	$('.cancel_leg').hide();
	$('#action').val('cancel');
	$('#legs_select').submit();
	return true;
}

function confirm_transportation()
{
	var error_confirm = "";
	//$transport_details['cover_dis_per']>=90 &&  strtotime($transport_details['dt_target'])>=strtotime(date("Y-m-d"))
	
	if(animal<=0)
	{
		//error_confirm +="The animal is not available in transportation.\n";
		error_confirm +="Ooops.  You do not have any animal profiles on this transport so you cannot confirm it until you have at least one animal profile attached.  Please use the EDIT TRANSPORT feature to add an animal.\n";
	}
	if(target_date<currentdate)
	{
		error_confirm +="Current date must be less than or equal to Target date.\n";
	}
	if(total_legs<=0)
	{
		error_confirm +="Ooops.  You do not have any legs on this transport so you cannot confirm it until you have at least one leg created.\n";
	}
	if(error_confirm!='')
	{
		alert(error_confirm);
		return false;
	}
	else
	{
		$('#transport-confirmation').modal('show');
		
		return false;	
		
	}
}
$(document).ready(function () {
$(document).on('click','#modal_confirm_transport',function(){
		//alert('modal_confirm_transport clicked');
		
		var additional_email = new Array();
		var error_message = '';
		
			if(confirm_transport_status == 1)
			{	
					if(confirm("Legs date should match with transport date. Please update the legs date before confirming."))
					{
						var cname = 'edit_legs';
						var cvalue = '1';
						var exdays = '1';
						var d = new Date();
						d.setTime(d.getTime() + (exdays*24*60*60*1000));
						var expires = "expires="+ d.toUTCString();
						document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/;domain=.doobert.com";
						window.location.replace(base_url+"transport-create-legs/");						
					}else{
						return false;
					}
					return false;
			}
			
			var counter = 3;
			var flag = 1;
			var emailReg = /^([\w-\.\+]+@([\w-]+\.)+[\w-]{2,4})?$/;
			for(var i=0; i<counter; i++)
			{
				if($('#addit_name'+i).val()!='' ||  $('#addit_email_address'+i).val()!='')
				{
					var num = i+1;
					if($('#addit_name'+i).val()=='')
					{
						flag = 0;	
						error_message += 'Please Enter User'+num+' Name \n';
					}
					
					if($('#addit_email_address'+i).val()=='')
					{
						flag = 0;	
						error_message += 'Please Enter User'+num+' Email Address \n';
					} else if(!emailReg.test( $('#addit_email_address'+i).val() ))
					{
						flag = 0;
						error_message += 'Please enter User'+num+' Valid Email Address \n';
					}	
						
				}  
				if($('#addit_name'+i).val()!='' &&  $('#addit_email_address'+i).val()!='' && flag == 1)
				{
					//$('#add_email_address').val({'user_name':$('#addit_name'+i).val(),'user_email':$('#addit_email_address'+i).val()});
					additional_email.push({'user_name':$('#addit_name'+i).val(),'user_email':$('#addit_email_address'+i).val()});
					$('#addit_name'+i).val(' ');
					$('#addit_email_address'+i).val(' ');	
				}	
			}
			
			if(flag ==0)
			{
				alert(error_message);
				return false;
			}	
			$('#add_email_address').val(JSON.stringify(additional_email));
				
				
			
			$('#transport-confirmation').modal('hide');
			/*$('#confirm_transport').submit();
			return true;*/
			document.confirm_transport.submit();		
});
});

	function edit_meeting_location(leg_id,from_meeting,to_meeting,sort_order)
	{
		$('#txt_edit_leg_id').val(leg_id)
		if(from_meeting!='')
		{		
			$('#txt_edit_meeting_location').val(from_meeting);
		} else {
			$.ajax({
					type: "POST",
				    url: base_url+'org_transportation/get_last_meeting_location',
				   async:false,
				    data: {
					  leg_id : sort_order-1,					   
					},
				   success:function(data) 
				   {
						if(data!='')
						{
							$('#txt_edit_meeting_location').val(data);
						} else {
							$('#txt_edit_meeting_location').val(from_meeting);
						}
				   }
					});
		}	
		if(to_meeting!='')
		{	
			$('#txt_editto_meeting_location').val(to_meeting);
		} else {
			$.ajax({
					type: "POST",
				    url: base_url+'org_transportation/get_next_meeting_location',
				   async:false,
				    data: {
					  leg_id : parseInt(sort_order)+parseInt(1),					   
					},
				   success:function(data) 
				   {
						if(data!='')
						{
							$('#txt_editto_meeting_location').val(data);
						} else {
							$('#txt_editto_meeting_location').val(to_meeting);
						}
				   }
					});
		}	
		$('#edit_meeting_location').modal('show');
	}
	function timeConvertor(time) 
	{
		var PM = time.match('PM') ? true : false
    
		time = time.split(':')
		var retrive_min = time[1];
		var min = retrive_min.split(" ");
		var minutes = min[0];
		if (PM && time[0]!='12') 
		{
			var hour = 12 + parseInt(time[0],10)
			var sec = '00';
		} else {
			//var hour = time[0]
			//var hour = time[0] > 9 ?time[0]: "0" + time[0];
			var hour = time[0] <= 9 && time[0].length<=1 ?"0" + time[0]:time[0];
			var sec = '00';       
		}
		var exact_time = hour + ':' + minutes + ':' + sec;
		return exact_time;
	}
	$(document).on('click','#auto_split_leg',function()
	{

		if(total_legs>0)
		{
			$('#auto_split_modal').modal('show');	
		} else {
			$('#break-route-legs').modal('show');
		}		
	});
	
	$(document).on('click','#btn_continue',function()
	{
		var distance_duration = $("#distance_duration").val();
		var handoff_time = $("#handoff_time").val();
		var break_by = 'd';
		var error_msg = '';
		var error_status = 0;

		if(distance_duration == '')
		{
			error_msg = 'Please enter distance.\n';
			error_status = 1;
		}
		
		if(distance_duration < 30)
		{
			error_msg += 'Break by distance value should be Greater then or Equal to 30 Miles.\n';
			error_status = 1;
		}
		
		if(handoff_time == '')
		{
			error_msg += 'Please enter handoff time between legs. \n';
			error_status = 1;
		}
		
		var timepicker1 = new Array;
		var timepicker2 = new Array;
		$('.timepicker1').each(function()
		{
			timepicker1.push($(this).val());
		});
			
		$('.timepicker2').each(function()
		{
			timepicker2.push($(this).val());
		});
		
		for(var i=0;i<total_diff;i++)
		{
			var time_pick1 = timeConvertor(timepicker1[i]);
			var time_pick2 = timeConvertor(timepicker2[i]);
			var day = parseInt(i)+parseInt(1);
			if(time_pick1 > time_pick2)
			{
				error_msg += 'Latest leg finish time must be greater then Earliest leg start time for day '+day+' \n';
				error_status = 1;	
			}		
		}
		
		if(error_status == 1)
		{
			alert(error_msg);
			return false;
		}	
		
	
		var form_distance_duration = $("#distance_duration").val();
		var form_handoff_time      = $("#handoff_time").val();
		
		$.ajax({
            url: base_url+"org_transportation/auto_split_transport_legs/",
			type:"POST",
            dataType: "json",
            data:
            {
                form_timepicker1:timepicker1,
				form_timepicker2:timepicker2,
				form_distance_duration:form_distance_duration,
				form_handoff_time:form_handoff_time,
				transport_id:transport_id
            },
			beforeSend:function(data)
			{
				$('#auto_split_loader').modal('show');
				$('#break-route-legs').modal('hide');
			},	
            success: function(data)
            {
				if(data == '1')
				{	
					location.reload();
				} 		
				else
					alert('Auto-split transport route not created succesfully');	
            },
			complete:function(data)
			{
				$('#auto_split_loader').modal('hide');
			}
		});
	});