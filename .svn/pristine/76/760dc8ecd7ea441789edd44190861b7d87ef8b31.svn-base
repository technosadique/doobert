<?php
# ======================================================================================
# Created by		: Chetan Pedgaonkar
# Created date		: 04-Aug-2014
# File description	: Model for cron_setting
# Special - notes	: none
# Tables used		: 
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class cron_setting_doobert_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
		$this->load->library('common_function');		
		$this->load->model('common_model');
		$this->load->helper(array('form', 'url'));
    }
    
	function index() {
	
	}
	
	#=========================================================
	#	Function : incomplete_doobert_verified_app
	#	Purpose  : Getting all incomplete_doobert_verified_applications
	#=========================================================
	
	public function incomplete_doobert_verified_app()
	{
		$current_date = date("Y-m-d");
		
		$current_date_2_start = date("Y-m-d 00:00:00", strtotime('-2 day',strtotime($current_date)));
		
		$current_date_2_end = date("Y-m-d 23:59:59", strtotime('-2 day',strtotime($current_date)));
		
		$current_date_5_start = date("Y-m-d 00:00:00", strtotime('-5 day',strtotime($current_date)));
		
		$current_date_5_end = date("Y-m-d 23:59:59", strtotime('-5 day',strtotime($current_date)));
		
		$where = '((v.dt_created >="' .$current_date_2_start. '" &&  v.dt_created <="'.$current_date_2_end.'")  || (v.dt_created >="' .$current_date_5_start.'" &&  v.dt_created <="'.$current_date_5_end.'"))';
		
		//$user_ids = array('13467','13468','13469');
		
		$this->db->select("v.in_verify_id,
						   v.in_user_id,
						   u.st_email",false);					   	
		$this->db->from('tbl_verification v');	
		$this->db->join('tbl_users u', 'u.in_user_id=v.in_user_id AND u.in_deleted=0','INNER');		
		$this->db->where('v.fl_doobert_verified', '0');	
		$this->db->where('v.in_status', '0');	
		$this->db->where('v.in_deleted', '0');
		$this->db->where($where);	
		//$this->db->where_in('u.in_user_id', $user_ids);							
		$this->db->order_by('v.in_verify_id','asc');
		$this->db->limit('25');		
		$query = $this->db->get(); 
		//echo $this->db->last_query();  die;					
		$incomplete_apps = $query->result_array();
		//print_r($incomplete_apps);exit;
		return $incomplete_apps;
	}
	
	public function incomplete_doobert_org_app()
	{
		$current_date = date("Y-m-d");
		
		$current_date_2_start = date("Y-m-d 00:00:00", strtotime('-2 day',strtotime($current_date)));
		
		$current_date_2_end = date("Y-m-d 23:59:59", strtotime('-2 day',strtotime($current_date)));
		
		$current_date_5_start = date("Y-m-d 00:00:00", strtotime('-5 day',strtotime($current_date)));
		
		$current_date_5_end = date("Y-m-d 23:59:59", strtotime('-5 day',strtotime($current_date)));
		
		$where = '((tbo.dt_created >="' .$current_date_2_start. '" &&  tbo.dt_created <="'.$current_date_2_end.'")  || (tbo.dt_created >="' .$current_date_5_start.'" &&  tbo.dt_created <="'.$current_date_5_end.'"))';
		//$user_ids = array('13467','13468','13469');
		
		$this->db->select("tbo.in_organization_id,
						   tbo.in_user_id,
						   u.st_email",false);					   	
		$this->db->from('tbl_organization tbo');	
		$this->db->join('tbl_users u', 'u.in_user_id=tbo.in_user_id AND u.in_deleted=0','INNER');		
		$this->db->where('tbo.in_status', '4');	
		$this->db->where('tbo.in_deleted', '0');
		$this->db->where($where);
		//$this->db->where_in('u.in_user_id', $user_ids);						
		$this->db->order_by('tbo.in_organization_id','asc');
		$this->db->limit('25');		
		$query = $this->db->get(); 
		//echo $this->db->last_query();  die;					
		$incomplete_apps = $query->result_array();
		//print_r($incomplete_apps);exit;
		return $incomplete_apps;
	}
	
	public function incomplete_doobert_voluteers()
	{
		$current_date = date("Y-m-d");
		
		$current_date_2_start = date("Y-m-d 00:00:00", strtotime('-3 day',strtotime($current_date)));
		
		$current_date_2_end = date("Y-m-d 23:59:59", strtotime('-3 day',strtotime($current_date)));
		
		$current_date_5_start = date("Y-m-d 00:00:00", strtotime('-7 day',strtotime($current_date)));
		
		$current_date_5_end = date("Y-m-d 23:59:59", strtotime('-7 day',strtotime($current_date)));
		
		$where = '((u.dt_created >="' .$current_date_2_start. '" &&  u.dt_created <="'.$current_date_2_end.'")  || (u.dt_created >="' .$current_date_5_start.'" && u.dt_created <="'.$current_date_5_end.'"))';
		
		//$user_ids = array('13467','13468','13469');
		
		
		$this->db->select("u.in_user_id,
						   u.st_email",false);					   	
		$this->db->from('tbl_users u');			
		$this->db->where('u.in_status', '0');	
		$this->db->where('u.in_deleted', '0');
		$this->db->where($where);
		//$this->db->where_in('u.in_user_id', $user_ids);
		$this->db->order_by('u.in_user_id','asc');
		$this->db->limit('25');		
		$query = $this->db->get(); 
		//echo $this->db->last_query();  die;					
		$incomplete_volunteers = $query->result_array();
		//print_r($incomplete_volunteers);exit;
		return $incomplete_volunteers;
	}
	
	public function get_transport_for_reminder()
	{
		$current_date = date("Y-m-d");
		
		$current_date_2_start = date("Y-m-d 00:00:00", strtotime('+3 day',strtotime($current_date)));
		$current_date_2_end = date("Y-m-d 23:59:59", strtotime('+3 day',strtotime($current_date)));
		
		$this->db->select('t.in_transportation_id,t.dt_pickup_date,t.dt_created,t.in_trans_coods_id,t.st_trans_type,round((t.in_distance_covered/t.in_tot_distance * 100),2) perc,t.st_add_comments,u.st_email,
						   concat(u.st_display_name," ",u.st_last_name) as st_display_name,o.st_org_name,o.st_org_code',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_users u', 'u.in_user_id=t.in_trans_coods_id', 'INNER');
		$this->db->join("tbl_organization o","o.in_organization_id = t.in_organization_id AND o.in_deleted='0'","INNER");
		//$this->db->where_in('t.in_status',array(1,2));
		$this->db->where('t.in_status',1);
		$this->db->where('t.in_reminder_sent',0);
		$this->db->where('t.dt_pickup_date >= ',$current_date_2_start);
		$this->db->where('t.dt_pickup_date <= ',$current_date_2_end);
		$this->db->where('t.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$this->db->order_by('t.in_transportation_id','asc');
		$this->db->limit('5');
		$query = $this->db->get();
		//echo $this->db->last_query();exit;
		$reminder_transports = $query->result_array();
		
		
		$reminder_transports_data = array();
		if(isset($reminder_transports) && !empty($reminder_transports))
		{
			foreach($reminder_transports as $trans_val)
			{
				$filled_legs = $this->get_transport_filled_status($trans_val['in_transportation_id']);
				
				$date_diff = 4;
				$created_date = date('Y-m-d',strtotime($trans_val['dt_created']));
				$started_date = date('Y-m-d',strtotime($trans_val['dt_pickup_date']));
				$d1=new DateTime($created_date); 
				$d2=new DateTime($started_date); 
				$date_diff = $d1->diff($d2)->format("%d");
				if($date_diff>3)
				{
				
				$reminder_transports_data[] = array("in_transportation_id"=>$trans_val['in_transportation_id'],
													"in_trans_coods_id"=>$trans_val['in_trans_coods_id'],
													"st_trans_type"=>$trans_val['st_trans_type'],
													"perc"=>isset($trans_val['perc']) ? $trans_val['perc'] : 0,
													"st_email"=>$trans_val['st_email'],
													"st_display_name"=>$trans_val['st_display_name'],
													"total_legs"=>isset($filled_legs['total_legs']) ? $filled_legs['total_legs'] : 0,
													"leg_filled"=>(isset($filled_legs['leg_filled']) && !empty($filled_legs['leg_filled'])) ? count($filled_legs['leg_filled']) : 0,
													"st_org_name" =>$trans_val['st_org_name'],
													"st_org_code" =>$trans_val['st_org_code'],
													"st_add_comments" =>$trans_val['st_add_comments'],
													);
				}									
			}
			
			//print_r($reminder_transports_data);exit;
		}
		return $reminder_transports_data;
				
	}
	
	function update_transport_reminder_status($transportation_id)
	{
		$this->db->where('in_transportation_id',$transportation_id);
		$this->db->update('tbl_transportation',array("in_reminder_sent"=>"1"));	
	}
	
	function get_transport_filled_status($transportation_id)
	{
		$filled_legs_count = array();
		
		$this->db->select('tl.in_transportation_leg_id,tl.in_multi_user,tl.in_user_num');
		$this->db->from('tbl_transportation_leg tl');
		$this->db->where('tl.in_transportation_id',$transportation_id);
		$this->db->where('tl.in_deleted',0);
		$query = $this->db->get();
		$transport_legs = $query->result_array();
		
		if(isset($transport_legs) && !empty($transport_legs))
		{
			$filled_legs_count['total_legs']	= count($transport_legs);
			foreach($transport_legs as $leg_val)
			{
				$all_participants = $this->common_model->get_leg_all_participants($leg_val['in_transportation_leg_id']);
				if($leg_val['in_multi_user'] == 0 && $all_participants == 1)
				{
					$filled_legs_count['leg_filled'][] = 1;
				}
				if($leg_val['in_multi_user'] == 1  && $leg_val['in_user_num'] == $all_participants)
				{				
					$filled_legs_count['leg_filled'][] = 1;													
				}
			}			
		}
		//print_r($filled_legs_count);exit;
		return $filled_legs_count;
	}
	
	function get_users_feedback()
	{
		
		/*$test_date = '2016-09-26';
		$newdate = strtotime ('-1 day' , strtotime ($test_date) ) ;
		$newdate = date ( 'Y-m-j' , $newdate );*/
		$previous_date = date('Y-m-d', strtotime('-1 day'));
		$this->db->select('tr.in_transportation_id,u.st_email,u.in_user_id,o.st_org_code');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','o.in_organization_id = tr.in_organization_id','INNER');
		$this->db->join('tbl_users u','u.in_user_id = tr.in_trans_coods_id AND u.in_deleted=0','INNER');
		$this->db->where('tr.in_status', 2);
		$this->db->where('tr.in_deleted', 0);
		$this->db->where('tr.dt_target',$previous_date);	
		$query = $this->db->get();
		
		//echo $this->db->last_query();exit;
		
		$tc = $query->result_array();
		$user_feedback_listing = array();
		
		if($query->num_rows() > 0 )
		{	
			foreach($query->result_array() as $key=>$row)
			{ 
				$user_feedback_listing[]=array('transport_id'  	=>  $row['in_transportation_id'],
										'email_address'       	=>  $row['st_email'],
										'is_coordinator'    	=> 	 1,
										'user_id'				=>	 $row['in_user_id'],
										'st_org_code'			=>	 $row['st_org_code'],
									    );
			}	
		}		

		
		$this->db->select('p.in_transportation_id,u.st_email,u.in_user_id,o.st_org_code');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','o.in_organization_id = tr.in_organization_id','INNER');
		$this->db->join('tbl_transportation_participants p','p.in_transportation_id = tr.in_transportation_id AND p.in_deleted=0','LEFT');
		$this->db->join('tbl_users u','u.in_user_id = p.in_user_id AND u.in_deleted=0','LEFT');
		$this->db->where('tr.in_status', 2);
		$this->db->where('tr.in_deleted', 0);
		$this->db->where('p.in_user_id != tr.in_trans_coods_id');
		$this->db->where('p.in_transportation_leg_id !=0');
		$this->db->where('tr.dt_target',$previous_date);
		$query = $this->db->get();
		
		if($query->num_rows() > 0 )
		{	
			foreach($query->result_array() as $key=>$row)
			{ 
				$user_feedback_listing[]=array('transport_id'  	=>  $row['in_transportation_id'],
										'email_address'       	=>  $row['st_email'],
										'is_coordinator'    	=> 	0,
										'user_id'				=>	$row['in_user_id'],
										'st_org_code'			=>	 $row['st_org_code'],
										
									    );
			}	
		}
		
		$this->db->select('p.in_transportation_id,p.st_email,p.in_non_doobert_user_id,o.st_org_code');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','o.in_organization_id = tr.in_organization_id','INNER');
		$this->db->join('tbl_non_doobert_transport_users p','p.in_transportation_id = tr.in_transportation_id AND p.in_deleted=0','LEFT');
		$this->db->where('tr.in_status', 2);
		$this->db->where('tr.in_deleted', 0);
		$this->db->where('p.in_leg_id !=0');
		$this->db->where('tr.dt_target',$previous_date);
		$query = $this->db->get();
		
		if($query->num_rows() > 0 )
		{	
			foreach($query->result_array() as $key=>$row)
			{ 
				$user_feedback_listing[]=array('transport_id'  	=>  $row['in_transportation_id'],
										'email_address'       	=>  $row['st_email'],
										'is_coordinator'    	=> 	2,
										'user_id'				=>	$row['in_non_doobert_user_id'],
										'st_org_code'			=>	 $row['st_org_code'],
									    );
			}	
		}
		//print_r($user_feedback_listing);exit;
		return $user_feedback_listing;
	}
	
	public function get_transport_files($tra_id)
	{
		$this->db->select('st_file_name,in_transport_file_id',FALSE);
		$this->db->from('tbl_transportation_file');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_win_bid_user()
   {
   		$this->db->select("u.st_display_name,u.st_last_name,u.st_email,ap.in_prod_id,ap.st_product, COUNT(b.in_bid_id) AS dnt,b.in_user_id");		
		$this->db->from('tbl_auction_products ap');	
		$this->db->join('tbl_bids b','b.in_prod_id=ap.in_prod_id','LEFT');
		$this->db->join('tbl_users u','u.in_user_id=b.in_user_id','LEFT');
		$this->db->where('ap.in_prod_type','A');	
		$this->db->where('ap.flg_win', 0);	
		$this->db->where('u.in_deleted', 0);		
		$where = "ap.dt_to < NOW()  GROUP BY ap.in_prod_id HAVING COUNT(b.in_bid_id) > 0";
		$this->db->where($where);		
		$query = $this->db->get();		
		return $query->result_array();
   }
   
   	public function get_submitted_routing_transport()
   {
   		$this->db->select("in_transportation_id,u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,t.stRecOrgNm,t.in_trans_coods_id,o.st_org_code");		
		$this->db->from('tbl_transportation t');	
		$this->db->join('tbl_users u','t.in_trans_coods_id=u.in_user_id','LEFT');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id','LEFT');
		$this->db->where('t.in_notify_tc_users',1);
		$this->db->where('t.enable_routing_status',1);		
		$this->db->where('t.in_status', 4);	
		$this->db->where('t.in_deleted', 0);		
		$query = $this->db->get();		
		return $query->row_array();
   }
   
   public function get_tc_users()
   {
	   	$date = date('Y-m-d');
		$this->db->select('u.in_user_id,u.st_email,u.st_display_name,u.st_last_name');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id = up.in_user_id AND up.in_deleted=0','INNER');
		$this->db->where('u.in_tc_request_board',1);
		$this->db->where('u.in_deleted',0);
		$this->db->where('up.dt_exp_tc_date >=',$date);
		$query = $this->db->get();
		if($query->num_rows() >0)
		{	
			return $query->result_array();
		} else {
			$result_array = array();
			return $result_array;
		}	
   }
   
   /*public function get_reassigned_routing_transport()
   {
   		$this->db->select("in_transportation_id,u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,t.stRecOrgNm,t.in_trans_coods_id,o.st_org_code");		
		$this->db->from('tbl_transportation t');	
		$this->db->join('tbl_users u','t.in_trans_coods_id=u.in_user_id','LEFT');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id','LEFT');
		$this->db->where('t.in_revised_routing_notification',1);
		$this->db->where('t.enable_routing_status',1);		
		$this->db->where('t.in_status',1);	
		$this->db->where('t.in_deleted', 0);		
		$query = $this->db->get();		
		return $query->row_array();
   }*/
   
	public function get_reassigned_routing_transport()
    {
   		$this->db->select("t.in_transportation_id,u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,t.stRecOrgNm,t.in_trans_coods_id,o.st_org_code");		
		$this->db->from('tbl_transportation t');	
		$this->db->join('tbl_users u','t.in_trans_coods_id=u.in_user_id','LEFT');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id','LEFT');
		$this->db->where('t.in_revised_routing_notification',1);
		$this->db->where('t.enable_routing_status',1);		
		$this->db->where('t.accTcid',0);	
		$this->db->where('t.in_deleted',0);		
		$query = $this->db->get();		
		return $query->row_array();
    }
	
}
?>