var domainName = 'http://dev.doobert.com/plm/';
var rankCount = 1;
var rankCountMore = 1;
var count=0;
$(document).ready(function() {

	$('.filter-nav > li > a').click(function() {
		if ($(this).parent().hasClass('active')) {
			$(this).parent().removeClass('active').children('.drop').slideUp(300);
		} else {
			$(this).parent().addClass('active').children('.drop').slideDown(300);
			$(this).parent().siblings('.active').removeClass('active').children('.drop').slideUp(300);
		}
		return false;
	});

	bgImage('.visual .bg, .result-list .img');
	// bgImage('.visual .bg, .result-list .img, .slider-holder .slide figure');

	$('.filter-result .grid-btns li a').on('click', function(event) {
		$(this).parent().addClass('active').siblings().removeClass('active');
		if ($(this).hasClass('btn-grid')) {
			$('.result-list').addClass('grid');
		} else {
			$('.result-list').removeClass('grid');
		}
		event.preventDefault();
	});

	$('.filter .btn-close').on('click', function(event) {
		$(this).parents('.result-area').toggleClass('filter-close');
		event.preventDefault();
	});
	//$(window).on('resize', function(event) {
//		event.preventDefault();
//		if ($(window).width() < 992 && $(window).width() > 767 && !$('.result-area').is('.filter-close')) {
//			$('.result-area').addClass('filter-close');
//			setTimeout(function(){
//				$('.filter').addClass('opacity');
//			}, 500);
//		}
//	});

	//if ($(window).width() < 992 && $(window).width() > 767 && !$('.result-area').is('.filter-close')) {
//		$('.result-area').addClass('filter-close');
//		setTimeout(function(){
//			$('.filter').addClass('opacity');
//		}, 500);
//	}

	if ($('.rating-js').length) {
		var el = document.querySelector('.rating-js');
		var currentRating = 0;
		var maxRating= 5;
		var myRating = rating(el, currentRating, maxRating);
		$('.rating-js').children('li').wrapAll('<ul class="c-rating"></ul>')
	}

	if ($('.rating-js-modal').length) {
		
		var el = document.querySelector('.rating-js-modal');
		var currentRating = 0;
		var maxRating= 5;
		var myRating = rating(el, currentRating, maxRating);
		$('.rating-js-modal').children('li').wrapAll('<ul class="c-rating" id="crating"></ul>')
	}

	$('#subscribe-form').validate({
		errorClass: "error",
		validClass: "valid",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			stFirstName: {
				required: true
			},
			stEmail: {
				required: true,
				email: true
			}
		},
		
		invalidHandler: function(event, validator) { //display error alert on form submit   
		
		
	},

	highlight: function(element) { // hightlight error inputs
		$(element).parent().addClass('error').removeClass('valid');
	},

	success: function(label) {
		
		$('#subscribe-form').find('.btn').removeClass('greybtn');
		label.closest('.input-holder').removeClass('has-error');
		label.remove();
	},

	errorPlacement: function(error, element) {
		
		$('#subscribe-form').find('.btn').addClass('greybtn');
		error.insertAfter(element.closest('.input-holder .form-control'));
	},

	submitHandler: function(form) {
		
		form.submit(); // form validation success, call ajax form submit
	}
	});

/*	var subscribeForm1 = $( "#subscribe-form" ).validate();
	//$('#subscribe-form .form-control').on('keyup blur', function () {
	$('#subscribe-form #lblsub02').on('keyup blur', function () {
		//console.log("abc");
		$('#subscribe-form #lblsub02').each(function(index, el) {
		//	console.log("xyz");
			if (subscribeForm1.form()) {
				
				$('#subscribe-form').find('.btn').removeClass('disabled');
			} else {
				
				$('#subscribe-form').find('.btn').addClass('disabled');
			}
		});
	}); */ 

	$('#enter-code').validate({
		errorClass: "error",
		validClass: "valid",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			code: {
				required: true
			}
		}
	});

	var enterForm = $( "#enter-code" ).validate();
	$('#enter-code .form-control').on('keyup blur', function () {
		$('#enter-code .form-control').each(function(index, el) {
			if (enterForm.form() && !$(this).val().length == 0) {
				$('#enter-code').find('.btn').removeClass('greybtn');
			} else {
				$('#enter-code').find('.btn').addClass('greybtn');
			}
		});
	});
	
	$('.close-block').on('click', function(event) {
		$('.bottom-bar').toggleClass('closed');
		$('.visual').fadeToggle(300);
		event.preventDefault();
		return false;
	});

	$('#header .open-menu').on('click', function(event) {
		$('body').toggleClass('opened-menu');
		event.preventDefault();
	});

	$('<span class="fader"/>').appendTo('#header');

	$('.fader').click(function(){
		$('body').removeClass('opened-menu');
	});

	$('.main-nav .close').on('click', function(event) {
		$('body').removeClass('opened-menu');
		event.preventDefault();
	});

	$(document).on('mouseup touchend ',function (e){
		if ($(window).width() < 768) {
			var container = $('.main-nav');
			if (!container.is(e.target) && container.has(e.target).length === 0){
				container.parents('body').removeClass('opened-menu');
			}
		}
	});

	$('.main-nav .open').on('click', function(event) {
		$(this).parent().toggleClass('current').siblings('.drop').slideToggle(300);
		event.preventDefault();
	});

	if ($(window).width() < 992) {
		$('.filter-nav li.active').removeClass('active').children('.drop').slideUp(300);
	}

	$('.selectpicker').selectpicker({
		style: 'form-control',
		size: 4
	});
	var availableTags = [
		"Best Friends Aminal Socienty",
		"Best Friends Aminal Socienty",
		"Best Friends Aminal Socienty"
	];
	$('#autocomplete').autocomplete({
		source: availableTags
	});

	function mapInitialize(map_) {
		var coords_ = $('#'+ map_).data('coords');
		if (coords_){
			var latitude = coords_.split(',')[0];
			var longtitude = coords_.split(',')[1];
		}
		
		var latlng = new google.maps.LatLng(latitude,longtitude);
		
		var myOptions = {
			zoom: 12,
			center: latlng,
			disableDefaultUI: true,
			scrollwheel: false,
			zoomControl: true,
			disableDefaultUI: true,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		
		var map = new google.maps.Map(document.getElementById(map_), myOptions);
		
		var marker = new google.maps.Marker({
			position: latlng,
			map: map
		});
	
	};
	$('.map').each(function(){
		var map_ = $(this).attr('id');
		mapInitialize(map_);
	});

	$('.slider').slick({
		dots:false,
		arrows:false,
		infinite: false
	});

	$('.slider-nav .slick-next').on('click', function() {
		$('.slider').slick('slickNext');
	});

	$('.slider-nav .slick-prev').on('click', function() {
		$('.slider').slick('slickPrev');
	});

	var allEl = $('.slider .slick-slide ').length;
		countEl = $('.slider .slick-current ').index() + 1;
	
	$('.slider-nav ').prepend('<span> ' + countEl + ' of ' + allEl + ' </span>');

	$('.slider').on('afterChange swipe', function(){
		countEl = $('.slider .slick-active ').index() + 1;
		$('.slider-nav span').text(countEl + ' of ' + allEl);
	});

	$('.profile .nav-tabs > li > a').on('shown.bs.tab', function(event){
		$('.slider').slick('setPosition');
		$('.map').each(function(){
			var map_ = $(this).attr('id');
			mapInitialize(map_);
		});
	});

	var showChar = 75,
		ellipsestext = "...",
		moretext = "MORE",
		lesstext = "LESS";

	$('.more-js').each(function() {
		var content = $(this).html();
		if(content.length > showChar) {
			var c = content.substr(0, showChar),
				h = content.substr(showChar, content.length - showChar),
				html = c + '<span class="moreellipses">' + ellipsestext+ '&nbsp;</span><span class="morecontent"><span>' + h + '</span>&nbsp;&nbsp;<a href="" class="morelink">' + moretext + '</a></span>';
			$(this).html(html);
		}
	});

	$(".morelink").click(function(){
		if($(this).hasClass("less")) {
			$(this).removeClass("less");
			$(this).html(moretext);
		} else {
			$(this).addClass("less");
			$(this).html(lesstext);
		}
		$(this).parent().prev().toggle();
		$(this).prev().toggle();
		return false;
	});

	var textEl = $('.copy-js li.active a').text();
	$('.paste-js').text(textEl);

	$('.copy-js li a').on('click', function() {
		textEl = $(this).text();
		$('.paste-js').text(textEl);
	});

	$('#profile-form').validate({
		errorClass: "error",
		validClass: "valid",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			stFirstName: {
				required: true
			},
			stLastName: {
				required: true
			},
			stEmail: {
				required: true,
				email: true
			},
			stCurrPassword : {
				minlength : 4
			},
			re_password : {
				minlength : 4,
				equalTo : "#password"
			},
			new_password : {
				minlength : 4
			}
		}
	});

	resizing();
	function resizing() {
		if ($(window).width() < 768) {
			$('.result-list').addClass('grid');
			$('.grid-btns .btn-grid').parent().addClass('active');
			$('.grid-btns .btn-list').parent().removeClass('active');
		}
		if ($(window).width() > 767) {
			$('.result-list.type2').removeClass('grid');
		}

	}
	$(window).resize(function(){
		resizing();
	});

	sortSelectValue_ = 'progress';

	if ($('.result-list').length) {		
		
		getItemsList();
	}
    
    
    
	$(document).on('click', '.result-area .sort-by .dropdown-menu a', function(e) {
		
		var tmpText = $(this).text();
		$(this).closest('li').addClass('active').siblings('li').removeClass('active');
		$(this).closest('.dropdown').find('> .dropdown-toggle').text(tmpText);
		sortSelectValue_ = $(this).data('sortby');
		sortResults(sortSelectValue_, sortDirection_);

		e.preventDefault();
	});

	$(window).on('scroll', function(e) {
		var wTop = $(this).scrollTop(),
			wHeight = $(this).outerHeight(),
			wBtm = wTop + wHeight,
			resBtm;

		if ($('.result-list').length) {
			resBtm = $('.result-list').offset().top + $('.result-list').outerHeight();
			
			if (wBtm >= resBtm) {
				loadMoreItems();
			}
			
			
		}
	});

	$('body').on('click', '.btn-support, .btn-question', function(event) {
		if ($(window).width() < 1025) {
			$(this).toggleClass('active');
		}
		event.preventDefault();
	});

	$(document).on('mouseup touchend ',function (e){
		var container = $('.tooltip-holder');
		if (!container.is(e.target) && container.has(e.target).length === 0){
			container.parent().removeClass('active');
		}
	});

	cloneResHead();

	if (!sortDirection_) {
		$('.sort-direction .sort-btns .btn-abc').closest('li').addClass('active').siblings('li').removeClass('active');
	} else {
	
		$('.sort-direction .sort-btns .btn-cba').closest('li').addClass('active').siblings('li').removeClass('active');
	}

	$(document).on('click', '.result-list .btn-like, .slider .btn-like', function(e) {
		$(this).toggleClass('active');
		e.preventDefault();
		$(this).blur();
	});

	$(document).on('click', '.sort-direction .sort-btns a', function(e) {
		
		$(this).closest('li').addClass('active').siblings('li').removeClass('active');
	
		sortDirection_ = ($(this).is('.btn-abc')) ? false : true;
		
		sortResults(sortSelectValue_, sortDirection_);
        count = 0;
		e.preventDefault();
	});

	// center bootstrap modal
	function reposition() {
		var modal = $(this),
			dialog = modal.find('.modal-dialog');
		modal.css('display', 'block');
		dialog.css("margin-top", Math.max(10, ($(window).height() - dialog.height()) / 2));
	}
	$('.modal').on('show.bs.modal', reposition);
	$(window).on('resize', function() {
		$('.modal:visible').each(reposition);
	});

//	$('.btn-print, .print-link, .print-btn').click(function(event) {
//		event.preventDefault();
//		window.print();
//	});

	$('.enter-code label').has('small').addClass('with-small');

    $('.smooth-scroll').click(function(e){
        $.scrollTo('#results-box', 500);
        e.preventDefault();
    });
    
});

var items_ = [],
	sortSelectValue_,
	sortDirection_ = true, // true = cba, false = abc
	shownQty_ = 0;
var totalpet = 0;
function getItemsList() {
	
	//$.getJSON("http://crystal99/pawslikeme/assets/global/plugins/js/list.json", function(data){
	$.getJSON(domainName+"pet/getAllPet", function(data){
		var Baby = 0;
		var Young = 0;
		var Senior = 0;
		var Adult = 0;
		var Small = 0;
		var Medium = 0;
		var Large = 0;
		var Female = 0;
		var Male = 0;
		var purebred = 0;
		var shortCoat = 0;
		var medCoat = 0;
		var longCoat = 0;
		var sleepover = 0;
		var pdesc = 0;
		var coat = 0;
		var tlc = 0;
		
		
		
		for(var a=0;a<(data.age.length);a++)
		{
			if(data.age[a]['ageRange'] == 'Baby')
			{
				Baby = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Young')
			{
				Young = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Adult')
			{
				Adult = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Senior')
			{
				Senior = data.age[a]['total'];
			}
		}
		
		
		
		for(var s=0;s<(data.size.length);s++)
		{			
			if(data.size[s]['weight'] == 'Large')
			{
				Large = data.size[s]['size'];
			}
			if(data.size[s]['weight'] == 'Medium')
			{
				Medium = data.size[s]['size'];
			}
			if(data.size[s]['weight'] == 'Small')
			{
				Small = data.size[s]['size'];
			}
			
		}
		for(var g=0;g<(data.gender.length);g++)
		{			
			if(data.gender[g]['male'] == 1)
			{
				Male = data.gender[g]['gender_count'];
			}
			if(data.gender[g]['male'] == 0)
			{
				Female = data.gender[g]['gender_count'];
			}			
			
		}
		
		for(var p=0;p<(data.purebred.length);p++)
		{			
			if(data.purebred[p]['purebred'] == 0)
			{
				purebred = data.purebred[p]['purebred_count'];
			}
			if(data.purebred[p]['purebred'] == 1)
			{
				purebred = data.purebred[p]['purebred_count'];
			}
		}
		
		for(var p=0;p<(data.coat.length);p++)
		{			
			if(data.coat[p]['coat'] == 0)
			{
				coat = data.coat[p]['coat_count'];
			}
			if(data.coat[p]['weight'] == 1)
			{
				coat = data.coat[p]['coat_count'];
			}
		} 
		
		for(var s=0;s<(data.sleepover.length);s++)
		{			
			if(data.sleepover[s]['inAvlSleepOver'] == 0)
			{
				sleepover = data.sleepover[s]['sleepover_count'];
			}
			if(data.sleepover[s]['inAvlSleepOver'] == 1)
			{
				sleepover = data.sleepover[s]['sleepover_count'];
			}
			
		}
		
		// for(var t=0;t<(data.tlc.length);s++)
		// {			
			// if(data.tlc[t]['inSplNeeds'] == 0)
			// {
				// tlc = data.tlc[t]['tlc_count'];
			// }
			// if(data.tlc[t]['inSplNeeds'] == 1)
			// {
				// tlc = data.tlc[t]['tlc_count'];
			// }
			
		// }
		
		
		
	/*	for(var p=0;p<(data.pdesc.length);p++)
		{			
			if(data.pdesc[p]['descPersonality'] != '')
			{				
				pdesc = parseFloat(data.pdesc[p]['desc_count'])+parseFloat(pdesc);
			}
		}
		purebred=data.purebred.length;*/
		sleepover=data.sleepover.length;
		pdesc = data.pdesc.length;
		tlc = data.tlc.length;
		
		// if(data.gender[0]['gender_count']!=''){ male = data.gender[0]['gender_count'];}
		// if(data.gender[1]['gender_count']!=''){ female = data.gender[1]['gender_count'];}
		var totalpet = data.totalpetcount;
		
		$.each(data.items, function(key, value){		
			items_.push(value);
			
		$('#TotalBaby').text('('+Baby+')');
		$('#TotalYoung').text('('+Young+')');
		$('#TotalAdult').text('('+Adult+')');
		$('#TotalSenior').text('('+Senior+')');
		$('#TotalSmall').text('('+Small+')');
		$('#TotalMed').text('('+Medium+')');
		$('#TotalLarge').text('('+Large+')');
		$('#TotalMail').text('('+Male+')');
		$('#TotalFemale').text('('+Female+')');
		$('#purebred').text('('+purebred+')');
		$('#shortCoat').text('('+shortCoat+')');
		//$('#medCoat').text('('+medCoat+')');
		$('#medCoat').text('('+coat+')');
		$('#longCoat').text('('+longCoat+')');
		$('#sleepover_span').text('('+sleepover+')');
		$('#pdesc_count').text('('+pdesc+')');
		$('#tlc_span').text('('+tlc+')');		
		$('.filter-result h2').html('You have <a href="#"></a>'+totalpet+' Results');
//		<h2 id="title_label">You have <a href="#"> 8 Ideal Matches</a> in 190 Results and <a href="<?php echo site_url('user/my_favorites'); ?>">2 Favorites</a></h2>
		})
	}).success(function() {
		sortResults(sortSelectValue_, sortDirection_);
	});
}

function checkNumType() {
	$.each(items_, function(index, value) {
		value.likes = parseInt(value.likes);
	});
}
function bestMatch (asc){
    var $item = $('.result-list > li'),
        $r1 = $item.eq(0).find('.wrap .text'),
        $r2 = $item.eq(1).find('.wrap .text'),
        $r3 = $item.eq(2).find('.wrap .text');
		var success_progress = $('.top-match').length;
		var success_progress1 = '';
		

		
		var span_id=0;
		rankCount = 0;
		if(asc)
		{
		// for(var rank=0; rank<success_progress; rank++)
		// {
		  $('.rank').each(function(){
			  span_id = this.id;
			  $('#'+span_id).text(rankCount);
			 
			  rankCount++;
		 });
		}
		
	/*	else
		{
			
			rankCount--;
			$('.rank').each(function(){
					  span_id = this.id;
					  $('#'+span_id).text(rankCount);
					  console.log(rankCount);
					  rankCount--;
				 });
		}	
	*/
			//$('<span class="top-match test" id="'+value.progress+'">Top Match <span>#'+rank+'</span></span>').prependTo($item.eq(rank).find('.wrap .text'));
		//}
   // $('span.top-match').remove();
    // $('<span class="top-match test">Top Match <span>#1</span></span>').prependTo($r1);
    // $('<span class="top-match test">Top Match <span>#2</span></span>').prependTo($r2);
    // $('<span class="top-match test">Top Match <span>#3</span></span>').prependTo($r3);
}

function sortResults(prop, asc) {	
	switch(prop) {
		case 'likes':
			items_.sort(sort_by('likes', asc, parseInt));
		break;
		case 'progress':
			items_.sort(sort_by('progress', asc, parseInt));
		break;
		case 'date':
			//alert('Arrival Date: This one is missing and ranks by date posted to the site.');
			//items_.sort(sort_by('date', asc, function(a,b){ return new Date(a.date) - new Date(b.date);}));
			
			if(asc)
			{
				
				items_.sort(function(a,b){
					
				  // Turn your strings into dates, and then subtract them
				  // to get a value that is either negative, positive, or zero.
				  return new Date(a.date) - new Date(b.date);
				});

			}
			else
			{
			
				items_.sort(function(a,b){
								
				
				  // Turn your strings into dates, and then subtract them
				  // to get a value that is either negative, positive, or zero.
			    return new Date(b.date) - new Date(a.date);
				});
			}
		break;
		case 'name':
		default:
			// by name abc
			items_.sort(sort_by('name', asc, function(a){return a.toUpperCase()}));
		break;
	}
	

	showFirst10Results(asc);
	var success_progress = $('.progress-bar-success').length;

	//bestMatch (asc);
}

function showFirst10Results(asc) {
	var tmp = '';

	shownQty_ = 0;
aCheck = new Array();

	$.each(items_, function(index, value) {
		console.log(index+"check"+value.id);
		console.log(aCheck);
		if(!jQuery.inArray( value.id, aCheck ))
		{
			aCheck.pop(value.id);
		}
		else
		{
			aCheck.push(value.id);
			if (index >= 10) {
			return false;
			} else {
			
			tmp += itemTemplate(value, index);
			
			shownQty_ = (index+1);
			}
		}
		

		
	});
	
	$('.result-list').html(tmp);
	rankCount = 1;
	// if(asc)
		// {
			
		
		/*  $('.rank').each(function(){
			 span_id = this.id;
			  $('#'+span_id).text(rankCount);
			 
			  rankCount++;
		 });*/
		 
		var ids_array_asc = [];
	
			$('.rank').each(function(){
					  span_id = this.id;
					  ids_array_asc.push(span_id);
					
				 });



ids_array_asc.sort(function(a, b){return b - a});

for(var d=0;d<ids_array_asc.length;d++)
{	
	var l = d + 1;
	console.log(ids_array_asc[d]);
	$('#'+ids_array_asc[d]).text('#'+l);
}
//}

	
	bgImage('.visual .bg, .result-list .img');
	progressBar();

}

var sort_by = function(field, reverse, primer){
	var key = primer ? 
		function(x) {return primer(x[field])} :
		function(x) {return x[field]};

	reverse = !reverse ? 1 : -1;

	return function (a, b) {		
		return a = key(a), b = key(b), reverse * ((a > b) - (b > a));
	}
}

function loadMoreItems() {
	var itemLength = items_.length,
		j = shownQty_,
		tmp = '';

	for (var i=0; i<10; i++) {
		if (j >= itemLength) {
			break;
		} else {
			tmp += itemTemplate(items_[j], j);
			j++;
		}
	}
	shownQty_= j;
	$('.result-list').append(tmp);		
	rankCountMore = 0;
	var ids_array = [];
	
	$('.rank').each(function(){
					  span_id = this.id;
					  var split_id = span_id.split('_');
					  ids_array.push({'key': split_id[1],
					  'value': split_id[0]});
					 
				 });

var rank_desc = [];
ids_array.sort(function(a, b){return b.key - a.key});

if(ids_array.length>0)
{
	for(var d=0;d<ids_array.length;d++)
	{

		var l = d + 1;
		$('#'+ids_array[d].value+'_'+ids_array[d].key).text('#'+l);
	}
}	
		
	
	bgImage('.visual, .result-list .img');
	progressBar();
}

function itemTemplate(value, index) {
	
	//var likes = 0;
	//alert(value+"check"+index);
	//acheck.push(value.id);
	if(value.likes == 1)
	{
	
	
		var like_href = '<a href="#" id="like_'+value.id+'" style="color:#ff9334;cursor:pointer;pointer-events:none;"><i class="fa fa-paw" aria-hidden="true"></i> Give a PawsUp!</a> <span class="count" id="count_'+value.id+'">1</span>';
		$("#like_"+value.id).css({'color': '#686872','cursor': 'pointer', 'pointer-events' : 'none'});	
	}
	else
	{
		var like_href = '<a href="#" id="like_'+value.id+'" onclick="like(\'' + value.id + '\');" style="color:#686872;"><i class="fa fa-paw" aria-hidden="true"></i> Give a PawsUp!</a> <span class="count" id="count_'+value.id+'">0</span>';
		$("#like_"+value.id).css({'color': '#686872'});				
	}
	
	

	
	//if (value.image.indexOf('crystal99') > -1) {
	if (value.image.indexOf('crystal99') > -1) {
		//value.image = domainName+'assets/global/plugins/'+value.image;
		value.image;
	}
	else
	{
		//value.image = domainName+'assets/global/plugins/'+value.image;
		value.image;
	}
	

	if(value.progress > 79)
	{
		
		count = count + 1;
		if(index < 3){
		rank = '<span class="top-match test">Top Match <span class="rank" id="'+value.id+'_'+value.progress+'"></span>';
		}
		else
		{
			rank='';
		}
	}
	else
	{
		
		rank = '';
	}
	
	//value.image = domainName+'assets/global/plugins/'+value.image;
	var tmpProcentStr = (value.progress > 80) ? '<span class="add-str">match</span>' : '',
		addProcentClass = (value.progress < 24) ? 'low very-low' : (value.progress < 66) ? 'low' : '';
	return '<li><header class="holder clearfix"><h2><a href="pet-profile.html">' + value.name + '</a></h2><em class="status-line">'+ value.status +'</em></header><div class="wrap"><div class="img"><img src="' + value.image + '" alt="image description" name="image' + value.id + '" id="image' + value.id + '"><a href="#" class="btn-like ' + value.like_image + '"><i class="fa fa-heart" aria-hidden="true"></i></a><a class="link-to-profile" href="'+ value.profilelink +'"><span class="sr-only">View Profile</span></a></div><div class="text">'+rank+'</span><ul class="top-list"><li><div class="progress progress-bar-default"><div class="progress-bar" role="progressbar" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100" style="width:90%"><span class="procent">???</span></div></div></li><li><a href="#" class="take"><i class="fa fa-bar-chart" aria-hidden="true"></i>Take the Quiz to see your match!</a></li></ul>' + value.top_match + '<div class="progress"><div class="progress-bar progress-bar-success '+ addProcentClass +'" role="progressbar" aria-valuenow="' + value.progress + '" aria-valuemin="0" aria-valuemax="100" style="width:' + value.progress + '%"><span class="procent">' + value.progress + '%' + tmpProcentStr + '</span></div></div><div class="wrap-text">' + value.descr + '</div><ul class="list-inline"><li>' + value.list_inline_1 + '</li><li>' + value.list_inline_2 + '</li><li>' + value.list_inline_3 + '</li></ul><ul class="btn-list"><li class="' + value.active_btn_1 + '"><a href="'+ value.profilelink +'" class="like"><i class="fa fa-search-plus" aria-hidden="true"></i> View Profile</a></li><li class="' + value.active_btn_2 + '"><a href="#" data-toggle="modal" data-target="#modal-share-pet" aria-hidden="true" class="send" onclick="send_message(\'' + value.id + '\');"><i class=fa fa-envelope-o" aria-hidden="true"></i> Send Message</a></li><li class="' + value.active_btn_3 + '">'+like_href+'<a href="#" class="btn-support"><i class="fa fa-question-circle-o" aria-hidden="true"></i><span class="tooltip-holder"><span class="tooltip-wrap">Click to PawsUp! (like) <br>and help this dog get adopted.</div></div></a></li></ul></span></span></li>';
	

}

function bgImage(classBlock) {
	/*$(classBlock).each(function() {
		if ( $(this).children('img').length ) {
			$(this).css('background-image', 'url(' + $(this).find('> img').attr('src') + ')').find('> img').hide();
		}
	});*/
}

function progressBar() {
	$('.result-list .progress .progress-bar').each(function() {
		var valueNow = $(this).attr('aria-valuenow'),
			_this = $(this);
			
		if (valueNow < 80 && valueNow >= 61) {
			_this.removeClass('progress-bar-success').addClass('progress-bar-warning');
		} else if (valueNow <= 60) {
			_this.removeClass('progress-bar-success').addClass('progress-bar-danger');
		}
		
	});
	
	
}

function cloneResHead() {
	var $sortPart = $('.sort-part'),
		$head = $('.filter-result > header > h2');

	if ($('.filter-result').length && $('.res-header').length) {
		if ($sortPart.length) {
			$sortPart.clone().appendTo('.res-header .clone-f');
		}
		if ($head.length) {
			$head.clone().appendTo('.res-header .clone-h');
		}
	}
}
// Added By krutika for login model // 

	$('#loginForm').validate({
		//ignore: ":hidden:not(#keycode)",
		errorClass: "error",
		validClass: "valid",
		errorElement: 'span', //default input error message container       
		ignore: "",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			stCurrPassword: {
				required: true
			},
			stLoginEmail: {
				required: true,
				email: true
			},
			
		'g-recaptcha-response':{
                    required:true,
                },
			},
				  messages: { 
              
                'g-recaptcha-response':{
                    required:'Please Enter Captcha.',
                }               
            },
			
			 errorPlacement: function(error, element) {
                if (element.attr("name") == "g-recaptcha-response") {                  
                    error.insertAfter($('.g-recaptcha'));
                }
                else
                {
                    error.insertAfter(element);                    
                }              
            },
			
			 submitHandler: function(form) {
                form.submit();
            }
			
			
			/* "hiddencode": {
        required: function() {
        if(grecaptcha.getResponse() == '') {
		
            return true;
        } else {  return false; }
        } 
		} */
		

	});

	
	$('#feedback-form').validate({
		//ignore: ":hidden:not(#keycode)",
		errorClass: "error",
		validClass: "valid",
		errorElement: 'span', //default input error message container       
		
		highlight: function(element) {
			$(element).addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).removeClass('error').addClass('valid');
		},
		rules: {
			stUserFeedback: {
				required: true
			},
			
			},
				 submitHandler: function(form) {
                form.submit();
            }
		

	});

	var loginForm = $( "#loginForm" ).validate();
	$('#loginForm .form-control').on('keyup blur', function () {
		$('#loginForm .form-control').each(function(index, el) {
			
			if (loginForm.form() && !$(this).val().length == 0) {
				//$('#loginForm').find('.btn').removeClass('loginForm');
				$('#loginForm').find('.btn').removeClass('btn btn-primary');
			} else {
				
				//$('#loginForm').find('.btn').addClass('disabled');
				$('#loginForm').find('.btn').addClass('btn btn-primary');
			}
		});
	});

var rowPet      = 0;
$( "#addmorePet" ).click(function() {	
rowPet++;

 $('.petAddMore').append('<div id="pet_'+rowPet+'" class="petAddMoreClass"><div class="row"><div class="col-sm-4"><label>My Current Pets</label></div><div class="col-sm-8"><input type="text"  class="form-control" name="Pet['+rowPet+'][stPetName]" placeholder="Pet Name"></div></div><div class="row"><div class="col-sm-4"><label> </label></div><div class="col-sm-8"><select class="selectpicker" name="Pet['+rowPet+'][inPetType]"><option value="0">Select Pet Type</option><option value="1">Dog</option><option value="2">Cat</option><option value="3">Small Animal</option><option value="4">Bird</option><option value="5">Reptile</option><option value="6">Horse</option><option value="7">Piggy</option><option value="8">Other</option></select></div></div></div>');
 
 
 	$('.selectpicker').selectpicker({
		style: 'form-control',
		size: 4
	});
});

function updatePassword()
{
	var stCurrPassword = $('#stCurrPassword').val();
	var new_pass = $('#password').val();
	var re_new_pass = $('#re_password').val();
	
	if(new_pass == '' || re_new_pass == '' || stCurrPassword == '') 
	{
		
			$('#msg').html('<div class="alert alert-warning"><strong>Warning!</strong> Please enter current & new password.</div>');
		return false;
	}
	else if(new_pass!=re_new_pass)	
	{
		
		return false;
	}
	else
	{
	
	$.ajax({
		
	url: domainName+'user/update_password' ,
	data:'stCurrPassword='+stCurrPassword+'&new_pass='+new_pass+'&re_new_pass='+re_new_pass,
	async: false,
	type: "POST",			 			 
	success: function(data) {		
	var trimdata = $.trim(data);
	if(trimdata == 'Success')
	{
		
		$('#msg').html('<div class="alert alert-success"><strong>Success!</strong> Password has been successfully updated.</div>');
	}
	else if(trimdata == 'not match')
	{
		
		$('#msg').html('<div class="alert alert-warning"><strong>Warning!</strong> Current Password does not match.</div>');
	}
	else
	{
		$('#msg').html('<div class="alert alert-danger"><strong>Error!</strong> Some Error occurred.</div>');
		
	}
	
	
	}
			
	});
  }
}


$('#showForgot').click(function() {

	$('#modal05').hide();
	$('#modalForgotPw').addClass('in');
	$('#modalForgotPw').css({'display': 'block','padding-right': '17px'});
	//$('#modalForgotPw').css({'padding-right': '17px'});	
	$('#modalForgotPw').show();
});

$('#closeForgot').on("click", function () {
$('div.modal-backdrop').remove();

	$('#modalForgotPw').css({'display':'none'});
	$('#modal05').css({'display':'none'});
});



	$('#reset-form').validate({
		errorClass: "error",
		validClass: "valid",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			
			password: {
				required: true,				
				minlength : 4
			},
			
			rpassword : {
				minlength : 4,
				equalTo : "#register_password"
			},
			
		}
	});
	
		$('#forgotPwForm').validate({
		errorClass: "error",
		validClass: "valid",
		highlight: function(element) {
			$(element).parent().addClass('error').removeClass('valid');
		},
		unhighlight: function(element) {
			$(element).parent().removeClass('error').addClass('valid');
		},
		rules: {
			
			stForgotEmail: {
				required: true,				
				email: true
			},
			
			
		}
	});

	
 $('#resend').click(function(){
	
	 	$.ajax({
	
	url: domainName+"quiz/resend_code" ,
	async: false,
	type: "POST",
	data :{
      edit: 'yes',
      
   },	
	success: function(data) {
		var trimdata = $.trim(data);
		 if(trimdata=='Success')
		 {
			 $("#success").addClass('alert alert-success');
			 $('#success').html('Validation code has been resend.');
		 }
		 else
		 {
			 $("#error").addClass('alert alert-danger');
			 $('#error').html('There is some error occurred.');
		 }
	}
});
});

$('#clear_filter').click(function(){
	$('input:checkbox').removeAttr('checked');
	//$('#selected_option').removeAttr('checked');
	//$('#filter_by_loc').find('option:selected').removeAttr('selected');
//	$("#filter_by_loc option:first").attr('selected','selected');
	
//	var myElement = $('select[name="filter_by_loc"]');
//alert(myElement.find('option').last().val());
//myElement.val(myElement.find('option').last().val());

	$("input[type=range]").val(0);
		$.getJSON(domainName+"pet/getAllPet?flag=1", function(data){
		var Baby = 0;
		var Young = 0;
		var Senior = 0;
		var Adult = 0;
		if(data.Baby != ''){var Baby = data.Baby;}else{var Baby = 0;}
		if(data.Young != ''){var Young = data.Young;}else{var Young = 0;}
		if(data.Senior != ''){var Senior = data.Senior;}else{var Senior = 0;}
		if(data.Adult != ''){var Adult = data.Adult;}else{var Adult = 0;}

						
		//chkSmall
		
		var totalpet = data.totalpetcount;
		
		$.each(data.items, function(key, value){		
			items_.push(value);
			
				var Baby = 0;
		var Young = 0;
		var Senior = 0;
		var Adult = 0;
		var Small = 0;
		var Medium = 0;
		var Large = 0;
		var Female = 0;
		var Male = 0;
		var purebred = 0;
		var shortCoat = 0;
		var medCoat = 0;
		var longCoat = 0;
		var sleepover = 0;
		var pdesc = 0;
		var coat = 0;
		var tlc = 0;
		
		
		
		for(var a=0;a<(data.age.length);a++)
		{
			if(data.age[a]['ageRange'] == 'Baby')
			{
				Baby = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Young')
			{
				Young = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Adult')
			{
				Adult = data.age[a]['total'];
			}
			if(data.age[a]['ageRange'] == 'Senior')
			{
				Senior = data.age[a]['total'];
			}
		}
		
		
		
		for(var s=0;s<(data.size.length);s++)
		{			
			if(data.size[s]['weight'] == 'Large')
			{
				Large = data.size[s]['size'];
			}
			if(data.size[s]['weight'] == 'Medium')
			{
				Medium = data.size[s]['size'];
			}
			if(data.size[s]['weight'] == 'Small')
			{
				Small = data.size[s]['size'];
			}
			
		}
		for(var g=0;g<(data.gender.length);g++)
		{			
			if(data.gender[g]['male'] == 1)
			{
				Male = data.gender[g]['gender_count'];
			}
			if(data.gender[g]['male'] == 0)
			{
				Female = data.gender[g]['gender_count'];
			}			
			
		}
		
		for(var p=0;p<(data.purebred.length);p++)
		{			
			if(data.purebred[p]['purebred'] == 0)
			{
				purebred = data.purebred[p]['purebred_count'];
			}
			if(data.purebred[p]['purebred'] == 1)
			{
				purebred = data.purebred[p]['purebred_count'];
			}
		}
		
		for(var p=0;p<(data.coat.length);p++)
		{			
			if(data.coat[p]['coat'] == 0)
			{
				coat = data.coat[p]['coat_count'];
			}
			if(data.coat[p]['weight'] == 1)
			{
				coat = data.coat[p]['coat_count'];
			}
		} 
		
		for(var s=0;s<(data.sleepover.length);s++)
		{			
			if(data.sleepover[s]['inAvlSleepOver'] == 0)
			{
				sleepover = data.sleepover[s]['sleepover_count'];
			}
			if(data.sleepover[s]['inAvlSleepOver'] == 1)
			{
				sleepover = data.sleepover[s]['sleepover_count'];
			}
			
		}
		
		// for(var t=0;t<(data.tlc.length);s++)
		// {			
			// if(data.tlc[t]['inSplNeeds'] == 0)
			// {
				// tlc = data.tlc[t]['tlc_count'];
			// }
			// if(data.tlc[t]['inSplNeeds'] == 1)
			// {
				// tlc = data.tlc[t]['tlc_count'];
			// }
			
		// }
		
		
		
	/*	for(var p=0;p<(data.pdesc.length);p++)
		{			
			if(data.pdesc[p]['descPersonality'] != '')
			{				
				pdesc = parseFloat(data.pdesc[p]['desc_count'])+parseFloat(pdesc);
			}
		}
		purebred=data.purebred.length;*/
		sleepover=data.sleepover.length;
		pdesc = data.pdesc.length;
		tlc = data.tlc.length;
		
		$('#TotalBaby').text('('+Baby+')');
		$('#TotalYoung').text('('+Young+')');
		$('#TotalAdult').text('('+Adult+')');
		$('#TotalSenior').text('('+Senior+')');
		$('#TotalSmall').text('('+Small+')');
		$('#TotalMed').text('('+Medium+')');
		$('#TotalLarge').text('('+Large+')');
		$('#TotalMail').text('('+Male+')');
		$('#TotalFemale').text('('+Female+')');
		$('#purebred').text('('+purebred+')');
		$('#shortCoat').text('('+shortCoat+')');
		//$('#medCoat').text('('+medCoat+')');
		$('#medCoat').text('('+coat+')');
		$('#longCoat').text('('+longCoat+')');
		$('#sleepover_span').text('('+sleepover+')');
		$('#pdesc_count').text('('+pdesc+')');
		$('#tlc_span').text('('+tlc+')');
		
			
		$('.filter-result h2').html('You have '+totalpet+' Results');
//		<h2 id="title_label">You have <a href="#"> 8 Ideal Matches</a> in 190 Results and <a href="<?php echo site_url('user/my_favorites'); ?>">2 Favorites</a></h2>
		})
	}).success(function() {
		sortResults(sortSelectValue_, sortDirection_);
	});
	
});

	
function send_message(id)
{
	$('#petId').val(id);	
}

function like(id)
{
	
		 	$.ajax({
	
	url: domainName+"pet/pet_like" ,
	async: false,
	type: "POST",
	data :{
      id: id,
      
   },	
	success: function(data) {
		var trimdata = $.trim(data);
		var split_data = trimdata.split('@');
		 if(split_data[0]=='Success')
		 {
			
			 $("#success").addClass('alert alert-success');			 
			 $('#success').html('Thanks For the paws up.');
			 $("#like_"+id).removeAttr("onclick");
			 $("#like_"+id).css({'color': '#ff9334','cursor': 'pointer', 'pointer-events' : 'none'});		 
			 $('#count_'+id).text(1);
		 }
		 else
		 {
			 $("#error").addClass('alert alert-danger');
			 $('#error').html('There is some error occurred.');
		 }
	}
});
}

function setSearchPetCountHeadline(count)
{
	var msg;

	if (count) {
		msg = 'You have ' + count + ' result' + (count > 1 ? 's' : '');
	} else {
		msg = 'No pets match your search criteria';
	}

	$('.search-result-count').html(msg);
}
