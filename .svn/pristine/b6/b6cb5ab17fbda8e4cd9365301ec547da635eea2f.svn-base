<?php 

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Wsdl extends CI_Controller {

    public function __construct() {
        parent::__construct();
        $this->output->enable_profiler(false);
        $this->load->library('form_validation');
        $this->load->library('common_function');
		$this->load->library('BrowserDetection');
        $this->load->helper('url');
        $this->load->model('common_model');
        $this->load->model('user_model');
        $this->load->model('wsdl_model');
        $this->load->model('orgtrasnportation_model');  
		$this->load->helper('smstest');
		error_reporting(0);		 
    }

    public function index() {
        
    }

#################### SIGN IN START ####################	

    public function signin_view() {
        $this->load->view('wsdl/signin');
    }

    public function signin($email_id = '', $pswd = '', $facebook_id = '',$google_id = '', $device_info = '') {

        /*
          $_POST['facebook_id']	=	'';
          $_POST['email_id']	=	'ghanshyam.maurya@pulsesolutions.net';
          $_POST['pswd'] 		=	'123456'; */

        $email_id = isset($_POST['email_id']) ? $_POST['email_id'] : '';
        $pswd = isset($_POST['pswd']) ? $_POST['pswd'] : '';
        $facebook_id = isset($_POST['facebook_id']) ? $_POST['facebook_id'] : '';
		$google_id = isset($_POST['google_id']) ? $_POST['google_id'] : '';
		$device_info = isset($_POST['device_info']) ? $_POST['device_info'] : '';
		extract(json_decode($device_info, true));
		$deviceinfo = $Model.' '.$OS;

		
		
		
        $user_details = array();
		$user_orgid=array();
        $data = array();
		$user_activity = array();

        $user_details['email'] = isset($email_id) ? $this->common_function->custom_htmlentities($email_id) : '';
        $user_details['password'] = isset($pswd) ? $this->common_function->custom_htmlentities($pswd) : '';
        $user_details['facebook_id'] = isset($facebook_id) ? $this->common_function->custom_htmlentities($facebook_id) : '';
		$user_details['google_id'] = isset($google_id) ? $this->common_function->custom_htmlentities($google_id) : '';
		$user_details['device_info'] = isset($device_info) ? $device_info : '';
		
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');
		$this->form_validation->set_rules('device_info', 'Device Info', 'trim|required');


        if ($this->form_validation->run() == FALSE) {
			$this->form_validation->set_error_delimiters('', '');
            $data['err_msg'] = validation_errors();
			
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        } else {
            if (isset($facebook_id) && $facebook_id != '' || isset($google_id) && $google_id != '') { 
                $result = $this->wsdl_model->user_login($user_details);

				//print_r($result); die;
                if (isset($result) && !empty($result)) {
                    /* output in necessary format */
					
					/*
					$user_activity = array("in_user_id" 	=> $result['user_details']['userid'],
                       						   "st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											   "st_device_info" => $user_details['device_info'],
											   "dt_created" 	=> date('Y-m-d H:i:s')                   
                   							 );
					$this->user_model->add_user_activity($user_activity);
					*/
					$user_orgid=$this->wsdl_model->get_user_orgid($result['user_details']['userid']);
						if(count($user_orgid) > 0)
						{
							$isOrgAccount = 1;
						}
						else{
							$isOrgAccount = 0;
						}
					$get_userdts = $this->wsdl_model->get_userdts($result['user_details']['userid']);
					
					$country = $this->common_model->get_country(trim($get_userdts['st_zip']));
					
					//print_r($country); die;  // US, IN,CA
					
					
					if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
					if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
					if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }
					
					$user_activity = array();	
					//$ua	=	new BrowserDetection();
					$user_activity = array( "in_user_id" 	=> $result['user_details']['userid'],
											"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											//"st_device_info" => $ua->getName().' '.$ua->getVersion(),
											//"st_device_info" => $ua->getPlatform().' App',
											 "st_device_info" => $deviceinfo,
											"dt_created" 	=> date('Y-m-d H:i:s')                      
										 );					
					$this->user_model->add_user_activity($user_activity);
					
                    
					$request_board_status = $this->common_model->transport_routing_enable($result['user_details']['userid']); 
					
					
					
					if(isset($request_board_status) && $request_board_status == 2) {
					$tcrequestboardflag = '1';
					}
					else{
						$tcrequestboardflag = '0';
					}
					$tcrequestboardurl = $this->config->item('base_url') .'wsdl/tcrequestboard/'.$result['user_details']['wsdl_token'];
					$leavefeedbackurl = $this->config->item('base_url') . 'wsdl/leavefeedback/'.$result['user_details']['wsdl_token'];
					$charitabletrackingurl = $this->config->item('base_url') . 'wsdl/charitabletracking/'.$result['user_details']['wsdl_token'];
					
					
					$inpersonvolunteer = $this->config->item('base_url') . 'wsdl/inpersonvolunteer/'.$result['user_details']['wsdl_token'];
					$virtualsupportvolunteer = $this->config->item('base_url') . 'wsdl/virtualsupportvolunteer/'.$result['user_details']['wsdl_token'];
					$fosterhomeprofile = $this->config->item('base_url') . 'wsdl/fosterhomeprofile/'.$result['user_details']['wsdl_token'];
					
					$data = array("result" => 1, "user_id" => (int)$result['user_details']['userid'], "wsdl_token" => $result['user_details']['wsdl_token'],"email" => $result['user_details']['email'],"f_name" => $result['user_details']['first_name'],"user_orgid"=>$user_orgid,"tcrequestboardurl"=>$tcrequestboardurl,"leavefeedbackurl"=>$leavefeedbackurl,"charitabletrackingurl"=>$charitabletrackingurl,"inpersonvolunteer"=>$inpersonvolunteer,"virtualsupportvolunteer"=>$virtualsupportvolunteer,"fosterhomeprofile"=>$fosterhomeprofile,"tcrequestboardflag"=>$tcrequestboardflag,"profile_image" => $result['user_details']['profile_image'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg,"isOrgAccount"=>$isOrgAccount);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } 
				
				elseif(empty($result))
				{  
					$result1 = $this->wsdl_model->email_exists($user_details);
					
					 if (isset($result1) && !empty($result1)) {						 
						$this->wsdl_model->update_users($user_details);
						$result = $this->wsdl_model->user_login($user_details);
						$user_orgid=$this->wsdl_model->get_user_orgid($result['user_details']['userid']);
						if(count($user_orgid) > 0)
						{
							$isOrgAccount = 1;
						}
						else{
							$isOrgAccount = 0;
						}
						$get_userdts = $this->wsdl_model->get_userdts($result['user_details']['userid']);
					
					    $country = $this->common_model->get_country(trim($get_userdts['st_zip']));						
						if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
						if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
						if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }
						
						$request_board_status = $this->common_model->transport_routing_enable($result['user_details']['userid']); 
						if(isset($request_board_status) && $request_board_status == 2) {
						$tcrequestboardflag = '1';
						}
						else{
							$tcrequestboardflag = '0';
						}
						
						
						$user_activity = array();	
						//$ua	=	new BrowserDetection();
						$user_activity = array("in_user_id" 	=> $result['user_details']['userid'],
												"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
												//"st_device_info" => $ua->getName().' '.$ua->getVersion(),	
												//"st_device_info" => $ua->getPlatform().' App',
												 "st_device_info" => $deviceinfo,
												"dt_created" 	=> date('Y-m-d H:i:s')                      
											 );					
						$this->user_model->add_user_activity($user_activity);
						
						$tcrequestboardurl = $this->config->item('base_url') .'wsdl/tcrequestboard/'.$result['user_details']['wsdl_token'];
						$leavefeedbackurl = $this->config->item('base_url') . 'wsdl/leavefeedback/'.$result['user_details']['wsdl_token'];
						$charitabletrackingurl = $this->config->item('base_url') . 'wsdl/charitabletracking/'.$result['user_details']['wsdl_token'];
						
						$inpersonvolunteer = $this->config->item('base_url') . 'wsdl/inpersonvolunteer/'.$result['user_details']['wsdl_token'];
						$virtualsupportvolunteer = $this->config->item('base_url') . 'wsdl/virtualsupportvolunteer/'.$result['user_details']['wsdl_token'];
						$fosterhomeprofile = $this->config->item('base_url') . 'wsdl/fosterhomeprofile/'.$result['user_details']['wsdl_token'];
						
						$data = array("result" => 1, "user_id" => (int)$result['user_details']['userid'], "wsdl_token" => $result['user_details']['wsdl_token'], "f_name" => $result['user_details']['first_name'],"user_orgid"=>$user_orgid,"tcrequestboardurl"=>$tcrequestboardurl,"leavefeedbackurl"=>$leavefeedbackurl,"charitabletrackingurl"=>$charitabletrackingurl,"inpersonvolunteer"=>$inpersonvolunteer,"virtualsupportvolunteer"=>$virtualsupportvolunteer,"fosterhomeprofile"=>$fosterhomeprofile,"tcrequestboardflag"=>$tcrequestboardflag,"profile_image" => $result['user_details']['profile_image'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg,"isOrgAccount"=>$isOrgAccount);
						header('Content-type: application/json');
						echo json_encode($data);	
                	} 
					
					else {					  
						$data['msg'] = 'New User.';
						$data = array("result" => 3, "msg" => $data['msg']);
						header('Content-type: application/json');
						echo json_encode($data);
               		 }					
				}				
				
            } elseif (isset($pswd) && $pswd != '') {
                		$result = $this->wsdl_model->user_login($user_details);
						
						

                if (isset($result) && !empty($result)) { 
               
					$get_userdts = $this->wsdl_model->get_userdts($result['user_details']['userid']);
					
					$country = $this->common_model->get_country(trim($get_userdts['st_zip']));
					
					//print_r($country); die;  // US, IN,CA
					
					
					if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
					if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
					if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }
					
					$user_orgid=$this->wsdl_model->get_user_orgid($result['user_details']['userid']);
					$request_board_status = $this->common_model->transport_routing_enable($result['user_details']['userid']); 
					if(isset($request_board_status) && $request_board_status == 2) {
					$tcrequestboardflag = '1';
					}
					else{
						$tcrequestboardflag = '0';
					}				
					
					
					$user_activity = array();	
					//$ua	=	new BrowserDetection();
					$user_activity = array( "in_user_id" 	=> $result['user_details']['userid'],
											"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											//"st_device_info" => $ua->getName().' '.$ua->getVersion(),
											//"st_device_info" => $ua->getPlatform().' App',
											 "st_device_info" => $deviceinfo,
											"dt_created" 	=> date('Y-m-d H:i:s')                      
										 );					
					$this->user_model->add_user_activity($user_activity);
					if(count($user_orgid) > 0)
					{
						$isOrgAccount = 1;
					}
					else{
						$isOrgAccount = 0;
					}
					
					
					/*
					$user_activity = array("in_user_id" 	=> $result['user_details']['userid'],
                       						   "st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											   "st_device_info" => $user_details['device_info'],
											   "dt_created" 	=> date('Y-m-d H:i:s')                      
                   							 );					
					$this->user_model->add_user_activity($user_activity);				
					*/
					$tcrequestboardurl = $this->config->item('base_url') .'wsdl/tcrequestboard/'.$result['user_details']['wsdl_token'];
					$leavefeedbackurl = $this->config->item('base_url') . 'wsdl/leavefeedback/'.$result['user_details']['wsdl_token'];
					$charitabletrackingurl = $this->config->item('base_url') . 'wsdl/charitabletracking/'.$result['user_details']['wsdl_token'];
                    
					$inpersonvolunteer = $this->config->item('base_url') . 'wsdl/inpersonvolunteer/'.$result['user_details']['wsdl_token'];
					$virtualsupportvolunteer = $this->config->item('base_url') . 'wsdl/virtualsupportvolunteer/'.$result['user_details']['wsdl_token'];
					$fosterhomeprofile = $this->config->item('base_url') . 'wsdl/fosterhomeprofile/'.$result['user_details']['wsdl_token'];
					
					
					$data = array("result" => 1, "user_id" => (int)$result['user_details']['userid'], "wsdl_token" => $result['user_details']['wsdl_token'],"email" => $result['user_details']['email'],"f_name" => $result['user_details']['first_name'],"user_orgid"=>$user_orgid,"tcrequestboardurl"=>$tcrequestboardurl,"leavefeedbackurl"=>$leavefeedbackurl,"charitabletrackingurl"=>$charitabletrackingurl,"inpersonvolunteer"=>$inpersonvolunteer,"virtualsupportvolunteer"=>$virtualsupportvolunteer,"fosterhomeprofile"=>$fosterhomeprofile,"tcrequestboardflag"=>$tcrequestboardflag,"profile_image" => $result['user_details']['profile_image'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg,"isOrgAccount"=>$isOrgAccount);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } 
				
				   else {
                    $data['err_msg'] = 'Invalid username or password.';
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } 
			
			       else {
					$data = array("result" => 2, "err_msg" => 'One of parameter missing');
					header('Content-type: application/json');
					echo json_encode($data);
            }
			
        }
    }

#################### SIGN IN END ####################
#################### SIGN UP START #######################

    public function signup_view() {
        $this->load->view('wsdl/signup');
    }

    public function signup($f_name = '', $l_name = '', $email_id = '', $pswd = '', $organization_name = '', $phoneno = '', $device_info = '') {

        /* $_POST['f_name'] = 'fname';
          $_POST['l_name'] = 'lname';
          $_POST['email_id'] = 'testing@gmail.com';
          $_POST['pswd'] = '123456';
          $_POST['confirm_pswd'] = '123456'; */

        $f_name = isset($_POST['f_name']) ? $_POST['f_name'] : '';
        $l_name = isset($_POST['l_name']) ? $_POST['l_name'] : '';
        $email = isset($_POST['email_id']) ? $_POST['email_id'] : '';
        $password = isset($_POST['pswd']) ? $_POST['pswd'] : '';
        $organization_name = isset($_POST['organization_name']) ? $_POST['organization_name'] : '';
        $in_volunteer_type = isset($_POST['in_volunteer_type']) ? $_POST['in_volunteer_type'] : '';
        $zipcode = isset($_POST['zipcode']) ? strtoupper($_POST['zipcode']) : '';		
		$phoneno = isset($_POST['phoneno']) ? $_POST['phoneno'] : '';
		$device_info = isset($_POST['device_info']) ? $_POST['device_info'] : '';
		extract(json_decode($device_info, true));
		$deviceinfo = $Model.' '.$OS;
        
		
		$flgRescueRelayTransport = isset($_POST['flgRescueRelayTransport']) ? $_POST['flgRescueRelayTransport'] : '';
		$available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
		$rescue_relay_in_ride_radius = isset($_POST['rescue_relay_in_ride_radius']) ? $_POST['rescue_relay_in_ride_radius'] : '';
		$rescue_zipcode = isset($_POST['rescue_zipcode']) ? $_POST['rescue_zipcode'] : '';
		$flgLocalRideTransport = isset($_POST['flgLocalRideTransport']) ? $_POST['flgLocalRideTransport'] : '';
		$local_ride_radius = isset($_POST['local_ride_radius']) ? $_POST['local_ride_radius'] : '';
		$local_ride_mobile_number = isset($_POST['local_ride_mobile_number']) ? $_POST['local_ride_mobile_number'] : '';
		$flgFosterHome = isset($_POST['flgFosterHome']) ? $_POST['flgFosterHome'] : '';
		$prefer_animal = isset($_POST['prefer_animal']) ? $_POST['prefer_animal'] : '';
		$timeframe = isset($_POST['timeframe']) ? $_POST['timeframe'] : '';
		
		
		$driver = "";
        $pilot = "";
		$mobile = '';


        $user_details = array();
		$user_activity = array();
		
        $user_details['firstname'] = isset($_POST['f_name']) ? $this->common_function->custom_htmlentities($_POST['f_name']) : '';
        $user_details['lastname'] = isset($_POST['l_name']) ? $this->common_function->custom_htmlentities($_POST['l_name']) : '';
        //$user_details['email'] = isset($_POST['email_id']) ? $this->common_function->custom_htmlentities($_POST['email_id']) : '';
		
		$user_details['email'] = isset($_POST['email_id']) ? utf8_decode($_POST['email_id']) : '';
		
        $user_details['password'] = isset($_POST['pswd']) ? $this->common_function->custom_htmlentities($_POST['pswd']) : '';
        $user_details['organization_name'] = isset($_POST['organization_name']) ? $this->common_function->custom_htmlentities($_POST['organization_name']) : '';


        $this->form_validation->set_rules('f_name', 'First Name', 'trim|required');
        $this->form_validation->set_rules('l_name', 'Last Name', 'trim|required');
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');
        $this->form_validation->set_rules('pswd', 'Password', 'trim|required|min_length[6]');
        $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim|required');
        $this->form_validation->set_rules('in_volunteer_type', 'Volunteer Type', 'trim');
		$this->form_validation->set_rules('phoneno', 'Phone', 'trim');
		$this->form_validation->set_rules('device_info', 'Device Info', 'trim|required');

		
		
        $data = array();
        $Err_Msg = '';
        if (isset($user_details['email']) && $user_details['email'] != '') {
            $counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $user_details['email'], "in_deleted" => '0'));
            if ($counts > 0) {
                $Err_Msg = "Email address already exists.";
            }
        }
        if ($this->form_validation->run() == FALSE || $Err_Msg != '') {
			$this->form_validation->set_error_delimiters('', '');
            $data['err_msg'] = validation_errors() . $Err_Msg;
			//echo "<pre>";print_r($data);die;
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        } else {
            $browser_details = array();
            $arrVehicle = array();
            $arrPilot = array();
            $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
            $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];


            $data_array = array("st_display_name" => $user_details['firstname'],
                "st_last_name" => $user_details['lastname'],
                "st_email" => $user_details['email'],
                "st_password" => md5($user_details['password']),
                "st_referred_by" => $user_details['organization_name'],
                "dt_created" => date("Y-m-d h:i:s"),
                "dt_modified" => date("Y-m-d h:i:s"),
                "in_public" => "1",
                "in_status" => "1",
                "st_browser_info" => @serialize($browser_details)
            );

			
			
            //$inserted_id = $this->user_model->insert_user($data_array);
			
			if($phoneno !=''){
			$phonenoo ='+91'.$phoneno;
			$code=mt_rand(1000,9999);
			$text = "Your 4 digit secret code is ".$code;
			$result = sendsms($phonenoo,$text);
			//echo '<pre>'; print_r($result); die;		
			
				if($result == 1){ 
				$inserted_id = $this->user_model->insert_user($data_array);
				$insData = array('in_sms_code' => $code);
				$this->db->where('in_user_id', $inserted_id);
				$record = $this->db->update('tbl_users', $insData);
				}
				else if($result == 'Invalid') {	 		
					
				$data['err_msg'] = 'Invalid mobile number. If you would like to proceed without mobile number please remove the number from mobile field and tap on sign up.';
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
					return;					
				}		
			
			}
			else{				
				$inserted_id = $this->user_model->insert_user($data_array);				
			}
			
			
			
			if($flgLocalRideTransport == 1)
					{  
						$user_profile_info["in_status"] = "1";
					    
							$mobile = $this->input->post('local_ride_mobile_number');
							$in_messanger = 1;
							$local_ride_radius =$this->input->post('local_ride_radius');
						
						
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							
							
							$arrRide = array(   'in_user_id' => $inserted_id,
												'in_ride_radius' => ($local_ride_radius)?$local_ride_radius : 50,
												'in_messanger' => ($in_messanger)?$in_messanger:0,
												'st_mobile'  => ($mobile)?$mobile:'',
												'dt_created'  =>  date('Y-m-d H:i:s'),
												'dt_modified' => date('Y-m-d H:i:s'),
												'in_deleted' => 0
										);

							//echo '<pre>'; print_r($arrRide);die;
							$this->db->insert('tbl_user_rides', $arrRide);
							//echo $last_insert_ride_id = $this->db->insert_id();die;
					}
					
					
					if($this->input->post('flgFosterHome')==1)
					{
						  $animal_type = $this->input->post('prefer_animal');
						  $user_profile_info['in_complete_profile']= '0';	
						  $duration_serve = $this->input->post('timeframe');
						  $insert_id = $this->user_model->add_foster_home_details($animal_type,$duration_serve,$inserted_id,'tbl_foster_user_detail');
						  $user_profile_info['st_foster_home'] = "Y";
						  $profile_setting_arr['st_foster']	 = 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}';
					}
					
					
					
					if($this->input->post('flgRescueRelayTransport')== 1)
						{
							
							$avldays = explode(',',$available_days);
							
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							$arrVehicle = array('in_user_id' => $inserted_id,
										'st_driver_availability' => serialize($avldays),    //serialize($this->input->post('available_days')),
										'st_zip_vehicle' => $zip_code,
										'in_distance_to_drive' => $this->input->post('rescue_relay_in_ride_radius'),
										'dt_created' => date('Y-m-d H:i:s'),
										'dt_modified' => date('Y-m-d H:i:s'),
										'st_vehicle_type' => '4-Door Car',
										'in_status' => '1',
										'zip_lat'  => $lat,
										'zip_lon'	=> $lon,
										'in_deleted' => '0'
										);
									
							$this->db->insert('tbl_user_vehicle', $arrVehicle);
							$last_insert_driver_id = $this->db->insert_id();
						}
			
			
			
			
			$token = $this->wsdl_model->generate_token($inserted_id);			
			
			/*
			$user_activity = array("in_user_id" 	=> $inserted_id,
								   "st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
								   "st_device_info" => $device_info,
								   "dt_created" 	=> date('Y-m-d H:i:s')                      
								 );					
			$this->user_model->add_user_activity($user_activity);
			*/
			
			        $user_activity = array();	
					//$ua	=	new BrowserDetection();
					$user_activity = array( "in_user_id" 	=> $inserted_id,
											"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											//"st_device_info" => $ua->getName().' '.$ua->getVersion(),			
											//"st_device_info" => $ua->getPlatform().' App',
											"st_device_info" => $deviceinfo,
											"dt_created" 	=> date('Y-m-d H:i:s')                      
										 );					
					$this->user_model->add_user_activity($user_activity);
			


            if ($in_volunteer_type == '1') {
                $driver = 'Y';
                $pilot = 'N';

                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);
            }
            if ($in_volunteer_type == '2') {
                $pilot = 'Y';
                $driver = 'N';
                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }
            if ($in_volunteer_type == '3') {
                $driver = 'Y';
                $pilot = 'Y';
                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);

                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }

			if(!empty($zipcode)){
				$address_details	=	$this->common_model->getaddress($zipcode);	
				$get_lat_long       = $this->common_model->get_lattitude_longitude(trim($zipcode));
					//print_r($get_lat_long);
					//exit;
                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        //$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
                       // $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
                    } else 
					{
						$lat= '0.00';
						$lon = '0.00';
					}
					$this->wsdl_model->update_vehicle_zip_code($inserted_id, $zipcode, $lat, $lon);
					$this->wsdl_model->update_plane_zip_code($inserted_id, $zipcode,$lat, $lon);			
				}
				
				
				if(count($profile_setting_arr)>0)
				{	
						$user_profile_setting_details 		= $this->user_model->get_user_profile_setting($inserted_id);
						if(empty($user_profile_setting_details))
						{	
									$profile_setting_arr['in_user_id']	= $inserted_id;
									$profile_setting_arr['in_public']	= 0;
									$profile_setting_arr['dt_created']	= date('Y-m-d H:i:s');
									$profile_setting_arr['in_deleted']	= 0;
									$this->db->insert('tbl_user_profile_setting',$profile_setting_arr);
						} else {
									$this->user_model->update_user_profile_setting($profile_setting_arr,$inserted_id,'tbl_user_profile_setting');	
						}	
				}
				
				
				
				
            $this->user_model->insert_user_profile(array("in_user_id" => $inserted_id, "st_zip" => $zipcode, "st_city" => isset($address_details['city']) ? $address_details['city'] : '', "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '', "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',"st_driver" => $driver, "st_pilot" => $pilot, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s"),"st_primary_phone" => $phoneno));
			$user_profile_info['dt_modified'] = date('Y-m-d H:i:s');
			
			if(isset($phoneno) && !empty($phoneno)){
				$user_profile_info['st_primary_phone'] = ($phoneno)?$phoneno:'';
			}
			else{
			$user_profile_info['st_primary_phone'] = ($mobile)?$mobile:'';
			}
			
			
			$country = $this->common_model->get_country(trim($zipcode));
			$timezone='';
			if(trim($country['st_country'])=='IN')
			{ 
				$timezone='IST';
			}
			else{
				$timezone='EST';
			}
			$user_profile_info['st_time_zone'] = $timezone;
			$user_profile = $this->user_model->update_user_info($user_profile_info, $inserted_id, 'tbl_user_profile');	
			
			$this->email_confirm($user_details,$inserted_id);	
            $this->login_details($user_details);
			
			$get_userdts = $this->wsdl_model->get_userdts($inserted_id);					
			$country = $this->common_model->get_country(trim($get_userdts['st_zip']));		
			
			if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
			if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
			if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }
			
			
					$request_board_status = $this->common_model->transport_routing_enable($inserted_id); 
					if(isset($request_board_status) && $request_board_status == 2) {
					$tcrequestboardflag = '1';
					}
					else{
						$tcrequestboardflag = '0';
					}
					$tcrequestboardurl = $this->config->item('base_url') .'wsdl/tcrequestboard/'.$token;
					$leavefeedbackurl = $this->config->item('base_url') . 'wsdl/leavefeedback/'.$token;
					$charitabletrackingurl = $this->config->item('base_url') . 'wsdl/charitabletracking/'.$token;
					
					$inpersonvolunteer = $this->config->item('base_url') . 'wsdl/inpersonvolunteer/'.$token;
					$virtualsupportvolunteer = $this->config->item('base_url') . 'wsdl/virtualsupportvolunteer/'.$token;
					$fosterhomeprofile = $this->config->item('base_url') . 'wsdl/fosterhomeprofile/'.$token;
			
			//End set coockie
            $data['msg'] = 'Your account has been created successfully.';
            $profile_image = $this->config->item('upload_url') . "profile/250x250/no_photo_icon.png";
			$data = array("result" => 1,"user_id" => $inserted_id,"f_name"=>$user_details['firstname'],"wsdl_token"=>$token,"email" => $user_details['email'],"tcrequestboardurl"=>$tcrequestboardurl,"leavefeedbackurl"=>$leavefeedbackurl,"charitabletrackingurl"=>$charitabletrackingurl,"inpersonvolunteer"=>$inpersonvolunteer,"virtualsupportvolunteer"=>$virtualsupportvolunteer,"fosterhomeprofile"=>$fosterhomeprofile,"tcrequestboardflag"=>$tcrequestboardflag,"profile_image" => $profile_image,"msg" => $data['msg'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## SIGN UP END ################################	
######################## FORGOT PASSWORD START ################################	

    public function forgot_password_view() {
        $this->load->view('wsdl/forgot_password');
    }

    public function forgot_password($email_id = '') {
        //$email_id = 'ghanshyam.maurya@pulsesolutions.net';		
        //$_POST['email_id'] = $email_id;


        $email_id = isset($_POST['email_id']) ? $_POST['email_id'] : '';

        $user_details = array();

        $user_details['email'] = isset($email_id) ? $this->common_function->custom_htmlentities($email_id) : '';

        $result = $this->user_model->user_forgotpassword($user_details);
		
        $error = '';
        if (empty($result)) {
            $error = "Email address does not exists.";
        }
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');

        $data = array();

        if ($this->form_validation->run() == FALSE || $error != '') {
			$this->form_validation->set_error_delimiters('', '');
            $data['err_msg'] = validation_errors() . $error;
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        } else {
            $user_data = $this->wsdl_model->get_user_details_by_email_id($user_details['email']);

            //echo "<pre>";print_r($user_data);die;

            $user_details['user_name'] = $user_data['st_display_name'];
            $user_details['lastname'] = $user_data['st_last_name'];

            $token = md5(time() . $user_data['in_user_id']);
            $user_details['url'] = $this->config->item('base_url') . "user/forgotpassword/" . $user_data['in_user_id'] . "/" . $token . "/";
            $password_details = array("st_reset_password_token" => $token, "dt_reset_password_sent" => date("Y-m-d H:i:s"));
            $this->user_model->update_user($password_details, $user_data['in_user_id']);
            $this->forgotpassword_email($user_details);
            $data['msg'] = 'Thank you. Instruction to generate new password has been sent to ' . $user_details['email'] . '.';
            $data = array("result" => 1, "msg" => $data['msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## FORGOT PASSWORD END ################################	
######################## FACEBOOK SIGNIN START ################################

    public function fb_signin() {
        $fb_id = $_GET['id'];
        if (isset($fb_id) && $fb_id != '') {
            $fbuser_data = $this->wsdl_model->get_user_data_by_fb_id($fb_id);
            if (isset($fbuser_data) && !empty($fbuser_data)) {

                $data = array("result" => 1, "user_id" => (int)$fbuser_data['in_user_id']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $user = "";
                $this->load->library('facebook');
                $userId = $this->facebook->getUser();
                if ($userId) {
                    try {
                        $user = $this->facebook->api('/me');
                    } catch (FacebookApiException $e) {
                        $user = "";
                    }
                } else {
                    $this->facebook->destroySession();
                }

                //echo '<pre/>';print_r($user);die;

                $browser_details = array();
                $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
                $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
                $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];
                $memberid = '';
                $arrmember = array('st_display_name' => $fbarr['first_name'],
                    'st_last_name' => $fbarr['last_name'],
                    'st_email' => $fbarr['email'],
                    'st_facebook_uid' => $fb_id,
                    'dt_created' => date("Y-m-d h:i:s"),
                    'in_newsletter' => "N",
                    "in_public" => "1",
                    'in_status' => "1",
                    'in_deleted' => '0',
                    "st_browser_info" => @serialize($browser_details),
                    'st_fb_first_name' => $fbarr['first_name'],
                    'st_fb_last_name' => $fbarr['last_name']
                );


                if ($this->db->insert('tbl_users', $arrmember)) {
                    $memberid = $this->db->insert_id();
                    $arrData = array("in_user_id" => $memberid
                    );
                    $this->db->insert('tbl_user_profile', $arrData);

                    $data = array("result" => 1, "user_id" => $memberid);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            }
        }
    }

######################## FACEBOOK SIGNIN END ################################
######################## FORGOT PASSWORD EMAIL START ########################

    function forgotpassword_email($data) {
        $allmail = $data['email'];
        $this->load->library('email');
        $email_details = $this->common_model->get_email_containt("2");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $templete = str_replace("##url##", $this->config->item('base_url'), $templete);
            $templete = str_replace("##display_name##", $data['user_name'] . " " . $data['lastname'], $templete);
            $templete = str_replace("##forgot_url##", $data['url'], $templete);
            $templete = str_replace("##current_year##", date('Y'), $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
            $strMail = $templete;
            $to = $allmail;
            $subject = $email_details[0]['st_email_subject'];
            $message = $strMail;
            //echo $message;die;
            $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
            //echo $this->email->print_debugger();
        }
    }

######################## FORGOT PASSWORD EMAIL END ########################
######################## LOGIN DETAILS START ########################

    function login_details($data) {
        $allmail = $data['email'];
        $this->load->library('email');
        $email_details = $this->common_model->get_email_containt("1");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $templete = str_replace("##url##", $this->config->item('base_url'), $templete);
            $templete = str_replace("##display_name##", $data['firstname'] . " " . $data['lastname'], $templete);
            $templete = str_replace("##current_year##", date('Y'), $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
            $strMail = $templete;
            $to = $allmail;
            $subject = $email_details[0]['st_email_subject'];
            $message = $strMail;

            $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
        }
    }

######################## LOGIN DETAILS END ########################
######################## TRANSPORT LIST START #####################

    public function transport_list_view() {
        $this->load->view('wsdl/transport_list');
    }

    function transport_list($user_id = '') {
	
        //$user_id = 50;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
            if (count($user_details) > 0) { 

                //echo "<pre>";print_r($user_details);die;
                $data['all_trasport'] = '';
                $data['nearby'] = '';

                $date = array();


                //if ((isset($user_details['0']['st_driver']) && $user_details['0']['st_driver'] == 'Y') || isset($user_details['0']['st_pilot']) && $user_details['0']['st_pilot'] == 'Y') {
                    #=============Active Trasport============#
                    $all_trasport = $this->wsdl_model->get_transport_list("1", $date, $user_id);
                    $data['all_trasport'] = $all_trasport;
					
					//print_r($data['all_trasport']); die;
               // }
                //echo '<pre/>';print_r($data['all_trasport']);exit;

                if (!empty($all_trasport)) {
                    $data = array("transport_list" => $data['all_trasport']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'You are not currently signed up for any transports.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    
	}

######################## TRANSPORT LIST END ########################	
######################## TRANSPORT DETAIL START #####################

    public function transport_detail_view() {
        $this->load->view('wsdl/transport_detail');
    }

    function transport_detail($user_id = '', $transport_id = '', $wsdl_token = '') {
        //$transport_id = 555;
        //$user_id = '';
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';

        $transport_details = array();

        if (isset($transport_id) && $transport_id != '' && isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {


            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details); die;
			

            if (count($user_details) > 0) {
                $flgIsJoinLegPermission = '';
                $flgIsUserJoinedTransport = '';
				$flgIsTransportMonitor = '';
				$flgActiveConfirmedTransport = '';
				$inUserProf = '';
				$inUserProfile='';
				$flgPhoneNoExist =  '';  // 1/0 (1= exist, 0 = NA)
				$flgpolicyaccepted = '';
				$privacyurl ='';
				
                $this->load->model('orgtrasnportation_model');
                $transport_details1 = $this->wsdl_model->get_transport_details($transport_id);
				$organization_id	= $transport_details1[0]['in_organization_id'];
				

                $IsUserJoinedTransport = $this->wsdl_model->IsUserJoinedTransport($transport_id, $user_id);
                $flgIsJoinLegPermission = $this->wsdl_model->flgIsJoinLegPermission($user_id);
				
				$inUserProfile = $this->wsdl_model->inUserProfile($user_id);
				$acceptcondition_details = $this->wsdl_model->get_acceptcondition_details($user_id,$organization_id);
				
				//echo '<pre>'; print_r($acceptcondition_details); die;

                //			$transport_details  = $transport_details[0]; 
                //echo '<pre>'; print_r( $inUserProfile); die;
				
				
				
				
				
                if ($IsUserJoinedTransport > 0) {

                    $flgIsUserJoinedTransport = '1';
                } else {
                    $flgIsUserJoinedTransport = '0';
                }

                if ($flgIsJoinLegPermission > 0) {

                    $flgIsJoinLegPermission = '1';
                } else {
                    $flgIsJoinLegPermission = '0';
                }

				if(isset($transport_details1[0]['in_need_trans_monitor']) && $transport_details1[0]['in_need_trans_monitor'] == '1')
				{
					 $flgIsTransportMonitor = '1';
				}else {
                     $flgIsTransportMonitor = '0';
                }
				
				$traget_date = date("Y-m-d", strtotime($transport_details1[0]['dt_target']));
				
				if($transport_details1[0]['in_status'] == '2'   && $traget_date >= date('Y-m-d'))
				{
					 $flgActiveConfirmedTransport = '1';
				}else {
                     $flgActiveConfirmedTransport = '0';
                }
				
				
				
				
				if (isset($user_details[0]['st_primary_phone']) && $user_details[0]['st_primary_phone']!='') {

                    $flgPhoneNoExist = '1';
                } else {
                    $flgPhoneNoExist = '0';
                }
				
				if($acceptcondition_details  > 0)
				{  
					 $flgpolicyaccepted = 1; 
					 $privacyurl='0';
				}	
				else
					{ 
					   $orgtc_details = $this->wsdl_model->get_orgtc_details($organization_id);
					  // echo '<pre>'; print_r($orgtc_details);die;
					 
					   if(isset($orgtc_details) && !empty($orgtc_details))
					   {  
					   		if($orgtc_details['in_enable_terms_condition']==1)
							{  
							    
								$flgpolicyaccepted = 0; 
								$privacyurl=base_url().'wsdl/org_privacypolicy/'.$organization_id;
							
							}
							else if($orgtc_details['in_enable_terms_condition']==0)
							{ 
								 $flgpolicyaccepted = 1;
								 $privacyurl='0';
							}
					   }
					   else
					   { 
					   			 $flgpolicyaccepted = 1;
								 $privacyurl='0';
					   
					   }
					
					}


				
				
				
				$transport_details['flgActiveConfirmedTransport'] = $flgActiveConfirmedTransport;
                $transport_details['in_transportation_id'] = $transport_details1[0]['in_transportation_id'];
				$transport_details['in_organization_id'] = $transport_details1[0]['in_organization_id'];
                $transport_details['st_from_city'] = $transport_details1[0]['st_from_city'];
                $transport_details['st_from_state'] = $transport_details1[0]['st_from_state'];
                $transport_details['st_from_zip'] = $transport_details1[0]['st_from_zip'];
                $transport_details['st_from_country'] = $transport_details1[0]['st_from_country'];
                $transport_details['st_to_city'] = $transport_details1[0]['st_to_city'];
                $transport_details['st_to_state'] = $transport_details1[0]['st_to_state'];
                $transport_details['st_to_zip'] = $transport_details1[0]['st_to_zip'];
                $transport_details['st_to_country'] = $transport_details1[0]['st_to_country'];
                $transport_details['dt_pickup_date'] = $transport_details1[0]['dt_pickup_date'];
                $transport_details['dt_target'] = $transport_details1[0]['dt_target'];
                $transport_details['cood_name'] = $transport_details1[0]['st_display_name'];
                $transport_details['cood_profile_image'] = $transport_details1[0]['st_profile_image'];
                $transport_details['cood_email'] = $transport_details1[0]['st_email'];
                $transport_details['cood_profile_public'] = $transport_details1[0]['in_public'];
                $transport_details['cood_phone'] = $transport_details1[0]['st_primary_phone'];
                $transport_details['cood_city'] = $transport_details1[0]['st_city'];
                $transport_details['cood_state'] = $transport_details1[0]['st_state'];
                $transport_details['cood_zip'] = $transport_details1[0]['st_zip'];
                $transport_details['cood_user_id'] = $transport_details1[0]['in_user_id'];
				$transport_details['in_status'] = $transport_details1[0]['in_status'];
                $transport_details['flgIsTransportJoined'] = $transport_details1[0]['flgtrjoined'] > 0 ? '1' : '0';
                $transport_details['flgIsTransportConfirmed'] = $transport_details1[0]['in_status'] == '2' ? '1' : '0';
 				$transport_details['flgIsTransportMonitor'] = $flgIsTransportMonitor;
				$transport_details['st_trans_type'] = $transport_details1[0]['st_trans_type'];
				$transport_details['st_transport_name'] = $transport_details1[0]['st_trans_name'];
				
				$transport_details['transport_airline'] = $transport_details1[0]['in_airline_transport'];
				$transport_details['st_org_name'] 		= $transport_details1[0]['st_org_name'];
				$transport_details['st_org_code'] 		= $transport_details1[0]['st_org_code'];
				$transport_details['accTcid'] 		    = $transport_details1[0]['accTcid'];
				
				
				
				
                if ($inUserProfile['st_driver'] == 'Y') {                    
                    $inUserProf = '1';
                }
                if ($inUserProfile['st_pilot'] == 'Y') {                    
                    $inUserProf = '2';
                }
                if ($inUserProfile['st_driver'] == 'Y' && $inUserProfile['st_pilot'] == 'Y') {
                    
                    $inUserProf = '3';
                }
                if ($inUserProfile['st_pilot'] == 'N' && $inUserProfile['st_driver'] == 'N') {
                    $inUserProf = '0';
                }
                if ($inUserProfile['st_pilot'] == '' && $inUserProfile['st_driver'] == '') {
                    $inUserProf = '0';
                }

                $transport_details['in_volunteer_type'] = $inUserProf;
                $transport_details['flgIsJoinLegPermission'] = $flgIsJoinLegPermission;



                //$trper=unserialize($transport_details1[0]['st_permission']); 
                if (@array_key_exists("transport", unserialize($transport_details1[0]['st_permission']))) {
                    $flgIsJoinTransport = '';
                    $flgIsJoinTransport = '1';
                } else {
                    $flgIsJoinTransport = '0';
                }
                $transport_details['flgIsJoinTransportPermission'] = $flgIsJoinTransport;

                //echo '<pre>';print_r($transport_details);exit;



                $transport_files = $this->wsdl_model->get_transport_files($transport_id);

                $transport_animals = $this->orgtrasnportation_model->get_transport_animals($transport_id);
                //$num_driver 				= $this->orgtrasnportation_model->get_driver_details($transport_id,"yes");
                //$time_zone 					= $this->common_function->tbl_time_zone();
                $leg_details = $this->wsdl_model->get_all_legs_detail($transport_id, $user_id);
                $photo_count = $this->wsdl_model->get_transport_photos_count($transport_id);
				$participant_users = $this->wsdl_model->get_transport_participant_users($transport_id);
                //$data['leg_count']			= count($leg_details);
                //$data['time_zone'] 			= $time_zone;
                //$data['num_driver']			= count($num_driver);
                //echo '<pre>';print_r($leg_details);exit;

                $transport_details['attachment_detail'] = $transport_files;
                $transport_details['attachment_count'] = count($transport_files);
                $transport_details['animal_details'] = $transport_animals;
                $transport_details['animal_count'] = count($transport_animals);
                $transport_details['photos_count'] = $photo_count;
                $transport_details['leg_detail'] = $leg_details;
				$transport_details['participant_id'] = $participant_users;
				
				$transport_details['flgIsUserJoinedTransport'] = $flgIsUserJoinedTransport;
				$transport_details['flgPhoneNoExist'] = $flgPhoneNoExist;			
				$transport_details['flgpolicyaccepted'] = $flgpolicyaccepted;
				$transport_details['privacyurl'] = $privacyurl;
				

                //echo '<pre/>';print_r($transport_files);exit;
                //echo '<pre/>';print_r($transport_details);exit;
                $data = array("transport_detail" => $transport_details);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId, Transport ID or Token Missing";
            $data = array("result" => 105, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## TRANSPORT DETAIL END #####################
######################## LEG DETAIL START #########################	

    public function leg_detail_view() {
        $this->load->view('wsdl/leg_detail');
    }

    function leg_detail($user_id = '', $transport_id = '', $leg_id = '', $organization_id='') {
        //$leg_id = 982;
        //$transport_id = 555;
        //$user_id = 50;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$organization_id = isset($_POST['organization_id']) ? $_POST['organization_id'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $leg_details = array();
                $flgIsUserJoinedTransport = '';
                $flgIsJoinLegPermission = '';
				$flgpolicyaccepted = '';
				$privacyurl ='';
				$flgPhoneNoExist =  '';  // 1/0 (1= exist, 0 = NA)
				
                if (isset($leg_id) && $leg_id > 0 && isset($transport_id) && $transport_id > 0) {
                    $this->load->model('orgtrasnportation_model');
                    $leg_details = $this->wsdl_model->get_leg_details($leg_id,$user_id,$organization_id);
                    // added on 14-09-15 start
                    $IsUserJoinedTransport = $this->wsdl_model->IsUserJoinedTransport($transport_id, $user_id);
                    $flgIsJoinLegPermission = $this->wsdl_model->flgIsJoinLegPermission($user_id);
					$acceptcondition_details = $this->wsdl_model->get_acceptcondition_details($user_id,$organization_id);

                    //			$transport_details  = $transport_details[0]; 
                    //echo '<pre>'; print_r( $transport_details1); die;
                    if ($IsUserJoinedTransport > 0) {

                        $flgIsUserJoinedTransport = '1';
                    } else {
                        $flgIsUserJoinedTransport = '0';
                    }

                    if ($flgIsJoinLegPermission > 0) {
                        $flgIsJoinLegPermission = '1';
                    } else {
                        $flgIsJoinLegPermission = '0';
                    }
					if (isset($user_details[0]['st_primary_phone']) && $user_details[0]['st_primary_phone']!='') {

                       $flgPhoneNoExist = '1';
					} else {
						$flgPhoneNoExist = '0';
					}
					
					if (isset($user_details[0]['in_number_verified']) && $user_details[0]['in_number_verified'] == 1) {

                       $flgIsPhoneVerified = '1';
					} else {
						$flgIsPhoneVerified = '0';
					}
					
					
					if($acceptcondition_details  > 0)
					{  
						 $flgpolicyaccepted = 1; 
						 $privacyurl='0';
					}
					
					else
					{ 
					   $orgtc_details = $this->wsdl_model->get_orgtc_details($organization_id);
					 
					   if(isset($orgtc_details) && !empty($orgtc_details))
					   {  
					   		if($orgtc_details['in_enable_terms_condition']==1)
							{
							    
								$flgpolicyaccepted = 0; 
								$privacyurl=base_url().'wsdl/org_privacypolicy/'.$organization_id;
							
							}
							else if($orgtc_details['in_enable_terms_condition']==0)
							{ 
								 $flgpolicyaccepted = 1;
								 $privacyurl='0';
							}
					   }
					   else
					   { 
					   			 $flgpolicyaccepted = 1;
								 $privacyurl='0';
					   
					   }
					
					}
					

                    // added on 14-09-15 end
                    //$leg_vehicle_details=$this->wsdl_model->get_legs_participants_vehicle($transport_id, $leg_id, $user_id);
                    // echo '<pre>';print_r($leg_details); die;

                    $leg_participants_details = $this->wsdl_model->get_legs_participants_details_by_leg_id($transport_id, $leg_id, $user_id);
                    //echo '<pre/>';print_r($leg_participants_details);exit;
					
					$leg_nondoobert_participants_details = $this->wsdl_model->get_legs_nondoobert_participants_details_by_leg_id($transport_id, $leg_id);
                    //echo '<pre/>';print_r($leg_participants_details);exit;
                    
                    $leg_details['flgIsUserJoinedTransport'] = $flgIsUserJoinedTransport;
                    $leg_details['flgIsJoinLegPermission'] = $flgIsJoinLegPermission;
					$leg_details['flgpolicyaccepted'] = $flgpolicyaccepted;
					$leg_details['privacyurl'] = $privacyurl;
					$leg_details['participants_details'] = $leg_participants_details;
					$leg_details['nondobert_participants_details'] = $leg_nondoobert_participants_details;
					$leg_details['flgPhoneNoExist'] = $flgPhoneNoExist;
					$leg_details['flgIsPhoneVerified'] = $flgIsPhoneVerified;
					
                    //$leg_details['vehicle_list']		 = $leg_vehicle_details;
                    //echo '<pre/>';print_r($leg_details);exit;
                }

                if (isset($leg_details) && !empty($leg_details)) {
                    $data = array("leg_detail" => $leg_details);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data = array("leg_detail" => $leg_details);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## LEG DETAIL END ########################	
######################## JOIN LEG START ########################	

    public function join_leg_view() {
        $this->load->view('wsdl/join_leg');
    }

    function join_leg($user_id = '', $transport_id = '', $leg_id = '',$stPhoneNo = '', $in_photography_profile = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
		$phone = isset($_POST['stPhoneNo']) ? $_POST['stPhoneNo'] : '';
		$in_photography_profile = isset($_POST['in_photography_profile']) ? $_POST['in_photography_profile'] : '0';
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
			
			
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			$transport_details = $this->wsdl_model->get_transport_details($transport_id);
			//echo '<pre>'; print_r($user_details[0]['st_primary_phone']);die;
			$in_status='';
			
            if (count($user_details) > 0) {
				
				//echo 'PPP'; die;
					//$checkphone  = $this->user_model->checkphoneexists($user_id);
					//if($checkphone == 0){
					//	echo 'AA'; die;
						
					//}
					
					if(isset($user_details[0]['st_primary_phone']) && $user_details[0]['st_primary_phone']=='' && $phone == '')
					{
						$err_msg = 'Please enter phone number.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;						
					}
					
					if(isset($phone)  && $phone!='')
					{ 
						$checkphone  = $this->user_model->checkphoneexists($user_id);
						if($checkphone == false){
							 $profile_info = array('st_primary_phone'=>$phone);
					         $data['user_profile'] = $this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');							
						}						
					}
				
				


                if (isset($leg_id) && $leg_id > 0 && isset($user_id) && $user_id > 0 && isset($transport_id) && $transport_id > 0) {
					
					$total_participants = 0;
					$leg_required_user_cnt = $this->wsdl_model->get_leg_required_user_count_by_id($leg_id);
	
					$leg_current_participant_cnt = $this->wsdl_model->get_legs_participants_by_user_id($transport_id, $user_id,$leg_id,$in_photography_profile);
					
					$org_detail	=	$this->wsdl_model->get_org_detail($transport_id);
					//print_r($org_detail);die;
					 
					 $current_date = date("Y-m-d");
					 $traget_date = date("Y-m-d", strtotime($transport_details[0]['dt_target']));
					  if($transport_details[0]['in_status'] == '3'){  $err_msg = 'This transport has been already cancelled.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;} 
						
						
					  if($transport_details[0]['in_status'] == '2'   && $traget_date >= $current_date){$err_msg = 'This transport has been already confirmed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  }
						
						
					  if($transport_details[0]['in_status'] == '2'   && $traget_date < $current_date){$err_msg = 'This transport has been already completed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  }
					
					if(isset($org_detail) && !empty($org_detail))
					{ 
						 $user_accept_condition=array();
						 $orgtc_details = $this->wsdl_model->get_orgtc_details($org_detail['in_organization_id']);
					 	 if($orgtc_details['in_enable_terms_condition'] == 1)
							{
							    $check_user_accept_tc = $this->wsdl_model->verify_user_accept_condition($user_id,$org_detail['in_organization_id']);
								if(count($check_user_accept_tc)==0)
								{ 
									$user_accept_condition['in_user_id']	=	$user_id;
									$user_accept_condition['in_organization_id']	=	$org_detail['in_organization_id'];
									$user_accept_condition['in_deleted']	=	0;
									$user_accept_condition['dt_created'] =  date('Y-m-d H:i:s');
									$user_accept_condition['dt_modified'] = date('Y-m-d H:i:s');
								
									$this->wsdl_model->entry_user_accept_condition($user_accept_condition);
                                }
							
							}		 
					 
					 
					}
					
					
	
					if (isset($leg_current_participant_cnt) && $leg_current_participant_cnt > 0) {
						$total_participants = $total_participants + $leg_current_participant_cnt;
					}
	
					$leg_non_doobert_participant_cnt = $this->wsdl_model->get_legs_nondoobert_participants_details_by_leg_id($transport_id, $leg_id);
	
					if (isset($leg_non_doobert_participant_cnt) && !empty($leg_non_doobert_participant_cnt)) {
						$total_participants = $total_participants + count($leg_non_doobert_participant_cnt);
					}
					
					
					if (isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] == 0) {
						if ($total_participants == "1") 
						{
						$err_msg = 'This leg is already joined by another user1.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data);
						}else{
							
					//code to get current user vehicle details
                    $this->load->model('user_model');
                    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($user_id);
                    //echo '<pre>';
                    //print_r($data['arrVehicle'][0]);
                    //die;
                    $this->load->model('orgtrasnportation_model');
                    $leg_type = $this->orgtrasnportation_model->get_leg_type_by_id($leg_id);
                    if (!empty($leg_type)) {
                        //print_r($leg_type[0]['in_route_type']);
                        if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0) {
                            //code to update vehicle id in leg details 
                            if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                                $leg_vehicle_detail = array("in_transportation_id" => $transport_id,
                                    "in_user_id" => $user_id,
                                    "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                    "in_transportation_leg_id" => $leg_id,
                                    "dt_created" => date("Y-m-d H:i:s"),
                                    "in_deleted" => 0
                                );
                                $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                            }
                        }
                    }

                    //leg detail updated 
                    //die;
                    
                    $user_driver_email = array();
                    $user_driver_email[] = array("user_email" => $transport_details['0']['st_email'],
                        "display_name" => $transport_details['0']['st_display_name']
                    );
                    $user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);

                    $parrt_cep = $this->wsdl_model->get_legs_participants($leg_id, $user_id, $transport_id,$in_photography_profile);
                    //echo "<pre>";print_r($parrt_cep);die;
                    
					
					
					if ($parrt_cep <= 0) {
                        $join_data = array("in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_transportation_leg_id" => $leg_id,
                            "in_created_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
							"in_photography_profile" => $in_photography_profile,
                            "in_deleted" => 0
                        );
                        $this->orgtrasnportation_model->join_legs($join_data);
                        //echo "<pre>";print_r($join_data);
                        $user_legs = $this->wsdl_model->get_leg_details($leg_id,$user_id,$organization_id='');
                        if (!empty($user_legs)) {
                           
						$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
	
						$route_details = $this->wsdl_model->get_legs_path($leg_id, $transport_id);
                            //echo "<pre>";print_r($user_legs);die;
                            //echo count($route_details);exit;
                            if (count($route_details) <= 0) {
                                if (@$user_legs['pick_lat'] != '' && @$user_legs['pick_lng'] != '') {
                                    $origin = @$user_legs['pick_lat'] . "," . @$user_legs['pick_lng'];
                                } else {
                                    $origin = (@$user_legs['pick_street'] ? @$user_legs['pick_street'] . "," : "") . (@$user_legs['pick_city'] ? @$user_legs['pick_city'] . "," : "") . (@$user_legs['pick_state'] ? @$user_legs['pick_state'] . "," : "") . (@$user_legs['pick_zip'] ? @$user_legs['pick_zip'] . "," : "") . (@$user_legs['pick_country'] ? @$user_legs['pick_country'] : "");
                                }
                                if (@$user_legs['drop_lat'] != '' && @$user_legs['drop_lng'] != '') {
                                    $destinations = @$user_legs['drop_lat'] . "," . @$user_legs['drop_lng'];
                                } else {
                                    $destinations = (@$user_legs['drop_street'] ? @$user_legs['drop_street'] . "," : "") . (@$user_legs['drop_city'] ? @$user_legs['drop_city'] . "," : "") . (@$user_legs['drop_state'] ? @$user_legs['drop_state'] . "," : "") . (@$user_legs['drop_zip'] ? @$user_legs['drop_zip'] . "," : "") . (@$user_legs['drop_country'] ? @$user_legs['drop_country'] : "");
                                }
                                //$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
                                $total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
                                $total_miles = $total_miles['distance'];
                                //$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
                            } else {
                                $total_miles = $route_details['fl_distance'];
                            }
                            $this->wsdl_model->add_distance($total_miles, $transport_id);
                            $percent = @number_format(($total_miles * 100) / $transport_details['0']['in_tot_distance'], 2, ".", "");
                            $percent = ($percent >= 100) ? 100 : $percent;
                            $target_date = @date("l, M d", strtotime(@$user_legs['pick_start_time']));
							
							

							$leg_data  = $this->orgtrasnportation_model->get_leg_data($transport_id);

							$filled_legs_count 	= $this->common_function->get_filled_legs_count($transport_id);

						$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($transport_id);	
						$cover_leg = 0;
						$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
						//
						 //echo "<pre>";print_r($user_data);die;
						 $uname ='';
						 if(isset($user_data['st_display_name'])&& !empty($user_data['st_display_name']))
						 {
							 $uname = $user_data['st_display_name'].' '. $user_data['st_last_name'];
						 }
						 
						 $name_arr = array("target_date" => $target_date,
                                "name" => $uname,
                                "transport_id" => $transport_id,
                                "percent" => $percent,
								"leg_origin" =>$origin1,
								"leg_destination" =>$destinations1,
								"total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
								"cover_leg" => $cover_leg
                            );
							
                            $this->join_transport_email($user_driver_email, "16", $name_arr);
                        }


                        $link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
                        $url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
                        $notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="' . $url_link . '">' . $this->session->userdata('user_name') . '</a> joined the leg of transportation.</h2>
									<div class="timeline-content">
										<p class="text17">' . date("l, M", strtotime($transport_details[0]['dt_target'])) . ' <strong>' . date(" d", strtotime($transport_details[0]['dt_target'])) . '</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>' . $transport_details[0]['st_from_city'] . ', ' . $transport_details[0]['st_from_state'] . ', ' . $transport_details[0]['st_from_zip'] . '</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>' . $transport_details[0]['st_to_city'] . ', ' . $transport_details[0]['st_to_state'] . ', ' . $transport_details[0]['st_to_zip'] . '</p></div>
										<div class="clearfix"></div>
								  </div></div>';
                        $arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
                            "in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_type" => 12,
                            "in_modified_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0"
                        );

                        $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);

                        //User Notify
                        $notification_last_id = $this->db->insert_id();
                        //Sending Email to all organization users 
                        $data['get_emails'] = $this->common_model->get_org_users_email($transport_details[0]['in_organization_id']);
						
						
								

                        $data['msg'] = 'You have joined leg(s) successfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } 
					
					
					
					else {
                        $data['msg'] = 'This leg is already joined by you.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
					
							}
					}
					
					else if (isset($leg_required_user_cnt) && $leg_required_user_cnt['in_user_num'] > 1) {
						if ($total_participants == $leg_required_user_cnt['in_user_num']) {
							$err_msg = 'This leg is already joined by another user.';
							$data = array("result" => 2, "err_msg" => $err_msg);
							header('Content-type: application/json');
							echo json_encode($data);
						}
						else if($total_participants < $leg_required_user_cnt['in_user_num'])
						{
					//code to get current user vehicle details
                    $this->load->model('user_model');
                    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($user_id);
                    //echo '<pre>';
                    //print_r($data['arrVehicle'][0]);
                    //die;
                    $this->load->model('orgtrasnportation_model');
                    $leg_type = $this->orgtrasnportation_model->get_leg_type_by_id($leg_id);
                    if (!empty($leg_type)) {
                        //print_r($leg_type[0]['in_route_type']);
                        if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0) {
                            //code to update vehicle id in leg details 
                            if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                                $leg_vehicle_detail = array("in_transportation_id" => $transport_id,
                                    "in_user_id" => $user_id,
                                    "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                    "in_transportation_leg_id" => $leg_id,
                                    "dt_created" => date("Y-m-d H:i:s"),
                                    "in_deleted" => 0
                                );
                                $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                            }
                        }
                    }

                    //leg detail updated 
                    //die;
                    $transport_details = $this->wsdl_model->get_transport_details($transport_id);
                    $user_driver_email = array();
                    $user_driver_email[] = array("user_email" => $transport_details['0']['st_email'],
                        "display_name" => $transport_details['0']['st_display_name']
                    );

                    $user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);

                    $parrt_cep = $this->wsdl_model->get_legs_participants($leg_id, $user_id, $transport_id,$in_photography_profile);
                    //echo "<pre>";print_r($parrt_cep);die;
                    if ($parrt_cep <= 0) {
                        $join_data = array("in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_transportation_leg_id" => $leg_id,
                            "in_created_by" => $user_id,
							"in_photography_profile" => $in_photography_profile,							
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => 0
                        );
                        $this->orgtrasnportation_model->join_legs($join_data);
                        //echo "<pre>";print_r($join_data);
                        $user_legs = $this->wsdl_model->get_leg_details($leg_id,$user_id,$organization_id='');
                        if (!empty($user_legs)) {
							
							$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
							
							$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
							
							$route_details = $this->wsdl_model->get_legs_path($leg_id, $transport_id);
													
                            //echo "<pre>";print_r($user_legs);die;
                            //echo count($route_details);exit;
                            if (count($route_details) <= 0) {
                                if (@$user_legs['pick_lat'] != '' && @$user_legs['pick_lng'] != '') {
                                    $origin = @$user_legs['pick_lat'] . "," . @$user_legs['pick_lng'];
                                } else {
                                    $origin = (@$user_legs['pick_street'] ? @$user_legs['pick_street'] . "," : "") . (@$user_legs['pick_city'] ? @$user_legs['pick_city'] . "," : "") . (@$user_legs['pick_state'] ? @$user_legs['pick_state'] . "," : "") . (@$user_legs['pick_zip'] ? @$user_legs['pick_zip'] . "," : "") . (@$user_legs['pick_country'] ? @$user_legs['pick_country'] : "");
                                }
                                if (@$user_legs['drop_lat'] != '' && @$user_legs['drop_lng'] != '') {
                                    $destinations = @$user_legs['drop_lat'] . "," . @$user_legs['drop_lng'];
                                } else {
                                    $destinations = (@$user_legs['drop_street'] ? @$user_legs['drop_street'] . "," : "") . (@$user_legs['drop_city'] ? @$user_legs['drop_city'] . "," : "") . (@$user_legs['drop_state'] ? @$user_legs['drop_state'] . "," : "") . (@$user_legs['drop_zip'] ? @$user_legs['drop_zip'] . "," : "") . (@$user_legs['drop_country'] ? @$user_legs['drop_country'] : "");
                                }
                                //$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
                                $total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
                                $total_miles = $total_miles['distance'];
                                //$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
                            } else {
                                $total_miles = $route_details['fl_distance'];
                            }
                            $this->wsdl_model->add_distance($total_miles, $transport_id);
                            $percent = @number_format(($total_miles * 100) / $transport_details['0']['in_tot_distance'], 2, ".", "");
                            $percent = ($percent >= 100) ? 100 : $percent;
                            $target_date = @date("l, M d", strtotime(@$user_legs['pick_start_time']));
							
							$leg_data  = $this->orgtrasnportation_model->get_leg_data($transport_id);
							$filled_legs_count 	= $this->common_function->get_filled_legs_count($transport_id);
							$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($transport_id);	
							$cover_leg = 0;
							$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
                            //echo "<pre>";print_r($user_data);die;
							$uname ='';
							if(isset($user_data['st_display_name']) && $user_data['st_display_name']!='')
							{
								$uname = $user_data['st_display_name'].' '.$user_data['st_last_name'];
							}								
                            $name_arr = array("target_date" => $target_date,
                                "name" => $uname,
                                "transport_id" => $transport_id,
                                "percent" => $percent,
								"leg_origin"=>$origin1,
								"leg_destination"=>$destinations1,
								"total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
								"cover_leg" => $cover_leg,
                            );
							
							$this->join_transport_email($user_driver_email, "16", $name_arr);
                        }


                        $link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
                        $url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
                        $notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="' . $url_link . '">' . $this->session->userdata('user_name') . '</a> joined the leg of transportation.</h2>
									<div class="timeline-content">
										<p class="text17">' . date("l, M", strtotime($transport_details[0]['dt_target'])) . ' <strong>' . date(" d", strtotime($transport_details[0]['dt_target'])) . '</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>' . $transport_details[0]['st_from_city'] . ', ' . $transport_details[0]['st_from_state'] . ', ' . $transport_details[0]['st_from_zip'] . '</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>' . $transport_details[0]['st_to_city'] . ', ' . $transport_details[0]['st_to_state'] . ', ' . $transport_details[0]['st_to_zip'] . '</p></div>
										<div class="clearfix"></div>
								  </div></div>';
                        $arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
                            "in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_type" => 12,
                            "in_modified_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0"
                        );

                        $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);

                        //User Notify
                        $notification_last_id = $this->db->insert_id();
                        //Sending Email to all organization users 
                        $data['get_emails'] = $this->common_model->get_org_users_email($transport_details[0]['in_organization_id']);

                        $data['msg'] = 'You have joined leg(s) successfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'This leg is already joined by you.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
					}
						
					}
					
					
					//echo $transport_details[0]['in_organization_id'];die;
					
                } else {
                    $err_msg = "You have been logged out as you logged into a different device.";
                    $data = array("result" => 103, "err_msg" => $err_msg);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                    $data = array("result" => 103, "err_msg" => $err_msg);
                    header('Content-type: application/json');
                    echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## JOIN LEG END ####################################
######################## JOIN TRANSPORT START####################################

    function join_transport_email($all_email, $email_id, $transport_details) {

       // echo "<pre>";print_r($transport_details);print_r($all_email); //die;
        $this->load->library('email');
        /* $this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
          if($_SERVER['HTTP_HOST']!='crystal9')
          {
          $this->email->bcc($this->config->item('bcc_email_id'));
          } */

        $email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $subject = $email_details[0]['st_email_subject'];
            $templete = str_replace("##url##", $this->config->item('base_url'), $templete);
            $templete = str_replace("##original_date##", $transport_details['target_date'], $templete);
            $templete = str_replace("##user_display_name##", $transport_details['name'], $templete);

            $templete = str_replace("##transport_id##", "#DBT" . $transport_details['transport_id'], $templete);
            $templete = str_replace("##percentage##", $transport_details['percent'], $templete);

            $templete = str_replace("##transport_url##", base_url() . 'org-transportation-scheduled/' . $transport_details['transport_id'], $templete);

            $subject = str_replace("##transport_id##", "#DBT" . $transport_details['transport_id'], $subject);
            $subject = str_replace("##original_date##", $transport_details['target_date'], $subject);
			
			
			$templete	= str_replace("##Pickup_date##",$transport_details['target_date'],$templete);
			//$this->email->subject($subject);
			if(isset($transport_details['leg_origin']) && isset($transport_details['leg_destination'])){
			$templete =	str_replace("##leg_start##",$transport_details['leg_origin'], $templete);	
			$templete =	str_replace("##leg_end##",$transport_details['leg_destination'], $templete);
			}
			if(isset($transport_details['total_leg']) && isset($transport_details['cover_leg'])){
			$templete =	str_replace("##total_legs##",$transport_details['total_leg'], $templete);	
			$templete =	str_replace("##cover_legs##",$transport_details['cover_leg'], $templete);
			}
			
				
			
            //$this->email->subject($subject);
            if (isset($all_email) && !empty($all_email)) {
                foreach ($all_email as $key => $values) {
                    //echo "<pre>";print_r($values);die;
                    $templete2 = str_replace("##transport_coordinator##", $values['display_name'], $templete);
                    $strMail = $templete2;
                    /* $this->email->to($values['user_email']); 
                      $this->email->message($strMail);
                      $this->email->send(); */
                    //echo $this->email->print_debugger();die;
                    $message = $strMail;
                    $to = $values['user_email'];
                    $subject = $subject;
					$send_email = 0;			
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);				
					
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
					$message = str_replace("##DONATION##",$donation,$message);
					
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
					}
                }
            }

           // echo $this->email->print_debugger();die;
           // echo "<pre>";print_r($templete2);die;		
        }
    }

######################## JOIN TRANSPORT END ####################################
######################## CANCEL LEG START #######################################

    public function cancel_leg_view() {
        $this->load->view('wsdl/cancel_leg');
    }

    function cancel_leg($user_id = '', $transport_id = '', $leg_id = '', $in_photography_profile = '') {
        //$leg_id = 982;
        //$transport_id = 555;
        //$user_id = 50;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
		$in_photography_profile = isset($_POST['in_photography_profile']) ? $_POST['in_photography_profile'] : '0';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                $this->load->model('orgtrasnportation_model');

                if (isset($leg_id) && $leg_id > 0 && isset($user_id) && $user_id > 0 && isset($transport_id) && $transport_id > 0) {
                    $transport_details = $this->wsdl_model->get_transport_details($transport_id);
					
					  $current_date = date("Y-m-d");
					  $traget_date = date("Y-m-d", strtotime($transport_details[0]['dt_target']));
					  if($transport_details[0]['in_status'] == '3'){  $err_msg = 'This transport has been already cancelled.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;} 
						
						
					  if($transport_details[0]['in_status'] == '2'   && $traget_date >= $current_date){$err_msg = 'This transport has been already confirmed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  }
						
						
					  /*if($transport_details[0]['in_status'] == '2'   && $traget_date < $current_date){$err_msg = 'This transport has been already completed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  } */
						
						
                    if ($transport_details['0']['st_trans_type'] == "D") {
                        $this->cancel_legs($leg_id, $user_id, $transport_id);
                        $data['msg'] = 'You have left leg(s) successfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {  
                        $user_driver_email = array();
                        $user_driver_email[] = array("user_email" => $transport_details['0']['st_email'],
                            "display_name" => $transport_details['0']['st_display_name']
                        );

                        $user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);

                        $this->wsdl_model->leave_legs($leg_id, $transport_id, $user_id,$in_photography_profile);

                        $user_legs = $this->wsdl_model->get_leg_details($leg_id,$user_id,$organization_id='');
                        if (!empty($user_legs)) {
							
							$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
							
							$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
							
                            if (@$user_legs['pick_lat'] != '' && @$user_legs['pick_lng'] != '') {
                                $origin = @$user_legs['pick_lat'] . "," . @$user_legs['pick_lng'];
                            } else {
                                $origin = ($user_legs['pick_street'] ? $user_legs['pick_street'] . "," : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . "," : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . "," : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . "," : "") . ($user_legs['pick_country'] ? $user_legs['pick_country'] : "");
                            }
                            if (@$user_legs['drop_lat'] != '' && @$user_legs['drop_lng'] != '') {
                                $destinations = @$user_legs['drop_lat'] . "," . @$user_legs['drop_lng'];
                            } else {
                                $destinations = (@$user_legs['drop_street'] ? @$user_legs['drop_street'] . "," : "") . (@$user_legs['drop_city'] ? @$user_legs['drop_city'] . "," : "") . (@$user_legs['drop_state'] ? @$user_legs['drop_state'] . "," : "") . (@$user_legs['drop_zip'] ? @$user_legs['drop_zip'] . "," : "") . (@$user_legs['drop_country'] ? @$user_legs['drop_country'] : "");
                            }
                            $total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
                            $total_miles = $total_miles['distance'];
                            $this->wsdl_model->update_distance($total_miles, $transport_id);

                            $percent = @number_format(($total_miles * 100) / $transport_details['0']['in_tot_distance'], 2, ".", "");
                            $percent = ($percent >= 100) ? 100 : $percent;
                            $target_date = @date("l, M d", @strtotime($user_legs['pick_start_time']));

							$leg_data  = $this->orgtrasnportation_model->get_leg_data($transport_id);
							$filled_legs_count 	= $this->common_function->get_filled_legs_count($transport_id);
							$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($transport_id);	
							$cover_leg = 0;
							$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
				
                            //echo "<pre>";print_r($user_data);die;
							
							$uname ='';
							if(isset($user_data['st_display_name']) && $user_data['st_display_name']!='')
							{
								$uname = $user_data['st_display_name'].' '.$user_data['st_last_name'];
							}		
                            $name_arr = array("target_date" => $target_date,
                                "name" => $uname,
                                "transport_id" => $transport_id,
                                "percent" => $percent,
								"leg_origin"=>$origin1,
								"leg_destination"=>$destinations1,
								"total_leg" =>($leg_data['cnt'] ? $leg_data['cnt'] : 0),
								"cover_leg" => $cover_leg
                            );
                            $this->join_transport_email($user_driver_email, "17", $name_arr);
                        }

                        $link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
                        $url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
                        $notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="' . $url_link . '">' . $user_data['st_display_name'] . '</a> left transportation.</h2>
									<div class="timeline-content">
										<p class="text17">' . date("l, M", strtotime($transport_details[0]['dt_target'])) . ' <strong>' . date(" d", strtotime($transport_details[0]['dt_target'])) . '</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>' . $transport_details[0]['st_from_city'] . ', ' . $transport_details[0]['st_from_state'] . ', ' . $transport_details[0]['st_from_zip'] . '</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>' . $transport_details[0]['st_to_city'] . ', ' . $transport_details[0]['st_to_state'] . ', ' . $transport_details[0]['st_to_zip'] . '</p></div>
										<div class="clearfix"></div>
								  </div></div>';
                        $arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
                            "in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_type" => 13,
                            "in_modified_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0"
                        );
                        $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);

                        $data['msg'] = 'You have left leg(s) successfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    function cancel_legs($leg_id, $user_id, $transport_id) {
        $transport_details = $this->wsdl_model->get_transport_details($transport_id);
        //echo "<pre>";print_r($transport_details);die;
        if (isset($transport_details[0]) && $transport_details[0]['st_trans_type'] == 'D' && $leg_id > 0) {
            $user_driver_email = array();
            $user_driver_email[] = array("user_email" => $transport_details['0']['st_email'],
                "display_name" => $transport_details['0']['st_display_name']
            );

            $user_legs = $this->wsdl_model->get_leg_details($leg_id,$user_id,$organization_id='');
            $this->wsdl_model->delete_user_leg($user_id, $leg_id, $transport_id);
            //echo "<pre>";print_r($user_legs);die;
            if (!empty($user_legs)) {
                if ($user_legs['pick_lat'] != '' && $user_legs['pick_lng'] != '') {
                    $origin = $user_legs['pick_lat'] . "," . $user_legs['pick_lng'];
                } else {
                    $origin = ($user_legs['pick_street'] ? $user_legs['pick_street'] . "," : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . "," : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . "," : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . "," : "") . ($user_legs['pick_country'] ? $user_legs['pick_country'] : "");
                }
                if ($user_legs['drop_lat'] != '' && $user_legs['drop_lng'] != '') {
                    $destinations = $user_legs['drop_lat'] . "," . $user_legs['drop_lng'];
                } else {
                    $destinations = ($user_legs['drop_street'] ? $user_legs['drop_street'] . "," : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . "," : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . "," : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . "," : "") . ($user_legs['drop_country'] ? $user_legs['drop_country'] : "");
                }
                $total_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
                $total_miles = $total_miles['distance'];
                $this->orgtrasnportation_model->update_distance($total_miles);
                $percent = number_format(($total_miles * 100) / $transport_details['0']['in_tot_distance'], 2, ".", "");
                $percent = ($percent >= 100) ? 100 : $percent;
                $target_date = @date("l, M d", @strtotime(@$user_legs['pick_start_time']));

                $user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);

                //echo "<pre>";print_r($user_data);die;

                $name_arr = array("target_date" => $target_date,
                    "name" => $user_data['st_display_name'] . ' ' . $user_data['st_last_name'],
                    "transport_id" => $transport_id,
                    "percent" => $percent
                );
                $this->join_transport_email($user_driver_email, "17", $name_arr);
            }
            $link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
            $url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
            $notification_message = '<div class="timeline-body border">
							<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="' . $url_link . '">' . $user_data['st_display_name'] . '</a> left transportation.</h2>
							<div class="timeline-content">
									<p class="text17">' . date("l, M", strtotime($transport_details[0]['dt_target'])) . ' <strong>' . date(" d", strtotime($transport_details[0]['dt_target'])) . '</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>' . $transport_details[0]['st_from_city'] . ', ' . $transport_details[0]['st_from_state'] . ', ' . $transport_details[0]['st_from_zip'] . '</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>' . $transport_details[0]['st_to_city'] . ', ' . $transport_details[0]['st_to_state'] . ', ' . $transport_details[0]['st_to_zip'] . '</p></div>
									<div class="clearfix"></div>
							  </div>
							</div>';
            $arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
                "in_transportation_id" => $transport_id,
                "in_user_id" => $user_id,
                "in_type" => 13,
                "in_modified_by" => $user_id,
                "dt_created" => date("Y-m-d H:i:s"),
                "in_deleted" => "0"
            );
            $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
        }
    }

######################## CANCEL LEG END #######################################
######################## COMPLETE LEG START #######################################	

    public function complete_leg_view() {
        $this->load->view('wsdl/complete_leg');
    }

    function complete_leg($user_id = '', $transport_id = '', $leg_id = '') {
        //$leg_id = 982;
        //$transport_id = 555;
        //$user_id = 50;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($leg_id) && $leg_id > 0) {
				
				
					$transport_details = $this->wsdl_model->get_transport_details($transport_id);
					//echo '<pre>'; print_r($transport_details);die;
				    $current_date = date("Y-m-d");
					$traget_date = date("Y-m-d", strtotime($transport_details[0]['dt_target']));
					  if($transport_details[0]['in_status'] == '3'){  $err_msg = 'This transport has been already cancelled.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;} 
						
						
					 /* if($transport_details[0]['in_status'] == '2'   && $traget_date >= $current_date){$err_msg = 'This transport has been already confirmed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  } */
						
						
					 /* if($transport_details[0]['in_status'] == '2'   && $traget_date < $current_date){$err_msg = 'This transport has been already completed.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;  }*/
				
				
				
				
                    $array_update = array("in_status" => "1");
                    $this->load->model('orgtrasnportation_model');
                    $this->orgtrasnportation_model->update_legs($array_update, $leg_id);

                    $data['msg'] = 'Transportation leg(s) successfully marked as completed.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## COMPLETE LEG END #######################################	

######################## UPDATE MEETING LOCATION START ###########################

    public function update_meeting_location_view() {
        $this->load->view('wsdl/update_meeting_location');
    }

    function update_meeting_location($user_id = '', $transport_id = '', $leg_id = '', $meeting_location = '') {

        //$leg_id = 982;
        //$transport_id = 555;
        //$user_id = 50;
        //$meeting_location = '@ 21 street new petrol pump';	

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
        $meeting_location = isset($_POST['meeting_location']) ? $_POST['meeting_location'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($meeting_location) && $meeting_location != '' && isset($user_id) && $user_id > 0 && isset($leg_id) && $leg_id > 0) {
                    $array_update = array("st_meeting_location" => $meeting_location,
                        "in_modified_by" => $user_id,
                        "dt_modified" => date("Y-m-d H:i:s"));
                    $this->load->model('orgtrasnportation_model');
                    $this->orgtrasnportation_model->update_legs($array_update, $leg_id);

                    $data['msg'] = 'Meeting location updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE MEETING LOCATION END #######################################
######################## UPDATE VEHICLE START ##############################################	

    public function update_vehicle_view() {
        $this->load->view('wsdl/update_vehicle');
    }

    function update_vehicle($user_id = '', $transport_id = '', $leg_id = '', $vehicle_id = '') {

        //$leg_id = 1516;
        //$transport_id = 724;
        //$user_id = 50;
        //$vehicle_id = '581';	

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
        $vehicle_id = isset($_POST['vehicle_id']) ? $_POST['vehicle_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($leg_id) && $leg_id > 0 && isset($vehicle_id) && $vehicle_id > 0 && isset($user_id) && $user_id > 0 && isset($transport_id) && $transport_id > 0) {
                    $array_update = array("in_vehicle_id" => $vehicle_id, "dt_modified" => date("Y-m-d H:i:s"));
                    $this->load->model('orgtrasnportation_model');
                    $this->orgtrasnportation_model->update_leg_vehicle_detail($array_update, $leg_id, $user_id, $transport_id);

                    $data['msg'] = 'Vehicle has been changed successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE VEHICLE END ##############################################
######################## COORDINATOR DETAIL START ########################################

    public function coordinator_detail_view() {
        $this->load->view('wsdl/coordinator_detail');
    }

    function coordinator_detail($user_id = '', $organization_id = '') {

        //$organization_id = 9;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $organization_id = isset($_POST['organization_id']) ? $_POST['organization_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($organization_id) && $organization_id > 0) {
                    $this->load->model('common_model');
                    $coordinators_detail = $this->common_model->get_transport_coodrdinator($organization_id);

                    //print_r($coordinators_detail);

                    $data['coordinators_detail'] = $coordinators_detail;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## COORDINATOR DETAIL END ##############################################
######################## ATTACHMENT DETAIL START ##############################################	

    public function attachment_detail_view() {
        $this->load->view('wsdl/attachment_detail');
    }

    function attachment_detail($transport_id = '') {

        //$transport_id = 711;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($transport_id) && $transport_id > 0) {
                    $this->load->model('orgtrasnportation_model');
                    $transport_files = $this->orgtrasnportation_model->get_transport_files($transport_id);
                    //print_r($transport_files);
                    $attachment_files = array();
                    foreach ($transport_files as $key => $value) {
                        $attachment_files[$key]['attach_name'] = $value['st_file_name'];
                        $attachment_files[$key]['link'] = base_url() . "upload/trasnportation/" . $value['st_file_name'];
                    }
                    $data['attachment_count'] = count($transport_files);
                    $data['attachment_detail'] = $attachment_files;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## ATTACHMENT DETAIL END ##############################################
######################## ANIMAL LIST START ##############################################		

    public function animal_list_view() {
        $this->load->view('wsdl/animal_list');
    }

    function animal_list($transport_id = '') {

        //$transport_id = 711;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($transport_id) && $transport_id > 0) {
                    $data = array();

                    $animal_list = $this->wsdl_model->get_animal_details($transport_id);
					//echo '<pre>'; print_r($animal_list);die; 
                    $data['animal_count'] = count($animal_list);
                    $data['animal_list'] = $animal_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## ANIMAL LIST END ##############################################	
######################## ANIMAL DETAIL START ###########################################	

    public function animal_detail_view() {
        $this->load->view('wsdl/animal_detail');
    }

    function animal_detail($user_id = '', $wsdl_token = '', $animal_id = '') {  

        $animal_id = isset($_POST['animal_id']) ? $_POST['animal_id'] : '';
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($animal_id) && $animal_id > 0) {
                    $data = array();

                    $animal_pic = $this->wsdl_model->get_animals_photo($animal_id);
                    $animal_video = $this->wsdl_model->get_animals_video($animal_id);
                    $animal_detail = $this->wsdl_model->get_animal_detail($animal_id);

                    $data['animal_pic'] = $animal_pic;
                    $data['animal_video'] = $animal_video;
                    $data['animal_details'] = $animal_detail;                  			
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## ATTACHMENT DETAIL END ##############################################	
######################## GETFEED START #############################################

    public function getfeed_view() {
        $this->load->view('wsdl/getfeed');
    }

    function getfeed($transport_id = '', $limit = false) {

        //$transport_id = 750;		
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($transport_id) && $transport_id > 0) {
                    $data = array();
                    $rec_per_page = 15;
                    if ($this->input->post('page') > 0) {
                        $limit = ($this->input->post('page') - 1) * 15;
                        //$rec_per_page=$rec_per_page*$this->input->post('page'); 
                    } else if ($this->input->post('page') == 0) {
                        $limit = '0';
                    } else {
                        $limit = '0';
                    }

                    $feed_detail = $this->wsdl_model->get_feeds($transport_id, $limit, $this->input->post('page'), $rec_per_page);
                    $feed_count = $this->wsdl_model->get_feeds_count($transport_id);
                    $data['feed_detail'] = $feed_detail;
                    $data['total_feedCount'] = $feed_count;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GETFEED END ##############################################	
######################## GETUSER LIST START #######################################	

    public function getuser_list_view() {
        $this->load->view('wsdl/getuser_list');
    }

    function getuser_list($username = '') {

        //$username = 'rup';

        $username = isset($_POST['username']) ? $_POST['username'] : '';
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($username) && $username != '') {
                    $data = array();

                    $user_list = $this->wsdl_model->user_list($username);
                    $data['user_list'] = $user_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GETUSER LIST END ##############################################	
######################## SENDFEED USER START ###########################################

    public function sendfeed_single_user_view() {
        $this->load->view('wsdl/sendfeed_single_user');
    }

    function sendfeed_single_user($user_id = '', $feed_text = '', $receiver_user_id = '', $org_id = '', $transportation_id = '') {


        $user_id = $this->input->post('user_id');   //153  // modified by
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $feed_text = $this->input->post('feed_text');  // test
        $receiver_user_id = $this->input->post('receiver_user_id');  // 156			
        $org_id = $this->input->post('organization_id'); //9
        $transportation_id = $this->input->post('transport_id');  // 750	
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $user_detail = $this->wsdl_model->get_user_details_by_user_id($receiver_user_id);
               // echo '<pre>'; print_r($user_detail); die;

                if ($user_id != '' && $feed_text != '' && $receiver_user_id != '' && $org_id != '' && $transportation_id != '') {


                    $message_user = $this->common_function->custom_htmlentities($this->input->post('feed_text'));
                    if (!empty($user_detail)) {
                        $arr_notification = array("in_organization_id" => $org_id,
                            "in_transportation_id" => $transportation_id,
                            //"st_notification_msg"	=> $notification_message,
                            "st_notification_msg" => $message_user,
                            "in_type" => 14,
                            "in_modified_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0"
                        );
                     

                        //mail functionality
                        $this->load->library('email');
                        $email_details = $this->common_model->get_email_containt("26");
						$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
                        if (isset($email_details[0]['st_email_body'])) {
                            $username = '';
							$sendername='';							
                            $templete = $email_details[0]['st_email_body'];
                            $subject = $email_details[0]['st_email_subject'];
                            $to = $user_detail['st_email'];
                            $username = $user_detail['st_display_name'] . ' ' . $user_detail['st_last_name'];
							$sendername = $user_details[0]['st_display_name'] . ' ' . $user_details[0]['st_last_name'];
                            $transport_id='#DBT'.$transportation_id;
							$clickhear ='<a href="'.base_url().'org-transportation-scheduled/'.$transportation_id.'/#tab_2_3" target="_blank"> clicking here</a>';
							$user_message = explode(':', $this->input->post('feed_text'));
                            $patterns = array('%##url##%', '%##user_name##%','%##sender_name##%','%##transport_id##%','%##click_here##%','%##feed_msg##%');
                            
							$replacements = array(base_url(), $username,$sendername,$transport_id,$clickhear, (isset($user_message[1])) ? $user_message[1] : $this->input->post('feed_text'));	
							
							//print_r($replacements); 
                            $content = preg_replace($patterns, $replacements, $email_details[0]['st_email_body']);
							
							$user_to_id = $this->common_model->get_user_id_by_email($to);
													
							$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);		
							$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$content);		
							$content = str_replace("##DONATION##",$donation,$content);		
							
							$send_email = 0;							
							$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
							if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
							{
								$send_email = 0;										
							}
							
							$email_template_id = $email_details[0]['in_email_id'];
							$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
							if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
							{
								$send_email = 1;
							}	
							
							if($send_email == 0)
							{
								$transport_setting = $this->common_model->user_notification_setting($user_to_id);
								if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
								{
									$send_email = 1;
								}								
							}
							
							if($send_email == '1')
							{
                            	$this->common_function->send_mail($this->email, $to, 'Transport Feed', $content, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
							}
                        }

                        $this->common_model->insert_data("tbl_notification", $arr_notification);
                        $data['msg'] = 'Message sent successfully!';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record does not exist.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## SENDFEED USER END ##############################################
######################## NEARBY TRANSPORT LIST START ####################################

    function nearby_transport_list_view() {
        $this->load->view('wsdl/nearby_transport_list');
    }

    function nearby_transport_list($user_id = '', $from = '', $to = '') {
        //$user_id = 50;

        $date = array();
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        //$from_date 	= isset($_POST['from']) ? $_POST['from'] : '';
        //$to_date 	= isset($_POST['to']) ? $_POST['to'] : '';	
        //$date['from_date'] 	= $from_date;
        //$date['to_date'] 	= $to_date;	

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                if ($user_id != '') {

                    
                    #=============Nearby Trasport============#					
					$nearby_trasport='';
                    //$nearby_trasport = $this->wsdl_model->get_transport_nearby($user_id, $date);
					$nearby_trasport = $this->wsdl_model->get_transport_nearby_open_leg($user_id);
					
                    //$data['nearby_trasport'] = $nearby_trasport;
					
                    //echo '<pre/>';print_r($data['nearby_trasport']);exit;
                    if (isset($nearby_trasport) && !empty($nearby_trasport)) {
                        $data = array("transport_list" => $nearby_trasport);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Transportation Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## NEARBY TRANSPORT LIST END ##############################################	
######################## SENDFEED START ###########################################

    public function sendfeed_view() {
        $this->load->view('wsdl/sendfeed');
    }

    function sendfeed($user_id = '', $feed_text = '', $org_id = '', $transportation_id = '') {


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';   //153  // modified by
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $feed_text = isset($_POST['feed_text']) ? $_POST['feed_text'] : '';  // test		 		
        $org_id = isset($_POST['organization_id']) ? $_POST['organization_id'] : '';  //9

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);



            if (count($user_details) > 0) {



                $transportation_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';  //750				
                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('feed_text', 'Message', 'trim|required');
                $this->form_validation->set_rules('organization_id', 'Organization Id', 'trim|required');
                $this->form_validation->set_rules('transport_id', 'Transport Id', 'trim|required');


                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $message_user = $this->common_function->custom_htmlentities($this->input->post('feed_text'));

                    $arr_notification = array("in_organization_id" => $org_id,
                        "in_transportation_id" => $transportation_id,
                        //"st_notification_msg"	=> $notification_message,
                        "st_notification_msg" => $message_user,
                        "in_type" => 14,
                        "in_modified_by" => $user_id,
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->common_model->insert_data("tbl_notification", $arr_notification);
                    $data['msg'] = 'Feed saved successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## SENDFEED END ##############################################
######################## GET GENERAL DETAIL START ###########################################	

    public function get_generaldetail_view() {
        $this->load->view('wsdl/get_generaldetail');
    }

    function get_generaldetail($user_id = '') {

        //$transport_id = 711;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $general_detail = $this->wsdl_model->get_user_profile($user_id);
                    $flgIsProfileVerified = $this->wsdl_model->flgIsProfileVerified($user_id);
                    $flgIsProfileVerified == '1' ? '1' : '0';


                    if (!empty($general_detail)) {

                        $data['general_detail'] = $general_detail;
                        $data['flgIsProfileVerified'] = $flgIsProfileVerified;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GET GENERAL DETAIL END ##############################################
######################## EDIT GENERAL DETAIL START ###########################################	

    public function edit_generaldetail_view() {
        $this->load->view('wsdl/edit_generaldetail');
    }

    function edit_generaldetail($user_id = '', $first_name = '', $last_name = '', $primary_phone = '', $secondary_phone = '', $fax = '', $email = '', $website = '', $address1 = '', $address2 = '', $country = '', $city = '', $state = '', $zipcode = '', $time_zone = '', $aboutme = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $website = $this->input->post('organization_website');
                if (!empty($website)) {
                    $_POST['organization_website'] = "http://" . $website;
                }

                $form_field = array('address1' => '',
                    'address2' => '',
                    'city' => '',
                    'state' => '',
                    'zipcode' => '',
                    "time_zone" => '',
                    "first_name" => '',
                    "last_name" => '',
                    "pphone" => '',
                    "sphone" => '',
                    "fax" => '',
                    "email" => '',
                    "organization_website" => '',
                    'country' => '',
                    'aboutme' => '',
                    'user_id' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('first_name', 'First Name', 'trim|required');
                $this->form_validation->set_rules('last_name', 'Last Name Id', 'trim|required');
                $this->form_validation->set_rules('pphone', 'Primary Phone', 'trim');
                $this->form_validation->set_rules('sphone', 'Secondary Phone', 'trim');
                $this->form_validation->set_rules('fax', 'Fax', 'trim');
                $this->form_validation->set_rules('email', 'Email Address', 'trim|required|valid_email');
                $this->form_validation->set_rules('organization_website', 'Website', 'trim');
                $this->form_validation->set_rules('address1', 'Address1', 'trim');
                $this->form_validation->set_rules('address2', 'Address2', 'trim');
                $this->form_validation->set_rules('country', 'Country', 'trim');
                $this->form_validation->set_rules('city', 'City', 'trim');
                $this->form_validation->set_rules('state', 'State', 'trim');
                $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim|required');
                $this->form_validation->set_rules('time_zone', 'Time Zone', 'trim|required');



                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');

                    $profile_info['st_state'] = $data['profile_details']['state'];
                    $profile_info['st_zip'] = $data['profile_details']['zipcode'];
                    $profile_info['st_country'] = $data['profile_details']['country'];
                    $profile_info['st_time_zone'] = $data['profile_details']['time_zone'];

                    if ($this->input->post('sphone') != '') {
                        $profile_info['st_secondary_phone'] = $data['profile_details']['sphone'];
                    }
                    if ($this->input->post('fax') != '') {
                        $profile_info['st_fax'] = $data['profile_details']['fax'];
                    }
                    if ($this->input->post('organization_website') != '') {
                        $profile_info['st_website'] = $data['profile_details']['organization_website'];
                    }
                    if ($this->input->post('address1') != '') {
                        $profile_info['st_address1'] = $data['profile_details']['address1'];
                    }
                    if ($this->input->post('address2') != '') {
                        $profile_info['st_address2'] = $data['profile_details']['address2'];
                    }
                    if ($this->input->post('city') != '') {
                        $profile_info['st_city'] = $data['profile_details']['city'];
                    }
                    $profile_info['st_primary_phone'] = $data['profile_details']['pphone'];
                    $profile_info['dt_modified'] = date('Y-m-d H:i:s');
                    $profile_info['in_status'] = '1';


                    $user_info = array("st_display_name" => $data['profile_details']['first_name'],
                        "st_last_name" => $data['profile_details']['last_name'],
                        "st_email" => $data['profile_details']['email'],
                        "in_status" => "1",
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    //echo "<pre>";print_r($profile_info);print_r($user_info);

                    $check = $this->wsdl_model->is_email_exists($data['profile_details']['email'], $user_id);
                    if ($check) {
                        $data['msg'] = 'Email already exist.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {

                        $data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
                        $data['user_info'] = $this->wsdl_model->update_user_info($user_info, $user_id, 'tbl_users');
						
						if(!empty($profile_info['st_zip']))
						{
								$get_lat_long       = $this->common_model->get_lattitude_longitude(trim($profile_info['st_zip']));
								//print_r($get_lat_long);
								//exit;
								if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
									//$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
									$lat = $get_lat_long['lat'];
								   // $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
									$lon = $get_lat_long['lon'];
								} else 
								{
									$lat = '0.00';
									$lon = '0.00';
								}
								$this->wsdl_model->update_vehicle_zip_code($user_id, $profile_info['st_zip'], $lat, $lon);
								$this->wsdl_model->update_plane_zip_code($user_id, $profile_info['st_zip'],$lat, $lon);
						}

                        $data['msg'] = 'General details updated successfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## EDIT GENERAL DETAIL END ##############################################
######################## GET DRIVER DETAIL START ###########################################	

    public function get_driverdetail_view() {
        $this->load->view('wsdl/get_driverdetail');
    }

    function get_driverdetail($user_id = '', $wsdl_token = '') {

        //$transport_id = 711;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();
					$available_days = array();

                    $available_days1 = $this->wsdl_model->get_user_available($user_id);
                    //echo '<pre>'; print_r($available_days1['st_driver_availability']); die;

                    if (isset($available_days1['st_driver_availability']) && $available_days1['st_driver_availability'] == 'b:0;') {
                        $available_days = '';
                    } else {
						
                        $available_days = isset($available_days1['st_driver_availability']) ? unserialize($available_days1['st_driver_availability']) : '';
						
                    }
                    //echo '<pre>'; print_r($available_days); die;
                    // echo '<pre>'; print_r($available_days); die;	 

                    $vehicle_info = $this->wsdl_model->get_vehicle_detail($user_id);
                    // echo '<pre>'; print_r($vehicle_info); die;	 

                    if (!empty($available_days) || !empty($vehicle_info)) {

                        $data['zipcode'] = $vehicle_info[0]['zipcode'];
                        $data['available_days'] = $available_days;
                        $data['vehicle_info'] = $vehicle_info;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GET DRIVER DETAIL END ##############################################
######################## FIND TRANSPORT LIST START ###########################################	

    public function find_transport_list_view() {
        $this->load->view('wsdl/find_transport_list');
    }

    function find_transport_list($user_id = '', $transportation_id = '', $wsdl_token = '') {

        //$transport_id = 711;

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $transport_list = $this->wsdl_model->find_transport_list($user_id, $transport_id);

                    if (!empty($transport_list)) {

                        $data['transport_list'] = $transport_list;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Transportation Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## FIND TRANSPORT LIST END ##############################################
#################### CREATE LEG START #######################

    public function create_roadleg_view() {
        $this->load->view('wsdl/create_roadleg');
    }

    public function create_roadleg($user_id = '', $transport_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        $pickup_street = isset($_POST['pickup_street']) ? $_POST['pickup_street'] : '';
        $pickup_city = isset($_POST['pickup_city']) ? $_POST['pickup_city'] : '';
        $pickup_state = isset($_POST['pickup_state']) ? $_POST['pickup_state'] : '';
        $pickup_zipcode = isset($_POST['pickup_zipcode']) ? $_POST['pickup_zipcode'] : '';
        $pickup_country = isset($_POST['pickup_country']) ? $_POST['pickup_country'] : '';
        $pickup_timezone = isset($_POST['pickup_timezone']) ? $_POST['pickup_timezone'] : '';
        $pickup_start_time = isset($_POST['pickup_start_time']) ? $_POST['pickup_start_time'] : '';

        $dropoff_street = isset($_POST['dropoff_street']) ? $_POST['dropoff_street'] : '';
        $dropoff_city = isset($_POST['dropoff_city']) ? $_POST['dropoff_city'] : '';
        $dropoff_state = isset($_POST['dropoff_state']) ? $_POST['dropoff_state'] : '';
        $dropoff_zipcode = isset($_POST['dropoff_zipcode']) ? $_POST['dropoff_zipcode'] : '';
        $dropoff_country = isset($_POST['dropoff_country']) ? $_POST['dropoff_country'] : '';
        $dropoff_timezone = isset($_POST['dropoff_timezone']) ? $_POST['dropoff_timezone'] : '';
        $dropoff_start_time = isset($_POST['dropoff_start_time']) ? $_POST['dropoff_start_time'] : '';

        if($_POST['route_type']=='2'){
        $meeting_location = isset($_POST['comment']) ? $_POST['comment'] : '';
		}
		else
		{
		$meeting_location = isset($_POST['meeting_location']) ? $_POST['meeting_location'] : '';
		}

        $route_type = isset($_POST['route_type']) ? $_POST['route_type'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('transport_id', 'Transport Id', 'trim|required');
                $this->form_validation->set_rules('route_type', 'Route Type', 'trim|required');


                $data = array();

                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    //echo "<pre>";print_r($data);die;
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {

                    $data_array = array("in_created_by" => $user_id,
                        "in_transportation_id" => $transport_id,
                        "in_route_type" => $route_type,
                        "in_multi_user" => '0',
                        "st_meeting_location" => $meeting_location,
                        "dt_created" => date('Y-m-d H:i:s')
                    );

                    $inserted_id = $this->wsdl_model->insert_leg($data_array);



                    $parrt_cep = $this->wsdl_model->get_legs_participants($inserted_id, $user_id, $transport_id); // updated by ghanshyam on 08Dec2014
                    //echo "<pre>";print_r($parrt_cep);die;
                    if ($parrt_cep <= 0) {
                        $join_data = array("in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_transportation_leg_id" => $inserted_id,
                            "in_created_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => 0
                        );
                        $this->orgtrasnportation_model->join_legs($join_data);
                    }

                    if ($route_type == '0') {
                        $pickup_array = array("in_transportation_leg_id" => $inserted_id,
                            "st_leg_type" => "P",
                            "st_street" => $pickup_street,
                            "st_city" => $pickup_city,
                            "st_state" => $pickup_state,
                            "st_zip" => $pickup_zipcode,
                            "st_country" => $pickup_country,
                            "dt_start_time" => date('Y-m-d H:i:s', strtotime($pickup_start_time)),
                            "st_timezone" => $pickup_timezone,
                        );
                        //echo '<pre>'; print_r($pickup_array); die;						

                        $this->wsdl_model->insert_leg_detail($pickup_array);
                        $this->load->model('user_model');
                        $data['arrVehicle'] = $this->user_model->get_vehicle_detail($user_id);


                        if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                            $leg_vehicle_detail = array("in_transportation_id" => $transport_id,
                                "in_user_id" => $user_id,
                                "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                "in_transportation_leg_id" => $inserted_id,
                                "dt_created" => date("Y-m-d H:i:s"),
                                "in_deleted" => 0
                            );
                            $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                        }




                        $dropoff_array = array("in_transportation_leg_id" => $inserted_id,
                            "st_leg_type" => "D",
                            "st_street" => $dropoff_street,
                            "st_city" => $dropoff_city,
                            "st_state" => $dropoff_state,
                            "st_zip" => $dropoff_zipcode,
                            "st_country" => $dropoff_country,
                            "dt_start_time" => date('Y-m-d H:i:s', strtotime($dropoff_start_time)),
                            "st_timezone" => $dropoff_timezone,
                        );
                        $this->wsdl_model->insert_leg_detail($dropoff_array);
                    }

                    if ($route_type == '2') {
                        $pickup_array = array("in_transportation_leg_id" => $inserted_id,
                            "st_leg_type" => "O",
                            "st_street" => $pickup_street,
                            "st_city" => $pickup_city,
                            "st_state" => $pickup_state,
                            "st_zip" => $pickup_zipcode,
                            "st_country" => $pickup_country,
                           // "dt_start_time" => date('Y-m-d H:i:s', strtotime($pickup_start_time)),
                           // "st_timezone" => $pickup_timezone,
						    "in_deleted"	=> "0"						   
                        );
                        $this->wsdl_model->insert_leg_detail($pickup_array);
                    }

                    $data['msg'] = 'You have successfully created leg.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## CREATE LEG END ################################
########################  GET PILOT DETAIL START ###########################################	

    public function get_pilotdetail_view() {
        $this->load->view('wsdl/get_pilotdetail');
    }

    function get_pilotdetail($user_id = '', $wsdl_token = '') {


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $plane_detail = $this->wsdl_model->get_pilotdetail($user_id);

                    if (!empty($plane_detail)) {

                        //$data['zipcode'] = $plane_detail['st_pilot_zip'];
                        $data['aeroplane_info'] = $plane_detail;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GET PILOT DETAIL END ##############################################
#################### JOIN TRANSPORT START #######################

    public function join_transport_view() {
        $this->load->view('wsdl/join_transport');
    }

    public function join_transport($user_id = '', $transport_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';     



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            $transport_details1 = $this->wsdl_model->get_org_details($transport_id);

            if (count($user_details) > 0) {

                $data = array();
                $join_data = array("in_transportation_id" => $transport_id,
                    "in_user_id" => $user_id,
                    "in_transportation_leg_id"	=> "0",
                    "in_created_by" => $user_id,
                    "dt_created" => date("Y-m-d H:i:s"),
                    "in_deleted" => 0
                );
                $this->orgtrasnportation_model->join_legs($join_data);

                $arr_notification = array("in_organization_id" => $transport_details1[0]['in_organization_id'],
                    "in_transportation_id" => $transport_id,
                    'in_user_id' => $user_id,
                    "in_type" => 9,
                    "in_modified_by" => $user_id,
                    "dt_created" => date("Y-m-d H:i:s"),
                    "in_deleted" => "0"
                );
                $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);

                $data['msg'] = 'You have successfully joined transport.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## JOIN TRANSPORT END ################################
######################## EDIT PILOT DETAIL START ###########################################	

    public function edit_pilotdetail_view() {
        $this->load->view('wsdl/edit_pilotdetail');
    }

    function edit_pilotdetail($user_id = '', $wsdl_token = '', $available_days = '', $zipcode = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
        $zipcode = isset($_POST['zipcode']) ? $_POST['zipcode'] : '';
        $airport_id = isset($_POST['airport_id']) ? $_POST['airport_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $form_field = array('zipcode' => '',
                    'airport_id' => '',
                    'available_days' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['pilot_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim');
                $this->form_validation->set_rules('airport_id', 'Airport Id', 'trim|required');
                $this->form_validation->set_rules('available_days', 'Available Days', 'trim|required');


                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $avl_days = array();

                    $avl_days = explode(',', $data['pilot_details']['available_days']);

                    //print_r($avl_days); die;


                    $pilot_info = array("st_pilot_zip" => $data['pilot_details']['zipcode'],
                        "st_identifier" => $data['pilot_details']['airport_id'],
                        "st_pilot_availability" => serialize($avl_days),
                        //"st_plane_type" => 'Single Engine',
                        "in_user_id" => $user_id,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );

                    //echo "<pre>";print_r($pilot_info); die;		
                    $pilotcount = '';
                    $pilotcount = $this->wsdl_model->get_pilotdetail($user_id);
                    if (count($pilotcount) > 0) {
                        $data['pilot_info'] = $this->wsdl_model->update_pilot_info($pilot_info, $user_id, 'tbl_user_pilot');
						$data['msg'] = 'Transport details updated successfully.';
						$data = array("result" => 1, "msg" => $data['msg']);
						header('Content-type: application/json');
						echo json_encode($data);
                    } else {				
					    $insert_id='';
                        $inserted_id = $this->wsdl_model->add_pilot_info($pilot_info);
						$data['airplane_id'] = $inserted_id;
						$data['msg'] = 'You have successfully updated pilot details.';
						$data = array("result" => 1, "msg" => $data['msg'],"airplane_id"=>$data['airplane_id']);
						header('Content-type: application/json');
						echo json_encode($data);
                    }                    
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## EDIT PILOT DETAIL END ##############################################
######################## EDIT DRIVER DETAIL START ###########################################	

    public function edit_driverdetail_view() {
        $this->load->view('wsdl/edit_driverdetail');
    }

    function edit_driverdetail($user_id = '', $wsdl_token = '', $zipcode = '', $vehicle_id = '', $maxdrive_distance = '', $available_days = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
        $zipcode = isset($_POST['zipcode']) ? $_POST['zipcode'] : '';
        $onewayfly_distance = isset($_POST['maxdrive_distance']) ? $_POST['maxdrive_distance'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $form_field = array('zipcode' => '',
                    'maxdrive_distance' => '',
                    'available_days' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['vehicle_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim|required');
                $this->form_validation->set_rules('available_days', 'Available Days', 'trim');


                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $avl_days = array();

                    $avl_days = explode(',', $data['vehicle_details']['available_days']);

                    //  print_r($avl_days); die;



                    $vehicle_info = array(
                        //"st_zip_vehicle" => $data['vehicle_details']['zipcode'],
                        // "in_distance_to_drive" => $data['vehicle_details']['maxdrive_distance'],
                        "st_driver_availability" => serialize($avl_days),
                        //'st_vehicle_type' => 'Pickup Truck',
                        "in_user_id" => $user_id,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );

                    //echo "<pre>";print_r($pilot_info); die;
                    $vehiclecount = '';
                    $vehiclecount = $this->wsdl_model->get_vehicle_detail($user_id);
                    //echo count($vehiclecount); die;

                    if (count($vehiclecount) > 0) {
                        $data['vehicle_info'] = $this->wsdl_model->update_vehicle_info($vehicle_info, $user_id, 'tbl_user_vehicle');
                    } else {
                        $data['vehicle_info'] = $this->wsdl_model->add_vehicle_info($vehicle_info, $user_id, 'tbl_user_vehicle');
                    }
                    //print_r($avl_days);die;
                    if ($avl_days[0] == '') {
                        $data['msg'] = 'You have unselected all days so you will NOT receive any notifications until you check a day.';
                    } else {
                        $data['msg'] = 'You have successfully updated driver details.';
                    }
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## EDIT DRIVER DETAIL END ##############################################
######################## UPDATE PRIVACYSETTING START ###########################################	

    public function update_privacysetting_view() {
        $this->load->view('wsdl/update_privacysetting');
    }

    function update_privacysetting($user_id = '', $wsdl_token = '', $flgIspublic_profile = '', $flgIsAddressVisible = '', $flgIsPhonenoVisible = '', $flgIsEmailVisible = '', $flgIsWebsiteVisible = '', $flgIsAvailableDaysVisible = '', $flgIsVehicleTypeVisible = '', $flgIsColorVisible = '', $flgIsLicensePlateVisible = '', $flgIsLicenseStateVisible = '', $flgIsDriveDistanceVisible = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $flgIspublic_profile = isset($_POST['flgIspublic_profile']) ? $_POST['flgIspublic_profile'] : '';

        $flgIsAddressVisible = isset($_POST['flgIsAddressVisible']) ? $_POST['flgIsAddressVisible'] : '';
        $flgIsPhonenoVisible = isset($_POST['flgIsPhonenoVisible']) ? $_POST['flgIsPhonenoVisible'] : '';
        $flgIsEmailVisible = isset($_POST['flgIsEmailVisible']) ? $_POST['flgIsEmailVisible'] : '';
        $flgIsWebsiteVisible = isset($_POST['flgIsWebsiteVisible']) ? $_POST['flgIsWebsiteVisible'] : '';

        $flgIsAvailableDaysVisible = isset($_POST['flgIsAvailableDaysVisible']) ? $_POST['flgIsAvailableDaysVisible'] : '';
        $flgIsVehicleTypeVisible = isset($_POST['flgIsVehicleTypeVisible']) ? $_POST['flgIsVehicleTypeVisible'] : '';
        $flgIsColorVisible = isset($_POST['flgIsColorVisible']) ? $_POST['flgIsColorVisible'] : '';
        $flgIsLicensePlateVisible = isset($_POST['flgIsLicensePlateVisible']) ? $_POST['flgIsLicensePlateVisible'] : '';
        $flgIsLicenseStateVisible = isset($_POST['flgIsLicenseStateVisible']) ? $_POST['flgIsLicenseStateVisible'] : '';
        $flgIsDriveDistanceVisible = isset($_POST['flgIsDriveDistanceVisible']) ? $_POST['flgIsDriveDistanceVisible'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);


            if (count($user_details) > 0) {
                $arrContact = array();
                $arrDriver = array();
                $user_setting_info = array();
                $user_setting_info_private = array();

                $user_id = $this->input->post('user_id');

                if ($flgIsAddressVisible == '1') {
                    $flgIsAddressVisible = 'st_address1';
                    array_push($arrContact, $flgIsAddressVisible);
                }
                if ($flgIsPhonenoVisible == '1') {
                    $flgIsPhonenoVisible = 'st_primary_phone';
                    array_push($arrContact, $flgIsPhonenoVisible);
                }
                if ($flgIsEmailVisible == '1') {
                    $flgIsEmailVisible = 'st_email';
                    array_push($arrContact, $flgIsEmailVisible);
                }
                if ($flgIsWebsiteVisible == '1') {
                    $flgIsWebsiteVisible = 'st_website';
                    array_push($arrContact, $flgIsWebsiteVisible);
                }

                if ($flgIsAvailableDaysVisible == '1') {
                    $flgIsAvailableDaysVisible = 'st_driver_availability';
                    array_push($arrDriver, $flgIsAvailableDaysVisible);
                }
                if ($flgIsVehicleTypeVisible == '1') {
                    $flgIsVehicleTypeVisible = 'st_vehicle_type';
                    array_push($arrDriver, $flgIsVehicleTypeVisible);
                }
                if ($flgIsColorVisible == '1') {
                    $flgIsColorVisible = 'st_vehicle_color';
                    array_push($arrDriver, $flgIsColorVisible);
                }
                if ($flgIsLicensePlateVisible == '1') {
                    $flgIsLicensePlateVisible = 'st_vehicle_license_plate';
                    array_push($arrDriver, $flgIsLicensePlateVisible);
                }
                if ($flgIsLicenseStateVisible == '1') {
                    $flgIsLicenseStateVisible = 'st_vehicle_license_state';
                    array_push($arrDriver, $flgIsLicenseStateVisible);
                }
                if ($flgIsDriveDistanceVisible == '1') {
                    $flgIsDriveDistanceVisible = 'in_distance_to_drive';
                    array_push($arrDriver, $flgIsDriveDistanceVisible);
                }

                //echo '<pre>'; print_r($arrContact);
                //echo '<pre>'; print_r($arrDriver); die;				


                $user_setting_info['in_public'] = $this->input->post('flgIspublic_profile');
                $user_setting_info['st_contact'] = serialize($arrContact);
                $user_setting_info['st_driver'] = serialize($arrDriver);
                $user_setting_info['dt_created'] = date('Y-m-d H:i:s');
                $user_setting_info['in_user_id'] = $user_id;

                $data['user_profile_setting_details'] = $this->wsdl_model->get_user_profile_setting($user_id);

                //echo '<pre>'; print_r($data['user_profile_setting_details']); die;
                $this->wsdl_model->update_user($user_setting_info, $user_id, 'tbl_users');

                if (empty($data['user_profile_setting_details'])) {
                    $data['user_info'] = $this->wsdl_model->add_user_profile_setting($user_setting_info, 'tbl_user_profile_setting');
                } else {

                    //$user_setting_info_private['in_public'] = $this->input->post('flgIspublic_profile');
                    // $data['user_info'] = $this->wsdl_model->update_user_profile_setting($this->input->post('flgIspublic_profile') == 1 ? $user_setting_info : $user_setting_info_private, $user_id, 'tbl_user_profile_setting');

                    $data['user_info'] = $this->wsdl_model->update_user_profile_setting($user_setting_info, $user_id, 'tbl_user_profile_setting');
                }

				if($this->input->post('flgIspublic_profile')=='0'){
                $data['msg'] = 'Privacy settings updated. Note: When you JOIN a transport your information will be visible to others in that transport.';
				}
				else{
				$data['msg'] = 'Privacy settings updated.';
				}
				$data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE PRIVACYSETTING END ##############################################
######################## CHANGE PASSWORD START ##############################################

    public function changepassword_view() {
        $this->load->view('wsdl/changepassword');
    }

    function changepassword($user_id = '', $wsdl_token = '', $current_password = '', $new_password = '', $confirm_password = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $current_password = isset($_POST['current_password']) ? $_POST['current_password'] : '';
        $new_password = isset($_POST['new_password']) ? $_POST['new_password'] : '';
        $confirm_password = isset($_POST['confirm_password']) ? $_POST['confirm_password'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            //echo '<pre>'; print_r($user_details[0]['st_password']); die;


            if (count($user_details) > 0) {
                $user_id = $this->input->post('user_id');

                if (md5($current_password) != $user_details[0]['st_password']) {
                    $data['err_msg'] = 'Current password does not match.';
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else if ($new_password == $confirm_password) {

                    $password_info = array("st_password" => md5($confirm_password), "st_reset_password_token" => "");
                    $data['password_info'] = $this->wsdl_model->update_password($password_info, $user_id);
                    $data['msg'] = 'You have successfully updated password.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['err_msg'] = 'New password and confirm password does not match.';
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## CHANGE PASSWORD END ##############################################
######################## GET PROFILESETTING START ###########################################	

    public function get_profilesetting_view() {
        $this->load->view('wsdl/get_profilesetting');
    }

    function get_profilesetting($user_id = '') {

        //$transport_id = 711;


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $profile_setting = $this->wsdl_model->profile_setting($user_id);
                    $flgIsProfileVerified = $this->wsdl_model->flgIsProfileVerified($user_id);
                    $flgIsProfileVerified == '1' ? '1' : '0';


                    //echo '<pre>'; print_r($profile_setting); die;

                    if (!empty($profile_setting)) {


                        $data['profile_setting'] = $profile_setting;
                        $data['flgIsProfileVerified'] = $flgIsProfileVerified;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else if (empty($profile_setting)) {

                        $profile_setting_user = $this->wsdl_model->profile_setting_user($user_id);
                        $data['flgIsProfileVerified'] = $flgIsProfileVerified;
                        $data['profile_setting'] = $profile_setting_user;
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## GET PROFILESETTING END ##############################################
######################## ATTACH PHOTO START ##############################################

    public function attach_photo_view() {
        $this->load->view('wsdl/attach_photo');
    }

    function attach_photo($user_id = '') {

        $this->load->library('Upload');
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                //echo 'AA'; die;
                //echo '<pre>'; print_r($_FILES);

                if (!isset($_FILES['photo']['name'])) {
                    return false;
                }
                // ini_set("post_max_size", '256M');
                //ini_set("upload_max_filesize", '128M');
                $config['upload_path'] = $this->config->item('upload') . "trasnportation/";
                $config['allowed_types'] = 'jpg|jpeg|gif|png';
                $config['max_size'] = '51200';
                $config['remove_spaces'] = TRUE;






                //  $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['photo']['name']); 
                $lastDot = strrpos($_FILES['photo']['name'], ".");
                $_FILES['photo']['name'] = str_replace(".", "", substr($_FILES['photo']['name'], 0, $lastDot)) . substr($_FILES['photo']['name'], $lastDot);
                $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['photo']['name']));
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                $this->upload->do_upload('photo');

                $file_errors = array('errors' => $this->upload->display_errors());
                // echo '<pre>'; print_r($file_errors); die;	
                //Display errors of file upload.
                if (!empty($file_errors['errors'])) {

                    $data = array('error' => strip_tags($file_errors['errors']));
                    header('Content-type: application/json');
                    echo json_encode(array('photo' => array($data)));
                    return false;
                }
				
				// added by sadique on 26-09-15 start
					$this->load->library('image_lib'); // added by sadique on 26-09-15
					$configThumb = array();
					$configThumb['image_library'] = 'gd2';
					$configThumb['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
					$configThumb['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
					$configThumb['maintain_ratio'] = TRUE;
					$configThumb['width'] = '250';
					$configThumb['height'] = '250';
					$this->image_lib->initialize($configThumb);
					$this->image_lib->resize();
					// added by sadique on 26-09-15 end
				
				
				
                if ($_FILES['photo']['name'] != '') {
                    $file_details = array("in_transportation_id" => $transport_id,
                        "st_file_name" => $config['file_name'],
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->orgtrasnportation_model->add_transport_photo($file_details);
                }


                $data['msg'] = 'You have successfully uploaded photo.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## ATTACH PHOTO END ##############################################
######################## UPDATE PROFILEPIC START ##############################################

    public function update_profilepic_view() {
        $this->load->view('wsdl/update_profilepic');
    }

    function update_profilepic($user_id = '', $wsdl_token = '') {

        $this->load->library('Upload');
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $this->load->library('upload');

                $config['upload_path'] = $this->config->item('upload') . 'profile/';
                $config['max_size'] = '1024';         // 1 MB
                $config['image_width'] = '300';
                $config['image_height'] = '300';
                $config['allowed_types'] = 'jpg|jpeg|JPEG|png|gif';
                $config['remove_spaces'] = TRUE;
                // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                $lastDot = strrpos($_FILES['profile_pic']['name'], ".");
                $_FILES['profile_pic']['name'] = str_replace(".", "", substr($_FILES['profile_pic']['name'], 0, $lastDot)) . substr($_FILES['profile_pic']['name'], $lastDot);
                $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']));

                //Initialization
                $this->upload->initialize($config);
                //Upload image by calling do_upload method.
                $this->upload->do_upload('profile_pic');
                $file_errors = array('errors' => $this->upload->display_errors());
                if (!empty($file_errors['errors'])) {
                    $data = array('error' => strip_tags($file_errors['errors']));
                    header('Content-type: application/json');
                    echo json_encode(array('photo' => array($data)));
                    return false;
                }
                $thumb = array('140x140' => '140',
								'250x250' => '250',
								'36x36' => '36',
								'63x63' => '63',
								'29x29' => '29'
                );

                foreach ($thumb as $key => $value) {
                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'profile/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'profile/' . $key . '/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = $value;
                    $config['height'] = $value;

                    $this->load->library('image_lib');
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                }



                //Updating data
                $data['picture'] = array('st_profile_image' => $config['file_name'], 'dt_modified' => date('Y-m-d H:i:s'));
                $data['upload_photo'] = $this->wsdl_model->update_user_data($data['picture'], $user_id);
                $data['msg'] = 'You have successfully updated profile pic.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE PROFILEPIC END ##############################################
######################## TRANSPORT PHOTOS START #############################################

    public function transport_photos_view() {
        $this->load->view('wsdl/transport_photos');
    }

    function transport_photos($transport_id = '', $limit = false) {


        //$transport_id = 750;		
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $page = isset($_POST['page']) ? $_POST['page'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);


            if (count($user_details) > 0) {

                if (isset($transport_id) && $transport_id > 0) {
                    $data = array();
                    $rec_per_page = 15;
                    if ($page > 0) {
                        $limit = ($page - 1) * 15;
                        //$rec_per_page=$rec_per_page*$this->input->post('page'); 
                    } else if ($page == 0) {
                        $limit = '0';
                    } else {
                        $limit = '0';
                    }


                    $photo_count = $this->wsdl_model->get_transport_photos_count($transport_id);
                    $photo_detail = $this->wsdl_model->get_transport_photos($transport_id, $limit, $page, $rec_per_page);
                    $data['photo_count'] = $photo_count;
                    $data['photo_detail'] = $photo_detail;

                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## TRANSPORT PHOTOS END ##############################################	
######################## INVITEFRIEND START #############################################

    public function invitefriend_view() {
        $this->load->view('wsdl/invitefriend');
    }

    function invitefriend($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $name = explode(',',$_POST['invitee_name']);
        $email = explode(',',$_POST['invitee_email']);



        $invite_msg = isset($_POST['invite_msg']) ? $_POST['invite_msg'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);


            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    // mail content start
                    $ni = 0;
                    $ei = 0;

                    foreach ($name as $value) {
                        if (trim($value) != '') {
                            $ni++;
                        }
                    }

                    foreach ($email as $value) {
                        if (trim($value) != '') {
                            $ei++;
                        }
                    }
                    //echo '<pre>'; print_r($email); die;
                    $this->load->library('email');
                    $email_details = $this->common_model->get_email_containt("27");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
                    $reply_to = $user_details[0]['st_email'];
                    $sender_name = $user_details[0]['st_display_name'] . ' ' . $user_details[0]['st_last_name'];


                    if ($ni != 0 && $ei != 0) {
                        for ($i = 0; $i < count($name); $i++) {
                            if (trim($name[$i]) != '' && trim($email[$i]) != '') {
                                $patterns = array('%##url##%', '%##sender_name##%', '%##user_name##%', '%##msg##%');
                                $replacements = array(base_url(), $sender_name, $name[$i], nl2br($this->input->post('invite_msg')));
                                $content = preg_replace($patterns, $replacements, $email_details[0]['st_email_body']);
								$content = str_replace("##DONATION##", $donation, $content);
                              
							  
							  	$chkmail = $this->common_model->check_email_exists($email[$i]); 								
								if($chkmail){ 								
								$err_msg = "Email already registered with Doobert";
								$data = array("result" => 2, "err_msg" => $err_msg);
								header('Content-type: application/json');
								echo json_encode($data); exit;								
								}	
								else{
                                $success_value = $this->common_function->send_mail($this->email, $email[$i], $email_details[0]['st_email_subject'], $content, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'), '', '', $reply_to);
                                $success_value++;
								}
                            }
                        }
                    }
                    //mail content end

                    $data['msg'] = 'Invitation Sent Successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } 
				
				
				else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);

        }
    }

######################## INVITEFRIEND END ##############################################
######################## EDIT DRIVERVEHICLE START ###########################################	

    public function edit_drivervehicle_maxdistance_view() {
        $this->load->view('wsdl/edit_drivervehicle_maxdistance');
    }
	
	function numcheck($in) {
	  if (intval($in) >= 1001) {
	   $this->form_validation->set_message('numcheck', 'Value must be less than or equal to 1000');
	   return FALSE;
	  } else {
	   return TRUE;
	  }
	}
	
    function edit_drivervehicle_maxdistance($user_id = '', $wsdl_token = '', $maxdrive_distance = '', $vehicle_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $vehicle_id = isset($_POST['vehicle_id']) ? $_POST['vehicle_id'] : '';
        $onewayfly_distance = isset($_POST['maxdrive_distance']) ? $_POST['maxdrive_distance'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array('vehicle_id' => '',
                    'maxdrive_distance' => ''
                );


                foreach ($form_field as $key => $value) {
                    $data['vehicle_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('maxdrive_distance', 'Max Drive Distance', 'trim|required|numeric|callback_numcheck');
                $this->form_validation->set_rules('vehicle_id', 'Vehicle Id', 'trim|required');



                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $vehicle_info = array("in_distance_to_drive" => $data['vehicle_details']['maxdrive_distance']
                    );

                    //echo "<pre>";print_r($pilot_info); die;		


                    $data['vehicle_info'] = $this->wsdl_model->update_driver_vehicle_info($vehicle_info, $vehicle_id, 'tbl_user_vehicle');

                    $data['msg'] = 'You have successfully updated driver vehicle details.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## EDIT DRIVERVEHICLE END ##############################################
######################## EDIT PILOTPLANE DETAIL START ###########################################	

    public function edit_pilotplane_maxdistance_view() {
        $this->load->view('wsdl/edit_pilotplane_maxdistance');
    }

    function edit_pilotplane_maxdistance($user_id = '', $wsdl_token = '', $pilot_id = '', $onewayfly_distance = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $pilot_id = isset($_POST['pilot_id']) ? $_POST['pilot_id'] : '';
        $onewayfly_distance = isset($_POST['onewayfly_distance']) ? $_POST['onewayfly_distance'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $form_field = array('onewayfly_distance' => '');



                foreach ($form_field as $key => $value) {
                    $data['pilot_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('onewayfly_distance', 'Oneway Fly Distance', 'trim|required|numeric|callback_numcheck');



                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');

                    //print_r($avl_days); die;


                    $pilot_info = array("in_distance_to_pilot" => $data['pilot_details']['onewayfly_distance'],
					'st_plane_type' => 'Single Engine',
                        "dt_modified" => date('Y-m-d H:i:s')
                    );

                    //echo "<pre>";print_r($pilot_info); die;		


                    $data['pilot_info'] = $this->wsdl_model->update_pilot_plane_info($pilot_info, $pilot_id, 'tbl_user_pilot');

                    $data['msg'] = 'You have successfully updated pilot plane details.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## EDIT PILOTPLANE DETAIL END ##############################################
######################## VERIFYPROFILE START ##############################################

    public function verifyprofile_view() {
        $this->load->view('wsdl/verifyprofile');
    }

    public function verifyprofile($user_id = '', $wsdl_token = '') {
        //$user_id = isset($_REQUEST['user_id']) ? $_REQUEST['user_id'] : '';
        //$wsdl_token = isset($_REQUEST['wsdl_token']) ? $_REQUEST['wsdl_token'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $this->session->set_userdata('userid', $user_details[0]['in_user_id']);
                $this->session->set_userdata('user_name', $user_details[0]['st_display_name']);
                $this->session->set_userdata('last_name', $user_details[0]['st_last_name']);
                $this->session->set_userdata('email', $user_details[0]['st_email']);
                redirect($this->config->item('base_url') . "verification_mobile/verify");
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## VERIFYPROFILE END ##############################################
######################## UPDATETOKEN START ###########################

    public function updatetoken_view() {
        $this->load->view('wsdl/updatetoken');
    }

    function updatetoken($user_id = '', $wsdl_token = '', $strDeviceToken = '', $strDeviceId = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $strDeviceToken = isset($_POST['strDeviceToken']) ? $_POST['strDeviceToken'] : '';
        $strDeviceId = isset($_POST['strDeviceId']) ? $_POST['strDeviceId'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($strDeviceToken) && $strDeviceToken != '' && isset($user_id) && $user_id > 0) {
                    $array_update = array("strDeviceToken" => $strDeviceToken, "strDeviceId" => $strDeviceId, "in_device_type" => '1');
                    $this->wsdl_model->update_user_info($array_update, $user_id, 'tbl_users');

                    $data['msg'] = 'You have successfully updated token.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	function update_android($user_id = '', $wsdl_token = '', $strDeviceToken = '', $strDeviceId = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $strDeviceToken = isset($_POST['strDeviceToken']) ? $_POST['strDeviceToken'] : '';
        $strDeviceId = isset($_POST['strDeviceId']) ? $_POST['strDeviceId'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($strDeviceToken) && $strDeviceToken != '' && isset($user_id) && $user_id > 0) {
                    $array_update = array("strDeviceToken" => $strDeviceToken, "strDeviceId" => $strDeviceId, "in_device_type" => '2');
                    $this->wsdl_model->update_user_info($array_update, $user_id, 'tbl_users');

                    $data['msg'] = 'You have successfully updated token.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATETOKEN END #######################################


######################## UPDATE OVERNIGHTLEGCOMMENT START ###########################

    public function update_overnightleg_comment_view() {
        $this->load->view('wsdl/update_overnightleg_comment');
    }

    function update_overnightleg_comment($user_id = '', $transport_id = '', $leg_id = '', $comment = '') {

        //$leg_id = 982;
        //$transport_id = 555;
        //$user_id = 50;
        //$meeting_location = '@ 21 street new petrol pump';	

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        $leg_id = isset($_POST['leg_id']) ? $_POST['leg_id'] : '';
        $comment = isset($_POST['comment']) ? $_POST['comment'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($comment) && $comment != '' && isset($user_id) && $user_id > 0 && isset($leg_id) && $leg_id > 0) {
                    $array_update = array("st_meeting_location" => $comment,
                        "in_modified_by" => $user_id,
                        "dt_modified" => date("Y-m-d H:i:s"));
                    $this->load->model('orgtrasnportation_model');
                    $this->orgtrasnportation_model->update_legs($array_update, $leg_id);

                    $data['msg'] = 'Comments has been updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE OVERNIGHTCOMMENT END #######################################


#################### FACEBOOK SIGNUP START #######################

    public function facebook_signup_view() {
        $this->load->view('wsdl/facebook_signup');
    }

    public function facebook_signup($f_name = '', $l_name = '', $email_id = '',$facebook_id = '',$in_volunteer_type = '',$zipcode = '') {

        /* $_POST['f_name'] = 'fname';
          $_POST['l_name'] = 'lname';
          $_POST['email_id'] = 'testing@gmail.com';
          $_POST['pswd'] = '123456';
          $_POST['confirm_pswd'] = '123456'; */

        $f_name = isset($_POST['f_name']) ? $_POST['f_name'] : '';
        $l_name = isset($_POST['l_name']) ? $_POST['l_name'] : '';
        $email = isset($_POST['email_id']) ? $_POST['email_id'] : '';
        $facebook_id = isset($_POST['facebook_id']) ? $_POST['facebook_id'] : ''; 
        $in_volunteer_type = isset($_POST['in_volunteer_type']) ? $_POST['in_volunteer_type'] : '';
        $zipcode = isset($_POST['zipcode']) ? strtoupper($_POST['zipcode']) : '';
		$organization_name = isset($_POST['organization_name']) ? $_POST['organization_name'] : '';
        
		$flgRescueRelayTransport = isset($_POST['flgRescueRelayTransport']) ? $_POST['flgRescueRelayTransport'] : '';
		$available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
		$rescue_relay_in_ride_radius = isset($_POST['rescue_relay_in_ride_radius']) ? $_POST['rescue_relay_in_ride_radius'] : '';
		$rescue_zipcode = isset($_POST['rescue_zipcode']) ? $_POST['rescue_zipcode'] : '';
		$flgLocalRideTransport = isset($_POST['flgLocalRideTransport']) ? $_POST['flgLocalRideTransport'] : '';
		$local_ride_radius = isset($_POST['local_ride_radius']) ? $_POST['local_ride_radius'] : '';
		$local_ride_mobile_number = isset($_POST['local_ride_mobile_number']) ? $_POST['local_ride_mobile_number'] : '';
		$flgFosterHome = isset($_POST['flgFosterHome']) ? $_POST['flgFosterHome'] : '';
		$prefer_animal = isset($_POST['prefer_animal']) ? $_POST['prefer_animal'] : '';
		$timeframe = isset($_POST['timeframe']) ? $_POST['timeframe'] : '';
		
		$driver = "";
        $pilot = "";


        $user_details = array();

        $user_details['firstname'] = isset($_POST['f_name']) ? $this->common_function->custom_htmlentities($_POST['f_name']) : '';
        $user_details['lastname'] = isset($_POST['l_name']) ? $this->common_function->custom_htmlentities($_POST['l_name']) : '';
        $user_details['email'] = isset($_POST['email_id']) ? $this->common_function->custom_htmlentities($_POST['email_id']) : '';
        $user_details['facebook_id'] = isset($_POST['facebook_id']) ? $this->common_function->custom_htmlentities($_POST['facebook_id']) : '';     
		$user_details['in_volunteer_type'] = isset($_POST['in_volunteer_type']) ? $this->common_function->custom_htmlentities($_POST['in_volunteer_type']) : '';      
		$user_details['zipcode'] = isset($_POST['zipcode']) ? $this->common_function->custom_htmlentities($_POST['zipcode']) : '';
		$user_details['organization_name'] = isset($_POST['organization_name']) ? $this->common_function->custom_htmlentities($_POST['organization_name']) : '';


        $this->form_validation->set_rules('f_name', 'First Name', 'trim|required');
        $this->form_validation->set_rules('l_name', 'Last Name', 'trim|required');
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');
        $this->form_validation->set_rules('facebook_id', 'Facebook Id', 'trim|required');
        $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim|required');
        $this->form_validation->set_rules('in_volunteer_type', 'Volunteer Type', 'trim');
		 

        $data = array();
        $Err_Msg = '';
        if (isset($user_details['email']) && $user_details['email'] != '') {
            $counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $user_details['email'], "in_deleted" => 0)); 
            if ($counts > 0) {
                $Err_Msg = "Email address already exists.";
            }
        }
        if ($this->form_validation->run() == FALSE || $Err_Msg != '') {
			$this->form_validation->set_error_delimiters('', '');
            $data['err_msg'] = validation_errors() . $Err_Msg;
            //echo "<pre>";print_r($data);die;
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        } else {
            $browser_details = array();
            $arrVehicle = array();
            $arrPilot = array();
            $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
            $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];


            $data_array = array("st_display_name" => $user_details['firstname'],
                "st_last_name" => $user_details['lastname'],
                "st_email" => $user_details['email'],
				"st_referred_by" => $user_details['organization_name'],
				"st_facebook_uid" => $user_details['facebook_id'],	
                "dt_created" => date("Y-m-d h:i:s"),
                "dt_modified" => date("Y-m-d h:i:s"),
                "in_public" => "1",
                "in_status" => "1",
                "st_browser_info" => @serialize($browser_details)
            );

            $inserted_id = $this->user_model->insert_user($data_array);

			
			if($flgLocalRideTransport == 1)
					{  
						$user_profile_info["in_status"] = "1";
					    
							$mobile = $this->input->post('local_ride_mobile_number');
							$in_messanger = 1;
							$local_ride_radius =$this->input->post('local_ride_radius');
						
						
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							
							
							$arrRide = array(   'in_user_id' => $inserted_id,
												'in_ride_radius' => ($local_ride_radius)?$local_ride_radius : 50,
												'in_messanger' => ($in_messanger)?$in_messanger:0,
												'st_mobile' => ($mobile)?$mobile:'',
												'dt_created' => date('Y-m-d H:i:s'),
												'dt_modified' => date('Y-m-d H:i:s'),
												'in_deleted' => 0
										);

							//echo '<pre>'; print_r($arrRide);die;
							$this->db->insert('tbl_user_rides', $arrRide);
							//echo $last_insert_ride_id = $this->db->insert_id();die;
					}
					
					if($this->input->post('flgFosterHome')==1)
					{
						  $animal_type = $this->input->post('prefer_animal');
						  $user_profile_info['in_complete_profile']= '0';	
						  $duration_serve = $this->input->post('timeframe');
						  $insert_id = $this->user_model->add_foster_home_details($animal_type,$duration_serve,$inserted_id,'tbl_foster_user_detail');
						  $user_profile_info['st_foster_home'] = "Y";
						  $profile_setting_arr['st_foster']	 = 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}';
					}
					
					
					
					if($this->input->post('flgRescueRelayTransport')== 1)
						{
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							$arrVehicle = array('in_user_id' => $inserted_id,
										'st_driver_availability' => serialize($this->input->post('available_days')),
										'st_zip_vehicle' => $zip_code,
										'in_distance_to_drive' => $this->input->post('rescue_relay_in_ride_radius'),
										'dt_created' => date('Y-m-d H:i:s'),
										'dt_modified' => date('Y-m-d H:i:s'),
										'st_vehicle_type' => '4-Door Car',
										'in_status' => '1',
										'zip_lat'  => $lat,
										'zip_lon'	=> $lon,
										'in_deleted' => '0'
										);
									
							$this->db->insert('tbl_user_vehicle', $arrVehicle);
							$last_insert_driver_id = $this->db->insert_id();
						}	
						
			$token = $this->wsdl_model->generate_token($inserted_id);
			$code=mt_rand(1000,9999);
			//$phoneno ='+91'.$phoneno;			
			//$text = "Your 4 digit secret code is ".$code;
			//$result = sendsms($phoneno,$text);
			
			
			$insData = array('in_sms_code' => $code);
			$this->db->where('in_user_id', $inserted_id);
            $record = $this->db->update('tbl_users', $insData);

            if ($in_volunteer_type == '1') {
                $driver = 'Y';
                $pilot = 'N';

                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);
            }
            if ($in_volunteer_type == '2') {
                $pilot = 'Y';
                $driver = 'N';
                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }
            if ($in_volunteer_type == '3') {
                $driver = 'Y';
                $pilot = 'Y';
                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);

                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }

			if(!empty($zipcode)){
				$address_details	= $this->common_model->getaddress($zipcode);		
				$get_lat_long       = $this->common_model->get_lattitude_longitude(trim($zipcode));
					//print_r($get_lat_long);
					//exit;
                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        //$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
                       // $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
                    } else 
					{
						$lat = '0.00';
						$lon = '0.00';
					}
					$this->wsdl_model->update_vehicle_zip_code($inserted_id, $zipcode, $lat, $lon);
					$this->wsdl_model->update_plane_zip_code($inserted_id, $zipcode,$lat, $lon);		
				}
				
            $this->user_model->insert_user_profile(array("in_user_id" => $inserted_id, "st_zip" => $zipcode,"st_city" => isset($address_details['city']) ? $address_details['city'] : '',"st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',"st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '', "st_driver" => $driver, "st_pilot" => $pilot, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s")));
			$this->email_confirm($user_details,$inserted_id);	
            $this->login_details($user_details);
			
			$get_userdts = $this->wsdl_model->get_userdts($inserted_id);
					
			$country = $this->common_model->get_country(trim($get_userdts['st_zip']));	
					
			if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
			if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
			if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }

            //End set coockie
            $data['msg'] = 'Your account has been created successfully.';
			$profile_image = $this->config->item('upload_url') . "profile/250x250/no_photo_icon.png";
            $data = array("result" => 1,"profile_image" => $profile_image,"f_name"=>$user_details['firstname'],"msg" => $data['msg'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## FACEBOOK SIGNUP END ################################




######################## UPDATE NOTIFICATION START ###########################

    public function update_notification_view() {
        $this->load->view('wsdl/update_notification');
    }

    function update_notification($user_id = '', $wsdl_token = '', $flgIsNotification = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
		$wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$flgIsNotification =isset($_POST['flgIsNotification']) ? $_POST['flgIsNotification'] : '';
       
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($flgIsNotification) && $flgIsNotification != '' && isset($user_id) && $user_id > 0) {
                    $array_update = array("in_pushnotification" => $flgIsNotification);
                    $this->load->model('wsdl_model');
                    $this->wsdl_model->update_pushnotification($array_update, $user_id);
					
					

                    $data['msg'] = 'You have successfully updated  notification.';
					//echo '<pre>'; print_r($user_details); die;
					$user_pushnotification = $this->wsdl_model->get_user_pushnotification($user_id);
					
					$data = array("result" => 1, "msg" => $data['msg'], "notification" => $user_pushnotification['in_pushnotification']);
					
                    //$data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
					$user_pushnotification = $this->wsdl_model->get_user_pushnotification($user_id);
                    $data = array("result" => 2, "msg" => $data['msg'],"notification" => $user_pushnotification['in_pushnotification']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
				$user_pushnotification = $this->wsdl_model->get_user_pushnotification($user_id);
                $data = array("result" => 103, "err_msg" => $err_msg,"notification" => $user_pushnotification['in_pushnotification']);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## UPDATE NOTIFICATION END #######################################



######################## SEAR AIRPORT START #######################################	

    public function search_airport_view() {
        $this->load->view('wsdl/search_airport');
    }

    function search_airport($serchtext = '') {

        //$serchtext = 'KP';
       
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$serchtext = isset($_POST['serchtext']) ? $_POST['serchtext'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($serchtext) && $serchtext != '') {
                    $data = array();

                    $airport_list = $this->wsdl_model->airport_list($serchtext);
                    $data['airport_list'] = $airport_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## SEAR AIRPORT END ##############################################





#################### CREATE LEG START #######################

    public function create_aviationleg_view() {
        $this->load->view('wsdl/create_aviationleg');
    }

    public function create_aviationleg($user_id = '', $transport_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        $pickup_locationid = isset($_POST['pickup_locationid']) ? $_POST['pickup_locationid'] : '';     
        $pickup_timezone = isset($_POST['pickup_timezone']) ? $_POST['pickup_timezone'] : '';
        $pickup_start_time = isset($_POST['start_time']) ? $_POST['start_time'] : '';

        $dropoff_locationid = isset($_POST['dropoff_locationid']) ? $_POST['dropoff_locationid'] : '';     
        $dropoff_timezone = isset($_POST['dropoff_timezone']) ? $_POST['dropoff_timezone'] : '';
        $dropoff_start_time = isset($_POST['end_time']) ? $_POST['end_time'] : ''; 
		     
		$meeting_location = isset($_POST['meeting_location']) ? $_POST['meeting_location'] : '';
        $route_type = isset($_POST['route_type']) ? $_POST['route_type'] : '';
		
		$pickup_details=$this->wsdl_model->airport_pickup_details($pickup_locationid);
		$picstreet='';
		$piccity='';
		$picstate='';
		//$piczip='';
		
		$dropstreet='';
		$dropcity='';
		$dropstate='';
		//$dropzip='';
		$piczip_details='';
		$dropzip_details='';
		$loc1='';
		$loc2='';
		
		//echo '<pre>'; print_r($pickup_details); die;
		if(!empty($pickup_details))
		{			
			$picstreet=isset($pickup_details) ? $pickup_details[0]['loc_id'] : ''; 
			$piccity=isset($pickup_details) ? $pickup_details[0]['st_city'] : '';
			$picstate=isset($pickup_details) ? $pickup_details[0]['st_state'] : '';
			//$piczip=isset($pickup_details) ? $pickup_details[0]['st_zip'] : '';
			$piclat=isset($pickup_details) ? $pickup_details[0]['st_latitude'] : '';
			$piclon=isset($pickup_details) ? $pickup_details[0]['st_longitude'] : '';
			
			
			if(isset($pickup_details[0]['st_latitude']) && $pickup_details[0]['st_latitude']!='' && isset($pickup_details[0]['st_longitude']) && $pickup_details[0]['st_longitude']!='')
			{
				$loc1 = $pickup_details[0]['st_latitude'].",".$pickup_details[0]['st_longitude'];
			}
								
			
			
		}
		$dropoff_details=$this->wsdl_model->airport_dropoff_details($dropoff_locationid);
		//echo '<pre>'; print_r($dropoff_details); die;
		
		if(!empty($dropoff_details))
		{			
			$dropstreet=isset($dropoff_details) ? $dropoff_details[0]['loc_id'] : ''; 
			$dropcity=isset($dropoff_details) ? $dropoff_details[0]['st_city'] : '';
			$dropstate=isset($dropoff_details) ? $dropoff_details[0]['st_state'] : '';
			//$dropzip=isset($dropoff_details) ? $dropoff_details[0]['st_zip'] : '';
			$droplat=isset($dropoff_details) ? $dropoff_details[0]['st_latitude'] : '';
			$droplon=isset($dropoff_details) ? $dropoff_details[0]['st_longitude'] : '';
			
			if(isset($dropoff_details[0]['st_latitude']) && $dropoff_details[0]['st_latitude']!='' && isset($dropoff_details[0]['st_longitude']) && $dropoff_details[0]['st_longitude']!='')
			{
				$loc2 = $dropoff_details[0]['st_latitude'].",".$dropoff_details[0]['st_longitude'];
			}
			
		}
		
		
		

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			$transport_details = $this->wsdl_model->get_transport_details($transport_id);

            if (count($user_details) > 0) {

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('transport_id', 'Transport Id', 'trim|required');
                $this->form_validation->set_rules('route_type', 'Route Type', 'trim|required');


                $data = array();

                if ($this->form_validation->run() == FALSE) {
					$this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    //echo "<pre>";print_r($data);die;
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {

                    $data_array = array("in_created_by" => $user_id,
                        "in_transportation_id" => $transport_id,
                        "in_route_type" => $route_type,
                        "in_multi_user" => '0',
						"in_user_num" =>'0',
                        "st_meeting_location" => $meeting_location,
                        "dt_created" => date('Y-m-d H:i:s')
                    );

                    $inserted_id = $this->wsdl_model->insert_leg($data_array);

		 			

                    $parrt_cep = $this->wsdl_model->get_legs_participants($inserted_id, $user_id, $transport_id); // updated by ghanshyam on 08Dec2014
                    //echo "<pre>";print_r($parrt_cep);die;
                    if ($parrt_cep <= 0) {
                        $join_data = array("in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_transportation_leg_id" => $inserted_id,
                            "in_created_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => 0
                        );
                        $this->orgtrasnportation_model->join_legs($join_data);
                    }


						$start1 = $this->getLatLong($loc1);
                  
                        $pickup_array = array("in_transportation_leg_id" => $inserted_id,
                            "st_leg_type" => "P",
                            "st_street" => $picstreet,
                            "st_city" => ($start1['city'])?$start1['city']:$piccity,   //$piccity,
                            "st_state" => ($start1['state'])?$start1['state']:$picstate,   //$picstate,
                            "st_zip" => $start1['postal_code'],
                           "st_country" => ($start1['country'])?strtoupper($this->common_function->shortCountry[$start1['country']]):strtoupper($this->common_function->shortCountry[$pickup_details[0]['st_iso_country']]),
                            "dt_start_time" => date('Y-m-d H:i:s', strtotime($pickup_start_time)),
                            "st_timezone" => $pickup_timezone,
							//"st_geometry"				=> @serialize(array($pickup_details[0]['st_latitute'],$pickup_details[0]['st_longitute'])),
                        );
                        //echo '<pre>'; print_r($pickup_array); die;						

                        $this->wsdl_model->insert_leg_detail($pickup_array);
                        $this->load->model('user_model');
                        $data['arrVehicle'] = $this->user_model->get_vehicle_detail($user_id);
						
						$start2 = $this->getLatLong($loc2);
						 $dropoff_array = array("in_transportation_leg_id" => $inserted_id,
                            "st_leg_type" => "D",
                            "st_street" => $dropstreet,
                            "st_city" => ($start2['city'])?$start2['city']:$dropcity, //$dropcity,
                            "st_state" => ($start2['state'])?$start2['state']:$dropstate, //$dropstate,
                            "st_zip" => $start2['postal_code'],
                            "st_country" => ($start2['country'])?strtoupper($this->common_function->shortCountry[$start2['country']]):strtoupper($this->common_function->shortCountry[$dropoff_details[0]['st_iso_country']]),
                            "dt_start_time" => date('Y-m-d H:i:s', strtotime($dropoff_start_time)),
                            "st_timezone" => $dropoff_timezone,
							//"st_geometry"	=> @serialize(array($dropoff_details[0]['st_latitute'],$dropoff_details[0]['st_longitute'])),
                        );
                        $this->wsdl_model->insert_leg_detail($dropoff_array);


                        if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                            $leg_vehicle_detail = array("in_transportation_id" => $transport_id,
                                "in_user_id" => $user_id,
                                "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                "in_transportation_leg_id" => $inserted_id,
                                "dt_created" => date("Y-m-d H:i:s"),
                                "in_deleted" => 0
                            );
                            $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                        } 
						
						 $arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
                            "in_transportation_id" => $transport_id,
                            "in_user_id" => $user_id,
                            "in_type" => 12,
                            "in_modified_by" => $user_id,
                            "dt_created" => date("Y-m-d H:i:s"),
                            "in_deleted" => "0"
                        );

                        $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);                 

                   
                    $data['msg'] = 'You have successfully created leg.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

######################## CREATE AVIATIONLEG END ################################

function getLatLong($address=false) { 
		//$address='04MT,USA';
		$address = str_replace(' ', '+', $address);
		//$url = 'http://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&sensor=false';
		$google_api_key = $this->config->item('googleapi_key');
		$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&key='.$google_api_key.'&alternatives=false&sensor=false';	
		//echo $url."<br><br><br>";
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$geoloc = curl_exec($ch);
		//echo "<pre>";print_r(json_decode($geoloc));die;
		$postal_code = '';
		if(json_decode($geoloc)->status=="OK"){
		$json = json_decode($geoloc);
		$postal_code = '';$state='';$city='';$country='';
		for($a=0;$a<count($json->results[0]->address_components);$a++)
		{
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='postal_code')
			{
				$postal_code = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='administrative_area_level_1')
			{
				$state = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='locality')
			{
				$city = $json->results[0]->address_components[$a]->short_name;
			}
			if(isset($json->results[0]->address_components[$a]->types[0]) && $json->results[0]->address_components[$a]->types[0]=='country')
			{
				$country = $json->results[0]->address_components[$a]->short_name;
			}
		}
		//echo "<pre>";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));die;
		return array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country"=>$country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng));
		}
		
	}
	
	 public function transport_monitor_detail_view() {
        $this->load->view('wsdl/transport_monitor_detail');
    }

    function transport_monitor_detail($user_id = '', $wsdl_token = '', $transport_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        $transport_details = array();

        if (isset($transport_id) && $transport_id != '' && isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {


            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $transport_monitor_detail = $this->wsdl_model->get_all_transport_monitors($transport_id);
                $participant_users = $this->wsdl_model->get_transport_participant_users($transport_id);
                //echo '<pre/>';print_r($transport_monitor_detail);exit;
                $data['transport_monitor'] = $transport_monitor_detail;
                $data['participant_id'] = $participant_users;
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId, Transport ID or Token Missing";
            $data = array("result" => 105, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	 public function join_transport_monitor_view() {
        $this->load->view('wsdl/join_transport_monitor');
    }

	
	function join_transport_monitor($user_id = '', $wsdl_token = '', $transport_id = '') {
		
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        
        $transport_details = array();

        if (isset($transport_id) && $transport_id != '' && isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {


            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {
                
				$transport_monitors = $this->wsdl_model->get_all_transport_monitors($transport_id);
				//echo '<pre/>';print_r($transport_monitor_detail);exit;
				$monitor_ids = array();
				 if (isset($transport_monitors) && count($transport_monitors) < 2) {
					 
					 foreach($transport_monitors as $mon_val)
					 {
						$monitor_ids[] = $mon_val['in_user_id'];
					 }
					 
					 if(in_array($user_id,$monitor_ids))
					 {
						$err_msg = "You have already joined as transport monitor.";
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data);
					 }
					 else{
                    $join_data = array("in_transportation_id" => $transport_id,
                        "in_user_id" => $user_id,
                        "in_monitor" => "1",
                        "in_created_by" => $user_id,
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => 0
                    );
                    $this->wsdl_model->join_legs($join_data);
					
					$user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);
					$transport_details = $this->wsdl_model->get_transport_details($transport_id);
					
					$link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
					$url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
					$notification_message = '<div class="timeline-body border">
								<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="' . $url_link . '">' . $this->session->userdata('user_name') . '</a> joined the leg of transportation.</h2>
								<div class="timeline-content">
									<p class="text17">' . date("l, M", strtotime($transport_details[0]['dt_target'])) . ' <strong>' . date(" d", strtotime($transport_details[0]['dt_target'])) . '</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>' . $transport_details[0]['st_from_city'] . ', ' . $transport_details[0]['st_from_state'] . ', ' . $transport_details[0]['st_from_zip'] . '</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>' . $transport_details[0]['st_to_city'] . ', ' . $transport_details[0]['st_to_state'] . ', ' . $transport_details[0]['st_to_zip'] . '</p></div>
									<div class="clearfix"></div>
							  </div></div>';
					$arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
						"in_transportation_id" => $transport_id,
						"in_user_id" => $user_id,
						"in_type" => 23,	//23 for signing up as a transport monitor
						"in_modified_by" => $user_id,
						"dt_created" => date("Y-m-d H:i:s"),
						"in_deleted" => "0"
					);

                    $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);
					
					$data['msg'] = 'You have successfully joined as transport monitor.';
					$data = array("result" => 1, "msg" => $data['msg']);
					header('Content-type: application/json');
					echo json_encode($data);
					}
                } else {
                    $err_msg = "A Transportation can not have more than 2 monitors.";
					$data = array("result" => 2, "err_msg" => $err_msg);
					header('Content-type: application/json');
					echo json_encode($data);
                }
				
				
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId, Transport ID or Token Missing";
            $data = array("result" => 105, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	public function cancel_transport_monitor_view() {
        $this->load->view('wsdl/cancel_transport_monitor');
    }
	
	function cancel_transport_monitor($user_id = '', $wsdl_token = '', $transport_id = '')
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
        
        $transport_details = array();

        if (isset($transport_id) && $transport_id != '' && isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {
				
				$monitor_data = $this->wsdl_model->get_monitor_part_id($user_id,$transport_id);
				if(isset($monitor_data) && !empty($monitor_data))
				{
				$this->wsdl_model->update_transport_monitor_status(array("in_deleted" => 1), $monitor_data['in_tr_pr_id']);
				
				$user_data = $this->wsdl_model->get_user_details_by_user_id($user_id);
				$transport_details = $this->wsdl_model->get_transport_details($transport_id);

                $link_name = $this->common_function->get_filtered_name($user_data['st_display_name']);
                $url_link = "##base_url##user-" . $user_id . "-" . $link_name . "/";
              	$arr_notification = array("in_organization_id" => $transport_details[0]['in_organization_id'],
						"in_transportation_id" => $transport_id,
						"in_user_id" => $user_id,
						"in_type" => 24,	//24 for remove from transport monitor
						"in_modified_by" => $user_id,
						"dt_created" => date("Y-m-d H:i:s"),
						"in_deleted" => "0"
					);
                $notification_id = $this->common_model->insert_data("tbl_notification", $arr_notification);

                $data['msg'] = 'You have successfully removed from transport monitor.';
				$data = array("result" => 1, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);
				}
				else{
					$err_msg = "You have been logged out as you logged into a different device.";
					$data = array("result" => 103, "err_msg" => $err_msg);
					header('Content-type: application/json');
					echo json_encode($data);
				}
                }  else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId, Transport ID or Token Missing";
            $data = array("result" => 105, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	public function org_list_view() {
        $this->load->view('wsdl/org_list');
    }

    function org_list($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (!empty($user_details)) {
                $org_details = $this->wsdl_model->get_org_list($user_id);
                //echo '<pre>'; print_r($org_details); die;

                if (count($org_details) > 0) {


                    $data = $org_details;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $err_msg = "Invalid UserId or Token";
                    $data = array("result" => 103, "err_msg" => $err_msg);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 105, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	 public function add_animal_view() {
        $this->load->view('wsdl/add_animal');
    }

    public function add_animal($user_id = '', $wsdl_token = '', $org_id = '', $animal_name = '', $type_id = '', $gender = '', $breed_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
        $org_name = isset($_POST['org_name']) ? $_POST['org_name'] : '';
		$photo1_profilepic = isset($_POST['photo1_profilepic']) ? $_POST['photo1_profilepic'] : '0';
		$photo2_profilepic = isset($_POST['photo2_profilepic']) ? $_POST['photo2_profilepic'] : '0';
		$photo3_profilepic = isset($_POST['photo3_profilepic']) ? $_POST['photo3_profilepic'] : '0';
		$photo4_profilepic = isset($_POST['photo4_profilepic']) ? $_POST['photo4_profilepic'] : '0';
		
		$organization_data = $this->wsdl_model->get_org_detail_by($org_id);
		
		if(isset($organization_data) && !empty($organization_data) && isset($organization_data['st_org_name']) &&  $organization_data['st_org_name'] != '')
		{
			$org_name = $organization_data['st_org_name'];
		}
		
        $animal_name = isset($_POST['animal_name']) ? $_POST['animal_name'] : '';
        $type_id = isset($_POST['type_id']) ? $_POST['type_id'] : '';
        $gender = isset($_POST['gender']) ? $_POST['gender'] : '';
        $breed_id = isset($_POST['breed_id']) ? $_POST['breed_id'] : '';
        $flgIsPublicProfile = isset($_POST['flgIsPublicProfile']) ? $_POST['flgIsPublicProfile'] : '0';
		$fbconfig = array();
			 
		$this->config->load('facebook');			 
		$fbconfig['appid' ]  = $this->config->item('appId');
		$fbconfig['secret']  = $this->config->item('secret');
		$fbconfig['baseurl'] = $this->config->item('baseurl');
	 
		$this->load->library('facebook');	
		$facebook = new Facebook(array(
			'appId' => $fbconfig['appid'],
			'secret' => $fbconfig['secret'],
			'cookie' => true,
		));
	
		$user = $facebook->getUser();
		if($user)$data['fb_user'] = 'yes';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details[0]['st_email']); die;

            if (count($user_details) > 0) {
			
			if($this->input->post('url_link_one')!='' && (stripos($this->input->post('url_link_one'),'youtube.com')===false)){	
			//echo 'AA';die;				
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			
			}
			
			else if($this->input->post('url_link_two')!='' && (stripos($this->input->post('url_link_two'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);			
			}
			
			else if($this->input->post('url_link_three')!='' && (stripos($this->input->post('url_link_three'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			}
			
			else if($this->input->post('url_link_four')!='' && (stripos($this->input->post('url_link_four'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			}
			
			else
			{
			
				$data = array();
                $demeanotid = '';
                $this->db->select('in_demeanor_id');
                $this->db->from('tbl_demeanor');
                $this->db->where('in_animal_type_id', $type_id);
                $this->db->where('st_demeanor_name', 'Unknown');
                $query = $this->db->get();
                //echo $this->db->last_query();
                $res = $query->row_array();
                $demeanotid = $res['in_demeanor_id'];

                $animal_type_name = '';
                $this->db->select('st_animal_type_name');
                $this->db->from('tbl_animal_type');
                $this->db->where('in_animal_type_id', $type_id);
                $query = $this->db->get();
                //echo $this->db->last_query();
                $res = $query->row_array();
                $animal_type_name = $res['st_animal_type_name'];

                //select in_demeanor_id from tbl_demeanor where in_animal_type_id='6' and st_demeanor_name='Unknown'

                $data['animal_info'] = array('in_organization_id' => $org_id,
                    'st_animal_name' => $animal_name,
                    'st_gender' => $gender,
                    'in_animal_type_id' => $type_id,
                    'in_primary_breed_id' => $breed_id,
                    'in_neutered_id' => 3,
                    'st_declawed' => 'U',
                    'in_demeanor_id' => $demeanotid,
                    'in_created_by' => $user_id,
                    'in_status' => 0,
                    'in_animal_public' => $flgIsPublicProfile,
                    'dt_created' => date('Y-m-d H:i:s')
                );




                $data['add_animal_info'] = $this->wsdl_model->add_animal_profile($data['animal_info']);
                $last_id = $this->db->insert_id(); //get last inserted id

                $profile_pic = 0;

                $this->load->library('upload');
                //photo1 starts
                if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo1']['name'], ".");
                    $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo1');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo1']['name'] != '') {					

                     $file_details = array("in_animal_id" => $last_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic" =>$photo1_profilepic
                    );
										
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }
                // photo1 ends
                // photo2 starts

                if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo2']['name'], ".");
                    $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo2');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo2']['name'] != '') {

                    $file_details = array("in_animal_id" => $last_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic" =>$photo2_profilepic
                    );
									
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }

                // photo2 ends
                // photo3 starts
                if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo3']['name'], ".");
                    $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo3');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();



                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {					
                     $file_details = array("in_animal_id" => $last_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic" =>$photo3_profilepic
                    );									
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }

                //photo3 ends
                // photo4 starts

                if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo4']['name'], ".");
                    $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo4');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {

                    $file_details = array("in_animal_id" => $last_id,
										"st_file_name" => $config['file_name'],
										"st_file_type" => 'P',
										"dt_created" => date("Y-m-d H:i:s"),
										"in_deleted" => "0",
										"in_profile_pic" =>$photo4_profilepic
                    );										
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }
                //photo4 ends
                // photo5 starts
				/*
                if (isset($_FILES['photo5']['name']) && $_FILES['photo5']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo5']['name'], ".");
                    $_FILES['photo5']['name'] = str_replace(".", "", substr($_FILES['photo5']['name'], 0, $lastDot)) . substr($_FILES['photo5']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo5']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo5');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();



                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {

                    $file_details = array("in_animal_id" => $last_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }
				*/
                // photo5 ends
				
				//Add youtube URLS
			$url_link = array(	'url_link_one'		=>	'',
								'url_link_two'		=>	'',
								'url_link_three'	=>	'',
								'url_link_four'		=>	''
							);
			
			if($this->input->post('url_link_one') != '') {
				$url_link['url_link_one'] = $this->input->post('url_link_one'); 
			}
			if($this->input->post('url_link_two') != '') {
				$url_link['url_link_two'] = $this->input->post('url_link_two'); 
			}
			if($this->input->post('url_link_three') != '') {
				$url_link['url_link_three'] = $this->input->post('url_link_three'); 
			}
			if($this->input->post('url_link_four') != '') {  
				$url_link['url_link_four'] = $this->input->post('url_link_four'); 
			}
			
			foreach($url_link as $key => $value) {
				if($value != '') {	
				
				   $video_id = explode("?v=", $value);
				   $video_id = $video_id[1];
				
				
				$date	=	date('Y-m-d H:i:s');
					$data['animal_links'] = array(	'in_animal_id'	=>	$last_id,
													'st_file_name'	=>	'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg', //$value,
													'st_file_type'	=>	'V',
													'dt_created'	=>	$date
													);
										  
					$data['add_animal_link']	=	$this->wsdl_model->add_animal_photo($data['animal_links']);
				}
			}
								
				
                /*$animal_file = array();
                $animal_file = $this->wsdl_model->get_animal_file($last_id);
                if (isset($animal_file) && !empty($animal_file)) {
                    $this->wsdl_model->update_animal_file($animal_file['in_file_id']);
                }*/


                //notification
                $data['notification'] = array('in_organization_id' => $org_id,
                    'in_animal_id' => $last_id,
                    'in_type' => 2,
                    'in_modified_by' => $user_id,
                    'dt_created' => date('Y-m-d H:i:s'),
                    'in_deleted' => 0
                );

                $notification = $this->wsdl_model->add_notification($data['notification']);
                $profilestory = '';
                //Sending Email to all organization users 
                $data['get_emails'] = $this->common_model->get_org_users_email($org_id);
                //echo '<pre>'; print_r($data['get_emails']); die;

                $email_add = array();
                if (!empty($data['get_emails'])) {
                    foreach ($data['get_emails'] as $row) {
                        $email_add[] = $row['st_email'];
                    }
                }

                //Pushing login user email to array
                $useremail = $user_details[0]['st_email'];
                array_push($email_add, $useremail);
                $this->load->library('email');

                //Getting email body
                $email_body = $this->common_model->get_email_containt('19');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
                $added_animal_image = $this->wsdl_model->get_animal_images($last_id);
                $animal_image = '';
                if ($added_animal_image == '') {
                    $animal_image = 'no_photo_icon.png';
                } else {
                    $animal_image = $added_animal_image;
                }

                //Sending email to organization owner.				
                $patterns = array('%##url##%', '%##user_display_name##%', '%##animal_profile_display_name##%', '%##organization_name##%', '%##animal_img##%', '%##animal_profile_story##%', '%##animal_profile_details##%', '%##current_year##%', '%##user_display_name_adding_animal##%');
                $replacements = array(base_url(), $user_details[0]['st_display_name'] . " " . $user_details[0]['st_last_name'], $animal_name, $org_name, $animal_image, $profilestory, base_url() . 'animal-' . $last_id . '-' . $this->common_function->get_filtered_name($animal_name), date('Y'), $user_details[0]['st_display_name'] . " " . $user_details[0]['st_last_name']);

                $content = preg_replace($patterns, $replacements, $email_body[0]['st_email_body']);
				$content = str_replace("##DONATION##", $donation, $content);
                $subject = str_replace('##organization_name##', $org_name, $email_body[0]['st_email_subject']);
                $message = $content;

                /* foreach($data['get_emails'] as $row){
                  $to = $row['st_email'];
                  $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));
                  } */
				$user_to_id = $this->common_model->get_user_id_by_email($user_details[0]['st_email']);
										
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($user_details[0]['st_email']),$message);		
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($user_details[0]['st_email']),$message);		
				
				$send_email = 0;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}	
				
				if($send_email == 0)
				{
					$animal_setting = $this->common_model->user_notification_setting($user_to_id);
					if(isset($animal_setting) && isset($animal_setting['flg_immediate_animal']) && $animal_setting['flg_immediate_animal'] == '1')
					{
						$send_email = 1;
					}								
				}
				
				if($send_email == '1')
				{
                	$this->common_function->send_mail($this->email, $user_details[0]['st_email'], $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
               		//End sending email to organization owner.
				}


                if (!empty($data['get_emails'])) {
                    foreach ($data['get_emails'] as $row) {
                        $patterns = array('%##url##%', '%##user_display_name##%', '%##animal_profile_display_name##%', '%##organization_name##%', '%##animal_img##%', '%##animal_profile_story##%', '%##animal_profile_details##%', '%##current_year##%', '%##user_display_name_adding_animal##%');
                        $replacements = array(base_url(), $row['full_name'], $animal_name, $org_name, $animal_image, $profilestory, base_url() . 'animal-' . $last_id . '-' . $this->common_function->get_filtered_name($animal_name), date('Y'), $user_details[0]['st_display_name'] . " " . $user_details[0]['st_last_name']);

                        $content = preg_replace($patterns, $replacements, $email_body[0]['st_email_body']);
                        //$to = $email_add;

                        $subject = str_replace('##organization_name##', $org_name, $email_body[0]['st_email_subject']);
                        $message = $content;
						
						$user_to_id = $this->common_model->get_user_id_by_email($row['st_email']);
												
						$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($row['st_email']),$message);		
						$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($row['st_email']),$message);								
						
						$send_email = 0;							
						$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
						if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
						{
							$send_email = 0;										
						}
						
						$email_template_id = $email_body[0]['in_email_id'];
						$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
						if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
						{
							$send_email = 1;
						}	
						
						if($send_email == 0)
						{
							$animal_setting = $this->common_model->user_notification_setting($user_to_id);
							if(isset($animal_setting) && isset($animal_setting['flg_immediate_animal']) && $animal_setting['flg_immediate_animal'] == '1')
							{
								$send_email = 1;
							}								
						}
						
						if($send_email == '1')
						{
                        	$this->common_function->send_mail($this->email, $row['st_email'], $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'));
						}
                    }
                }
                //End of sending email
                //Sending facebook wall posts to users
                if ($flgIsPublicProfile == 0) {

                    if ($user) {
                        try {
                            $publishStream = $facebook->api("/me/feed", 'post', array(
                                'message' => '',
                                'link' => base_url() . 'animal-' . $last_id . '-' . $this->common_function->get_filtered_name($animal_name),
                                'picture' => ($animal_image == 'no_photo_icon.png') ? base_url() . 'assets/img/doobert-fb-logo.png' : $this->config->item('upload_url') . 'animal_images/140x140/' . $animal_image,
                                'name' => 'Checkout this Doobert.com Animal',
                                'description' => $animal_name . ' - ' . $animal_type_name
                                    )

                            );
                        } catch (FacebookApiException $e) {
                            print_r($d);
                        }
                    }
                }




                $data['msg'] = 'You have successfully added animal.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
			
			}
			

                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function org_animal_list_view() {
        $this->load->view('wsdl/org_animal_list');
    }

    function org_animal_list($user_id = '', $wsdl_token = '', $org_id = '', $limit = false) {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($org_id) && $org_id != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {



                if (isset($org_id) && $org_id > 0) {


                    $data = array();
                    $rec_per_page = 15;
                    if ($this->input->post('page') > 0) {
                        $limit = ($this->input->post('page') - 1) * 15;
                        //$rec_per_page=$rec_per_page*$this->input->post('page'); 
                    } else if ($this->input->post('page') == 0) {
                        $limit = '0';
                    } else {
                        $limit = '0';
                    }

                    $animal_list = $this->wsdl_model->get_animal_list($org_id, $limit, $this->input->post('page'), $rec_per_page);
                    $org_animal_list = $this->wsdl_model->get_animal_list($org_id, $limit = '', $page = '', $rec_per_page = '');
                    //echo '<pre>'; print_r($animal_list);die; 
                    $data['animal_count'] = count($org_animal_list);
                    $data['animal_list'] = $animal_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function add_animal_organizations_view() {
        $this->load->view('wsdl/add_animal_organizations');
    }

    public function add_animal_organizations() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) { 
                $organization_details = $this->wsdl_model->get_add_animal_organizations($user_id);
                $data = $organization_details;
				//echo '<pre>'; print_r(count($organization_details)); die;
				
				if(empty($organization_details)){ 
				
				$err_msg = "Adding an animal is for approved Doobert organizations to add animals to their transports & fundraisers.  If you are an org, request an org account once logged into doobert.com";
                $data = array("result" => 2, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
				}
				else{				
                header('Content-type: application/json');
                echo json_encode($data);
				}
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data[] = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function animal_type_view() {
        $this->load->view('wsdl/animal_type');
    }

    function animal_type($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {
                $data = array();
                $animal_type_list = $this->wsdl_model->get_animal_type_list();
                if (isset($animal_type_list) && count($animal_type_list) > 0) {

                    $data['animal_type_list'] = $animal_type_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Record does not exist.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function animal_breed_view() {
        $this->load->view('wsdl/animal_breed');
    }

    function animal_breed($user_id = '', $wsdl_token = '', $type_id = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $type_id = isset($_POST['type_id']) ? $_POST['type_id'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($type_id) && $type_id != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {
                $data = array();
                $animal_breed = $this->wsdl_model->get_animal_breed($type_id);
                if (isset($animal_breed) && count($animal_breed) > 0) {

                    $data['animal_breed'] = $animal_breed;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Record does not exist.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function new_trip_view() {
        $this->load->view('wsdl/new_trip');
    }
	public function new_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $from_city = isset($_POST['from_city']) ? $_POST['from_city'] : '';
        $from_state = isset($_POST['from_state']) ? $_POST['from_state'] : '';
        $from_zip = isset($_POST['from_zip']) ? $_POST['from_zip'] : '';
        $from_country = isset($_POST['from_country']) ? $_POST['from_country'] : '';
        $to_city = isset($_POST['to_city']) ? $_POST['to_city'] : '';
        $to_state = isset($_POST['to_state']) ? $_POST['to_state'] : '';
        $to_zip = isset($_POST['to_zip']) ? $_POST['to_zip'] : '';
        $to_country = isset($_POST['to_country']) ? $_POST['to_country'] : '';
        $trip_date = isset($_POST['trip_date']) ? $_POST['trip_date'] : '';
        $crate_space = isset($_POST['crate_space']) ? $_POST['crate_space'] : '';
        $uncrate_space = isset($_POST['uncrate_space']) ? $_POST['uncrate_space'] : '';
        $transport_type = isset($_POST['transport_type']) ? $_POST['transport_type'] : '';
        $flgPaidTransport = isset($_POST['flgPaidTransport']) ? $_POST['flgPaidTransport'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 

				$data_array = array("in_user_id" 		=> $user_id,               
									"st_from_city" 		=> isset($from_city) ? $from_city : '',
									"st_from_state"		=> isset($from_state) ? $from_state :'',
									"st_from_zip" 		=> isset($from_zip) ? $from_zip : '',
									"st_from_country" 	=> isset($from_country) ? $from_country : '',
									"st_to_city" 		=> isset($to_city) ? $to_city : '',
									"st_to_state" 		=> isset($to_state) ? $to_state : '',
									"st_to_zip" 		=> $to_zip,
									"st_to_country"	 	=> $to_country,
									"dt_trip" 			=> date('Y-m-d',strtotime($trip_date)),
									"in_crates" 		=> isset($crate_space) ? $crate_space : '',
									"in_tethered" 		=> isset($uncrate_space) ? $uncrate_space : '',
									"in_type" 			=> isset($transport_type) ? $transport_type : '',
									"in_paid" 			=> isset($flgPaidTransport) ? $flgPaidTransport : '',               
									"dt_created" 		=> date("Y-m-d h:i:s"),
									"dt_modified" 		=> date("Y-m-d h:i:s")                
            );

                $this->wsdl_model->insert_trip($data_array);				
                $data['msg'] = 'You have successfully added new trip.';
				$data = array("result" => 1, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);				
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function upcoming_trip_view() {
        $this->load->view('wsdl/upcoming_trip');
    }
	public function upcoming_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';       

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 		
				$upcomingtrip_details = array();	
				$upcomingtrip_details=$this->wsdl_model->get_trip($user_id);				
                $data['triplist']=$upcomingtrip_details;
				
				if(empty($upcomingtrip_details)){
				$data['msg'] = 'Record not found.';
                $data = array("result" => 2, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				}
				else{	
				header('Content-type: application/json');
                echo json_encode($data);	
					
				}
                		
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function past_trip_view() {
        $this->load->view('wsdl/past_trip');
    }
	public function past_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';       

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 		
				$pasttrip_details = array();	
				$pasttrip_details=$this->wsdl_model->get_pasttrip($user_id);				
                $data['triplist']=$pasttrip_details;
				
				if(empty($pasttrip_details)){
				$data['msg'] = 'Record not found.';
                $data = array("result" => 2, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				}
				else{	
				header('Content-type: application/json');
                echo json_encode($data);	
					
				}
                		
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function edit_upcoming_trip_view() {
        $this->load->view('wsdl/edit_upcoming_trip');
    }
	public function edit_upcoming_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$trip_id = isset($_POST['trip_id']) ? $_POST['trip_id'] : '';
        $from_city = isset($_POST['from_city']) ? $_POST['from_city'] : '';
        $from_state = isset($_POST['from_state']) ? $_POST['from_state'] : '';
        $from_zip = isset($_POST['from_zip']) ? $_POST['from_zip'] : '';
        $from_country = isset($_POST['from_country']) ? $_POST['from_country'] : '';
        $to_city = isset($_POST['to_city']) ? $_POST['to_city'] : '';
        $to_state = isset($_POST['to_state']) ? $_POST['to_state'] : '';
        $to_zip = isset($_POST['to_zip']) ? $_POST['to_zip'] : '';
        $to_country = isset($_POST['to_country']) ? $_POST['to_country'] : '';
        $trip_date = isset($_POST['trip_date']) ? $_POST['trip_date'] : '';
        $crate_space = isset($_POST['crate_space']) ? $_POST['crate_space'] : '';
        $uncrate_space = isset($_POST['uncrate_space']) ? $_POST['uncrate_space'] : '';
        $transport_type = isset($_POST['transport_type']) ? $_POST['transport_type'] : '';
        $flgPaidTransport = isset($_POST['flgPaidTransport']) ? $_POST['flgPaidTransport'] : '';
		$flgIsFilled = isset($_POST['flgIsFilled']) ? $_POST['flgIsFilled'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 

				$data_array = array("in_user_id" 		=> $user_id,               
									"st_from_city" 		=> isset($from_city) ? $from_city : '',
									"st_from_state"		=> isset($from_state) ? $from_state :'',
									"st_from_zip" 		=> isset($from_zip) ? $from_zip : '',
									"st_from_country" 	=> isset($from_country) ? $from_country : '',
									"st_to_city" 		=> isset($to_city) ? $to_city : '',
									"st_to_state" 		=> isset($to_state) ? $to_state : '',
									"st_to_zip" 		=> $to_zip,
									"st_to_country"	 	=> $to_country,
									"dt_trip" 			=> date('Y-m-d',strtotime($trip_date)),
									"in_crates" 		=> isset($crate_space) ? $crate_space : '',
									"in_tethered" 		=> isset($uncrate_space) ? $uncrate_space : '',
									"in_type" 			=> isset($transport_type) ? $transport_type : '',
									"in_paid" 			=> isset($flgPaidTransport) ? $flgPaidTransport : '',
									"in_filled" 		=> isset($flgIsFilled) ? $flgIsFilled : '',               
									"dt_created" 		=> date("Y-m-d h:i:s"),
									"dt_modified" 		=> date("Y-m-d h:i:s")                
            );

                $this->wsdl_model->update_trip_info($data_array,$trip_id,'tbl_trips');				
                $data['msg'] = 'You have successfully updated trip.';
				$data = array("result" => 1, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);				
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function duplicate_trip_view() {
        $this->load->view('wsdl/duplicate_trip');
    }
	public function duplicate_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $trip_id = isset($_POST['trip_id']) ? $_POST['trip_id'] : '';
        $trip_date = isset($_POST['trip_date']) ? $_POST['trip_date'] : '';
        

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 		

				$data['trip_details'] = $this->wsdl_model->get_trip_profile($trip_id);			
				//echo '<pre>'; print_r($data['trip_details']); die;
				$dttrip = '';
				$dttrip = date('Y-m-d',strtotime($trip_date));
				$trip_info=array();
				
				$trip_info['in_user_id'] 				=	$data['trip_details']['in_user_id'];
				//$trip_info['in_filled'] 				=	isset($data['trip_details']['in_filled']) ? $data['trip_details']['in_filled'] :'';
				$trip_info['in_filled']                 =   0;
				$trip_info['st_from_street'] 			=	isset($data['trip_details']['st_from_street']) ? $data['trip_details']['st_from_street'] : '';
				$trip_info['st_from_city'] 				=	$data['trip_details']['st_from_city'];
				$trip_info['st_from_state'] 			=	$data['trip_details']['st_from_state'];
				$trip_info['st_from_zip'] 				=	$data['trip_details']['st_from_zip'];
				$trip_info['st_from_country'] 			=	isset($data['trip_details']['st_from_country']) ? $data['trip_details']['st_from_country'] : '';		
				$trip_info['st_to_street'] 				=	isset($data['trip_details']['st_to_street']) ? $data['trip_details']['st_to_street'] : '';
				$trip_info['st_to_city'] 				=	$data['trip_details']['st_to_city'];
				$trip_info['st_to_state'] 				=	$data['trip_details']['st_to_state'];
				$trip_info['st_to_zip'] 				=	$data['trip_details']['st_to_zip'];
				$trip_info['st_to_country'] 			=	isset($data['trip_details']['st_to_country']) ? $data['trip_details']['st_to_country'] : '';	
				$trip_info['dt_trip'] 					=	$dttrip;
				$trip_info['in_crates'] 				=	$data['trip_details']['in_crates'];
				$trip_info['in_tethered'] 				=	$data['trip_details']['in_tethered'];	
				$trip_info['in_type'] 					=	$data['trip_details']['in_type'];	
				$trip_info['in_paid'] 					=	$data['trip_details']['in_paid'];		
				$trip_info['dt_created'] 				=	date('Y-m-d H:i:s');
				$trip_info['dt_modified'] 				=	date('Y-m-d H:i:s');
				
				$this->wsdl_model->insert_trip($trip_info);			
                $data['msg'] = 'You have successfully created duplicate trip.';
				$data = array("result" => 1, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);				
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function get_location_view() {
        $this->load->view('wsdl/get_location');
    }
	public function get_location() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';       
        $zip_text = isset($_POST['zip_text']) ? $_POST['zip_text'] : '';     

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 		
				$location_details = array();	
				$location_details=$this->wsdl_model->get_location($zip_text);				
                $data['location']=$location_details;
				
				if(empty($location_details)){
				$data['msg'] = 'Record not found.';
                $data = array("result" => 2, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				}
				else{	
				header('Content-type: application/json');
                echo json_encode($data);	
					
				}
                		
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }	
	
	
	
	public function delete_trip_view() {
        $this->load->view('wsdl/delete_trip');
    }
	public function delete_trip() {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $trip_id = isset($_POST['trip_id']) ? $_POST['trip_id'] : '';      
        

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) { 
				
				$this->wsdl_model->delete_trip($trip_id);			
                $data['msg'] = 'You have successfully deleted trip.';
				$data = array("result" => 1, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);				
            } 
			
			else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }	
	
	public function animal_edit_view() {
        $this->load->view('wsdl/animal_edit');
    }

    public function animal_edit($user_id = '', $wsdl_token = '', $animal_id = '', $animal_name = '', $type_id = '', $gender = '', $breed_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $animal_id = isset($_POST['animal_id']) ? $_POST['animal_id'] : '';
        $animal_name = isset($_POST['animal_name']) ? $_POST['animal_name'] : '';
        $type_id = isset($_POST['type_id']) ? $_POST['type_id'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
        $gender = isset($_POST['gender']) ? $_POST['gender'] : '';
        $breed_id = isset($_POST['breed_id']) ? $_POST['breed_id'] : '';
        $flgIsPublicProfile = isset($_POST['flgIsPublicProfile']) ? $_POST['flgIsPublicProfile'] : '0';
		
		$photo1_profilepic = isset($_POST['photo1_profilepic']) ? $_POST['photo1_profilepic'] : '0';
		$photo2_profilepic = isset($_POST['photo2_profilepic']) ? $_POST['photo2_profilepic'] : '0';
		$photo3_profilepic = isset($_POST['photo3_profilepic']) ? $_POST['photo3_profilepic'] : '0';
		$photo4_profilepic = isset($_POST['photo4_profilepic']) ? $_POST['photo4_profilepic'] : '0';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details[0]['st_email']); die;

            if (count($user_details) > 0) {
			
			
			
			if($this->input->post('url_link_one')!='' && (stripos($this->input->post('url_link_one'),'youtube.com')===false)){	
			//echo 'AA';die;				
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			
			}
			
			else if($this->input->post('url_link_two')!='' && (stripos($this->input->post('url_link_two'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);			
			}
			
			else if($this->input->post('url_link_three')!='' && (stripos($this->input->post('url_link_three'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			}
			
			else if($this->input->post('url_link_four')!='' && (stripos($this->input->post('url_link_four'),'youtube.com')===false)){	
			//echo 'AA';die;		
			
			$data['err_msg'] = 'Please enter valid youtube url';
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);		
			}
				
				else
				{
					 $data = array();
					$this->db->select('in_demeanor_id');
					$this->db->from('tbl_demeanor');
					$this->db->where('in_animal_type_id', $type_id);
					$this->db->where('st_demeanor_name', 'Unknown');
					$query = $this->db->get();
					//echo $this->db->last_query();
					$res = $query->row_array();
					$res['in_demeanor_id'];

                //select in_demeanor_id from tbl_demeanor where in_animal_type_id='6' and st_demeanor_name='Unknown'

                $data['animal_info'] = array(
                    'st_animal_name' => $animal_name,
                    'st_gender' => $gender,
                    'in_animal_type_id' => $type_id,
                    'in_primary_breed_id' => $breed_id,
                    'in_neutered_id' => 3,
                    'in_demeanor_id' => isset($res['in_demeanor_id']) ? $res['in_demeanor_id'] : '',
                    'in_created_by' => $user_id,
                    'in_status' => 0,
                    'in_animal_public' => $flgIsPublicProfile,
                    'dt_created' => date('Y-m-d H:i:s')
                );




                $data['add_animal_info'] = $this->wsdl_model->update_animal_profile($data['animal_info'], $animal_id);
                //$last_id = $this->db->insert_id(); //get last inserted id
                $this->wsdl_model->delete_animal_photo($animal_id);


                $this->load->library('upload');

                /* if($_FILES['photo1']['name'] != '' || $_FILES['photo2']['name'] != '' || $_FILES['photo3']['name'] != '' || $_FILES['photo4']['name'] != '' || $_FILES['photo5']['name'] != '') {

                  $this->wsdl_model->delete_animal_photo($animal_id);

                  } */


                //photo1 starts
                if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo1']['name'], ".");
                    $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo1');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo1']['name'] != '') {
                    $file_details = array("in_animal_id" => $animal_id,
											"st_file_name" => $config['file_name'],
											"st_file_type" => 'P',
											"dt_created" => date("Y-m-d H:i:s"),
											"in_deleted" => "0",
											"in_profile_pic"=> $photo1_profilepic
                    );						
                   	$this->wsdl_model->add_animal_photo($file_details);	
                    //}
                }
                // photo1 ends
                // photo2 starts

                if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo2']['name'], ".");
                    $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo2');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo2']['name'] != '') {
                    $file_details = array("in_animal_id" => $animal_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic"=> $photo2_profilepic
                    );										
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }

                // photo2 ends
                // photo3 starts
                if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo3']['name'], ".");
                    $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo3');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {
                    $file_details = array("in_animal_id" => $animal_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic"=> $photo3_profilepic
                    );										
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }

                //photo3 ends
                // photo4 starts

                if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo4']['name'], ".");
                    $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo4');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {
                    $file_details = array("in_animal_id" => $animal_id,
											"st_file_name" => $config['file_name'],
											"st_file_type" => 'P',
											"dt_created" => date("Y-m-d H:i:s"),
											"in_deleted" => "0",
											"in_profile_pic"=> $photo4_profilepic
                    );					
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }
                //photo4 ends
                // photo5 starts
              /*  if (isset($_FILES['photo5']['name']) && $_FILES['photo5']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo5']['name'], ".");
                    $_FILES['photo5']['name'] = str_replace(".", "", substr($_FILES['photo5']['name'], 0, $lastDot)) . substr($_FILES['photo5']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo5']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo5');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo3']['name'] != '') {
                    $file_details = array("in_animal_id" => $animal_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0"
                    );
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }*/
                // photo5 ends
				
				//Add youtube URLS
			$url_link = array(	'url_link_one'		=>	'',
								'url_link_two'		=>	'',
								'url_link_three'	=>	'',
								'url_link_four'		=>	''
							);
			
			if($this->input->post('url_link_one') != '') {
				$url_link['url_link_one'] = $this->input->post('url_link_one'); 
			}
			if($this->input->post('url_link_two') != '') {
				$url_link['url_link_two'] = $this->input->post('url_link_two'); 
			}
			if($this->input->post('url_link_three') != '') {
				$url_link['url_link_three'] = $this->input->post('url_link_three'); 
			}
			if($this->input->post('url_link_four') != '') {  
				$url_link['url_link_four'] = $this->input->post('url_link_four'); 
			}
			
			foreach($url_link as $key => $value) {
				if($value != '') {	
				
				   $video_id = explode("?v=", $value);
				   $video_id = $video_id[1];
				
				
				$date	=	date('Y-m-d H:i:s');
					$data['animal_links'] = array(	'in_animal_id'	=>	$animal_id,
													'st_file_name'	=>	'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg', //$value,
													'st_file_type'	=>	'V',
													'dt_created'	=>	$date
													);
										  
					$data['add_animal_link']	=	$this->wsdl_model->add_animal_photo($data['animal_links']);
				}
			}
				
				

                /*$animal_file = array();
                $animal_file = $this->wsdl_model->get_animal_file($animal_id);
                if (isset($animal_file) && !empty($animal_file)) {
                    $this->wsdl_model->update_animal_file($animal_file['in_file_id']);
                }*/

                //notification
                $data['notification'] = array('in_organization_id' => $org_id,
                    'in_animal_id' => $animal_id,
                    'in_type' => 3,
                    'in_modified_by' => $user_id,
                    'dt_created' => date('Y-m-d H:i:s'),
                    'in_deleted' => 0
                );

                $notification = $this->wsdl_model->add_notification($data['notification']);

                $data['msg'] = 'You have successfully updated animal profile.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				
				}

               
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }   
	
	}
	
	
	
    // 27-07-16
    public function get_profile_view() {
        $this->load->view('wsdl/get_profile');
    }

    function get_profile($user_id = '', $wsdl_token = '') {


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $profile_detail = $this->wsdl_model->get_profile_detail($user_id);
                    $data['profile_detail'] = $profile_detail;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    

    public function edit_general_driver_profile_view() {
        $this->load->view('wsdl/edit_general_driver_profile');
    }

    public function edit_general_driver_profile($user_id = '', $first_name = '', $last_name = '', $primary_phone = '', $email = '', $zipcode = '', $time_zone = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array('zipcode' => '',
                    "time_zone" => '',
                    "first_name" => '',
                    "last_name" => '',
                    "pphone" => '',
                    "email" => '',
                    'user_id' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('first_name', 'First Name', 'trim|required');
                $this->form_validation->set_rules('last_name', 'Last Name Id', 'trim|required');
                $this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
                $this->form_validation->set_rules('email', 'Email Address', 'trim|required|valid_email');
                $this->form_validation->set_rules('time_zone', 'Time Zone', 'trim|required');



                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $profile_info['st_zip'] = $data['profile_details']['zipcode'];
                    $profile_info['st_time_zone'] = $data['profile_details']['time_zone'];
                    $profile_info['st_primary_phone'] = $data['profile_details']['pphone'];
                    $profile_info['dt_modified'] = date('Y-m-d H:i:s');


                    $user_info = array("st_display_name" => $data['profile_details']['first_name'],
                        "st_last_name" => $data['profile_details']['last_name'],
                        "st_email" => $data['profile_details']['email'],
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    //echo "<pre>";print_r($profile_info);print_r($user_info);

                    $check = $this->wsdl_model->is_email_exists($data['profile_details']['email'], $user_id);
                    if ($check) {
                        $data['msg'] = 'Email already exist.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {

                        $data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
                        $data['user_info'] = $this->wsdl_model->update_user_info($user_info, $user_id, 'tbl_users');

                        $data['msg'] = 'General details updated sucessfully.';
                        $data = array("result" => 1, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_vehicle_availability_view() {
        $this->load->view('wsdl/edit_vehicle_availability');
    }

    public function edit_vehicle_availability($user_id = '', $wsdl_token = '', $available_days = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'available_days' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('available_days', 'Available Days', 'trim|required');



                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $avl_days = array();
                    $avl_days = explode(',', $data['profile_details']['available_days']);

                    $profile_info = array(
                        "in_user_id" => $this->input->post('user_id'),
                        "st_driver_availability" => serialize($avl_days),
						 "in_status" => '1',
                        "dt_modified" => date('Y-m-d H:i:s')
                    );


                    $check = $this->wsdl_model->get_general_vehicle_detail($user_id);

                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_vehicle');
                    } else {					    
                        $profile_info['dt_created'] = date('Y-m-d H:i:s');
                       $insert_id = $this->wsdl_model->insert_user_vehicle_availability($profile_info, 'tbl_user_vehicle');
                    }

					if(isset($insert_id) && $insert_id!='')
					{
					    $data['vehicle_id'] = $insert_id;
					    $data['msg'] = 'Transport details updated successfully.';
						$data = array("result" => 1, "msg" => $data['msg'],"vehicle_id"=>$data['vehicle_id']);
						header('Content-type: application/json');
						echo json_encode($data);
					}
					else
					{
						$data['msg'] = 'Transport details updated successfully.';
						$data = array("result" => 1, "msg" => $data['msg']);
						header('Content-type: application/json');
						echo json_encode($data);
					}
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function vehicle_type_view() {
        $this->load->view('wsdl/vehicle_type');
    }

    function vehicle_type($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {
                $data = array();
                $vehicle_type_list = $this->wsdl_model->get_vehicle_type_list();

                //echo '<pre>'; print_r($vehicle_type_list); die;
                if (isset($vehicle_type_list) && count($vehicle_type_list) > 0) {

                    $data['vehicle_type_list'] = $vehicle_type_list;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Record does not exist.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_vehicle_info_view() {
        $this->load->view('wsdl/vehicle_info');
    }

    public function edit_vehicle_info($user_id = '', $wsdl_token = '', $vehicle_id = '', $selected_vehicle_type = '', $color = '', $license_plate = '', $license_state = '', $max_distance = '', $google_flickr_photo = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $vehicle_id = isset($_POST['vehicle_id']) ? $_POST['vehicle_id'] : '';
        $selected_vehicle_type = isset($_POST['selected_vehicle_type']) ? $_POST['selected_vehicle_type'] : '';
        $color = isset($_POST['color']) ? $_POST['color'] : '';
        $license_plate = isset($_POST['license_plate']) ? $_POST['license_plate'] : '';
        $license_state = isset($_POST['license_state']) ? $_POST['license_state'] : '';
        $max_distance = ($_POST['max_distance'] != '') ? $_POST['max_distance'] : '0';
        $google_flickr_photo = isset($_POST['google_flickr_photo']) ? $_POST['google_flickr_photo'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'vehicle_id' => '',
                    'selected_vehicle_type' => '',
                    'color' => '',
                    'license_plate' => '',
                    'license_state' => '',
                    'max_distance' => '',
                    'google_flickr_photo' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('vehicle_id', 'Vehicle Id', 'trim|required');
                //$this->form_validation->set_rules('selected_vehicle_type', 'selected vehicle type', 'trim'); 
                //$this->form_validation->set_rules('color', 'Color', 'trim'); 
                //$this->form_validation->set_rules('license_plate', 'License Plate', 'trim'); 
                //$this->form_validation->set_rules('license_state', 'License state', 'trim'); 
                //$this->form_validation->set_rules('max_distance', 'Max Distance', 'trim'); 		







                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');


                    $vehicle_info = array(
                        "st_vehicle_type" => $selected_vehicle_type,
                        "st_vehicle_color" => $color,
                        "st_vehicle_license_plate" => $license_plate,
                        "st_vehicle_license_state" => $license_state,
                        "in_distance_to_drive" => $max_distance,
                        "st_photos_url" => $google_flickr_photo,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );

                    $data['user_profile'] = $this->wsdl_model->update_vehicle($vehicle_info, $vehicle_id, 'tbl_user_vehicle');

                    // vehicle image upload starts
                    $this->wsdl_model->delete_vehicle_photo($vehicle_id);
                    $this->load->library('upload');

                    //photo1 starts
                    if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo1']['name'], ".");
                        $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo1');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();




                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo1']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }
                    // photo1 ends
                    // photo2 starts

                    if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo2']['name'], ".");
                        $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo2');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo2']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }

                    // photo2 ends
                    // photo3 starts
                    if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo3']['name'], ".");
                        $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo3');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);

                        //}
                    }

                    //photo3 ends
                    // photo4 starts

                    if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo4']['name'], ".");
                        $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo4');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }
                    //photo4 ends        
                    // vehicle image upload ends		
					
					$profile_info	= array('st_driver' => "Y", 'dt_modified' => date('Y-m-d H:i:s'));
                    
					$data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
					
                    $data['msg'] = 'Vehicle details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function get_driver_profile_view() {
        $this->load->view('wsdl/get_driver_profile');
    }

    function get_driver_profile($user_id = '', $wsdl_token = '') {


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();


                    $available_days = array();

                    $available_days1 = $this->wsdl_model->get_user_available($user_id);
                    //echo '<pre>'; print_r($available_days1['st_driver_availability']); die;

                    if (isset($available_days1['st_driver_availability']) && $available_days1['st_driver_availability'] == 'b:0;') {
                        $available_days = array();
                    } else {


                        $available_days = isset($available_days1['st_driver_availability']) ? unserialize($available_days1['st_driver_availability']) : array();
                    }

                    //$general_detail = $this->wsdl_model->get_general_driver_profile($user_id,$wsdl_token);  
                    $vehicle_info = $this->wsdl_model->get_general_vehicle_detail($user_id);
                    //print_r($vehicle_info); die;                                
                    //$data['general_detail'] = $general_detail;
                    $data['available_days'] = $available_days;
                    $data['vehicle_info'] = isset($vehicle_info) ? $vehicle_info : array();
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	

    public function get_general_pilot_profile_view() {
        $this->load->view('wsdl/get_general_pilot_profile');
    }

    function get_general_pilot_profile($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    //$available_days = $this->wsdl_model->get_general_pilot_detail($user_id);
                   
					
					
					 $available_days = array();

                    $available_days1 = $this->wsdl_model->get_pilot_available($user_id);
                    //echo '<pre>'; print_r($available_days1['st_driver_availability']); die;

                    if (isset($available_days1['st_pilot_availability']) && $available_days1['st_pilot_availability'] == 'b:0;') {
                        $available_days = array();
                    } else {


                        $available_days = isset($available_days1['st_pilot_availability']) ? unserialize($available_days1['st_pilot_availability']) : array();
                    }
					$airplane_info = $this->wsdl_model->get_airplane_detail($user_id);   
					
					$data['available_days'] = $available_days;  
					$data['airplane_info']  = isset($airplane_info) ? $airplane_info : array();
					$data['zipcode'] 		= isset($available_days1['zipcode'])?$available_days1['zipcode']:'';
					$data['airport_id'] 	= isset($available_days1['airport_id'])?$available_days1['airport_id']:'';

                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    // 29-07-16
    public function get_airplane_type_view() {
        $this->load->view('wsdl/get_airplane_type');
    }

    function get_airplane_type($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $data = array();
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {

            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {
                $data = array();
                $airplane_type_list = $this->wsdl_model->get_airplane_type_list();

                //echo '<pre>'; print_r($vehicle_type_list); die;
                if (isset($airplane_type_list) && count($airplane_type_list) > 0) {

                    //$data['airplane_type_list'] = $airplane_type_list;
                    header('Content-type: application/json');
                    echo json_encode($airplane_type_list);
                } else {
                    $data['msg'] = 'Record does not exist.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_airplane_info_view() {
        $this->load->view('wsdl/edit_airplane_info');
    }

    public function edit_airplane_info($user_id = '', $wsdl_token = '', $airplane_id = '', $airplane_type = '', $color = '', $n_number = '', $ifr_current = '', $max_distance = '', $google_flickr_photo = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $airplane_id = isset($_POST['airplane_id']) ? $_POST['airplane_id'] : '';
        $airplane_type = isset($_POST['airplane_type']) ? $_POST['airplane_type'] : '';
        $color = isset($_POST['color']) ? $_POST['color'] : '';
        $n_number = isset($_POST['n_number']) ? $_POST['n_number'] : '';
        $ifr_current = ($_POST['ifr_current'] != '') ? $_POST['ifr_current'] : '0';
        $max_distance = ($_POST['max_distance'] != '') ? $_POST['max_distance'] : '0';
        $google_flickr_photo = isset($_POST['google_flickr_photo']) ? $_POST['google_flickr_photo'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'airplane_id' => '',
                    'airplane_type' => '',
                    'color' => '',
                    'n_number' => '',
                    'ifr_current' => '',
                    'max_distance' => '',
                    'google_flickr_photo' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('airplane_id', 'Airplane Id', 'trim|required');
				$this->form_validation->set_rules('airplane_type', 'Airplane Type', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');


                    $airplane_info = array(
                        "st_plane_type" => $airplane_type,
                        "st_plane_color" => $color,
                        "st_plane_number" => $n_number,
                        "in_plane_ifr" => $ifr_current,
                        "in_distance_to_pilot" => $max_distance,
                        "st_photos_url" => $google_flickr_photo,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );


                    $this->wsdl_model->update_airplane_info($airplane_info, $airplane_id, 'tbl_user_pilot');

                    // vehicle image upload starts
                    $this->wsdl_model->delete_plane_photo($airplane_id);
                    $this->load->library('upload');

                    //photo1 starts
                    if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo1']['name'], ".");
                        $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo1');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();




                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo1']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }
                    // photo1 ends
                    // photo2 starts

                    if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo2']['name'], ".");
                        $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo2');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo2']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }

                    // photo2 ends
                    // photo3 starts
                    if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo3']['name'], ".");
                        $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo3');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }

                    //photo3 ends
                    // photo4 starts

                    if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo4']['name'], ".");
                        $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo4');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }
                    //photo4 ends        
                    // vehicle image upload ends		
					$profile_info	= array('st_pilot' => "Y", 'dt_modified' => date('Y-m-d H:i:s'));
                    
					$data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
					
                    $data['msg'] = 'Transport details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    /* public function get_foster_home_view()
      {
      $this->load->view('wsdl/get_foster_home');

      }

      public function get_foster_home($user_id='', $wsdl_token='')
      {

      $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
      $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
      if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
      $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
      if (count($user_details) > 0) {

      if (isset($user_id) && $user_id > 0) {
      $data = array();

      //$foster_detail = $this->wsdl_model->get_foster_detail($user_id);
      $data['foster_detail'] = $foster_detail;
      header('Content-type: application/json');
      echo json_encode($data);
      } else {
      $data['msg'] = 'Invalid data.';
      $data = array("result" => 2, "msg" => $data['msg']);
      header('Content-type: application/json');
      echo json_encode($data);
      }
      } else {
      $err_msg = "You have been logged out as you logged into a different device.";
      $data = array("result" => 103, "err_msg" => $err_msg);
      header('Content-type: application/json');
      echo json_encode($data);
      }
      } else {
      $err_msg = "UserId or Token Missing";
      $data = array("result" => 104, "err_msg" => $err_msg);
      header('Content-type: application/json');
      echo json_encode($data);
      }

      } */

    public function get_photographer_profile_view() {
        $this->load->view('wsdl/get_photographer_profile');
    }

    public function get_photographer_profile($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $photographer_detail = $this->wsdl_model->get_photographer_profile($user_id);
					//print_r($user_details); die;
					

                    if (empty($photographer_detail)) {
                        $photographer_detail = array('available_days' => array(), 'zipcode' => $user_details[0]['st_zip'], 'max_distance' => '', 'probono_service_offered' => '0');
                    }
                    header('Content-type: application/json');
                    echo json_encode($photographer_detail);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_photographer_availability_view() {
        $this->load->view('wsdl/edit_photographer_availability');
    }

    public function edit_photographer_availability($user_id = '', $wsdl_token = '', $available_days = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'available_days' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('available_days', 'Available Days', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $avl_days = array();
                    $avl_days = explode(',', $data['profile_details']['available_days']);


                    $photographer_info = array(
                        "in_user_id" => $user_id,
                        "st_photographer_availability" => serialize($avl_days),
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    $check = $this->wsdl_model->get_photographer_profile($user_id);

                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_photographer_info($photographer_info, $user_id, 'tbl_photographer_detail');
                    } else {
                        $photographer_info['in_deleted'] = 0;
                        $photographer_info['dt_created'] = date('Y-m-d H:i:s');
                        $this->wsdl_model->insert_photographer_info($photographer_info, 'tbl_photographer_detail');
                    }


                    $data['msg'] = 'Photographer details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_photographer_detail_view() {

        $this->load->view('wsdl/edit_photographer_detail');
    }

    public function edit_photographer_detail($user_id = '', $wsdl_token = '', $zip = '', $max_distance = '', $probono_service_offered = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $zip = isset($_POST['zip']) ? $_POST['zip'] : '';
        $max_distance = isset($_POST['max_distance']) ? $_POST['max_distance'] : '';
        $probono_service_offered = isset($_POST['probono_service_offered']) ? $_POST['probono_service_offered'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'zip' => '',
                    'max_distance' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('zip', 'Zipcode', 'trim|required');
                $this->form_validation->set_rules('max_distance', 'Max Distance', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {


                    $photographer_info = array(
                        "in_user_id" => $user_id,
                        "st_photographer_zipcode" => $zip,
                        "in_distance_to_travel" => $max_distance,
                        "in_pro_bono_ser" => $probono_service_offered,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    $check = $this->wsdl_model->get_photographer_profile($user_id);

                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_photographer_info($photographer_info, $user_id, 'tbl_photographer_detail');
                    } else {
                        $photographer_info['in_deleted'] = 0;
                        $photographer_info['dt_created'] = date('Y-m-d H:i:s');
                        $this->wsdl_model->insert_photographer_info($photographer_info, 'tbl_photographer_detail');
                    }


                    $data['msg'] = 'Photographer details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function person_volunteer_detail_view() {
        $this->load->view('wsdl/person_volunteer_detail');
    }

    public function person_volunteer_detail($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);			
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $person_volunteer_detail = $this->wsdl_model->get_in_person_volunteer_detail($user_id);
                    header('Content-type: application/json');

                    if (empty($person_volunteer_detail)) {
                        $person_volunteer_detail = array('available_days' => array(), 'zipcode' => $user_details[0]['st_zip'], 'max_distance' => '', 'home_visit' => '0', 'app_reviewer' => '0', 'animal_care' => '0', 'physical_fundraiser' => '0');
                    }

                    echo json_encode($person_volunteer_detail);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_volunteer_availability_view() {
        $this->load->view('wsdl/edit_volunteer_availability');
    }

    public function edit_volunteer_availability($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'available_days' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['volunteer_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('available_days', 'Available Days', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');
                    $avl_days = array();
                    $avl_days = explode(',', $data['volunteer_details']['available_days']);


                    $volunteer_info = array(
                        "in_user_id" => $user_id,
                        "st_volunteer_availability" => serialize($avl_days),
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    $check = $this->wsdl_model->get_in_person_volunteer_detail($user_id);

                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_in_person_volunteer_detail($volunteer_info, $user_id, 'tbl_in_person_volunteer_detail');
                    } else {
                        $volunteer_info['dt_created'] = date('Y-m-d H:i:s');
                        $this->wsdl_model->insert_in_person_volunteer_detail($volunteer_info, 'tbl_in_person_volunteer_detail');
                    }


                   $data['msg'] = 'In Person Volunteer details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_volunteer_detail_view() {
        $this->load->view('wsdl/edit_volunteer_detail');
    }

    public function edit_volunteer_detail($user_id = '', $wsdl_token = '', $zip = '', $max_distance = '', $home_visit = '', $app_reviewer = '', $physical_fundraiser = '', $animal_care = '') {


        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $zip = isset($_POST['zip']) ? $_POST['zip'] : '';
        $max_distance = isset($_POST['max_distance']) ? $_POST['max_distance'] : '';
        $home_visit = isset($_POST['home_visit']) ? $_POST['home_visit'] : '';
        $app_reviewer = isset($_POST['app_reviewer']) ? $_POST['app_reviewer'] : '';
        $physical_fundraiser = isset($_POST['physical_fundraiser']) ? $_POST['physical_fundraiser'] : '';
        $animal_care = isset($_POST['animal_care']) ? $_POST['animal_care'] : '';



        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'zip' => '',
                    'max_distance' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['volunteer_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('zip', 'Zipcode', 'trim|required');
                $this->form_validation->set_rules('max_distance', 'Max Distance', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {


                    $volunteer_info = array(
                        "in_user_id" => $user_id,
                        "st_volunteer_zipcode" => $zip,
                        "in_distance_to_drive" => $max_distance,
                        "in_home_visit" => $home_visit,
                        "in_app_reviewer" => $app_reviewer,
                        "in_physical_fundraiser" => $physical_fundraiser,
                        "in_animal_care" => $animal_care,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    $check = $this->wsdl_model->get_in_person_volunteer_detail($user_id);

                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_in_person_volunteer_detail($volunteer_info, $user_id, 'tbl_in_person_volunteer_detail');
                    } else {
                        $volunteer_info['in_deleted'] = 0;
                        $volunteer_info['dt_created'] = date('Y-m-d H:i:s');
                        $this->wsdl_model->insert_in_person_volunteer_detail($volunteer_info, 'tbl_in_person_volunteer_detail');
                    }


                    $data['msg'] = 'In Person Volunteer details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function get_virtual_volunteer_detail_view() {
        $this->load->view('wsdl/get_virtual_volunteer_detail');
    }

    public function get_virtual_volunteer_detail($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    //social media
                    $virtual_volunteer_detail = $this->wsdl_model->get_virtual_volunteer_detail($user_id);
                    if(empty($virtual_volunteer_detail))
					{
						$data['virtual_volunteer_detail'] = array('manage_facebook'=>"0",
																   'manage_facebook_exp'=>"0",
																   'manage_twitter'=>"0",
																   'manage_twitter_exp'=>"0",
																   'manage_gplus'=>"0",
																   'manage_gplus_exp'=>"0",
																   'manage_pin_board'=>"0",
																   'manage_pin_board_exp'=>"0",
																   'manage_instagram'=>"0",
																   'manage_instagram_exp'=>"0",
																   'manage_video'=>"0",
																   'manage_video_exp'=>"0",
																   'petfinder'=>"0",
																   'petfinder_exp'=>"0",
																   'adoptapet'=>"0",
																   'adoptapet_exp'=>"0",
																   'petharbor'=>"0",
																   'petharbor_exp'=>"0",
																   'petango'=>"0",
																   'petango_exp'=>"0",
																   'rescuegroups'=>"0",
																   'rescuegroups_exp'=>"0",
																   'shelterexchange'=>"0",
																   'shelterexchange_exp'=>"0",
																   'dogtime'=>"0",
																   'dogtime_exp'=>"0",
																   'petsoverstock'=>"0",
																   'petsoverstock_exp'=>"0",
																   'transport_monitor'=>"0",
																   'transport_monitor_exp'=>"0",
																   'adoption_application'=>"0",
																   'adoption_application_exp'=>"0",
																   'onlinefundraiser'=>"0",
																   'onlinefundraiser_exp' 	=>"0"			
						
						);
					}
					else{
						
                    $data['virtual_volunteer_detail'] = $virtual_volunteer_detail;
					}

                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_virtual_volunteer_detail_view() {
        $this->load->view('wsdl/edit_virtual_volunteer_detail');
    }

    public function edit_virtual_volunteer_detail($user_id = '', $wsdl_token = '', $manage_facebook = '', $manage_facebook_exp = '', $manage_twitter = '', $manage_twitter_exp = '', $manage_gplus = '', $manage_gplus_exp = '', $manage_pin_board = '', $manage_pin_board_exp = '', $manage_instagram = '', $manage_instagram_exp = '', $manage_video = '', $manage_video_exp = '', $petfinder = '', $petfinder_exp = '', $adoptapet = '', $adoptapet_exp = '', $petharbor = '', $petharbor_exp = '', $petango = '', $petango_exp = '', $rescuegroups = '', $rescuegroups_exp = '', $shelterexchange = '', $shelterexchange_exp = '', $dogtime = '', $dogtime_exp = '', $petsoverstock = '', $petsoverstock_exp = '', $transport_monitor = '', $transport_monitor_exp = '', $adoption_application = '', $adoption_application_exp = '', $onlinefundraiser = '', $onlinefundraiser_exp = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $manage_facebook = isset($_POST['manage_facebook']) ? $_POST['manage_facebook'] : '';
        $manage_facebook_exp = isset($_POST['manage_facebook_exp']) ? $_POST['manage_facebook_exp'] : '';
        $manage_twitter = isset($_POST['manage_twitter']) ? $_POST['manage_twitter'] : '';
        $manage_twitter_exp = isset($_POST['manage_twitter_exp']) ? $_POST['manage_twitter_exp'] : '';
        $manage_gplus = isset($_POST['manage_gplus']) ? $_POST['manage_gplus'] : '';
        $manage_gplus_exp = isset($_POST['manage_gplus_exp']) ? $_POST['manage_gplus_exp'] : '';
        $manage_pin_board = isset($_POST['manage_pin_board']) ? $_POST['manage_pin_board'] : '';
        $manage_pin_board_exp = isset($_POST['manage_pin_board_exp']) ? $_POST['manage_pin_board_exp'] : '';
        $manage_instagram = isset($_POST['manage_instagram']) ? $_POST['manage_instagram'] : '';
        $manage_instagram_exp = isset($_POST['manage_instagram_exp']) ? $_POST['manage_instagram_exp'] : '';
        $manage_video = isset($_POST['manage_video']) ? $_POST['manage_video'] : '';
        $manage_video_exp = isset($_POST['manage_video_exp']) ? $_POST['manage_video_exp'] : '';
        $petfinder = isset($_POST['petfinder']) ? $_POST['petfinder'] : '';
        $petfinder_exp = isset($_POST['petfinder_exp']) ? $_POST['petfinder_exp'] : '';
        $adoptapet = isset($_POST['adoptapet']) ? $_POST['adoptapet'] : '';
        $adoptapet_exp = isset($_POST['adoptapet_exp']) ? $_POST['adoptapet_exp'] : '';
        $petharbor = isset($_POST['petharbor']) ? $_POST['petharbor'] : '';
        $petharbor_exp = isset($_POST['petharbor_exp']) ? $_POST['petharbor_exp'] : '';
        $petango = isset($_POST['petango']) ? $_POST['petango'] : '';
        $petango_exp = isset($_POST['petango_exp']) ? $_POST['petango_exp'] : '';
        $rescuegroups = isset($_POST['rescuegroups']) ? $_POST['rescuegroups'] : '';
        $rescuegroups_exp = isset($_POST['rescuegroups_exp']) ? $_POST['rescuegroups_exp'] : '';
        $shelterexchange = isset($_POST['shelterexchange']) ? $_POST['shelterexchange'] : '';
        $shelterexchange_exp = isset($_POST['shelterexchange_exp']) ? $_POST['shelterexchange_exp'] : '';
        $dogtime = isset($_POST['dogtime']) ? $_POST['dogtime'] : '';
        $dogtime_exp = isset($_POST['dogtime_exp']) ? $_POST['dogtime_exp'] : '';
        $petsoverstock = isset($_POST['petsoverstock']) ? $_POST['petsoverstock'] : '';
        $petsoverstock_exp = isset($_POST['petsoverstock_exp']) ? $_POST['petsoverstock_exp'] : '';
        $transport_monitor = isset($_POST['transport_monitor']) ? $_POST['transport_monitor'] : '';
        $transport_monitor_exp = isset($_POST['transport_monitor_exp']) ? $_POST['transport_monitor_exp'] : '';
        $adoption_application = isset($_POST['adoption_application']) ? $_POST['adoption_application'] : '';
        $adoption_application_exp = isset($_POST['adoption_application_exp']) ? $_POST['adoption_application_exp'] : '';
        $onlinefundraiser = isset($_POST['onlinefundraiser']) ? $_POST['onlinefundraiser'] : '';
        $onlinefundraiser_exp = isset($_POST['onlinefundraiser_exp']) ? $_POST['onlinefundraiser_exp'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['virtual_vol_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {


                    $virtual_vol_info = array(
                        "in_user_id" => $user_id,
                        "in_manage_facebook" => $manage_facebook,
                        "in_manage_facebook_exp" => $manage_facebook_exp,
                        "in_manage_twitter" => $manage_twitter,
                        "in_manage_twitter_exp" => $manage_twitter_exp,
                        "in_manage_gplus" => $manage_gplus,
                        "in_manage_gplus_exp" => $manage_gplus_exp,
                        "in_manage_pin_board" => $manage_pin_board,
                        "in_manage_pin_board_exp" => $manage_pin_board_exp,
                        "in_manage_instagram" => $manage_instagram,
                        "in_manage_instagram_exp" => $manage_instagram_exp,
                        "in_manage_video" => $manage_video,
                        "in_manage_video_exp" => $manage_video_exp,
                        "in_petfinder" => $petfinder,
                        "in_petfinder_exp" => $petfinder_exp,
                        "in_adoptapet" => $adoptapet,
                        "in_adoptapet_exp" => $adoptapet_exp,
                        "in_petharbor" => $petharbor,
                        "in_petharbor_exp" => $petharbor_exp,
                        "in_petango" => $petango,
                        "in_petango_exp" => $petango_exp,
                        "in_rescuegroups" => $rescuegroups,
                        "in_rescuegroups_exp" => $rescuegroups_exp,
                        "in_shelterexchange" => $shelterexchange,
                        "in_shelterexchange_exp" => $shelterexchange_exp,
                        "in_dogtime" => $dogtime,
                        "in_dogtime_exp" => $dogtime_exp,
                        "in_petsoverstock" => $petsoverstock,
                        "in_petsoverstock_exp" => $petsoverstock_exp,
                        "in_transport_monitor" => $transport_monitor,
                        "in_transport_monitor_exp" => $transport_monitor_exp,
                        "in_adoption_application" => $adoption_application,
                        "in_adoption_application_exp" => $adoption_application_exp,
                        "in_onlinefundraiser" => $onlinefundraiser,
                        "in_onlinefundraiser_exp" => $onlinefundraiser_exp,
                        "dt_modified" => date('Y-m-d H:i:s')
                    );
                    $check = $this->wsdl_model->get_virtual_volunteer_detail($user_id);


                    if (isset($check) && !empty($check)) {
                        $this->wsdl_model->update_virtual_volunteer_detail($virtual_vol_info, $user_id, 'tbl_virtual_support_vol_detail');
                    } else {
                        $virtual_vol_info['in_deleted'] = 0;
                        $virtual_vol_info['dt_created'] = date('Y-m-d H:i:s');
                        $this->wsdl_model->insert_virtual_volunteer_detail($virtual_vol_info, 'tbl_virtual_support_vol_detail');
                    }


                    $data['msg'] = 'Virtual Support Volunteer details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function add_vehicle_info_view() {
        $this->load->view('wsdl/add_vehicle_info');
    }

    public function add_vehicle_info($user_id = '', $wsdl_token = '', $selected_vehicle_type = '', $color = '', $license_plate = '', $license_state = '', $max_distance = '', $google_flickr_photo = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $selected_vehicle_type = isset($_POST['selected_vehicle_type']) ? $_POST['selected_vehicle_type'] : '';
        $color = isset($_POST['color']) ? $_POST['color'] : '';
        $license_plate = isset($_POST['license_plate']) ? $_POST['license_plate'] : '';
        $license_state = isset($_POST['license_state']) ? $_POST['license_state'] : '';
        $max_distance = ($_POST['max_distance'] != '') ? $_POST['max_distance'] : '0';
        $google_flickr_photo = isset($_POST['google_flickr_photo']) ? $_POST['google_flickr_photo'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'selected_vehicle_type' => '',
                    'color' => '',
                    'license_plate' => '',
                    'license_state' => '',
                    'max_distance' => '',
                    'google_flickr_photo' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('selected_vehicle_type', 'selected vehicle type', 'trim|required');



                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');


                    $vehicle_info = array(
                        "in_user_id" => $user_id,
                        "st_vehicle_type" => $selected_vehicle_type,
                        "st_vehicle_color" => $color,
                        "st_vehicle_license_plate" => $license_plate,
                        "st_vehicle_license_state" => $license_state,
                        "in_distance_to_drive" => $max_distance,
                        "st_photos_url" => $google_flickr_photo,
                        "in_status" => 1,
                        "dt_created" => date('Y-m-d H:i:s')
                    );

                    $vehicle_id = $this->wsdl_model->insert_vehicle($vehicle_info, 'tbl_user_vehicle');

                    // vehicle image upload starts
                    //$this->wsdl_model->delete_vehicle_photo($vehicle_id);
                    $this->load->library('upload');

                    //photo1 starts
                    if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';

                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo1']['name'], ".");
                        $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo1');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();



                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();




                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo1']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }
                    // photo1 ends
                    // photo2 starts

                    if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               

                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo2']['name'], ".");
                        $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo2');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo2']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }

                    // photo2 ends
                    // photo3 starts
                    if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo3']['name'], ".");
                        $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo3');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }

                    //photo3 ends
                    // photo4 starts

                    if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'vehicle/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo4']['name'], ".");
                        $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo4');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'vehicle/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'vehicle/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_vehicle_id" => $vehicle_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_vehicle_photo($file_details);
                        //}
                    }
                    //photo4 ends        
                    // vehicle image upload ends		
					
					$profile_info	= array('st_driver' => "Y", 'dt_modified' => date('Y-m-d H:i:s'));
                    
					$data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
					
                    $data['msg'] = 'Vehicle details added successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function add_airplane_info_view() {
        $this->load->view('wsdl/add_airplane_info');
    }

    public function add_airplane_info($user_id = '', $wsdl_token = '', $airplane_type = '', $color = '', $n_number = '', $ifr_current = '', $max_distance = '', $google_flickr_photo = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $airplane_type = isset($_POST['airplane_type']) ? $_POST['airplane_type'] : '';
        $color = isset($_POST['color']) ? $_POST['color'] : '';
        $n_number = isset($_POST['n_number']) ? $_POST['n_number'] : '';
        $ifr_current = ($_POST['ifr_current'] != '') ? $_POST['ifr_current'] : '0';
        $max_distance = ($_POST['max_distance'] != '') ? $_POST['max_distance'] : '0';
        $google_flickr_photo = isset($_POST['google_flickr_photo']) ? $_POST['google_flickr_photo'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $form_field = array(
                    'user_id' => '',
                    'airplane_type' => '',
                    'color' => '',
                    'n_number' => '',
                    'ifr_current' => '',
                    'max_distance' => '',
                    'google_flickr_photo' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('airplane_type', 'Airplane Type', 'trim|required');

                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');


                    $airplane_info = array(
                        "in_user_id" => $user_id,
                        "st_plane_type" => $airplane_type,
                        "st_plane_color" => $color,
                        "st_plane_number" => $n_number,
                        "in_plane_ifr" => $ifr_current,
                        "in_distance_to_pilot" => $max_distance,
                        "st_photos_url" => $google_flickr_photo,
                        "in_status" => 1,
                        "dt_created" => date('Y-m-d H:i:s')
                    );


                    $airplane_id = $this->wsdl_model->insert_airplane_info($airplane_info, 'tbl_user_pilot');

                    // vehicle image upload starts
                    //$this->wsdl_model->delete_plane_photo($airplane_id);
                    $this->load->library('upload');

                    //photo1 starts
                    if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo1']['name'], ".");
                        $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo1');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();




                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo1']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }
                    // photo1 ends
                    // photo2 starts

                    if (isset($_FILES['photo2']['name']) && $_FILES['photo2']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo2']['name'], ".");
                        $_FILES['photo2']['name'] = str_replace(".", "", substr($_FILES['photo2']['name'], 0, $lastDot)) . substr($_FILES['photo2']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo2']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo2');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo2']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }

                    // photo2 ends
                    // photo3 starts
                    if (isset($_FILES['photo3']['name']) && $_FILES['photo3']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo3']['name'], ".");
                        $_FILES['photo3']['name'] = str_replace(".", "", substr($_FILES['photo3']['name'], 0, $lastDot)) . substr($_FILES['photo3']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo3']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo3');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }

                    //photo3 ends
                    // photo4 starts

                    if (isset($_FILES['photo4']['name']) && $_FILES['photo4']['name'] != '') {
                        // file upload

                        $config['upload_path'] = $this->config->item('upload') . 'plane/';
                        $config['max_size'] = '5120';         // 5 MB               
                        $config['allowed_types'] = 'jpg|png|gif|jpeg';
                        $config['remove_spaces'] = TRUE;
                        // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                        $lastDot = strrpos($_FILES['photo4']['name'], ".");
                        $_FILES['photo4']['name'] = str_replace(".", "", substr($_FILES['photo4']['name'], 0, $lastDot)) . substr($_FILES['photo4']['name'], $lastDot);
                        $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo4']['name']));



                        //Initialization
                        $this->upload->initialize($config);
                        //Upload image by calling do_upload method.
                        $this->upload->do_upload('photo4');
                        $file_errors = array('errors' => $this->upload->display_errors());
                        if (!empty($file_errors['errors'])) {
                            $err_msg = strip_tags($file_errors['errors']);
                            $data = array("result" => 2, "err_msg" => $err_msg);
                            header('Content-type: application/json');
                            echo json_encode($data);
                            return false;
                        }
                        $this->load->library('image_lib');

                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/180x180/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 180;
                        $config['height'] = 180;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/100x100/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 100;
                        $config['height'] = 100;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();


                        $config['image_library'] = 'gd2';
                        $config['source_image'] = $this->config->item('upload') . 'plane/' . $config['file_name'];
                        $config['new_image'] = $this->config->item('upload') . 'plane/cropped_images/' . $config['file_name'];
                        $config['maintain_ratio'] = TRUE;
                        $config['width'] = 200;
                        $config['height'] = 200;
                        $this->load->library('image_lib', $config);
                        $this->image_lib->initialize($config);
                        $this->image_lib->resize();
                        $this->image_lib->clear();

                        // file upload	
                        //if ($_FILES['photo3']['name'] != '') {
                        $file_details = array("in_plane_id" => $airplane_id,
                            "st_image" => $config['file_name'],
                            "in_deleted" => "0"
                        );
                        $this->wsdl_model->add_plane_photo($file_details);
                        //}
                    }
                    //photo4 ends        
                    // vehicle image upload ends		
					
					$profile_info	= array('st_pilot' => "Y", 'dt_modified' => date('Y-m-d H:i:s'));
                    
					$data['user_profile'] = $this->wsdl_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
					
                    $data['msg'] = 'Transport details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function full_foster_link_view() {
        $this->load->view('wsdl/foster_link');
    }

    public function foster_link($user_id = '', $wsdl_token = '') {
        //$user_id = isset($_REQUEST['user_id']) ? $_REQUEST['user_id'] : '';
        //$wsdl_token = isset($_REQUEST['wsdl_token']) ? $_REQUEST['wsdl_token'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);



            if (count($user_details) > 0) {

                $this->session->set_userdata('userid', $user_details[0]['in_user_id']);
                $this->session->set_userdata('user_name', $user_details[0]['st_display_name']);
                $this->session->set_userdata('last_name', $user_details[0]['st_last_name']);
                $this->session->set_userdata('email', $user_details[0]['st_email']);
                redirect($this->config->item('base_url') . "foster_home_mobile/foster_home");
            } else {

                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function attachphoto_transport_list_view() {
        $this->load->view('wsdl/attachphoto_transport_list');
    }

    function attachphoto_transport_list($user_id = '', $wsdl_token = '') {
        //$user_id = 50;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                //echo "<pre>";print_r($user_details);die;
                $data['all_trasport'] = '';
                $data['nearby'] = '';

                $date = array();


                if ((isset($user_details['0']['st_driver']) && $user_details['0']['st_driver'] == 'Y') || isset($user_details['0']['st_pilot']) && $user_details['0']['st_pilot'] == 'Y') {
                    #=============Active Trasport============#
                    $all_trasport = $this->wsdl_model->get_completed_transport_list($date, $user_id);
                    $data['all_trasport'] = $all_trasport;
                }
                //echo '<pre>';print_r($data['all_trasport']);exit;

                if (!empty($all_trasport)) {
                    $data = array("transport_list" => $data['all_trasport']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'No Transportation Found.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function get_foster_home_view() {
        $this->load->view('wsdl/get_foster_home');
    }

    public function get_foster_home($user_id = '', $wsdl_token = '') {
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($user_id) && $user_id > 0) {
                    $data = array();

                    $data['foster_animal_detail'] = $this->wsdl_model->get_foster_home($user_id);
                    //echo '<pre>'; print_r($data); die;                      
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function edit_foster_duration_view() {
        $this->load->view('wsdl/edit_foster_duration');
    }

    public function edit_foster_duration($user_id = '', $wsdl_token = '', $in_foster_animal_detail_id = '', $in_foster_id = '', $animal_type_id = '', $duration_type_id = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $in_foster_animal_detail_id = isset($_POST['in_foster_animal_detail_id']) ? $_POST['in_foster_animal_detail_id'] : '';
        $in_foster_id = isset($_POST['in_foster_id']) ? $_POST['in_foster_id'] : '';
        $animal_type_id = isset($_POST['animal_type_id']) ? $_POST['animal_type_id'] : '';
        $duration_type_id = isset($_POST['duration_type_id']) ? $_POST['duration_type_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {


                $form_field = array('user_id' => '',
                    'in_foster_animal_detail_id' => '',
                    'in_foster_id' => '',
                    'animal_type_id' => '',
                    'duration_type_id' => ''
                );



                foreach ($form_field as $key => $value) {
                    $data['foster_duration'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }

                $this->form_validation->set_rules('user_id', 'User Id', 'trim|required');
                $this->form_validation->set_rules('in_foster_animal_detail_id', 'Foster Animal Detail ID', 'trim|required');
                $this->form_validation->set_rules('in_foster_id', 'Foster ID', 'trim|required');
                $this->form_validation->set_rules('animal_type_id', 'Animal Type ID', 'trim|required');
                $this->form_validation->set_rules('duration_type_id', 'Duration Type ID', 'trim');


                if ($this->form_validation->run() == FALSE) {
                    $this->form_validation->set_error_delimiters('', '');
                    $data['err_msg'] = validation_errors();
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $user_id = $this->input->post('user_id');


                    //  print_r($avl_days); die;



                    $foster_info = array(
                        // "in_foster_animal_detail_id" => $data['foster_duration']['in_foster_animal_detail_id'],
                        "in_foster_id" => $data['foster_duration']['in_foster_id'],
                        "in_animal_type_id" => $data['foster_duration']['animal_type_id'],
                        "in_duration_type_id" => $data['foster_duration']['duration_type_id'],
                        "dt_modified" => date('Y-m-d H:i:s'),
                        "in_deleted" => '0'
                    );


                    $data['vehicle_info'] = $this->wsdl_model->update_foster_info($foster_info, $in_foster_animal_detail_id, 'tbl_foster_animal_type_detail');

                    $data['msg'] = 'Foster home details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

    public function full_virtualsupportvolunteer_link_view() {
        $this->load->view('wsdl/virtualsupportvolunteer_link');
    }

    public function virtualsupportvolunteer_link($user_id = '', $wsdl_token = '') {
        //$user_id = isset($_REQUEST['user_id']) ? $_REQUEST['user_id'] : '';
        //$wsdl_token = isset($_REQUEST['wsdl_token']) ? $_REQUEST['wsdl_token'] : '';


        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);



            if (count($user_details) > 0) {

                $this->session->set_userdata('userid', $user_details[0]['in_user_id']);
                $this->session->set_userdata('user_name', $user_details[0]['st_display_name']);
                $this->session->set_userdata('last_name', $user_details[0]['st_last_name']);
                $this->session->set_userdata('email', $user_details[0]['st_email']);
                redirect($this->config->item('base_url') . "virtual_support_volunteer_mobile/virtual_support_volunteer");
            } else {

                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }

	function wp_driver_signup()
	{
		$user_details = array(
					'first_name'  	=> $_POST['first_name'],
					'last_name'   	=> $_POST['last_name'],
					'email_add' 	=> $_POST['email_add'],
					'user_password' => $_POST['user_password'],
					'personorg'   	=> $_POST['personorg'],
					'page_ref'		=> $_POST['page_ref'],
					'sign_up_as'	=> $_POST['sign_up_as'],
				  );
		$browser_details = array();
		$browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
		$browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
		$browser_details["browser_used"] = isset($_SERVER['HTTP_USER_AGENT']) && $_SERVER['HTTP_USER_AGENT'] != '' ? $_SERVER['HTTP_USER_AGENT'] : '';
					  
		$err_msg = '';
		$counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $_POST['email_add'], "in_deleted" => '0'));
		if ($counts > 0) {
			$err_msg = "Email address already exists.";
		}
		//echo "<pre>";print_r($data);die;
		//$data_new = array("result" => 2, "err_msg" => 'Email address already exists.');
		//print_r($data);
		if(isset($err_msg) && $err_msg != "")
		{
			$data_new = array("result" => 2, "err_msg" => $err_msg);
		}else{
			
			$user_details['email_add'] = isset($_POST['email_add']) ? utf8_decode($_POST['email_add']) : '';
			
			$verificationCode = $this->generate_random_password(15);
			
			$data_array = array("st_display_name" => $user_details['first_name'],
								"st_last_name" => $user_details['last_name'],
								"st_email" => $user_details['email_add'],
								"st_password" => md5($user_details['user_password']),
								"st_referred_by" => $user_details['personorg'],
								"dt_created" => date("Y-m-d h:i:s"),
								"dt_modified" => date("Y-m-d h:i:s"),
								"in_public" => "1",
								"in_status" => "0",
								"st_browser_info" => @serialize($browser_details),
								"st_page_referer" => $user_details['page_ref'],
								"st_email_verification_code" => $verificationCode,
								"st_signup_as" =>	$user_details['sign_up_as']
							);
			$inserted_id = $this->user_model->insert_user($data_array);				
			$this->user_model->insert_user_profile(array("in_user_id" => $inserted_id, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s")));
			
				
			$register_details = array('userid' => $inserted_id,
								'username' => $user_details['first_name'],
								'lastname' => $user_details['last_name'],
								'email' => $user_details['email_add'],
								'email_verification_code' => $verificationCode,
								);
								
			$this->wp_login_details($register_details);
			
			$data_new = array("result" => 1, 
							  "msg" => "Your account has been created successfully.",
							  'userid'   =>$inserted_id,
							  'user_name' =>  $user_details['first_name'],
							  'last_name'  => $user_details['last_name'],
							  'email'  => $user_details['email_add'],		
							 );
			
			
		}
		
		header('Content-type: application/json');
		echo json_encode($data_new);	  
	}
	
	function wp_org_signup()
	{
		$user_details = array(
					'org_type'  	=> $_POST['org_type'],
					'org_name'  	=> $_POST['org_name'],
					'org_zip'  		=> $_POST['org_zip'],
					'first_name'  	=> $_POST['first_name'],
					'last_name'   	=> $_POST['last_name'],
					'email_add' 	=> $_POST['email_add'],
					'user_password' => $_POST['user_password'],
					'personorg'   	=> $_POST['personorg'],
					'page_ref'		=> $_POST['page_ref'],
					'sign_up_as'	=> $_POST['sign_up_as'],
				  );
		$browser_details = array();
		$browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
		$browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
		$browser_details["browser_used"] = isset($_SERVER['HTTP_USER_AGENT']) && $_SERVER['HTTP_USER_AGENT'] != '' ? $_SERVER['HTTP_USER_AGENT'] : '';
					  
		$err_msg = '';
		$counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $_POST['email_add'], "in_deleted" => '0'));
		if ($counts > 0) {
			$err_msg = "Email address already exists.";
		}
		//echo "<pre>";print_r($data);die;
		//$data_new = array("result" => 2, "err_msg" => 'Email address already exists.');
		//print_r($data);
		if(isset($err_msg) && $err_msg != "")
		{
			$data_new = array("result" => 2, "err_msg" => $err_msg);
		}else{
			
			$user_details['email_add'] = isset($_POST['email_add']) ? utf8_decode($_POST['email_add']) : '';
			$user_details['user_password'] = isset($_POST['user_password']) ? $this->common_function->custom_htmlentities($_POST['user_password']) : '';
			
			$verificationCode = $this->generate_random_password(15);
			
			$data_array = array("st_display_name" => $user_details['first_name'],
								"st_last_name" => $user_details['last_name'],
								"st_email" => $user_details['email_add'],
								"st_password" => md5($user_details['user_password']),
								"st_referred_by" => $user_details['personorg'],
								"dt_created" => date("Y-m-d h:i:s"),
								"dt_modified" => date("Y-m-d h:i:s"),
								"in_public" => "1",
								"in_status" => "0",
								"st_browser_info" => @serialize($browser_details),
								"st_page_referer" => $user_details['page_ref'],
								"st_email_verification_code" => $verificationCode,
								"st_signup_as" =>	$user_details['sign_up_as']
							);

            $inserted_id = $this->user_model->insert_user($data_array);
			$this->user_model->insert_user_profile(array("in_user_id"=>$inserted_id,"in_status"=>"0","dt_created"=>date("Y-m-d H:i:s")));
			
			$register_details = array('userid' => $inserted_id,
								'username' => $user_details['first_name'],
								'lastname' => $user_details['last_name'],
								'email' => $user_details['email_add'],
								'email_verification_code' => $verificationCode,
								);
								
			$this->wp_login_details($register_details);
			
			$data   = array(
						'in_user_id' 			=> $inserted_id,
						'st_org_type'  			=> $user_details['org_type'],
						'st_org_name' 			=> $user_details['org_name'],
						'st_zip' 				=> $user_details['org_zip'],
						"dt_created" 			=> date("Y-m-d H:i:s"),
						"dt_modified" 			=> date("Y-m-d H:i:s"),
						"in_status"				=> "4",
						"in_created_by"         => $inserted_id
						);        
						
        	$orgid=$this->wsdl_model->addorg($data);
			
			//$data_new = array("result" => 1, "msg" => "Your account has been created successfully.");
			
			$data_new = array("result" => 1, 
							  "msg" => "Your account has been created successfully.",
							  'userid'   =>$inserted_id,
							  'user_name' =>  $user_details['first_name'],
							  'last_name'  => $user_details['last_name'],
							  'email'  => $user_details['email_add'],
							  'org_name' => $user_details['org_name'],
							  'org_zip' => $user_details['org_zip'],	
							 );	
			
			
		}
		
		header('Content-type: application/json');
		echo json_encode($data_new);	  
	}
	function generate_random_password($length = 10) {
		$alphabets = range('A','Z');
		$numbers = range('0','9');
		$additional_characters = array('_','.');
		$final_array = array_merge($alphabets,$numbers,$additional_characters);
			 
		$password = '';
	  
		while($length--) {
		  $key = array_rand($final_array);
		  $password .= $final_array[$key];
		}
	  
		return $password;
	}
	
	
	function wp_login_details($data) {
        //echo"<pre>";print_r($data);die;
      
        $allmail = $data['email'];
        $this->load->library('email');
        $email_details = $this->common_model->get_email_containt("1");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
        if (isset($email_details[0]['st_email_body'])) {
            $templete = $email_details[0]['st_email_body'];
            $templete = str_replace("##url##", $this->config->item('base_url'), $templete);
            $templete = str_replace("##display_name##", $data['username'] . " " . $data['lastname'], $templete);
            $templete = str_replace("##current_year##", date('Y'), $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
			$userid = $data['userid'];
			//echo 'userid'.$userid;
			$confirm_email_url = base_url().'verify/'.base64_encode($userid).'/'.base64_encode($data['email_verification_code']);
			$templete = str_replace("##confirm_email_link##", $confirm_email_url, $templete);
            $strMail = $templete;
            $to = $allmail;
            $subject = $email_details[0]['st_email_subject'];
            $message = $strMail;
			
			//print_r($message);exit;
			$category = $email_details[0]['st_category'];
            $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
        }
    }
	
	function get_rescue_story_data()
	{
		 $rescue_details = $this->wsdl_model->get_rescue_story_data();
		 //print_r($rescue_details);exit;
		 //return $rescue_details;
		 
		 if(isset($rescue_details) && !empty($rescue_details))
		 {
		 	if(isset($rescue_details['story']) && isset($rescue_details['story']['in_id']) && $rescue_details['story']['in_id'] > 0)
			{
				$this->wsdl_model->update_rescue_story_data($rescue_details['story']['in_id']);
			}
		 }
		 
		 echo json_encode($rescue_details);
		 //return $rescue_data;
	}
	
	/*function get_product_data($id)
	{  
		 $product_details = $this->wsdl_model->get_product_data($id);	
		//echo '<pre>'; print_r($product_details); die;
		 echo json_encode($product_details);
	}*/
	
	 public function completed_transport_list_view() {
        $this->load->view('wsdl/completed_transport_list');
    }

    function completed_transport_list($user_id = '', $wsdl_token = '') {      
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                //echo "<pre>";print_r($user_details);die;
                $data['all_trasport'] = '';
               
                $date = array();
				              
                    #=============Completed Trasport============#
                    $all_trasport = $this->wsdl_model->get_my_transport_list("2",$user_id);
                    $data['all_trasport'] = $all_trasport;
                
               // echo '<pre/>';print_r($data['all_trasport']);exit;

                if (!empty($all_trasport)) {
                    $data = array("transport_list" => $data['all_trasport']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'You have no completed transports to display.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	 public function cancelled_transport_list_view() {
        $this->load->view('wsdl/cancelled_transport_list');
    }

    function cancelled_transport_list($user_id = '', $wsdl_token = '') {      
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                //echo "<pre>";print_r($user_details);die;
                $data['all_trasport'] = '';
               
                $date = array();           
                    #=============Cancelled Trasport============#
                    $all_trasport = $this->wsdl_model->get_my_transport_list("3",$user_id);
                    $data['all_trasport'] = $all_trasport;
               
               // echo '<pre/>';print_r($data['all_trasport']);exit;

                if (!empty($all_trasport)) {
                    $data = array("transport_list" => $data['all_trasport']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                       $data['msg'] = 'You have no cancelled transports to display.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function animal_detail_withmedia_view() {
        $this->load->view('wsdl/animal_detail_withmedia');      
        }
		
	function animal_detail_withmedia($user_id = '', $wsdl_token = '', $animal_id = '') {

        $animal_id 	= isset($_POST['animal_id']) ? $_POST['animal_id'] : '';
        $user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

                if (isset($animal_id) && $animal_id > 0) {
                    $data = array();

                    //$animal_pic = $this->wsdl_model->get_animals_photo($animal_id);
                    //$animal_video = $this->wsdl_model->get_animals_video($animal_id);
                    $animal_detail = $this->wsdl_model->get_animal_detail($animal_id);
					$media_detail = $this->wsdl_model->get_animal_media($animal_id);

                    //$data['animal_pic'] = $animal_pic;
                    //$data['animal_video'] = $animal_video;
                    $data['animal_details'] = $animal_detail;
					$data['animal_media']   = $media_detail;
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	 public function driver_recommendleg_view()
	{
		$this->load->view('wsdl/driver_recommendleg');   
	}
	
	
	function driver_recommendleg($user_id = '', $wsdl_token = '') {
	 
	
        $user_id 			= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 		= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 		= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';			
		$stPickupLocation 	= isset($_POST['stPickupLocation']) ? $_POST['stPickupLocation'] : '';
		$stPickupStreet 	= isset($_POST['stPickupStreet']) ? $_POST['stPickupStreet'] : '';	
		$stDropoffLocation 	= isset($_POST['stDropoffLocation']) ? $_POST['stDropoffLocation'] : '';
		$stDropoffStreet 	= isset($_POST['stDropoffStreet']) ? $_POST['stDropoffStreet'] : '';	
		$stNotes 			= isset($_POST['stNotes']) ? nl2br($_POST['stNotes']) : '';	
		$dropzip='';
		$pickzp='';		
		$pickzp = explode(',',$stPickupLocation);
		$dropzip = explode(',',$stDropoffLocation);
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($stPickupLocation) && $stPickupLocation != '' && isset($stDropoffLocation) && $stDropoffLocation != ''  && isset($transport_id) && $transport_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
			
            if (count($user_details) > 0) {
			
			//print_r($user_details); die;
			$user_name = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
			$user_email = $user_details[0]['st_email'];							
			
			
			$recommend_leg_details = array("in_user_id" 			=> $user_id,
											"st_user_name" 			=> $user_name,
											"st_email" 				=> $user_email,
											"in_transportation_id" 	=> $transport_id,
											"in_leg_type" 			=> 0,
																
											"st_from_street"		=> $stPickupStreet,					
											"st_from_city" 			=>   $pickzp[1], //trim($data['recommend_leg']['pick_city']),
											"st_from_state" 		=> $pickzp[2],
											"st_from_zipcode" 		=> $pickzp[0],//trim($data['recommend_leg']['pick_zip']),					
											"st_from_country" 		=> 'USA',
											
											"st_to_street"			=> $stDropoffStreet, 					
											"st_to_city" 			=> $dropzip[1],
											"st_to_state" 			=> $dropzip[2],
											"st_to_zipcode" 		=> $dropzip[0],//trim($data['recommend_leg']['drop_zip']),
											"st_to_country" 		=> 'USA',
											
											"st_notes" 				=> trim($stNotes),
											"dt_created" 			=> date("Y-m-d H:i:s")                   
                );
        $leg_id = $this->orgtrasnportation_model->add_recommended_leg($recommend_leg_details);
		
		
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_body = $this->common_model->get_email_containt('49');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			if (isset($email_body) && !empty($email_body)) 
			{

				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($transport_id);
				$to = $transport_co_details['coordinatoremail'];
				//$to = 'sadique.mohammed@pulsesolutions.net';
				$subject = $email_body[0]['st_email_subject'];				
				
				$subject = str_replace("##transport_id##", "#DBT" . $transport_id, $subject);				
				
				$templete = $email_body[0]['st_email_body'];

				$pickup_location = '';
				if(isset($stPickupStreet) && trim($stPickupStreet) != '')
				{
					$pickup_location .= $stPickupStreet . ', ';
				}
				if(isset($pickzp[1]) && trim($pickzp[1]) != '')
				{
					$pickup_location .=$pickzp[1]. ', ';//$data['recommend_leg']['pick_city'] . ', ';
				}
				if(isset($pickzp[2]) && trim($pickzp[2]) != '')
				{
					$pickup_location .= $pickzp[2] . ', ';
				}
				if(isset($pickzp[0]) && trim($pickzp[0]) != '')
				{
					$pickup_location .= $pickzp[0];
				}
				
				$dropoff_location = '';
				if(isset($stDropoffStreet) && trim($stDropoffStreet) != '')
				{
					$dropoff_location .= $stDropoffStreet . ', ';
				}
				if(isset($dropzip[1]) && trim($dropzip[1]) != '')
				{
					$dropoff_location .= $dropzip[1] . ', ';
				}
				if(isset($dropzip[2]) && trim($dropzip[2]) != '')
				{
					$dropoff_location .= $dropzip[2] . ', ';
				}
				if(isset($dropzip[0]) && trim($dropzip[0]) != '')
				{
					$dropoff_location .= $dropzip[0]; //  $data['recommend_leg']['drop_zip'];
				}
				
				$templete = str_replace("##user_display_name##", $user_name, $templete);
				$templete = str_replace("##transport_id##", "#DBT" . $transport_id, $templete);
				$templete = str_replace("##transport_coordinator##", $transport_co_details['coordinatorname'], $templete);
				$templete = str_replace("##leg_type##", "Ground", $templete);				
				$templete = str_replace("##pickup_location##", $pickup_location, $templete);
				$templete = str_replace("##dropoff_location##", $dropoff_location, $templete);
				$templete = str_replace("##username##", $user_name, $templete);
				$templete = str_replace("##useremail##", $user_email, $templete);
				$templete = str_replace("##notes##", $stNotes, $templete);
				$templete = str_replace("##DONATION##", $donation, $templete);
				//print_r($templete);exit;
				$category =$email_body[0]['st_category'];
				
				$user_to_id = $this->common_model->get_user_id_by_email($to);
						
				$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}	               
			   
			$data['msg'] = 'We sent your suggestion to the transport coordinator.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Pickuplocation or Droplocation or Notes  or Transport ID Missing ";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	 
	 }
	 
	 public function pilot_recommendleg_view()
	{
		$this->load->view('wsdl/pilot_recommendleg');   
	}
	
	function pilot_recommendleg($user_id = '', $wsdl_token = '') {	 
	
        $user_id 			= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 		= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 		= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';	
		
		$stPickupLocation 	= isset($_POST['stPickupLocation']) ? $_POST['stPickupLocation'] : '';
		$stDropoffLocation 	= isset($_POST['stDropoffLocation']) ? $_POST['stDropoffLocation'] : '';
		$stNotes 			= isset($_POST['stNotes']) ? nl2br($_POST['stNotes']) : '';
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($stPickupLocation) && $stPickupLocation != '' && isset($stDropoffLocation) && $stDropoffLocation != '' && isset($transport_id) && $transport_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
			
            if (count($user_details) > 0) {
			
			//print_r($user_details); die;
			$user_name = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
			$user_email = $user_details[0]['st_email'];
			$fromlocationdetail	=	$this->wsdl_model->get_fromloc_details($stPickupLocation);
			$tolocationdetail	=	$this->wsdl_model->get_toloc_details($stDropoffLocation);
			
			//echo '<pre>'; print_r($tolocationdetail); die;				
			
			
			$recommend_leg_details = array("in_user_id" 		=> $user_id,
											"st_user_name" 		=> $user_name,
											"st_email" 			=> $user_email,
											"in_transportation_id" => $transport_id,
											"in_leg_type" 		=> 1,
											
											"st_from_street"	=> $stPickupLocation,
											"st_from_city" 		=> isset($fromlocationdetail['st_city']) ? $fromlocationdetail['st_city']:'',
											"st_from_state" 	=> isset($fromlocationdetail['st_state'])? $fromlocationdetail['st_state']:'',
											
											"st_to_street"		=> $stDropoffLocation, 
											"st_to_city" 		=> isset($tolocationdetail['st_city'])? $tolocationdetail['st_city']:'',
											"st_to_state" 		=> isset($tolocationdetail['st_state'])? $tolocationdetail['st_state']:'',
											
											"st_notes" 			=> trim($stNotes),
											"dt_created" 		=> date("Y-m-d H:i:s")                   
                );
        $leg_id = $this->orgtrasnportation_model->add_recommended_leg($recommend_leg_details);
		
		
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_body = $this->common_model->get_email_containt('49');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			if (isset($email_body) && !empty($email_body)) 
			{

				$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($transport_id);

				$to = $transport_co_details['coordinatoremail'];
				//$to = 'sadique.mohammed@pulsesolutions.net';
				$fromcity	=	$fromstate	=	$tocity	=	$tostate	=	'';	
				
				if(isset($fromlocationdetail['st_city']) && !empty($fromlocationdetail['st_city'])){				
				$fromcity=", " . $fromlocationdetail['st_city'];			
				}
				
				if(isset($fromlocationdetail['st_state']) && !empty($fromlocationdetail['st_state'])){				
				$fromstate=", " . $fromlocationdetail['st_state'];		
				}
				
				if(isset($tolocationdetail['st_city']) && !empty($tolocationdetail['st_city'])){				
				$tocity=", " . $tolocationdetail['st_city'];			
				}	
				
				if(isset($tolocationdetail['st_state']) && !empty($tolocationdetail['st_state'])){				
				$tostate=", " . $tolocationdetail['st_state'];		
				}
				$subject = $email_body[0]['st_email_subject'];				
				
				$subject = str_replace("##transport_id##", "#DBT" . $transport_id, $subject);				
				
				$templete = $email_body[0]['st_email_body'];

				$templete = str_replace("##user_display_name##", $user_name, $templete);
				$templete = str_replace("##transport_id##", "#DBT" . $transport_id, $templete);
				$templete = str_replace("##transport_coordinator##", $transport_co_details['coordinatorname'], $templete);
				$templete = str_replace("##leg_type##", "Aviation", $templete);				
				$templete = str_replace("##pickup_location##",$stPickupLocation.$fromcity.$fromstate , $templete);
				$templete = str_replace("##dropoff_location##",$stDropoffLocation.$tocity.$tostate , $templete);
				$templete = str_replace("##username##", $user_name, $templete);
				$templete = str_replace("##useremail##", $user_email, $templete);
				$templete = str_replace("##notes##", $stNotes, $templete);
				$templete = str_replace("##DONATION##", $donation, $templete);
				
				//print_r($templete);exit;
				$category = $email_body[0]['st_category'];
				
				$user_to_id = $this->common_model->get_user_id_by_email($to);
						
				$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$templete);		
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}
		               
			   
			$data['msg'] = 'We sent your suggestion to the transport coordinator.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Pickuplocation or Droplocation or Notes  or Transport ID Missing ";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	 
	 }
	 
	 
	  public function add_transport_photos_videos_view() {
        $this->load->view('wsdl/add_transport_photos_videos');
    }
	
	 function add_transport_photos_videos($user_id = '', $wsdl_token = '', $transport_id='', $video_url='') {

       
        $user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$video_url 		= isset($_POST['video_url']) ? $_POST['video_url'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($transport_id) && $transport_id != '' ) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) { 		
			
			/*if($this->input->post('video_url')==''){  
					$data['err_msg'] = 'Please enter photo or video url';
					$data = array("result" => 2, "err_msg" => $data['err_msg']);
					header('Content-type: application/json');
					echo json_encode($data);
					return;												
			}*/
			
			
              
                if($this->input->post('video_url')!='' && (stripos($this->input->post('video_url'),'youtube.com')===false) && (stripos($this->input->post('video_url'),'vimeo.com')===false) ){  
					$data['err_msg'] = 'Please enter valid video url';
					$data = array("result" => 2, "err_msg" => $data['err_msg']);
					header('Content-type: application/json');
					echo json_encode($data);
					return;					
			}
				
				else
				{ 
					
				  
				   $rescue_data = array("in_transportation_id"  	=> $transport_id,
										"st_rescue_title" 			=> '',
										"st_rescue_story" 			=> '',
										"in_created_by"				=> $user_id,
										"dt_created" 				=> date("Y-m-d H:i:s"),
										"in_deleted" 				=> "0"
									);
				$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);				
					
					
					
				$this->load->library('upload');  
			  
			    $files = $_FILES;			
				$cpt = 0;
				if(isset($_FILES) && !empty($_FILES))
				{
					$cpt = count($_FILES['photo']['name']);		
				}				
				for($i=0; $i<$cpt; $i++)
				{           
					$_FILES['photo']['name']		= $files['photo']['name'][$i];
					$_FILES['photo']['type']		= $files['photo']['type'][$i];
					$_FILES['photo']['tmp_name']	= $files['photo']['tmp_name'][$i];
					$_FILES['photo']['error']		= $files['photo']['error'][$i];
					$_FILES['photo']['size']		= $files['photo']['size'][$i]; 
					
					if($_FILES['photo']['name']!=''){				
					
					
					$lastDot = strrpos($_FILES['photo']['name'], "."); 
					$_FILES['photo']['name'] = str_replace(".", "", substr($_FILES['photo']['name'], 0, $lastDot)) . substr($_FILES['photo']['name'], $lastDot);
					$config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo']['name']));	
					
					$config['upload_path'] = $this->config->item('upload') . 'trasnportation/';
                    $config['max_size'] = '5120';  // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
			
					$this->upload->initialize($config);
					$this->upload->do_upload('photo');
					
					
					$file_errors = array('errors' => $this->upload->display_errors());
						if (!empty($file_errors['errors'])) {
							$err_msg = strip_tags($file_errors['errors']);
							$data = array("result" => 2, "err_msg" => $err_msg);
							header('Content-type: application/json');
							echo json_encode($data);
							return false;
						}
						$this->load->library('image_lib');
	
						$config['image_library'] = 'gd2';
						$config['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
						$config['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
						$config['maintain_ratio'] = TRUE;
						$config['width'] = 250;
						$config['height'] = 250;
						$this->load->library('image_lib', $config);
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						
						
						$this->load->library('opencloud');
						$this->opencloud->set_container('appcdn');
						$this->opencloud->add_object($config['file_name'], $config['new_image']);
						$this->opencloud->add_object($config['file_name'], $config['source_image']);	
					  
						$this->image_lib->clear();  
						
						 $file_details = array('in_transportation_id' 	=> $transport_id,
												'in_transport_story_id' => $last_insert_rescue_id,
												'st_file_name' 			=> $config['file_name'],
												'st_file_type' 			=> "P",
												'in_created_by'			=> $user_id,
												'dt_created' 			=> date("Y-m-d H:i:s")												
							);									
					   $this->orgtrasnportation_model->add_transport_photo($file_details); 
					   
					   }
				}
                                
				
				
				$url_link = array('video_url'	=>'');
			
				if($this->input->post('video_url') != '') {
					$url_link['video_url'] = $this->input->post('video_url'); 
				}
				
				
				foreach($url_link as $key => $value) {
				if($value != '') {					
					
				
					if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $last_insert_rescue_id,
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					}
					
					if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){					
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $last_insert_rescue_id,
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);	
					}						
						
				}
				
			}		

                $data['msg'] = 'Thank you for providing your animal rescue photos/videos.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				}
                   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Transport Id Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }	
	
	
	
	public function edit_transport_photos_videos_view() {
        $this->load->view('wsdl/edit_transport_photos_videos');
    }
	
	
	function edit_transport_photos_videos($user_id = '', $wsdl_token = '', $transport_id='', $photo='', $story_id='', $video_url='') {

       
        $user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$video_url 		= isset($_POST['video_url']) ? $_POST['video_url'] : '';
		$story_id 		= isset($_POST['story_id']) ? $_POST['story_id'] : '';
		$deleted_photo 	= isset($_POST['deleted_photo']) ? $_POST['deleted_photo'] : '';
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($transport_id) && $transport_id != '' ) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) { 
              
                if($this->input->post('video_url')!='' && (stripos($this->input->post('video_url'),'youtube.com')===false) && (stripos($this->input->post('video_url'),'vimeo.com')===false) ){  
					$data['err_msg'] = 'Please enter valid video url';
					$data = array("result" => 2, "err_msg" => $data['err_msg']);
					header('Content-type: application/json');
					echo json_encode($data);
					return;					
			}
				
				else
				{ 
				
						if(!empty($deleted_photo)){ 
						$photoid	=	explode(',',$deleted_photo);		
						$this->wsdl_model->delete_transport_photo($photoid);		
						}					
					
				$this->load->library('upload');  			  
			    $files = $_FILES;			
				$cpt = 0;
				if(isset($_FILES) && !empty($_FILES))
				{
					$cpt = count($_FILES['photo']['name']);		
				}
				for($i=0; $i<$cpt; $i++)
				{           
					$_FILES['photo']['name']		= $files['photo']['name'][$i];
					$_FILES['photo']['type']		= $files['photo']['type'][$i];
					$_FILES['photo']['tmp_name']	= $files['photo']['tmp_name'][$i];
					$_FILES['photo']['error']		= $files['photo']['error'][$i];
					$_FILES['photo']['size']		= $files['photo']['size'][$i]; 
					
					if($_FILES['photo']['name']!=''){				
					
					
					$lastDot = strrpos($_FILES['photo']['name'], "."); 
					$_FILES['photo']['name'] = str_replace(".", "", substr($_FILES['photo']['name'], 0, $lastDot)) . substr($_FILES['photo']['name'], $lastDot);
					$config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo']['name']));	
					
					$config['upload_path'] = $this->config->item('upload') . 'trasnportation/';
                    $config['max_size'] = '5120';  // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
			
					$this->upload->initialize($config);
					$this->upload->do_upload('photo');
					
					
					$file_errors = array('errors' => $this->upload->display_errors());
						if (!empty($file_errors['errors'])) {
							$err_msg = strip_tags($file_errors['errors']);
							$data = array("result" => 2, "err_msg" => $err_msg);
							header('Content-type: application/json');
							echo json_encode($data);
							return false;
						}
						$this->load->library('image_lib');
	
						$config['image_library'] = 'gd2';
						$config['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
						$config['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
						$config['maintain_ratio'] = TRUE;
						$config['width'] = 250;
						$config['height'] = 250;
						$this->load->library('image_lib', $config);
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						
						
						$this->load->library('opencloud');
						$this->opencloud->set_container('appcdn');
						$this->opencloud->add_object($config['file_name'], $config['new_image']);
						$this->opencloud->add_object($config['file_name'], $config['source_image']);	
					  
						$this->image_lib->clear();  
						
						 $file_details = array('in_transportation_id' 	=> $transport_id,
												'in_transport_story_id' => $story_id,
												'st_file_name' 			=> $config['file_name'],
												'st_file_type' 			=> "P",
												'in_created_by'			=> $user_id,
												'dt_created' 			=> date("Y-m-d H:i:s")												
							);									
					   $this->orgtrasnportation_model->add_transport_photo($file_details); 
					   
					   }
				}
                                
				
				
				$url_link = array('video_url'	=>'');
			
				if($this->input->post('video_url') != '') {
					$url_link['video_url'] = $this->input->post('video_url'); 
				}
				
				
				foreach($url_link as $key => $value) {
				if($value != '') {	
				
				$reccount='';
				$reccount	=	$this->wsdl_model->check_video_exists($transport_id,$story_id);	
				
					if(isset($reccount) && $reccount!='')
					{
						if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){  
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_modified" 			=> date("Y-m-d H:i:s")														
											);
											
																
							
							$this->wsdl_model->update_transport_photo($story_file_details,$transport_id,$story_id,$user_id);
					}
					
					
						if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){	 		
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_modified" 			=> date("Y-m-d H:i:s")														
											);
							$this->wsdl_model->update_transport_photo($story_file_details,$transport_id,$story_id,$user_id);
					}
					}
					else
					{
						if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $story_id,
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					}
					
						if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){					
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $story_id,
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);	
					}	
					}										
						
				}
				
			}		

                $data['msg'] = 'We have updated your photos/videos accordingly.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				}
                   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Transport Id Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function add_transport_story_view()
	 {
	 	$this->load->view('wsdl/add_transport_story'); 
	 }
	 
	 
	 public function add_transport_story($user_id = '', $wsdl_token = '', $transport_id='',$title='',$story='', $photo='',$video_url='') {

        $user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$title 			= isset($_POST['title']) ? $_POST['title'] : '';
		$story 			= isset($_POST['story']) ? $_POST['story'] : '';


       if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($transport_id) && $transport_id != '' && isset($title) && $title != '' && isset($story) && $story != '' ) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details[0]['st_email']); die;

            if (count($user_details) > 0) { 
			//echo '<pre>'; print_r($_POST);die;							
				if($this->input->post('video_url')!='' && (stripos($this->input->post('video_url'),'youtube.com')===false) && (stripos($this->input->post('video_url'),'vimeo.com')===false) ){  
					$data['err_msg'] = 'Please enter valid video url';
					$data = array("result" => 2, "err_msg" => $data['err_msg']);
					header('Content-type: application/json');
					echo json_encode($data);		
					
			}
			else
			{           
			    $rescue_data = array("in_transportation_id" => $transport_id,
									"st_rescue_title" 		=> $title,
									"st_rescue_story" 		=> $story,
									"in_created_by"			=> $user_id,
									"dt_created" 			=> date("Y-m-d H:i:s"),
									"in_deleted" 			=> "0"
									);
				$last_insert_rescue_id = $this->orgtrasnportation_model->add_transport_rescue_details($rescue_data);
			    
				
				$this->load->library('upload');  
			  
			    $files = $_FILES;			
				$cpt = 0;
				if(isset($_FILES) && !empty($_FILES))
				{
					$cpt = count($_FILES['photo']['name']);		
				}				
				for($i=0; $i<$cpt; $i++)
				{           
					$_FILES['photo']['name']= $files['photo']['name'][$i];
					$_FILES['photo']['type']= $files['photo']['type'][$i];
					$_FILES['photo']['tmp_name']= $files['photo']['tmp_name'][$i];
					$_FILES['photo']['error']= $files['photo']['error'][$i];
					$_FILES['photo']['size']= $files['photo']['size'][$i]; 
					
					if($_FILES['photo']['name']!=''){
					
					
					
					$lastDot = strrpos($_FILES['photo']['name'], "."); 
					$_FILES['photo']['name'] = str_replace(".", "", substr($_FILES['photo']['name'], 0, $lastDot)) . substr($_FILES['photo']['name'], $lastDot);
					$config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo']['name']));	
					
					$config['upload_path'] = $this->config->item('upload') . 'trasnportation/';
                    $config['max_size'] = '5120';  // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
			
					$this->upload->initialize($config);
					$this->upload->do_upload('photo');
					
					
					$file_errors = array('errors' => $this->upload->display_errors());
						if (!empty($file_errors['errors'])) {
							$err_msg = strip_tags($file_errors['errors']);
							$data = array("result" => 2, "err_msg" => $err_msg);
							header('Content-type: application/json');
							echo json_encode($data);
							return false;
						}
						$this->load->library('image_lib');
	
						$config['image_library'] = 'gd2';
						$config['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
						$config['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
						$config['maintain_ratio'] = TRUE;
						$config['width'] = 250;
						$config['height'] = 250;
						$this->load->library('image_lib', $config);
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						
						
						$this->load->library('opencloud');
						$this->opencloud->set_container('appcdn');
						$this->opencloud->add_object($config['file_name'], $config['new_image']);
						$this->opencloud->add_object($config['file_name'], $config['source_image']);	
					  
						$this->image_lib->clear();  
						
						 $file_details = array( 'in_transportation_id' 	=> $transport_id,
												'in_transport_story_id' => $last_insert_rescue_id,
												'st_file_name' 			=> $config['file_name'],
												'st_file_type' 			=> "P",
												'in_created_by'			=> $user_id,
												'dt_created' 			=> date("Y-m-d H:i:s")												
							);									
					   $this->orgtrasnportation_model->add_transport_photo($file_details); 
					   
					   }
				}	
               
				
				//Add youtube URLS
			$url_link = array(	'video_url'		=>	'');
			
			if($this->input->post('video_url') != '') {
				$url_link['video_url'] = $this->input->post('video_url'); 
			}
			
			
			foreach($url_link as $key => $value) {
				if($value != '') {					
					
				
					if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $last_insert_rescue_id,
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					}
					
					if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){					
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $last_insert_rescue_id,
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
							
							
						
					}							
					//http://i.vimeocdn.com/video/132656337_200x150.jpg		
				}
				
				
				$this->load->library('email');
				$email_details = $this->common_model->get_email_containt("80");
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				if(isset($email_details[0]['st_email_body']))
				{
					$full_name	=	$user_id.' '.$user_details[0]['st_last_name'];					
					$templete  = $email_details[0]['st_email_body'];
					$templete  = str_replace("##user_name##",$full_name,$templete);
					$templete  = str_replace("##admin_url##",$this->config->item('base_url').'administration.php/sysmanage/detail_transport_story/',$templete);
					$templete  = str_replace("##story_id##",$last_insert_rescue_id,$templete);
					$templete  = str_replace("##current_year##",date('Y'),$templete);	
					$templete  = str_replace("##DONATION##",$donation,$templete);	
									
					$admin_list = $this->common_model->get_admin_list();
					for($a=0;$a<count($admin_list);$a++)
					{
						$permission = unserialize($admin_list[$a]['st_permission']); 
						if(isset($permission) &&  !empty($permission) && in_array('New_Rescue_Story',$permission))
						{					
							$strMail 	= 	$templete;
							$to			=	$admin_list[$a]['email_address'];
							//$to			=	'sadique.mohammed@pulsesolutions.net';
							$subject	=	$email_details[0]['st_email_subject'];
							$message	=	$strMail;
							$category   =   $email_details[0]['st_category'];
							$this->common_function->send_mail($this->email, $to, $subject, $message, $user_details[0]['st_email'], $cc ='', $full_name,$this->email,$category);
						}
					}
				}
			}				
			
                $data['msg'] = 'Thank you for providing your animal rescue story.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);			
			}                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token  or Transport Id or Story or Title Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    } 
	
	
	public function edit_transport_story_view()
	 {
	 	$this->load->view('wsdl/edit_transport_story'); 
	 }
	 
	 public function edit_transport_story($user_id = '', $wsdl_token = '', $transport_id='',$title='',$story='', $photo='',$video_url='') {

        $user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$story_id 		= isset($_POST['story_id']) ? $_POST['story_id'] : '';
		$title 			= isset($_POST['title']) ? $_POST['title'] : '';
		$story 			= isset($_POST['story']) ? $_POST['story'] : '';
		$deleted_photo  = isset($_POST['deleted_photo']) ? $_POST['deleted_photo'] : '';
		
		if(!empty($deleted_photo)){ 
			$photoid	=	explode(',',$deleted_photo);		
			$this->wsdl_model->delete_transport_photo($photoid);		
		}


       if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($transport_id) && $transport_id != '' && isset($title) && $title != '' && isset($story) && $story != '' ) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details[0]['st_email']); die;

            if (count($user_details) > 0) { 
			//echo '<pre>'; print_r($_POST);die;							
				if($this->input->post('video_url')!='' && (stripos($this->input->post('video_url'),'youtube.com')===false) && (stripos($this->input->post('video_url'),'vimeo.com')===false) ){  
					$data['err_msg'] = 'Please enter valid video url';
					$data = array("result" => 2, "err_msg" => $data['err_msg']);
					header('Content-type: application/json');
					echo json_encode($data);		
					
			}
			else
			{   
			
			
			//echo '<pre>'; print_r($_FILES); die;
			//echo count($_FILES['photo']['name']); die;
			
			        
			    $rescue_data = array("in_transportation_id" => $transport_id,
									"st_rescue_title" 		=> $title,
									"st_rescue_story" 		=> $story,
									"in_created_by"			=> $user_id,
									"dt_modified" 			=> date("Y-m-d H:i:s"),
									"in_deleted" 			=> "0"
									);
				$this->wsdl_model->update_transport_rescue_details($rescue_data,$story_id);
				
				
			    $this->load->library('upload');  
			  
			    $files = $_FILES;			
				$cpt = 0;
				if(isset($_FILES) && !empty($_FILES))
				{
					$cpt = count($_FILES['photo']['name']);		
				}
				for($i=0; $i<$cpt; $i++)
				{           
					$_FILES['photo']['name']= $files['photo']['name'][$i];
					$_FILES['photo']['type']= $files['photo']['type'][$i];
					$_FILES['photo']['tmp_name']= $files['photo']['tmp_name'][$i];
					$_FILES['photo']['error']= $files['photo']['error'][$i];
					$_FILES['photo']['size']= $files['photo']['size'][$i]; 
					
					if($_FILES['photo']['name']!=''){
					
					
					
					$lastDot = strrpos($_FILES['photo']['name'], "."); 
					$_FILES['photo']['name'] = str_replace(".", "", substr($_FILES['photo']['name'], 0, $lastDot)) . substr($_FILES['photo']['name'], $lastDot);
					$config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo']['name']));	
					
					$config['upload_path'] = $this->config->item('upload') . 'trasnportation/';
                    $config['max_size'] = '5120';  // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
			
					$this->upload->initialize($config);
					$this->upload->do_upload('photo');
					
					
					$file_errors = array('errors' => $this->upload->display_errors());
						if (!empty($file_errors['errors'])) {
							$err_msg = strip_tags($file_errors['errors']);
							$data = array("result" => 2, "err_msg" => $err_msg);
							header('Content-type: application/json');
							echo json_encode($data);
							return false;
						}
						$this->load->library('image_lib');
	
						$config['image_library'] = 'gd2';
						$config['source_image'] = $this->config->item('upload') . 'trasnportation/' . $config['file_name'];
						$config['new_image'] = $this->config->item('upload') . 'trasnportation/250x250/' . $config['file_name'];
						$config['maintain_ratio'] = TRUE;
						$config['width'] = 250;
						$config['height'] = 250;
						$this->load->library('image_lib', $config);
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						
						
						$this->load->library('opencloud');
						$this->opencloud->set_container('appcdn');
						$this->opencloud->add_object($config['file_name'], $config['new_image']);
						$this->opencloud->add_object($config['file_name'], $config['source_image']);	
					  
						$this->image_lib->clear();  
						
						 $file_details = array('in_transportation_id' 	=> $transport_id,
												'in_transport_story_id' => $story_id,
												'st_file_name' 			=> $config['file_name'],
												'st_file_type' 			=> "P",
												'in_created_by'			=> $user_id,
												'dt_created' 			=> date("Y-m-d H:i:s")
												//"in_deleted" 			=> "0"
							);									
					   $this->orgtrasnportation_model->add_transport_photo($file_details); 
					   
					   }
				}
				
               
				
				//Add youtube URLS
			$url_link = array('video_url'		=>	'');
			
			if($this->input->post('video_url') != '') {
				$url_link['video_url'] = $this->input->post('video_url'); 
			}
			
			
			foreach($url_link as $key => $value) {		
			
				if($value != '') {	
				$reccount='';
				$reccount	=	$this->wsdl_model->check_video_exists($transport_id,$story_id);
				 
				 if(isset($reccount) && $reccount!='')
				 {				 	
					
					if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){ 
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_modified" 			=> date("Y-m-d H:i:s")														
											);
											
																
							
							$this->wsdl_model->update_transport_photo($story_file_details,$transport_id,$story_id,$user_id);
					}
					
					
					if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){	 		
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_modified" 			=> date("Y-m-d H:i:s")														
											);
							$this->wsdl_model->update_transport_photo($story_file_details,$transport_id,$story_id,$user_id);
					}
					
					
					
				 }
				 
				 else
				 {
					
					if(preg_match('#https?://(?:www\.)?(?:m\.)?youtube\.com/watch\?v=([^&]+?)#', $this->input->post('video_url'), $matches)){
					
					$video_id = explode("?v=", $value);
					$video_id = $video_id[1];
					
						 $story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $story_id,
														"st_file_name"			=> 'http://i.ytimg.com/vi/'.$video_id.'/hqdefault.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'youtube',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
											
																
							
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					}
					
					if(preg_match('/http(s)?:\/\/(www\.)*vimeo\.com\/.*/',$this->input->post('video_url'))){					
						// do vimeo stuff
						$video_id = explode("vimeo.com/", $value);
					    $video_id = $video_id[1];
						
						
						
						$story_file_details = array(	"in_transportation_id" 	=> $transport_id,
														"in_transport_story_id" => $story_id,
														"st_file_name"			=> 'http://i.vimeocdn.com/video/'.$video_id.'_200x150.jpg',
														"st_file_type" 			=> 'V',
														"st_video_provider" 	=> 'vimeo',
														"st_video_id" 			=> $video_id,
														"in_created_by"			=> $user_id,
														"dt_created" 			=> date("Y-m-d H:i:s"),
														"in_deleted" 			=> "0"
											);
							$this->orgtrasnportation_model->add_transport_photo($story_file_details);
					}	
					
				}	
					
				}	
			
			}				
			
                $data['msg'] = 'We have updated your animal rescue story accordingly.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);			
			}                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token  or Transport Id or Story or Title Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	public function transport_story_photo_view()
	{
		$this->load->view('wsdl/transport_story_photo'); 
	}
	
	function transport_story_photo($user_id = '', $wsdl_token = '', $transport_id = '') {
        $user_id	 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token  	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';

        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                if (isset($transport_id) && $transport_id > 0) {
                    $data = array();

                    $story 		 = $this->wsdl_model->get_transport_story_photos($transport_id);
					
					//echo '<pre>'; print_r($story); die;
					if(isset($story) && !empty($story)){
										            
                    $data['story']			= $story;			
                    header('Content-type: application/json');
                    echo json_encode($data);
					}
					else
					{
					$data['msg'] = 'No Transportation Stories / Photo found.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
					}
                } 
				else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function delete_transport_story_view()
	{
		$this->load->view('wsdl/delete_transport_story'); 
	}
	
	public function delete_transport_story()
	{
		$user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$story_id 		= isset($_POST['story_id']) ? $_POST['story_id'] : '';
		$created_by_id 	= isset($_POST['created_by_id']) ? $_POST['created_by_id'] : '';
		
		     if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($story_id) && $story_id != '' && isset($created_by_id) && $created_by_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) {					   
			    
				$story_type = $this->wsdl_model->check_transport_story_type($story_id);
				
				if(isset($story_type) && isset($story_type['st_rescue_title']) &&  $story_type['st_rescue_title'] != '')
				{
                	$data['msg'] = 'Transportation story deleted successfully.';
				}
				else
				{
					$data['msg'] = 'Transportation photos/videos deleted successfully.';
				}
				
				//print_r($data['msg']);exit;
				$this->orgtrasnportation_model->delete_transport_story($story_id,$created_by_id);
				
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Story Id or Created By Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }  
	}

	function get_product_data($id)
	{  
		$product_details = $this->wsdl_model->get_product_data($id);	
		echo json_encode($product_details);
	}
	
	function get_product_image()
	{  
		$id 	= $_POST['product_id'];
		$product_details = $this->wsdl_model->get_productdata_image($id);	
		echo json_encode($product_details);
	}
	
	function get_auction_product_data($id)
	{  
		$product_details = $this->wsdl_model->get_auction_product_data($id);	
		echo json_encode($product_details);
	}
	
	function get_auction_image()
	{  
		$id 	= $_POST['product_id'];	
		$product_details = $this->wsdl_model->get_auctiondata_image($id);	
		echo json_encode($product_details);
	}
	
	function update_product_data()
	{
		$product_id 	= $_POST['product_id'];
		$wp_product_id 	= $_POST['wp_product_id'];
		
		$update_data = array("in_wp_product_id"=>$wp_product_id);
		$product_details= $this->wsdl_model->update_product_data($update_data,$product_id,'tbl_products');	
		//echo '<pre>'; print_r($product_details); die;
		echo json_encode($product_details);
	}
	
	function update_auction_product_data()
	{
		$product_id 	= $_POST['product_id'];
		$wp_product_id 	= $_POST['wp_product_id'];
		
		$update_data = array("in_wp_product_id"=>$wp_product_id);
		$product_details= $this->wsdl_model->update_product_data($update_data,$product_id,'tbl_auction_products');	
		echo json_encode($product_details);
	}
	
	function save_order()
	{
		$order_id =  $_POST['order_id'];	
		$this->load->library('woocommerce');
		$this->woo = $this->woocommerce->request();
		$order_data = $this->woo->orders->get($order_id);
		//echo '<pre/>';print_r($order_data);exit;
		$order_array_status = array('on-hold'=>1,'processing'=>2,'Pending'=>3,'completed'=>4,'cancelled'=>5,'refunded'=>6,'failed'=>7 );
		
		if (array_key_exists($order_data->order->status,$order_array_status)) {
			$order_status = $order_array_status[$order_data->order->status];
		} else {
			$order_status = 1;
		}
		
		if($order_array_status)
		//file_put_contents($_SERVER['DOCUMENT_ROOT'].'doobert-v3/testorder/test2.txt',serialize($order_data),FILE_APPEND);
	
		$order_info = array('in_wp_order_id'    => $order_data->order->id,
					         'dt_order_date'    => $order_data->order->created_at,
					       'in_order_status'	=> $order_status,
					        'fl_order_total'    => $order_data->order->subtotal,
	                           'fl_discount'    => $order_data->order->total_discount,
							   'fl_shipping'	=> $order_data->order->total_shipping,
	                        'fl_grand_total'    => $order_data->order->total,
	                            'dt_created'    => date("Y-m-d h:i:s"),
                               'dt_modified'    => date("Y-m-d h:i:s"),
	                            'in_deleted' 	=> 0 
					      );
	 
	    $order_id = $this->wsdl_model->create_order($order_info);
		
        $billing_address = array('in_order_id'  => $order_id,
								 'in_addr_type'  => 1,
							     'st_first_name' => $order_data->order->billing_address->first_name,
						         'st_last_name'  => $order_data->order->billing_address->last_name,
						         'st_addr1'      => $order_data->order->billing_address->address_1,		
							     'st_addr2'      => $order_data->order->billing_address->address_2,
						         'st_city'       => $order_data->order->billing_address->city,
						         'st_state'      => $order_data->order->billing_address->state,
						           'st_zip'      => $order_data->order->billing_address->postcode,
						          'st_country'   => $order_data->order->billing_address->country,
						          'st_email'     => $order_data->order->billing_address->email,
					              'st_phone'     => $order_data->order->billing_address->phone,
						          'dt_created'   => date("Y-m-d h:i:s"),
						          'dt_modified'  => date("Y-m-d h:i:s"),
						           'in_deleted'  => 0 	
						        );

		$billing_address_id	  =  $this->wsdl_model->create_order_address($billing_address);				
								
		$shipping_address     =     array('in_order_id' => $order_id,
												 'in_addr_type' => 2,
						                        'st_first_name' => $order_data->order->shipping_address->first_name,
						                         'st_last_name' => $order_data->order->shipping_address->last_name,
						                             'st_addr1' => $order_data->order->shipping_address->address_1,		
													 'st_addr2' => $order_data->order->shipping_address->address_2,
													  'st_city' => $order_data->order->shipping_address->city,
													 'st_state' => $order_data->order->shipping_address->state,
													   'st_zip' => $order_data->order->shipping_address->postcode,
												   'st_country' => $order_data->order->shipping_address->country,
													 'st_email' => $order_data->order->shipping_address->email,
													 'st_phone' => $order_data->order->shipping_address->phone,
												   'dt_created' => date("Y-m-d h:i:s"),
												  'dt_modified' => date("Y-m-d h:i:s"),
												   'in_deleted' => 0 	
												);

		     $shipping_address_id	  =  $this->wsdl_model->create_order_address($shipping_address);											

						foreach($order_data->order->line_items as $key=>$value)
						{
							$line_item[] =  array( 'in_order_id' => $order_id,
												    'in_product_id' => $value->product_id,
						                          'st_product_name' => $value->name,
						                                  'fl_cost' => $value->price,
														   'in_qty' => $value->quantity,
													   'dt_created' => date("Y-m-d h:i:s"),
						                              'dt_modified' => date("Y-m-d h:i:s"),
						                               'in_deleted' => 0 
												 );
						}
			$line_item = $this->wsdl_model->add_line_item($line_item);
							
		
		echo 'success';
		//echo '<pre>'; print_r( ); echo '</pre>'; 
		//die;
	}
	
	public function update_order_status()
	{
		$order_id =  $_POST['order_id'];
		$new_status =  $_POST['new_status'];
		$order_array_status = array('on-hold'=>1,'processing'=>2,'Pending'=>3,'completed'=>4,'cancelled'=>5,'refunded'=>6,'failed'=> 7 );
		if (array_key_exists($new_status,$order_array_status)) {
			$order_status = $order_array_status[$new_status];
		} else {
			$order_status = 1;
		}
		$order_info = array('in_order_status'	=> $order_status,
                            'dt_modified'        => date("Y-m-d h:i:s"),
					      );
		$status = $this->wsdl_model->change_order_status($order_id,$order_info);
		echo 'success';  
	} 
	 
	public function get_organization_details($org_id)
    {
        //get information of organization by org_id
        $org_details = $this->common_model->get_single_org_details($org_id);
        header('Content-type: application/json');
        echo json_encode($org_details);
    }
	
	function delete_vendor()
	{
		$vendor_id = $_POST['vendor_id'];
		$get_organization_id = $this->wsdl_model->get_vendorid($vendor_id);
		if(count($get_organization_id)>0)
		{
			foreach($get_organization_id as $key=>$value)
			{
				$vendor_data = array('in_vendor_id'=>'','dt_modified'=>date("Y-m-d H:i:s"));
				$this->wsdl_model->delete_vendorid($vendor_data,$value['in_organization_id']);
			}	
		}	
		echo "status updated";
	}
	
	public function wp_signin($email_id = '', $pswd = '') 
	{
		$email_id = isset($_POST['email_id']) ? $_POST['email_id'] : '';
		$pswd = isset($_POST['pswd']) ? $_POST['pswd'] : '';
		$user_details = array();
		$user_orgid = array();
		$data = array();
        $user_details['email'] = isset($email_id) ? $this->common_function->custom_htmlentities($email_id) : '';
        $user_details['password'] = isset($pswd) ? $this->common_function->custom_htmlentities($pswd) : '';
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');
		$this->form_validation->set_rules('pswd', 'Password', 'required');
        if ($this->form_validation->run() == FALSE) {
            $this->form_validation->set_error_delimiters('', '<br>');
            $data['err_msg'] = validation_errors();

            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
			} elseif (isset($pswd) && $pswd != '') {
                $result = $this->wsdl_model->wp_user_login($user_details);

                if (isset($result) && !empty($result)) {
                    /* output in necessary format */
                    //echo ''; print_r($result); die;
                    //$user_orgid = $this->wsdl_model->get_user_orgid($result['user_details']['userid']);


                    $data = array("result" => 1, "user_details" => $result);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['err_msg'] = 'Invalid username or password.';
                    $data = array("result" => 2, "err_msg" => $data['err_msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $data = array("result" => 2, "err_msg" => 'One of parameter missing');
                header('Content-type: application/json');
                echo json_encode($data);
            }
    }
	  
	function add_product_bid()
	{
		$bid_value = $_POST['bid_value'];
		$product_id = $_POST['product_id'];
		$first_name = $_POST['first_name'];
		$last_name = $_POST['last_name'];
		$email_address = $_POST['email_address'];
		$product_bid = array('in_wp_product_id'     => $product_id,	
							 'st_first_name'        => $first_name,
							 'st_last_name'		    => $last_name,
							 'st_bid_email_address' => $email_address,
							 'fl_bid_price'			=> $bid_value,
							 'dt_created'			=> date('Y-m-d H:i:s'),
							 'dt_modified'			=> date('Y-m-d H:i:s'),
							 'in_final_bid'			=> '0',
							 'in_deleted'			=> '0', 
							);
		$product_line_item = $this->wsdl_model->insert_product_bid($product_bid);
		echo 'success';
	}
	
	function update_product_bid()
	{
		$bid_value = $_POST['bid_value'];
		$product_id = $_POST['product_id'];
		$first_name = $_POST['first_name'];
		$last_name = $_POST['last_name'];
		$email_address = $_POST['email_address'];
		$bid_id        = $this->wsdl_model->verify_product_bid($bid_value,$product_id,$first_name,$last_name,$email_address);
		if(!empty($bid_id))
		{
			$product_bid = array('dt_modified'			=> date('Y-m-d H:i:s'),
								 'in_final_bid'			=> '1',
								);
			$product_line_item = $this->wsdl_model->update_product_bid($product_bid,$bid_id);
		} else {	
			$product_bid = array('in_wp_product_id'     => $product_id,	
								 'st_first_name'        => $first_name,
							     'st_last_name'		    => $last_name,
							     'st_bid_email_address' => $email_address,
							     'fl_bid_price'			=> $bid_value,
							     'dt_created'			=> date('Y-m-d H:i:s'),
							     'dt_modified'			=> date('Y-m-d H:i:s'),
							     'in_final_bid'			=> '1',
							     'in_deleted'			=> '0', 
							   );
			$product_line_item = $this->wsdl_model->update_product_bid($product_bid);
		}
		echo 'success';
	}

	function create_product_category()
	{
		$st_category = $_POST['st_category'];
		$wp_category_id = $_POST['wp_category_id'];
		if(!empty($st_category) && !empty($wp_category_id))
		{
			$product_category = array('st_category'	    => $st_category,
									  'wp_category_id'	=> $wp_category_id,  	
								      'dt_created'		=> date('Y-m-d H:i:s'),
							          'dt_modified'		=> date('Y-m-d H:i:s'),
								      'in_deleted '		=> 0
								   );
			$product_category = $this->wsdl_model->insert_product_category($product_category);
		}
		echo 'success';
	}		
	
	function update_product_category()
	{
		$st_category = $_POST['st_category'];
		$wp_category_id = $_POST['wp_category_id'];
		if(!empty($st_category) && !empty($wp_category_id))
		{
			$product_category = array('st_category'	    => $st_category,  	
							          'dt_modified'		=> date('Y-m-d H:i:s')
								   );
			$product_category = $this->wsdl_model->update_prod_category($product_category,$wp_category_id);
		}
		echo 'success';
	}

	function delete_product_category()
	{
		$wp_category_id = $_POST['wp_category_id'];
		if(!empty($wp_category_id))
		{
			$product_category = array('in_deleted'	    => 1,  	
							          'dt_modified'		=> date('Y-m-d H:i:s')
								   );
			$product_category = $this->wsdl_model->delete_prod_category($product_category,$wp_category_id);
		}
		echo 'success';
	}	
	
	 public function checkProfileVerified_view() {
        $this->load->view('wsdl/checkProfileVerified');
    }
	
	function checkProfileVerified($user_id = '', $wsdl_token = '') {
        //$user_id = 50;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {

                $date = array();

               
                    #=============Active Trasport============#       
					$phone='';   
					$zipcode='';          
				    $checkphonezipcode = $this->wsdl_model->get_user_profile($user_id);		
					//echo '<pre>'; print_r($checkphonezipcode);die;			
				    $phone		=	$checkphonezipcode['primary_phone'];
					$zipcode	=	$checkphonezipcode['zipcode'];
              

                if (!empty($zipcode)) { 
                    $data['msg'] = 'All is ok.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Please complete general details to proceed.';
                    $data = array("result" => 2, "err_msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);	
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }	
	
	
	public function delete_transport_story_photo_view()
	{
		$this->load->view('wsdl/delete_transport_story_photo'); 
	}
	
	public function delete_transport_story_photo($user_id='',$wsdl_token='',$photo_id='',$transport_id='') {
	
	
		$user_id 		= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 	= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 	= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$photo_id 		= isset($_POST['photo_id']) ? $_POST['photo_id'] : '';
		
		     if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($transport_id) && $transport_id != '' && isset($photo_id) && $photo_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details);die;

            if (count($user_details) > 0) {

               
			    $file_name	=	$this->orgtrasnportation_model->get_photo_name_by_id($photo_id);
		
				$data['transport_files'] = $this->orgtrasnportation_model->delete_transport_photos($photo_id);
				
				//code to delete files in the rackspace starts
				if(isset($file_name) && $file_name != '')
				{
					$this->load->library('opencloud');
					$this->opencloud->set_container('appcdn');
					$this->opencloud->delete_object($file_name);
				}		   
			   
                $data['msg'] = 'Transportation photos has been deleted successfully.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Photo Id or Transport Id Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }       
    }
	
	
	public function selected_notification_list_view() {
        $this->load->view('wsdl/selected_notification_list');
    }

    function selected_notification_list($user_id = '', $wsdl_token = '') {          
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

				 $push_notification_detail = $this->wsdl_model->get_push_notification($user_id);
                if (isset($push_notification_detail) && !empty($push_notification_detail)) {
                    $data = array();    
                    header('Content-type: application/json');
                    echo json_encode($push_notification_detail);
                } else {
                    $data = array('flgtransportationanimallistupdate'=>'1','flgtransportationdatemodified'=>'1','flgtransportationupdated'=>'1','flglegupdated'=>'1','flgmsgtofeed'=>'1');                      
                               			
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function update_notification_list_view()
	{
		 $this->load->view('wsdl/update_notification_list');
	}
	function update_notification_list($user_id = '', $wsdl_token = '', $flgtransportationanimallistupdate = '', $flgtransportationdatemodified = '', $flgtransportationupdated	=	'', $flglegupdated	=	'',	$flgmsgtofeed	='') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
		$wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $flgtransportationanimallistupdate = isset($_POST['flgtransportationanimallistupdate']) ? $_POST['flgtransportationanimallistupdate'] : '';
        $flgtransportationdatemodified = isset($_POST['flgtransportationdatemodified']) ? $_POST['flgtransportationdatemodified'] : '';
        $flgtransportationupdated = isset($_POST['flgtransportationupdated']) ? $_POST['flgtransportationupdated'] : '';
		$flglegupdated = isset($_POST['flglegupdated']) ? $_POST['flglegupdated'] : '';
		$flgmsgtofeed = isset($_POST['flgmsgtofeed']) ? $_POST['flgmsgtofeed'] : '';
      
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {   
			
			$record = '';
 			$record = $this->wsdl_model->get_push_notification_count($user_id);
			if ($record > 0) { 
			
			 	$array_update = array(    "in_flg_trans_ani" 	 => $flgtransportationanimallistupdate,
										   "in_flg_trans_dt" 	 => $flgtransportationdatemodified,
										   "in_flg_trans_update" => $flgtransportationupdated,
										   "in_flglegupdated" 	 => $flglegupdated,
										   "in_flgmsgtofeed" 	 => $flgmsgtofeed,	
										   "dt_modified" 		 => date("Y-m-d H:i:s")									  
									);
                   
                    $this->wsdl_model->update_push_notification_detail($array_update,$user_id);

                    $data['msg'] = 'You have successfully updated.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data); 
			
			}
			
			else
			{    
			
					$array_update = array("in_flg_trans_ani" 	 => $flgtransportationanimallistupdate,
										   "in_flg_trans_dt" 	 => $flgtransportationdatemodified,
										   "in_flg_trans_update" => $flgtransportationupdated,
										   "in_flglegupdated" 	 => $flglegupdated,
										   "in_flgmsgtofeed" 	 => $flgmsgtofeed,	
										   "in_user_id"			 => $user_id,
										   "dt_created" 		 => date("Y-m-d H:i:s")									  
										  );
                   
                    $this->wsdl_model->insert_push_notification_detail($array_update);

                    $data['msg'] = 'You have successfully updated.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data); 
			
			}
			
			          
                                  
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	function email_confirm($data,$uid)
	{	
		$userid = $uid;
		$verificationCode = $this->generate_random_password(15);
		$details = array("st_email_verification_code" => $verificationCode);
        $this->user_model->update_user($details, $userid);					
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("81");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if (isset($email_details[0]['st_email_body'])) {
			$templete = $email_details[0]['st_email_body'];
			
			$templete = str_replace("##display_name##", $data['firstname'] . " " . $data['lastname'], $templete);
			$templete = str_replace("##current_year##", date('Y'), $templete);
			
			$confirm_email_url = '<a href="'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'">'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'</a>';
			$templete = str_replace("##confirm_email_link##", $confirm_email_url, $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
			$strMail = $templete;
			$to = $data['email'];
			$subject = $email_details[0]['st_email_subject'];
			$message = $strMail;
			$email_sent_status = 0;
			
			$category = $email_details[0]['st_category'];
			
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($userid);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			
			
			
			$email_template_id = $email_details[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{   
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
			}
			
			
		}
		
	}
	
	public function assist_groundleg_view()
	{
		$this->load->view('wsdl/assist_ground_leg');   
	}
	
	function assistance_ground_leg($user_id = '', $transport_id = '', $wsdl_token = '') 
	{
		
		$user_id 			= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 		= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 		= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';	
		
		$stPickupLocation 	= isset($_POST['stPickupLocation']) ? $_POST['stPickupLocation'] : '';
		//$stPickupStreet 	= isset($_POST['stPickupStreet']) ? $_POST['stPickupStreet'] : '';
		$stPickupStreet 	= '';
		$phone 				= isset($_POST['stPhoneNo']) ? $_POST['stPhoneNo'] : '';
		
		$stDropoffLocation 	= isset($_POST['stDropoffLocation']) ? $_POST['stDropoffLocation'] : '';
		$stDropoffStreet 	= '';
		//$stDropoffStreet 	= isset($_POST['stDropoffStreet']) ? $_POST['stDropoffStreet'] : '';
		$phone 				= isset($_POST['stPhoneNo']) ? $_POST['stPhoneNo'] : '';
		
		
		$stNotes 			= isset($_POST['stNotes']) ? nl2br($_POST['stNotes']) : '';
		
		$transport_details = $this->wsdl_model->get_transport_details($transport_id);
		
		$dropzip='';
		$pickzp='';		
		$pickzp = explode(',',$stPickupLocation);
		$dropzip = explode(',',$stDropoffLocation);
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($stPickupLocation) && $stPickupLocation != '' && isset($stDropoffLocation) && $stDropoffLocation != ''   && isset($transport_id) && $transport_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
			
            if (count($user_details) > 0) {
				
				$org_detail	=	$this->wsdl_model->get_org_detail($transport_id);
				if(isset($org_detail) && !empty($org_detail))
					{ 
						 $user_accept_condition=array();
						 $orgtc_details = $this->wsdl_model->get_orgtc_details($org_detail['in_organization_id']);
					 	 if($orgtc_details['in_enable_terms_condition'] == 1)
							{
							    $check_user_accept_tc = $this->wsdl_model->verify_user_accept_condition($user_id,$org_detail['in_organization_id']);
								if(count($check_user_accept_tc)==0)
								{ 
									$user_accept_condition['in_user_id']	=	$user_id;
									$user_accept_condition['in_organization_id']	=	$org_detail['in_organization_id'];
									$user_accept_condition['in_deleted']	=	0;
									$user_accept_condition['dt_created'] =  date('Y-m-d H:i:s');
									$user_accept_condition['dt_modified'] = date('Y-m-d H:i:s');
								
									$this->wsdl_model->entry_user_accept_condition($user_accept_condition);
							    }
							}		 
					}
				
				if(isset($user_details[0]['st_primary_phone']) && $user_details[0]['st_primary_phone']=='' && $phone == '')
					{
						$err_msg = 'Please enter phone number.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;						
					}
					
					if(isset($phone)  && $phone!='')
					{  
						$checkphone  = $this->user_model->checkphoneexists($user_id);
						if($checkphone == false){
							 $profile_info = array('st_primary_phone'=>$phone);
					         $data['user_profile'] = $this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');							
						}						
					}	
			
			//print_r($user_details); die;
			$user_name = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
			$user_email = $user_details[0]['st_email'];							
			
			$legs_cover = array('in_transportation_id'=> $transport_id,
								'in_route_type'	      => 0,
								'in_user_id'    	  => $user_id,
								'st_from_street' 	  => $stPickupStreet,
								'st_from_city'		  => $pickzp[1],
								'st_from_state'		  => $pickzp[2],	
								'st_from_zip'		  => $pickzp[0],
								'st_from_country'	  => $pickzp[3],
								'st_to_street' 		  => $stDropoffStreet,
								'st_to_city'		  => $dropzip[1],
								'st_to_state'		  => $dropzip[2],	
								'st_to_zip'			  => $dropzip[0],
								'st_to_country'		  => $dropzip[3],
								'dt_created'		  => date("Y-m-d H:i:s"),
								'dt_modified'		  => date("Y-m-d H:i:s"),
								'st_info'			  => trim($stNotes)
								);
			$this->db->insert('tbl_legs_cover', $legs_cover);
			$leg_id = $this->db->insert_id();
			$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
			$to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];	
					
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_details = $this->common_model->get_email_containt("99");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			$user_details = $this->common_model->get_user_profile($user_id);
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
		
			
			if (isset($email_details) && !empty($email_details)) 
			{
				$transport_id = $transport_details[0]['in_transportation_id'];
				$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>#DBT".$transport_id."</a>";
				$this->load->library('email');
				
				$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
				$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
							
				$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
				$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
				$user_link_name	.=	"</a>";
							
				$user_display = '';
				$user_display .= 'Name: '.$user_link_name."<br>";
				//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
				$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
				$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
				$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
				if(count($from)>0)
				{
					$user_router_display ='';
					foreach ($from  as $key => $value)
					{
						$user_router_display .=	'Type of Leg: Ground <br>';
						$user_router_display .=	'From: '.$value."<br>";
						$user_router_display .=	'To: '.$to[$key]."<br>";
						$user_router_display .=	'<br>';
					}
						$user_router_display .=	'Comments: ' .trim($stNotes)."<br>";
				}
							
					$templete = $email_details[0]['st_email_body'];
					$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
					$templete = str_replace("##Leg_info##",$user_router_display, $templete);
					$templete = str_replace("##User_info##",$user_display, $templete);
					$templete = str_replace("##user##",$user_link_name, $templete);
					$templete =	str_replace("##transport_number##",$transport_link, $templete);
					$templete =	str_replace("##XXX##","#DBT".$transport_id, $templete);
					$templete =	str_replace("##DONATION##",$donation, $templete);
					$strMail = $templete;
								
					$to = $rou_tc_user[0]['st_email'];
					$subject = $email_details[0]['st_email_subject'];
					$category = $email_details[0]['st_category'];
					$message = $strMail;
					$message_vol = $strMail;
					$to_vol = $user_details[0]['st_email'];
					$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>#DBT".$transport_id."</a>";
					$message = str_replace("##transport_number_link##",$submission_link,$message);
								
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
					$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
					
								
					$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);									
				
			}
		}	               
			   
			$data['msg'] = 'We sent your recommendation to the transport coordinator.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Pickuplocation or Droplocation or Notes  or Transport ID Missing ";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	 
	}
	 
	 
	 public function assist_avaitionleg_view()
	{
		$this->load->view('wsdl/assist_avaition_leg');   
	}
	
	function assistance_avaition_leg($user_id = '', $transport_id = '', $wsdl_token = '') 
	{
		
		$user_id 			= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token 		= isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id 		= isset($_POST['transport_id']) ? $_POST['transport_id'] : '';	
		
		$stPickupLocation 	= isset($_POST['stPickupLocation']) ? $_POST['stPickupLocation'] : '';
		$stDropoffLocation 	= isset($_POST['stDropoffLocation']) ? $_POST['stDropoffLocation'] : '';
		$stNotes 			= isset($_POST['stNotes']) ? nl2br($_POST['stNotes']) : '';
		$phone 				= isset($_POST['stPhoneNo']) ? $_POST['stPhoneNo'] : '';
		
		$transport_details = $this->wsdl_model->get_transport_details($transport_id);
		
		$dropzip='';
		$pickzp='';		
		$pickzp = explode(',',$stPickupLocation);
		$dropzip = explode(',',$stDropoffLocation);
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($stPickupLocation) && $stPickupLocation != '' && isset($stDropoffLocation) && $stDropoffLocation != '' && isset($transport_id) && $transport_id != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
			
            if (count($user_details) > 0) {
				
				$org_detail	=	$this->wsdl_model->get_org_detail($transport_id);
				if(isset($org_detail) && !empty($org_detail))
					{ 
						 $user_accept_condition=array();
						 $orgtc_details = $this->wsdl_model->get_orgtc_details($org_detail['in_organization_id']);
					 	 if($orgtc_details['in_enable_terms_condition'] == 1)
							{
								$check_user_accept_tc = $this->wsdl_model->verify_user_accept_condition($user_id,$org_detail['in_organization_id']);
								if(count($check_user_accept_tc)==0)
								{
									$user_accept_condition['in_user_id']	=	$user_id;
									$user_accept_condition['in_organization_id']	=	$org_detail['in_organization_id'];
									$user_accept_condition['in_deleted']	=	0;
									$user_accept_condition['dt_created'] =  date('Y-m-d H:i:s');
									$user_accept_condition['dt_modified'] = date('Y-m-d H:i:s');
									$this->wsdl_model->entry_user_accept_condition($user_accept_condition);
								}	
							
							}		 
					}
				
				if(isset($user_details[0]['st_primary_phone']) && $user_details[0]['st_primary_phone']=='' && $phone == '')
				{
						$err_msg = 'Please enter phone number.';
						$data = array("result" => 2, "err_msg" => $err_msg);
						header('Content-type: application/json');
						echo json_encode($data); return;						
				}
					
				if(isset($phone)  && $phone!='')
				{  
						$checkphone  = $this->user_model->checkphoneexists($user_id);
						if($checkphone == false){
							 $profile_info = array('st_primary_phone'=>$phone);
					         $data['user_profile'] = $this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');							
						}						
				}	
			
			//print_r($user_details); die;
			$user_name = $user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
			$user_email = $user_details[0]['st_email'];	

			//$fromlocationdetail	=	$this->wsdl_model->get_fromloc_details($stPickupLocation);
			//$tolocationdetail	=	$this->wsdl_model->get_toloc_details($stDropoffLocation);
		
			$pickup_airport_details = $this->orgtrasnportation_model->get_airport_details($stPickupLocation);
			$dropoff_airport_details = $this->orgtrasnportation_model->get_airport_details($stDropoffLocation);
			$loc = $pickup_airport_details['st_latitude'] . "," . $pickup_airport_details['st_longitude'];
			$loc1 = $dropoff_airport_details['st_latitude'] . "," . $dropoff_airport_details['st_longitude'];
			$start = $this->getLatLong($loc);
			$finish = $this->getLatLong($loc1);
				
			$legs_cover = array('in_transportation_id'=> $transport_id,
								'in_route_type'	      => 1,
								'in_user_id'    	  => $user_id,
								'st_from_street' 	  => $stPickupLocation,
								'st_from_city'		  => ($start['city']) ? $start['city'] : $pickup_airport_details['st_city'],
								'st_from_state'		  => ($start['state']) ? $start['state'] : $pickup_airport_details['st_state'],	
								'st_from_zip'		  => $start['postal_code'],
								'st_from_country'	  => ($start['country']) ? strtoupper($this->common_function->shortCountry[$start['country']]) : strtoupper($this->common_function->shortCountry[$pickup_airport_details['st_iso_country']]),
								'st_to_street' 		  => $stDropoffLocation,
								'st_to_city'   		  => ($finish['city']) ? $finish['city'] :$dropoff_airport_details['st_city'],
								'st_to_state'         => ($finish['state']) ? $finish['state'] : $dropoff_airport_details['st_state'],	
								'st_to_zip'           => $finish['postal_code'],
								'st_to_country'       => ($finish['country']) ? strtoupper($this->common_function->shortCountry[$finish['country']]) : strtoupper($this->common_function->shortCountry[$dropoff_airport_details['st_iso_country']]),
								'dt_created'		  => date("Y-m-d H:i:s"),
								'dt_modified'		  => date("Y-m-d H:i:s"),
								'st_info'			  => trim($stNotes)
								);
			$this->db->insert('tbl_legs_cover', $legs_cover);
			$leg_id = $this->db->insert_id();
			$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
			$to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];	
					
		if(isset($leg_id) && $leg_id > 0)
		{
			//Getting email body
			$this->load->library('email');
			$email_details = $this->common_model->get_email_containt('99');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }

			$user_details = $this->common_model->get_user_profile($user_id);
			$rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
		
			
			if (isset($email_details) && !empty($email_details)) 
			{
				$transport_id = $transport_details[0]['in_transportation_id'];
				$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>#DBT".$transport_id."</a>";
				$this->load->library('email');
				//$email_details = $this->common_model->get_email_containt("99");
				$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
				$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
							
				$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
				$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
				$user_link_name	.=	"</a>";
							
				$user_display = '';
				$user_display .= 'Name: '.$user_link_name."<br>";
				//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
				$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
				$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
				$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
				if(count($from)>0)
				{
					$user_router_display ='';
					foreach ($from  as $key => $value)
					{
						$user_router_display .=	'Type of Leg: Aviation <br>';
						$user_router_display .=	'From: '.$value."<br>";
						$user_router_display .=	'To: '.$to[$key]."<br>";
						$user_router_display .=	'<br>';
					}
						$user_router_display .=	'Comments: ' .trim($stNotes)."<br>";
				}
							
					$templete = $email_details[0]['st_email_body'];
					$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
					$templete = str_replace("##Leg_info##",$user_router_display, $templete);
					$templete = str_replace("##User_info##",$user_display, $templete);
					$templete = str_replace("##user##",$user_link_name, $templete);
					$templete =	str_replace("##transport_number##",$transport_link, $templete);
					$templete =	str_replace("##XXX##","#DBT".$transport_id, $templete);
					$templete =	str_replace("##DONATION##",$donation, $templete);
					$strMail = $templete;
								
					$to = $rou_tc_user[0]['st_email'];
					$subject = $email_details[0]['st_email_subject'];
					$category = $email_details[0]['st_category'];
					$message = $strMail;
					$message_vol = $strMail;
					$to_vol = $user_details[0]['st_email'];
					$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>#DBT".$transport_id."</a>";
					$message = str_replace("##transport_number_link##",$submission_link,$message);
								
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
								
					$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
								
					$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);		
							
				
			}
		}	               
			   
			$data['msg'] = 'We sent your recommendation to the transport coordinator.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);   
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Pickuplocation or Droplocation or Notes  or Transport ID Missing ";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	 
	 }
	 
	 public function org_privacypolicy($org_id=false)
	{
		$data=array();
		$data['orgtc_details'] = $this->wsdl_model->get_orgtc_details($org_id);	
		//print_r($data['orgtc_details']['st_terms_condition']); die;	
		$this->load->view('orgtc_view',$data);
		
	}	
	
	
	public function resendcode_view() {
        $this->load->view('wsdl/resendcode');
    }
	
	
	function resendcode($user_id = '', $wsdl_token = '', $phone = '') {       
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $phone = isset($_POST['phone']) ? $_POST['phone'] : '';
       
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($phone) && $phone != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {	

			$code	=	mt_rand(1000,9999);	
			
			$insData = array('in_sms_code' => $code);
			
			
			// send code by mobile start
			
			$phone ='+91'.$phone;			
			$text = "Your 4 digit secret code is ".$code;
			$result = sendsms($phone,$text);
			if($result == 1){ 	
			 $this->db->where('in_user_id', $user_id);
             $record = $this->db->update('tbl_users', $insData);
			 $insData2 = array('in_number_verified' => 1);
			 $this->db->update('tbl_user_profile', $insData2);
			 
			}elseif($result == 'Invalid'){ 	 
			    $err_msg = "Invalid phone number.";
                $data = array("result" => 2, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
			}
			// send code by mobile end
			
			if($record == true){
			$data['msg'] = 'Your code has been sent to your mobile number.';	
            $data = array("result" => 1,"msg"=>$data['msg']);
            header('Content-type: application/json');
            echo json_encode($data);				
			}               
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Code Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	
	public function verifyphone_view() {
        $this->load->view('wsdl/verifyphone');
    }
	
	
	function verifyphone($user_id = '', $wsdl_token = '', $code = '') {       
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $code = isset($_POST['code']) ? $_POST['code'] : '';
       
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($code) && $code != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {
				
			$record =	$this->wsdl_model->checksmscode($user_id,$code);
			
			
			if($record == 1){
				//$data['msg'] = 'Your account has been created successfully.';		
				
			 $this->db->where('in_user_id', $user_id);            
			 $insData2 = array('in_number_verified' => 1);
			 $this->db->update('tbl_user_profile', $insData2);
				
			
            $data = array("result" => 1);
            header('Content-type: application/json');
            echo json_encode($data);				
			}
			else{
				$err_msg = "Invalid Code. Try again.";
                $data = array("result" => 2, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);				
			}
                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Code Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	
	public function logout_view() {
        $this->load->view('wsdl/logout');
    }
	
	public function logout($user_id = '',$wsdl_token = '') {
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
		$wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
			$user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			
			if (count($user_details) > 0) { 
                    $this->logoutuser();
                    $data['msg'] = 'You have been logged out successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device..";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
			
		}
		else{
			
			$err_msg = "UserId or Token Missing.";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
		}	
		
	}
	
	public function logoutuser() {		 
		$this->load->library('session');	 
		$this->session->sess_destroy();
	}
	
	function tcrequestboard()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);
		//echo '<pre>'; print_r($result);die;
		
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);	
		redirect($this->config->item('base_url') . "org_transportation/submitted_routing_request");
	}
	
	function leavefeedback()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);
		//echo '<pre>'; print_r($result);die;
		
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);	
		redirect($this->config->item('base_url') . "feedback/");
	}
	
	
	function charitabletracking()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);	
		
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('user_name', $result['st_display_name']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);	
		redirect($this->config->item('base_url') . "my-transportation-history-subscription/");
	}
	
	
	function inpersonvolunteer()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);	
		
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);	
		redirect($this->config->item('base_url') . "person-volunteer/");
	}
	
	function virtualsupportvolunteer()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);	
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);	
		redirect($this->config->item('base_url') . "virtual-support-volunteer/");
	}

    //Rajashri Mahapure
    public function get_local_ride_profile_view(){
        $this->load->view('wsdl/get_local_ride_profile');
    }

    //Rajashri Mahapure
    //request - user_id=1963&hash_key=a0nog9o5
    public function get_local_ride_profile($user_id = '', $wsdl_token = '')
    {
        $user_id            = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token         = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			//echo '<pre>'; print_r($user_details[0]['st_primary_phone']); die;
            if (count($user_details) > 0) {                
                $arrRider = $this->wsdl_model->get_rides_detail($user_id);
				    $driver_radius             = $this->common_model->get_transport_miles($user_id);
					$driveradius     = (isset($driver_radius) && count($driver_radius)>0)?$driver_radius[0]['distance_to_drive']:'';
                $response = array();
				if(count($arrRider) > 0){
                foreach($arrRider as $key => $value){ 

                   // $contact = intval(preg_replace('/[^\d.]/', '', $value['st_mobile']));
                    if(!empty($value['st_mobile'])){
                        $contact  = $value['st_mobile'];
                    }else{
                        $contact = "";
                    }
                    
                    $weekarr = unserialize($value['st_ride_daytime']);  

                    $i= 0;
                        foreach($weekarr as $key_w => $key_v){
                            $days= array();
                            $fromarr = explode(".", $key_v[1]);

                            $from = $fromarr[0];
                            $toarr = explode(".", $key_v[2]);
                            $to = $toarr[0];
                          
                            //$days[] = implode(",",$key_v[0]);
                            $days = $key_v[0];
                            //$time = $from."-".$to;                           
                            if($key_v[3]==1){
                                $ridecheck = $key_v[3];    
                            }else{
                                $ridecheck ="0";
                            }
                            
                            if(!empty($from) && $from!='' && !empty($to) && $to!=''){
                                $response['selected_time'][$i]['fromTime'] = $from;
                                $response['selected_time'][$i]['toTime'] = $to;
                                $response['selected_time'][$i]['days'] = $days;
                                $response['selected_time'][$i]['flgIsAvailable'] = $ridecheck;
                            }
                            
                           $i++;
                        }                           
                        
                    $response['radius_circle'] = (isset($driveradius) && !empty($driveradius))?$driveradius:$value['in_ride_radius'];
                    $response['flgReceiveTextMessage'] = $value['in_messanger'];
                    //$response['phonenumberForTextMessage'] = $contact;
					$response['phonenumberForTextMessage'] = (isset($user_details[0]['st_primary_phone']) && !empty($user_details[0]['st_primary_phone']))?$user_details[0]['st_primary_phone']:'';
					
					
                
                } 
				echo json_encode($response);  
				}
				else{
					$response['selected_time'] = array();
					$response['radius_circle'] = '';
                    $response['flgReceiveTextMessage'] = '';
                    $response['phonenumberForTextMessage'] = '';
					echo json_encode($response);  
				}			
				
                    
            }else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
                $err_msg = "UserId or Token Missing";
                $data = array("result" => 104, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } 


  public function add_time_local_ride_view(){
        $this->load->view('wsdl/add_timeto_ride');        
    }

    //Rajashri Mahapure
    //request = user_id=1963&hash_key=a0nog9o6&time=11amto12pm&days=Sun,Mon
    public function add_time_local_ride($user_id = '', $wsdl_token = '',$time='', $days=''){      
     
        $user_id            = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token         = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';                      
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           	
            if (count($user_details) > 0) {
                $result['error'] = "";
                $in_id_arr = $this->wsdl_model->get_rider_available($user_id);
               
                if(!empty($in_id_arr)){
                    $in_id = $in_id_arr['in_id'];
                }
                $data = $this->input->post();

                if(is_array($this->input->post('avl_days_ride'))){
                	$avl_daysride = implode(",",$this->input->post('avl_days_ride'));
                }else{
                	$avl_daysride = $this->input->post('avl_days_ride');
                }

               
                $ridecheck = $this->input->post('ridecheck');
                $ridefrom = $this->input->post('ridefrom');
                $rideto = $this->input->post('rideto');

                $ride_daytime = array();
                	/*foreach ($ridefrom as $key => $value) {
                        
                        if(is_array($ridecheck) && (isset($ridecheck[$key]))){
                            $ridecheck[$key] = $ridecheck[$key];
                        }else{
                            $ridecheck[$key] ="0";
                        }
                        if(is_array($avl_days_ride) && (isset($avl_days_ride[$key]))){
                            $avl_days_ride[$key] = $avl_days_ride[$key];
                        }
                        if(is_array($ridefrom) && (isset($ridefrom[$key]))){
                            $ridefrom[$key] = $ridefrom[$key];
                        }

                        if(is_array($rideto) && (isset($rideto[$key]))){
                            $rideto[$key] = $rideto[$key];
                        }

                        $ride_daytime[] = array($avl_days_ride[$key],$ridefrom[$key],$rideto[$key],$ridecheck[$key]);           
                        
                    }*/
                    if(!empty($ridecheck)){
                    	$ridecheck = $ridecheck;
                    }else{
                    	$ridecheck="0";
                    }
					
                    $avl_days_ride =array();
					
                    if(!empty($avl_daysride)){
                    	$avl_days_ride = explode(",", $avl_daysride);
                    	
                    }        

                    
                    $ride_daytime[] = array($avl_days_ride,$ridefrom,$rideto,$ridecheck);
                    
                    if(!empty($in_id_arr)){
                    	$test = unserialize($in_id_arr['st_ride_daytime']);
						$dataarr = array_merge($test,$ride_daytime);
                    }else{
                    	$dataarr = $ride_daytime;
                    }
                   
               
                
                	$ridesarr = array(
                        'in_user_id' => $user_id,
                        'st_ride_daytime' => (serialize($dataarr)),
                        'dt_created'      => date("Y-m-d h:i:s"),                       
                        'in_deleted' =>'0'
                        );
						
						//echo '<pre>'; print_r($ridesarr); die;
                
                    if(!empty($in_id) && $in_id!= ''){ 
                        $ridedata = $this->wsdl_model->update_ride_info($ridesarr,$in_id);
                    }else{
                        $ridedata = $this->wsdl_model->add_ride_info($ridesarr);
                    }
                   
                       
                    $data['msg'] = 'Transport details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                   
                    
            }else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }  
           

        } 
        else {
                $err_msg = "UserId or Token Missing";
                $data = array("result" => 104, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
    }



    public function update_local_ride_notifications_view(){
        $this->load->view('wsdl/update_local_ride_notifications');
    }


    //Rajashri mahapure
    //request:- user_id=1963&hash_key=a0nog9o6&radius=100&flgReceiverNotification=1&phoneNumber=123456789
    public function update_local_ride_notifications(){
        
        $user_id            = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token         = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $time               = isset($_POST['time']) ? $_POST['time'] : '';
        $days               = isset($_POST['days']) ? $_POST['days'] : '';                        
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
           
            if (count($user_details) > 0) {
                $result['error'] = "";
                $in_id_arr = $this->wsdl_model->get_rider_available($user_id);
                
                if(!empty($in_id_arr)){
                    $in_id = $in_id_arr['in_id'];
                }

                $in_messanger = $this->input->post('in_messanger');
                if(isset($in_messanger) && !empty($in_messanger)){
                    $in_messanger = 1;
                }else{
                    $in_messanger = 0;
                }

                $data = $this->input->post();
                $avl_days_ride = $this->input->post('avl_days_ride');
                $ridecheck = $this->input->post('ridecheck');
                $ridefrom = $this->input->post('ridefrom');
                $rideto = $this->input->post('rideto');

               
                $ridesarr = array(
                        'in_user_id' => $this->session->userdata('userid'),                       
                        'in_ride_radius' => $this->input->post('in_ride_radius'),
                        'in_messanger' => $in_messanger,
                        'dt_modified'      => date("Y-m-d h:i:s"),
                        'st_mobile' => $this->input->post('st_mobile'),                       
                        );
                
                    if(!empty($in_id) && $in_id!= ''){
                        $ridedata = $this->wsdl_model->update_ride_info($ridesarr,$in_id);
                    }else{
                        $ridedata = $this->wsdl_model->add_ride_info($ridesarr);
                    }
                    if($ridedata == 1){
                       	$data['msg'] = 'Transport details updated successfully.';
	                    $data = array("result" => 1, "msg" => $data['msg']);
	                    header('Content-type: application/json');
	                    echo json_encode($data);
                    }
              
            }else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }

        }else {
                $err_msg = "UserId or Token Missing";
                $data = array("result" => 104, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }    
          
    } 
	
	public function update_airline_emp_detail_view(){
        $this->load->view('wsdl/update_airline_emp_detail');
    }


	function update_airline_emp_detail($user_id = '', $wsdl_token = '') {       

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$airline_name = isset($_POST['airline_name']) ? $_POST['airline_name'] : '';
		$airline_base = isset($_POST['airline_base']) ? $_POST['airline_base'] : '';
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                
                    $airline_emp = array();
				    $airline_emp = $this->common_model->get_airline_profile($user_id);
					$profile_info['st_airline_emp'] = "Y";
					
					if(count($airline_emp)>0)
					{
						$update_airline_emp = array('st_base_name'=> $this->input->post('airline_base'),
													'st_airline_name'=> $this->input->post('airline_name'),
													'dt_modified' => date('Y-m-d H:i:s'),
													'in_deleted' => '0'
													);	
						$airline_emp = $this->user_model->update_airline_employee($airline_emp[0]['in_id'],$update_airline_emp);
						$this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
					}
					
					else {
						$airline_emp = array( 'in_user_id' => $user_id,
											  'st_base_name' => $this->input->post('airline_base'),
											  'st_airline_name' => $this->input->post('airline_name'),
											  'dt_created' => date('Y-m-d H:i:s'),
											  'dt_modified' => date('Y-m-d H:i:s'),
											  'in_deleted' => '0'
											 );
							$this->db->insert('tbl_user_airline_employee', $airline_emp);
							$this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
							$last_insert_pilot_id = $this->db->insert_id();
					}			
					

                    $data['msg'] = 'Transport details updated successfully';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Airline name or Airline base is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function get_airline_emp_detail_view(){
        $this->load->view('wsdl/get_airline_emp_detail');
    }
	
	public function get_airline_emp_detail($user_id = '', $wsdl_token = '')
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';		
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

				    $data = array();

                    $airline_emp_detail = $this->common_model->get_airline_profile($user_id);

                    if (!empty($airline_emp_detail)) {

                        $data['airline_emp_detail'] = $airline_emp_detail;                        
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}
	
	
	
	public function get_airline_name_list_view(){
        $this->load->view('wsdl/get_airline_name_list');
    }
	
	
	public function get_airline_name_list($user_id = '', $wsdl_token = '')
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';		
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

				    $data = array();

                    $airline	 = $this->common_model->get_airline();

                    if (!empty($airline)) {

                        $data['airline'] = $airline;                        
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}	
	
	
	public function get_airline_base_list_view(){
        $this->load->view('wsdl/get_airline_base_list');
    }
	
	
	
	public function get_airline_base_list($user_id = '', $wsdl_token = '')
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';		
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {

				    $data = array();

                    $airbase	 = $this->common_model->get_base_airport();

                    if (!empty($airbase)) {

                        $data['airbase'] = $airbase;                        
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'Record not found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}
	
	public function get_lost_animal_support_view(){
        $this->load->view('wsdl/get_lost_animal_support');
    }
	
	public function get_lost_animal_support($user_id = '', $wsdl_token = '')
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';		
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) { 

				    $data = array();

                    $get_animal_sup_detail = $this->wsdl_model->get_animal_sup_detail($user_id);

                    if (!empty($get_animal_sup_detail)) {

                        $data['get_animal_sup_detail'] = $get_animal_sup_detail;                        
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
						
						$data['get_animal_sup_detail'] = $get_animal_sup_detail;                        
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}
	
	
	
	
	public function update_lost_animal_support_view(){
        $this->load->view('wsdl/update_lost_animal_support');
    }
	
	function update_lost_animal_support($user_id = '', $wsdl_token = '') {       

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';  
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$caseworker = isset($_POST['caseworker']) ? $_POST['caseworker'] : '';
		$monitor = isset($_POST['monitor']) ? $_POST['monitor'] : '';
		$networker = isset($_POST['networker']) ? $_POST['networker'] : '';
		$admin = isset($_POST['admin']) ? $_POST['admin'] : '';
		$matcher = isset($_POST['matcher']) ? $_POST['matcher'] : '';
		$volunteer = isset($_POST['volunteer']) ? $_POST['volunteer'] : '';
		
		
		
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && ($caseworker != '' || $monitor !='' || $networker !='' || $admin !='' || $matcher !='' || $volunteer !='')) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {                
                    $get_animal_sup_detail = array();
				    $get_animal_sup_detail = $this->user_model->get_animal_sup_detail($user_id);
					
					//echo '<pre>'; print_r($get_animal_sup_detail);die;
					///echo $get_animal_sup_detail->in_id;die;
					if(count($get_animal_sup_detail)>0)
					{
						$update_lost_animal_support = array('in_user_id'=> $user_id,
													'in_caseworker'=> $this->input->post('caseworker'),													
													'in_monitor'=> $this->input->post('monitor'),
													'in_caseworker'=> $this->input->post('caseworker'),
													'in_networker'=> $this->input->post('networker'),
													'in_admin'=> $this->input->post('admin'),
													'in_matcher'=> $this->input->post('matcher'),
													'in_volunteer'=> $this->input->post('volunteer'),
													'dt_modified' => date('Y-m-d H:i:s'),
													'in_deleted' => '0'
													);	
						$get_animal_sup_detail = $this->user_model->update_animal_support($update_lost_animal_support,$get_animal_sup_detail->in_id);
						$profile_info['st_lost_animal_support'] = "Y";
						$this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
						
					}
					
					else {
						$lost_animal_support = array('in_user_id'=> $user_id,
													'in_caseworker'=> $this->input->post('caseworker'),													
													'in_monitor'=> $this->input->post('monitor'),
													'in_caseworker'=> $this->input->post('caseworker'),
													'in_networker'=> $this->input->post('networker'),
													'in_admin'=> $this->input->post('admin'),
													'in_matcher'=> $this->input->post('matcher'),
													'in_volunteer'=> $this->input->post('volunteer'),
													'dt_created' => date('Y-m-d H:i:s'),													
													'in_deleted' => '0'
													);
							$this->user_model->insert_animal_support($lost_animal_support);
							$profile_info['st_lost_animal_support'] = "Y";
							$this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
							$last_insert_pilot_id = $this->db->insert_id();
							
							
					}			
					

                    $data['msg'] = 'Lost animal support details updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                 
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or caseworker or monitor or networker or admin or matcher or volunteer is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }


     public function update_local_ride(){
     	$user_id            = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token         = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $post_array1         = isset($_POST['update_json']) ? $_POST['update_json'] : '';
         
        $post_array =  json_decode($post_array1);      
          
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
           
            if (count($user_details) > 0) {
                $result['error'] = "";
                $in_id_arr = $this->wsdl_model->get_rider_available($user_id);
                
                if(!empty($in_id_arr)){
                    $in_id = $in_id_arr['in_id'];
                }

                $in_messanger = $post_array->flgReceiveTextMessage;
                if(isset($in_messanger) && !empty($in_messanger)){
                    $in_messanger = 1;
                }else{
                    $in_messanger = 0;
                }
                
                foreach($post_array->selected_time as $key => $value){		
	
					$ridecheck[$key] = $value->flgIsAvailable;
					$ridefrom[$key] = $value->fromTime;
					$rideto[$key] = $value->toTime;
					$avl_days_ride[$key] = $value->days;
						
					$ride_daytime[] = array($avl_days_ride[$key],$ridefrom[$key],$rideto[$key],$ridecheck[$key]);
				}

             
                $ridesarr = array(
                        'in_user_id' => $user_id,                       
                        'in_ride_radius' => $post_array->radius_circle,
                        'st_ride_daytime' => (serialize($ride_daytime)),
                        'in_messanger' => $in_messanger,
                        'dt_modified'      => date("Y-m-d h:i:s"),
                        'st_mobile' => $post_array->phonenumberForTextMessage,                       
                        );
                
                    $ridedata = $this->wsdl_model->update_ride_info($ridesarr,$in_id);
                    
                    if($ridedata == 1){
                       	$data['msg'] = 'Transport details updated successfully.';
	                    $data = array("result" => 1, "msg" => $data['msg']);
	                    header('Content-type: application/json');
	                    echo json_encode($data);
                    }
              
            }else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }

        }else {
                $err_msg = "UserId or Token Missing";
                $data = array("result" => 104, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            } 
    }
	
	function animal_type_volunteer() {
        
        $data = array();   
		$animal_type_list = $this->wsdl_model->get_animal_type_list();
		if (isset($animal_type_list) && count($animal_type_list) > 0) {

			$data['animal_type_list'] = $animal_type_list;
			header('Content-type: application/json');
			echo json_encode($data);
		} else {
			$data['msg'] = 'Record does not exist.';
			$data = array("result" => 2, "msg" => $data['msg']);
			header('Content-type: application/json');
			echo json_encode($data);
		}            
        
    }

    //Rajashri - for android test only
     public function testapi(){
    	$this->db->select('st_name, st_email');
    	$query = $this->db->get('android_api');
    	$data = $query->result_array();
		echo json_encode($data);
    }
	
	
	
	public function add_pet_withlogin_view() {
        $this->load->view('wsdl/add_pet_withlogin');
    }
	
	
	
	public function add_pet_withlogin($user_id = '', $wsdl_token = '') {

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';        
		$pet_id = isset($_POST['pet_id']) ? $_POST['pet_id'] : ''; 
		
		$dt_lostfound = isset($_POST['dt_lostfound']) ? $_POST['dt_lostfound'] : ''; 
		$report_type = isset($_POST['report_type']) ? $_POST['report_type'] : '';  
		$location = isset($_POST['location']) ? $_POST['location'] : '';  
		$location_specific = isset($_POST['location_specific']) ? $_POST['location_specific'] : '';       
		
		if(preg_match('/^[0-9]+$/', $location)){
			$zipcode   =  trim($location);
		}
		else{
		$frmloc=explode(', ',$location);
		 $zipcode = trim($frmloc[2]);
		}
		$get_lat_long = $this->common_model->get_lattitude_longitude($zipcode);
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($dt_lostfound) && $dt_lostfound != '' && isset($report_type) && $report_type != '' && isset($location) && $location != '' && isset($location_specific) && $location_specific != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            //echo '<pre>'; print_r($user_details[0]['st_email']); die;

            if (count($user_details) > 0) {	

			// upload pet image			

                $this->load->library('upload');
                //photo1 starts
                if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo1']['name'], ".");
                    $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo1');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();   
                }    
			
			// upload pet image

			

                $data['pet_info'] = array( 'in_user_id' 		=> $user_id,									
											'in_report_type' 	=> $report_type,
											//'st_pet_image' 		=> ($config['file_name'])?$config['file_name']:'',
											'st_location' 		=> $location, 
											'lat'               => $get_lat_long['lat'],
											'lon'               => $get_lat_long['lon'],
											'st_location_state'        => $get_lat_long['state_prefix'],
											'st_location_zipcode'      => $get_lat_long['zip_code'],
											'st_location_specific' 	=> $location_specific,
											'dt_lostfound' 		=> date('Y-m-d H:i:s',strtotime($dt_lostfound)),
											'dt_created' 		=> date('Y-m-d H:i:s')
										);
										
				//echo '<pre>'; print_r($data['pet_info']); die;						
				if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
				$data['pet_info']['st_pet_image'] = ($config['file_name'])?$config['file_name']:'';
				}
				
               if(isset($pet_id) && $pet_id !=''){  
					$data['add_pet_info'] = $this->wsdl_model->update_pet_profile($data['pet_info'],$pet_id);
					$last_id = $pet_id;		
					$pettoken = $this->wsdl_model->generate_pettoken($last_id);
				}
				else{
					
					$data['add_pet_info'] = $this->wsdl_model->add_pet_profile($data['pet_info']);
					$last_id = $this->db->insert_id();
					$pettoken = $this->wsdl_model->generate_pettoken($last_id);
				}
                
				
                $data['msg'] = 'You have successfully added/updated pet.';
                $data = array("result" => 1, "user_id"=>(int)$user_id,"wsdl_token"=>$wsdl_token,"pet_id"=>(int)$last_id, "pet_token"=>$pettoken, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		
		
		else {
            $err_msg = "UserId or Token  or zipcode or reporttype or location or lostfounddate is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function add_pet_withoutlogin_view() {
        $this->load->view('wsdl/add_pet_withoutlogin');
    }
	
	public function add_pet_withoutlogin($dt_lostfound = '', $report_type = '') {               
		
		
		$pet_id = isset($_POST['pet_id']) ? $_POST['pet_id'] : ''; 
		$dt_lostfound = isset($_POST['dt_lostfound']) ? $_POST['dt_lostfound'] : ''; 
		$report_type = isset($_POST['report_type']) ? $_POST['report_type'] : '';  
		$location = isset($_POST['location']) ? $_POST['location'] : '';  
		$location_specific = isset($_POST['location_specific']) ? $_POST['location_specific'] : '';          
		
		if(preg_match('/^[0-9]+$/', $location)){
			$zipcode   =  trim($location);
		}
		else{
			$frmloc=explode(', ',$location);
			$zipcode = trim($frmloc[2]);
		}
		$get_lat_long = $this->common_model->get_lattitude_longitude($zipcode);
		


        if (isset($dt_lostfound) && $dt_lostfound != '' && isset($report_type) && $report_type != '' && isset($location) && $location != '' && isset($location_specific) && $location_specific != '') {
		 
                $this->load->library('upload');
                //photo1 starts
                if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|jpeg|JPEG|png|gif';
                    $config['remove_spaces'] = TRUE;
                    // $config['file_name'] = str_replace(" ", "_", $user_id . '_' . mt_rand() . '_' . $_FILES['profile_pic']['name']);

                    $lastDot = strrpos($_FILES['photo1']['name'], ".");
                    $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo1');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();   
                }    
			
			// upload pet image

			

                $data['pet_info'] = array( 'in_report_type' 			=> $report_type,
											//'st_pet_image' 				=> ($config['file_name'])?$config['file_name']:'',
											'st_location' 				=> $location,   
											'lat'						=> $get_lat_long['lat'],
											'lon'						=> $get_lat_long['lon'],
											'st_location_state'         => $get_lat_long['state_prefix'],
											'st_location_zipcode'       => $get_lat_long['zip_code'],
											'st_location_specific' 		=> $location_specific,
											'dt_lostfound' 				=> date('Y-m-d H:i:s',strtotime($dt_lostfound)),
											'dt_created' 				=> date('Y-m-d H:i:s')
										);
										
										
					//echo '<pre>'; print_r($data['pet_info']); die;

				if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
				$data['pet_info']['st_pet_image'] = ($config['file_name'])?$config['file_name']:'';
				}
				
                if(isset($pet_id) && $pet_id !=''){  

					$data['add_pet_info'] = $this->wsdl_model->update_pet_profile($data['pet_info'],$pet_id);
					$last_id = $pet_id;		
					$pettoken = $this->wsdl_model->generate_pettoken($last_id);
				}
				else{
					$data['add_pet_info'] = $this->wsdl_model->add_pet_profile($data['pet_info']);
					$last_id = $this->db->insert_id();
					$pettoken = $this->wsdl_model->generate_pettoken($last_id);
				}                
				
				
                $data['msg'] = 'You have successfully added/updated pet.';
                $data = array("result" => 1, "pet_id"=>$last_id, "pet_token"=>$pettoken, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);        
		} 
		
		
		else {
            $err_msg = "zipcode or reporttype or location or lostfounddate is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function update_pet_view() {
        $this->load->view('wsdl/update_pet');
    }
	
	public function update_pet($pet_id='',$pet_token='')
	{
		//$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $pet_token = isset($_POST['pet_token']) ? $_POST['pet_token'] : '';        
		
		$pet_id = isset($_POST['pet_id']) ? $_POST['pet_id'] : ''; 
		$pet_type = isset($_POST['pet_type']) ? $_POST['pet_type'] : '';  
		$petname = isset($_POST['petname']) ? $_POST['petname'] : '';  
		$breed = isset($_POST['breed']) ? $_POST['breed'] : ''; 
		$gender = isset($_POST['gender']) ? $_POST['gender'] : ''; 
		$color = isset($_POST['color']) ? $_POST['color'] : ''; 
		$height = isset($_POST['height']) ? $_POST['height'] : ''; 
		$weight = isset($_POST['weight']) ? $_POST['weight'] : '';
		$age = isset($_POST['age']) ? $_POST['age'] : '';
		$coattype = isset($_POST['coattype']) ? $_POST['coattype'] : '';
		$coatlength = isset($_POST['coatlength']) ? $_POST['coatlength'] : '';
		$collarcolor = isset($_POST['collarcolor']) ? $_POST['collarcolor'] : '';
		$identitymark = isset($_POST['identitymark']) ? $_POST['identitymark'] : '';
		$comment = isset($_POST['comment']) ? $_POST['comment'] : '';
		
		
		if (isset($pet_token) && $pet_token != '' && isset($pet_id) && $pet_id != '' && isset($pet_type) && $pet_type != '' && isset($breed) && $breed != '' && isset($gender) && $gender != '' && isset($color) && $color != '' &&  isset($height) && $height != '' && isset($weight) && $weight != '' &&  isset($age) && $age != '' && isset($coattype) && $coattype != '' && isset($coatlength) && $coatlength != '' && isset($collarcolor) && $collarcolor != '' && isset($identitymark) && $identitymark != '' && isset($comment) && $comment != '') {
		$pet_details = $this->wsdl_model->get_pet_details($pet_id, $pet_token);
		
		if (count($pet_details) > 0) {
			
			$data['pet_info'] = array(      			
											'in_pet_type' 		=> $pet_type,
											'st_petname' 		=> $petname,
											'st_breed' 	    	=> $breed,
											'st_gender' 		=> $gender,
											'st_color' 			=> $color,
											'st_height' 		=> $height,
											'st_weight' 		=> $weight,
											'in_age' 			=> $age,
											'st_coat_type' 		=> $coattype,
											'st_coat_length' 	=> $coatlength,
											'st_collar_color'	=> $collarcolor,                    
											'st_identity_mark' 	=> $identitymark,
											'st_comment' 		=> $comment,
											'dt_modified' 		=> date('Y-m-d H:i:s')
										);
				
                $data['add_pet_info'] = $this->wsdl_model->update_pet_profile($data['pet_info'],$pet_id);                
				
				$pettoken = $this->wsdl_model->generate_pettoken($pet_id);                
				
                $data['msg'] = 'You have successfully updated pet.';
                $data = array("result" => 1, "pet_id" =>(int)$pet_id, "pet_token"=>$pettoken, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
			
		}
		else{
				$err_msg = "Invalid PetId or Token";
                $data = array("result" => 104, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);			
		}
			
		
		}
		
		else {
            $err_msg = "PetId or Token  or pettype or petname or breed or gender or color or height or weight or age  or coattype or coatlength or collarcolor or identitymark or comment is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}
	
	
	public function pet_user_link_view() {
        $this->load->view('wsdl/pet_user_link');
    }
	
	public function pet_user_link($user_id='',$wsdl_token='')
	{
		
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$pet_id = isset($_POST['pet_id']) ? $_POST['pet_id'] : ''; 
		$pet_token = isset($_POST['pet_token']) ? $_POST['pet_token'] : ''; 
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($pet_id) && $pet_id != '' && isset($pet_token) && $pet_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {				

                $data['pet_info'] = array( 'in_user_id' 		=> $user_id,
										   'dt_modified' 		=> date('Y-m-d H:i:s')
										);
				
                $data['add_pet_info'] = $this->wsdl_model->update_pet_profile($data['pet_info'],$pet_id);
                				
				$pettoken = $this->wsdl_model->generate_pettoken($pet_id);
				
				$get_pet_info = $this->wsdl_model->get_pet_info($pet_id);
				
				//echo '<pre>'; print_r($get_pet_info); die;
				
				$url='https://api.petfbi.org/dev/reports';
				//$url='https://api.petfbi.org/doobert/reports';
				//$url=str_replace ( ' ', '%20', $url);

				$cSession = curl_init($url); 
				$header = array();				
				$header[] = 'Content-type: application/json';
				$header[] = 'Authorization: doobert';
				//$header[] = 'x-api-key: 5alcZwaorP84XGUyS0wtg3vxGCaP4cVm6URQiwEl';
				/*
				$arrData = array();
				$arrData = array(
							'report_type'		=> $get_pet_info[0]['in_report_type'],
							'species'			=> $get_pet_info[0]['in_pet_type'],
							'gender'			=> $get_pet_info[0]['st_gender'],
							'color1'			=> $get_pet_info[0]['st_color'],
							'height'			=> $get_pet_info[0]['st_height'],
							'weight'			=> $get_pet_info[0]['st_weight'],
							'age'				=> $get_pet_info[0]['in_age'],
							'coat_type'			=> $get_pet_info[0]['st_coat_type'],
							'hair_length'		=> $get_pet_info[0]['st_coat_length'],
							'location'			=> $get_pet_info[0]['st_location'],
							'location_comments'	=> $get_pet_info[0]['st_comment'],
							'file_name'			=> $get_pet_info[0]['st_pet_image']				
							);
							
							
				*/			
				
				$arrData['report'] = array("report_date"			=> $get_pet_info[0]['dt_created'],
											"species"				=> $get_pet_info[0]['in_pet_type'],
											"gender"				=> $get_pet_info[0]['st_gender'],
											"color1"				=> $get_pet_info[0]['st_color'],								
											"height"				=> $get_pet_info[0]['st_height'],
											"weight"				=> $get_pet_info[0]['st_weight'],
											"age"					=> $get_pet_info[0]['in_age'],
											"coat_type"				=> $get_pet_info[0]['st_coat_type'],
											"hair_length"			=> $get_pet_info[0]['st_coat_length'],
											"report_type"			=> $get_pet_info[0]['in_report_type'],
											"contact_optout"		=> false,
											"status"				=> 0,
											"email"					=> $get_pet_info[0]['st_email'],								
											"coppa"					=> true,
											"tos"					=> true,
											"contact_name"			=> $get_pet_info[0]['st_display_name'],
											"contact_phone1_1"		=> $get_pet_info[0]['st_primary_phone'],								
											"location"				=> $get_pet_info[0]['st_location'],
											"location_comments"		=> $get_pet_info[0]['st_comment'],
											//"breed"				    => $get_pet_info[0]['st_breed'],
											"breed1"				=> $get_pet_info[0]['st_breed'],
											//"breed2"				=> 0,
											//"breedlabel1"           => $get_pet_info[0]['st_breed'],
											"contact_phone1"		=> $get_pet_info[0]['st_primary_phone'],
											"animal_name"			=> $get_pet_info[0]['st_petname'],
											"entry_date"			=> $get_pet_info[0]['dt_created'],
											"event_date"			=> $get_pet_info[0]['dt_lostfound'],
											"contact_email"			=> $get_pet_info[0]['st_email'],
											"contact_username"		=> $get_pet_info[0]['st_email'],								
											"geo_latitude"  		=> $get_pet_info[0]['lat'],								
											"geo_longitude" 		=> $get_pet_info[0]['lon'],	
											"location_zipcode"		=> $get_pet_info[0]['zipcode'],
											"location_state"		=> $get_pet_info[0]['state'],									
											"picture_file"			=> $get_pet_info[0]['st_pet_image'],
											"system_id"				=> "3000"
											
								);		
											
							
				$jsonDataEncoded = json_encode($arrData);
				//echo '<pre>'; print_r($jsonDataEncoded); die;
				curl_setopt($cSession, CURLOPT_POSTFIELDS, $jsonDataEncoded);
				//curl_setopt($cSession, CURLOPT_POSTFIELDS, $jsonData);
				curl_setopt($cSession,CURLOPT_RETURNTRANSFER,1); 
				curl_setopt($cSession, CURLOPT_HTTPHEADER, $header);
				curl_setopt($cSession,CURLOPT_HEADER, false);
				curl_setopt($cSession, CURLOPT_SSL_VERIFYHOST, false);
				curl_setopt($cSession, CURLOPT_SSL_VERIFYPEER, false);
				curl_setopt($cSession, CURLINFO_HEADER_OUT, true);
				//step3
				$result=curl_exec($cSession);
				//$info = curl_getinfo($cSession);
				//echo '<pre/>';
				//print_r($info);
				/*
				var_dump($result);
				
				$info = curl_getinfo($cSession);
				echo '<pre/>';
				print_r($info['request_header']);
				
				print_r($info);			
				exit;
				*/
				

				if ($result === false)
				{
					// throw new Exception('Curl error: ' . curl_error($cSession));
					print_r('Curl error: ' . curl_error($cSession));
				}

				//step4
				$result1=json_decode($result);
				
				curl_close($cSession);
				//step5
				//echo $result;die;
				
				//echo '<pre>'; print_r($result1->report_id);die;
				
				
				
				
				
				$data['pet_info'] = array( 'in_report_id' => $result1->report_id);
				
                $data['add_pet_info'] = $this->wsdl_model->update_pet_profile($data['pet_info'],$pet_id);
				
                $data['msg'] = 'Animal profile has been added successfully.';
                $data = array("result" => 1, "user_id"=>(int)$user_id,"wsdl_token"=>$wsdl_token,"pet_id"=>(int)$pet_id, "pet_token"=>$pettoken, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token  or petid or pet token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
			
	}
	
	
	
	public function get_pet_location_view() {
        $this->load->view('wsdl/get_pet_location');
    }
	
	public function get_pet_location() {               
        $zip_text = isset($_POST['zip_text']) ? $_POST['zip_text'] : '';            		
		$location_details = array();	
		$location_details=$this->wsdl_model->get_location($zip_text);				
		$data['location']=$location_details;
		
		//echo '<pre>'; print_r($data['location']);die;
		
		if(empty($location_details)){
		$data['msg'] = 'Record not found.';
		$data = array("result" => 2, "msg" => $data['msg']);
		header('Content-type: application/json');
		echo json_encode($data);
		}
		else{	
		header('Content-type: application/json');
		echo json_encode($data);			
		}           
    }
	
	public function get_pet_dropdown() { 
		
		$data['petcolor']=$this->common_function->petcolor;
		$data['petheight']=$this->common_function->petheight;
		$data['petweight']=$this->common_function->petweight;
		$data['petcoat']  =$this->common_function->petcoat;
		$data['petlength']=$this->common_function->petlength;			
		header('Content-type: application/json');
		echo json_encode($data);		          
    }
	
	
	public function notification_view()
	{	
		$this->load->view('wsdl/notification');
	}
	
	public function notification()
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				//$count_feedback = $this->common_model->get_feedback_count($user_id);
			    
				//$data['count_feedback']=$count_feedback;
				
				$data['pending_invitation_count'] = $this->common_function->pending_invitation_cnt($user_id);
				$data['pending_invitation'] = $this->common_function->pending_invitation_name($user_id);	
                
				
				
				
				$created_date_user = $this->common_model->last_visit_date_front($user_id,'MYNOTIFICATIONS');
				
				
				if(!empty($created_date_user)) {  
					$pending_notifications_front = $this->common_function->pending_notifications_message($user_id,$created_date_user['dt_created']);
					//$pending_notifications_front = $this->wsdl_model->get_my_notification_message($user_id,$created_date_user['dt_created']);
					
				} else { 
					$pending_notifications_front = $this->common_function->pending_notifications_message($user_id);
				//$pending_notifications_front = $this->wsdl_model->get_my_notification_message($user_id);
				}
				
				$data['other_notification_count'] = $pending_notifications_front['count'];
				foreach($pending_notifications_front['notification_msg'] as $value){
					$data['other_notifications'][]= strip_tags($value);
				}
				//$data['other_notifications']=count($pending_notifications_front['notification_msg']);
				
				
				//echo '<pre>'; print_r($data['other_notifications']);die;
				
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	
	public function get_pet_breed_view() {
        $this->load->view('wsdl/get_pet_breed');
    }
	
	public function get_pet_breed() {               
        $pet_type = isset($_POST['pet_type']) ? $_POST['pet_type'] : '';            		
		$breed_details = array();	
		$breed_details=$this->common_model->get_breed_by_pet_id($pet_type);		
		$data['breed_details']=$breed_details;
		//echo '<pre>'; print_r($breed_details);die;
		
		if(empty($breed_details)){
		$data['msg'] = 'Record not found.';
		$data = array("result" => 2, "msg" => $data['msg']);
		header('Content-type: application/json');
		echo json_encode($data);
		}
		else{	
		header('Content-type: application/json');
		echo json_encode($data);			
		}           
    }
	
	
	
	public function portionoftransport_covered_by_airline_view()
	{
		$this->load->view('wsdl/portionoftransport_covered_by_airline');
	}
	
	public function portionoftransport_covered_by_airline($user_id='', $wsdl_token='')
	{
		$user_id =  isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		$pickupselect_date = isset($_POST['pickupselect']) ? $_POST['pickupselect'] : '';
		$origin_comments = isset($_POST['origin_comments']) ? $_POST['origin_comments'] : '';
		$acctcid = isset($_POST['acctcid']) ? $_POST['acctcid'] : '';		
		$arrpickupdate=explode(',',$pickupselect_date);
		//echo '<pre>'; print_r($pickupselect_date); die;
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {			
				$data = array();
				
				
				
				if(isset($arrpickupdate) && count($arrpickupdate)>0)
				{	
					foreach($arrpickupdate as $key=>$value)
					{	
						if(!(empty($value)))					
						{   //echo $value; die;
							$trip_date = array('in_transportation_id' => $transport_id,
														  'in_user_id' => $user_id,
														  'in_deleted' => 0,	
														  'dt_created' => date("Y-m-d H:i:s"),
														  'dt_modified' => date("Y-m-d H:i:s"),
														  'dt_trip_date' => date('Y-m-d',strtotime($value))		
												);

									if(!empty($origin_comments))
									{	
										$trip_date['st_info']   =  $origin_comments;
									}					
									
									$this->db->insert('tbl_airline_transport_leg', $trip_date);
									$user_trip_date[] = date("D M d",strtotime($value));
									$id = $this->db->insert_id();
						}	
					}			
				}
				
			$user_details = $this->common_model->get_user_profile($user_id);
			$rou_tc_user  = $this->common_model->get_user_profile($acctcid);
			
			$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
			
			if (isset($transport_id) && $transport_id != '' && isset($pickupselect_date) && $pickupselect_date !='' && isset($origin_comments) && $origin_comments !='' && isset($acctcid) && $acctcid !='')
			{  
			
					if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
					{
									
									$transport_id = $transport_details[0]['in_transportation_id'];
									$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
									$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
									//$user_name = explode(" ",$transport_details[0]['st_display_name']);
									/*$user_id         = $transport_details[0]['in_user_id'];*/
									$this->load->library('email');
									$email_details = $this->common_model->get_email_containt("116");
									$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
									
									$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
									$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
									
									$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
									$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
									$user_link_name	.=	"</a>";
									
									
									
									$user_display = '';
									$user_display .= 'Name: '.$user_link_name."<br>";
									//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
									$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
									$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
									$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
									
									
									
									
									$pickup_location = '';
									if(isset($transport_details[0]['st_from_city']) && trim($transport_details[0]['st_from_city']) != '')
									{
										$pickup_location .= $transport_details[0]['st_from_city'];
									}
									if(isset($transport_details[0]['st_from_street']) && trim($transport_details[0]['st_from_street']) != '')
									{
										$pickup_location .= ' ('.$transport_details[0]['st_from_street'].') ';
									}
						
									$dropoff_location = '';
						
									if(isset($transport_details[0]['st_to_city']) && trim($transport_details[0]['st_to_city']) != '')
									{
										$dropoff_location .= $transport_details[0]['st_to_city'];
									}
									if(isset($transport_details[0]['st_to_street']) && trim($transport_details[0]['st_to_street']) != '')
									{
										$dropoff_location .= ' ('.$transport_details[0]['st_to_street'].') ';
									}
									
										
									$user_router_display ='';
									$user_router_display .=	'From: '.$pickup_location."<br>";
									$user_router_display .=	'To: '.$dropoff_location."<br>";
									$user_router_display .=	'<br>';
										
									
									
									
									if (isset($email_details[0]['st_email_body'])) 
									{
										$templete = $email_details[0]['st_email_body'];
										$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
										$templete = str_replace("##Leg_info##",$user_router_display, $templete);
										$templete = str_replace("##User_info##",$user_display, $templete);
										$templete = str_replace("##user##",$user_link_name, $templete);
										$templete =	str_replace("##transport_number##",$transport_link, $templete);
										$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
										$templete =	str_replace("##notes##",$origin_comments, $templete);
										$templete =	str_replace("##DONATION##",$donation, $templete);
										
										//$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
										
										$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
										if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
										
										$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
										if(count($user_trip_date)>0)
										{	
											$templete = str_replace("##Trip_Date##",implode(', ',$user_trip_date), $templete);
										} else {
											$templete = str_replace("##Trip_Date##",'', $templete);
										}
										 $strMail = $templete;
										//$to = 'sadique.mohammed@pulsesolutions.net';
										
										$to = $rou_tc_user[0]['st_email'];
										$subject = $email_details[0]['st_email_subject'];
										$category = $email_details[0]['st_category'];
										$message = $strMail;
										$message_vol = $strMail;
										$to_vol = $user_details[0]['st_email'];
										$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>".$orgcode.$transport_id."</a>";
										$message = str_replace("##transport_number_link##",$submission_link,$message);
										
										$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
										
										$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
										
										$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);		
									}
									$data['msg'] = 'We’ve sent your potential trip date and comments to the TC. Once they have a chance to review the options we’ll let you know whether they need your assistance with 

this transport. We’ll notify you once they have a chance to review your suggestions.';
									$data = array("result" => 1, "msg" => $data['msg']);
									header('Content-type: application/json');
									echo json_encode($data);
					}
			}
			else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }				
					
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}	
	
	
	public function portionoftransport_covered_by_assisted_view()
	{
		$this->load->view('wsdl/portionoftransport_covered_by_assisted');		
	}
	
	
	
	public function portionoftransport_covered_by_assisted()
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		//$origin_address = array('96755, Aiea, HI, USA','96743, Kapaau, HI, USA');     // isset($_POST['origin_address']) ? $_POST['origin_address'] : '';
		//$destination_address = array('96743, Kapaau, HI, USA','96777, Pahala, HI, USA'); //isset($_POST['destination_address']) ? $_POST['destination_address'] : '';
		
		$origin_address = isset($_POST['origin_address']) ? $_POST['origin_address'] : '';
		$destination_address = isset($_POST['destination_address']) ? $_POST['destination_address'] : '';
		$origin_comments = isset($_POST['origin_comments']) ? $_POST['origin_comments'] : '';
		$arrorigin_address = explode('/',$origin_address);
		$arrdestination_address = explode('/',$destination_address);
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
			
			$user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
			if (count($user_details) > 0) {			
				$data = array();
			
			    if (isset($transport_id) && $transport_id != '' && isset($origin_address) && $origin_address != '' && isset($destination_address) && $destination_address != '') {
					
					  
				    for($i=0;$i<count($arrorigin_address);$i++)
					{		
							$saddress=explode(', ',$arrorigin_address[$i]);
							$daddress=explode(', ',$arrdestination_address[$i]);
							
							
							
							$zips     = $saddress[0];
							$citys    = $saddress[1];
							$states   = $saddress[2];
							$countrys = $saddress[3];
							
							$zipd     = $daddress[0];
							$cityd    = $daddress[1];
							$stated   = $daddress[2];
							$countryd = $daddress[3];
							
							
							$legs_cover = array('in_transportation_id'=> $transport_id,
									'in_route_type'	      => 0,
									'in_user_id'    	  => $user_id,
									'st_from_street' 	  => $streets,
									'st_from_city'		  => $citys,
									'st_from_state'		  => $states,	
									'st_from_zip'		  => $zips,
									'st_from_country'	  => $countrys,
									'st_to_street' 		  => $streetd,
									'st_to_city'		  => $cityd,
									'st_to_state'		  => $stated,	
									'st_to_zip'			  => $zipd,
									'st_to_country'		  => $countryd,
									'dt_created'		  => date("Y-m-d H:i:s"),
									'dt_modified'		  => date("Y-m-d H:i:s"),
									'st_info'			  => $origin_comments
									);
									
									if(!empty($origin_comments)){	
									$legs_cover['st_info']   =  $origin_comments;
									}				
									$this->db->insert('tbl_legs_cover', $legs_cover);
									$id = $this->db->insert_id();
									$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
								    $to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];			
					}	
					
					$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);
					$user_details = $this->common_model->get_user_profile($user_id);
				    $rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
					
					
					if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
					{
									$orgcode = ($transport_details[0]['st_org_code'] != '')? $transport_details[0]['st_org_code'] : '#DBT';
									$transport_id = $transport_details[0]['in_transportation_id'];
									$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
									//$user_name = explode(" ",$transport_details[0]['st_display_name']);
									/*$user_id         = $transport_details[0]['in_user_id'];*/
									$this->load->library('email');
									$email_details = $this->common_model->get_email_containt("99");
									$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
									
									//$username_link	=	$this->common_function->get_filtered_name($user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']);
									
									//$user_link_name	=	"<a href='".base_url().'user-'.$user_details[0]['in_user_id'].'-'.$username_link."' target='_blank'>";
									
									$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
									$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
									
									$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
									$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
									$user_link_name	.=	"</a>";
									
									
									
									$user_display = '';
									$user_display .= 'Name: '.$user_link_name."<br>";
									//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
									$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
									$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
									$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
									if(count($from)>0)
									{
										$user_router_display ='';
										foreach ($from  as $key => $value)
										{
											$user_router_display .=	'Type of Leg: ground <br>';
											$user_router_display .=	'From: '.$value."<br>";
											$user_router_display .=	'To: '.$to[$key]."<br>";
											$user_router_display .=	'<br>';
										}
										$user_router_display .=	'Comments: ' .$origin_comments."<br>";
									}
									
									
									if (isset($email_details[0]['st_email_body'])) 
									{
										$templete = $email_details[0]['st_email_body'];
										$templete = str_replace("##TC_USER##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
										$templete = str_replace("##Leg_info##",$user_router_display, $templete);
										$templete = str_replace("##User_info##",$user_display, $templete);
										$templete = str_replace("##user##",$user_link_name, $templete);
										$templete =	str_replace("##transport_number##",$transport_link, $templete);
										$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
										$templete =	str_replace("##DONATION##",$donation, $templete);
										
										$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg?'.rand();
										if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg'))
										{
											$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
										} else {
											$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
										}
										$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);

										$strMail = $templete;
										//$to = 'sadique.mohammed@pulsesolutions.net';
										
										$to = $rou_tc_user[0]['st_email'];
										$subject = $email_details[0]['st_email_subject'];
										$category = $email_details[0]['st_category'];
										$message = $strMail;
										$message_vol = $strMail;
										$to_vol = $user_details[0]['st_email'];
										$submission_link = "<a href='".base_url()."user/login_as_tc_volunteer/".$this->common_function->encode_base64($rou_tc_user[0]['in_user_id'])."/".$this->common_function->encode_base64($transport_id)."' target='_blank'>".$orgcode.$transport_id."</a>";
										$message = str_replace("##transport_number_link##",$submission_link,$message);
										
										$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);
										
										$message_vol = str_replace("##transport_number_link##",$transport_link,$message_vol);
										
										$this->common_function->send_mail($this->email, $to_vol, $subject, $message_vol, $this->config->item('admin_email_from'), $cc='sadique.mohammed@pulsesolutions.net', $this->config->item('admin_from_name'),$this->email,$category);		
							
									}
									$data['msg'] = 'We’ve sent your potential leg(s) and comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.';
									$data = array("result" => 1, "msg" => $data['msg']);
									header('Content-type: application/json');
									echo json_encode($data);
					}
					
				}
				else{
					$err_msg = "Invalid Data";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
				}			
				
			}
			else{
				$err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);				
			}
		}
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }	
		
	}
	
	
	public function portionoftransport_covered_by_assisted_non_doobert_user_view()
	{
		$this->load->view('wsdl/portionoftransport_covered_by_assisted_non_doobert_user');		
	}
	
	
	public function portionoftransport_covered_by_assisted_non_doobert_user()
	{
		
		$transport_id = isset($_POST['transport_id']) ? $_POST['transport_id'] : '';
		//$origin_address = array('96755, Aiea, HI, USA','96743, Kapaau, HI, USA');     // isset($_POST['origin_address']) ? $_POST['origin_address'] : '';
		//$destination_address = array('96743, Kapaau, HI, USA','96777, Pahala, HI, USA'); //isset($_POST['destination_address']) ? $_POST['destination_address'] : '';
		$origin_address = isset($_POST['origin_address']) ? $_POST['origin_address'] : '';
		$destination_address = isset($_POST['destination_address']) ? $_POST['destination_address'] : '';
		$origin_comments = isset($_POST['origin_comments']) ? $_POST['origin_comments'] : '';
		$user_name = isset($_POST['user_name']) ? $_POST['user_name'] : '';
		$user_email = isset($_POST['user_email']) ? $_POST['user_email'] : '';
			
		$arrorigin_address = explode('/',$origin_address);
		$arrdestination_address = explode('/',$destination_address);
				$data = array();
			
			    if (isset($transport_id) && $transport_id != '' && isset($origin_address) && $origin_address != '' && isset($destination_address) && $destination_address != '') {
					
					  
				    for($i=0;$i<count($arrorigin_address);$i++)
					{		
							$saddress=explode(', ',$arrorigin_address[$i]);
							$daddress=explode(', ',$arrdestination_address[$i]);				
							
							
							$zips     = $saddress[0];
							$citys    = $saddress[1];
							$states   = $saddress[2];
							$countrys = $saddress[3];
							
							$zipd     = $daddress[0];
							$cityd    = $daddress[1];
							$stated   = $daddress[2];
							$countryd = $daddress[3];
							
							
							$legs_cover = array('in_route_type' => 0,
												'in_transportation_id' => $transport_id,
												 'st_user_name' => $user_name,
															'st_email' => $user_email,
													  'st_from_street' => '',
														'st_from_city' => $citys,
													   'st_from_state' => $states,	
														 'st_from_zip' => $zips,
													 'st_from_country' => $countrys,
														'st_to_street' => '',
														  'st_to_city' => $cityd,
														 'st_to_state' => $stated,	
														   'st_to_zip' => $zipd,
									                   'st_to_country' => $countryd,
														  'dt_created' => date("Y-m-d H:i:s"),
														 'dt_modified' => date("Y-m-d H:i:s"),
											);
									
									if(!empty($origin_comments)){	
									$legs_cover['st_notes']   =  $origin_comments;
									}				
									$this->db->insert('tbl_recommend_routing_leg', $legs_cover);
									$id = $this->db->insert_id();
									array_push($recommend_routing_id,$id);
									$from[] = $legs_cover['st_from_zip'].','.$legs_cover['st_from_city'].','.$legs_cover['st_from_state'];
									$to[]	= $legs_cover['st_to_zip'].','.$legs_cover['st_to_city'].','.$legs_cover['st_to_state'];			
					}	
					
					$transport_details = $this->orgtrasnportation_model->get_transport_details($transport_id);					
				    $rou_tc_user = $this->common_model->get_user_profile($transport_details[0]['accTcid']);
					
					
					if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
					{
							
							$transport_id = $transport_details[0]['in_transportation_id'];
							$orgcode = ($transport_details[0]['st_org_code'] != '')? $transport_details[0]['st_org_code'] : '#DBT';
							$transport_link = "<a href='".base_url()."org-transportation-scheduled/".$transport_id."' target='_blank'>".$orgcode.$transport_id."</a>";
							
							$this->load->library('email');
							$email_details = $this->common_model->get_email_containt("112");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
													
							
							if(count($from)>0)
							{
								$user_router_display ='';
								foreach ($from  as $key => $value)
								{
									$user_router_display .=	'Type of Leg: Ground <br>';
									$user_router_display .=	'From: '.$value."<br>";
									$user_router_display .=	'To: '.$to[$key]."<br>";
									$user_router_display .=	'<br>';
								}
								//$user_router_display .=	'Comments: ' .$origin_comments."<br>";
							}
							
							
							if (isset($email_details[0]['st_email_body'])) 
							{
								$templete = $email_details[0]['st_email_body'];
								$templete = str_replace("##transport_coordinator##",$rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'], $templete);
								$templete = str_replace("##Leg_info##",$user_router_display, $templete);
								$templete = str_replace("##User_info##",$user_display, $templete);
								$templete = str_replace("##username##", $user_name, $templete);
								$templete = str_replace("##useremail##", $user_email, $templete);
								$templete =	str_replace("##user_display_name##",$user_name, $templete);
								$templete =	str_replace("##transport_id##",$transport_link, $templete);
								$templete =	str_replace("##XXX##",$orgcode.$transport_id,$templete);
								$templete = str_replace("##notes##", nl2br($origin_comments), $templete);
								$templete = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($rou_tc_user[0]['st_email']),$templete);		
								$templete = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($rou_tc_user[0]['in_user_id']).'/'.$this->common_function->encode_base64($rou_tc_user[0]['st_email']),$templete);
								$templete =	str_replace("##DONATION##",$donation,$templete);
								$fbtransportshare = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$transport_id.'.jpg';
								$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
								
								$strMail = $templete;
								//$to= 'sadique.mohammed@pulsesolutions.net';
								$to = $rou_tc_user[0]['st_email'];
								$subject = $email_details[0]['st_email_subject'];
								$category = $email_details[0]['st_category'];
								$message = $strMail;
								$message_vol = $strMail;
								$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc='sadique.mohammed@pulsesolutions.net', $this->config->item('admin_from_name'),$this->email,$category);
							}
							$data['msg'] = 'We’ve sent your potential leg(s) and comments to the TC.  Once they have a chance to review the options we’ll let you know whether they need your assistance with this transport.  We’ll notify you once they have a chance to review your suggestions.';
							$data = array("result" => 1, "msg" => $data['msg']);
							header('Content-type: application/json');
							echo json_encode($data);
					}
					
				}
				else{
					$err_msg = "Invalid Data";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
				}
			
	}
	
	
	
	public function search_report_view() {
        $this->load->view('wsdl/search_report');
    }
	
	public function search_report()
	{
		//$location = 'New York, NY, 90001';
		
		
		$location = isset($_POST['location']) ? $_POST['location'] : ''; 
		$distance = isset($_POST['distance']) ? $_POST['distance'] : '200'; 
		$start_date = isset($_POST['start_date']) ? $_POST['start_date'] : ''; 
		$end_date = isset($_POST['end_date']) ? $_POST['end_date'] : '';
		$report_type = isset($_POST['report_type']) ? $_POST['report_type'] : '';
		$species = isset($_POST['species']) ? $_POST['species'] : '';
		
		
		if($species == '1'){ 
		
			$species=array(false,true,false,false);
		}
		elseif($species == '2'){
			
			$species=array(false,false,true,false);
		}
		elseif($species == '3'){
			$species=array(false,false,false,true);
		}
		elseif($species == '2,3' || $species == '3,2'){
			
			$species=array(false,false,true,true);
		}
		elseif($species == '1,2,3'  || $species == '3,2,1' || $species == '3,1,2' || $species == '2,3,1' || $species == '2,1,3'){ 
			$species=array(false,true,true,true);
		}
		elseif($species == '1,2' || $species == '2,1'){
			
			$species=array(false,true,true,false);
		}
		elseif($species == '1,3' || $species == '3,1'){
			
			$species=array(false,true,false,true);
		}
		
		$species = json_encode($species);
		
		if(preg_match('/^[0-9]+$/', $location)){
			$zipcode   =  trim($location);
		}
		else{
		$frmloc=explode(', ',$location);
		 $zipcode = trim($frmloc[2]);
		}
		
		//$get_lat_long = $this->common_model->get_lattitude_longitude($zipcode);
		
		//$get_lat_long['lat'];
		//$get_lat_long['lon'];	    
		
		//$strreport_type = implode(',',$report_type);
		//$strspecies = implode(',',$species); 		
		$url='https://api.petfbi.org/dev/reports?start_date='.$start_date.'&end_date='.$end_date.'&distance='.$distance.'&zipcode='.$zipcode.'&report_type='.$report_type.'&species='.$species;
		//$url='https://api.petfbi.org/doobert/reports?start_date='.$start_date.'&end_date='.$end_date.'&distance='.$distance.'&zipcode='.$zipcode.'&report_type='.$report_type.'&species='.$species;
		
		
		$url=str_replace ( ' ', '%20', $url);

		$cSession = curl_init($url); 
		$header = array();
		//$header[] = 'Content-length: 0';
		$header[] = 'Content-type: application/json';
		$header[] = 'Authorization: doobert';
		//$header[] = 'x-api-key: 5alcZwaorP84XGUyS0wtg3vxGCaP4cVm6URQiwEl';	
		
		curl_setopt($cSession,CURLOPT_RETURNTRANSFER,1); 
		curl_setopt($cSession, CURLOPT_HTTPHEADER, $header);
		curl_setopt($cSession,CURLOPT_HEADER, false);
		curl_setopt($crl, CURLOPT_SSL_VERIFYHOST, false);
		curl_setopt($crl, CURLOPT_SSL_VERIFYPEER, false);
		//step3
		echo $result=curl_exec($cSession);	die;
		//echo '<pre>'; print_r($result);die;
		if ($result === false)
		{
			// throw new Exception('Curl error: ' . curl_error($crl));
			//print_r('Curl error: ' . curl_error($cSession));
			
			$data['msg'] = 'Record not found.';
            $data = array("result" => 2, "msg" => $data['msg']);
            header('Content-type: application/json');
            echo json_encode($data);
		}
		//$result1=json_decode($result);
		//step4
		curl_close($cSession);	
	}
	
	
	public function myreports_view()
	{
		$this->load->view('wsdl/myreports');
	}
	
	public function myreports()
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$data['myreports']	=	$this->wsdl_model->get_myreports($user_id); 
				//echo '<pre>'; print_r($myreports);die;
				
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	public function pet_delete_view()
	{
		$this->load->view('wsdl/pet_delete');
	}
	
	public function pet_delete()
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$pet_id = isset($_POST['pet_id']) ? $_POST['pet_id'] : '';	
		$pet_token = isset($_POST['pet_token']) ? $_POST['pet_token'] : '';	
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($pet_id) && $pet_id != '' && isset($pet_token) && $pet_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$data['myreports']	=	$this->wsdl_model->delete_pet($pet_id,$pet_token); 				
                $msg = "Pet deleted successfully.";
                $data = array("result" => 1, "msg" => $msg);
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or Pet Id or Pet token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	
	public function mytransport_trip_count_view()
	{
		
		$this->load->view('wsdl/mytransport_trip_count');		
		
	}
	
	public function mytransport_trip_count()
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {				
				$data = array();				
				//if ((isset($user_details['0']['st_driver']) && $user_details['0']['st_driver'] == 'Y') || isset($user_details['0']['st_pilot']) && $user_details['0']['st_pilot'] == 'Y') {
                    #=============Active Trasport============#
                    $mytransport_rides_count = $this->wsdl_model->get_transport_list_all_data("1",$user_id); 
					
					//$nearby_transport_rides = $this->wsdl_model->get_transport_nearby($user_id);  
                    //$nearby_transport_rides = count($nearby_transport_rides);
					$nearby_transport_rides = $this->wsdl_model->get_transport_nearby_open_leg_cnt($user_id);
					$list_trips_taking_count = $this->wsdl_model->get_total_trip($user_id); 
                //}			
           
                $data = array("result" => 1, "msg"=>'Success','mytransport_rides_count'=>(string)$mytransport_rides_count,'nearby_transport_rides_count'=>(string)$nearby_transport_rides,'list_trips_taking_count'=>(string)$list_trips_taking_count);
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "Invalid UserId or Token";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	public function transporter_profile_view()
	{
		
		$this->load->view('wsdl/transporter_profile');		
		
	}
	
	
	public function transporter_profile()
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);         
			
			
            if (count($user_details) > 0) {				
				$data = array();				
				if ((isset($user_details['0']['st_driver']) && $user_details['0']['st_driver'] == 'Y')) {
                   $driver=1;                   
                }
				else{ $driver=0;  }
				if ((isset($user_details['0']['st_pilot']) && $user_details['0']['st_pilot'] == 'Y')) {
                   $pilot=1;                   
                }
				else{ $pilot=0;  }
				if ((isset($user_details['0']['st_photographer']) && $user_details['0']['st_photographer'] == 'Y')) {
                   $photographer=1;                   
                }
				else{ $photographer=0;  }
                $data = array("result" => 1, "msg"=>'Success','flgIsDriver'=>$driver,'flgIsPilot'=>$pilot,'flgIsPhotographer'=>$photographer);
                header('Content-type: application/json');
                echo json_encode($data);			
			                
            } else {
                $err_msg = "Invalid UserId or Token";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	
	public function update_profile_view()
	{		
		$this->load->view('wsdl/update_profile');				
	}
	
	
	function update_profile($user_id = '', $wsdl_token = '', $pphone = '', $first_name = '',$last_name = '',$email_address = '',$in_photography_profile = '',$phone_no='',$route_type='',$vehicle_id='',$user_vehicle_type='', $user_vehicle_color='',$user_vehicle_license_plate='', $airline_name='', $airline_base='') {        	

        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
		$wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
       
		$first_name = isset($_POST['first_name']) ? $_POST['first_name'] : '';
        $last_name = isset($_POST['last_name']) ? $_POST['last_name'] : '';        
        $email_address = isset($_POST['email_address']) ? $_POST['email_address'] : '';
		$phone_no = isset($_POST['phone_no']) ? $_POST['phone_no'] : '';
        $in_photography_profile = isset($_POST['in_photography_profile']) ? $_POST['in_photography_profile'] : '0';
		
		$route_type = isset($_POST['route_type']) ? $_POST['route_type'] : '0'; //0=>Road 1=>Aviation 3=>airline transport
		
		$vehicle_id = isset($_POST['vehicle_id']) ? $_POST['vehicle_id'] : '';
		$vehicle_type = isset($_POST['vehicle_type']) ? $_POST['vehicle_type'] : '';	
		$vehicle_color = isset($_POST['vehicle_color']) ? $_POST['vehicle_color'] : '';
        $vehicle_license_plate = isset($_POST['vehicle_license_plate']) ? $_POST['vehicle_license_plate'] : '';
		
		$plane_id = isset($_POST['plane_id']) ? $_POST['plane_id'] : '';
		$plane_type = isset($_POST['plane_type']) ? $_POST['plane_type'] : '';	
		$plane_color = isset($_POST['plane_color']) ? $_POST['plane_color'] : '';
        $plane_number = isset($_POST['plane_number']) ? $_POST['plane_number'] : '';
		
		
		
		$user_airline_id = isset($_POST['user_airline_id']) ? $_POST['user_airline_id'] : '';
        $airline_name = $this->input->post('airline_name')?$this->input->post('airline_name'):'';
		$airline_base = $this->input->post('airline_base')?$this->input->post('airline_base'):'';
           
		
               
       
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) { 
			
				if($first_name !='' && $last_name !='' && $email_address !='' && $phone_no !='' ){ 
				
				
								if($user_details[0]['st_primary_phone'] != $phone_no)
								{
									$verified = 0;
								} else
								{
									if($user_details[0]['in_number_verified'] == 1)
									{
										$verified = 1;
									}else
									{
										$verified = 0;
									}
								}
										
										$user_info 		= array("st_display_name" => $first_name,
																"st_last_name" => $last_name,
																"st_email"    =>   $email_address,
																"dt_modified" => date('Y-m-d H:i:s'),
													);
										
										$profile_info 	= array("st_primary_phone" => $phone_no,"dt_modified" => date('Y-m-d H:i:s'),"in_number_verified" => $verified);
										$data['user_profile'] = $this->user_model->update_user_info($profile_info, $user_id, 'tbl_user_profile');
										$data['user_info'] = $this->user_model->update_user_info($user_info, $user_id, 'tbl_users');
										
									//0=>Road 1=>Aviation 3=>airline transport
									
									if( $in_photography_profile != 1){
										if($route_type==0)
										{  
											
												if(isset($vehicle_type) &&  $vehicle_type != '' && isset($vehicle_id) &&  $vehicle_id != '' ){
													$arrVehicle	 = 	  array('st_vehicle_type'			=> $vehicle_type,
																			'st_vehicle_color'			=> $vehicle_color,
																			'st_vehicle_license_plate'	=> $vehicle_license_plate,										
																			'dt_modified'				=> date('Y-m-d H:i:s'),
																			);	
													if($vehicle_id!='')
													{															
														$this->db->where('in_vehicle_id',$vehicle_id);
														$this->db->update('tbl_user_vehicle', $arrVehicle);
													}
													
												}
												else{

														$err_msg = "Vehicle Id or Vehicle Type Missing.";
														$data = array("result" => 104, "err_msg" => $err_msg);
														header('Content-type: application/json');
														echo json_encode($data);
														return;
												  }
										
										} 
										else if($route_type==1)
										{
												
												if(isset($plane_type) &&  $plane_type != '' && isset($plane_id) &&  $plane_id != '' ){
												
													$planeVehicle	 = 	  array('st_plane_type'			=> $plane_type,
																			'st_plane_color'			=> $plane_color,
																			'st_plane_number'			=> $plane_number,										
																			'dt_modified'				=> date('Y-m-d H:i:s'),
																			);	
													if($plane_id!='')
													{															
														$this->db->where('in_pilot_id',$plane_id);
														$this->db->update('tbl_user_pilot', $planeVehicle);
													}	
												}
												else{

														$err_msg = "Plane Id or Plane Type Missing.";
														$data = array("result" => 104, "err_msg" => $err_msg);
														header('Content-type: application/json');
														echo json_encode($data);
														return;
												  }
												
										
										} 
										else if($route_type==3)
										{
												if(isset($user_airline_id) &&  $user_airline_id != '' && isset($airline_base) &&  $airline_base != '' && isset($airline_name) &&  $airline_name != '' ){
														$airline_emp	 = 	  array('st_base_name'				=> $airline_base,
																					'st_airline_name'			=> $airline_name,										
																					'dt_modified'				=> date('Y-m-d H:i:s'),
																					);	
														if($user_airline_id!='')
														{															
															$this->db->where('in_id',$user_airline_id);
															$this->db->update('tbl_user_airline_employee',$airline_emp);
														}
												}
												else{

														$err_msg = "User Airline Id or Airline base or Airline Name Missing.";
														$data = array("result" => 104, "err_msg" => $err_msg);
														header('Content-type: application/json');
														echo json_encode($data);
														return;
												  }
												
										
										}
									}
										$data['msg'] = 'Changes updated successfully.';
										$data = array("result" => 1, "msg" => $data['msg']);
										header('Content-type: application/json');
										echo json_encode($data);
				}
					else{
						$err_msg = "First Name or Last Name or Email Or Phone Missing.";
					$data = array("result" => 104, "err_msg" => $err_msg);
					header('Content-type: application/json');
					echo json_encode($data);
					}			
            } 
			
			
			
			
			
			
			
			else {
                $err_msg = "Invalid UserId or Token";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	
	public function google_signin() {
        $google_id =   $_GET['id'];
        if (isset($google_id) && $google_id != '') {
            $googleuser_data = $this->wsdl_model->get_user_data_by_google_id($google_id);
            if (isset($googleuser_data) && !empty($googleuser_data)) {

                $data = array("result" => 1, "user_id" => (int)$googleuser_data['in_user_id']);
                header('Content-type: application/json');
                echo json_encode($data);
            } else {
				
				/*
                $user = "";
                $this->load->library('facebook');
                $userId = $this->facebook->getUser();
                if ($userId) {
                    try {
                        $user = $this->facebook->api('/me');
                    } catch (FacebookApiException $e) {
                        $user = "";
                    }
                } else {
                    $this->facebook->destroySession();
                }
				
				*/
                //echo '<pre/>';print_r($user);die;

                $browser_details = array();
                $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
                $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
                $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];
                $memberid = '';
                $arrmember = array('st_display_name' => $fbarr['first_name'],
                    'st_last_name' => $fbarr['last_name'],
                    'st_email' => $fbarr['email'],
                    'st_google_uid' => $google_id,
                    'dt_created' => date("Y-m-d h:i:s"),
                    'in_newsletter' => "N",
                    "in_public" => "1",
                    "in_status" => "1",
                    'in_deleted' => '0',
                    "st_browser_info" => @serialize($browser_details),
                    'st_fb_first_name' => $fbarr['first_name'],
                    'st_fb_last_name' => $fbarr['last_name']
                );


                if ($this->db->insert('tbl_users', $arrmember)) {
                    $memberid = $this->db->insert_id();
                    $arrData = array("in_user_id" => $memberid
                    );
                    $this->db->insert('tbl_user_profile', $arrData);

                    $data = array("result" => 1, "user_id" => $memberid);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            }
        }
    }
	
	
	public function google_signup_view() {
        $this->load->view('wsdl/google_signup');
    }
	
	
	public function google_signup($f_name = '', $l_name = '', $email_id = '', $google_id = '', $in_volunteer_type = '', $zipcode = '') {

        /* $_POST['f_name'] = 'fname';
          $_POST['l_name'] = 'lname';
          $_POST['email_id'] = 'testing@gmail.com';
          $_POST['pswd'] = '123456';
          $_POST['confirm_pswd'] = '123456'; */

        $f_name = isset($_POST['f_name']) ? $_POST['f_name'] : '';
        $l_name = isset($_POST['l_name']) ? $_POST['l_name'] : '';
        $email = isset($_POST['email_id']) ? $_POST['email_id'] : '';
        $google_id = isset($_POST['google_id']) ? $_POST['google_id'] : ''; 
        $in_volunteer_type = isset($_POST['in_volunteer_type']) ? $_POST['in_volunteer_type'] : '';
        $zipcode = isset($_POST['zipcode']) ? strtoupper($_POST['zipcode']) : '';
		$organization_name = isset($_POST['organization_name']) ? $_POST['organization_name'] : '';
        
		$flgRescueRelayTransport = isset($_POST['flgRescueRelayTransport']) ? $_POST['flgRescueRelayTransport'] : '';
		$available_days = isset($_POST['available_days']) ? $_POST['available_days'] : '';
		$rescue_relay_in_ride_radius = isset($_POST['rescue_relay_in_ride_radius']) ? $_POST['rescue_relay_in_ride_radius'] : '';
		$rescue_zipcode = isset($_POST['rescue_zipcode']) ? $_POST['rescue_zipcode'] : '';
		$flgLocalRideTransport = isset($_POST['flgLocalRideTransport']) ? $_POST['flgLocalRideTransport'] : '';
		$local_ride_radius = isset($_POST['local_ride_radius']) ? $_POST['local_ride_radius'] : '';
		$local_ride_mobile_number = isset($_POST['local_ride_mobile_number']) ? $_POST['local_ride_mobile_number'] : '';
		$flgFosterHome = isset($_POST['flgFosterHome']) ? $_POST['flgFosterHome'] : '';
		$prefer_animal = isset($_POST['prefer_animal']) ? $_POST['prefer_animal'] : '';
		$timeframe = isset($_POST['timeframe']) ? $_POST['timeframe'] : '';
		
		$driver = "";
        $pilot = "";


        $user_details = array();

        $user_details['firstname'] = isset($_POST['f_name']) ? $this->common_function->custom_htmlentities($_POST['f_name']) : '';
        $user_details['lastname'] = isset($_POST['l_name']) ? $this->common_function->custom_htmlentities($_POST['l_name']) : '';
        $user_details['email'] = isset($_POST['email_id']) ? $this->common_function->custom_htmlentities($_POST['email_id']) : '';
        $user_details['google_id'] = isset($_POST['google_id']) ? $this->common_function->custom_htmlentities($_POST['google_id']) : '';     
		$user_details['in_volunteer_type'] = isset($_POST['in_volunteer_type']) ? $this->common_function->custom_htmlentities($_POST['in_volunteer_type']) : '';      
		$user_details['zipcode'] = isset($_POST['zipcode']) ? strtoupper($_POST['zipcode']) : '';
		$user_details['organization_name'] = isset($_POST['organization_name']) ? $this->common_function->custom_htmlentities($_POST['organization_name']) : '';


        $this->form_validation->set_rules('f_name', 'First Name', 'trim|required');
        $this->form_validation->set_rules('l_name', 'Last Name', 'trim|required');
        $this->form_validation->set_rules('email_id', 'Email', 'trim|required|valid_email');
        $this->form_validation->set_rules('google_id', 'Google Id', 'trim|required');
        $this->form_validation->set_rules('zipcode', 'Zip Code', 'trim|required');
        $this->form_validation->set_rules('in_volunteer_type', 'Volunteer Type', 'trim');
		 

        $data = array();
        $Err_Msg = '';
        if (isset($user_details['email']) && $user_details['email'] != '') {
            $counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $user_details['email'], "in_deleted" => 0)); 
            if ($counts > 0) {
                $Err_Msg = "Email address already exists.";
            }
        }
        if ($this->form_validation->run() == FALSE || $Err_Msg != '') {
			$this->form_validation->set_error_delimiters('', '');
            $data['err_msg'] = validation_errors() . $Err_Msg;
            //echo "<pre>";print_r($data);die;
            $data = array("result" => 2, "err_msg" => $data['err_msg']);
            header('Content-type: application/json');
            echo json_encode($data);
        } else {
            $browser_details = array();
            $arrVehicle = array();
            $arrPilot = array();
            $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
            $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
            $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];


            $data_array = array("st_display_name" => $user_details['firstname'],
                "st_last_name" => $user_details['lastname'],
                "st_email" => $user_details['email'],
				"st_referred_by" => $user_details['organization_name'],
				"st_google_uid" => $user_details['google_id'],	
                "dt_created" => date("Y-m-d h:i:s"),
                "dt_modified" => date("Y-m-d h:i:s"),
                "in_public" => "1",
                "in_status" => "1",
                "st_browser_info" => @serialize($browser_details)
            );

            $inserted_id = $this->user_model->insert_user($data_array);

			
			if($flgLocalRideTransport == 1)
					{  
						$user_profile_info["in_status"] = "1";
					    
							$mobile = $this->input->post('local_ride_mobile_number');
							$in_messanger = 1;
							$local_ride_radius =$this->input->post('local_ride_radius');
						
						
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							
							
							$arrRide = array(   'in_user_id' => $inserted_id,
												'in_ride_radius' => ($local_ride_radius)?$local_ride_radius : 50,
												'in_messanger' => ($in_messanger)?$in_messanger:0,
												'st_mobile' => ($mobile)?$mobile:'',
												'dt_created' => date('Y-m-d H:i:s'),
												'dt_modified' => date('Y-m-d H:i:s'),
												'in_deleted' => 0
										);

							//echo '<pre>'; print_r($arrRide);die;
							$this->db->insert('tbl_user_rides', $arrRide);
							//echo $last_insert_ride_id = $this->db->insert_id();die;
					}
					
					if($this->input->post('flgFosterHome')==1)
					{
						  $animal_type = $this->input->post('prefer_animal');
						  $user_profile_info['in_complete_profile']= '0';	
						  $duration_serve = $this->input->post('timeframe');
						  $insert_id = $this->user_model->add_foster_home_details($animal_type,$duration_serve,$inserted_id,'tbl_foster_user_detail');
						  $user_profile_info['st_foster_home'] = "Y";
						  $profile_setting_arr['st_foster']	 = 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}';
					}
					
					
					
					if($this->input->post('flgRescueRelayTransport')== 1)
						{
							$user_profile_info['st_driver'] = "Y";	
                            $user_profile_info['in_complete_profile']= '0';
							$arrVehicle = array('in_user_id' => $inserted_id,
										'st_driver_availability' => serialize($this->input->post('available_days')),
										'st_zip_vehicle' => $zip_code,
										'in_distance_to_drive' => $this->input->post('rescue_relay_in_ride_radius'),
										'dt_created' => date('Y-m-d H:i:s'),
										'dt_modified' => date('Y-m-d H:i:s'),
										'st_vehicle_type' => '4-Door Car',
										'in_status' => '1',
										'zip_lat'  => $lat,
										'zip_lon'	=> $lon,
										'in_deleted' => '0'
										);
									
							$this->db->insert('tbl_user_vehicle', $arrVehicle);
							$last_insert_driver_id = $this->db->insert_id();
						}	
						
			$token = $this->wsdl_model->generate_token($inserted_id);
			$code=mt_rand(1000,9999);
			//$phoneno ='+91'.$phoneno;			
			//$text = "Your 4 digit secret code is ".$code;
			//$result = sendsms($phoneno,$text);
			
			
			$insData = array('in_sms_code' => $code);
			$this->db->where('in_user_id', $inserted_id);
            $record = $this->db->update('tbl_users', $insData);

            if ($in_volunteer_type == '1') {
                $driver = 'Y';
                $pilot = 'N';

                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);
            }
            if ($in_volunteer_type == '2') {
                $pilot = 'Y';
                $driver = 'N';
                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }
            if ($in_volunteer_type == '3') {
                $driver = 'Y';
                $pilot = 'Y';
                $arrVehicle = array('in_user_id' => $inserted_id,
                    'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_zip_vehicle' => $zipcode,
                    'in_distance_to_drive' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_vehicle_type' => 'Pickup Truck',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_vehicle', $arrVehicle);

                $arrPilot = array('in_user_id' => $inserted_id,
                    'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
                    'st_pilot_zip' => $zipcode,
                    'in_distance_to_pilot' => '100',
                    'dt_created' => date('Y-m-d H:i:s'),
					'dt_modified' => date('Y-m-d H:i:s'),
					'st_plane_type' => 'Single Engine',
                    'in_status' => '1',
                    'in_deleted' => '0'
                );
                $this->db->insert('tbl_user_pilot', $arrPilot);
            }

			if(!empty($zipcode)){
				$address_details	= $this->common_model->getaddress($zipcode);		
				$get_lat_long       = $this->common_model->get_lattitude_longitude(trim($zipcode));
					//print_r($get_lat_long);
					//exit;
                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        //$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
                       // $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
                    } else 
					{
						$lat = '0.00';
						$lon = '0.00';
					}
					$this->wsdl_model->update_vehicle_zip_code($inserted_id, $zipcode, $lat, $lon);
					$this->wsdl_model->update_plane_zip_code($inserted_id, $zipcode,$lat, $lon);		
				}
				
            $this->user_model->insert_user_profile(array("in_user_id" => $inserted_id, "st_zip" => $zipcode,"st_city" => isset($address_details['city']) ? $address_details['city'] : '',"st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',"st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '', "st_driver" => $driver, "st_pilot" => $pilot, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s")));
			$this->email_confirm($user_details,$inserted_id);	
            $this->login_details($user_details);
			$get_userdts = $this->wsdl_model->get_userdts($inserted_id);					
			$country = $this->common_model->get_country(trim($get_userdts['st_zip']));
					
			if($country['st_country']== 'IN'){ $indiaflg =1;$canadaflg=0;$usflg=0; }
			if($country['st_country']== 'CA'){ $indiaflg =0;$canadaflg=1;$usflg=0; }
			if($country['st_country']== 'US'){ $indiaflg =0;$canadaflg=0;$usflg=1; }

            //End set coockie
            $data['msg'] = 'Your account has been created successfully.';
			$profile_image = $this->config->item('upload_url') . "profile/250x250/no_photo_icon.png";
            $data = array("result" => 1,"profile_image" => $profile_image,"f_name"=>$user_details['firstname'],"msg" => $data['msg'],"is_india"=>$indiaflg,"is_canada"=>$canadaflg,"is_US"=>$usflg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    }
	
	function fosterhomeprofile()
	{
		$wsdl_token = $this->uri->segment('3');
		$result = $this->common_model->get_user_details($wsdl_token);	
		$this->session->set_userdata('userid', $result['in_user_id']);
		$this->session->set_userdata('wsdltoken', $wsdl_token);
		redirect($this->config->item('base_url') . "foster-home");
	}
	
	
	public function get_ride_nick_name_view() {
        $this->load->view('wsdl/get_ride_nick_names');
    }
	
	
	public function get_ride_nick_name()
	{
		$user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && $org_id !='') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$rides_data  	= $this->wsdl_model->get_rides_by_org_id($org_id);
				if (isset($rides_data) && !empty($rides_data)) {
                        $data = array("result" => 1,"rides_data" => $rides_data);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Record Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }		
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or org Id is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
	}
	
	
	public function get_org_animals_view()
	{
		$this->load->view('wsdl/get_org_animals');
	}
	
	public function get_org_animals($user_id='',$wsdl_token='',$org_id='')
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$org_id 	= isset($_POST['org_id']) ? $_POST['org_id'] : '';
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && $org_id !='') {
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$animal_list  	= $this->wsdl_model->get_all_animals_by_org($org_id);
				if (isset($animal_list) && !empty($animal_list)) {
                        $data = array("result" => 1,"animal_list" => $animal_list);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Record Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or org Id is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
	}
	
	public function update_org_animal_view()
	{
		$this->load->view('wsdl/update_org_animal');
	}
	
	
	public function update_org_animal()
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$animal_id 	= isset($_POST['animal_id']) ? $_POST['animal_id'] : '';
		$in_adopt 	= isset($_POST['in_adopt']) ? $_POST['in_adopt'] : '0';
		$in_ready_transfer 	= isset($_POST['in_ready_transfer']) ? $_POST['in_ready_transfer'] : '0';
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '') {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);
            if (count($user_details) > 0) {


                if (isset($animal_id) && $animal_id != '' && isset($user_id) && $user_id > 0 ) {
                    $array_update = array("in_adopt" => $in_adopt,                        
										  "in_ready_transfer" => $in_ready_transfer);
                    
                    $this->wsdl_model->update_animal_profile($array_update, $animal_id);

                    $data['msg'] = 'Animal updated successfully.';
                    $data = array("result" => 1, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } else {
                    $data['msg'] = 'Invalid data.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
		
	}
	
	
	
	public function get_my_org_animals_not_on_transport_view()
	{
		$this->load->view('wsdl/get_my_org_animals_not_on_transport');
	}
	
	public function get_my_org_animals_not_on_transport($user_id='',$wsdl_token='', $org_id='')
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
		
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && $org_id !='') 
		{
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$animal_list = $this->wsdl_model->get_org_animal_not_on_transport($org_id);		
				
				if (isset($animal_list) && !empty($animal_list)) {
                        $data = array("result" => 1,"animal_list" => $animal_list);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Record Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or org Id is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
		
		
	}
	
	
	public function get_my_org_animals_on_transport_view()
	{
		$this->load->view('wsdl/get_my_org_animals_on_transport');
	}
	
	public function get_my_org_animals_on_transport($user_id='',$wsdl_token='', $org_id='')
	{
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
		
		
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && $org_id !='') 
		{
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);           
			
            if (count($user_details) > 0) {	
				$data = array();
				
				$animal_list = $this->wsdl_model->get_org_animal_on_transport($org_id);		
				
				if (isset($animal_list) && !empty($animal_list)) {
                        $data = array("result" => 1,"animal_list" => $animal_list);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    } else {
                        $data['msg'] = 'No Record Found.';
                        $data = array("result" => 2, "msg" => $data['msg']);
                        header('Content-type: application/json');
                        echo json_encode($data);
                    }			
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or org Id is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }	
		
	}
	
	
	public function add_local_ride_view()
	{
		$this->load->view('wsdl/add_local_ride');
	}
	
	public function add_local_ride($user_id='',$wsdl_token='', $org_id='')
	{
		
		$user_id 	= isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
        $org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
		
        $transportdate = isset($_POST['transportdate']) ? $_POST['transportdate'] : '';
        $timepicker1 = isset($_POST['timepicker1']) ? $_POST['timepicker1'] : '';
        $to_transportdate = isset($_POST['to_transportdate']) ? $_POST['to_transportdate'] : '';
        $timepicker2 = isset($_POST['timepicker2']) ? $_POST['timepicker2'] : '';
        $is_round = isset($_POST['is_round']) ? $_POST['is_round'] : '';
		$favorite_ride = isset($_POST['favorite_ride']) ? $_POST['favorite_ride'] : '';
		
        $mins = isset($_POST['mins']) ? $_POST['mins'] : '';
        $sms_notify = isset($_POST['sms_notify']) ? $_POST['sms_notify'] : '0';
        $preferred_vol = isset($_POST['preferred_vol']) ? $_POST['preferred_vol'] : '0';
        $fb_publish = isset($_POST['fb_publish']) ? $_POST['fb_publish'] : '0';
		
		$no_of_kitten= isset($_POST['no_of_kitten']) ? $_POST['no_of_kitten'] : '';
		
		$animal_name= isset($_POST['animal_name']) ? $_POST['animal_name'] : '';  
		$animal_type= isset($_POST['animal_type']) ? $_POST['animal_type'] : '';   //  6
		$breed= isset($_POST['breed']) ? $_POST['breed'] : '';   //  6
		$gender= isset($_POST['gender']) ? $_POST['gender'] : '';       // Male / Female
		$weight= isset($_POST['weight']) ? $_POST['weight'] : '';
		$travel_with= isset($_POST['travel_with']) ? $_POST['travel_with'] : '';   //  1,2,3,4
		$cvi= isset($_POST['cvi']) ? $_POST['cvi'] : '';        // 
		$animalids =   isset($_POST['animalids']) ? $_POST['animalids'] : '';
		$data['org_details']	= $this->common_model->get_org_details($org_id);
		$st_add_comments = isset($_POST['st_add_comments']) ? $_POST['st_add_comments'] : '';
		
		
		if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && $org_id !='') 
		{
		
		
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);   		
			//print_r($user_details); die;
            if (count($user_details) > 0) {		
				$data = array();
				
				$in_ride_id = '';
				$quick_addition = '0';
				$in_frm_ride_id = '';
				$in_to_ride_id = '';
			
				if($favorite_ride !='' && $transportdate !='' && $timepicker1 !='' && $to_transportdate !='' && $timepicker2 !='')
				{	
					$in_ride_id = $favorite_ride; 
					$kitten_transportation_detail = $this->wsdl_model->get_kitten_transport($org_id,$favorite_ride);
				}
				else{
					
					$err_msg = "Ride Id or Pickup Date or Pickup Time or Drop Date or Drop Time.";
					$data = array("result" => 104, "err_msg" => $err_msg);
					header('Content-type: application/json');
					echo json_encode($data);					
				}
			


				if(isset($kitten_transportation_detail) && count($kitten_transportation_detail)>0 )
				{  
					
					$kitten_transportation_detail = $kitten_transportation_detail[0];
					//print_r($kitten_transportation_detail);die;
					$from_address = $this->common_model->getaddress($kitten_transportation_detail['pickup_zip']);
					$to_address   = $this->common_model->getaddress($kitten_transportation_detail['dropoff_zip']);
					
					$from_address_country = (isset($from_address['st_country']) && !empty($from_address['st_country']))?$this->common_function->shortCountry[trim($from_address['st_country'])]:'USA';
					$to_address_country   = (isset($to_address['st_country']) && !empty($to_address['st_country']))?$this->common_function->shortCountry[trim($to_address['st_country'])]:'USA';
				
					$origin 	  = ($kitten_transportation_detail['pickup_city'] ? $kitten_transportation_detail['pickup_city'] . "," : "") . ($kitten_transportation_detail['pickup_state'] ? $kitten_transportation_detail['pickup_state'] : "") . ($kitten_transportation_detail['pickup_zip'] ? "," . $kitten_transportation_detail['pickup_zip'] : "");
					$destinations = ($kitten_transportation_detail['dropoff_city'] ? $kitten_transportation_detail['dropoff_city'] . "," : "") . ($kitten_transportation_detail['dropoff_state'] ? $kitten_transportation_detail['dropoff_state'] : "") . ($kitten_transportation_detail['dropoff_zip'] ? "," . $kitten_transportation_detail['dropoff_zip'] : "");
					$routes_miles = $this->orgtrasnportation_model->get_route_miles(urlencode($origin), urlencode($destinations));
					
					$datepicker1 = date("Y-m-d",strtotime($transportdate));
					$latest_datepicker = date("Y-m-d",strtotime($to_transportdate));
					$timepicker1 = date("H:i:s",strtotime($timepicker1));
				    $required_time_second = $routes_miles['duration_value'];
					$time_per_sec = strtotime($timepicker2)+$routes_miles['duration_value'];
					$latest_pickup_time = date("H:i:s",strtotime($timepicker2));
					
					
					if(strtotime($latest_pickup_time)>=strtotime($timepicker2))
					{
						$datepicker2 = date("Y-m-d",strtotime($latest_datepicker."+1 day"));	
					} else {
						$datepicker2 = date("Y-m-d",strtotime($to_transportdate)); 
					}
					
					$transport_details = array(	"in_trans_coods_id"	=> $user_id,
											"in_organization_id"=> $org_id,
											"st_trans_name"		=> trim($kitten_transportation_detail['st_ride_nickname']),
											//"st_from_street"	=> $data['org_trasport']['pick_street'],
											"st_from_city"		=> trim($kitten_transportation_detail['pickup_city']),
											"st_from_state"		=> trim($kitten_transportation_detail['pickup_state']),
											"st_from_zip"		=> trim($kitten_transportation_detail['pickup_zip']),
											"st_from_country"	=> trim($from_address_country),
											//"st_to_street"		=> $data['org_trasport']['drop_street'], 
											"st_to_city"		=> trim($kitten_transportation_detail['dropoff_city']),  
											"st_to_state"		=> trim($kitten_transportation_detail['dropoff_state']), 
											"st_to_zip"			=> trim($kitten_transportation_detail['dropoff_zip']),  
											"st_to_country"		=> trim($to_address_country),
											//"st_from_info"		=> $data['org_trasport']['pick_info'],
											"dt_pickup_date"	=> $datepicker1,
											"dt_target"			=> date("Y-m-d", strtotime($datepicker2)),
											//"st_to_info"		=> $data['org_trasport']['drop_info'],
											"st_trans_type"		=> "R",
											"in_tot_distance"	=> $routes_miles['distance'],
											"in_created_by"		=> $user_id,
											"dt_created"		=> date("Y-m-d H:i;s"),
											"in_status"			=> 1,
											"in_deleted"		=> "0",
											"in_need_trans_monitor"	=> 0,
											"in_allow_pics" 	=>  0,
											"st_add_comments"	=> $st_add_comments,
											  'stRecNm'         => trim($kitten_transportation_detail['receiving_contact_name']),
												'stRecEmail'        => trim($kitten_transportation_detail['receiving_email_address']),
												  'stRphone'        => trim($kitten_transportation_detail['receiving_phone_number']),
												  'stR501c3'        => 'N',
												  'stS501c3'        => 'N',
											   'dt_modified'        => date('Y-m-d H:i:s'),
												  'stSendNm'	    => trim($kitten_transportation_detail['sending_contact_name']),
											   'stSendEmail'        => trim($kitten_transportation_detail['sending_email_address']),
												  'stSphone'        => trim($kitten_transportation_detail['sending_phone_number']),
									   'inSendOrgRunsheet'			=>  1,
									   'inRecOrgRunsheet'			=>  1,
											 'in_ride_id'			=>  $in_ride_id,			
											'in_sent_sms'			=> 1,
											'in_preferred_vol'	 	=> $preferred_vol,
											'in_round' 				=> $is_round,
											'in_mins'				=> $mins,
											'in_quick_add'			=> $quick_addition,
									  'in_frm_ride_location'  		=> $in_frm_ride_id,
									   'in_to_ride_location'		=> $in_to_ride_id,
										  'st_latest_pickup'		=> $timepicker2,
											'dt_latest_date'		=> $latest_datepicker,
										 'in_sms_notification'		=> $sms_notify,
												'in_fb_share'		=> $fb_publish,
												'no_of_kitten'      => $no_of_kitten
											);	
				
					
				
				//echo '<pre>'; print_r($transport_details); die;
											
				$transport_id = $this->wsdl_model->add_transport($transport_details);
					
				$transport_status = $transport_details['in_status'];
				
				$legs_array = array("in_transportation_id"    => $transport_id,
										"in_route_type"       => "0",
										"in_multi_user" 	  => '0', 
										  "in_user_num" 	  => '0',
								  "st_meeting_location" 	  => '',
                                        "in_created_by"	      => $user_id,
										"in_sort_order" 	  => '1',
										   "dt_created" 	  => date("Y-m-d H:i:s"),
											"in_deleted" 	  => "0",
									 "st_to_meeting_location" => "",
									 "st_leg_instruction"     => $kitten_transportation_detail['st_instruction'],	
									);

				$leg_id = $this->wsdl_model->create_legs($legs_array);
					
				$starting_date = $datepicker1.' '.$timepicker1;
				$pickup_array = array("in_transportation_leg_id" => $leg_id,
										"st_leg_type" => "P",
										"st_street"   => $kitten_transportation_detail['pickup_street'],
                                        "st_city"     => $kitten_transportation_detail['pickup_city'],
                                        "st_state" 	  => $kitten_transportation_detail['pickup_state'],
										"st_zip" 	  => $kitten_transportation_detail['pickup_zip'],
										"st_country " => trim($from_address_country),
										"dt_start_time" => date('Y-m-d H:i:s', strtotime($starting_date)),
										"st_timezone" => $from_address['st_time_zone'],
										"in_deleted"  => "0"
									);
				
				
				$start_time =  $pickup_array['dt_start_time'];
				$start_time_zone = $pickup_array['st_timezone'];
				$this->wsdl_model->add_legs_details($pickup_array);
				
				$ending_date = $datepicker2.' '.$timepicker2;
							
				$dropoff_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type" => "D",
													"st_street"   => $kitten_transportation_detail['dropoff_street'],
													"st_city"     => $kitten_transportation_detail['dropoff_city'],
													"st_state" 	  => $kitten_transportation_detail['dropoff_state'],
													"st_zip" 	  => $kitten_transportation_detail['dropoff_zip'],
													"st_country " => trim($to_address_country),
													"dt_start_time" => date('Y-m-d H:i:s', strtotime($ending_date)),
													"st_timezone" => $to_address['st_time_zone'],
													"in_deleted" => "0"
										);
			
				
										
				$this->wsdl_model->add_legs_details($dropoff_array);
				
				if(isset($routes_miles['route_path']) && $routes_miles['route_path']!='')
				{
						$route_details = array(	"in_transportation_leg_id"	=> $leg_id,
													"in_transportation_id"	=> $transport_id,
														   "in_route_type"	=> 0,
														 "st_legs_details"	=> $routes_miles['route_path'],
															 "fl_distance"	=> $routes_miles['distance'],
															  "in_deleted"	=> "0"
											   );
					$this->common_model->insert_data("tbl_routes",$route_details);
				}
				
				
				if(isset($_POST['animal_name']) && $_POST['animal_name'] != '' && $animal_type !='' && $breed !='' && $gender !='')
				{
					
					$demid	= $this->wsdl_model->chk_demeanor('Unknown',$_POST['animal_type']);	
					
					
					//$atravel = implode(',',$_POST['travel_with']);

					$data['animal_info'] = array(	 'in_organization_id'	=>	$org_id,
													 'st_animal_name'		=>	$animal_name,
													 'st_gender'			=>	($gender =='M')? 'M':'F',
													 'in_primary_breed_id'	=>	$breed,	
													 'in_animal_type_id'     =>	$animal_type,
													 'st_travel_with'		=>	$travel_with,
													 'st_cvi'				=>	($cvi !='')?$cvi:'N',
													 'in_neutered_id'		=>	3,
												     'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
													 'dt_modified'			=>  date('Y-m-d H:i:s'),
													 'st_city'				=>  $data['org_details']['st_city'],
												     'st_state'				=>	$data['org_details']['st_state'],
													 'in_status'			=>	2,
													 'in_weight'			=>  $weight,
													 'st_current_zip'		=>  trim($kitten_transportation_detail['pickup_zip']),
													 'st_desired_zip'  		=>  trim($kitten_transportation_detail['dropoff_zip'])
													);
													
					
					//echo '<pre>'; print_r($data['animal_info']); die;
													
					$animal_id	= $this->wsdl_model->add_animal_profile_local($data['animal_info'],$transport_id,$org_id,$user_id);
					
					$profile_pic = 0;

                $this->load->library('upload');
                //photo1 starts
                if (isset($_FILES['photo1']['name']) && $_FILES['photo1']['name'] != '') {
                    // file upload

                    $config['upload_path'] = $this->config->item('upload') . 'animal_images/';
                    $config['max_size'] = '5120';         // 5 MB               
                    $config['allowed_types'] = 'jpg|png|gif|jpeg';
                    $config['remove_spaces'] = TRUE;                   
                    $lastDot = strrpos($_FILES['photo1']['name'], ".");
                    $_FILES['photo1']['name'] = str_replace(".", "", substr($_FILES['photo1']['name'], 0, $lastDot)) . substr($_FILES['photo1']['name'], $lastDot);
                    $config['file_name'] = preg_replace('/[^A-Za-z0-9\-.]/', '', str_replace(" ", "_", mt_rand() . $_FILES['photo1']['name']));



                    //Initialization
                    $this->upload->initialize($config);
                    //Upload image by calling do_upload method.
                    $this->upload->do_upload('photo1');
                    $file_errors = array('errors' => $this->upload->display_errors());
                    if (!empty($file_errors['errors'])) {
                        $err_msg = strip_tags($file_errors['errors']);
                        $data = array("result" => 2, "err_msg" => $err_msg);
                        header('Content-type: application/json');
                        echo json_encode($data);
                        return false;
                    }
                    $this->load->library('image_lib');

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/315x315/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 315;
                    $config['height'] = 315;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/140x140/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 140;
                    $config['height'] = 140;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/70x70/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 70;
                    $config['height'] = 70;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/36x36/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 36;
                    $config['height'] = 36;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();


                    $config['image_library'] = 'gd2';
                    $config['source_image'] = $this->config->item('upload') . 'animal_images/' . $config['file_name'];
                    $config['new_image'] = $this->config->item('upload') . 'animal_images/cropped_images/' . $config['file_name'];
                    $config['maintain_ratio'] = TRUE;
                    $config['width'] = 200;
                    $config['height'] = 200;
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    $this->image_lib->resize();
                    $this->image_lib->clear();

                    // file upload	
                    //if ($_FILES['photo1']['name'] != '') {					

                     $file_details = array("in_animal_id" => $animal_id,
                        "st_file_name" => $config['file_name'],
                        "st_file_type" => 'P',
                        "dt_created" => date("Y-m-d H:i:s"),
                        "in_deleted" => "0",
						"in_profile_pic" =>$photo1_profilepic
                    );
										
                    $this->wsdl_model->add_animal_photo($file_details);
                    //}
                }
					
					
				}

				if($animalids !='')
				{  
					$aniids = explode(',',$animalids);
					//echo '<pre>'; print_r($aniids);die;
					foreach($aniids as $aniid)
					{   if($aniid !=''){
						$animal_id	= $this->wsdl_model->update_animal_profile_local($aniid,$transport_id,$user_id);
							}
					}
					
				}
				
				
				if (isset($_FILES['doc1']['name']) && $_FILES['doc1']['name'] != '') {                  

						$config['upload_path'] = $this->config->item('upload')."trasnportation/";
						$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
						$config['max_size']	= '51200';
						$config['remove_spaces']  	= TRUE;
						$config['file_name'] 		= str_replace(" ","_",$user_id.'_'.mt_rand().'_'.$_FILES['doc1']['name']);	
						
						$this->load->library('upload', $config);
						$this->upload->initialize($config);
						$this->upload->do_upload('doc1');					
						$file_errors = array('errors' => $this->upload->display_errors());                   					

						$file_details = array("in_transportation_id" => $transport_id,
											"st_file_name" => $config['file_name'],
											"dt_created" => date("Y-m-d H:i:s"),
											"in_deleted" => "0"
										);
						$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);									
				}
				
				if (isset($_FILES['doc2']['name']) && $_FILES['doc2']['name'] != '') {                  

						$config['upload_path'] = $this->config->item('upload')."trasnportation/";
						$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
						$config['max_size']	= '51200';
						$config['remove_spaces']  	= TRUE;
						$config['file_name'] 		= str_replace(" ","_",$user_id.'_'.mt_rand().'_'.$_FILES['doc2']['name']);	
						
						$this->load->library('upload', $config);
						$this->upload->initialize($config);
						$this->upload->do_upload('doc2');					
						$file_errors = array('errors' => $this->upload->display_errors());                   					

						$file_details = array("in_transportation_id" => $transport_id,
												"st_file_name" => $config['file_name'],
												"dt_created" => date("Y-m-d H:i:s"),
												"in_deleted" => "0"
											);
						$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);									
				}
				
				
				if (isset($_FILES['doc3']['name']) && $_FILES['doc3']['name'] != '') {                  

						$config['upload_path'] = $this->config->item('upload')."trasnportation/";
						$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
						$config['max_size']	= '51200';
						$config['remove_spaces']  	= TRUE;
						$config['file_name'] 		= str_replace(" ","_",$user_id.'_'.mt_rand().'_'.$_FILES['doc3']['name']);	
						
						$this->load->library('upload', $config);
						$this->upload->initialize($config);
						$this->upload->do_upload('doc3');					
						$file_errors = array('errors' => $this->upload->display_errors());                   					

						 $file_details = array("in_transportation_id" => $transport_id,
												"st_file_name" => $config['file_name'],
												"dt_created" => date("Y-m-d H:i:s"),
												"in_deleted" => "0"
											);
						$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);									
				}
				
				if (isset($_FILES['doc4']['name']) && $_FILES['doc4']['name'] != '') {                  

						$config['upload_path'] = $this->config->item('upload')."trasnportation/";
						$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
						$config['max_size']	= '51200';
						$config['remove_spaces']  	= TRUE;
						$config['file_name'] 		= str_replace(" ","_",$user_id.'_'.mt_rand().'_'.$_FILES['doc4']['name']);	
						
						$this->load->library('upload', $config);
						$this->upload->initialize($config);
						$this->upload->do_upload('doc4');					
						$file_errors = array('errors' => $this->upload->display_errors());                   					

						 $file_details = array("in_transportation_id" => $transport_id,
												"st_file_name" => $config['file_name'],
												"dt_created" => date("Y-m-d H:i:s"),
												"in_deleted" => "0"
											);
						$data['files'] = $this->orgtrasnportation_model->add_transport_file($file_details);									
				}
				
				$this->load->model('cron_model');
				$this->cron_model->update_trans_coods($transport_id);
				$this->cron_model->get_near_by_transportride_users($transport_id);	
				
				$data['msg'] = 'Transport Created successfully.';
                $data = array("result" => 1, "msg" => $data['msg']);
                header('Content-type: application/json');
                echo json_encode($data);
				
				}
				
				else {				
				$data['msg'] = 'Transport not created.';
				$data = array("result" => 2, "msg" => $data['msg']);
				header('Content-type: application/json');
				echo json_encode($data);
				}	
				
				
							
			                
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        
		} 
		else {
            $err_msg = "UserId or Token or org Id is Missing";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }	
		
	}
	
	public function org_transport_list_view()
	{
		$this->load->view('wsdl/org_transport_list');
	}
	
	function org_transport_list($user_id = '',$wsdl_token='',$org_id='',$status='') {
	
        //$user_id = 50;
        $user_id = isset($_POST['user_id']) ? $_POST['user_id'] : '';
        $wsdl_token = isset($_POST['wsdl_token']) ? $_POST['wsdl_token'] : '';
		$org_id = isset($_POST['org_id']) ? $_POST['org_id'] : '';
		$status = isset($_POST['status']) ? $_POST['status'] : '1';
        if (isset($user_id) && $user_id != '' && isset($wsdl_token) && $wsdl_token != '' && isset($org_id) && $org_id != ''  ) {
            $user_details = $this->wsdl_model->get_user_details($user_id, $wsdl_token);

            if (count($user_details) > 0) {            
                $data['all_trasport'] = ''; 
                $date = array();


                //if ((isset($user_details['0']['st_driver']) && $user_details['0']['st_driver'] == 'Y') || isset($user_details['0']['st_pilot']) && $user_details['0']['st_pilot'] == 'Y') {
                    #=============Active Trasport============#
                    $all_trasport = $this->wsdl_model->get_org_transport_list($status,$org_id);
                    $data['all_trasport'] = $all_trasport;
                //}
                //echo '<pre/>';print_r($data['all_trasport']);exit;

                if (!empty($all_trasport)) {
                    $data = array("transport_list" => $data['all_trasport']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } 
				else if (empty($all_trasport)) { 
                    $data['msg'] = 'No Transportation found.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                } 				
				else {
                    $data['msg'] = 'You are not currently signed up for any transports.';
                    $data = array("result" => 2, "msg" => $data['msg']);
                    header('Content-type: application/json');
                    echo json_encode($data);
                }				
				
            } else {
                $err_msg = "You have been logged out as you logged into a different device.";
                $data = array("result" => 103, "err_msg" => $err_msg);
                header('Content-type: application/json');
                echo json_encode($data);
            }
        } else {
            $err_msg = "UserId or Token or Org Id Missing ";
            $data = array("result" => 104, "err_msg" => $err_msg);
            header('Content-type: application/json');
            echo json_encode($data);
        }
    
	}
	
}


/* End of file wsdl.php */
/* Location: ./application/controllers/wsdl.php */