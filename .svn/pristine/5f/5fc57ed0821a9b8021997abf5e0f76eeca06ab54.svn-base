<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Organization extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	
	public function __construct()
    {
		parent::__construct();
		$this->output->enable_profiler(FALSE);
		$this->load->library('common_function');
		$this->common_function->check_front_logged_in($this);
		$this->load->model('common_model');
		$this->load->model('org_info_model');
		$this->load->model('organization_model');
		$this->load->library('form_validation');
		$this->load->helper('url');
		$this->load->library('Upload');
		$this->load->library('pagination');
		$this->load->helper('cookie');
		if($this->router->method != 'organization_profile_details') {
			$this->session->unset_userdata('org_id');
			setcookie("dev_organization_id","",time()-3600,"/","dev.doobert.com");
		}
		
		if($this->router->method != 'shelter_list') {
			$this->session->unset_userdata('search_shelter');
		}
		if($this->router->method != 'friend_shelter_list') {
			$this->session->unset_userdata('search_fshelter');
		}
		
		$this->session->unset_userdata('transport_id');


	}	
	 
	public function index()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
	}
	#=========================================================
	#	Function : rescue_organization
	#	Purpose  : Join Rescue Organization
	#=========================================================		
	public function rescue_organization()
	{	
		
		if($this->input->cookie('userid')){
				$this->session->set_userdata('userid',$this->input->cookie('userid'));
				
				if($this->input->cookie('user_name'))
				{
                	$this->session->set_userdata('user_name', $this->input->cookie('user_name'));
				}
				if($this->input->cookie('last_name'))
				{
                	$this->session->set_userdata('last_name',$this->input->cookie('last_name'));
				}
				if($this->input->cookie('email'))
				{
                	$this->session->set_userdata('email', $this->input->cookie('email'));
				}
				/*delete_cookie('userid'); 
				delete_cookie('user_name');
				delete_cookie('last_name');
				delete_cookie('email');	*/
				if($this->input->cookie('sign_up_org_name'))
				{	
						$this->session->set_userdata('sign_up_org_name',$this->input->cookie('sign_up_org_name'));
						$this->session->set_userdata('sign_up_org_zip', $this->input->cookie('sign_up_org_zip'));
						delete_cookie('sign_up_org_name');
						delete_cookie('sign_up_org_zip');  	
				}
		}
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		$pending_org_cnt = $this->organization_model->check_org_status($this->session->userdata('userid'));
		
		//if(isset($pending_org_cnt) && $pending_org_cnt > 0 && !$this->session->flashdata('org_info'))
		if(isset($pending_org_cnt) && $pending_org_cnt > 0)	
		{
			redirect($this->config->item('base_url')."organization/verification");
		}
		
		
		$previous_selected_org	=	$this->organization_model->previous_selected_org($this->session->userdata('userid'));
		if($_SERVER['HTTP_REFERER'] != base_url().'dashboard_modern')
		{
			$str1= $_SERVER['HTTP_REFERER'];			
			$str2 = explode('/',$str1);					
		}
		//echo '<pre>'; print_r($previous_selected_org); die;
		
		
		if(isset($previous_selected_org) && $previous_selected_org['st_org_type'] == 'S' && ($_SERVER['HTTP_REFERER'] == base_url().'dashboard_modern/' || $str2[3] == 'org-modern-dashboard'))
		{  
			redirect(base_url().'new-shelter-organization/');
		}
		
		else if(isset($previous_selected_org) && $previous_selected_org['st_org_type'] == 'O' && ($_SERVER['HTTP_REFERER'] == base_url().'dashboard_modern/' || $str2[3]== 'org-modern-dashboard' ))
		{   
			redirect(base_url().'other-organization/');
		}
		
		else if(isset($previous_selected_org) && $previous_selected_org['st_org_type'] == 'FS' && ($_SERVER['HTTP_REFERER'] == base_url().'dashboard_modern/' || $str2[3] == 'org-modern-dashboard'))
		{   
	        $this->session->set_userdata('shelter_id',$previous_selected_org['in_shelter_id']);
			redirect(base_url().'friend-of-shelter/');
		}
		
		$data = array();
		$data['Err_Msg'] 		= '';
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		$data['coalition']  = 	$this->common_model->get_coalition();
		$c3_certificate 		= '';
		$adoption_contract_file = '';
		$data['tooltip'] 	 	= get_cookie('tooltip');
		//echo 'session userid'.$this->session->userdata('userid');
		
		
		$org_name               ='';
		if($this->session->userdata('sign_up_org_name'))
		{
			$org_name = $this->session->userdata('sign_up_org_name');
		}
		
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		if($org_name==''){	
		if(isset($user_details) && ($user_details[0]['in_status'] == 0 || $user_details[0]['in_status'] == ''))
		{
			$this->session->set_flashdata('incomplete_profile_error', 'Please complete general details to proceed.');
			redirect($this->config->item('base_url')."my-profile/");
		}
		}
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		//echo "<pre>";print_r($user_details[0]);die;
		if(isset($user_details['0']['st_website']) && $user_details['0']['st_website'] != '')
		{
			$user_details['0']['st_website'] = str_replace('http://','',$user_details['0']['st_website']);
			$user_details['0']['st_website'] = str_replace('https://','',$user_details['0']['st_website']);
		}
		
		$form_field	=	array('org_type'				=> "R",
							  'orgname'					=> "",
							  'eni'						=> "0",
							  '501c3_certified'			=> "",
							  'inserted_c3_certificate'	=> "",
							  'adoption_contract' 		=> "",
							  'inserted_org_adoption'  => "",
							  'address'					=> isset($user_details[0]['st_address1'])?$user_details[0]['st_address1']:"",
							  'address2'				=> isset($user_details[0]['st_address2'])?$user_details[0]['st_address2']:"",
							  'city'					=> isset($user_details[0]['st_city'])?$user_details[0]['st_city']:"",
							  'state'					=> isset($user_details[0]['st_state'])?$user_details[0]['st_state']:"",
							  'zip'						=> isset($user_details[0]['st_zip'])?$user_details[0]['st_zip']:"",
							  "manager"					=> ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),
							  "pphone"					=> isset($user_details[0]['st_primary_phone'])?$user_details[0]['st_primary_phone']:"",
							  "sphone"					=> isset($user_details[0]['st_secondary_phone'])?$user_details[0]['st_secondary_phone']:"",
							  "fax"						=> isset($user_details[0]['st_fax'])?$user_details[0]['st_fax']:"",
							  "email"					=> strtolower($this->session->userdata('email')),
							  "organization_website"	=> isset($user_details[0]['st_website'])?$user_details[0]['st_website']:"",
							  "reference_1"				=> "",
							  "ref_1_name"				=> "",
							  "ref_1_email"				=> "",
							  "ref_1_phone"				=> "",
							  "reference_2"				=> "",
							  "ref_2_name"				=> "",
							  "ref_2_email"				=> "",
							  "ref_2_phone"				=> "",
							  "reference_3"				=> "",
							  "ref_3_name"				=> "",
							  "ref_3_email"				=> "",
							  "ref_3_phone"				=> "",
							  "st_guideline"			=> "",
							  "image_file"				=> "",
							  "comments"				=> "",
							  //"paypal_email"			=> "",
							  'country'					=> isset($user_details[0]['st_country'])?$user_details[0]['st_country']:"",
							  "profile_desc"			=> "",		//added on 05Sept2014 by ghanshyam
							  "guideline_link"			=> "",		//added on 24sept2014 by ghanshyam
							  "orgcode"				    => "",
							  "joincoalition1"         => "",
							  "joincoalition2"         => "",
							  "joincoalition3"         => "",
							  "joincoalition4"         => "",
							  "joincoalition5"         => ""
							);
		foreach($form_field as $key => $value)	
		{	
			$data['organization'][$key] = $value;	
		}		
			
		
		if($this->input->post('action') == 'submit')
		{
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
			$website = $this->input->post('organization_website');
			if(!empty($website)){
				$_POST['organization_website'] = "http://" . $website;
			}
			
			foreach ($form_field as $key => $value)
			{	
				$data['organization'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$org_zipcode = explode('-',$data['organization']['zip']);
			if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
			{
				$data['organization']['zip'] = $org_zipcode[0];
			}
			
			$org_links_array = $this->input->post('guideline_url'); 
			for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
			{  
				if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
				{					
					//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
				}
			}	
			
			$_POST['guideline_url'] = $org_links_array;
			
			$data['organization']['guideline_url']  = $_POST['guideline_url'];
			
			
			//print_r($_POST['guideline_url']);exit; //use for testing
			
			//print_r($data['organization']);exit;
			$this->form_validation->set_rules('orgname', 'Organization Name', 'trim|required');
			$this->form_validation->set_rules('address', 'Address', 'trim|required');
			$this->form_validation->set_rules('city', 'City', 'trim|required');
			$this->form_validation->set_rules('state', 'State', 'trim|required');
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
			$this->form_validation->set_rules('manager', 'Manager or Director', 'trim|required');
			$this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
			$this->form_validation->set_rules('email', 'Email', 'trim|required');
			$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
			//$this->form_validation->set_rules('paypal_email', 'Paypal Email', 'trim|valid_email');
			$this->form_validation->set_rules('st_guideline', 'Guidelines', 'trim');
			$this->form_validation->set_rules('guideline_url[]', 'Guideline Url', 'trim|callback_validdate_urls');
			$this->form_validation->set_rules('profile_desc', 'Profile Description', 'trim');
			for($a=1;$a<=3;$a++)
			{
			 //if($data['organization']['ref_'.$a.'_name']!='')
				//{
					$this->form_validation->set_rules('ref_'.$a.'_name', 'Reference '.$a.' Name', 'trim|required');
					$this->form_validation->set_rules('ref_'.$a.'_email', 'Reference '.$a.' Email', 'trim|required|valid_email');
					$this->form_validation->set_rules('ref_'.$a.'_phone', 'Reference '.$a.' Phone', 'trim|required');
				//}
			
			}
			$error = '';
			$upload_error = ''; 
			if($data['organization']['501c3_certified']!='' && isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']=='')
			{
				if($data['organization']['501c3_certified']!='' && $data['organization']['inserted_c3_certificate'] =='' )
				$error .= "<p>501c3 Certificate is required.</p>";
			}
			if($data['organization']['adoption_contract']!='' && isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']=='')
			{
				if($data['organization']['adoption_contract']!='' && $data['organization']['inserted_org_adoption'] =='' )
				$error .= "<p>Adoption Contract is required.</p>";
			}
			#=====================Upload Certificate=================#
			if(isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']!='')
			{
				//echo $this->organization_model->upload_files('c3_certificate');
				if($this->organization_model->upload_files('c3_certificate')){
					$arrImageInfo = $this->upload->data();
					$c3_certificate = $arrImageInfo['file_name'];
					
				}else{
					//$error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#===================== End Upload Contract=================#
			#=====================Upload Contract=================#
			if(isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']!='')
			{
				if($this->organization_model->upload_files('adoption_contract_file')){
					$arrImageInfo = $this->upload->data();
					$adoption_contract_file = $arrImageInfo['file_name'];
				}else{
					//$error .= "Adoption Contract error: ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "Adoption Contract error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#=====================End Upload Contract=================#			
			//if($this->form_validation->run()==FALSE ||$error!='')
			if($this->form_validation->run()==FALSE ||$error!='' || $upload_error!='')	
			{
					$data['Err_Msg'] = validation_errors().$error;
					$data['upload_error'] = $upload_error;
					if(isset($data['organization']['organization_website']) && $data['organization']['organization_website'] != ''){
					$data['organization']['organization_website'] = str_replace('http://','',$data['organization']['organization_website']);
					$data['organization']['organization_website'] = str_replace('https://','',$data['organization']['organization_website']);
					}
					$this->load->view('organization-rescue',$data);	
			}
			else
			{
				if(isset($c3_certificate) && !empty($c3_certificate))
				{
					
					$c3_certificate_file_name = $c3_certificate;
				} else if(isset($data['organization']['inserted_c3_certificate']) && !empty($data['organization']['inserted_c3_certificate']))
				{
					
					$c3_certificate_file_name = $data['organization']['inserted_c3_certificate'];
				} else {
					
					$c3_certificate_file_name = '';
				}

				if(isset($adoption_contract_file) && !empty($adoption_contract_file))
				{
					$adoption_contract_file_name = $adoption_contract_file;
				} else if(isset($data['organization']['inserted_org_adoption']) && !empty($data['organization']['inserted_org_adoption']))
				{
					$adoption_contract_file_name = $data['organization']['inserted_org_adoption'];
				} else {
					$adoption_contract_file_name = '';
				}	
				
				$data['organization']['c3_certificate'] 		= $c3_certificate_file_name;
				$data['organization']['adoption_contract_file'] = $adoption_contract_file_name;
				$data['organization']['created_date'] 			= date("Y-m-d H:i:s");
				$flag_direct = 0 ;
				if($this->session->userdata('org_name'))
				{
						$flag_direct = 1;	
				}
				$org_details = array(	"in_user_id"			=> $this->session->userdata('userid'), 
										"st_org_type"			=> "R", 
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_org_ein"			=> $data['organization']['eni'], 
										"st_has_501c3"			=> ($data['organization']['501c3_certified']=='1')?"Y":"N",  
										"st_organization_501c3"	=> $data['organization']['c3_certificate'], 
										"st_has_contract"		=> ($data['organization']['adoption_contract']=='1')?"Y":"N",   
										"st_org_adoption"		=> $data['organization']['adoption_contract_file'],  
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'],
										"st_guideline"			=> $data['organization']['st_guideline'], 
										"st_additional_info"	=> $data['organization']['comments'],
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'],
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_direct_signup"      => $flag_direct,
										"in_status"				=> "0", 
										"in_deleted"			=> "0",
										"st_org_code"			=> $data['organization']['orgcode'], 
										);
				//echo "<pre>";print_r($org_details);die;	
				
					$manager_name = $data['organization']['manager'];
					$org_name	=	$data['organization']['orgname'];
				
				//$organization_id = $this->organization_model->add_organization($org_details);
				
				//$data['organization']['organization_id'] = $organization_id;	
				   // echo '<pre>'; print_r($data['organization']); die;
				   if(isset($data['pending_org_details']['in_organization_id']) && !empty($data['pending_org_details']['in_organization_id'])){ 
				       $organization_id = $data['pending_org_details']['in_organization_id'];
				   }
				   else
				   { 
					   $organization_id =  $this->input->post('orgid'); //die; //$this->session->userdata('orgId'); die;
				   }
				   $orgstatus = $this->organization_model->check_orgid($organization_id,$orgtp='R'); //echo $this->input->post('orgid'); die;		
					if($orgstatus > 0){  
						//echo $this->input->post('orgid'); die;
						//echo $c3_certificate . '   '. $adoption_contract_file;die;
                    //$this->organization_model->update_organization($organization_id,$c3_certificate,$adoption_contract_file);					
					 $this->organization_model->update_organization($organization_id,$c3_certificate_file_name,$adoption_contract_file_name,$shelter_id='');
					 $data['organization']['organization_id'] = $organization_id; 				 
					}
					if($orgstatus==0){
						//echo $this->session->userdata('orgId');die;
						//$organization_id = $this->organization_model->add_organization($org_details);
						//$data['organization']['organization_id'] = $organization_id;
						
						$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
						$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
					} 
				
				
				   // org coalition add
				
				//$joincoalition = $this->input->post('joincoalition');
				$joincoalition = $this->input->post('counter2');
				
			//echo '<pre>'; print_r($_POST); die;			
			if($joincoalition > 0){ 
				for($i=1; $i<=5; $i++){ 
					$coalition   = 'joincoalition'.$i;						
			     if($_POST[$coalition]!=''){		 
					
					 
			$coalition_details = array(	"in_organization_id" => $this->session->userdata('orgId'), 
										"in_coalition_id"	 => $_POST[$coalition],
										"dt_created"         => date('Y-m-d H:i:s')
									);	
           							
			//echo '<pre>'; print_r($coalition_details); die;
			$coaid=$_POST[$coalition];
			$check	=	$this->common_model->is_coalition_exists($this->session->userdata('orgId'),$coaid);
			
			if($check == false)
			{					
					$this->organization_model->insertcoalition($coalition_details);	
			}		
			    		
			}
				}
			
			}
				// org coalition add	
				

				
				for($a=1;$a<=3;$a++)
				{
					$ref_details = array();
					
					
					if($data['organization']['ref_'.$a.'_name']!='' || $data['organization']['ref_'.$a.'_email']!='' || $data['organization']['ref_'.$a.'_phone']!='')
					{
						$ref_details = array(	"in_organization_id"	=> $organization_id, 
												"st_ref_type"			=> $data['organization']['reference_'.$a], 
												"st_ref_name"			=> $data['organization']['ref_'.$a.'_name'],
												"st_ref_email"			=> $data['organization']['ref_'.$a.'_email'],
												"st_ref_phone"			=> $data['organization']['ref_'.$a.'_phone'],  
												"dt_created"			=> date("Y-m-d H:i:s"),  
												"in_deleted"			=> "0"
												);
						//$this->organization_model->organization_references($ref_details);
					}
					
					// mail functionality starts	
							
							if($data['organization']['reference_'.$a] == 'V'){
							$email_details = $this->common_model->get_email_containt("44");
							}
							if($data['organization']['reference_'.$a] == 'O'){
							$email_details = $this->common_model->get_email_containt("43");
							}
							if($data['organization']['reference_'.$a] == 'P'){
							$email_details = $this->common_model->get_email_containt("45");
							}			
					
						
							$data['user_name']	=	ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name'));
						
						$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
						if(isset($email_details[0]['st_email_body']))
						{   				
							
							$strMail='';
							$templete = $email_details[0]['st_email_body'];							
							$templete  = str_replace("##REFERENCE_NAME##",$data['organization']['ref_'.$a.'_name'],$templete);
							//$templete  = str_replace("##APPLICANT_NAME##",$data['user_name'],$templete);
							$templete  = str_replace("##APPLICANT_NAME##",$manager_name,$templete);	
							$templete  = str_replace("##ORGANIZATION_NAME##",$org_name,$templete);
							$templete  = str_replace("##DONATION##",$donation,$templete);
							$this->load->library('email');
													
							$strMail 	= 	$templete;
							$to			=	$data['organization']['ref_'.$a.'_email'];
							$subject	=	$email_details[0]['st_email_subject'];
							$subject    = str_replace("##ORGANIZATION_NAME##",$org_name,$subject);	
							$subject    = str_replace("##APPLICANT_NAME##",$manager_name,$subject);
							$message	=	$strMail;
							$category  =    $email_details[0]['st_category'];
							$reply_to	=	"applications@doobert.zendesk.com";
							//$this->common_function->send_mail($this->email, $to, $subject, $message, 'references@doobert.com' ,$cc ='', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
					   }
					
					
					//mail functionality ends
				}
				 if(!empty($data['organization']['zip']))
				 {
					$zip_code_state = $this->common_model->get_zipcode_info($data['organization']['zip']);
					if($zip_code_state['state_prefix']=='CO')
					{
							
							//$to = 'nirav.motta@pulsesolutions.net';
							//$to = array($data['organization']['st_email_address'],'support@doobert.zendesk.com');
							$colorado_email_notification = $this->common_model->get_email_containt("84");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							$to = array($data['organization']['email']);
							if(isset($colorado_email_notification[0]['st_email_body']))
							{
								$message  = $colorado_email_notification[0]['st_email_body'];
								$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
								$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
								$message  = str_replace("##display_name##",$manager_name,$message);
								$message  = str_replace("##DONATION##",$donation,$message);
								$subject  = $colorado_email_notification[0]['st_email_subject'];
								$category = $colorado_email_notification[0]['st_category'];
								$this->mail_notify_colorado($to,$subject,$category,$message);
							}
								$this->notify_mailto_zendesk($manager_name);
							//$this->mail_notify_colorado($to,$subject,$category,$message);	
					}	 
				}
				
				$org_links_array = $this->input->post('guideline_url'); 
				for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
				{  
					$org_links_data = array();
					
					if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
					{					
						//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					
						$org_links_data = array(	"in_organization_id"	=> $organization_id, 
													"st_org_link"			=> $org_links_array[$links_cnt],
													"dt_created"			=> date("Y-m-d H:i:s"),  
													"in_deleted"			=> "0"
												);
						$this->organization_model->organization_links_detail($org_links_data);
					}
				}
				
				$guidelines_imgs = explode(",",$data['organization']['image_file']);
				//echo "<pre>";print_r($guidelines_imgs);die;
				/*if(!empty($guidelines_imgs))
				{
					for($q=0;$q<count($guidelines_imgs);$q++)
					{
						if($guidelines_imgs[$q]!='')
						{
							$upload_details = array("in_organization_id"	=> $organization_id,
													"st_file_name"			=> $guidelines_imgs[$q],
													"in_doc_type"			=> "1",
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
													);
							$this->organization_model->organization_images($upload_details);
						}
					}
				}*/

				//code for setting organization profile privacy starts 11sept2014 by ghanshyam
				if(isset($organization_id) && $organization_id > 0)
				{
					$org_privacy_setting_data 		= array();			
					
					$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
					
					$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
					$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
					$org_privacy_setting_data['in_public'] 			=	0;
					$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
					
					//print_r($org_privacy_setting_data);exit;
					$this->load->model('organization_privacy_setting_model');
					$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
				 }					
				// code for updating login user phone no and zip in the org sign up task 14 june'16
				if($this->session->userdata('sign_up_org_name'))
				{
					$this->load->model('user_model');
					$address_details	=	$this->common_model->getaddress($data['organization']['zip']);
					 $profile_info = array(
                    "st_city" => isset($address_details['city']) ? $address_details['city'] : '',
                    "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
                    "st_zip" => $data['organization']['zip'],
                    "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
                    "st_primary_phone" => $data['organization']['pphone'],
                    "dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1"
					);
					$this->user_model->update_user_profile_setting($profile_info,$this->session->userdata('userid'),'tbl_user_profile');	
					// hear need to update the users table to make status 1 
					$this->user_model->update_user_info(array("in_status"=>1),$this->session->userdata('userid'),'tbl_users');
					
				}
				
				//code for setting organization profile privacy ends 11sept2014 by ghanshyam
				
				$admin_list = $this->common_model->get_admin_list();
				$this->organization_request_email($admin_list,"Rescue",$data['organization']);
				$this->session->unset_userdata('sign_up_org_name');
				$this->session->unset_userdata('sign_up_org_zip');
				$this->session->unset_userdata('orgId');
				$this->session->set_flashdata('org_info', 'Your request has been successfully submitted for review!');
				redirect(base_url().'rescue-organization/');					
			}
		}
		else
		{
			$data['pending_org_details'] = $this->organization_model->pending_org_details($orgType='R');
			if(isset($data['pending_org_details']['in_organization_id']) && $data['pending_org_details']['in_organization_id']!=''){
				$this->session->unset_userdata('orgId');
				$this->session->set_userdata('orgId',$data['pending_org_details']['in_organization_id']);
				$data['upload_doc'] = $this->organization_model->get_org_upload_doc($data['pending_org_details']['in_organization_id']);	
			    $data['organization_ref'] = $this->organization_model->get_organization_ref($data['pending_org_details']['in_organization_id']);
			}	
			//echo "<pre>";print_r($data['pending_org_details']);die;
			if(isset($data['pending_org_details']['in_status']) &&  $data['pending_org_details']['in_status'] == 4){		
			$this->load->view('organization-rescue',$data);
			return;
			}
			$this->load->view('organization-rescue',$data);			
		}
	}
	
	#=========================================================
	#	Function : shelter_list
	#	Purpose  : Shelter List
	#=========================================================		
	
	public function shelter_list()
	{   
		$this->session->set_userdata('orgtype','S');
		//echo $this->uri->segment(3);die;
		$short_by = $this->uri->segment(2);
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 		= '';
		if($short_by=='')
		{
			$short_by = 'all';
		}
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';
			
		$rec_per_page = 80;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		if($this->input->post('action')=='search')
		{	
			if($this->input->post('search')!='')
			{
				$this->session->set_userdata('search_shelter',$this->input->post('search'));
			}
			else
			{
				$this->session->unset_userdata('search_shelter');
			}
			
		}
		if($this->input->post('action')=='submit')
		{
			if($this->input->post('organization_list')!='')
			{
				$records = $this->organization_model->shelter_used($this->input->post('organization_list'));
				$shelter_name = $this->organization_model->shelter_name($this->input->post('organization_list'));
				$this->session->set_userdata('shelter_name',$shelter_name['st_shelter_name']);
				if(isset($records) && !empty($records))
				{
					$this->session->set_userdata('name',$records['st_director']);
					$this->session->set_flashdata('shelter_error', 'Your request has been successfully submitted for review!');	
				}
				else
				{
					$this->session->set_userdata('shelter_name',$shelter_name['st_shelter_name']);
					$this->session->set_userdata('shelter_id',$this->input->post('organization_list'));
					redirect(base_url().'shelter-organization/');
				}
			}
			else
			{
				$this->session->set_flashdata('select', 'Please select shelter.');	
			}
			redirect(base_url().'shelter-list/');
		}
		$shelter_list = $this->common_model->shelter_list($short_by,$limit,$rec_per_page);
		$data['shelter_list'] = $shelter_list;
		
		$totalrecord = $this->common_model->shelter_list_count($short_by);		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'shelter-list/';
		$config['base_url']		= $config['base_url'].$short_by.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['file_path'] = $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		
				
		$data['short_by'] = $short_by;
		$this->load->view('organization-shelter-list',$data);	
	}
	
	#=========================================================
	#	Function : shelter_organization
	#	Purpose  : Join Shelter Organization
	#=========================================================		
	public function shelter_organization()
	{
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 		= '';
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		$data['coalition']  = 	$this->common_model->get_coalition();
		$c3_certificate 		= '';
		$adoption_contract_file = '';
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		if(!$this->session->userdata('shelter_id'))
		{
			redirect($this->config->item('base_url')."shelter-list/");
		}
		
		
		if(isset($user_details['0']['st_website']) && $user_details['0']['st_website'] != '')
		{
			$user_details['0']['st_website'] = str_replace('http://','',$user_details['0']['st_website']);
			$user_details['0']['st_website'] = str_replace('https://','',$user_details['0']['st_website']);
		}
		
		//echo "<pre>";print_r($user_details[0]);die;
		$form_field	=	array('org_type'				=> "S",
							  'orgname'					=> $this->session->userdata('shelter_name'),
							  'shelter_id'				=> $this->session->userdata('shelter_id'),
							  'address'					=> isset($user_details[0]['st_address1'])?$user_details[0]['st_address1']:"",
							  'address2'				=> isset($user_details[0]['st_address2'])?$user_details[0]['st_address2']:"",
							  'city'					=> isset($user_details[0]['st_city'])?$user_details[0]['st_city']:"",
							  'state'					=> isset($user_details[0]['st_state'])?$user_details[0]['st_state']:"",
							  'zip'						=> isset($user_details[0]['st_zip'])?$user_details[0]['st_zip']:"",
							  "manager"					=> ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),
							  "pphone"					=> isset($user_details[0]['st_primary_phone'])?$user_details[0]['st_primary_phone']:"",
							  "sphone"					=> isset($user_details[0]['st_secondary_phone'])?$user_details[0]['st_secondary_phone']:"",
							  "fax"						=> isset($user_details[0]['st_fax'])?$user_details[0]['st_fax']:"",
							  "email"					=> strtolower($this->session->userdata('email')),
							  "organization_website"	=> isset($user_details[0]['st_website'])?$user_details[0]['st_website']:"",
							  "comments"				=> "",
							  "st_guideline"			=> "",
							  "image_file"				=> "",
							  //"paypal_email"			=> "",
							  'country'				=> isset($user_details[0]['st_country'])?$user_details[0]['st_country']:"",
							  "profile_desc"			=> "",		//added on 05Sept2014 by ghanshyam
							  "guideline_link"			=> "",		//added on 24sept2014 by ghanshyam
							  "orgcode"			    	=> "",
							   "joincoalition"           => array("")
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['organization'][$key] = $value;	
		}	
		
		$org_zipcode = explode('-',$data['organization']['zip']);
		if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
		{
			$data['organization']['zip'] = $org_zipcode[0];
		}
						
		if($this->input->post('action'))
		{
			$website = $this->input->post('organization_website');
			if(!empty($website)){
				$_POST['organization_website'] = "http://" . $website;
			}
			
			foreach ($form_field as $key => $value)
			{	
				$data['organization'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$org_zipcode = explode('-',$data['organization']['zip']);
			if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
			{
				$data['organization']['zip'] = $org_zipcode[0];
			}
			
			$org_links_array = $this->input->post('guideline_url'); 
			for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
			{  
				if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
				{					
					//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
				}
			}	
			
			$_POST['guideline_url'] = $org_links_array;
			
			$data['organization']['guideline_url']  = $_POST['guideline_url'];
			
			//print_r($_POST['guideline_url']);exit; //use for testing
			
			$this->form_validation->set_rules('orgname', 'Organization Name', 'trim|required');
			$this->form_validation->set_rules('address', 'Address', 'trim|required');
			$this->form_validation->set_rules('city', 'City', 'trim|required');
			$this->form_validation->set_rules('state', 'State', 'trim|required');
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
			$this->form_validation->set_rules('manager', 'Manager or Director', 'trim|required');
			$this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
			$this->form_validation->set_rules('email', 'Email', 'trim|required');
			$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
			//$this->form_validation->set_rules('paypal_email', 'Paypal Email', 'trim|valid_email');
			$this->form_validation->set_rules('st_guideline', 'Guidelines', 'trim');
			$this->form_validation->set_rules('guideline_url[]', 'Guideline Url', 'trim|callback_validdate_urls');
			$this->form_validation->set_rules('profile_desc', 'Profile Description', 'trim');
			
			$error = '';
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors().$error;
					if(isset($data['organization']['organization_website']) && $data['organization']['organization_website'] != ''){
					$data['organization']['organization_website'] = str_replace('http://','',$data['organization']['organization_website']);
					$data['organization']['organization_website'] = str_replace('https://','',$data['organization']['organization_website']);
					}
					$this->load->view('organization-shelter',$data);	
			}
			else
			{	
			
				$data['organization']['created_date'] = date("Y-m-d H:i:s");
				$org_details = array(	"in_user_id"			=> $this->session->userdata('userid'), 
										"st_org_type"			=> "S", 
										"in_shelter_id"			=> $this->session->userdata('shelter_id'), 
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'], 
										"st_additional_info"	=> $data['organization']['comments'], 
										"st_guideline"			=> $data['organization']['st_guideline'], 
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'],
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "0", 
										"in_deleted"			=> "0",
										"st_org_code"			=> $data['organization']['orgcode'], 
										);
				
				//$organization_id = $this->organization_model->add_organization($org_details);
				//$data['organization']['organization_id'] = $organization_id;
				if(isset($data['pending_org_details']['in_organization_id']) && !empty($data['pending_org_details']['in_organization_id'])){ 
				       $organization_id = $data['pending_org_details']['in_organization_id'];
				   }
				   else
				   { 
					   $organization_id =  $this->input->post('orgid'); //die; //$this->session->userdata('orgId'); die;
				   }
				    $orgstatus = $this->organization_model->check_orgid($organization_id,$orgtp='S'); //echo $this->input->post('orgid'); die;		
					if($orgstatus > 0){  
						//echo $this->input->post('orgid'); die;
						//echo $c3_certificate . '   '. $adoption_contract_file;die;
                    $this->organization_model->update_organization($organization_id,$c3_certificate='',$adoption_contract_file='',$shelter_id='');					
					$data['organization']['organization_id'] = $organization_id; 				 
					}
					if($orgstatus==0){
						//$organization_id = $this->organization_model->add_organization($org_details);
						//$data['organization']['organization_id'] = $organization_id;
						$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
						$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
					} 
				
				// org coalition add
				
				$joincoalition = $this->input->post('joincoalition');
			//echo '<pre>'; print_r($joincoalition); die;			
			if(count($joincoalition) > 0){
				for($i=0; $i<count($joincoalition); $i++){
			     if($joincoalition[$i] !=''){		 
					 
					 
			$coalition_details = array(	"in_organization_id" => $this->session->userdata('orgId'), 
										"in_coalition_id"	 => $joincoalition[$i],
										"dt_created"         => date('Y-m-d H:i:s')
									);	
			$check	=	$this->common_model->is_coalition_exists($this->session->userdata('orgId'),$joincoalition[$i]);	
			if($check == false)
			{					
						$this->organization_model->insertcoalition($coalition_details);	
			}
			
			
			    $coalition_admin_list = $this->common_model->get_coalition_admin($joincoalition[$i]);
				//echo '<pre>'; print_r($coalition_admin_list);die;		
				$coalition_name  = 	$this->common_model->get_coalition_name($joincoalition[$i]);
				// coalition admin email			
					
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("157");
					
					if(isset($email_details[0]['st_email_body']))
					{
						$templete  = $email_details[0]['st_email_body'];
						$templete  = str_replace("##user_name##",$coalition_admin_list[$i]['st_display_name'],$templete);
						$templete  = str_replace("##org_name##",$org_details['st_org_name'],$templete);
						$templete  = str_replace("##coaliation_name##",$coalition_name['st_coalition_name'],$templete);				
							
						$templete  = str_replace("##coaliation_admin_url##",$this->config->item('admin_base_url').'coalition',$templete);			
						$templete  = str_replace("##current_year##",date('Y'),$templete);
						
						
								
						for($a=0;$a<count($coalition_admin_list);$a++)
						{							
							   
								$strMail 	= 	$templete;
								$to			=	$coalition_admin_list[$a]['st_email'];
								$subject	=	$email_details[0]['st_email_subject'];
								$message	=	$strMail;

								$user_to_id = $this->common_model->get_user_id_by_email($to);
						
						        $message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
						        $message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);
								
								//$this->common_function->send_mail($this->email, $to, $subject, $message,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));							
						}
					}				
				// coalition admin email			
				 }
				}
			
			}
				// org coalition add
				
				
				
				
				$org_links_array = $this->input->post('guideline_url'); 
				for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
				{  
					$org_links_data = array();
					
					if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
					{					
						//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					
						$org_links_data = array(	"in_organization_id"	=> $organization_id, 
													"st_org_link"			=> $org_links_array[$links_cnt],
													"dt_created"			=> date("Y-m-d H:i:s"),  
													"in_deleted"			=> "0"
												);
						$this->organization_model->organization_links_detail($org_links_data);
					}
				}
				
				$guidelines_imgs = explode(",",$data['organization']['image_file']);
				//echo "<pre>";print_r($guidelines_imgs);die;
				if(!empty($guidelines_imgs))
				{
					for($q=0;$q<count($guidelines_imgs);$q++)
					{
						if($guidelines_imgs[$q]!='')
						{
							$upload_details = array("in_organization_id"	=> $organization_id,
													"st_file_name"			=> $guidelines_imgs[$q],
													"in_doc_type"			=> "1",
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
													);
							$this->organization_model->organization_images($upload_details);
						}
					}
				}
				
				//code for setting organization profile privacy starts 11sept2014 by ghanshyam
				if(isset($organization_id) && $organization_id > 0)
				{
					$org_privacy_setting_data 		= array();			
					
					$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
					
					$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
					$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
					$org_privacy_setting_data['in_public'] 			=	0;
					$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
					
					//print_r($org_privacy_setting_data);exit;
					$this->load->model('organization_privacy_setting_model');
					$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
				 }					
				//code for setting organization profile privacy ends 11sept2014 by ghanshyam
					
				$admin_list = $this->common_model->get_admin_list();
				$this->organization_request_email($admin_list,"Shelter",$data['organization']);
				$this->session->unset_userdata('sign_up_org_name');
				$this->session->unset_userdata('sign_up_org_zip');
				$this->session->set_flashdata('shelter_info', 'Your request has been successfully submitted for review!');
				redirect(base_url().'shelter-organization/');
					
			}
		}
		else
		{
			$data['pending_org_details'] = $this->organization_model->pending_org_details($orgType='S');			
			//echo "<pre>";print_r($data['pending_org_details']);die;
			if(isset($data['pending_org_details']['in_status']) &&  $data['pending_org_details']['in_status'] == 4){		
			$this->load->view('organization-shelter',$data);		
			return;
			}
			$this->load->view('organization-shelter',$data);			
		}
	}
	
	
	
	#=========================================================
	#	Function : friend_shelter_list
	#	Purpose  : Friends Shelter List
	#=========================================================		
	
	public function friend_shelter_list()
	{   
		$this->session->set_userdata('orgtype','FS');				
		$short_by = $this->uri->segment(2);
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 		= '';
		if($short_by=='')
		{
			$short_by = 'all';
		}
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';
			
		$rec_per_page = 80;
		if(empty($rec_per_page)) {
			$rec_per_page =	$this->config->item('per_page');	
		}
		if($this->input->post('action')=='search')
		{
			if($this->input->post('search')!='')
			{
				$this->session->set_userdata('search_fshelter',$this->input->post('search'));
			}
			else
			{
				$this->session->unset_userdata('search_fshelter');
			}
			
		}
		if($this->input->post('action')=='submit')
		{
			if($this->input->post('organization_list')!='')
			{
				/*$shelter_name = $this->organization_model->shelter_name($this->input->post('organization_list'));
				$this->session->set_userdata('shelter_name',$shelter_name['st_shelter_name']);
				$this->session->set_userdata('shelter_id',$this->input->post('organization_list'));
				redirect(base_url().'friend-of-shelter/');*/
				
				$records = $this->organization_model->shelter_used($this->input->post('organization_list'),"FS");
				//echo "<pre>";print_r($records);die;
				$shelter_name = $this->organization_model->shelter_name($this->input->post('organization_list'));
				$this->session->set_userdata('shelter_name',$shelter_name['st_shelter_name']);
				if(isset($records) && !empty($records))
				{
					$this->session->set_userdata('name',$records['st_director']);
					$this->session->set_flashdata('friend_shelter', 'Your request has been successfully submitted for review!');	
				}
				else
				{
					$this->session->set_userdata('shelter_name',$shelter_name['st_shelter_name']);
					$this->session->set_userdata('shelter_id',$this->input->post('organization_list'));
					redirect(base_url().'friend-of-shelter/');
				}
				
				
			}
			else
			{
				$this->session->set_flashdata('select', 'Please select shelter.');	
			}
			redirect(base_url().'friend-shelter-list/');
		}
		
		$shelter_list = $this->organization_model->friend_shelter_list($short_by,$limit,$rec_per_page);
		$data['shelter_list'] = $shelter_list;
		
		$totalrecord = $this->organization_model->friend_shelter_list_count($short_by);		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('front_end_url').'friend-shelter-list/';
		$config['base_url']		= $config['base_url'].$short_by.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['file_path'] = $this->config->item('file_path');
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Previous';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		// ------------------------ PAGINATION ENDS HERE ------------------------------
		
				
		$data['short_by'] = $short_by;
		$this->load->view('friends-of-shelter-list',$data);	
	}
	
	#=========================================================
	#	Function : friend_shelter_organization
	#	Purpose  : Join Friends of Shelter Organization
	#=========================================================		
	public function friend_shelter_organization()
	{   
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		
		$data = array();
		$data['Err_Msg'] 		= '';
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		$data['coalition']  = 	$this->common_model->get_coalition();
		$c3_certificate 		= '';
		$approval				= '';
		$approval_letter		= array();
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		if(!$this->session->userdata('shelter_id'))
		{
			redirect($this->config->item('base_url')."friend-shelter-list/");
		}
		//echo "<pre>";print_r($user_details[0]);die;
		
		$pending_org_cnt = $this->organization_model->check_org_status($this->session->userdata('userid'));
		if(isset($pending_org_cnt) && $pending_org_cnt > 0)	
		{
			redirect($this->config->item('base_url')."organization/verification");
		}
		
		$org_name               ='';
		if($this->session->userdata('sign_up_org_name'))
		{
			$org_name = $this->session->userdata('sign_up_org_name');
		}
		
		if(isset($user_details['0']['st_website']) && $user_details['0']['st_website'] != '')
		{
			$user_details['0']['st_website'] = str_replace('http://','',$user_details['0']['st_website']);
			$user_details['0']['st_website'] = str_replace('https://','',$user_details['0']['st_website']);
		}
		
		$form_field	=	array('org_type'				=> "FS",
							  'orgname'					=> $this->session->userdata('shelter_name'),
							  'eni'						=> "0",
							  '501c3_certified'			=> "",
							  'inserted_c3_certificate'	=> "",
							  'shelter_id'				=> $this->session->userdata('shelter_id'),
							  'address'					=> isset($user_details[0]['st_address1'])?$user_details[0]['st_address1']:"",
							  'address2'				=> isset($user_details[0]['st_address2'])?$user_details[0]['st_address2']:"",
							  'city'					=> isset($user_details[0]['st_city'])?$user_details[0]['st_city']:"",
							  'state'					=> isset($user_details[0]['st_state'])?$user_details[0]['st_state']:"",
							  'zip'						=> isset($user_details[0]['st_zip'])?$user_details[0]['st_zip']:"",
							  "manager"					=> ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),
							  //"image_file"				=> "",
							  "pphone"					=> isset($user_details[0]['st_primary_phone'])?$user_details[0]['st_primary_phone']:"",
							  "sphone"					=> isset($user_details[0]['st_secondary_phone'])?$user_details[0]['st_secondary_phone']:"",
							  "fax"						=> isset($user_details[0]['st_fax'])?$user_details[0]['st_fax']:"",
							  "email"					=> strtolower($this->session->userdata('email')),
							  "organization_website"	=> isset($user_details[0]['st_website'])?$user_details[0]['st_website']:"",
							  "comments"				=> "",
							  //"paypal_email"			=> "",
							  'country'					=> isset($user_details[0]['st_country'])?$user_details[0]['st_country']:"",
							  "guideline_image_file"	=> "",
							  "st_guideline"			=> "",
							  "approval_file_1"				=> "",
							  "profile_desc"			=> "",		//added on 05Sept2014 by ghanshyam
							  "guideline_link"			=> "",		//added on 24sept2014 by ghanshyam
							  "inserted_approval_file_1" =>"",
							  "orgcode"				     => "",
							  "joincoalition1"            => "",
							  "joincoalition2"            => "",
							  "joincoalition3"            => "",
							  "joincoalition4"            => "",
							  "joincoalition5"            => ""
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['organization'][$key] = $value;	
		}				
		
		$org_zipcode = explode('-',$data['organization']['zip']);
		if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
		{
			$data['organization']['zip'] = $org_zipcode[0];
		}
			
		if($this->input->post('action'))
		{	//echo $_FILES['approval_file_1']['name'];
			//echo "<pre>";print_r($this->input->post());
			//die;
			
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
			$website = $this->input->post('organization_website');
			if(!empty($website)){
				$_POST['organization_website'] = "http://" . $website;
			}
			
			foreach ($form_field as $key => $value)
			{	
				$data['organization'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$org_zipcode = explode('-',$data['organization']['zip']);
			if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
			{
				$data['organization']['zip'] = $org_zipcode[0];
			}
			
			$org_links_array = $this->input->post('guideline_url'); 
			for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
			{  
				if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
				{					
					//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
				}
			}	
			
			$_POST['guideline_url'] = $org_links_array;
			
			$data['organization']['guideline_url']  = $_POST['guideline_url'];
			
			//print_r($_POST['guideline_url']);exit; //use for testing
			
			$this->form_validation->set_rules('orgname', 'Organization Name', 'trim|required');
			$this->form_validation->set_rules('address', 'Address', 'trim|required');
			$this->form_validation->set_rules('city', 'City', 'trim|required');
			$this->form_validation->set_rules('state', 'State', 'trim|required');
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
			$this->form_validation->set_rules('manager', 'Manager or Director', 'trim|required');
			$this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
			$this->form_validation->set_rules('email', 'Email', 'trim|required');
			//$this->form_validation->set_rules('image_file', 'Approval letter', 'trim|required');
			//$this->form_validation->set_rules('approval_file_1', 'Approval letter', 'trim|required');
			$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
			//$this->form_validation->set_rules('paypal_email', 'Paypal Email', 'trim|valid_email');
			$this->form_validation->set_rules('st_guideline', 'Guidelines', 'trim');
			$this->form_validation->set_rules('guideline_url[]', 'Guideline Url', 'trim|callback_validdate_urls');
			$this->form_validation->set_rules('profile_desc', 'Profile Description', 'trim');
			
			$error = '';
			$upload_error = ''; 
			if($data['organization']['501c3_certified']!='' && isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']=='')
			{
				if($data['organization']['501c3_certified']!='' && $data['organization']['inserted_c3_certificate'] =='' )
				   $error .= "<p>501c3 Certificate is required.</p>";
			}
			if(isset($_FILES['approval_file_1']) && $_FILES['approval_file_1']['name']=='')
			{
				if(isset($data['organization']['inserted_approval_file_1']) && $data['organization']['inserted_approval_file_1'] == '')
				   $error .= "<p>Approval letter from the shelter is required.</p>";
			}
			#=====================Upload Certificate=================#
			if(isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']!='')
			{
				if($this->organization_model->upload_files('c3_certificate')){
					$arrImageInfo = $this->upload->data();
					$c3_certificate = $arrImageInfo['file_name'];
					
				}else{
					//$error .= "501C3 Certified error : ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			
			#===================== End Upload Contract=================#
			
			#=====================Approval Letter form Shelter=================#
			//echo "<pre>";print_r($_FILES);die;
			for($a=1;$a<=1; $a++)
			{
				if(isset($_FILES['approval_file_'.$a]) && $_FILES['approval_file_'.$a]['name']!='')
				{
					if($this->organization_model->upload_approval_files('approval_file_'.$a)){
						$arrImageInfo = $this->upload->data();
						$approval = $arrImageInfo['file_name'];
						$approval_letter[] = $arrImageInfo['file_name'];
						
					}else{
						$this->upload->display_errors();
						//$error .= "<p>Approval latter ".$a." is invalid.</p>" ;
						$error .= "<p>Approval letter is invalid.</p>" ;
					}
				}
			}
			
			#===================== End Upload Contract=================#
			
			//if($this->form_validation->run()==FALSE ||$error!='')
			if($this->form_validation->run()==FALSE ||$error!='' || $upload_error!='')	
			{
					$data['Err_Msg'] = validation_errors().$error;
					$data['upload_error'] = $upload_error;
					if(isset($data['organization']['organization_website']) && $data['organization']['organization_website'] != ''){
					$data['organization']['organization_website'] = str_replace('http://','',$data['organization']['organization_website']);
					$data['organization']['organization_website'] = str_replace('https://','',$data['organization']['organization_website']);
					}
					$this->load->view('friends-of-shelter',$data);	
			}
			else
			{			
				//echo "<pre>";print_r($data['organization']['image_file']);die;
				//$approval_letter = explode(",",$data['organization']['image_file']);
				$approval_letter = $_FILES['approval_file_1']['name'];
				//echo "<pre>";print_r($approval_letter);die;
				
				if(isset($c3_certificate) && !empty($c3_certificate))
				{
					$c3_certificate_file_name = $c3_certificate;
				} else if(isset($data['organization']['inserted_c3_certificate']) && !empty($data['organization']['inserted_c3_certificate']))
				{
					$c3_certificate_file_name = $data['organization']['inserted_c3_certificate'];
				} else {
					$c3_certificate_file_name = '';
				}
				if(!empty($approval) && isset($approval))
				{
					$approval_shelter_letter = $approval;
				} else if(!empty($data['organization']['inserted_approval_file_1']) && isset($data['organization']['inserted_approval_file_1']))
				{
					$approval_shelter_letter = $data['organization']['inserted_approval_file_1'];
				} else {
					$approval_shelter_letter = '';
				}		
				$data['organization']['c3_certificate'] 		= $c3_certificate_file_name;		
				$data['organization']['approval_leter'] 		= $approval_shelter_letter;	
				$data['organization']['created_date']			= date("Y-m-d H:i:s");
				$org_details = array(	"in_user_id"			=> $this->session->userdata('userid'), 
										"st_org_type"			=> "FS", 
										"in_shelter_id"			=> $this->session->userdata('shelter_id'), 
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_org_ein"			=> $data['organization']['eni'], 
										"st_has_501c3"			=> ($data['organization']['501c3_certified']=='1')?"Y":"N",  
										"st_organization_501c3"	=> $data['organization']['c3_certificate'], 
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'],
										"st_guideline"			=> $data['organization']['st_guideline'],  
										"st_additional_info"	=> $data['organization']['comments'],
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'], 
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "0", 
										"in_deleted"			=> "0",
										"st_org_code"			=> $data['organization']['orgcode'], 
										);											
				//$organization_id = $this->organization_model->add_organization($org_details);
				//$data['organization']['organization_id'] = $organization_id;
				
				
				
				if(isset($data['pending_org_details']['in_organization_id']) && !empty($data['pending_org_details']['in_organization_id'])){ 
				       $organization_id = $data['pending_org_details']['in_organization_id'];
				   }
				   else
				   { 
					   $organization_id =  $this->input->post('orgid'); //die; //$this->session->userdata('orgId'); die;
				   }
				    $orgstatus = $this->organization_model->check_orgid($organization_id,$orgtp='FS'); //echo $this->input->post('orgid'); die;		
					if($orgstatus > 0){  
						//echo $this->input->post('orgid'); die;
						//echo $c3_certificate . '   '. $adoption_contract_file;die;
                    //$this->organization_model->update_organization($organization_id,$c3_certificate='',$adoption_contract_file='');
					$shelter_id = $this->session->userdata('shelter_id');					
					$this->organization_model->update_organization($organization_id,$c3_certificate_file_name,$adoption_contract_file='',$shelter_id='');	
					$data['organization']['organization_id'] = $organization_id; 				 
					}
					if($orgstatus==0){
						//$organization_id = $this->organization_model->add_organization($org_details);
						//$data['organization']['organization_id'] = $organization_id;
						$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
						$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
					} 
					
					// org coalition add
				
				//$joincoalition = $this->input->post('joincoalition');
				$joincoalition = $this->input->post('counter2');
				
			//echo '<pre>'; print_r($_POST); die;			
			if($joincoalition > 0){ 
				for($i=1; $i<=5; $i++){ 
					$coalition   = 'joincoalition'.$i;						
			     if($_POST[$coalition]!=''){		 
					
					 
			$coalition_details = array(	"in_organization_id" => $this->session->userdata('orgId'), 
										"in_coalition_id"	 => $_POST[$coalition],
										"dt_created"         => date('Y-m-d H:i:s')
									);	
           							
			//echo '<pre>'; print_r($coalition_details); die;
			$coaid=$_POST[$coalition];
			$check	=	$this->common_model->is_coalition_exists($this->session->userdata('orgId'),$coaid);
			
			if($check == false)
			{					
					$this->organization_model->insertcoalition($coalition_details);	
			}		
				 }
				}
			
			}
				// org coalition add
				
				
				
				
				# in Need to insert tbl_organization_upload
				//echo $approval_letter;exit; //use for testing
				/*if(!empty($approval_letter))
				{   
				
				    $file_ext = preg_replace('/^.*\.([^.]+)$/D', '$1', $approval_letter);				   
					$file_name = time(basename($approval_letter,'.'.$file_ext)); 
					$approve_file=$file_name.'.'.$file_ext; 
					//for($q=0;$q<count($approval_letter);$q++)
					//{
						//if($approval_letter[$q]!='')
						//{
							$upload_details = array("in_organization_id"	=> $organization_id,
													"st_file_name"			=> $approve_file,
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
													);
							$this->organization_model->shelter_approval_letter($upload_details);
						//}
					//}
				}*/
				
				if(!empty($approval_shelter_letter))
				{   
				
				   $verify_approval_letter = $this->organization_model->verify_shelter_approval($this->session->userdata('orgId'));
					if(count($verify_approval_letter)>0)
					{
						$upload_details = array("st_file_name" => $approval_shelter_letter);
						$this->organization_model->update_approval_letter($upload_details,$verify_approval_letter['in_org_upload_id']);
					
					}else {	
						$upload_details = array("in_organization_id"	=> $this->session->userdata('orgId'),
											"st_file_name"			=> $approval_shelter_letter,
											"dt_created"			=> date("Y-m-d H:i:s"),
											"in_deleted"			=> "0");
						$this->organization_model->shelter_approval_letter($upload_details);
					}
				}
				
				$org_links_array = $this->input->post('guideline_url'); 
				for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
				{  
					$org_links_data = array();
					
					if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
					{					
						//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
						$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
					
						$org_links_data = array(	"in_organization_id"	=> $organization_id, 
													"st_org_link"			=> $org_links_array[$links_cnt],
													"dt_created"			=> date("Y-m-d H:i:s"),  
													"in_deleted"			=> "0"
												);
						$this->organization_model->organization_links_detail($org_links_data);
					}
				}
				
				
				$guidelines_imgs = explode(",",$data['organization']['guideline_image_file']);
				//echo "<pre>";print_r($guidelines_imgs);die;
				/*if(!empty($guidelines_imgs))
				{
					for($q=0;$q<count($guidelines_imgs);$q++)
					{
						if($guidelines_imgs[$q]!='')
						{
							$upload_details = array("in_organization_id"	=> $organization_id,
													"st_file_name"			=> $guidelines_imgs[$q],
													"in_doc_type"			=> "1",
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
													);
							$this->organization_model->organization_images($upload_details);
						}
					}
				}*/
				
				//code for setting organization profile privacy starts 11sept2014 by ghanshyam
				if(isset($organization_id) && $organization_id > 0)
				{
					$org_privacy_setting_data 		= array();			
					
					$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
					
					$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
					$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
					$org_privacy_setting_data['in_public'] 			=	0;
					$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
					
					//print_r($org_privacy_setting_data);exit;
					$this->load->model('organization_privacy_setting_model');
					$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
				 }

				if(!empty($data['organization']['zip']))
				{
					$zip_code_state = $this->common_model->get_zipcode_info($data['organization']['zip']);
					if($zip_code_state['state_prefix']=='CO')
					{
						//$to = array($data['organization']['st_email_address'],'support@doobert.zendesk.com');
						$colorado_email_notification = $this->common_model->get_email_containt("84");
						$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
						$to = array($data['organization']['email']);
						if(isset($colorado_email_notification[0]['st_email_body']))
						{
							$message  = $colorado_email_notification[0]['st_email_body'];
							$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
							$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
							$message  = str_replace("##display_name##",$manager_name,$message);
							$message  = str_replace("##DONATION##",$donation,$message);
							$subject  = $colorado_email_notification[0]['st_email_subject'];
							$category = $colorado_email_notification[0]['st_category'];
							$this->mail_notify_colorado($to,$subject,$category,$message);	
						}
						$this->notify_mailto_zendesk($manager_name);	
					}	 
				}	
				 
				// code for updating login user phone no and zip in the org sign up task 14 june'16
				if($this->session->userdata('org_name'))
				{
					$this->load->model('user_model');
					$address_details	=	$this->common_model->getaddress($data['organization']['zip']);
					$profile_info = array(
                    "st_city" => isset($address_details['city']) ? $address_details['city'] : '',
                    "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
                    "st_zip" => $data['organization']['zip'],
                    "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
                    "st_primary_phone" => $data['organization']['pphone'],
                    "dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1"
					);
					$this->user_model->update_user_profile_setting($profile_info,$this->session->userdata('userid'),'tbl_user_profile');	
					// hear need to update the users table to make status 1 
					$this->user_model->update_user_info(array("in_status"=>1),$this->session->userdata('userid'),'tbl_users');
				}
				
				//code for setting organization profile privacy ends 11sept2014 by ghanshyam
				
				$admin_list = $this->common_model->get_admin_list();
				$this->organization_request_email($admin_list,"Friend Of Shelter",$data['organization']);
				$this->session->unset_userdata('sign_up_org_name');
				$this->session->unset_userdata('sign_up_org_zip');
				$this->session->unset_userdata('orgId');
				$this->session->set_flashdata('friend_shelter_info', 'Your request has been successfully submitted for review!');
				redirect(base_url().'friend-of-shelter/');					
			}
		}
		else
		{
			
			$data['pending_org_details'] = $this->organization_model->pending_org_details($orgType='FS');			
			//echo "<pre>";print_r($data['pending_org_details']);die;
			if(isset($data['pending_org_details']['in_status']) &&  $data['pending_org_details']['in_status'] == 4){		
			$approval_letter = $this->organization_model->verify_shelter_approval($data['pending_org_details']['in_organization_id']);
			if(count($approval_letter)>0)
			{
				$data['approval_letter'] =$approval_letter['st_file_name'] ;
			}
			$data['upload_doc'] = $this->organization_model->get_org_upload_doc($data['pending_org_details']['in_organization_id']);
			$this->session->unset_userdata('orgId');		
			$this->session->set_userdata('orgId',$data['pending_org_details']['in_organization_id']);
			$this->load->view('friends-of-shelter',$data);		
			return;
			}
			$this->load->view('friends-of-shelter',$data);			
		}
	}
	
	#=========================================================
	#	Function : get_animal_breed
	#	Purpose  : Get Animal breeds by id
	#=========================================================	
	
	public function get_animal_breed() {
		$data['get_animal_breed']  = $this->common_model->get_animal_breed($this->input->post('animal_type'));
		echo json_encode($data);
	}
	#=========================================================
	#	Function : validdate_urls
	#	Purpose  : Call Back function url is validor not
	#=========================================================	
	function validdate_urls($str) {
		if($str=='')
		{
			return TRUE;
		}
		$pattern = "|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i";
        if (!preg_match($pattern, $str)){
            $this->form_validation->set_message('validdate_urls', 'Invalid URL.');
            return FALSE;
		}else {
			return TRUE;
		}
	}
	
	#=========================================================
	#	Function : organization_request_email
	#	Purpose  : Send email to admin for request organization
	#=========================================================		
	function organization_request_email($admin_list,$organization_type,$org_details)
	{
		//echo "<pre>";print_r($admin_list);die;
		/*$data['org_details'] 	= $org_details;
		$data['org_type']		= $organization_type;
		$this->load->library('email');
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		$this->email->subject('Doobert Organization Request');
		if($_SERVER['HTTP_HOST']!='crystal9')
		{
			$this->email->bcc($this->config->item('bcc_email_id'));
		}
		
		$email_details = $this->common_model->get_email_containt("3");
		if(isset($email_details[0]['st_email_body']))
		{
			$templete = $email_details[0]['st_email_body'];
			$templete  = str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  = str_replace("##user_email##",$org_details['email'],$templete);
			$templete  = str_replace("##organization_name##",$org_details['orgname'],$templete);
			$templete  = str_replace("##date_submitted##",date("m-d-Y",strtotime($org_details['created_date'])) ,$templete);
			$this->email->subject($email_details[0]['st_email_subject']);
			$strMail = $templete;
			//echo "<pre>";print_r($templete);die;
			for($a=0;$a<count($admin_list);$a++)
			{
				$data['admin_name']		= $admin_list[$a]['name'];
				$this->email->to($admin_list[$a]['email_address']);
				//$strMail = $this->load->view('email/org_details',$data,true);
				$this->email->message($strMail);
				$this->email->send();
				//echo $this->email->print_debugger();die;	
			}		
		}*/
		
		$data['org_details'] 	= $org_details;
		$data['org_type']		= $organization_type;
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("3");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$templete  = $email_details[0]['st_email_body'];
			$templete  = str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  = str_replace("##user_email##",$org_details['email'],$templete);
			$templete  = str_replace("##DONATION##",$donation,$templete);
			$templete  = str_replace("##application_id##",$org_details['organization_id'],$templete);
			$templete  = str_replace("##organization_name##",trim($org_details['orgname']),$templete);
			//$templete  = str_replace("##organization_name##",$org_details['orgname'],$templete);
			//$templete  = str_replace("##date_submitted##",date("m-d-Y",strtotime($org_details['created_date'])) ,$templete);
			$templete  = str_replace("##admin_url##",$this->config->item('base_url').'administration.php/pending_organizations/pending_organization_view/'.$org_details['organization_id'],$templete);
			$templete  = str_replace("##org_id##",$data['org_details']['organization_id'],$templete);
			$templete  = str_replace("##current_year##",date('Y'),$templete);	
			
			$full_name	=	$this->session->userdata('user_name').' '.$this->session->userdata('last_name');
							
			for($a=0;$a<count($admin_list);$a++)
			{
				//if($a>1){ break;}
				 $permission = unserialize($admin_list[$a]['st_permission']); 				
				if(isset($permission) &&  !empty($permission) && in_array('New_Organization_Creation',$permission))
				{
				
					$strMail 	= 	$templete;
					$to			=	$admin_list[$a]['email_address'];
					//$to			=	'ghanshyam.maurya@pulsesolutions.net';
					$subject	=	$email_details[0]['st_email_subject'];
					$message	=	$strMail;
					$category  =    $email_details[0]['st_category'];
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $full_name,$this->email,$category, $this->session->userdata('email'));
				}
			}
		}
		
	}
	
	#=========================================================
	#	Function : join_organization
	#	Purpose  : For joining orgazation
	#=========================================================
	
	public function join_organization() {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		//if profile is incomplete then redirect to profile page
		if($this->session->userdata('userid')) {
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			if(isset($user_details) && ($user_details[0]['in_status'] == 0 || $user_details[0]['in_status'] == ''))
			{
				$this->session->set_flashdata('incomplete_profile_error', 'Please complete general details to proceed.');
				redirect($this->config->item('base_url')."my-profile/");
			}
			else
			{
				$data = array();
		
				$sort_value = '';
				$search_value = '';
				
				$this->load->library('pagination');
				
				$config = array();
				$config["base_url"] 		= base_url().'organization/join_organization/';
				
				$config["per_page"]	 		= $this->config->item('records_per_page');
				$config["uri_segment"] 		= 3;
			
				$config['first_link'] 		= FALSE;
				$config['last_link'] 		= FALSE;
				
				$config['full_tag_open'] 	= '<ul class="pagination">';
				$config['full_tag_close'] 	= '</ul>';
				
				$config['prev_link'] 		= 'Prev';
				$config['prev_tag_open'] 	= '<li class="prev">';
				$config['prev_tag_close'] 	= '</li>';
				
				$config['next_link'] 		= 'Next';
				$config['next_tag_open'] 	= '<li class="next">';
				$config['next_tag_close'] 	= '</li>';
				
				$config['num_tag_open'] 	= '<li>';
				$config['num_tag_close'] 	= '</li>';
				
				$config['cur_tag_open']		= '<li class="active"><a href="">';
				$config['cur_tag_close'] 	= '</a></li>';
				
				if($this->input->post('frm_action') == 'search_value') {
					//echo "<pre>";print_r($_POST);die;
					//echo $this->input->post('search_txt');
					//echo strlen($this->input->post('search_txt'));
					if($this->session->userdata('search_txt'))
						$this->session->unset_userdata('search_txt');
					
					if($this->session->userdata('sort_value'))
						$this->session->unset_userdata('sort_value');
							
						$search_value = $this->input->post('search_txt');
						$this->session->set_userdata('search_txt',$search_value);
						//echo strlen($this->session->userdata('search_txt'));die;
						
						$sort_value = $this->input->post('sort_by');
						$this->session->set_userdata('sort_value',$sort_value);
				} else {
					if($this->session->userdata('search_txt'))
						$search_value	= $this->session->userdata('search_txt');
					else
						$search_value	= '' ;
						
					if($this->session->userdata('sort_value'))
						$sort_value	= $this->session->userdata('sort_value');
					else
						$sort_value	= '';
				}
				
				
				//Pagination methods.
				$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
				
				$data['organization_list'] 	= $this->organization_model->join_organization($config["per_page"],$page,$sort_value,trim(addslashes($search_value)),$this->session->userdata('userid'));
				
				//added by ghanshyam on 11Nov2014 to get already joined org
				$data['alredy_organization_list'] 	= $this->organization_model->already_join_organization($config["per_page"],$page,$sort_value,trim(addslashes($search_value)),$this->session->userdata('userid'));
				
				//Getting total rows
				$config["total_rows"] 	= $data["organization_list"]['num_rows'];
				
				//Initialize pagination
				$this->pagination->initialize($config);
				
				$data["links"] 			= $this->pagination->create_links();
				$data['total_data'] 	= $config["total_rows"];
				$data['total_pages'] 	= floor($config["total_rows"]/$config["per_page"]);
				$data['currentPage'] 	= floor(($this->uri->segment(3)/$config['per_page']) + 1);
				$data['per_page']		= $config["per_page"];
				
				$this->load->view('join-organization',$data);
			}
		}		
	}
	
	#=========================================================
	#	Function : join_organization_as
	#	Purpose  : For joining orgazation as
	#=========================================================
	
	public function join_organization_as($id) {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data['user_data'] = $this->organization_model->get_org_details($id);
		
		if($this->input->post('frm_action') == 'submit_btn') {
			$join_as = array();
			$join_as = $this->input->post('join_as');
			
			if(empty($join_as)) {
				$this->session->set_flashdata('err_msg','Please select join us');
				redirect(base_url().'organization/join_organization_as/'.$id);
			}
			
			$join_as_info = array(	'in_organization_id'	=>	$this->uri->segment(3),
									'in_user_id'			=>	$this->session->userdata('userid'),
									'st_transport_cood'		=>	(in_array('transport_coordinator',$join_as))?'Y':'N',
									'st_fundraiser'			=>	(in_array('fundraiser',$join_as))?'Y':'N',
									'st_animal_profile'		=>	(in_array('animal_profile_manager',$join_as))?'Y':'N',
									'st_notes'				=>	$this->input->post('notes'),
									'dt_created'			=>	date('Y-m-d H:i:s'),
									'in_status'				=>	'0'
									);
			
			$data['join_as'] = $this->organization_model->join_as($join_as_info);
			
			if($data['join_as'] == 1) {
				
				//Join Organization Notification Feed
				/*$data['notification'] = array(	'in_organization_id'	=>	$this->uri->segment(3),
												'in_user_id'			=>	$this->session->userdata('userid'),
												'in_type'				=>	15,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'dt_created'			=>	date('Y-m-d H:i:s'),
												'in_deleted'			=>	0
											);
				$data['notification_data'] = $this->organization_model->join_org_notification($data['notification']);*/
				
				//Sending email
				$this->load->library('email');
				/*$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
				
				$this->email->to($data['user_data']['st_email']);
				
				if($_SERVER['HTTP_HOST']!='crystal9') {
					$this->email->bcc($this->config->item('bcc_email_id'));
				}*/
				
				//Getting email body
				$email_body = $this->common_model->get_email_containt('13');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				
				
				//$this->email->subject(str_replace('##organization_display_name##',$data['user_data']['st_org_name'],$email_body[0]['st_email_subject']));
				if(!empty($data['user_data'])) {
					$patterns 	= array('%##url##%','%##organization_owner_display_name##%','%##user_display_name##%','%##organization_display_name##%','%##review_url##%');
					$replacements = array(base_url(),$data['user_data']['st_display_name'].' '.$data['user_data']['st_last_name'],ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),$data['user_data']['st_org_name'],base_url().'user-profile/'.$this->session->userdata('userid').'/'.$id);
					$content = preg_replace($patterns, $replacements, $email_body[0]['st_email_body']);
					/*$this->email->message($content);
					$this->email->send();*/
					
					$to			=	$data['user_data']['st_email'];
					$subject	=	str_replace('##organization_display_name##',$data['user_data']['st_org_name'],$email_body[0]['st_email_subject']);
					$content	=	str_replace('##DONATION##',$donation,$content);
					
					$message	=	$content;
					$category   =   $email_body[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);
						
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		

					$send_email = 1;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_body[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					}
				}
				
				$this->session->set_flashdata('message','Your request has been successfully submitted for review!');
				redirect(base_url().'organization/join_organization_as/'.$id);
			} else {
				$this->session->set_flashdata('error','Some error occured in this process, Please try again!');
				redirect(base_url().'organization/join_organization_as/'.$id);
			}
		}
		
		$this->load->view('organization-join-as',$data);
	}
	
	#=========================================================
	#	Function : join_organization_as
	#	Purpose  : For joining orgazation as
	#=========================================================
	
	public function ownership_request() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$this->load->library('pagination');
		
		$config = array();
		$config["base_url"] 		= base_url().'organization/ownership_request/';
		
		$config["per_page"]	 		= $this->config->item('records_per_page');
		$config["uri_segment"] 		= 3;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		//Pagination methods.
		$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
		
		$data['ownership_req'] = $this->organization_model->get_all_ownership_req($config["per_page"],$page,$this->session->userdata('org_id'),$this->session->userdata('userid'));
		
		//Getting total rows
		$config["total_rows"] 	= $data["ownership_req"]['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] 			= $this->pagination->create_links();
		$data['total_data'] 	= $config["total_rows"];
		$data['total_pages'] 	= floor($config["total_rows"]/$config["per_page"]);
		$data['currentPage'] 	= floor(($this->uri->segment(3)/$config['per_page']) + 1);
		$data['per_page']		= $config["per_page"];
		
		$this->load->view('transfer-ownership-list-front',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	owner_organization_details
	#	Purpose		:	Processing ownership request
	# *******************************************************************************************
	
	public function owner_organization_details($org_id) {
		/*if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}*/
		
		if(!$this->session->userdata('userid'))
		{ 
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];	
			$this->session->set_userdata('url_data',$url);
			redirect($this->config->item('base_url'));
		}
		
		$user_id		= $this->uri->segment(2);
		$org_id = $this->uri->segment(3);
		//if($this->session->userdata('userid')) {
			/*$this->session->set_userdata('userid',$org_id);
			$get_org_details = $this->org_info_model->organization_profile($this->session->userdata('org_id'));
			isset($get_org_details['st_org_name'])?$this->session->set_userdata('org_name',$get_org_details['st_org_name']):'';*/
		//}
		
		$data = array();
		
		$data['organization_id'] = $org_id;
		
		$data['org_profile'] = $this->organization_model->get_org_details_for_ownership($org_id);
		
		if(empty($data['org_profile'])) {
			redirect(base_url().'organization/ownership_request');
		}
		
		$data['org_name'] = $data['org_profile']['st_org_name'];
		
		$data['guideline_links_details'] = $this->organization_model->get_guideline_links($org_id);
		$data['organization_files'] = $this->organization_model->get_org_guideline_files($org_id);
		
		$this->load->model('organization_privacy_setting_model');
		$data['organization_privacy_setting_details'] 	= $this->organization_privacy_setting_model->get_organization_privacy_setting_by_org_id($org_id);

		$data['Err_Msg'] = '';
		if(empty($data['org_profile'])) {
			redirect(base_url());
		}
		$form_field	=	array('txtyourname'			=> "",
							  "txtamount"			=> "",
							  "extra_amt_doobert"	=> ""
							  
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['post_data'][$key] = $value;	
		}
		if($this->input->post('action'))
		{
			foreach ($form_field as $key => $value)
			{	
				$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			//echo "<pre>";print_r($data['post_data']);die;
				$this->form_validation->set_rules('txtyourname', 'Name', 'trim|required');
				$this->form_validation->set_rules('txtamount', 'Amount', 'trim|required|numeric');	
			
			
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('ownership-transfer-requests-organizattion-front',$data);	
			}
			else
			{
				//echo "<pre>";print_r($this->input->post());die;
				$cancel_url  = "http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
				//echo $cancel_url;die;
				$amount  = $data['post_data']['txtamount'];
				$doobert_amount  = (5*$amount)/100;
				$actual_amount	 = $amount-$doobert_amount;
				$full_amount	 = $amount;
				if($data['post_data']["extra_amt_doobert"]!='')
				{
					$doobert_amount  = $doobert_amount;
					$actual_amount	 = $amount;
					$full_amount	 = $amount+ $doobert_amount;
				}
				$this->session->set_userdata('org_thank_you',$org_id);
				$insert_data = array("in_organization_id"	=> $org_id,
									 "st_donar_name"		=> $data['post_data']['txtyourname'],
									 "in_donation_amount"	=> $actual_amount,
									 "st_status"			=> "0",
									 "st_doobert_amount"	=> $doobert_amount,
									 "dt_created"			=> date("Y-m-d Hi:s"),
									 "in_deleted"			=> "0");
				$donation_id = $this->organization_model->add_org_donation($insert_data);
				#=================================Paypal Payment Process=================================#
				$paypal_details = array("paypal_email"		=> $data['org_profile']['st_paypal_email'],
										"doobert_amount"	=> $doobert_amount,
										"user_amount"		=> $actual_amount,
										"fullamount"		=> $full_amount,
										"tracking_id"		=> "org_donation".$donation_id,
										"st_custom_url"		=> $cancel_url,
										"thank_you"			=> $this->config->item('base_url')."organization/thank_you/"
										);					 					 
				$paypal_error = $this->paypal_payment($paypal_details);	
				if(isset($paypal_error['error']) && !empty($paypal_error['error']))
				{  
					$data['Err_Msg'] = $paypal_error['error'];
					$this->load->view('ownership-transfer-requests-organizattion-front',$data);
				}
				#==========================================End===========================================#
			}
		}
		else
		{ 
			$this->load->view('ownership-transfer-requests-organizattion-front',$data);
		}			
		
	}
	
	# *******************************************************************************************	
	#	Function	:	edit_org_for_transfer
	#	Purpose		:	Update Organization for transefer
	# *******************************************************************************************
	
	public function edit_org_for_transfer($org_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		// update query start
		$user_details	=	$this->common_model->user_profile($this->session->userdata('userid'));
		
		//echo '<pre>'; print_r($user_details['st_display_name']); die;
		
		$org_details = array("in_user_id"			=> $this->session->userdata('userid'), 									
                    		 "st_director"			=> $user_details['st_display_name'].' '.$user_details['st_last_name'],  
                    		 "st_email_address"		=> $user_details['st_email'],  
                    		 "st_primary_phone"		=> $user_details['st_primary_phone'],  
                    );                                      
                                        
 		$this->organization_model->edit_org($org_details,$org_id);		
		// update query end
		
		
		$data['edit_org_profile'] = $this->organization_model->organization_profile_for_transefer($org_id);
		$data['organization_id'] = $org_id;
		
		if(empty($data['edit_org_profile'])) {
			redirect(base_url().'organization/ownership_request');
		}
		
		$data['org_name'] = $data['edit_org_profile']['st_org_name'];
		
		if($this->input->post('frm_action') == 'frm_post') {
			//Validation rules
			
			$req_fields = array(	array('field'   => 'address',	'label'  => 'Addresss',		'rules' => 'required|trim'),
									array('field'   => 'city', 		'label'  => 'City', 		'rules' => 'required|trim'),
									array('field'   => 'state', 	'label'  => 'State', 		'rules' => 'required|trim'),
									array('field'   => 'zip',		'label'  => 'Zip',			'rules' => 'required|trim'),
									array('field'   => 'manager', 	'label'  => 'Manager Name', 		'rules' => 'required|trim'),
									array('field'   => 'pphone',	'label'  => 'Primary phone','rules' => 'required|trim'),
									array('field'   => 'email', 	'label'  => 'Email', 		'rules' => 'required|trim'),
									array('field'   => 'organization_website',	'label'  => 'Organization Website','rules' => 'callback_validate_urls|trim')
		            			);

			$this->form_validation->set_rules($req_fields);
		}
		if($this->form_validation->run() == FALSE) {
			// Validation error				
			$data['error_msg'] = validation_errors();
		
			$this->load->view('edit-organization-profile-for-transfer-front',$data);
		} else {
			
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
			//Updating organization data
			$data['org_data'] = array(	'st_address1'				=>	$this->input->post('address'),
										'st_city'					=>	$this->input->post('city'),
										'st_state'					=>	$this->input->post('state'),
										'st_country'				=>	$this->input->post('country'),
										'st_zip'					=>	$this->input->post('zip'),
										'st_director'				=>	$this->input->post('manager'),
										'st_primary_phone'			=>	$this->input->post('pphone'),
										'st_email_address'			=>	(strstr('http://',$this->input->post('email') ))?str_replace('http://','',$this->input->post('email')):$this->input->post('email'),
										'st_website'				=>	$this->input->post('organization_website'),
										'in_modified_by'			=>	$this->session->userdata('userid'),
										'in_user_id'				=>	$this->session->userdata('userid'),
										'in_created_by'				=>	$this->session->userdata('userid'),
										'dt_modified'				=>	date('Y-m-d H:i:s')
									);
									
			$num_rows1 = $this->organization_model->edit_org($data['org_data'],$org_id);
			
			//Updating transefer request data
			$data['ownership_data'] = array('in_accepted_by'	=>	$this->session->userdata('userid'),
											'dt_modified'		=>	date('Y-m-d H:i:s')
											);
			$num_rows2 = $this->organization_model->org_transefer_confirm($data['ownership_data'],$org_id);
			
			//Decline all other requests
			$get_all_ownership_for_org = $this->organization_model->get_all_ownership_for_org($org_id);
			
			foreach($get_all_ownership_for_org as $row) {
				$data['ownership_data'] = array('in_deleted' => 1,'in_status' => 3);
				$this->organization_model->decline_other_req($row['in_transfer_id'],$data['ownership_data']);
			}
			//End Decline all other requests
			
			if($num_rows1 == 1 && $num_rows2 == 1) {
				$this->session->set_userdata('transefer_ownership_front_success','yes');
				redirect(base_url().'organization/owner_organization_details/'.$org_id);
			}
		}
		
	}
	
	# *******************************************************************************************	
	#	Function	:	organization_profile	
	#	Purpose		:	Getting details of organization
	# *******************************************************************************************
	
	public function organization_profile_details($org_id) {
		/*if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}*/
		
		$data = array();
		//Getting detail sof organization
		$data['success']='';
		$data['org_profile'] = $this->organization_model->organization_profile($org_id);
		//echo '<pre>'; print_r($data['org_profile']); die;
		
		if($data['org_profile']['in_status']!='1') {
			redirect($this->config->item('base_url'));
		}
		
		$data['guideline_links_details'] = $this->organization_model->get_guideline_links($org_id);
		$data['organization_files'] = $this->organization_model->get_org_guideline_files($org_id);
		$data['transport_list'] = $this->organization_model->get_all_transport_for_org($org_id);
		$membership_status = $this->common_model->check_org_arpa($org_id);
		
		$st_coverage_area = $this->org_info_model->getCoordinates($org_id);
		if(!empty($st_coverage_area))
		{
			$data['coordinates'] = $st_coverage_area['st_coverage_area'];
			$data['center'] = $st_coverage_area['st_map_center'];
			$data['zoom'] = $st_coverage_area['st_map_zoom'];
		}
		
				
		if(isset($membership_status) && count($membership_status) > 0)
		{
					$member_ship_status = $membership_status['in_membership'];
					if($member_ship_status == 1)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/silver/'.$membership_status['in_arpa_org_id'].'_198_silver.png';			
					}
					 else if($member_ship_status == 2)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/gold/'.$membership_status['in_arpa_org_id'].'_198_gold.png';
					}
					else if($member_ship_status == 3)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/platinum/'.$membership_status['in_arpa_org_id'].'_198_plat.png'; 
					}
					else {
						$image_path_apra = '';
					}	
		} else {
						$image_path_apra = '';
				}

		$data['image_path_apra'] = $image_path_apra;				
		
		$this->load->model('organization_privacy_setting_model');
		$data['organization_privacy_setting_details'] 	= $this->organization_privacy_setting_model->get_organization_privacy_setting_by_org_id($org_id);				
		
		$data['Err_Msg'] = '';
		if(empty($data['org_profile'])) {
			redirect(base_url());
		}
		$form_field	=	array('txtyourname'			=> "",
							  "txtamount"			=> "",
							  "extra_amt_doobert"	=> ""
							  
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['post_data'][$key] = $value;	
		}
		if($this->input->post('disaster_mode') && $this->input->post('disaster_mode')=='YES')
		{		
			
			
				
			$name=$this->input->post('name');
			$email=$this->input->post('email');			
			$phone=$this->input->post('phone');
			$location=$this->input->post('location');
			$comment=$this->input->post('comment');
			$receiveremail=$this->input->post('receiveremail');
			$receivername=$this->input->post('receivername');			
			$orgowneremail=$this->input->post('orgowneremail');
			$orgownername=$this->input->post('orgownername');
						
			$email_details = $this->common_model->get_email_containt("152");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				
			$this->load->library('email');
			
			if(isset($email_details[0]['st_email_body']))
			{
				$templete  = $email_details[0]['st_email_body'];
				$templete  = str_replace("##current_year##",date('Y'),$templete);
				$templete  = str_replace("##DONATION##",$donation,$templete);
				
				// Digester mode email template
				$strMail1 	= 	$templete;
				$strMail1    = str_replace("##user_name##",$receivername,$strMail1);
				$strMail1    = str_replace("##name##",$name,$strMail1);
				$strMail1    = str_replace("##email##",$email,$strMail1);
				$strMail1    = str_replace("##phone##",$phone,$strMail1);
				$strMail1    = str_replace("##location##",$location,$strMail1);
				$strMail1    = str_replace("##comment##",$comment,$strMail1);				
				
				// owner email template
				$strMail2 	= 	$templete;
				$strMail2    = str_replace("##user_name##",$orgownername,$strMail2);
				$strMail2    = str_replace("##name##",$name,$strMail2);
				$strMail2    = str_replace("##email##",$email,$strMail2);
				$strMail2    = str_replace("##phone##",$phone,$strMail2);
				$strMail2    = str_replace("##location##",$location,$strMail2);
				$strMail2    = str_replace("##comment##",$comment,$strMail2);
				
				
				$toreceiver			=	$receiveremail;
				$toowner		    =	$orgowneremail;
				
				$subject	        =	$email_details[0]['st_email_subject'];
				
				$receivermessage	=	$strMail1;				
				$ownermessage	    =	$strMail2;
				
				$user_to_id = $this->common_model->get_user_id_by_email($toreceiver);						
				$receivermessage = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($toreceiver),$receivermessage);		
				$receivermessage = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($toreceiver),$receivermessage);
								
				$this->common_function->send_mail($this->email, $toreceiver, $subject, $receivermessage,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));	
				
				$result = $this->common_function->send_mail($this->email, $toowner, $subject, $ownermessage,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));	
		
				if($result){
					$data['success'] = 'Request sent successfully';	
				}else{
					$data['success'] = 'Invalid email';
				}
				
				
					
			}			
	
		}
		if($this->input->post('action'))
		{
			foreach ($form_field as $key => $value)
			{	
				$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			//echo "<pre>";print_r($data['post_data']);die;
				$this->form_validation->set_rules('txtyourname', 'Name', 'trim|required');
				$this->form_validation->set_rules('txtamount', 'Amount', 'trim|required|numeric');	
			
			
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('organization-profile-public',$data);	
			}
			else
			{
				//echo "<pre>";print_r($this->input->post());die;
				$cancel_url  = "http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
				//echo $cancel_url;die;
				$amount  = $data['post_data']['txtamount'];
				$doobert_amount  = (5*$amount)/100;
				$actual_amount	 = $amount-$doobert_amount;
				$full_amount	 = $amount;
				if($data['post_data']["extra_amt_doobert"]!='')
				{
					$doobert_amount  = $doobert_amount;
					$actual_amount	 = $amount;
					$full_amount	 = $amount+ $doobert_amount;
				}
				$this->session->set_userdata('org_thank_you',$org_id);
				$insert_data = array("in_organization_id"	=> $org_id,
									 "st_donar_name"		=> $data['post_data']['txtyourname'],
									 "in_donation_amount"	=> $actual_amount,
									 "st_status"			=> "0",
									 "st_doobert_amount"	=> $doobert_amount,
									 "dt_created"			=> date("Y-m-d Hi:s"),
									 "in_deleted"			=> "0");
				$donation_id = $this->organization_model->add_org_donation($insert_data);
				#=================================Paypal Payment Process=================================#
				$paypal_details = array("paypal_email"		=> $data['org_profile']['st_paypal_email'],
										"doobert_amount"	=> $doobert_amount,
										"user_amount"		=> $actual_amount,
										"fullamount"		=> $full_amount,
										"tracking_id"		=> "org_donation".$donation_id,
										"st_custom_url"		=> $cancel_url,
										"thank_you"			=> $this->config->item('base_url')."organization/thank_you/"
										);					 					 
				$paypal_error = $this->paypal_payment($paypal_details);	
				if(isset($paypal_error['error']) && !empty($paypal_error['error']))
				{
					$data['Err_Msg'] = $paypal_error['error'];
					$this->load->view('organization-profile-public',$data);
				}
				#==========================================End===========================================#
			}
		}
		else
		{
			$this->load->view('organization-profile-public',$data);
		}
		//$this->load->view('organization-profile-public',$data);
	}
	
	
		
	# *******************************************************************************************	
	#	Function	:	add_images
	#	Purpose		:	For Adding Product Images
	# *******************************************************************************************
	
	public function add_images() {
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		
		
		$ext = pathinfo($_FILES['files']['name'], PATHINFO_EXTENSION);
		//$filename = time(basename($_FILES['files']['name'], ".".$ext));
		//$flname= $filename . '.'.$ext; 

		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."shelter_approval/";
		//$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf';
		$config['allowed_types'] = 'doc|docx|pdf';
		$config['max_size']	= '51200';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		$config['file_name'] = time().".".$ext;
		
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');

		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."shelter_approval/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."organization/delete_files/shelter_approval/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	function delete_files($path)
	{
		if($this->input->get('files')!='')
		{
			$files = $this->input->get('files');
			$delete_files = $this->organization_model->delete_organization_images($files);
			@unlink($this->config->item('upload').$path."/".$files);
			//delete_files($this->config->item('upload').$path."/".$files);
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	organization_profile_dtls	
	#	Purpose		:	Getting details of organization
	# *******************************************************************************************
	
	public function organization_profile_dtls($org_id) {
		/*if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}*/
		
		$data = array();
		
		//Getting details of organization
		$data['org_profile'] = $this->organization_model->organization_profile($org_id);
		
		if(empty($data['org_profile'])) {
			redirect(base_url());
		}
		
		$this->load->view('organization-profile-public',$data);
	}	
	
	
	function thank_you()
	{
		//echo "hi";
		if(!$this->session->userdata('org_thank_you')) {
			redirect($this->config->item('base_url'));
		}
		//echo $this->session->userdata('org_thank_you');die;
		$org_id = $this->session->userdata('org_thank_you');
		if($_SERVER['HTTP_HOST']!='crystal9')
		{
			$this->session->unset_userdata('org_thank_you');
		}
		$data['org_profile'] = $this->organization_model->organization_profile($org_id);
		//echo "<pre>";print_r($data['org_profile']);die;
		$data['Err_Msg'] = '';
		if(empty($data['org_profile'])) {
			redirect(base_url());
		}
		
		$this->load->view('org-donation-thank-you',$data);
		
	}
	
	function paypal_payment($paypal_detail)
	{
			
		$this->load->model('paypal_model');		
		//-------------------------------------------------
		// When you integrate this code
		// look for TODO as an indication
		// that you may need to provide a value or take action
		// before executing this code
		//-------------------------------------------------
		
		//require_once ("paypalplatform.php");
		// ==================================
		// PayPal Platform Parallel Payment Module
		// ==================================
		
		// Request specific required fields
		$actionType            	= "PAY";
		$cancelUrl				= $paypal_detail['st_custom_url'];//"http://crystal9/Jigar/session.php?success=no";    // TODO - If you are not executing the Pay call for a preapproval,
														//        then you must set a valid cancelUrl for the web approval flow
														//        that immediately follows this Pay call
		$returnUrl  			= $paypal_detail['thank_you'];//"http://crystal9/Jigar/session.php?success=yes";    // TODO - If you are not executing the Pay call for a preapproval,
														//        then you must set a valid returnUrl for the web approval flow
														//        that immediately follows this Pay call
		$currencyCode        	=  $this->config->item('currency_code');
		
		
		// A parallel payment can be made among two to six receivers
		// TODO - specify the receiver emails
		//        remove or set to an empty string the array entries for receivers that you do not have
		$receiverEmailArray    = array(
				$this->config->item('doobert_paypal_acc'),
				$paypal_detail['paypal_email']
				);
		
		// TODO - specify the receiver amounts as the amount of money, for example, '5' or '5.55'
		//        remove or set to an empty string the array entries for receivers that you do not have
		//$full_amount =		$paypal_detail['doobert_amount']+$paypal_detail['user_amount'];
		$receiverAmountArray = array(
				$paypal_detail['doobert_amount'],
				$paypal_detail['fullamount']
				);
		
		// for parallel payment, no primary indicators are needed, so set empty array
		$receiverPrimaryArray = array("false","true");
		
		// TODO - Set invoiceId to uniquely identify the transaction associated with each receiver
		//        set the array entries with value for receivers that you have
		//          each of the array values must be unique
		$receiverInvoiceIdArray = array(
				'',
				'',
				'',
				'',
				'',
				''
				);
		
		// Request specific optional fields
		//   Provide a value for each field that you want to include in the request, if left as an empty string the field will not be passed in the request
		$senderEmail                    	= "";        // TODO - If you are executing the Pay call against a preapprovalKey, you should set senderEmail
													//        It is not required if the web approval flow immediately follows this Pay call
		$feesPayer                        	= "PRIMARYRECEIVER";
		$ipnNotificationUrl                	= ($_SERVER['HTTP_HOST']!='crystal9')?$this->config->item('base_url')."organization/ipn_notification/":"http://9277.us/doobert/session1.php";
		$memo                            	= "";        // maxlength is 1000 characters
		$pin                           		= "";        // TODO - If you are executing the Pay call against an existing preapproval
													//        the requires a pin, then you must set this
		$preapprovalKey                    	= "";        // TODO - If you are executing the Pay call against an existing preapproval, set the preapprovalKey here
		$reverseAllParallelPaymentsOnError  = "";    // TODO - Set this to "true" if you would like each parallel payment to be reversed if an error occurs
													//        defaults to "false" if you don't specify
		$trackingId                        	= $paypal_detail['tracking_id'];//$this->generateTrackingID();    // generateTrackingID function is found in paypalplatform.php
		
		//-------------------------------------------------
		// Make the Pay API call
		//
		// The CallPay function is defined in the paypalplatform.php file,
		// which is included at the top of this file.
		//-------------------------------------------------
		//echo "<pre>";print_r($receiverAmountArray);die;
		$resArray = $this->paypal_model->CallPay($actionType, $cancelUrl, $returnUrl, $currencyCode, $receiverEmailArray,
								$receiverAmountArray, $receiverPrimaryArray, $receiverInvoiceIdArray,
								$feesPayer, $ipnNotificationUrl, $memo, $pin, $preapprovalKey,
								$reverseAllParallelPaymentsOnError, $senderEmail, $trackingId
		);
		//echo "<pre>";print_r($resArray);die;
		if(isset($resArray) && !empty($resArray))
		{
			$ack = strtoupper($resArray["responseEnvelope.ack"]);
			
			if($ack=="SUCCESS")
			{
				if ("" == $preapprovalKey)
				{
					// redirect for web approval flow
					$cmd = "cmd=_ap-payment&paykey=" . urldecode($resArray["payKey"]);
					$this->paypal_model->RedirectToPayPal ( $cmd );
			
				}
				else
				{
					//echo "<pre>elsecnd";print_r($resArray);die;
					// payKey is the key that you can use to identify the result from this Pay call
					$payKey = urldecode($resArray["payKey"]);
					// paymentExecStatus is the status of the payment
					$paymentExecStatus = urldecode($resArray["paymentExecStatus"]);
				}
			}
			else  
			{
				//Display a user friendly Error on the page using any of the following error information returned by PayPal
				//TODO - There can be more than 1 error, so check for "error(1).errorId", then "error(2).errorId", and so on until you find no more errors.
				$ErrorCode = urldecode($resArray["error(0).errorId"]);
				$ErrorMsg = urldecode($resArray["error(0).message"]);
				$ErrorDomain = urldecode($resArray["error(0).domain"]);
				$ErrorSeverity = urldecode($resArray["error(0).severity"]);
				$ErrorCategory = urldecode($resArray["error(0).category"]);
			   
				/*echo "Preapproval API call failed. "."<br />";
				echo "Detailed Error Message: " . $ErrorMsg."<br />";
				echo "Error Code: " . $ErrorCode."<br />";
				echo "Error Severity: " . $ErrorSeverity."<br />";
				echo "Error Domain: " . $ErrorDomain."<br />";
				echo "Error Category: " . $ErrorCategory."<br />";die;*/
				$error['error'] = $ErrorMsg;
				return $error;
			}
		}
		else
		{
			$error['error'] = "Invalid paypal email address configure";
			return $error;
		}
	}
	
	function ipn_notification()
	{
		$postData = file_get_contents('php://input');
		$postData = urldecode($postData);
		$rawPostArray = explode('&', $postData);			
		$data_arr= array();
		foreach($rawPostArray as $key=>$value)
		{
			
			$data_val = explode("=",$value);		
			
			if(isset($data_val[0]) && $data_val[0] == "transaction[0].id")
			{
				$data_arr['st_doobert_trans_id'] = $data_val[1];
			}
			elseif(isset($data_val[0]) && $data_val[0] == "transaction[1].id")
			{
				$data_arr['st_transaction_id'] = $data_val[1];
			}
			elseif(isset($data_val[0]) && $data_val[0] == "transaction[1].status" && $data_val[1]=="Completed")
			{
				$data_arr['transaction_1'] = "1";
			}
			elseif(isset($data_val[0]) && $data_val[0] == "transaction[0].status" && $data_val[1]=="Completed")
			{
				$data_arr['transaction_0'] = "1";
			}
			elseif(isset($data_val[0]) && $data_val[0] == "tracking_id")
			{
				$data_arr['donation_id'] = str_replace("org_donation","",$data_val[1]);
			}
				
			//echo "<pre>";print_r($data_val);
		}
		//echo "<pre>";print_r($data_arr);die;
//		$file = fopen("test.txt","w");
//		echo fwrite($file,"<pre>".print_r($data_arr,true)."===".print_r($rawPostArray,true));
//		fclose($file);
		if(isset($data_arr) && !empty($data_arr))
		{
			$id = $data_arr['donation_id'];
			$status = 0;
			if($data_arr['transaction_1']=='1' && $data_arr['transaction_0']=='1')
			{
				$status = 1;
			}
			$update_details = array("st_doobert_trans"		=> $data_arr['st_doobert_trans_id'],
									"st_transaction_id"		=> $data_arr['st_transaction_id'],
									"st_pp_response"		=> serialize($rawPostArray),
									"dt_created"			=> date("Y-m-d H:i:s"),
									"st_status"				=> $status);			
			//mail('jigar.patel@pulsesolutions.com','DataBase data',print_r($update_details,true));																		
			$this->organization_model->update_donation_details($id,$update_details);			
		}
	}
	
	
	#=========================================================
	#	Function : other_organization
	#	Purpose  : Join Other Organization
	#=========================================================		
	public function other_organization()
	{
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 		= '';
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		$data['coalition']  = 	$this->common_model->get_coalition();
		$c3_certificate 		= '';
		$adoption_contract_file = '';
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		//echo "<pre>";print_r($user_details[0]);die;
		
		
		if(isset($user_details['0']['st_website']) && $user_details['0']['st_website'] != '')
		{
			$user_details['0']['st_website'] = str_replace('http://','',$user_details['0']['st_website']);
			$user_details['0']['st_website'] = str_replace('https://','',$user_details['0']['st_website']);
		}
		
		$pending_org_cnt = $this->organization_model->check_org_status($this->session->userdata('userid'));
		if(isset($pending_org_cnt) && $pending_org_cnt > 0)	
		{
			redirect($this->config->item('base_url')."organization/verification");
		}
		$form_field	=	array('org_type'				=> "O",
							  'orgname'					=> "",
							  'whattypeorg'				=> "",
							  'eni'						=> "0",
							  '501c3_certified'			=> "",
							  'inserted_c3_certificate'	=> "",
							  'adoption_contract' 		=> "",
							  'inserted_org_adoption'  => "",
							  'address'					=> isset($user_details[0]['st_address1'])?$user_details[0]['st_address1']:"",
							  'address2'				=> isset($user_details[0]['st_address2'])?$user_details[0]['st_address2']:"",
							  'city'					=> isset($user_details[0]['st_city'])?$user_details[0]['st_city']:"",
							  'state'					=> isset($user_details[0]['st_state'])?$user_details[0]['st_state']:"",
							  'zip'						=> isset($user_details[0]['st_zip'])?$user_details[0]['st_zip']:"",
							  "manager"					=> ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),
							  "pphone"					=> isset($user_details[0]['st_primary_phone'])?$user_details[0]['st_primary_phone']:"",
							  "sphone"					=> isset($user_details[0]['st_secondary_phone'])?$user_details[0]['st_secondary_phone']:"",
							  "fax"						=> isset($user_details[0]['st_fax'])?$user_details[0]['st_fax']:"",
							  "email"					=> strtolower($this->session->userdata('email')),
							  "organization_website"	=> isset($user_details[0]['st_website'])?$user_details[0]['st_website']:"",
							  "reference_1"				=> "",
							  "ref_1_name"				=> "",
							  "ref_1_email"				=> "",
							  "ref_1_phone"				=> "",
							  "reference_2"				=> "",
							  "ref_2_name"				=> "",
							  "ref_2_email"				=> "",
							  "ref_2_phone"				=> "",
							  "reference_3"				=> "",
							  "ref_3_name"				=> "",
							  "ref_3_email"				=> "",
							  "ref_3_phone"				=> "",
							  "st_guideline"			=> "",
							  "image_file"				=> "",
							  "comments"				=> "",
							  //"paypal_email"			=> "",
							  'country'					=> isset($user_details[0]['st_country'])?$user_details[0]['st_country']:"",
							  "profile_desc"			=> "",		//added on 05Sept2014 by ghanshyam
							  "guideline_link"			=> "",		//added on 24sept2014 by ghanshyam
							  "orgcode"				    => "",
							  "joincoalition1"           => "",
							  "joincoalition2"           => "",
							  "joincoalition3"           => "",
							  "joincoalition4"           => "",
							  "joincoalition5"           => ""
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['organization'][$key] = $value;	
		}	
		
		$org_zipcode = explode('-',$data['organization']['zip']);
		if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
		{
			$data['organization']['zip'] = $org_zipcode[0];
		}
		
		//echo '<pre>'; print_r($data['organization'][$key]); die;
						
		if($this->input->post('action'))
		{
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
			$website = $this->input->post('organization_website');
			if(!empty($website)){
				$_POST['organization_website'] = "http://" . $website;
			}
			
			foreach ($form_field as $key => $value)
			{	
				$data['organization'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$org_zipcode = explode('-',$data['organization']['zip']);
			if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
			{
				$data['organization']['zip'] = $org_zipcode[0];
			}
			
			$org_links_array = $this->input->post('guideline_url'); 
			for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
			{  
				if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
				{					
					//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
				}
			}	
			
			$_POST['guideline_url'] = $org_links_array;
			
			$data['organization']['guideline_url']  = $_POST['guideline_url'];
			
			//print_r($_POST['guideline_url']);exit; //use for testing
				
			$this->form_validation->set_rules('orgname', 'Organization Name', 'trim|required');
			$this->form_validation->set_rules('address', 'Address', 'trim|required');
			$this->form_validation->set_rules('city', 'City', 'trim|required');
			$this->form_validation->set_rules('whattypeorg', 'What Type of Organization Are you?', 'trim|required');
			$this->form_validation->set_rules('state', 'State', 'trim|required');
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
			$this->form_validation->set_rules('manager', 'Manager or Director', 'trim|required');
			$this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
			$this->form_validation->set_rules('email', 'Email', 'trim|required');
			$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
			//$this->form_validation->set_rules('paypal_email', 'Paypal Email', 'trim|valid_email');			
			$this->form_validation->set_rules('st_guideline', 'Guidelines', 'trim');
			$this->form_validation->set_rules('guideline_url[]', 'Guideline Url', 'trim|callback_validdate_urls');
			$this->form_validation->set_rules('profile_desc', 'Profile Description', 'trim');
			for($a=1;$a<=3;$a++)
			{
			 //if($data['organization']['ref_'.$a.'_name']!='')
				//{
					$this->form_validation->set_rules('ref_'.$a.'_name', 'Reference '.$a.' Name', 'trim|required');
					$this->form_validation->set_rules('ref_'.$a.'_email', 'Reference '.$a.' Email', 'trim|required|valid_email');
					$this->form_validation->set_rules('ref_'.$a.'_phone', 'Reference '.$a.' Phone', 'trim|required');
				//}
			
			}
			
			$error = '';
			$upload_error =''; 
			if($data['organization']['501c3_certified']!='' && isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']=='')
			{
				if($data['organization']['501c3_certified']!='' && $data['organization']['inserted_c3_certificate'] =='' )
				$error .= "<p>501c3 Certificate is required.</p>";
			}
			if($data['organization']['adoption_contract']!='' && isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']=='')
			{
				if($data['organization']['adoption_contract']!='' && $data['organization']['inserted_org_adoption'] =='' )
				$error .= "<p>Adoption Contract is required.</p>";
			}
			#=====================Upload Certificate=================#
			if(isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']!='')
			{
				//echo $this->organization_model->upload_files('c3_certificate');
				if($this->organization_model->upload_files('c3_certificate')){
					$arrImageInfo = $this->upload->data();
					$c3_certificate = $arrImageInfo['file_name'];
					
				}else{
					//$error .= "501C3 Certified error : ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#===================== End Upload Contract=================#
			#=====================Upload Contract=================#
			if(isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']!='')
			{
				if($this->organization_model->upload_files('adoption_contract_file')){
					$arrImageInfo = $this->upload->data();
					$adoption_contract_file = $arrImageInfo['file_name'];
				}else{
					//$error .= "Adoption Contract error: ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "Adoption Contract error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#=====================End Upload Contract=================#			
			//if($this->form_validation->run()==FALSE ||$error!='')
			if($this->form_validation->run()==FALSE ||$error!='' || $upload_error!='')	
			{
					$data['Err_Msg'] = validation_errors().$error;
					$data['upload_error'] = $upload_error;
					if(isset($data['organization']['organization_website']) && $data['organization']['organization_website'] != ''){
					$data['organization']['organization_website'] = str_replace('http://','',$data['organization']['organization_website']);
					$data['organization']['organization_website'] = str_replace('https://','',$data['organization']['organization_website']);
					}
					$this->load->view('organization-other',$data);	
			}
			else
			{
				if(isset($c3_certificate) && !empty($c3_certificate))
				{
					$c3_certificate_file_name = $c3_certificate;
				} else if(isset($data['organization']['inserted_c3_certificate']) && !empty($data['organization']['inserted_c3_certificate']))
				{
					$c3_certificate_file_name = $data['organization']['inserted_c3_certificate'];
				} else {
					$c3_certificate_file_name = '';
				}

				if(isset($adoption_contract_file) && !empty($adoption_contract_file))
				{
					$adoption_contract_file_name = $adoption_contract_file;
				} else if(isset($data['organization']['inserted_org_adoption']) && !empty($data['organization']['inserted_org_adoption']))
				{
					$adoption_contract_file_name = $data['organization']['inserted_org_adoption'];
				} else {
					$adoption_contract_file_name = '';
				}	
				
				$data['organization']['c3_certificate'] 		= $c3_certificate_file_name;
				$data['organization']['adoption_contract_file'] = $adoption_contract_file_name;
				$data['organization']['created_date'] 			= date("Y-m-d H:i:s");
				$org_details = array(	"in_user_id"			=> $this->session->userdata('userid'), 
										"st_org_type"			=> "O", 
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_what_type_org"		=> $data['organization']['whattypeorg'], 
										"st_org_ein"			=> $data['organization']['eni'], 
										"st_has_501c3"			=> ($data['organization']['501c3_certified']=='1')?"Y":"N",  
										"st_organization_501c3"	=> $data['organization']['c3_certificate'], 
										"st_has_contract"		=> ($data['organization']['adoption_contract']=='1')?"Y":"N",   
										"st_org_adoption"		=> $data['organization']['adoption_contract_file'],  
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'], 
										"st_additional_info"	=> $data['organization']['comments'],
										"st_guideline"			=> $data['organization']['st_guideline'], 
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'],
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "0", 
										"in_deleted"			=> "0",
										"st_org_code"		=> $data['organization']['orgcode'],
										);
				//echo "<pre>";print_r($org_details);die;	
				//$organization_id = $this->organization_model->add_organization($org_details);				
				//$data['organization']['organization_id'] = $organization_id;
				
				$manager_name = $data['organization']['manager'];
				$org_name	=	$data['organization']['orgname'];
				
				if(isset($data['pending_org_details']['in_organization_id']) && !empty($data['pending_org_details']['in_organization_id'])){ 
				       $organization_id = $data['pending_org_details']['in_organization_id'];
				   }
				   else
				   { 
					   $organization_id =  $this->input->post('orgid'); //die; //$this->session->userdata('orgId'); die;
				   }
				    $orgstatus = $this->organization_model->check_orgid($organization_id,$orgtp='O'); //echo $this->input->post('orgid'); die;		
					if($orgstatus > 0){  
						//echo $this->input->post('orgid'); die;
						//echo $c3_certificate . '   '. $adoption_contract_file;die;
                    $this->organization_model->update_organization($organization_id,$c3_certificate_file_name,$adoption_contract_file_name,$shelter_id='');					
					$data['organization']['organization_id'] = $organization_id; 				 
					}
					if($orgstatus==0){
						//$organization_id = $this->organization_model->add_organization($org_details);
						//$data['organization']['organization_id'] = $organization_id;
						$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
						$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
					} 
				
				// org coalition add
				
				//$joincoalition = $this->input->post('joincoalition');
				$joincoalition = $this->input->post('counter2');
				
			//echo '<pre>'; print_r($_POST); die;			
			if($joincoalition > 0){ 
				for($i=1; $i<=5; $i++){ 
					$coalition   = 'joincoalition'.$i;						
			     if($_POST[$coalition]!=''){		 
					
					 
			$coalition_details = array(	"in_organization_id" => $this->session->userdata('orgId'), 
										"in_coalition_id"	 => $_POST[$coalition],
										"dt_created"         => date('Y-m-d H:i:s')
									);	
           							
			//echo '<pre>'; print_r($coalition_details); die;
			$coaid=$_POST[$coalition];
			$check	=	$this->common_model->is_coalition_exists($this->session->userdata('orgId'),$coaid);
			
			if($check == false)
			{					
					$this->organization_model->insertcoalition($coalition_details);	
			}	
				 }
				}
			
			}
				// org coalition add
				
				for($a=1;$a<=3;$a++)
				{
					$ref_details = array();
					if($data['organization']['ref_'.$a.'_name']!='' || $data['organization']['ref_'.$a.'_email']!='' || $data['organization']['ref_'.$a.'_phone']!='')
					{
						$ref_details = array(	"in_organization_id"	=> $organization_id, 
												"st_ref_type"			=> $data['organization']['reference_'.$a], 
												"st_ref_name"			=> $data['organization']['ref_'.$a.'_name'], 
												"st_ref_email"			=> $data['organization']['ref_'.$a.'_email'],
												"st_ref_phone"			=> $data['organization']['ref_'.$a.'_phone'], 
												"dt_created"			=> date("Y-m-d H:i:s"),  
												"in_deleted"			=> "0"
												);
						//$this->organization_model->organization_references($ref_details);
					}
					
					// mail functionality starts added by sadique on 17-02-16	
							
							if($data['organization']['reference_'.$a] == 'V'){
							$email_details = $this->common_model->get_email_containt("44");
							}
							if($data['organization']['reference_'.$a] == 'O'){
							$email_details = $this->common_model->get_email_containt("43");
							}
							if($data['organization']['reference_'.$a] == 'P'){
							$email_details = $this->common_model->get_email_containt("45");
							}					
					
						
							$data['user_name']	=	ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name'));
						$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
						
						if(isset($email_details[0]['st_email_body']))
						{   				
							
							$strMail='';
							$templete = $email_details[0]['st_email_body'];							
							$templete  = str_replace("##REFERENCE_NAME##",$data['organization']['ref_'.$a.'_name'],$templete);
							//$templete  = str_replace("##APPLICANT_NAME##",$data['user_name'],$templete);
							$templete  = str_replace("##APPLICANT_NAME##",$manager_name,$templete);	
							$templete  = str_replace("##ORGANIZATION_NAME##",$org_name,$templete);	
							$templete  = str_replace("##DONATION##",$donation,$templete);
							$this->load->library('email');
													
							$strMail 	= 	$templete;
							$to			=	$data['organization']['ref_'.$a.'_email'];
							$subject	=	$email_details[0]['st_email_subject'];
							$subject    = str_replace("##ORGANIZATION_NAME##",$org_name,$subject);	
							$subject    = str_replace("##APPLICANT_NAME##",$manager_name,$subject);
							$message	=	$strMail;
							$category  =    $email_details[0]['st_category'];
							$reply_to	=	"applications@doobert.zendesk.com";
							//$this->common_function->send_mail($this->email, $to, $subject, $message, 'references@doobert.com' ,$cc ='', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
					   }
					
					
					//mail functionality ends
					
				}
				
				$org_links_array = $this->input->post('guideline_url'); 
				for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
				{  
					$org_links_data = array();
					
					if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
					{					
						//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					
						$org_links_data = array(	"in_organization_id"	=> $organization_id, 
													"st_org_link"			=> $org_links_array[$links_cnt],
													"dt_created"			=> date("Y-m-d H:i:s"),  
													"in_deleted"			=> "0"
												);
						$this->organization_model->organization_links_detail($org_links_data);
					}
				}
				
				$guidelines_imgs = explode(",",$data['organization']['image_file']);
				//echo "<pre>";print_r($guidelines_imgs);die;
				/*if(!empty($guidelines_imgs))
				{
					for($q=0;$q<count($guidelines_imgs);$q++)
					{
						if($guidelines_imgs[$q]!='')
						{
							$upload_details = array("in_organization_id"	=> $organization_id,
													"st_file_name"			=> $guidelines_imgs[$q],
													"in_doc_type"			=> "1",
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
													);
							$this->organization_model->organization_images($upload_details);
						}
					}
				}*/
				
					if(!empty($data['organization']['zip']))
					{
						$zip_code_state = $this->common_model->get_zipcode_info($data['organization']['zip']);
						if($zip_code_state['state_prefix']=='CO')
						{
							
							//$to = 'nirav.motta@pulsesolutions.net';
							//$to = array($data['organization']['st_email_address'],'support@doobert.zendesk.com');
							$colorado_email_notification = $this->common_model->get_email_containt("84");
							$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
							$to = array($data['organization']['email']);
							if(isset($colorado_email_notification[0]['st_email_body']))
							{
								$message  = $colorado_email_notification[0]['st_email_body'];
								$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
								$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
								$message  = str_replace("##display_name##",$manager_name,$message);
								$message  = str_replace("##DONATION##",$donation,$message);
								$subject  = $colorado_email_notification[0]['st_email_subject'];
								$category = $colorado_email_notification[0]['st_category'];
								$this->mail_notify_colorado($to,$subject,$category,$message);	
							}
							$this->notify_mailto_zendesk($manager_name);	
						}	 
					}
							// code for updating login user phone no and zip in the org sign up task 2 aug'16
							if($this->session->userdata('org_name'))
							{
								$this->load->model('user_model');
								$address_details	=	$this->common_model->getaddress($data['organization']['zip']);
								 $profile_info = array(
								"st_city" => isset($address_details['city']) ? $address_details['city'] : '',
								"st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
								"st_zip" => $data['organization']['zip'],
								"st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
								"st_primary_phone" => $data['organization']['pphone'],
								"dt_modified" => date('Y-m-d H:i:s'),
								"in_status" => "1"
								);
								$this->user_model->update_user_profile_setting($profile_info,$this->session->userdata('userid'),'tbl_user_profile');	
								// hear need to update the users table to make status 1 
								$this->user_model->update_user_info(array("in_status"=>1),$this->session->userdata('userid'),'tbl_users');
								
							}
							// code for updating login user phone no and zip in the org sign up ends
				
				
				//code for setting organization profile privacy starts 11sept2014 by ghanshyam
				if(isset($organization_id) && $organization_id > 0)
				{
					$org_privacy_setting_data 		= array();			
					
					$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
					
					$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
					$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
					$org_privacy_setting_data['in_public'] 			=	0;
					$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
					
					//print_r($org_privacy_setting_data);exit;
					$this->load->model('organization_privacy_setting_model');
					$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
				 }					
				//code for setting organization profile privacy ends 11sept2014 by ghanshyam
				
				$admin_list = $this->common_model->get_admin_list();
				$this->session->unset_userdata('orgId');
				$this->organization_request_email($admin_list,"Other",$data['organization']);
				$this->session->unset_userdata('sign_up_org_name');
				$this->session->unset_userdata('sign_up_org_zip');
				$this->session->set_flashdata('org_info', 'Your request has been successfully submitted for review!');
				redirect(base_url().'other-organization/');
					
			}
		}
		else
		{
			$data['pending_org_details'] = $this->organization_model->pending_org_details($orgType='O');
			if(isset($data['pending_org_details']['in_organization_id']) && $data['pending_org_details']['in_organization_id']!=''){
			$this->session->unset_userdata('orgId');
			$this->session->set_userdata('orgId',$data['pending_org_details']['in_organization_id']);	
			$data['organization_ref'] = $this->organization_model->get_organization_ref($data['pending_org_details']['in_organization_id']);
			 $data['upload_doc'] = $this->organization_model->get_org_upload_doc($data['pending_org_details']['in_organization_id']);
	       }	
			//echo "<pre>";print_r($data['pending_org_details']);die;
			if(isset($data['pending_org_details']['in_status']) &&  $data['pending_org_details']['in_status'] == 4){		
			$this->load->view('organization-other',$data);
			return;
			}
			$this->load->view('organization-other',$data);			
		}
	}
	
	public function new_shelter_organization()
	{
		if($this->input->cookie('userid')){
				$this->session->set_userdata('userid',$this->input->cookie('userid'));
				if($this->input->cookie('user_name'))
				{
					$this->session->set_userdata('user_name', $this->input->cookie('user_name'));
				}
				if($this->input->cookie('last_name'))
				{
					$this->session->set_userdata('last_name',$this->input->cookie('last_name'));
				}
				if($this->input->cookie('email'))
				{
					$this->session->set_userdata('email', $this->input->cookie('email'));
				}
					
			  /*delete_cookie('userid'); 
			  delete_cookie('user_name');
			  delete_cookie('last_name');
			  delete_cookie('email');*/	
					
			  if($this->input->cookie('sign_up_org_name'))
			  {	
				 $this->session->set_userdata('sign_up_org_name',$this->input->cookie('sign_up_org_name'));
				 $this->session->set_userdata('sign_up_org_zip', $this->input->cookie('sign_up_org_zip'));
				 delete_cookie('sign_up_org_name');
				 delete_cookie('sign_up_org_zip');  	
			  }
		}
		
		$this->session->set_userdata('orgtype','S');
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		
		
		if(!$this->session->userdata('orgtype'))
		{
			redirect(base_url().'rescue-organization/');	
		}
		$orgtype	=	$this->session->userdata('orgtype');
		
		$pending_org_cnt = $this->organization_model->check_org_status($this->session->userdata('userid'));
		
		//if(isset($pending_org_cnt) && $pending_org_cnt > 0 && !$this->session->flashdata('org_info'))
		if(isset($pending_org_cnt) && $pending_org_cnt > 0)	
		{
			redirect($this->config->item('base_url')."organization/verification");
		}
		
		//$this->session->set_userdata('orgtype',$orgtype);
		//echo $orgtype;die;
		$data = array();
		$data['Err_Msg'] 		= '';
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		$data['coalition']  = 	$this->common_model->get_coalition();
		$c3_certificate 		= '';
		$adoption_contract_file = '';
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
	
			//if(isset($user_details) && ($user_details[0]['in_status'] == 0 || $user_details[0]['in_status'] == ''))
		
	
		$org_name               ='';
		if($this->session->userdata('sign_up_org_name'))
		{
			$org_name = $this->session->userdata('sign_up_org_name');
		}
	
		if($org_name==''){
		if($user_details['0']['in_status']=='0')
		{
			$this->session->set_flashdata('incomplete_profile_error', 'Please complete general details to proceed.');
			redirect($this->config->item('base_url')."my-profile/");
		}
		}
		//echo "<pre>";print_r($user_details[0]);die;
		//echo $this->session->userdata('shelter_id'); die;
		
		
		if(isset($user_details['0']['st_website']) && $user_details['0']['st_website'] != '')
		{
			$user_details['0']['st_website'] = str_replace('http://','',$user_details['0']['st_website']);
			$user_details['0']['st_website'] = str_replace('https://','',$user_details['0']['st_website']);
		}
		
		$form_field	=	array('org_type'				=> $orgtype,
							  'orgname'					=> "",
							  'eni'						=> "0",
							  '501c3_certified'			=> "",
							  'inserted_c3_certificate'	=> "",
							  'adoption_contract' 		=> "",
							  'inserted_org_adoption'  => "",
							  'address'					=> $user_details[0]['st_address1'],
							  'address2'				=> $user_details[0]['st_address2'],
							  'city'					=> $user_details[0]['st_city'],
							  'state'					=> $user_details[0]['st_state'],
							  'zip'						=> $user_details[0]['st_zip'],
							  "manager"					=> ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name')),
							  "pphone"					=> $user_details[0]['st_primary_phone'],
							  "sphone"					=> $user_details[0]['st_secondary_phone'],
							  "fax"						=> $user_details[0]['st_fax'],
							  "email"					=> strtolower($this->session->userdata('email')),
							  "organization_website"	=> $user_details[0]['st_website'],
							  "reference_1"				=> "",
							  "ref_1_name"				=> "",
							  "ref_1_email"				=> "",
							  "ref_1_phone"				=> "",
							  "reference_2"				=> "",
							  "ref_2_name"				=> "",
							  "ref_2_email"				=> "",
							  "ref_2_phone"				=> "",
							  "reference_3"				=> "",
							  "ref_3_name"				=> "",
							  "ref_3_email"				=> "",
							  "ref_3_phone"				=> "",
							  "st_guideline"			=> "",
							  "image_file"				=> "",
							  "comments"				=> "",
							  //"paypal_email"			=> "",
							  'country'					=> $user_details[0]['st_country'],
							  "profile_desc"			=> "",		//added on 05Sept2014 by ghanshyam
							  "guideline_link"			=> "",		//added on 24sept2014 by ghanshyam
							  'orgcode'					=> "",
							   "joincoalition1"         => "",
							  "joincoalition2"         => "",
							  "joincoalition3"         => "",
							  "joincoalition4"         => "",
							  "joincoalition5"         => ""
					  	 	);
							
			foreach($form_field as $key => $value)	
		{	
			$data['organization'][$key] = $value;	
		}
		
		$org_zipcode = explode('-',$data['organization']['zip']);
		if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
		{
			$data['organization']['zip'] = $org_zipcode[0];
		}
		
		if($this->input->post('action') == 'submit')
		{ 
	
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
			$website = $this->input->post('organization_website');
			if(!empty($website)){
				$_POST['organization_website'] = "http://" . $website;
			}
			
			foreach ($form_field as $key => $value)
			{	
				$data['organization'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			
			$org_zipcode = explode('-',$data['organization']['zip']);
			if(isset($org_zipcode[1]) && !empty($org_zipcode[1]))
			{
				$data['organization']['zip'] = $org_zipcode[0];
			}
			
			$org_links_array = $this->input->post('guideline_url'); 
			for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
			{  
				if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
				{					
					//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
					$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
				}
			}	
			
			$_POST['guideline_url'] = $org_links_array;
			
			$data['organization']['guideline_url']  = $_POST['guideline_url'];
			
			//print_r($_POST['guideline_url']);exit; //use for testing

	
			$this->form_validation->set_rules('orgname', 'Organization Name', 'trim|required');
			$this->form_validation->set_rules('address', 'Address', 'trim|required');
			$this->form_validation->set_rules('city', 'City', 'trim|required');
			$this->form_validation->set_rules('state', 'State', 'trim|required');
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
			$this->form_validation->set_rules('manager', 'Manager or Director', 'trim|required');
			$this->form_validation->set_rules('pphone', 'Primary Phone', 'trim|required');
			$this->form_validation->set_rules('email', 'Email', 'trim|required');
			$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
			//$this->form_validation->set_rules('paypal_email', 'Paypal Email', 'trim|valid_email');
			$this->form_validation->set_rules('st_guideline', 'Guidelines', 'trim');
			$this->form_validation->set_rules('guideline_url[]', 'Guideline Url', 'trim|callback_validdate_urls');
			$this->form_validation->set_rules('profile_desc', 'Profile Description', 'trim');
			
			/*
			for($a=1;$a<=3;$a++)
			{
			 //if($data['organization']['ref_'.$a.'_name']!='')
				//{
					$this->form_validation->set_rules('ref_'.$a.'_name', 'Reference '.$a.' Name', 'trim|required');
					$this->form_validation->set_rules('ref_'.$a.'_email', 'Reference '.$a.' Email', 'trim|required|valid_email');
					$this->form_validation->set_rules('ref_'.$a.'_phone', 'Reference '.$a.' Phone', 'trim|required');
				//}
			
			}
			*/
			$error = '';
			$upload_error = ''; 
			if($data['organization']['501c3_certified']!='' && isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']=='')
			{
				if($data['organization']['501c3_certified']!='' && $data['organization']['inserted_c3_certificate'] =='' )
				$error .= "<p>501c3 Certificate is required.</p>";
			}
			if($data['organization']['adoption_contract']!='' && isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']=='')
			{
				if($data['organization']['adoption_contract']!='' && $data['organization']['inserted_org_adoption'] =='' )
				$error .= "<p>Adoption Contract is required.</p>";
			}
			#=====================Upload Certificate=================#
			if(isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']!='')
			{
				//echo $this->organization_model->upload_files('c3_certificate');
				if($this->organization_model->upload_files('c3_certificate')){
					$arrImageInfo = $this->upload->data();
					$c3_certificate = $arrImageInfo['file_name'];
					
				}else{
					//$error .= "501C3 Certified error : ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#===================== End Upload Contract=================#
			#=====================Upload Contract=================#
			if(isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']!='')
			{
				if($this->organization_model->upload_files('adoption_contract_file')){
					$arrImageInfo = $this->upload->data();
					$adoption_contract_file = $arrImageInfo['file_name'];
				}else{
					//$error .= "Adoption Contract error : ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error .= "Adoption Contract error: ".strip_tags($this->upload->display_errors())."<br>";
				}
			}
			#=====================End Upload Contract=================#			
			//if($this->form_validation->run()==FALSE ||$error!='')
			if($this->form_validation->run()==FALSE ||$error!='' || $upload_error!='')	
			{
					$data['Err_Msg'] = validation_errors().$error;
					$data['upload_error'] = $upload_error;
					if(isset($data['organization']['organization_website']) && $data['organization']['organization_website'] != ''){
					$data['organization']['organization_website'] = str_replace('http://','',$data['organization']['organization_website']);
					$data['organization']['organization_website'] = str_replace('https://','',$data['organization']['organization_website']);
					}
					$this->load->view('organization-new-shelter',$data);	
			}
			else
			{   
				
				if(isset($c3_certificate) && !empty($c3_certificate))
				{
					$c3_certificate_file_name = $c3_certificate;
				} else if(isset($data['organization']['inserted_c3_certificate']) && !empty($data['organization']['inserted_c3_certificate']))
				{
					$c3_certificate_file_name = $data['organization']['inserted_c3_certificate'];
				} else {
					$c3_certificate_file_name = '';
				}
				
				if(isset($adoption_contract_file) && !empty($adoption_contract_file))
				{
					$adoption_contract_file_name = $adoption_contract_file;
				} else if(isset($data['organization']['inserted_org_adoption']) && !empty($data['organization']['inserted_org_adoption']))
				{
					$adoption_contract_file_name = $data['organization']['inserted_org_adoption'];
				} else {
					$adoption_contract_file_name = '';
				}	
							
				$data['organization']['c3_certificate'] 		= $c3_certificate_file_name;
				$data['organization']['adoption_contract_file'] = $adoption_contract_file_name;
				$data['organization']['created_date'] 			= date("Y-m-d H:i:s");
				$orgname=$this->input->post('orgname');						
				$records = $this->organization_model->shelter_exist($orgname);	
				
				
				// shelter add start
				$shelter_details = array(	
										"st_shelter_name"		=> $data['organization']['orgname'], 	
										"st_contact_name"		=> $data['organization']['manager'], 																			
										"st_non_profit"			=> 'Information Unavailable',
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_county"			=> $data['organization']['country'], 	
										"st_zip"				=> $data['organization']['zip'], 
										"st_state"				=> $data['organization']['state'],
										"st_phone"				=> $data['organization']['pphone'], 	
										"st_euthanize"			=> 'Information Unavailable', 											
										"st_email"				=> $data['organization']['email'], 	
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "1", 
										"in_deleted"			=> "0",
										"st_org_code"			=> $data['organization']['orgcode']
										);
										
										
				$org_details = array(	"in_user_id"			=> $this->session->userdata('userid'), 
										"in_shelter_id"			=> isset($records['in_shelter_id']) ? $records['in_shelter_id'] : '', 
										"st_org_type"			=> $orgtype,
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_org_ein"			=> $data['organization']['eni'], 
										"st_has_501c3"			=> ($data['organization']['501c3_certified']=='1')?"Y":"N",  
										"st_organization_501c3"	=> $data['organization']['c3_certificate'], 
										"st_has_contract"		=> ($data['organization']['adoption_contract']=='1')?"Y":"N",   
										"st_org_adoption"		=> $data['organization']['adoption_contract_file'],  
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'], 
										"st_guideline"			=> $data['organization']['st_guideline'], 
										"st_additional_info"	=> $data['organization']['comments'],
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'],
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "0", 
										"in_deleted"			=> "0",
										"st_org_code"			=> $data['organization']['orgcode']
										);						
										
				
				//$shelter_name = $this->organization_model->shelter_name($records['in_shelter_id']);				
				if(isset($records) && !empty($records))
				{  
					$shelter_org_exist=$this->organization_model->shelter_used($records['in_shelter_id'],$orgtype);					
					if(isset($shelter_org_exist) && !empty($shelter_org_exist)){				
					$this->session->set_userdata('shelter_name',$records['st_shelter_name']);
					$this->session->set_userdata('name',$shelter_org_exist['st_director']);
					$this->session->set_flashdata('shelter_error', 'Shelter eerror!!');	
					redirect(base_url().'new-shelter-organization/');	
					}
					else
					{  
							
							//$organization_id = $this->organization_model->add_organization($org_details);
							
							//$data['organization']['organization_id'] = $organization_id;
							
							//$organization_id =  $this->input->post('orgid');
							
							if($this->input->post('orgid'))
							{	
								$organization_id =  $this->input->post('orgid');
							} else {
								 $organization_id = $this->session->userdata('orgId');
							}
							
							if(isset($organization_id) && $organization_id != '')
							{
							//echo 'organization_id'.$organization_id; exit;
							$orgstatus = $this->organization_model->check_orgid($organization_id,$orgtp='S'); //echo $this->input->post('orgid'); die;
							if($orgstatus > 0){  
								//echo $this->input->post('orgid'); die;
								//echo $c3_certificate . '   '. $adoption_contract_file;die;
							$shelter_id = (isset($records['in_shelter_id']) && !empty($records['in_shelter_id']))?$records['in_shelter_id']:'';		
							//$this->organization_model->update_organization($organization_id,$c3_certificate,$adoption_contract_file,$shelter_id);
							$this->organization_model->update_organization($organization_id,$c3_certificate_file_name,$adoption_contract_file_name,$shelter_id);	
							$data['organization']['organization_id'] = $organization_id; 				 
							}
							if($orgstatus==0){
								//$organization_id = $this->organization_model->add_organization($org_details);
								//$data['organization']['organization_id'] = $organization_id;
								$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
								$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
							} 
							/*
							for($a=1;$a<=3;$a++)
							{
								$ref_details = array();
								if($data['organization']['ref_'.$a.'_name']!='' || $data['organization']['ref_'.$a.'_email']!='' || $data['organization']['ref_'.$a.'_phone']!='')
								{
									$ref_details = array(	"in_organization_id"	=> $organization_id, 
															"st_ref_type"			=> $data['organization']['reference_'.$a], 
															"st_ref_name"			=> $data['organization']['ref_'.$a.'_name'],  
															"st_ref_email"			=> $data['organization']['ref_'.$a.'_email'],
															"st_ref_phone"			=> $data['organization']['ref_'.$a.'_phone'],
															"dt_created"			=> date("Y-m-d H:i:s"),  
															"in_deleted"			=> "0"
															);
									$this->organization_model->organization_references($ref_details);
								}
								
								// mail functionality starts added by sadique on 17-02-16	
							
								if($data['organization']['reference_'.$a] == 'V'){
								$email_details = $this->common_model->get_email_containt("44");
								}
								if($data['organization']['reference_'.$a] == 'O'){
								$email_details = $this->common_model->get_email_containt("43");
								}
								if($data['organization']['reference_'.$a] == 'P'){
								$email_details = $this->common_model->get_email_containt("45");
								}	
						
	
								$manager_name = $data['organization']['manager'];
								$org_name	=	$data['organization']['orgname'];
								
								$data['user_name']	=	ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name'));
								if(isset($email_details[0]['st_email_body']))
								{   				
									
									$strMail='';
									$templete = $email_details[0]['st_email_body'];							
									$templete  = str_replace("##REFERENCE_NAME##",$data['organization']['ref_'.$a.'_name'],$templete);
									//$templete  = str_replace("##APPLICANT_NAME##",$data['user_name'],$templete);
									$templete  = str_replace("##APPLICANT_NAME##",$manager_name,$templete);	
									$templete  = str_replace("##ORGANIZATION_NAME##",$org_name,$templete);									
									$this->load->library('email');
															
									$strMail 	= 	$templete;
									$to			=	$data['organization']['ref_'.$a.'_email'];
									$subject	=	$email_details[0]['st_email_subject'];
									$subject    = str_replace("##ORGANIZATION_NAME##",$org_name,$subject);	
									$subject    = str_replace("##APPLICANT_NAME##",$manager_name,$subject);
									$message	=	$strMail;
									$category  =    $email_details[0]['st_category'];
									$reply_to	=	"applications@doobert.zendesk.com";
									$this->common_function->send_mail($this->email, $to, $subject, $message, 'references@doobert.com' ,$cc ='', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
							   }
								//mail functionality ends
							}
							*/
                            if(!empty($data['organization']['zip']))
							{
								$zip_code_state = $this->common_model->get_zipcode_info($data['organization']['zip']);
								if($zip_code_state['state_prefix']=='CO')
								{
									$colorado_email_notification = $this->common_model->get_email_containt("84");
									
									$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
									//$to = 'nirav.motta@pulsesolutions.net';
									//$to = array($data['organization']['st_email_address'],'support@doobert.zendesk.com');
									$to = array($data['organization']['email']);
									if(isset($colorado_email_notification[0]['st_email_body']))
									{
										$message  = $colorado_email_notification[0]['st_email_body'];
										$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
										$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
										$message  = str_replace("##display_name##",$manager_name,$message);
										$message  = str_replace("##DONATION##",$donation,$message);
						
										$subject  = $colorado_email_notification[0]['st_email_subject'];
										$category = $colorado_email_notification[0]['st_category'];
										$this->mail_notify_colorado($to,$subject,$category,$message);	
									}
									$this->notify_mailto_zendesk($manager_name);	
								}	 
							}
							
							$org_links_array = $this->input->post('guideline_url'); 
							for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
							{  
								$org_links_data = array();
								
								if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
								{					
									//$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
									$org_links_array[$links_cnt] = $org_links_array[$links_cnt];
								
									$org_links_data = array(	"in_organization_id"	=> $organization_id, 
																"st_org_link"			=> $org_links_array[$links_cnt],
																"dt_created"			=> date("Y-m-d H:i:s"),  
																"in_deleted"			=> "0"
															);
									$this->organization_model->organization_links_detail($org_links_data);
								}
							}
							
							$guidelines_imgs = explode(",",$data['organization']['image_file']);
							//echo "<pre>";print_r($guidelines_imgs);die;
							/*if(!empty($guidelines_imgs))
							{
								for($q=0;$q<count($guidelines_imgs);$q++)
								{
									if($guidelines_imgs[$q]!='')
									{
										$upload_details = array("in_organization_id"	=> $organization_id,
																"st_file_name"			=> $guidelines_imgs[$q],
																"in_doc_type"			=> "1",
																"dt_created"			=> date("Y-m-d H:i:s"),
																"in_deleted"			=> "0"
																);
										$this->organization_model->organization_images($upload_details);
									}
								}
							}*/
							
							}
							
							// code for updating login user phone no and zip in the org sign up task 14 june'16
							if($this->session->userdata('sign_up_org_name'))
							{
								$this->load->model('user_model');
								$address_details	=	$this->common_model->getaddress($data['organization']['zip']);
								 $profile_info = array(
								"st_city" => isset($address_details['city']) ? $address_details['city'] : '',
								"st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
								"st_zip" => $data['organization']['zip'],
								"st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
								"st_primary_phone" => $data['organization']['pphone'],
								"dt_modified" => date('Y-m-d H:i:s'),
								"in_status" => "1"
								);
								$this->user_model->update_user_profile_setting($profile_info,$this->session->userdata('userid'),'tbl_user_profile');	
								// hear need to update the users table to make status 1 
								$this->user_model->update_user_info(array("in_status"=>1),$this->session->userdata('userid'),'tbl_users');
								
							}
							// code for updating login user phone no and zip in the org sign up ends
							
							//code for setting organization profile privacy starts 11sept2014 by ghanshyam
							if(isset($organization_id) && $organization_id > 0)
							{
								$org_privacy_setting_data 		= array();			
								
								$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
								
								$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
								$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
								$org_privacy_setting_data['in_public'] 			=	0;
								$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
								
								//print_r($org_privacy_setting_data);exit;
								$this->load->model('organization_privacy_setting_model');
								$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
							 }					
							//code for setting organization profile privacy ends 11sept2014 by ghanshyam
							
							
							$admin_list = $this->common_model->get_admin_list();
							$this->organization_request_email($admin_list,"Shelter",$data['organization']);
							$this->session->unset_userdata('sign_up_org_name');
							$this->session->unset_userdata('sign_up_org_zip');
							$this->session->unset_userdata('orgId');
							$this->session->unset_userdata('orgtype');
							$this->session->set_flashdata('org_info', 'Your request has been successfully submitted for review!');
							redirect(base_url().'new-shelter-organization/');								
					}
				}
				
				else
				{	   
					// insert into shelter tbl
						$shelter_id = $this->organization_model->add_shelter($shelter_details); 	
					// insert into organization tbl
						$org_details = array("in_user_id"	=> $this->session->userdata('userid'), 
										"in_shelter_id"			=> $shelter_id,  
										"st_org_type"			=> $orgtype,
										"st_org_name"			=> $data['organization']['orgname'], 
										"st_org_ein"			=> $data['organization']['eni'], 
										"st_has_501c3"			=> ($data['organization']['501c3_certified']=='1')?"Y":"N",  
										"st_organization_501c3"	=> $data['organization']['c3_certificate'], 
										"st_has_contract"		=> ($data['organization']['adoption_contract']=='1')?"Y":"N",   
										"st_org_adoption"		=> $data['organization']['adoption_contract_file'],  
										"st_address1"			=> $data['organization']['address'], 
										"st_address2"			=> $data['organization']['address2'],  
										"st_city"				=> $data['organization']['city'], 
										"st_state"				=> $data['organization']['state'],
										"st_country"			=> $data['organization']['country'],
										"st_zip"				=> $data['organization']['zip'], 
										"st_director"			=> $data['organization']['manager'],  
										"st_email_address"		=> $data['organization']['email'],  
										"st_primary_phone"		=> $data['organization']['pphone'], 
										"st_secondary_phone"	=> $data['organization']['sphone'], 
										"st_fax"				=> $data['organization']['fax'], 
										"st_website"			=> $data['organization']['organization_website'], 
										"st_guideline"			=> $data['organization']['st_guideline'], 
										"st_additional_info"	=> $data['organization']['comments'],
										"st_profile_desc"		=> $data['organization']['profile_desc'],
										//"st_paypal_email"		=> $data['organization']['paypal_email'],
										"in_created_by"			=> $this->session->userdata('userid'), 
										"dt_created" 			=> $data['organization']['created_date'],
										"in_status"				=> "0", 
										"in_deleted"			=> "0"
										);	
					
						//$organization_id = $this->organization_model->add_organization($org_details);						
						//$data['organization']['organization_id'] = $organization_id;
						
						// echo '<pre>'; print_r($data['organization']); die;
				   if(isset($data['pending_org_details']['in_organization_id']) && !empty($data['pending_org_details']['in_organization_id'])){ 
				       $organization_id = $data['pending_org_details']['in_organization_id'];
				   }
				   else if($this->input->post('orgid'))
				   { 
					   $organization_id =  $this->input->post('orgid'); //die; //$this->session->userdata('orgId'); die;
				   } else {
					   $organization_id = $this->session->userdata('orgId');
				   }
				   $orgstatus = $this->organization_model->check_orgid($organization_id,$orgtype); //echo $this->input->post('orgid'); die;		
					if($orgstatus > 0){  
						//echo $this->input->post('orgid'); die;
						//echo $c3_certificate . '   '. $adoption_contract_file;die;
                    //$this->organization_model->update_organization($organization_id,$c3_certificate,$adoption_contract_file,$shelter_id);					
					$this->organization_model->update_organization($organization_id,$c3_certificate_file_name,$adoption_contract_file_name,$shelter_id);				
					$data['organization']['organization_id'] = $organization_id; 				 
					}
					if($orgstatus==0){
						//$organization_id = $this->organization_model->add_organization($org_details);
						//$data['organization']['organization_id'] = $organization_id;
					    //$this->session->userdata('orgId');
						$this->organization_model->edit_org($org_details,$this->session->userdata('orgId'));
						$data['organization']['organization_id'] = $this->session->userdata('orgId'); 
					} 
					
					// org coalition add
				
				//$joincoalition = $this->input->post('joincoalition');
				$joincoalition = $this->input->post('counter2');
				
			//echo '<pre>'; print_r($_POST); die;			
			if($joincoalition > 0){ 
				for($i=1; $i<=5; $i++){ 
					$coalition   = 'joincoalition'.$i;						
			     if($_POST[$coalition]!=''){		
					
					 
			$coalition_details = array(	"in_organization_id" => $this->session->userdata('orgId'), 
										"in_coalition_id"	 => $_POST[$coalition],
										"dt_created"         => date('Y-m-d H:i:s')
									);	
           							
			//echo '<pre>'; print_r($coalition_details); die;
			$coaid=$_POST[$coalition];
			$check	=	$this->common_model->is_coalition_exists($this->session->userdata('orgId'),$coaid);
			
			if($check == false)
			{					
					$this->organization_model->insertcoalition($coalition_details);	
			}					
				 }
				}
			
			}
				// org coalition add
						
						
						/*
							for($a=1;$a<=3;$a++)
							{
								$ref_details = array();
								if($data['organization']['ref_'.$a.'_name']!='' || $data['organization']['ref_'.$a.'_email']!='' || $data['organization']['ref_'.$a.'_phone']!='')
								{
									$ref_details = array(	"in_organization_id"	=> $organization_id, 
															"st_ref_type"			=> $data['organization']['reference_'.$a], 
															"st_ref_name"			=> $data['organization']['ref_'.$a.'_name'],
															"st_ref_email"			=> $data['organization']['ref_'.$a.'_email'],
															"st_ref_phone"			=> $data['organization']['ref_'.$a.'_phone'],  
															"dt_created"			=> date("Y-m-d H:i:s"),  
															"in_deleted"			=> "0"
															);
									//$this->organization_model->organization_references($ref_details);
								}
								
								// mail functionality starts added by sadique on 17-02-16	
							
										if($data['organization']['reference_'.$a] == 'V'){  
										$email_details = $this->common_model->get_email_containt("44");
										}
										if($data['organization']['reference_'.$a] == 'O'){
										$email_details = $this->common_model->get_email_containt("43");
										}
										if($data['organization']['reference_'.$a] == 'P'){
										$email_details = $this->common_model->get_email_containt("45");
										}			
								
									
										$data['user_name']	=	ucfirst($this->session->userdata('user_name'))." ".ucfirst($this->session->userdata('last_name'));
										$manager_name       =   $data['organization']['manager'];
										$org_name	=	$data['organization']['orgname'];
										
									if(isset($email_details[0]['st_email_body']))
									{   				
										
										$strMail='';
										$templete = $email_details[0]['st_email_body'];							
										$templete  = str_replace("##REFERENCE_NAME##",$data['organization']['ref_'.$a.'_name'],$templete);
										//$templete  = str_replace("##APPLICANT_NAME##",$data['user_name'],$templete);
										$templete  = str_replace("##APPLICANT_NAME##",$manager_name,$templete);
										$templete  = str_replace("##ORGANIZATION_NAME##",$org_name,$templete);		
										$this->load->library('email');
																
										$strMail 	= 	$templete;
										$to			=	$data['organization']['ref_'.$a.'_email'];
										$subject	=	$email_details[0]['st_email_subject'];
										$subject    = str_replace("##ORGANIZATION_NAME##",$org_name,$subject);	
										$subject    = str_replace("##APPLICANT_NAME##",$manager_name,$subject);
										$message	=	$strMail;
										$category  =    $email_details[0]['st_category'];
										$reply_to	=	"applications@doobert.zendesk.com";
										$this->common_function->send_mail($this->email, $to, $subject, $message, 'references@doobert.com' ,$cc ='', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
								   }				
					
								//mail functionality ends									
							}
							*/
							
							
							 if(!empty($data['organization']['zip']))
							 {
								$zip_code_state = $this->common_model->get_zipcode_info($data['organization']['zip']);
								if($zip_code_state['state_prefix']=='CO')
								{
							
									//$to = 'nirav.motta@pulsesolutions.net';
									//$to = array($data['organization']['st_email_address'],'support@doobert.zendesk.com');
									$colorado_email_notification = $this->common_model->get_email_containt("84");
									$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
									$to = array($data['organization']['email']);
									if(isset($colorado_email_notification[0]['st_email_body']))
									{
										$message  = $colorado_email_notification[0]['st_email_body'];
										$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
										$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
										$message  = str_replace("##display_name##",$manager_name,$message);
										$message  = str_replace("##DONATION##",$donation,$message);
										$subject  = $colorado_email_notification[0]['st_email_subject'];
										$category = $colorado_email_notification[0]['st_category'];
										$this->mail_notify_colorado($to,$subject,$category,$message);	
									}
									$this->notify_mailto_zendesk($manager_name);		
								}	 
							 }
							
							$org_links_array = $this->input->post('guideline_url'); 
							for($links_cnt=0;$links_cnt<count($org_links_array);$links_cnt++)
							{  
								$org_links_data = array();
								
								if(isset($org_links_array[$links_cnt]) && $org_links_array[$links_cnt] != '')
								{					
									$org_links_array[$links_cnt] = "http://" . $org_links_array[$links_cnt];
								
									$org_links_data = array(	"in_organization_id"	=> $organization_id, 
																"st_org_link"			=> $org_links_array[$links_cnt],
																"dt_created"			=> date("Y-m-d H:i:s"),  
																"in_deleted"			=> "0"
															);
									$this->organization_model->organization_links_detail($org_links_data);
								}
							}
							
							$guidelines_imgs = explode(",",$data['organization']['image_file']);
							//echo "<pre>";print_r($guidelines_imgs);die;
							/*if(!empty($guidelines_imgs))
							{
								for($q=0;$q<count($guidelines_imgs);$q++)
								{
									if($guidelines_imgs[$q]!='')
									{
										$upload_details = array("in_organization_id"	=> $organization_id,
																"st_file_name"			=> $guidelines_imgs[$q],
																"in_doc_type"			=> "1",
																"dt_created"			=> date("Y-m-d H:i:s"),
																"in_deleted"			=> "0"
																);
										$this->organization_model->organization_images($upload_details);
									}
								}
							}*/
							
						
							
							// code for updating login user phone no and zip in the org sign up task 14 june'16
							if($this->session->userdata('sign_up_org_name'))
							{
								$this->load->model('user_model');
								$address_details	=	$this->common_model->getaddress($data['organization']['zip']);
								 $profile_info = array(
								"st_city" => isset($address_details['city']) ? $address_details['city'] : '',
								"st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
								"st_zip" => $data['organization']['zip'],
								"st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
								"st_primary_phone" => $data['organization']['pphone'],
								"dt_modified" => date('Y-m-d H:i:s'),
								"in_status" => "1"
								);
								$this->user_model->update_user_profile_setting($profile_info,$this->session->userdata('userid'),'tbl_user_profile');	
								// hear need to update the users table to make status 1 
								$this->user_model->update_user_info(array("in_status"=>1),$this->session->userdata('userid'),'tbl_users');
								
							}
							// code for updating login user phone no and zip in the org sign up ends
							
							//code for setting organization profile privacy starts 11sept2014 by ghanshyam
							if(isset($organization_id) && $organization_id > 0)
							{
								$org_privacy_setting_data 		= array();			
								
								$geninfo_array = array ( '0' => 'smanager', '1' => 'sorg_type', '2' => 'sorg_ein', '3' => 'shas_501c3', '4' => 'shas_contract', '5' => 'sorg_desc', '6' => 'saddress', '7' => 'sphone', '8' => 'semail', '9' => 'sfax', '10' => 'swebsite', '11' => 'sguide', '12' => 'sguidelink', '13' => 'sguideimage' );
								
								$org_privacy_setting_data['st_general_info'] 	=	serialize($geninfo_array);	
								$org_privacy_setting_data['in_organization_id']	=	$organization_id;		
								$org_privacy_setting_data['in_public'] 			=	0;
								$org_privacy_setting_data['dt_updated'] 		= 	date('Y-m-d H:i:s');
								
								//print_r($org_privacy_setting_data);exit;
								$this->load->model('organization_privacy_setting_model');
								$data['org_privacy_info']		=	$this->organization_privacy_setting_model->add_org_privacy_setting($org_privacy_setting_data);	
							 }					
							//code for setting organization profile privacy ends 11sept2014 by ghanshyam
							
							
							$admin_list = $this->common_model->get_admin_list();
							$this->organization_request_email($admin_list,"Shelter",$data['organization']);
							$this->session->unset_userdata('sign_up_org_name');
							$this->session->unset_userdata('sign_up_org_zip');
							$this->session->unset_userdata('orgId');
							$this->session->unset_userdata('orgtype');
							$this->session->set_flashdata('org_info', 'Your request has been successfully submitted for review!');
							redirect(base_url().'new-shelter-organization/');			
				}
				
			}
		}	
		
		else
		{	
			
			$data['pending_org_details'] = $this->organization_model->pending_org_details($orgtype);
			if(isset($data['pending_org_details']['in_organization_id']) && $data['pending_org_details']['in_organization_id']!=''){
				$this->session->unset_userdata('orgId');
			$this->session->set_userdata('orgId',$data['pending_org_details']['in_organization_id']);
			$data['organization_ref'] = $this->organization_model->get_organization_ref($data['pending_org_details']['in_organization_id']);
			 $data['upload_doc'] = $this->organization_model->get_org_upload_doc($data['pending_org_details']['in_organization_id']);
			}	
			//echo "<pre>";print_r($data['pending_org_details']);die;
			if(isset($data['pending_org_details']['in_status']) &&  $data['pending_org_details']['in_status'] == 4){		
			$this->load->view('organization-new-shelter',$data);	
			return;
			}
			$this->load->view('organization-new-shelter',$data);	 		
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	add_images
	#	Purpose		:	For Adding Product Images
	# *******************************************************************************************
	
	public function add_guidelines_images() {
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		
		
		$ext = pathinfo($_FILES['files']['name'], PATHINFO_EXTENSION);
		//$filename = time(basename($_FILES['files']['name'], ".".$ext));
		//$flname= $filename . '.'.$ext; 

		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."org_doc/";
		$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
		//$config['allowed_types'] = 'doc|docx|pdf';
		$config['max_size']	= '5120'; //5mb
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		$config['file_name'] = time().".".$ext;
		
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');

		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."org_doc/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."organization/delete_files/org_doc/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
			$upload_details = array("in_organization_id"	=> $this->session->userdata('orgId'),
									"st_file_name"			=> $config['file_name'],
									"in_doc_type"			=> "1",
									"dt_created"			=> date("Y-m-d H:i:s"),
									"in_deleted"			=> "0"
								);
							
			$this->organization_model->organization_images($upload_details);	
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	function generate_download($document)
    {	
		
        $file = $this->config->item('upload')."org_doc/".$document;
		
		if ($document!='' && file_exists($file)) {
		
		$this->load->helper('download');
		$data = file_get_contents($file); // Read the file's contents
		$name = $document;
		force_download($name, $data);
		}
		else
		{   		
			$this->session->set_flashdata('docmsg', 'File does not exist.');
			redirect($this->agent->referrer());		
			
		}
    }
	
	function login_as_organization_owner($userid,$orgid)
	{  
	
		$userId	=	$this->common_function->decode_base64($userid); 
		$orgId	=	$this->common_function->decode_base64($orgid);
		
		if(!$userId)
		{
			redirect($this->config->item('base_url'));
		}
		
		$user_details = $this->common_function->get_user_profile($userId);
		if(empty($user_details))
		{
			redirect($this->config->item('base_url'));
		}
		else
		{
			$this->session->set_userdata('userid',$userId);
			$this->session->set_userdata('user_name',$user_details['st_display_name']);
			$this->session->set_userdata('last_name',$user_details['st_last_name']);
			$this->session->set_userdata('email',$user_details['st_email']);
			$this->session->set_userdata('zip', $user_details['st_zip']);
			$this->session->set_userdata('org_id',$orgId);
			redirect($this->config->item('base_url').'org_info/approved_users');					
		}				
	}
	
	public function saveorganization()
	{   //print_r($_POST);die;
		$norec=$this->organization_model->orgexist($_POST['orgtype']);
		
		if($norec == true)
		{  	
			// update
			$this->organization_model->updateorg($_POST);			
			$this->organization_model->updatereferences($_POST);			
			$this->organization_model->updateguidelinelink($_POST);			
			
		}
		else{  
			// insert	            		
			$orgid=$this->organization_model->addorg($_POST);			
			$this->session->set_userdata('orgId',$orgid);					
		}
	}

	public function upload_shelter_letter()
	{
		if(isset($_FILES['approval_file_1']) && $_FILES['approval_file_1']['name']!='')
		{  
			if($this->organization_model->upload_approval_files('approval_file_1')){
				$arrImageInfo = $this->upload->data();
				$approval = $arrImageInfo['file_name'];
				$verify_approval_letter = $this->organization_model->verify_shelter_approval($this->session->userdata('orgId'));
				if(count($verify_approval_letter)>0)
				{
					$upload_details = array("st_file_name" => $approval);
					$this->organization_model->update_approval_letter($upload_details,$verify_approval_letter['in_org_upload_id']);
					
				}else {	
					$upload_details = array("in_organization_id"	=> $this->session->userdata('orgId'),
										"st_file_name"			=> $approval,
										"dt_created"			=> date("Y-m-d H:i:s"),
										"in_deleted"			=> "0");
					$this->organization_model->shelter_approval_letter($upload_details);
				}
				$status_message = array('status'=>'success','msg'=>'File uploaded successfully','file_name'=>$approval);	
				}else{
						$this->upload->display_errors();
						//$error .= "<p>Approval latter ".$a." is invalid.</p>" ;
						$error = "Approval letter is invalid." ;
				$status_message = array('status'=>'fail','msg'=>strip_tags($this->upload->display_errors()));		
			}
		}
		echo json_encode($status_message);	
	}
	
	public function save_org_documents()
	{
		if($this->input->post('orgid'))
		{
			$orgid = $this->input->post('orgid');
		} else {
			$orgid = $this->session->userdata('orgId');
		}	

		if(isset($_FILES['c3_certificate']) && $_FILES['c3_certificate']['name']!='')
		{
				//echo $this->organization_model->upload_files('c3_certificate');
				if($this->organization_model->upload_files('c3_certificate')){
					$arrImageInfo = $this->upload->data();
					$c3_certificate = $arrImageInfo['file_name'];
					$insert_file_name = array('st_organization_501c3'=> $c3_certificate,'dt_modified'=>date('Y-m-d H:i:s'));
					//echo "<pre>";print_r($this->session->userdata('orgId')); echo "</pre>";
					$this->organization_model->add_doc_org($insert_file_name,$orgid);
					$status_message = array('status'=>'success','file_name'=>$c3_certificate);
				}else{
					//$error .= "501C3 Certified error: ".strip_tags($this->upload->display_errors())."<br>";
					$upload_error = "501C3 Certified error: ".strip_tags($this->upload->display_errors());
					$file_name = $this->organization_model->get_org_details($orgid);
					$status_message = array('status'=>'fail','msg'=>$upload_error,'file_name'=>$file_name['st_organization_501c3']);
				}
		}
			#===================== End Upload Contract=================#
			#=====================Upload Contract=================#
			if(isset($_FILES['adoption_contract_file']) && $_FILES['adoption_contract_file']['name']!='')
			{
				if($this->organization_model->upload_files('adoption_contract_file')){
					$arrImageInfo = $this->upload->data();
					$adoption_contract_file = $arrImageInfo['file_name'];
					$insert_file_name = array('st_org_adoption'=> $adoption_contract_file,'dt_modified'=>date('Y-m-d H:i:s'));
					$this->organization_model->add_doc_org($insert_file_name,$orgid);
				   $status_message = array('status'=>'success','file_name'=>$adoption_contract_file);
				}else{
					$upload_error = "Adoption Contract error: ".strip_tags($this->upload->display_errors());
					$file_name = $this->organization_model->get_org_details($orgid);
					$status_message = array('status'=>'fail','msg'=>$upload_error,'file_name'=>$file_name['st_org_adoption']);
				}
			}
			    echo  json_encode($status_message);
	}
	
	public function delete_org_documents()
	{
		if($this->input->post('org_doc_type') == 'adoption_contract')	
			$insert_file_name = array('st_org_adoption'=>'','dt_modified'=>date('Y-m-d H:i:s'));
		else if($this->input->post('org_doc_type') == 'c3_certificate')
		{
		   $insert_file_name = array('st_organization_501c3'=>'','dt_modified'=>date('Y-m-d H:i:s'));
		}	
		if($this->input->post('orgid'))
		{
			$orgid = $this->input->post('orgid');
		} else {
			$orgid = $this->session->userdata('orgId');
		}	
					//echo "<pre>";print_r($this->session->userdata('orgId')); echo "</pre>";
		if(count($insert_file_name)>0)
		{		
			$this->organization_model->add_doc_org($insert_file_name,$orgid);
			
		} 
			echo $this->input->post('org_doc_type');	
	}
	
	
	public function verification(){ 
		$data = array();
		$this->load->view('org_verification_thank_you',$data);
	}
	
	function mail_notify_colorado($to,$subject,$category,$message)
	{
		$this->load->library('email');
		if(count($to)>0)
		{
			foreach($to as $key=>$value)
			{
				$this->common_function->send_mail($this->email,$value, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
			}	
		}
	}	
		function notify_mailto_zendesk($manager_name)
		{
			$colorado_email_notification = $this->common_model->get_email_containt("86");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			if(isset($colorado_email_notification[0]['st_email_body']))
			{
				$message  = $colorado_email_notification[0]['st_email_body'];
				$this->load->library('email');
				$message  = str_replace("##display_name##",$manager_name,$message);
				$message  = str_replace("##DONATION##",$donation,$message);
				$subject  = $colorado_email_notification[0]['st_email_subject'];
				$category = $colorado_email_notification[0]['st_category'];
				$this->common_function->send_mail($this->email,'support@doobert.zendesk.com', $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
			}
	   }
    public function organization_account_settings(){
		
		$this->load->view('organization-account-settings');
	}	   
	
	public function manage_volunteer_users(){
		
		$this->load->view('manage-volunteer-users');
	}	  
	
	#=========================================================
    #	Function : validdate_urls
    #	Purpose  : Call Back function url is validor not
    #=========================================================	

    function validate_urls($str) {
        if ($str == '') {
            return TRUE;
        }
        $pattern = "/^([A-Z0-9][A-Z0-9_-]*(?:\.[A-Z0-9][A-Z0-9_-]*)+):?(\d+)?\/?/i";
        if (!preg_match($pattern, $str)) {
            $this->form_validation->set_message('validate_urls', 'Invalid URL.');
            return FALSE;
        } else {
            return TRUE;
        }
    }

	function login_as_organization_notification_setting($userid,$orgid)
	{  
		
		$userId	=	$this->common_function->decode_base64($userid); 
		$orgId	=	$this->common_function->decode_base64($orgid);
				
		if(!$userId)
		{
					redirect($this->config->item('base_url'));
		}
				
		$user_details = $this->common_function->get_user_profile($userId);
		if(empty($user_details))
		{
					redirect($this->config->item('base_url'));
		}
		else
		{
					$this->session->set_userdata('userid',$userId);
					$this->session->set_userdata('user_name',$user_details['st_display_name']);
					$this->session->set_userdata('last_name',$user_details['st_last_name']);
					$this->session->set_userdata('email',$user_details['st_email']);	
					$this->session->set_userdata('zip', $user_details['st_zip']);
					$this->session->set_userdata('org_id',$orgId);
					redirect($this->config->item('base_url').'org_info/org_notify');					
		}				
	}

	function login_as_organization_partner($userid,$orgid,$partner_org_id)
	{  
		
		$userId	=	$this->common_function->decode_base64($userid); 
		$orgId	=	$this->common_function->decode_base64($orgid);
		$partner_orgID	=	$this->common_function->decode_base64($partner_org_id);
		$data = array();	
		if(!$userId)
		{
					redirect($this->config->item('base_url'));
		}
				
		$user_details = $this->common_function->get_user_profile($userId);
		if(empty($user_details))
		{
					redirect($this->config->item('base_url'));
		}
		else
		{
					$this->session->set_userdata('userid',$userId);
					$this->session->set_userdata('user_name',$user_details['st_display_name']);
					$this->session->set_userdata('last_name',$user_details['st_last_name']);
					$this->session->set_userdata('email',$user_details['st_email']);
					$this->session->set_userdata('zip', $user_details['st_zip']);
					$verify_org_partner = $this->organization_model->verify_organization_partner($orgId,$partner_orgID);
					if(count($verify_org_partner)>0)
					{
						$this->session->set_userdata('org_id',$partner_orgID);
						redirect($this->config->item('base_url').'org_dashboard/available_animal_list/'.$this->session->userdata('org_id'));
					} else {
						$get_org = $this->common_model->get_single_org_details($orgId);
						$get_partner_org = $this->common_model->get_single_org_details($partner_orgID);
						$data['org_name'] 		  = $get_org['st_org_name'];
						$data['partner_org_name'] = $get_partner_org['st_org_name'];	
						$this->session->set_userdata('org_id',$orgId);
						$this->load->view('partner_message_info',$data);
						//redirect($this->config->item('base_url').'org-dashboard/'.$this->session->userdata('org_id'));
					}	
		}				
	}	
	
	
	
	public function organization_profile_details_owner($org_id) {
		/*if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}*/
		
		$data = array();
		//Getting detail sof organization
		$data['success']='';
		$data['org_profile'] = $this->organization_model->organization_profile($org_id);
		//echo '<pre>'; print_r($data['org_profile']); die;
		$data['guideline_links_details'] = $this->organization_model->get_guideline_links($org_id);
		$data['organization_files'] = $this->organization_model->get_org_guideline_files($org_id);
		$data['transport_list'] = $this->organization_model->get_all_transport_for_org($org_id);
		$membership_status = $this->common_model->check_org_arpa($org_id);
		
		$st_coverage_area = $this->org_info_model->getCoordinates($org_id);
		if(!empty($st_coverage_area))
		{
			$data['coordinates'] = $st_coverage_area['st_coverage_area'];
			$data['center'] = $st_coverage_area['st_map_center'];
			$data['zoom'] = $st_coverage_area['st_map_zoom'];
		}
		
				
		if(isset($membership_status) && count($membership_status) > 0)
		{
					$member_ship_status = $membership_status['in_membership'];
					if($member_ship_status == 1)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/silver/'.$membership_status['in_arpa_org_id'].'_198_silver.png';			
					}
					 else if($member_ship_status == 2)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/gold/'.$membership_status['in_arpa_org_id'].'_198_gold.png';
					}
					else if($member_ship_status == 3)
					{
						$image_path_apra = 'http://dev.animalrescueprofessionals.org/org/uploads/platinum/'.$membership_status['in_arpa_org_id'].'_198_plat.png'; 
					}
					else {
						$image_path_apra = '';
					}	
		} else {
						$image_path_apra = '';
				}

		$data['image_path_apra'] = $image_path_apra;				
		
		$this->load->model('organization_privacy_setting_model');
		$data['organization_privacy_setting_details'] 	= $this->organization_privacy_setting_model->get_organization_privacy_setting_by_org_id($org_id);				
		$data['organization_privacy_setting_details']['in_public'] = 0;
		$data['Err_Msg'] = '';
		if(empty($data['org_profile'])) {
			redirect(base_url());
		}
		$form_field	=	array('txtyourname'			=> "",
							  "txtamount"			=> "",
							  "extra_amt_doobert"	=> ""
							  
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['post_data'][$key] = $value;	
		}
		if($this->input->post('disaster_mode') && $this->input->post('disaster_mode')=='YES')
		{		
			
			
				
			$name=$this->input->post('name');
			$email=$this->input->post('email');			
			$phone=$this->input->post('phone');
			$location=$this->input->post('location');
			$comment=$this->input->post('comment');
			$receiveremail=$this->input->post('receiveremail');
			$receivername=$this->input->post('receivername');			
			$orgowneremail=$this->input->post('orgowneremail');
			$orgownername=$this->input->post('orgownername');
						
			$email_details = $this->common_model->get_email_containt("152");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				
			$this->load->library('email');
			
			if(isset($email_details[0]['st_email_body']))
			{
				$templete  = $email_details[0]['st_email_body'];
				$templete  = str_replace("##current_year##",date('Y'),$templete);
				$templete  = str_replace("##DONATION##",$donation,$templete);
				
				// Digester mode email template
				$strMail1 	= 	$templete;
				$strMail1    = str_replace("##user_name##",$receivername,$strMail1);
				$strMail1    = str_replace("##name##",$name,$strMail1);
				$strMail1    = str_replace("##email##",$email,$strMail1);
				$strMail1    = str_replace("##phone##",$phone,$strMail1);
				$strMail1    = str_replace("##location##",$location,$strMail1);
				$strMail1    = str_replace("##comment##",$comment,$strMail1);				
				
				// owner email template
				$strMail2 	= 	$templete;
				$strMail2    = str_replace("##user_name##",$orgownername,$strMail2);
				$strMail2    = str_replace("##name##",$name,$strMail2);
				$strMail2    = str_replace("##email##",$email,$strMail2);
				$strMail2    = str_replace("##phone##",$phone,$strMail2);
				$strMail2    = str_replace("##location##",$location,$strMail2);
				$strMail2    = str_replace("##comment##",$comment,$strMail2);
				
				
				$toreceiver			=	$receiveremail;
				$toowner		    =	$orgowneremail;
				
				$subject	        =	$email_details[0]['st_email_subject'];
				
				$receivermessage	=	$strMail1;				
				$ownermessage	    =	$strMail2;
				
				$user_to_id = $this->common_model->get_user_id_by_email($toreceiver);						
				$receivermessage = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($toreceiver),$receivermessage);		
				$receivermessage = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($toreceiver),$receivermessage);
								
				$this->common_function->send_mail($this->email, $toreceiver, $subject, $receivermessage,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));	
				
				$result = $this->common_function->send_mail($this->email, $toowner, $subject, $ownermessage,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));	
		
				if($result){
					$data['success'] = 'Request sent successfully';	
				}else{
					$data['success'] = 'Invalid email';
				}
				
				
					
			}			
	
		}
		if($this->input->post('action'))
		{
			foreach ($form_field as $key => $value)
			{	
				$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			//echo "<pre>";print_r($data['post_data']);die;
				$this->form_validation->set_rules('txtyourname', 'Name', 'trim|required');
				$this->form_validation->set_rules('txtamount', 'Amount', 'trim|required|numeric');	
			
			
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('organization-profile-public',$data);	
			}
			else
			{
				//echo "<pre>";print_r($this->input->post());die;
				$cancel_url  = "http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
				//echo $cancel_url;die;
				$amount  = $data['post_data']['txtamount'];
				$doobert_amount  = (5*$amount)/100;
				$actual_amount	 = $amount-$doobert_amount;
				$full_amount	 = $amount;
				if($data['post_data']["extra_amt_doobert"]!='')
				{
					$doobert_amount  = $doobert_amount;
					$actual_amount	 = $amount;
					$full_amount	 = $amount+ $doobert_amount;
				}
				$this->session->set_userdata('org_thank_you',$org_id);
				$insert_data = array("in_organization_id"	=> $org_id,
									 "st_donar_name"		=> $data['post_data']['txtyourname'],
									 "in_donation_amount"	=> $actual_amount,
									 "st_status"			=> "0",
									 "st_doobert_amount"	=> $doobert_amount,
									 "dt_created"			=> date("Y-m-d Hi:s"),
									 "in_deleted"			=> "0");
				$donation_id = $this->organization_model->add_org_donation($insert_data);
				#=================================Paypal Payment Process=================================#
				$paypal_details = array("paypal_email"		=> $data['org_profile']['st_paypal_email'],
										"doobert_amount"	=> $doobert_amount,
										"user_amount"		=> $actual_amount,
										"fullamount"		=> $full_amount,
										"tracking_id"		=> "org_donation".$donation_id,
										"st_custom_url"		=> $cancel_url,
										"thank_you"			=> $this->config->item('base_url')."organization/thank_you/"
										);					 					 
				$paypal_error = $this->paypal_payment($paypal_details);	
				if(isset($paypal_error['error']) && !empty($paypal_error['error']))
				{
					$data['Err_Msg'] = $paypal_error['error'];
					$this->load->view('organization-profile-public',$data);
				}
				#==========================================End===========================================#
			}
		}
		else
		{
			$this->load->view('organization-profile-public',$data);
		}
		//$this->load->view('organization-profile-public',$data);
	}
	
	public function get_org_details()
	{
		$org_id = $this->input->post('org_id');
		$cnt = $this->input->post('cnt');
		$org_details = array();
		$org_details = $this->common_model->get_single_org_details($org_id);
		$org_html = '';
		if(count($org_details)>0)
		{
			if(isset($org_details['st_org_image']) && $org_details['st_org_image']!='' && file_exists($this->config->item('upload').'org_doc/thumb/'.$org_details['st_org_image']))
			{
				$org_img = $org_details['st_org_image']; 
			} else {
				$org_img = 'temp-logo.jpg';
			}		
			$org_html .= '<div class="orglist participate_in_id_'.$cnt.'"><div class="col-lg-8 col-md-8 col-sm-7 col-xs-7 pad0">';
			$org_html .= '<div class="col-lg-2 col-md-2 col-sm-2 col-xs-3 pad0"><img src="'.base_url().'upload/org_doc/thumb/'.$org_img.'" alt="'.$org_details['st_org_name'].'" title="'.$org_details['st_org_name'].'"></div>';
			$org_html .= '<div class="col-lg-10 col-md-10 col-sm-10 col-xs-9 pad0 orgtitle"><input type="hidden" id="participate_org_id_'.$cnt.'" name="participate_org_id_'.$cnt.'" value="'.$org_details['in_organization_id'].'" /><p>'.$org_details['st_org_name'].'</p></div>';
			$org_html .= '</div>';
			$org_html .= '<div class="col-lg-4 col-md-4 col-sm-5 col-xs-5 padr0 switch-container option">';
			$org_html .= '<div class="choose"><span class="description">Sending</span><label class="switch"><input type="checkbox" value="1" name="send_receive[]" data-orgid="'.$cnt.'"><span class="slider round"></span></label><span class="description select">Receiving</span><input type="hidden" name="invitation_type_'.$cnt.'" class="invitation_type" id="invitation_type_'.$cnt.'" value="sending" /> <a href="void:javascript(0);" onclick="delete_org_list('.$cnt.')">X</a> </div>';
			$org_html .= '</div><div class="br"></div><input type="hidden" id="participate_in_id_'.$cnt.'" name="participate_in_id_'.$cnt.'" value="" /></div>';
			
		}

		echo $org_html;	
	}

	public function get_manage_vehicle()
	{
		$option_html = '';
		$vehicle_list	= $this->organization_model->get_vehicle($this->input->post('org_id'));
		//$veh_id 		= $this->input->post('vehicle_id')?$this->input->post('vehicle_id'):'';
		if(count($vehicle_list)>0)
		{
			$option_html .='<option value="">Select Vehicle</option>';
			foreach($vehicle_list as $key=>$value)
			{
				/*if($veh_id == $value['in_vehicle_id'])
				{	
					$option_html .='<option value="'.$value['in_vehicle_id'].'" checked>'.$value['st_vehicle_name'].'</option>';
				} else {*/
					$option_html .='<option value="'.$value['in_vehicle_id'].'">'.$value['st_vehicle_name'].'</option>';
				//}		
			}	
		}		
		echo $option_html;
	}	

	public function get_manage_vehicle_detail()
	{
		$option_html = '';
		$vehicle_detail_list	= $this->organization_model->get_vehicle_detail($this->input->post('veh_id'));		
		echo json_encode($vehicle_detail_list);
	}
}

/* End of file organization.php */
/* Location: ./application/controllers/welcome.php */