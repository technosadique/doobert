<?php 
# ======================================================================================
# Created by		: Rajashri Mahapure
# Created date		: 23-July-2018
# File description	: Controller for Android api testing
# Special - notes	: none
# Tables used		: android_api
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------

if (!defined('BASEPATH')) exit('No direct script access allowed');

class Android_api extends CI_Controller {

    public function __construct() {
        parent::__construct();
        $this->load->helper('url');
        $this->load->model('android_api_model');
        //error_reporting(0);		 
    }
    
   

     public function createhero() {
    	
    	$Heroarr = array(
		'st_name' => $_POST['name'],
		'st_realname' => $_POST['realname'],
		'in_rating' => $_POST['rating'],
		'st_teamaffiliation'=> $_POST['teamaffiliation'],
		'dt_created'	=> date('Y-m-d H:i:s')
		); 

    	$result = $this->android_api_model->add_heros($Heroarr);
		$response = array();
		if($result){

		 //record is created means there is no error
		 $response['error'] = false; 
		 
		 //in message we have a success message
		 $response['message'] = 'Hero addedd successfully';
		 
		 //and we are getting all the heroes from the database in the response
		 $response['heroes'] = $this->getHeroes();

		 }else{
		 
		 //if record is not added that means there is an error 
		 $response['error'] = true; 
		 
		 //and we have the error message
		 $response['message'] = 'Some error occurred please try again';
		echo json_encode($response);
		}
 	
	
	}


    public function getheroes(){   	
    	$response = array();
    	$heroes = $this->android_api_model->getHeroes();
    	$hero = array();
    	$data['error']="false";
    	$data['message']="Request successfully completed.";
		if(!empty($heroes)) {
			foreach($heroes as $key =>$row) {
			
				
			 $response['hero']['id'] = $row['in_id'];
			 $response['hero']['name'] = $row['st_name'];
			 $response['hero']['realname'] = $row['st_realname'];
			 $response['hero']['rating'] = $row['in_rating'];
			 $response['hero']['teamaffiliation'] = $row['st_teamaffiliation'];
			 $data['heroes'][] = $response['hero'];
				
			}



		}
		
		echo json_encode($data); 
 		

    }

    public function updatehero(){    	
		$id 				= $_POST['id'];
		$st_name 			= $_POST['name'];
		$st_realname 		= $_POST['realname'];
		$in_rating 			= $_POST['rating'];
		$st_teamaffiliation = $_POST['teamaffiliation'];
			
		$Heroarr = array(
			'st_name'		=> $st_name,
			'st_realname'	=> $st_realname,
			'in_rating' 	=> $in_rating,
			'st_teamaffiliation' => $st_teamaffiliation,
			'dt_updated' 	=> date('Y-m-d H:i:s')
			);
		$result = $this->android_api_model->updateheros($Heroarr, $id);
		$response = array();
		if($result ==1){

		 //record is created means there is no error
		 $response['error'] = false; 
		 
		 //in message we have a success message
		 $response['message'] = 'Hero addedd successfully';
		 
		 //and we are getting all the heroes from the database in the response
		 $response['heroes'] = $this->getHeroes();

		 }else{
		 
		 //if record is not added that means there is an error 
		 $response['error'] = true; 
		 
		 //and we have the error message
		 $response['message'] = 'Some error occurred please try again';
		echo json_encode($response);
		}
 	
	
	}

    public function deletehero($id){
    	
      	$Heroarr = array(
			'in_deleted'	=> 1,			
			'dt_updated' 	=> date('Y-m-d H:i:s')
			);
		$result = $this->android_api_model->updateheros($Heroarr, $id);
		$response = array();
		if($result ==1){

		 //record is created means there is no error
		 $response['error'] = false; 
		 
		 //in message we have a success message
		 $response['message'] = 'Hero deleted successfully';
		 
		 //and we are getting all the heroes from the database in the response
		 $response['heroes'] = $this->getHeroes();

		 }else{
		 
		 //if record is not added that means there is an error 
		 $response['error'] = true; 
		 
		 //and we have the error message
		 $response['message'] = 'Some error occurred please try again';
		echo json_encode($response);
		}

    }



    public function insert_user($name, $email, $password) {
    	
	    $response = array("error" => FALSE);

	    if (isset($_POST['name']) && isset($_POST['email']) && isset($_POST['password'])) {
	    	$name = $_POST['name'];
	    	$email = $_POST['email'];
	    	$password = $_POST['password'];


	    	$user = $this->android_api_model->getByEmail($email);
	    	
		    if(empty($user)){
		        $hash = $this->hashSSHA($password);
		        $password = $hash["encrypted"]; // encrypted password
		        $salt = $hash["salt"]; // salt

		        $userarr = array(
		        	'st_name' 		=> $name,
		        	'st_email' 		=> $email,
		        	'st_password' 	=> $password,
		        	'st_salt' 		=> $salt,
		        	'dt_created'	=> date('Y-m-d H:i:s')
		        	);
		        $last_inserted_id = $this->android_api_model->insert_android_api($userarr);
		       	if(!empty($last_inserted_id)){
		       		$response["uid"] = $user["in_id"];
		            $response["user"]["name"] = $user["st_name"];
		            $response["user"]["email"] = $user["st_email"];
		            $response["user"]["created_at"] = $user["dt_created"];	           
		            echo json_encode($response);
		       	}else{
		       		$response["error"] = TRUE;
		            $response["error_msg"] = "Unknown error occurred in registration!";
		            echo json_encode($response);
		       	}
		    }else{
		    	$response["error"] = TRUE;
	        	$response["error_msg"] = "User already existed with " . $email;
	        	echo json_encode($response);
		    }
		}else{
			$response["error"] = TRUE;
		    $response["error_msg"] = "Required parameters (name, email or password) is missing!";
		    echo json_encode($response);
		}
    }


    public function getUserByEmailAndPassword($email="Rajashri@pulse.com", $password="123456") {
 		$response = array("error" => FALSE);
 		//if (isset($_POST['email']) && isset($_POST['password'])) {
 			//$email = $_POST['email'];
    		//$password = $_POST['password'];

 			$user = $this->android_api_model->getByEmail($email);
 			
	 		$salt = $user['st_salt'];       
	        $encrypted_password = $user['st_password'];
	        $hash = $this->checkhashSSHA($salt, $password);
			$userarr = $this->android_api_model->getByEmailPassword($email, $hash);        
	        if ($encrypted_password == $hash) {
	                // user authentication details are correct
	                //return $user;
	        	$response["error"] = FALSE;
		        $response["uid"] = $user["in_id"];
		        $response["user"]["name"] = $user["st_name"];
		        $response["user"]["email"] = $user["st_email"];
		        $response["user"]["created_at"] = $user["dt_created"];		        
		        echo json_encode($response);
	            
	        } else {
	            // user is not found with the credentials
		        $response["error"] = TRUE;
		        $response["error_msg"] = "Login credentials are wrong. Please try again!";
		        echo json_encode($response);
	        }
	    }
	   	/*else{
	    	 // required post params is missing
		    $response["error"] = TRUE;
		    $response["error_msg"] = "Required parameters email or password is missing!";
		    echo json_encode($response);
	    }
	    
        
    }*/



     /**
     * Encrypting password
     * @param password
     * returns salt and encrypted password
     */
    public function hashSSHA($password) {
 
        $salt = sha1(rand());
        $salt = substr($salt, 0, 10);
        $encrypted = base64_encode(sha1($password . $salt, true) . $salt);
        $hash = array("salt" => $salt, "encrypted" => $encrypted);
        return $hash;
    }

    /**
     * Decrypting password
     * @param salt, password
     * returns hash string
     */
    public function checkhashSSHA($salt, $password) {
 		$hash = base64_encode(sha1($password . $salt, true) . $salt);
 
        return $hash;
    }
}