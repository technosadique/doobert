<?php
# =======================================================
# Created by		: Rajashri Mhapure
# Created date		: 10-Jan-2018
# File description	: Arpa Organization Model for admin
# Special - notes	: none
# Tables used		: tbl_arpa_org
# Stored procedures	: NONE 
# Triggers used		: none
# -------------------------------------------------------
class arpa_organization_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
    
	#=====================================================================
	#	Function	:	get_total_arpa_organization()
	#  Parameter	: 	name,email,zip,contact,foundaed date, in501c3, membership, approved
	#	Purpose		:	sorting
	#---------------------------------------------------------------------
	
	public function get_total_arpa_organization($name='',$emailid='', $contact='',$zip='', $founded='' ,$in501c3='' , $membership='', 
		$approved='' , $foundedto ='')
	{ 			
				if($in501c3 == 'Y'){$in_501c3 = '1';}
				if($in501c3 == 'N'){$in_501c3 = '0';}
				if($in501c3 == ''){$in_501c3 = '';}
			
					//if($founded=='1969-12-31'){$fromdate='';  }
					//if($todate=='1969-12-31'){$todate='';  }
					
					$this->db->select('in_arpa_org_id','st_org_name','st_org_email','st_org_contact','st_org_mzip','dt_org_founded' ,'in_501c3' , 'in_membership' ,'in_approved');						   	
					$this->db->from('tbl_arpa_org');
					$this->db->where('in_deleted',0);
						
					if($name!= '') { 
						$name = str_replace("%","\%",$name);	
						#$this->db->like("st_display_name",$username);	
						$this->db->where("(st_org_name LIKE '%".addslashes($name)."%' )", NULL, FALSE);	
					}

					if(trim($emailid) != '') {
							$this->db->where("st_org_email", $emailid);
					}

					if(trim($contact) != '') {
							$this->db->where("st_org_contact LIKE '%".$contact."%'", NULL, FALSE);
					}

					
					if(trim($zip) != '') {
							if($zip=='%'){
							$this->db->where("st_org_mzip LIKE '%".$zip."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("st_org_mzip LIKE '%".$zip."%'", NULL, FALSE);
						}
					}
					
					
					if($founded!='' && $foundedto!='') {
							$this->db->where("dt_org_founded >= '".$founded."' AND dt_org_founded <= '".$foundedto. ' 23:59:59'."'", NULL, FALSE);
					}	
					

					if($in_501c3!='') {
							$this->db->where("in_501c3 LIKE '%".$in_501c3."%'", NULL, FALSE);
					}

					if($membership!='') {
							$this->db->where("in_membership LIKE '%".$membership."%'", NULL, FALSE);
					}

					if($approved!='') {
							$this->db->where("in_approved LIKE '%".$approved."%'", NULL, FALSE);
					}
						
									
					$query = $this->db->get();
					
					
					
					
		
		//$query = $this->db->query($sql);
		//echo $this->db->last_query(); exit;	
		
		return $query->num_rows();
	}
	
	#====================================================================================================
	#	Function	:	get_arpa_organization()
	#  Parameter	: 	sort,order,limit,rec_per_page,name,zip,contact, founded date, in501c3, membership, approved
	#	Purpose		:	to get arpa organization details
	#----------------------------------------------------------------------------------------------------
	public function get_arpa_organization($sort,$order,$limit,$rec_per_page,$name='',$emailid='', $contact='',$zip='', $founded='' ,$in501c3='' , $membership='', 
		$approved='', $foundedto ='')
	{	
				
				
				if($in501c3 == 'Y'){$in_501c3 = '1';}
				if($in501c3 == 'N'){$in_501c3 = '0';}
				if($in501c3 == ''){$in_501c3 = '';}
					//if($founded=='1969-12-31'){$fromdate='';  }
					//if($todate=='1969-12-31'){$todate='';  }		
					  
					$this->db->select("in_arpa_org_id, st_org_name,st_org_email,st_org_contact,in_501c3, in_membership, st_org_mzip,dt_org_founded, in_approved ", false);						   	
					$this->db->from('tbl_arpa_org');
					$this->db->where('in_deleted',0);
					  
					if($name!= '') { 
						$name = str_replace("%","\%",$name);	
						$this->db->where("(st_org_name LIKE '%".addslashes($name)."%' )", NULL, FALSE);	
					}

					if(trim($emailid) != '') {
							$this->db->where("st_org_email LIKE '%".$emailid."%'", NULL, FALSE);
					}

					if(trim($contact) != '') {
							$this->db->where("st_org_contact LIKE '%".$contact."%'", NULL, FALSE);
					}

					
					if(trim($zip) != '') {
							if($zip=='%'){
							$this->db->where("st_org_mzip LIKE '%".$zip."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("st_org_mzip LIKE '%".$zip."%'", NULL, FALSE);
						}
					}
					
					if($founded!='' && $foundedto!='') {
							$this->db->where("dt_org_founded >= '".$founded."' AND dt_org_founded <= '".$foundedto. ' 23:59:59'."'", NULL, FALSE);
					}

					if($in_501c3!='') {
							$this->db->where("in_501c3 LIKE '%".$in_501c3."%'", NULL, FALSE);
					}

					if($membership!='') {
							$this->db->where("in_membership LIKE '%".$membership."%'", NULL, FALSE);
					}

					if($approved!='') {
							$this->db->where("in_approved LIKE '%".$approved."%'", NULL, FALSE);
					}
					
			
					switch($sort)
						{
							case 'name':
								$this->db->order_by('st_org_name',$order);
							break;
							case 'emailid':							
								$this->db->order_by("st_org_email", $order);
							break;
							
							case 'contact':							
								$this->db->order_by('st_org_contact',$order);
							break;
							
							case 'zip':
								$this->db->order_by('st_org_mzip',$order);
							break;
													
							case 'founded': 								
								$this->db->order_by('dt_org_founded',$order);
							break;
							
							case 'in_501c3':
								$this->db->order_by('in_501c3',$order);
							break;

							case 'membership':
								$this->db->order_by('in_membership',$order);
							break;

							case 'approved':
								$this->db->order_by('in_approved',$order);
							break; 

							default:							
							$this->db->order_by('in_arpa_org_id',$order);
							break;
								         
						}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 
				
					
//					echo $this->db->last_query(); 
					$arrArpaOrganization = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrArpaOrganization[$Row->in_arpa_org_id]	= array('in_arpa_org_id'	=> $Row->in_arpa_org_id,
											'st_org_name'				=> htmlspecialchars_decode($Row->st_org_name),
											'st_org_email'				=> $Row->st_org_email,
											'st_org_contact'			=> $Row->st_org_contact,
											'st_org_mzip'				=> $Row->st_org_mzip,
											'dt_org_founded' 			=> $Row->dt_org_founded,
											'in_501c3'					=> $Row->in_501c3,
											'in_membership'				=> $Row->in_membership,
											'in_approved'				=> $Row->in_approved
											);
						}
						return $arrArpaOrganization;
						
					}
					
	}
	
	#============================================================
	#	Function	:	delete_org()
	#   Parameter	: 	orgId
	#	Purpose		:	to delete single arpa organization details
	#------------------------------------------------------------
	function delete_org($orgId)
	{
		$arrOrg = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_org', $arrOrg);		
	}


	#============================================================
	#	Function	:	delete_multiple_org()
	#   Parameter	: 	orgIds
	#	Purpose		:	to delete multiple arpa organization details
	#------------------------------------------------------------
	function delete_multiple_org($orgIds)
	{
		$arrOrg = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_arpa_org_id', $orgIds);
		$this->db->update('tbl_arpa_org', $arrOrg);		
		return $this->db->affected_rows();
	}



	#=============================================
	#	Function	:	get_arpa_org_info()
	#   Parameter	: 	arpaOrgId
	#	Purpose		:	to get arpa organization info
	#---------------------------------------------
	function get_arpa_org_info($arpaOrgId)
	{  
		
		$this->db->select("in_arpa_org_id, in_membership, st_org_name, st_org_email, st_org_password, st_org_contact, st_org_website, st_org_maddress, st_org_mcity, st_org_mstate, st_org_mzip, st_org_paddress, st_org_pcity, st_org_pstate, st_org_pzip, dt_incorporation, st_state_incorpo, dt_org_founded, st_org_mission, 
			st_org_profile, st_org_history, in_licensed, st_license, st_license_doc, in_501c3, st_org_ein, st_501c3_doc, st_990tax_doc, in_nonprofit, in_clinics,in_hunger, in_discomfort, in_pain, in_behavior, in_fear, st_ref_name1, st_ref_email1, st_ref_rela1, st_ref_phone1, st_ref_name2, st_ref_email2, st_ref_rela2, st_ref_phone2, st_ref_name3, st_ref_email3, st_ref_rela3, st_ref_phone3, st_txn_no, in_approved ,dt_created , st_vet_contact, in_mem_status,st_type_of_org,st_sub_typ_org,st_ad_org_inf,st_org_mcountry,st_org_pcountry,in_same_as_maddr" , false);
						   	
		$this->db->from('tbl_arpa_org');
		$this->db->where('in_arpa_org_id', $arpaOrgId);
		$this->db->where('in_deleted',0);
		//echo $this->db->last_query(); die;
	
		$results = $this->db->get()->result_array();
		
		return $results;	
	}
	
	
	#=============================================
	#	Function	:	get_arpa_gold_info()
	#   Parameter	: 	arpaOrgId
	#	Purpose		:	to get arpa gold info
	#---------------------------------------------
	function get_arpa_gold_info($arpaOrgId)
	{  
		
		$this->db->select("in_gold_id, in_arpa_org_id, in_aso_public, st_day_operation, in_paid_staff, in_paid_staff_no, in_unpaid_volu, in_unpaid_volu_no, in_appl_volu, st_appl_copy, in_foster_home, in_foster_home_no, st_fostercare, in_appl_foster, st_foster_appl_copy, in_fostercheck_appl, st_fostercheck, in_foster_training, st_foster_training, in_spayed, st_spayed_detail, st_animal_type, st_intake_source, in_liability, in_liability_amt, in_insur, in_insur_amt, in_adopt_cont, st_adopt_doc, in_min_age, in_vet_check, in_home_check, in_land_check, in_prop_check, in_back_check, st_adopt_desc, st_adopt_appl_doc, st_adopt_fee, st_adopt_fee_doc, in_adopt_event, st_adopt_event,st_adopt_event_doc ,st_return_policy, st_return_policy_doc, in_fundrising, st_fundrising_event  ", false);
						   	
		$this->db->from('tbl_arpa_gold');
		$this->db->where('in_arpa_org_id', $arpaOrgId);
		$results = $this->db->get()->result_array();
		return $results;	
	}

	
	#=============================================
	#	Function	:	get_arpa_org_memeber_info()
	#   Parameter	: 	arpaOrgId
	#	Purpose		:	to get arpa org memeber info
	#---------------------------------------------
	function get_arpa_org_memeber_info($arpaOrgId)
	{  
		
		$this->db->select("in_member_id,in_arpa_org_id, st_name,st_role, ", false);
						   	
		$this->db->from('tbl_arpa_org_member');
		$this->db->where('in_arpa_org_id', $arpaOrgId);
		$this->db->where('in_deleted',0);
		$results = $this->db->get()->result_array();
		return $results;	
	}


	#=============================================
	#	Function	:	get_arpa_platinum_info()
	#   Parameter	: 	arpaOrgId
	#	Purpose		:	to get arpa platinum info
	#---------------------------------------------
	function get_arpa_platinum_info($arpaOrgId)
	{  
		
		$this->db->select("in_platinum_id, in_arpa_org_id, in_track_intake, in_animal_no, in_bg_dog, in_bg_cat, in_bg_rab, in_bgcount_dog,
			in_bgcount_cat, in_bgcount_rab,
			in_track_outcome, in_adopt_no, in_ad_dog, in_ad_cat, in_ad_rab,in_adcount_dog, in_adcount_cat, in_adcount_rab,
			in_enthanization, in_enthanization_no, in_en_dog, in_en_cat, in_en_rab,
				in_encount_dog, in_encount_cat, in_encount_rab,
				 in_track_stay, in_stay_length, in_st_dog ,in_st_cat, in_st_rab, in_stcount_dog, in_stcount_cat, in_stcount_rab, in_accept_other, in_accept_other_no, in_ac_dog, in_ac_cat,in_ac_rab,  in_account_dog, in_account_cat, in_account_rab, in_transfer_out, in_transfer_out_no, in_to_dog, in_to_cat, in_to_rab,  in_tocount_dog, in_tocount_cat, in_tocount_rab, in_org_owned,  in_vol_tr, in_pd_tr, in_other, st_med_protocol, st_med_protocol_doc, st_ill_protocol, st_ill_protocol_doc, st_parasite, st_parasite_doc, in_microchip, st_microchip_type, in_incoming_test, st_incoming_test_desc, st_incoming_test_doc, st_org_aim, st_org_strategics , st_org_capabilities, st_org_progress, st_progress_sofar ", false);
						   	
		$this->db->from('tbl_arpa_platinum');
		$this->db->where('in_arpa_org_id', $arpaOrgId);
		$results = $this->db->get()->result_array();

		return $results;	
	}


	#============================================================
	#	Function	:	reject_arpa_org()
	#   Parameter	: 	orgId
	#	Purpose		:	to reject arpa organization details
	#------------------------------------------------------------
	function reject_arpa_org($orgId)
	{
		$arrOrg = 	array('in_approved' 	=> '2' );		
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_org', $arrOrg);		
	}


	#============================================================
	#	Function	:	accept_arpa_org()
	#   Parameter	: 	orgId ,$membershipId
	#	Purpose		:	to accept arpa organization details
	#------------------------------------------------------------
	function accept_arpa_org($orgId ,$data_array1)
	{
		//$arrOrg = 	array('in_approved' 	=> '1' ,'in_membership' => $memebershipId);		
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_org', $data_array1);		
	}
	
	function accept_arpa_gold($orgId ,$data_array2)
	{
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_gold', $data_array2);		
	}
	
	function accept_arpa_platinum($orgId ,$data_array3)
	{
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_platinum', $data_array3);		
	}
	
	function arpa_org_member1($st_member_id,$st_name){       
	 $i =0;
		 if(isset($st_name) && $st_name !=''){
			foreach($st_name as $key => $st_name1){
			$data['st_name'] = $st_name1;
			$this->db->where('in_member_id', $st_member_id[$i]);
			$this->db->update('tbl_arpa_org_member',$data); 
			$i++; 
			}
		 }
	}
 
	 function arpa_org_member2($st_member_id,$st_role){
		 $j =0;
		 if(isset($st_role) && $st_role !=''){
		   foreach($st_role as $key => $st_role1){
			$data['st_role'] = $st_role1;
			$this->db->where('in_member_id', $st_member_id[$j]);
			$this->db->update('tbl_arpa_org_member',$data); 
			$j++; 
			}
		 }
	 }
	#============================================================
	#	Function	:	update_password()
	#   Parameter	: 	orgId ,$password
	#	Purpose		:	to update arpa organization password
	#------------------------------------------------------------
	function update_arpa_org($orgId ,$updatearr)
	{
		$this->db->where('in_arpa_org_id', $orgId);
		$this->db->update('tbl_arpa_org', $updatearr);		
		return $this->db->affected_rows();
	}







}
?>