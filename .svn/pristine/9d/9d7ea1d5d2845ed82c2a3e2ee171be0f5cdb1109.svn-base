<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
# ------------------------------
# Created by: Rajashri Mahapure
# Created date: 21-Feb-2018
# File description: New location(controller)
# Special instructions-notes: none
# Tables used: tbl_zip_code
# Stored procedures: none 
# Triggers used: none
# ------------------------------

class Manage_locations extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	public function __construct()
    {
		parent::__construct();		
		$this->load->library('common_function');
		$this->load->library('pagination');		
		$this->load->library('form_validation');	
		$this->load->model('manage_location_model');
		$this->load->helper(array('form', 'url'));	  	
	}	
	public function index()
	{
		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		
		$this->session->unset_userdata('searchadmin1');	
		$this->session->unset_userdata('searchadmin2');	
		$this->session->unset_userdata('searchadmin3');
		$this->page();		
	}
	
	
	function page($sort=false,$order=false,$limit=false)
	{ 
		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		$data			 	=	array();
		$data['Err_Msg']	=	'';		
		$name				=	'';
		$searchcity = array();
		
		// SET DEFAULT RULES FOR PAGE LIST RESULT 
		if(!$sort)
			$sort='zip_code';
		
		if(!$order)
			$order = 'desc';
			
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';
	
		//state list
		$usarr = $this->common_function->state_list;
		$caarr = $this->common_function->canadian_state_list;
		$iarr = $this->common_function->indian_state_list;
		$tempstatearr = array_merge($usarr, $caarr);
		$data['statearr'] = array_merge($tempstatearr,$iarr);

		
		
//		echo "<pre>";print_r($data['statearr']);exit;
		// GET SEARCH KEYWORDS AND MAINTAIN FOR PAGINATION
		$totalrecord = 65000;
		if($this->input->post('city') || $this->input->post('zip_code') || ($this->input->post('action') == 'search'))
		{
			$tempstate = array();
			$searchcity = array();
			if($this->session->userdata('searchadmin1'))
				$this->session->unset_userdata('searchadmin1');						
				$this->session->unset_userdata('searchadmin3');	

			$tempcity  = trim(($this->input->post('city')));
			
			
			foreach ($data['statearr'] as $key => $value) {
	        	if (false !== stripos($value, $tempcity)) {
	        		$tempstate[] = $key;
	        	}
	    	}
	    	
	    	if(count($tempstate) != 0){
	    		$searchcity = $tempstate;
	    	}else{
	    		$searchcity[] = strtolower($tempcity);
	    	}
	    

			

			$this->session->set_userdata('searchadmin1',$this->common_function->custom_htmlentities($tempcity));								
			$this->session->set_userdata('searchadmin3',$searchcity);

			if($this->session->userdata('searchadmin2'))
				$this->session->unset_userdata('searchadmin2');						
				
			$zip_code  = trim(($this->input->post('zip_code')));				
			$this->session->set_userdata('searchadmin2',$this->common_function->custom_htmlentities($zip_code));
			
		}		

		if($this->session->userdata('searchadmin2') || $this->session->userdata('searchadmin3') )
				$totalrecord		= $this->manage_location_model->get_total_manage_locations($this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin2'));

		$rec_per_page =	$this->config->item('per_page');
		
		
		// GET COUNT of TOTAL RECORDS
		//
		// GET PAGE LIST RESULT HERE
		
		$data['location_list']	= $this->manage_location_model->get_manage_locations($sort,$order,$limit,$rec_per_page,$this->session->userdata('searchadmin3'), $this->session->userdata('searchadmin2'));
		
		
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('admin_base_url').'manage_locations/page/';
		$config['base_url']		= $config['base_url'].$sort.'/'.$order.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['first_link'] 	= FALSE;
		$config['last_link'] 	= FALSE;
		
		$config['prev_tag_open'] = "<li class=\"prev\">";
		$config['prev_link']  = "<i class=\"fa fa-angle-left\" title=\"Prev\"></i>";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open'] = "<li class=\"next\">";
		$config['next_link']  = "<i class=\"fa fa-angle-right\" title=\"Next\"></i>";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open'] = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']		=	'<li>';
		$config['num_tag_close'] 	=	'</li>';		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);	
		$data['per_page'] = $config['per_page'];
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $totalrecord ) ? $totalrecord : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']	  	   = $to;	
		
		// ------------------------ PAGINATION ENDS HERE -------------------------------		
		
		// SET DATA to MAINTAIN record track on any action
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;		
		$this->session->set_userdata('a_sort',$sort);
		$this->session->set_userdata('a_order',$order);
		$this->session->set_userdata('a_limit',$limit);
		
		if(count($data['location_list']) == 0)
		{
			$data['Err_Msg'] = 'No location information available.';
		}

		
		$this->load->view('manage-location-manage',$data);
	}
	
	
	function manage_locations_delete($locationId)
	{	
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));		
		}		
		$this->manage_location_model->delete_manage_locations($locationId);			
		$this->session->set_flashdata('success', 'New location information has been deleted successfully.');			
		redirect($this->config->item('admin_base_url').'manage_locations');
				
	}
	
	
		
		
	function delete_multiple_manage_locations()
	{   
	    
		$locationids = $this->input->post('locationid');		
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));	
		}
	
		if(!empty($locationids) && $this->input->post('B2') == 'Delete')
		{	
			$this->manage_location_model->delete_multiple_manage_locations($locationids);
			
			$this->session->set_flashdata('success', 'New location(s) information has been deleted successfully.');			
		}
			$sort 	= $this->session->userdata('a_sort');
			$order  = $this->session->userdata('a_order');
			$limit	= 0;
			
		if($this->session->userdata('a_limit'))
		{  
			$limit	= $this->session->userdata('a_limit');
		}
		redirect($this->config->item('admin_base_url').'manage_locations/page/'.$sort.'/'.$order.'/'.$limit);			
	}
	
	
		
	
	function manage_locations_edit($locationId)
	{		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		
		$data			 =	array();
		$data['Err_Msg']	=	'';		
		$data['id'] = $locationId;
		$form_field	=	array(
						'zip_code'		=> "",
						'city'			=> "",
						'state_prefix'	=> "",
						'st_country' 	=> ""
				);
		
		foreach($form_field as $key => $value)	
		{	
			$data['edit'][$key] = $value;	
		}	
		
		$data['manage_locations_details'] = $this->manage_location_model->get_manage_locations_profile($locationId);		
		
		
		if($this->input->post('action')=='Edit')
		{  
			//Validation rules
			$locationId 	= $this->input->post('id');									
			$this->form_validation->set_rules('city', 'City', 'trim|required');						
			$this->form_validation->set_rules('zip_code', 'Zip code', 'trim|required');
			$this->form_validation->set_rules('state_prefix', 'State', 'trim|required');
			$this->form_validation->set_rules('st_country', 'Country', 'trim|required');
				
			
			if($this->form_validation->run() == FALSE)
			{  
				$data['Err_Msg'] = validation_errors();						
				$data['manage_locations_details'] = $this->manage_location_model->get_manage_locations_profile($locationId);					
				$this->load->view('manage-location-edit',$data);	
			}
			else
			{ 		 
				$location_info 	=   array();
				$location_info['city'] 			=	$this->input->post('city');
				$location_info['zip_code'] 		=	$this->input->post('zip_code');
				$location_info['state_prefix'] 	=	$this->input->post('state_prefix');
				$location_info['st_country'] 	=	$this->input->post('st_country');	
				


				$statearr = array();
				$country = '';
				if($location_info['st_country'] == "US")
				{
					$country = "United States";
				}
				if($location_info['st_country'] == "CA")
				{
					$country = "Canada";
				}
				if($location_info['st_country'] == 'IN')
				{
					$country = 'India';
				}

				$usarr = $this->common_function->state_list;
				$caarr = $this->common_function->canadian_state_list;
				$iarr = $this->common_function->indian_state_list;
				$tempstatearr = array_merge($usarr, $caarr);
				$statearr = array_merge($tempstatearr,$iarr);

				foreach($statearr as $key=>$value)
				{
					if($location_info['state_prefix'] == $key){
						$state = $value;
					}
				} 
				
				$address =$location_info['city']."+".$state."+".$country."+".$location_info['zip_code'];
				$latlongarr = array();
				$latlongarr = $this->getlatlong($address);
				
				$location_info['lat'] = $latlongarr['lat'];
				$location_info['lon'] = $latlongarr['lon'];
				
				//Updating admin data				
				$this->manage_location_model->update_location_info($location_info,$locationId);					
				$this->session->set_flashdata('message', 'You have successfully updated location!');					
				redirect(site_url('manage_locations/manage_locations_edit/'.$locationId));
			
			}
		}
			
		else
		{			
			$this->load->view('manage-location-edit',$data);
		}
	}
	
	
	


	function manage_locations_add()
	{		 
	     if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		$data			 =	array();
		
		$form_field	=	array(
						'zip_code'		=> "",
						'city'			=> "",
						'state_prefix'	=> "",
						'st_country' 	=> ""
				);
			foreach($form_field as $key => $value)	
			{	
				$data['location_info'][$key] = $value;	
			}			
		
		if($this->input->post('action')=='Add')
		{  
			
			// validation starts
			foreach ($form_field as $key => $value) {	
				$data['location_info'][$key] = $this->input->post($key);	
			}
			
			$this->form_validation->set_rules('city', 'City', 'trim|required');						
			$this->form_validation->set_rules('zip_code', 'Zip code', 'trim|required');
			$this->form_validation->set_rules('state_prefix', 'State', 'trim|required');
			$this->form_validation->set_rules('st_country', 'Country', 'trim|required');
			
			if($this->form_validation->run() == FALSE)
				{
						$data['Err_Msg'] = validation_errors();												
						$this->load->view('manage-location-add',$data);	
				}
			else
			{  	

				$statearr = array();
				$country = '';
				if($data['location_info']['st_country'] == "US")
				{
					$country = "United States";
				}
				if($data['location_info']['st_country'] == "CA")
				{
					$country = "Canada";
				}

				$usarr = $this->common_function->state_list;
				$caarr = $this->common_function->canadian_state_list;
				$iarr = $this->common_function->indian_state_list;
				$tempstatearr = array_merge($usarr, $caarr);
				$statearr = array_merge($tempstatearr,$iarr);

				foreach($statearr as $key=>$value)
				{
					if($data['location_info']['state_prefix'] == $key){
						$state = $value;
					}
				} 
				
				$address =$data['location_info']['zip_code']."+".$state."+".$country."+".$data['location_info']['city'];
				
				$latlongarr = array();
				$latlongarr = $this->getlatlong($address);
				
				$data['location_info']['lat'] = $latlongarr['lat'];
				$data['location_info']['lon'] = $latlongarr['lon'];
				
						
				$inserted_loc = $this->manage_location_model->insertLocation($data['location_info']);
				if($inserted_loc >0)
				{	
					$this->session->set_flashdata('message', 'You have successfully created new location!');
				} else {
					$this->session->set_flashdata('message', 'New location is not inserted in the database!');
				}		
				redirect(site_url('manage_locations/manage_locations_add'));		
						
			}			
		}
		else
		{		     
			$this->load->view('manage-location-add',$data);
			
		}		
	}


	public function getlatlong($address){
		$address = str_replace(' ', '+', $address);
		$google_api_key = $this->config->item('googleapi_key');
		//$address1 ="1600+Amphitheatre+Parkway+Mountain+View";
				
		$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&key='.$google_api_key.'&alternatives=false&sensor=false';
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$geoloc = curl_exec($ch);
		$json = json_decode($geoloc);
		//echo "<pre>";print_r($json);
		$latlong = array ('lat' => $json->results[0]->geometry->location->lat, 'lon' => $json->results[0]->geometry->location->lng);
		return $latlong;
	}


	

}

/* End of file manage_locations.php */
/* Location: ./application/controllers/manage_locations.php */