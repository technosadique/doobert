<?php
# =======================================================
# Created by		: Sadique Mohammad
# Created date		: 15-Jan-2018
# File description	: Animal Model for admin
# Special - notes	: none
# Tables used		: tbl_product_category, tbl_animal_breed
# Stored procedures	: NONE 
# Triggers used		: none
# -------------------------------------------------------
class rescue_store_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	
	    
	#============================================================
	#	Function	:	get_total_animal_types()
	#  Parameter	: 	name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_total_category($name='')
	{ 		
					
		$this->db->select("tbl_product_category.in_cat_id", false);						   	
		$this->db->from('tbl_product_category');		
		$this->db->where('tbl_product_category.in_deleted','0');
		
					
		//if($name!='')
		//{			
		// $this->db->where("tbl_product_category.st_category LIKE '%".$name."%'", NULL, FALSE);
		///}	
		
		if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("tbl_product_category.st_category RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_product_category.st_category LIKE '%".$name."%'", NULL, FALSE);
						}
					}		
		
		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->num_rows();
	}
	
	
	
	#============================================================
	#	Function	:	get_category()
	#  Parameter	: 	sort,order,limit,rec_per_page,name
	#	Perpose		:	to check valid user login
	#------------------------------------------------------------
	public function get_category($sort,$order,$limit,$rec_per_page,$name)
	{
		
		
		/*$sql	= "SELECT tbl_product_category.in_animal_type_id,
						  tbl_product_category.st_animal_type_name,
						  tbl_product_category.dt_created,
						  tbl_product_category.dt_modified						  
				  FROM tbl_product_category WHERE tbl_product_category.in_deleted='0'";*/
				  
		$this->db->select("tbl_product_category.in_cat_id,
						   tbl_product_category.st_category,
						   tbl_product_category.in_status,
						    tbl_product_category.sort_order,
						   tbl_product_category.dt_created,
						   tbl_product_category.dt_modified", false);						   	
		$this->db->from('tbl_product_category');		
		$this->db->where('tbl_product_category.in_deleted','0');
					  
		//if($name!='')
		//{				  
		  //$sql.=" AND  tbl_product_category.st_category LIKE '%".$name."%'";
		 // $this->db->where("tbl_product_category.st_category LIKE '%".$name."%'", NULL, FALSE);
		//}
		
					if(trim($name) != '') {
							if($name=='%'){
							$this->db->where("tbl_product_category.st_category RLIKE '%".$name."%'", NULL, FALSE);
						}
						else
						{
							$this->db->where("tbl_product_category.st_category LIKE '%".$name."%'", NULL, FALSE);
						}
					}	
					
					switch($sort)
					{
						
						case 'name': 							
							$this->db->order_by('tbl_product_category.st_category',$order);
						break;	
						
						case 'sort_order': 							
							$this->db->order_by('tbl_product_category.sort_order',$order);
						break;
						
						case 'status': 							
							$this->db->order_by('tbl_product_category.in_status',$order);
						break;
						
						case "createddate":						
						$this->db->order_by('tbl_product_category.dt_created',$order);
					    break;	
						
						case "modifieddate":						
						$this->db->order_by('tbl_product_category.dt_modified',$order);
					    break;	
						
						default:						
						$this->db->order_by('tbl_product_category.st_category',$order);
						 break; 	         
					}
					  
					  
					  if(!isset($limit))
						{
							$limit=0;
						}
					
					$this->db->limit($rec_per_page,$limit);		
					$query = $this->db->get(); 

					//echo $this->db->last_query();die;					
									
					$arrCategory = array();
					
					
					if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{		$status='';
							if($Row->in_status == '1'){ $status = 'Active';}
							else{$status = 'Inactive';}
									
							$arrCategory[$Row->in_cat_id]	=	array('in_cat_id'	=> $Row->in_cat_id,
																	  'st_category'	=> $Row->st_category,
																	  'sort_order'	=> $Row->sort_order,
																	  'in_status'	=> $status,
																	  'dt_created'	=> $Row->dt_created,
																	  'dt_modified'	=> $Row->dt_modified																				
											);
						}
						return $arrCategory;
						
					}
					
	}
	
	
	
	#=====================================================================================
	#	Function	:	delete_category()
	#  Parameter	: 	catId
	#	Perpose		:	to delete single animal type details from tbl_product_category table
	#-------------------------------------------------------------------------------------
	function delete_category($catId)
	{
		$arrCategory = 	array('in_deleted' 	=> '1' );		
		$this->db->where('in_cat_id', $catId);
		$this->db->update('tbl_product_category', $arrCategory);		
	}
	
	
	
	
		
	#=====================================================================================
	#	Function	:	delete_multiple_animal_types()
	#  Parameter	: 	animalIds
	#	Perpose		:	to delete multiple animal types details from tbl_product_category table
	#--------------------------------------------------------------------------------------
	function delete_multiple_category($catId)
	{				
		$arrCategory = 	array('in_deleted' 	=> '1' );
		$this->db->where_in('in_cat_id', $catId);
		$this->db->update('tbl_product_category', $arrCategory);		
		return $this->db->affected_rows();
	}	
	
	
	
	#==========================================================================================
	#	Function	:	get_animal_types_profile()
	#   Parameter	: 	animalbreedIds
	#	Perpose		:	getting animal types profile from tbl_product_category table
	#------------------------------------------------------------------------------------------	
	function get_category_profile($catId)
	{
		$this->db->select('c.*');
		$this->db->from('tbl_product_category as c');		
		$this->db->where('c.in_cat_id',$catId);			
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	
	#==========================================================================================
	#	Function	:	update_animal_type_info()
	#   Parameter	: 	table, data, animaltypeId
	#	Perpose		:	updating animal types profile in tbl_product_category table
	#------------------------------------------------------------------------------------------	
	function update_category_info($data,$catId,$table) {		
		$this->db->where('in_cat_id',$catId);
		$this->db->update($table,$data);
		return $this->db->affected_rows();	
	}
	
	
	#==========================================================================================
	#	Function	:	insertAnimalTypes()
	#   Parameter	: 	post
	#	Perpose		:	inserting animal types details in tbl_product_category table
	#------------------------------------------------------------------------------------------	
	public function insertCategory($post)
	{
		 $arrCategory = 	  array(
								'st_category'			=>	$post['name'],	
								'sort_order'			=>	$post['sort_order'],
								'in_status'				=>	$post['active'],																					
								'dt_created'			=>  date("Y-m-d H:i:s"),	
								'in_deleted'		    =>	'0'																				
								);	
								$this->db->insert('tbl_product_category', $arrCategory);											
	}
	
	public function is_category_exists($name)
	{
		$this->db->select('in_cat_id');
		$this->db->from('tbl_product_category');							
		$this->db->where("st_category",$name); 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;
		
		if($query->num_rows()>0)
			return true;
		else
			return false;
		
	}
	
}
?>