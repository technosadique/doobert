<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
# ------------------------------
# Created by: sadique mohammad
# Created date: 24-Jun-2014
# File description: Plane_types(controller)
# Special instructions-notes: none
# Tables used: none
# Stored procedures: none 
# Triggers used: none
# ------------------------------

class Pending_invitation extends CI_Controller { 

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	public function __construct()
    {
		parent::__construct();					
		$this->load->library('pagination');		
		$this->load->model('member_model');	
		$this->load->helper(array('form', 'url'));			
	}	
	public function index($sort=false,$order=false,$limit=false)
	{	
		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }	
		 
		$data			 	=	array();
		$data['Err_Msg']	=	'';		
		
		
		// SET DEFAULT RULES FOR PAGE LIST RESULT 
			if(!$sort)
			$sort='orgname';
		
		if(!$order)
			$order = 'asc';
			
		if($this->uri->segment(6))
			$limit = $this->uri->segment(6);
		else	
			$limit = '0';
		
		$rec_per_page =	$this->config->item('per_page');		
		
		//echo 'app_type'.$app_type;exit;
		// GET COUNT of TOTAL RECORDS
		$totalrecord		= $this->member_model->get_total_pending_invitation(); 
		// GET PAGE LIST RESULT HERE
		
		$data['pending_invitation_list']	= $this->member_model->get_pending_invitation($sort,$order,$limit,$rec_per_page);
		
		//echo '<pre>'; print_r($data['pending_invitation_list']);die; 
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('admin_base_url').'pending_invitation/index/';
		$config['base_url']		= $config['base_url'].$sort.'/'.$order.'/'.$rec_per_page.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['first_link'] 	= FALSE;
		$config['last_link'] 	= FALSE;
		
		$config['prev_tag_open'] = "<li class=\"prev\">";
		$config['prev_link']  = "<i class=\"fa fa-angle-left\" title=\"Prev\"></i>";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open'] = "<li class=\"next\">";
		$config['next_link']  = "<i class=\"fa fa-angle-right\" title=\"Next\"></i>";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open'] = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']		=	'<li>';
		$config['num_tag_close'] 	=	'</li>';		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		//print_r($data['pagination']);exit;
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $totalrecord ) ? $totalrecord : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']	  	   = $to;	
		
		// ------------------------ PAGINATION ENDS HERE -------------------------------		
		
		// SET DATA to MAINTAIN record track on any action
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;

		
		$this->session->set_userdata('a_sort',$sort);
		$this->session->set_userdata('a_order',$order);
		$this->session->set_userdata('a_limit',$limit);
		
		if($totalrecord == 0)
		{
			$data['Err_Msg'] = 'No pending invitation(s) available.';
		}
		$data['adminId']	=	$this->session->userdata('sess_admin_id');		
		
		$this->load->view('pending-invitation',$data);				
		
	}	
	
	
	public function status_accept() {
	
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }		
		
		$data['status_accept'] = $this->member_model->status_accept($this->uri->segment(3));
		
		$data['notification'] = array(	'in_organization_id'	=>	$this->uri->segment(4),
										'in_user_id'			=>	$this->uri->segment(5),
										'in_type'				=>	15,
										'in_modified_by'		=>	$this->session->userdata('userid'),
										'dt_created'			=>	date('Y-m-d H:i:s'),
										'in_deleted'			=>	0
										);
		$data['notification_data'] = $this->member_model->join_org_notification($data['notification']);
		
		$this->session->set_flashdata('success', 'Invitation has been accepted successfully!');		
		redirect($this->config->item('admin_base_url').'pending_invitation');
		
	}
	
	public function status_reject() {
	
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }	
		
		//echo $this->uri->segment(3); die;		
		$data['status_reject'] = $this->member_model->status_reject($this->uri->segment(3));	
		$this->session->set_flashdata('success', 'Invitation has been rejected successfully!');	
		redirect($this->config->item('admin_base_url').'pending_invitation');
	}	
	
	
	
	function delete_multiple_pending_invitation()
	{ 	    
		$orguser_ids = $this->input->post('orguserid');	
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));	
		}
	
		if(!empty($orguser_ids) && $this->input->post('B2') == 'Delete')
		{	
			$this->member_model->delete_multiple_pending_invitation($orguser_ids);
			
			$this->session->set_flashdata('success', 'Invitation(s) has been deleted successfully.');			
		}
			$sort 	= $this->session->userdata('a_sort');
			$order  = $this->session->userdata('a_order');
			$limit	= 0;
			
		if($this->session->userdata('a_limit'))
		{  
			$limit	= $this->session->userdata('a_limit');
		}
		redirect($this->config->item('admin_base_url').'pending_invitation/index/'.$sort.'/'.$order.'/'.$limit);
			
	}
	
}

/* End of file drivers.php */
/* Location: ./application/controllers/drivers.php */