<?php
# ======================================================================================
# Created by		: Chetan Pedgaonkar
# Created date		: 21-Apr-2014
# File description	: user settings model for settings & notification
# Special - notes	: none
# Tables used		: tbl_users,tbl_notification
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class user_settings_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
	
	
	#=========================================================
	#	Function : update_settings
	#	Purpose  : Update account setting
	#=========================================================
    
	function update_settings($data,$userid){
		$this->db->where('in_user_id',$userid);
		$this->db->update('tbl_users',$data);
		return $this->db->affected_rows();
	}
	
	#=========================================================
	#	Function : get_user_details
	#	Purpose  : gettings user details
	#=========================================================
	
	function get_user_details($userid) {
		$this->db->select('in_user_id,st_email,st_password,in_public,in_login_direct');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$userid);
		//$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	#=========================================================
	#	Function : add_notification_settings
	#	Purpose  : Add notification setting data
	#=========================================================
	
	public function add_notification_settings($data) {
		$this->db->insert('tbl_user_notification_setting',$data);
		return $this->db->affected_rows();
	}
	
	#=========================================================
	#	Function : get_notification_data
	#	Purpose  : Get notification setting data
	#=========================================================
	
	public function get_notification_data($userid) {
		$this->db->select('in_notification_setting_id,in_notifiable_animal_breeds,in_animal_type_id');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_user_id',$userid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	#=========================================================
	#	Function : update_notification_settings
	#	Purpose  : Update notification setting data
	#=========================================================
	
	public function update_notification_settings($data,$key) {
		$this->db->where('in_notification_setting_id',$key);
		$this->db->update('tbl_user_notification_setting',$data);
		return $this->db->affected_rows();
	}
	
	#=========================================================
	#	Function : get_notification_breed
	#	Purpose  : get notification setting data by breed
	#=========================================================
	
	public function get_notification_breed($userid,$animal_type_id) {
		$this->db->select('in_notification_setting_id,in_notifiable_animal_breeds');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_user_id',$userid);
		$this->db->where('in_animal_type_id',$animal_type_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	animal_profile_details	
	#	Purpose		:	Getting animal profile details
	# *******************************************************************************************
	
	public function animal_profile_details($id) {
		$data = array();
		$this->db->select('a.in_animal_id,a.in_organization_id,a.st_animal_name,a.st_gender,a.in_animal_type_id,a.in_primary_breed_id,a.in_secondry_breed_id,a.in_tertiary_breed_id,a.in_age,a.in_demeanor_id,a.in_neutered_id,a.in_weight,a.st_crates_well,a.st_flight_risk,a.st_barrier_aggressive,a.st_ok_others,a.st_ok_explanation,a.st_micro_chipped,a.st_micro_chip_comp,a.st_on_clock,a.dt_date,a.st_medical_issue,a.st_medical_desc,a.st_profile_story,a.in_created_by,a.in_progress_status,a.in_next_status');
		$this->db->from('tbl_animal a');
		
		$this->db->where('a.in_animal_id',$id);
		$this->db->where('a.in_deleted',0);
		$query = $this->db->get();
		
		$row = $query->row_array();
		if(!empty($row)) {
			$data = array(	'in_animal_id'			=>	$row['in_animal_id'],
							'in_organization_id'	=>	$row['in_organization_id'],
							'st_animal_name'		=>	$row['st_animal_name'],
							'st_gender'				=>	$row['st_gender'],
							'in_animal_type_id'		=>	$row['in_animal_type_id'],
							'in_primary_breed_id'	=>	$row['in_primary_breed_id'],
							'in_secondry_breed_id'	=>	$row['in_secondry_breed_id'],
							'in_tertiary_breed_id'	=>	$row['in_tertiary_breed_id'],
							'in_age'				=>	$row['in_age'],
							'in_demeanor_id'		=>	$this->get_demeanor_details($row['in_demeanor_id']),
							'in_neutered_id'		=>	$row['in_neutered_id'],
							'in_weight'				=>	$row['in_weight'],
							'st_crates_well'		=>	$row['st_crates_well'],
							'st_flight_risk'		=>	$row['st_flight_risk'],
							'st_barrier_aggressive'	=>	$row['st_barrier_aggressive'],
							'st_ok_others'			=>	$row['st_ok_others'],
							'st_ok_explanation'		=>	$row['st_ok_explanation'],
							'st_micro_chipped'		=>	$row['st_micro_chipped'],
							'st_micro_chip_comp'	=>	$row['st_micro_chip_comp'],
							'st_on_clock'			=>	$row['st_on_clock'],
							'dt_date'				=>	$row['dt_date'],
							'st_medical_issue'		=>	$row['st_medical_issue'],
							'st_medical_desc'		=>	$row['st_medical_desc'],
							'st_profile_story'		=>	$row['st_profile_story'],
							'in_progress_status'	=>	$this->get_status_name($row['in_progress_status']),
							'in_next_status'		=>	$this->get_status_name($row['in_next_status']),
							'type_name'				=>	$this->get_animal_type_name($row['in_animal_type_id']),
							'demeanor_id'			=>	$row['in_demeanor_id']
						);
		}
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($row);die;
		return $data;
	}
	
	#=========================================================
	#	Function : get_notifications
	#	Purpose  : Getting notifications against current user
	#=========================================================
	
	public function get_notifications() {
		$data = array();
		/*$this->db->select('SQL_CALC_FOUND_ROWS  n.in_notification_id,n.in_animal_id,n.in_transportation_id,n.st_notification_msg,n.dt_created,o.st_org_image,u.st_profile_image',FALSE);
		$this->db->from('tbl_notification as n');
		$this->db->join('tbl_organization as o','o.in_organization_id = n.in_organization_id','LEFT');
		$this->db->join('tbl_users as u','u.in_user_id = n.in_modified_by','LEFT');
		
		//$this->db->join('tbl_user_notification_setting as s','n.in_animal_id = s.in_animal_id','LEFT');
		//$this->db->join('tbl_animal_type as a','a.in_animal_id = n.in_animal_id','INNER');
		//$this->db->join('tbl_animal_breed as b','b.in_animal_breed_id = s.in_notifiable_animal_breeds','LEFT');
		
		//$this->db->join('tbl_user_notification_setting as s','a.in_primary_breed_id = s.in_notifiable_animal_breeds','LEFT');
		
		$this->db->join('tbl_user_notification_setting as s','n.in_modified_by = s.in_user_id','LEFT');
		
		$names	=	array('3');
		$names1	=	array('12');
		
		$this->db->where_in('s.in_animal_type_id',$names);
		$this->db->where_in('s.in_notifiable_animal_breeds',$names1);
		
		$this->db->where('s.in_user_id = ',$this->session->userdata('userid'));
		
		$this->db->where('s.in_deleted',0);
		
		$this->db->where('n.in_type = ',0);
		$this->db->where('n.in_deleted',0);
		
		$this->db->group_by('n.in_notification_id');
		
		$this->db->order_by('n.in_notification_id','DESC');
		
		*/
		$this->db->select('SQL_CALC_FOUND_ROWS n.in_notification_id,a.in_animal_type_id, n.in_animal_id,a.st_animal_name,o.st_org_name,u.st_display_name,o.in_organization_id,u.in_user_id, n.in_transportation_id, n.st_notification_msg, n.dt_created, o.st_org_image, u.st_profile_image,af.st_file_name ',FALSE);
		$this->db->from('tbl_notification as n'); 
		$this->db->join('tbl_users as u', 'u.in_user_id =n.in_modified_by',"LEFT" );
		$this->db->join('tbl_organization as o', 'o.in_organization_id =n.in_organization_id',"LEFT" );
		$this->db->join('tbl_organization_user as ou', 'ou.in_organization_id = o.in_organization_id AND  ou.in_user_id = "'.$this->session->userdata('userid').'" AND ou.in_status="1" AND ou.in_deleted="0"',"INNER" );
		$this->db->join('tbl_animal as a', 'a.in_animal_id =n.in_animal_id',"LEFT" );
		$this->db->join('tbl_user_notification_setting as s', 's.in_notifiable_animal_breeds =a.in_primary_breed_id AND s.in_user_id = '.$this->session->userdata('userid').' AND s.in_deleted="0"',"LEFT" );
		$this->db->join('tbl_animal_file as af','n.in_animal_id = af.in_animal_id AND st_file_type="P"  AND af.in_deleted="0"','LEFT');
		//$this->db->join('tbl_user_notification_setting as se', 'se.in_animal_type_id =a.in_animal_type_id',"LEFT" );
		$this->db->where('s.in_user_id',$this->session->userdata('userid'));
		$this->db->where('s.in_deleted','0');
		$this->db->where('n.in_type','0');
		$this->db->where('n.in_deleted','0');
		//$this->db->where("s.in_animal_type_id=a.in_animal_type_id",NULL,FALSE);
		$this->db->group_by('n.in_notification_id');
		$this->db->order_by('n.in_notification_id','DESC');
		
		if($this->input->post('start')) {
			$this->db->limit($this->input->post('end'),$this->input->post('start'));
		} else {
			$this->db->limit(10);
		}
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		$data['notification_data'] = $query->result_array();
		
		return $data;
	}
	
	
	#=========================================================
	#	Function : delete_notification_settings
	#	Purpose  : Deleting notifications settings for current user
	#=========================================================
	
	public function delete_notification_settings($animal_type_id,$user_id) {
		$this->db->where('in_animal_type_id', $animal_type_id);
		$this->db->where('in_user_id', $user_id);
		$this->db->delete('tbl_user_notification_setting');
		return $this->db->affected_rows();
	}
	
	
	#=============================================================
	#	Function : add_email_subscription
	#	Purpose  : Insert Email subscription data.
	#=============================================================
	
	public function add_email_subscription($data) {
		$this->db->insert('tbl_user_notification_setting',$data);
		return $this->db->affected_rows();
	}
	
	#=============================================================
	#	Function : get_email_subscription
	#	Purpose  : Getting User Email subscription data.
	#=============================================================
	
	public function get_email_subscription($userid) {
		$data = array();
		$this->db->select('in_notification_setting_id,in_user_id,st_daily_digest_email,
							st_interested_in,st_more_info,st_newsletter,st_unsubscribe');
		$this->db->from('tbl_user_notification_setting');
		
		$this->db->where('in_user_id',$userid);
		$this->db->where('in_deleted',0);
		
		$this->db->where('in_notifiable_animal_breeds',0);
		$this->db->where('in_animal_type_id',0);
		
		$query = $this->db->get();
		
		return $query->result_array();
		/*foreach($query->result_array() as $row) {
			
			$data[] = array('daily_digest_email'	=>	$row['st_daily_digest_email'],
							'interested_in'			=>	$row['st_interested_in'],
							'more_info'				=>	$row['st_more_info'],
							'newsletter'			=>	$row['st_newsletter'],
							'unsubscribe'			=>	$row['st_unsubscribe']
							);
		}
		return $data;*/
	}
	
	#=============================================================
	#	Function : edit_email_subscription
	#	Purpose  : Edit Email subscription data.
	#=============================================================
	
	public function edit_email_subscription($data,$id) {
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_notification_setting_id',$id);
		$this->db->where('in_notifiable_animal_breeds',0);
		$this->db->where('in_animal_type_id',0);
		
		$this->db->update('tbl_user_notification_setting',$data);
		
		return $this->db->affected_rows();
	}
	
	
	//New Functions Start
		#=========================================================
	#	Function : get_profile_pic
	#	Purpose  : Getting User profile pic
	#=========================================================
	
	public function get_profile_pic(){
		$data = array();
		
		$this->db->select('st_profile_image');
		$this->db->from('tbl_users');
		
		$this->db->where('in_deleted',0);
		$this->db->where('in_status',1);
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		
		return $query->row_array();
		
	}
	
	#=========================================================
	#	Function : get_organization_feeds
	#	Purpose  : Getting Organization Feeds
	#=========================================================
	
	public function get_organization_feeds($notify_ids,$feeds) {
		$data = array();

		$data['feed']	=	$feeds;
		
		$this->db->select('n.in_notification_id,n.in_organization_id,n.in_animal_id,n.st_notification_msg,
							n.in_type,n.dt_created,o.st_org_name,a.st_animal_name,at.st_animal_type_name,
							a.in_created_by,ab.st_animal_breed_name,o.in_organization_id,o.st_org_image,tl.in_sort_order');
		$this->db->from('tbl_notification as n');
		$this->db->join('tbl_transportation_leg tl','tl.in_transportation_leg_id=n.in_transport_leg_id','LEFT');//added for leg no
		$this->db->join('tbl_organization as o','n.in_organization_id = o.in_organization_id','INNER');
		$this->db->join('tbl_animal as a','n.in_animal_id = a.in_animal_id','INNER');
		$this->db->join('tbl_animal_type as at','a.in_animal_type_id = at.in_animal_type_id','INNER');
		$this->db->join('tbl_animal_breed as ab','a.in_primary_breed_id = ab.in_animal_breed_id','INNER');
		
		//$this->db->where("(n.in_type = 2 OR n.in_type = 3 OR n.in_type = 4)");
		$this->db->where('n.in_animal_id != ',0);
		//$this->db->where('n.in_organization_id',$this->session->userdata('org_id'));
		
		$this->db->where('n.in_deleted',0);
		
		if(count($notify_ids) > 0) {
			$this->db->where_in('n.in_notification_id',$notify_ids);
		} else {
			$this->db->where_in('n.in_notification_id',0);
		}
		//$this->db->limit(50);
		$this->db->order_by('n.in_notification_id','DESC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		foreach($query->result_array() as $row) {
			$data['feed'][$row['in_notification_id']] = array(	'in_type' => $row['in_type'],
																'org_name'	=>	$row['st_org_name'],
																'animal_id' => $row['in_animal_id'],
																'animal_name' => $row['st_animal_name'],
																'animal_type_name' => $row['st_animal_type_name'],
																'animal_breed_name' => $row['st_animal_breed_name'],
																'organization_id' => $row['in_organization_id'],
																'message'	=>	$row['st_notification_msg'],
																'dt_created' => $row['dt_created'],
																'animal_image'	=>	$this->get_animal_photo($row['in_animal_id']),
																'in_notification_id' => $row['in_notification_id'],
																'user_id' => $row['in_created_by'],
																'in_sort_order' => $row['in_sort_order']
															); 
		}
		
		//echo "<pre>";echo count($data['feed']);print_r($data['feed']);die;
		return $data['feed'];
	}
	
	//
	#=========================================================
	#	Function : get_organization_feeds_tr
	#	Purpose  : Getting Organization Feeds for Transport
	#=========================================================
	
	public function get_organization_feeds_tr($notify_ids,$feeds) {
		$data = array();
		$data['feed']	=	$feeds;
		//echo "<pre>";print_r($notify_ids);die;
		$this->db->select('n.in_transportation_id,n.in_notification_id,n.in_organization_id,
							n.in_animal_id,n.st_notification_msg,n.in_type,n.dt_created,
							o.st_org_name,o.in_organization_id,o.st_org_image,
							t.dt_pickup_date,t.dt_target,t.st_from_city,t.st_from_state,t.st_from_zip,
							t.st_to_city,t.st_to_state,t.st_to_zip,t.in_created_by,n.in_modified_by,
							t.dt_created as tr_date,t.dt_pickup_date,
							u.st_display_name as full_name,u.st_profile_image,u.in_user_id,tl.in_sort_order');
		$this->db->from('tbl_notification as n');
		$this->db->join('tbl_transportation_leg tl','tl.in_transportation_leg_id=n.in_transport_leg_id','LEFT');//added for leg no
		$this->db->join('tbl_organization as o','n.in_organization_id = o.in_organization_id','INNER');
		$this->db->join('tbl_transportation as t','n.in_transportation_id = t.in_transportation_id','INNER');
		
		//$this->db->join('tbl_transportation_leg l','t.in_transportation_id = l.in_transportation_id','INNER');
		//$this->db->join('tbl_transportation_participants p','p.in_transportation_id = t.in_transportation_id','INNER');
		//  AND p.in_user_id=18 AND p.in_deleted=0
		
		$this->db->join('tbl_users as u','n.in_modified_by = u.in_user_id','INNER');
		
		if(count($notify_ids) > 0) {
			$this->db->where_in('n.in_notification_id',$notify_ids);
		} else {
			$this->db->where_in('n.in_notification_id',0);
		}
		
		//$this->db->where("(n.in_type = 5 OR n.in_type = 6 OR n.in_type = 7 OR n.in_type = 8 OR n.in_type = 9 OR n.in_type = 10 OR n.in_type = 11 OR n.in_type = 12 OR n.in_type = 13 OR n.in_type = 14)");
		$this->db->where("n.in_transportation_id != ",0);
		
							
		//$this->db->where("n.in_transportation_id IN ('147','146','96','346','346','371','413','413','361')");
		
		$this->db->where('n.in_deleted',0);
		$this->db->order_by('n.in_notification_id','DESC');
		
		//$this->db->group_by('n.in_notification_id');
		$query = $this->db->get();
		//return $query->result_array();
		//echo "<pre>";print_r($query->result_array());die;
		foreach($query->result_array() as $row) {
			$data['feed'][$row['in_notification_id']] = array(	'in_type'	=>	$row['in_type'],
																'org_name'	=>	$row['st_org_name'],
																'org_image'	=>	$row['st_org_image'],
																'transportation_id' => $row['in_transportation_id'],
																'organization_id' => $row['in_organization_id'],
																
																'from_city'	=>	$row['st_from_city'],
																'from_state'=>	$row['st_from_state'],
																'from_zip'	=>	$row['st_from_zip'],
																
																'to_city'	=>	$row['st_to_city'],
																'to_state'	=>	$row['st_to_state'],
																'to_zip'	=>	$row['st_to_zip'],
																
																'dt_created' => $row['tr_date'],
																'message'	=>	$row['st_notification_msg'],
																'target_date' => $row['dt_target'],
																'pickup_date' => $row['dt_pickup_date'],
																'notification_date' => $row['dt_created'],
																'user_name' => $row['full_name'],
																'user_image' => $row['st_profile_image'],
																'user_id' => $row['in_user_id'],
																'in_notification_id' => $row['in_notification_id'],
																'in_sort_order' => $row['in_sort_order']
														); 
		}
		//echo "<pre>";print_r($query->result_array());die('1234');
		return $data['feed'];
	}
	//
	
	
	#=========================================================
	#	Function : get_org_notification
	#	Purpose  : Getting Organization notification count
	#=========================================================
	
	public function get_my_notification($userid, $end='',$start='') {
	
		$arr_bids	=	array();
		$st_bids	=	'';
		$st_aids	=	'';
		$st_oids	=	'';
		
		// GET BREED IDS AS PER USER NOTIFICATION SETTING		
		$sql1	=	"SELECT in_notifiable_animal_breeds FROM tbl_user_notification_setting WHERE in_user_id = '".$userid."' AND in_notifiable_animal_breeds!=0";
		
		$res1	=	$this->db->query($sql1);
		$rs1	=	$res1->result_array();
		if(count($rs1))
		{
			foreach($rs1 as $val)
			{
				
				array_push(	$arr_bids,$val['in_notifiable_animal_breeds']);
			}
			$st_bids	=	implode(',',$arr_bids);
		}
		//echo $st_bids;die;
		// GET ANIMAL IDS AS PER USERS SELECTED BREEDS 
		if($st_bids!='')
		{
			$st_join = '';
			$st_owner = '';
			
			$sql_join = "SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
			$res_join	=	$this->db->query($sql_join);
			$rs_join	=	$res_join->result_array();
			
			$sql_join_array	=	array();
			if(count($rs_join))
			{
				foreach($rs_join as $val)
				{
					
					array_push(	$sql_join_array,$val['in_organization_id']);
				}
				$st_join	=	implode(',',$sql_join_array);
			}
			
			$sql_owner = "SELECT in_organization_id FROM tbl_organization WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
			$res_owner	=	$this->db->query($sql_owner);
			$rs_owner	=	$res_owner->result_array();
			
			$sql_owner_array	=	array();
			if(count($rs_owner))
			{
				foreach($rs_owner as $val)
				{
					
					array_push(	$sql_owner_array,$val['in_organization_id']);
				}
				$st_owner	=	implode(',',$sql_owner_array);
			}
			
			$sql_orgs1 = ($st_join != '')?$st_join:'';
			$sql_orgs2 = ($st_owner != '')?($st_join!=''?','.$st_owner:''):'';
			//echo $st_owner;die;
			$sql_orgs = $sql_orgs1.$sql_orgs2;
			if($sql_orgs == '') {$sql_orgs=0;}
			$sql2	=	"SELECT in_animal_id
							FROM tbl_animal 
							WHERE (in_primary_breed_id IN (".$st_bids.") OR in_secondry_breed_id IN (".$st_bids.") OR in_tertiary_breed_id IN (".$st_bids.")) 
							AND (in_animal_public=0 OR in_animal_public=1 AND in_organization_id IN (".$sql_orgs.") ) AND in_deleted=0";
			$res2	=	$this->db->query($sql2);
			$rs2	=	$res2->result_array();
			//echo $sql2;die;
			$arr_aids	=	array();
			if(count($rs2))
			{
				foreach($rs2 as $val)
				{
					
					array_push(	$arr_aids,$val['in_animal_id']);
				}
				$st_aids	=	implode(',',$arr_aids);
			}
			
		}
		//echo "<pre>";print_r($st_aids);die;
		// GET ORG ID IN WHICH USER ACTIVELY PARTICIPATED 
		$sql3	=	"SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
		$res3	=	$this->db->query($sql3);
		$rs3	=	$res3->result_array();
		
		$arr_oids	=	array();
		if(count($rs3))
		{
			foreach($rs3 as $val)
			{
				
				array_push(	$arr_oids,$val['in_organization_id']);
			}
			$st_oids	=	implode(',',$arr_oids);
		}
		//echo $st_oids." =>";
		//Owner org
		/*$owner_sql = "SELECT in_organization_id FROM tbl_organization WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";;
		$res_owner	=	$this->db->query($owner_sql);
		$rs_owner	=	$res_owner->result_array();
		
		if(count($rs_owner))
		{
			foreach($rs_owner as $val)
			{
				
				array_push(	$arr_oids,$val['in_organization_id']);
			}
			$st_oids	=	implode(',',$arr_oids);
		}*/
		//echo $st_oids;die;
		//End Owner org
		
		//$query1 = "SELECT in_organization_id from tbl_organization WHERE (in_user_id = ".$userid." OR ) AND in_status=1 AND in_deleted=0";
		
		// GET ORG ID IN WHICH USER IS OWNER OR ORG IS PUBLIC 
		/*$query1	=	"SELECT org.in_organization_id 
						FROM tbl_organization org 
						WHERE org.in_status=1 
						AND org.in_deleted=0 
						AND (org.in_user_id = '".$userid."' OR org.in_organization_id NOT IN (SELECT orgs.in_organization_id from tbl_organization_setting orgs WHERE orgs.in_public=1))";*/
						
		$query1	=	"SELECT org.in_organization_id 
						FROM tbl_organization org 
						WHERE org.in_status=1 
						AND org.in_deleted=0 
						AND org.in_user_id = '".$userid."'";
		
		$qres1	=	$this->db->query($query1);
		$qrs1	=	$qres1->result_array();
		
		if(count($qrs1))
		{
			foreach($qrs1 as $row) {
				array_push($arr_oids,$row['in_organization_id']);
			}
			$st_oids	=	implode(',',$arr_oids);
		}
		
		// GET TRansportation ID on which user has joinned.
		 
		
		$query4	=	"SELECT in_transportation_id
						FROM tbl_transportation_participants
						WHERE in_deleted=0 
						AND in_user_id = '".$userid."' AND in_user_id" ;
						//echo $query4;die;
		// AND in_user_id IN(SELECT in_user_id FROM tbl_organization_user WHERE in_organization_id IN('".$st_oids."') AND in_user_id='".$userid."' AND in_status=1)
		$qres4	=	$this->db->query($query4);
		$qrs4	=	$qres4->result_array();
		$arr_tids	=	array();
		$st_tids	=	'';
		if(count($qrs4))
		{
			foreach($qrs4 as $row) {
				array_push($arr_tids,$row['in_transportation_id']);
			}
			$st_tids	=	implode(',',$arr_tids);
		}
		//echo $st_tids;die;
		
		$new_orgs = $st_oids!=''?$st_oids:'0';
		$get_tra_id = "SELECT in_transportation_id
						FROM tbl_transportation
						WHERE in_deleted=0 AND in_organization_id IN (".$new_orgs.")";
						//echo $get_tra_id;die;
		$get_tra_id_qry	=	$this->db->query($get_tra_id);
		$get_tra_id_res	=	$get_tra_id_qry->result_array();
		$get_tra_id_arr_tids	=	array();
		$get_tra_id_tids	=	'';
		
		if(count($get_tra_id_res) == 0) {
			$st_tids = '';
		}
		
		//echo $st_tids;die;
		$sub_sql	=	'';
		if($st_oids=='')
			$st_oids	=	'0';
			
		if($st_tids=='')
			$sql_tids	=	'  ';
		else
			$sql_tids	=	" OR (in_transportation_id IN (".$st_tids.") AND in_type IN (5,6,7,8,9,10,11,12,13,14))";	
		
		
		if($st_aids=='')
		{$st_aids='0';
			if($st_bids == '') {
				//$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") OR (in_organization_id IN (".$st_oids."))) AND (in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";
				$sub_sql	=	" AND ((in_organization_id IN (".$st_oids.")) AND (in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,25) $sql_tids ))";
			} else {
				$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") AND (in_organization_id IN (".$st_oids."))) AND (in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";	
			}
			//$sub_sql	=	" AND ( in_animal_id IN (".$st_aids.") AND (in_organization_id IN (".$st_oids.")) AND (in_type IN (0,1,2,3,4,16,17) OR ( in_organization_id IN (".$st_oids.") AND in_type IN (0,1,16,17)) $sql_tids ))";
		}
		else
		{// 5,6,7,8,9,10,11,12,13,14, -- Transport
			$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") AND in_organization_id IN (".$st_oids.") AND in_type IN (0,2,3,4)) OR ( in_organization_id IN (".$st_oids.") AND in_type IN (0,1,16,17))  $sql_tids )";
			
			//echo $sub_sql;die;	
		}
		
		//echo $sub_sql;die;
			//$st_aids	=	'0';
		//echo $st_tids;die;	
		//$sub_sql	=	" AND ( (in_animal_id IN (".$st_aids.")  AND in_type IN (0,2,3,4)) AND ( in_organization_id IN (".$st_oids.") OR in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16)))";
		
		if($st_tids=='') {
			$sql5	=	"SELECT SQL_CALC_FOUND_ROWS in_notification_id FROM tbl_notification WHERE in_type not in(5,6,7,8,9,10,11,12,13,14,15) $sub_sql AND dt_created >= '".$this->get_user_registration_date()."' ORDER BY in_notification_id DESC ";
		} else {
			$sql5	=	"SELECT SQL_CALC_FOUND_ROWS in_notification_id FROM tbl_notification WHERE in_type not in(15) $sub_sql AND dt_created >= '".$this->get_user_registration_date()."' ORDER BY in_notification_id DESC ";
		}
		
		//$sql5	=	"SELECT SQL_CALC_FOUND_ROWS in_notification_id FROM tbl_notification WHERE in_type  in(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16) $sub_sql AND dt_created >= '".$this->get_user_registration_date()."' ORDER BY in_notification_id DESC ";
		
		//echo $sql5;die;
		if($start != '') {
			$sql5	.=	"LIMIT $start , $end";			
		} else {
			$sql5	.=	"LIMIT 0, 25";
		}
		//echo $sql5;	
		//echo $sql5; exit;
		$res5	=	$this->db->query($sql5);
		$rs5	=	$res5->result_array();
		/*echo $this->db->last_query();
		echo $userid."<pre>";
		print_r($rs5);
		die();*/
		
		
		
		$arr_nids	=	array();
		if(count($rs5))
		{
			foreach($rs5 as $val)
			{
				
				array_push(	$arr_nids,$val['in_notification_id']);
			}
		}
		//echo "<pre>"; 	print_r($rs5); 	die();		
		//echo "<pre>";print_r($rs5);die;
		return $arr_nids;
		//return $total_nids;		
	}
	
	# *******************************************************************************************	
	#	Function	:	join_organization_request	
	#	Purpose		:	Getting join organization request users
	# *******************************************************************************************
	
	public function join_organization_request($notify_ids,$feeds) {
		$data = array();
		$data['feed']	=	$feeds;
		
		//$this->db->select('n.in_notification_id,ou.in_org_user_id,ou.in_user_id,ou.in_invite_by,
			//				n.in_type,u.st_display_name,n.dt_created,u.st_profile_image,u.in_user_id');
		
		$this->db->select('*');
		$this->db->from('tbl_notification as n');
		//$this->db->join('tbl_organization_user as ou','n.in_organization_id = ou.in_organization_id','INNER');
		//$this->db->join('tbl_users as u','n.in_user_id = ou.in_user_id','INNER');
		
		//$this->db->where('ou.in_organization_id',$this->session->userdata('org_id'));
		if(count($notify_ids) > 0) {
			$this->db->where_in('n.in_notification_id',$notify_ids);
		}
				
		$this->db->where('n.in_type = ',15);
		//$this->db->where('n.in_organization_id = ',$this->session->userdata('org_id'));
		//$this->db->where('ou.in_status',0);
		//$this->db->where('ou.in_deleted',0);
		
		//$this->db->group_by('ou.in_org_user_id');
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		foreach($query->result_array() as $row) {
			$data['feed'][$row['in_notification_id']] = array(	'in_type'	=>	$row['in_type'],
																'user_name'	=>	$this->get_user_name($row['in_user_id']),
																'notification_date' => $row['dt_created'],
																'user_image' => $this->get_user_photo($row['in_user_id']),
																'user_id' => $row['in_user_id'],
																'organization_id' => $row['in_organization_id']
															); 
		}
		//echo "<pre>";print_r($data['feed']);die;
		return $data['feed']; 
	}
	
	# *******************************************************************************************	
	#	Function	:	get_organization_feeds_for_noti	
	#	Purpose		:	Getting notification feeds
	# *******************************************************************************************
	
	public function get_organization_feeds_for_noti($notify_ids,$feeds) {
		$data = array();
		$data['feed']	=	$feeds;
		
		$this->db->select('*');
		$this->db->from('tbl_notification');
		
		$this->db->where('in_animal_id',0);
		$this->db->where('in_transportation_id',0);
		
		$this->db->where('in_type',16);
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		
		$this->db->where('in_deleted',0);
		
		if(count($notify_ids) > 0) {
			$this->db->where_in('in_notification_id',$notify_ids);
		}
				
		//$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		
		$query = $this->db->get();
		foreach($query->result_array() as $row) {
			$data['feed'][$row['in_notification_id']] = array(	'in_type'	=>	$row['in_type'],
																'notification_date' => $row['dt_created'],
																'message' => $row['st_notification_msg'],
																'user_image' => $this->get_user_photo($row['in_user_id']),
																'organization_id' => $row['in_organization_id'],
																'user_id' => $row['in_modified_by']
															);
		}
		
		//echo "<pre>";
		//print_r($data['feed']);die;
		
		return $data['feed'];
		
	}
	
	# *******************************************************************************************	
	#	Function	:	get_organization_feeds_for_noti	
	#	Purpose		:	Getting notification feeds
	# *******************************************************************************************
	
	public function get_organization_feeds_for_mvr_check($notify_ids,$feeds) {
		$data = array();
		$data['feed']	=	$feeds;
		
		$this->db->select('*');
		$this->db->from('tbl_notification');
		
		$this->db->where('in_animal_id',0);
		$this->db->where('in_transportation_id',0);
		
		$this->db->where('in_type',25);
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		
		$this->db->where('in_deleted',0);
		
		if(count($notify_ids) > 0) {
			$this->db->where_in('in_notification_id',$notify_ids);
		}
				
		//$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		
		$query = $this->db->get();
		
		//echo $this->db->last_query();die;
		
		foreach($query->result_array() as $row) {
			$data['feed'][$row['in_notification_id']] = array(	'in_type'	=>	$row['in_type'],
																'notification_date' => $row['dt_created'],
																'user_name'	=>	$this->get_user_name($row['in_user_id']),
																'message' => $row['st_notification_msg'],
																'user_image' => $this->get_user_photo($row['in_user_id']),
																'organization_id' => $row['in_organization_id'],
																'user_id' => $row['in_user_id'],
															);
		}
		
		//echo "<pre>";
		//print_r($data['feed']);die;
		
		return $data['feed'];
		
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_animal_photo	
	#	Purpose		:	Getting one of animal photo
	# *******************************************************************************************
	
	public function get_animal_photo($id) {
		$data = '';
		$result = array();
		$this->db->select('st_file_name,in_profile_pic');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->where('st_file_type','P');
		
		$this->db->order_by('in_file_id','DESC');
		
		//$this->db->limit(1);
		$query = $this->db->get();
		
		if($query->num_rows() > 0) {
			$result = $query->result_array();
			
			foreach($query->result_array() as $row) {
				if($row['in_profile_pic'] == 1) {
					$data = ($row['st_file_name']!='')?$row['st_file_name']:''; 
				}
			}
			
			if($data == '') {
				$data = ($result[0]['st_file_name']!='')?$result[0]['st_file_name']:'';
			}
			return $data;
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	get_transport_animals	
	#	Purpose		:	Getting transport animals
	# *******************************************************************************************
	
	public function get_transport_animals($tra_id)
	{	
		$this->db->select('a.in_animal_id,a.st_animal_name,a.in_demeanor_id,st_animal_breed_name,st_animal_type_name,st_demeanor_name,st_demeanor_image,st_demeanor_desc,st_file_type,st_file_name,a.st_on_clock,td.st_css_class,a.st_gender,a.in_age,a.in_weight',FALSE);
		$this->db->from('tbl_animal_transportation as an_t');
		$this->db->join('tbl_animal as a','a.in_animal_id = an_t.in_animal_id','INNER');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','td.in_demeanor_id = a.in_demeanor_id','INNER');
		$this->db->join('tbl_animal_file af','af.in_animal_id = a.in_animal_id AND af.st_file_type="P" AND af.in_deleted="0" ','LEFT');
		$this->db->where('a.in_deleted',0);
		$this->db->where('an_t.in_deleted',0);	
		$this->db->where('an_t.in_transportation_id',$tra_id);		
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_photo	
	#	Purpose		:	Getting user photo
	# *******************************************************************************************
	
	public function get_user_photo($id) {
		$this->db->select('st_profile_image');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$result = $query->row_array(); 
		return (isset($result['st_profile_image']))?$result['st_profile_image']:'';
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_name	
	#	Purpose		:	Getting user name
	# *******************************************************************************************
	
	public function get_user_name($id) {
		$this->db->select('st_display_name');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$result = $query->row_array(); 
		return (isset($result['st_display_name']))?$result['st_display_name']:'';
	}
	
	public function get_total_notification() {
		$this->db->select('in_notification_id');
		$this->db->from('tbl_notification');
		//$this->db->where('in_organization_id',$org_id);
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	
	#=========================================================
	#	Function : get_total_my_notification
	#	Purpose  : Getting notification count
	#=========================================================
	
	public function get_total_my_notification($userid) {
	
		$sql	=	"SELECT FOUND_ROWS() as rows ";
		$rs		=	$this->db->query($sql);		
		$rs5	=	$rs->result_array();
		return $rs5[0]['rows'];	
	}
	
	
	public function check_org_user_status($userid,$org_id) {
		$this->db->select('in_organization_id,in_user_id,in_status,in_deleted');
		$this->db->from('tbl_organization_user');
		
		$this->db->where('in_user_id',$userid);
		$this->db->where('in_organization_id',$org_id);
		
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_organization_id	
	#	Purpose		:	Getting org id
	# *******************************************************************************************
	
	public function get_organization_id($animal_id,$org_id) {
		$data = array();
		$org_name = array();
		
		$this->db->select('in_to_organization_id,in_from_organization_id');
		$this->db->from('tbl_animal_transfer_req');
		
		$this->db->where('in_from_organization_id',$org_id);
		$this->db->where('in_animal_id',$animal_id);
		$this->db->where('in_status',0);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		$data = $query->row_array();
		if(!empty($data)) {
			$org_name = $this->get_org_name($data['in_to_organization_id']);
		}
		
		return (isset($org_name['st_org_name']) != '')?$org_name['st_org_name']:'';
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_name	
	#	Purpose		:	Getting org name
	# *******************************************************************************************
	
	public function get_org_name($org_id) {
		$this->db->select('st_org_name');
		$this->db->from('tbl_organization');
		
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_deleted',0);
		$this->db->where('in_status',1);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_sponsorship_pages	
	#	Purpose		:	Getting sponsorship pages
	# *******************************************************************************************
	
	public function get_sponsorship_pages($notify_ids,$feeds) {
		$data = array();
		$data['feed']	=	$feeds;
		
		$this->db->select('n.in_notification_id,n.dt_created,n.in_type,
							c.in_campaign_id,c.st_page_title,c.in_organization_id,c.in_animal_id,
							c.st_custom_url,a.st_animal_name,o.st_org_name,o.st_org_image,
							u.st_display_name,u.st_last_name,u.in_user_id,u.st_profile_image');
		
		$this->db->from('tbl_notification as n');
		$this->db->join('tbl_campaign as c','n.in_animal_id = c.in_animal_id');
		$this->db->join('tbl_animal as a','n.in_animal_id = a.in_animal_id');
		$this->db->join('tbl_organization as o','n.in_organization_id = o.in_organization_id');
		$this->db->join('tbl_users as u','n.in_user_id = u.in_user_id');
		
		//$this->db->where('c.in_status',1);
		//$this->db->where('c.in_deleted',0);
		
		if(count($notify_ids) > 0) {
			$this->db->where_in('n.in_notification_id',$notify_ids);
		}
		
		$query = $this->db->get();
		
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data['feed'][$row['in_notification_id']] = array(	'in_type'			=>	$row['in_type'],
																	'org_name'			=>	$row['st_org_name'],
																	'org_image'			=>	$row['st_org_image'],
																	'organization_id' 	=>	$row['in_organization_id'],
																	'notification_date' => 	$row['dt_created'],
																	'user_name' 		=> 	$row['st_display_name'].' '.$row['st_last_name'],
																	'animal_id' 		=> 	$row['in_animal_id'],
																	'animal_name' 		=> 	$row['st_animal_name'],
																	'user_image' 		=> 	$row['st_profile_image'],
																	'user_id' 			=> 	$row['in_user_id'],
																	'fundraiser_id'		=>	$row['in_campaign_id'],
																	'fundraiser_url'	=>	$row['st_custom_url'],
																	'fundraiser_title'	=>	$row['st_page_title'],
																	'in_notification_id' => $row['in_notification_id']
																);
			}
		}
		return $data['feed'];
	}
	
	# *******************************************************************************************	
	#	Function	:	get_notification_detail	
	#	Purpose		:	Getting notification details
	# *******************************************************************************************
	
	public function get_notification_detail($id) {
		$this->db->select('in_organization_id,in_animal_id');
		$this->db->from('tbl_notification');
		$this->db->where('in_notification_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_notification_detail	
	#	Purpose		:	Getting notification details
	# *******************************************************************************************
	
	public function get_org_name_for_transefer($id) {
		$data = array();
		$this->db->select('st_org_name');
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$id);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$data = $query->row_array();
		return isset($data['st_org_name'])?$data['st_org_name']:'';
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_tr_ids	
	#	Purpose		:	Getting transport ids
	# *******************************************************************************************
	
	public function get_user_tr_ids() {
		$data = array();
		$st_trds = '';
		$sql = $this->db->query("SELECT in_transportation_id FROM tbl_transportation_participants 
								WHERE in_user_id = ".$this->session->userdata('userid')." AND in_deleted = 0");
		$res	=	$sql->result_array();
		
		if(!empty($res)) {
			foreach($res as $row) {
				array_push($data,$row['in_transportation_id']);
				$st_trds	=	implode("','",$data);
			}
		}
		
		return $st_trds;
	}
	
	public function get_user_registration_date() {
		$data = array();
		
		$this->db->select('dt_created');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		$data = $query->row_array();
		
		return $data['dt_created'];
	}
	//New Functions End
	
	public function get_user_organizations($user_id)
	{
		$this->db->select('o.st_org_name,o.in_organization_id ',FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_organization_user as ou','ou.in_organization_id = o.in_organization_id','LEFT');
		
		$where = "((o.in_user_id ='".$user_id."') OR (ou.in_user_id ='".$user_id."') AND ou.in_status='1' AND ou.in_deleted='0') 
					AND o.in_deleted='0' AND o.in_status='1' ";
		$this->db->where($where, NULL, FALSE);
		$this->db->group_by('o.in_organization_id'); 
		$this->db->order_by('o.st_org_name','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($query->result_array());die;
		return $query->result_array();	
	}
	
	public function get_newly_added_animals($org_id)
	{
		$start_dt = date('Y-m-d 00:00:00', strtotime('-1 day'));
		$end_dt 	 = date('Y-m-d 23:59:59');
		$daily_animals = $this->db->query("SELECT a.in_animal_id, a.in_organization_id,a.dt_created, a.st_animal_name, a.in_created_by, o.st_org_name
, concat(u.st_display_name,' ',u.st_last_name) as st_display_name
										FROM (tbl_animal as a)
										INNER JOIN tbl_organization as o ON o.in_organization_id = a.in_organization_id
										INNER JOIN tbl_users as u ON u.in_user_id = a.in_created_by
										WHERE a.in_animal_id NOT IN (
										SELECT in_animal_id FROM tbl_animal_transfer_req WHERE in_status != 3 AND in_from_organization_id = ".$org_id." AND in_to_organization_id = ".$org_id."
										)
										AND a.in_deleted =  0
										AND a.dt_created > '".$start_dt."'
										AND a.dt_created <= '".$end_dt."'
										AND a.in_organization_id =  ".$org_id."
										GROUP BY a.in_animal_id
										ORDER BY in_animal_id desc
										");
		$daily_animals_res	=	$daily_animals->result_array();
		//echo '<pre/>';print_r($daily_animals_res);//exit;
		return $daily_animals_res;
	}
	
	public function get_newly_animal_transfer_requests($org_id)
	{
		$start_dt = date('Y-m-d 00:00:00', strtotime('-1 day'));
		$end_dt 	 = date('Y-m-d 23:59:59');
		$daily_animal_transfer_requests = $this->db->query("SELECT a.in_animal_id, a.in_organization_id, a.st_animal_name, ar.dt_created ,of.st_org_name as from_org, ot.st_org_name as to_org
										   FROM  tbl_animal AS a
										   INNER JOIN tbl_animal_transfer_req AS ar ON a.in_animal_id = ar.in_animal_id
										   INNER JOIN tbl_organization as of ON of.in_organization_id = ar.in_from_organization_id
										   INNER JOIN tbl_organization as ot ON ot.in_organization_id = ar.in_to_organization_id
										   WHERE a.in_deleted = 0 
										   AND   ar.in_to_organization_id = ".$org_id."
										   AND   ar.in_status = 0 
										   AND ar.dt_created > '".$start_dt."'
										   AND ar.dt_created <= '".$end_dt."'
										   GROUP BY   a.in_animal_id 
										   ORDER BY   ar.in_transfer_req_id
										");
		$daily_animal_transfer_requests_res	=	$daily_animal_transfer_requests->result_array();
		//echo '<pre/>';print_r($daily_animal_transfer_requests_res);//exit;
		return $daily_animal_transfer_requests_res;
	}
	
	public function get_join_organization_requests($user_id)
	{
		$start_dt = date('Y-m-d 00:00:00', strtotime('-1 day'));
		$end_dt 	 = date('Y-m-d 23:59:59');		
		$daily_join_organization_requests = $this->db->query("SELECT ou.in_org_user_id,ou.in_organization_id,ou.in_user_id,ou.in_invite_by ,o.st_org_name,CONCAT(u.st_display_name,' ' ,u.st_last_name) as st_display_name
															FROM tbl_organization_user as ou 
															LEFT JOIN tbl_organization o ON o.in_organization_id = ou.in_organization_id
															LEFT JOIN tbl_users u ON u.in_user_id = ou.in_invite_by 
															WHERE ou.in_invite_by != 0 
															AND o.in_status = 1 
															AND o.in_deleted = 0 
															AND ou.in_status = 5 
															AND ou.in_deleted = 0
															AND ou.dt_created > '".$start_dt."'
										   					AND ou.dt_created <= '".$end_dt."'
															AND ou.in_user_id = ".$user_id."
															");
		$daily_join_organization_requests_res	=	$daily_join_organization_requests->result_array();
		//echo '<pre/>';print_r($daily_join_organization_requests_res);//exit;
		return $daily_join_organization_requests_res;
	}
	
	
	function get_driver_user_lat_long($user_id)
	{
		$this->db->select("pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon,z.lat,z.lon");
		$this->db->from("tbl_user_profile pr ");
		$this->db->join("tbl_user_vehicle v","v.in_user_id = pr.in_user_id",'INNER');
		$this->db->join("tbl_zip_code z","v.st_zip_vehicle = z.zip_code",'INNER');
		$where = array("pr.in_deleted"=>'0',"pr.st_driver"=>"Y","v.in_deleted"=>"0","pr.in_user_id"=>$user_id);
		$this->db->where($where);
		$this->db->order_by("v.in_distance_to_drive","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	function get_pilot_user_lat_long($user_id)
	{
		$this->db->select("pr.in_user_id,pr.st_driver,vp.st_pilot_availability,vp.st_pilot_zip,vp.in_distance_to_pilot,a.st_longitude,a.st_latitude");
		$this->db->from("tbl_user_profile pr ");
		$this->db->join("tbl_user_pilot vp","vp.in_user_id = pr.in_user_id",'INNER');
		$this->db->join("tbl_airport a","a.st_loc_id = vp.st_identifier",'INNER');
		$where = array("pr.in_deleted"=>'0',"pr.st_pilot"=>"Y","vp.in_deleted"=>"0","a.in_deleted"=>"0","pr.in_user_id"=>$user_id);
		$this->db->where($where);
		$this->db->order_by("vp.in_distance_to_pilot","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	function get_current_driver_participate($user_id)
	{
		$this->db->select("in_transportation_id");
		$this->db->from("tbl_transportation_participants");
		$where = array("in_deleted"=>'0',"in_user_id"=>$user_id);
		$this->db->where($where);
		$query =	$this->db->get();
		if($query->num_rows()>0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[]	= $Row->in_transportation_id;
			}
			return $arrData;
		}
		
	}
	
	public function get_near_by_transport_requests($user_id)
	{
		$details 		= $this->get_driver_user_lat_long($user_id);
		$pilot_details  = $this->get_pilot_user_lat_long($user_id);
		$trns_ids_list 	= $this->get_current_driver_participate($user_id);
		//echo "<pre>";print_r($details);die;
		//echo "<pre>";print_r($pilot_details);die;
		$trns_ids	= '';
		$driver		= '';
		$pilot		= '';
		if(!empty($trns_ids_list))
		{
			$trns_ids 		= implode(",",$trns_ids_list);
		}
		if(!empty($details) || !empty($pilot_details))
		{
			if(!empty($details))
			{
				$days 		= "'".implode("','",unserialize($details['st_driver_availability']))."'";
				$lat 		= $details['lat'];
				$lon 		= $details['lon'];
				$distance 	= $details['in_distance_to_drive'];
			}
			if(!empty($pilot_details))
			{
				$a_days 	= "'".implode("','",unserialize($pilot_details['st_pilot_availability']))."'";
				$a_lat 		= $pilot_details['st_latitude'];
				$a_lon 		= $pilot_details['st_longitude'];
				$a_distance = $pilot_details['in_distance_to_pilot'];
			}
			$this->db->select(" tr.dt_pickup_date,tr.dt_target,tr.in_created_by,concat(u.st_display_name,' ',u.st_last_name) as st_display_name,
								DATE_FORMAT(tr.dt_pickup_date, '%a') as pdays,
								DATE_FORMAT(tr.dt_target, '%a') as days,
								tr.in_transportation_id,
								tr.in_status, 
								tr.st_from_street, 
								tr.st_from_city, 
								tr.st_from_state, 
								tr.st_from_zip, 
								tr.st_to_street, 
								tr.st_to_state, 
								tr.st_to_city, 
								tr.st_to_zip, 
								tr.in_tot_distance, 
								tr.in_distance_covered, 
								round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) perc,
							 	z.lat,
								z.lon",FALSE);
			$this->db->from("tbl_transportation tr");
			$this->db->join("tbl_users u","u.in_user_id = tr.in_created_by","INNER");
			$this->db->join("tbl_zip_code z","tr.st_from_zip = z.zip_code","INNER");
			$this->db->join("tbl_zip_code tz","tr.st_to_zip = tz.zip_code","INNER");
			$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
			$where = array("tr.in_deleted"=>'0',"tr.in_status"=>"1");
			$this->db->where($where);
			
			$this->db->where('tr.dt_pickup_date >=', date('Y-m-d 00:00:00', strtotime('-1 day')));
			
			if($trns_ids!='')
			{
				$this->db->where("tr.in_transportation_id NOT IN (".$trns_ids.") ", NULL, FALSE);
			}
			$pilot_h = '';
			$driver_h = '';
			if(!empty($details))
			{
				$driver = '(3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat))))<="'.$distance.'"
				OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat)))) is NULL 
			OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(tz.lat))))<="'.$distance.'" 
			OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(tz.lat)))) is NULL 
			';
				$driver_h = '(days in('.$days .') OR pdays in('.$days .'))';
			}
			if(!empty($pilot_details))
			{
				$pilot  = '(3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat))))<="'.$a_distance.'" 
			OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat)))) is NULL	
			OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(tz.lat))))<="'.$a_distance.'" 
			OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(tz.lat)))) is NULL ';
				$pilot_h = '(days in('.$a_days .') OR pdays in('.$a_days .'))';
			}
			$cnd = ($driver)?$driver:"";
			$cnd_h = ($driver_h)?$driver_h:"";
			if($cnd!='' && $pilot!='' )
			{
				$cnd .= " OR ".$pilot;
			}
			elseif($pilot)
			{
				$cnd = $pilot;
			}
			if($cnd)
			{
				$cnd = "( ".$cnd." ) ";
			}
			if($cnd_h!='' && $pilot_h!='' )
			{
				$cnd_h .= " OR ".$pilot_h;
			}
			elseif($pilot_h)
			{
				$cnd_h = $pilot_h;
			}
			if($cnd_h)
			{
				$cnd_h = "( ".$cnd_h." ) AND ";
			}
			//echo $cnd_h;die;
			
			$this->db->where($cnd.'GROUP BY tr.in_transportation_id HAVING '.$cnd_h.' perc < "100" ', NULL, FALSE);
			$this->db->order_by("tr.in_transportation_id","DESC");
			//$this->db->limit(9);
			$query =	$this->db->get();
			//echo "<pre>".$this->db->last_query();die;
			return $query->result_array();
		}
	}
	
	
	public function get_join_transports_details($user_id)
	{
		$start_dt = date('Y-m-d 00:00:00', strtotime('-1 day'));
		//$part_date = '2015-09-13 00:00:00';
		$join_transports_users = $this->db->query("SELECT tp.in_created_by,tr.dt_target
													,concat(u.st_display_name,' ',u.st_last_name) as st_display_name
													,tr.in_transportation_id, tr.in_tot_distance, tr.in_distance_covered, round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) per 
													FROM `tbl_transportation_participants` tp
													INNER JOIN  (`tbl_transportation` tr) ON `tr`.`in_transportation_id` = `tp`.`in_transportation_id`
													INNER JOIN `tbl_users` u ON `u`.`in_user_id` = `tp`.`in_created_by`
													WHERE `tr`.`in_deleted` =  '0'
													AND `tr`.in_trans_coods_id = ".$user_id."
													AND `tp`.`dt_created` >= '".$start_dt."'
													AND tp.in_deleted='0'
													ORDER BY `tr`.`in_transportation_id` DESC
													");
		$join_transports_users_res	=	$join_transports_users->result_array();
		return $join_transports_users_res;
		
	}
	
	public function get_transfer_organization_requests($user_id)
	{
		$start_dt = date('Y-m-d 00:00:00', strtotime('-1 day'));
		//$part_date = '2015-09-13 00:00:00';
		$transfer_organization_requests = $this->db->query("SELECT ot.in_organization_id, u.st_display_name, ot.in_transfer_by, ot.in_transfer_to, o.st_org_name, o.st_org_type, o.st_director, o.st_primary_phone, o.st_email_address, o.st_address1, o.st_address2, o.st_city, o.st_state, o.st_zip 
											FROM (tbl_organization_transfer as ot) 
											INNER JOIN tbl_organization as o ON ot.in_organization_id = o.in_organization_id 
											INNER JOIN `tbl_users` u ON `u`.`in_user_id` = `ot`.`in_transfer_by`
											WHERE in_transfer_to = ".$user_id."
											AND in_accepted_by = 0 
											AND ot.in_status = 0 
											AND ot.in_deleted = 0 
											AND o.in_deleted = 0");
		$transfer_organization_requests_res	=	$transfer_organization_requests->result_array();
		return $transfer_organization_requests_res;
		
	}
	
	public function get_user_daily_emails()
	{
		$daily_users = $this->db->query("SELECT un.in_notification_setting_id,un.in_user_id,un.in_notifiable_animal_breeds,un.in_animal_type_id,un.st_daily_digest_email,un.st_interested_in,un.st_more_info,un.st_newsletter,un.st_unsubscribe,un.dt_created,u.st_display_name,u.st_email 
								FROM tbl_user_notification_setting as un
								INNER JOIN tbl_users as u ON u.in_user_id = un.in_user_id
								WHERE un.in_deleted = 0
								AND u.in_deleted = 0
								AND u.in_status <> 3
								ORDER BY in_notification_setting_id DESC");
		$daily_users_res	=	$daily_users->result_array();
		//echo '<pre/>';print_r($daily_users_res);//exit;
		$all_emails_data = array();
		if(!empty($daily_users_res)) {
			
			foreach($daily_users_res as $row) {
				//echo '<pre/>'; echo 'notification setting id: '.$row['in_notification_setting_id'];
				//echo '<pre/>'; echo 'st_unsubscribe : ';
				//print_r(unserialize($row['st_unsubscribe']));
				$all_emails_data[$row['in_user_id']]['user_f_name'] = $row['st_display_name'];
				$all_emails_data[$row['in_user_id']]['user_email_id'] = $row['st_email'];
				
				if(isset($row['st_unsubscribe']) && $row['st_unsubscribe'] == '')
				{
					if(isset($row['st_daily_digest_email']) && $row['st_daily_digest_email'] != '')
					{
						$daily_digest_email_array = unserialize($row['st_daily_digest_email']);
						//echo '<pre/>';print_r($daily_digest_email_array);
						
						if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'nap') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'nap') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'nap') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'nap') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'nap'))
						{
							//send New Animal Profile emails to user
							//echo 'send New Animal Profile emails to user ';
							$user_organizations = $this->get_user_organizations($row['in_user_id']);							
							
							//echo '<pre/>'; print_r($user_organizations);exit;
							if(isset($user_organizations) && count($user_organizations) > 0)
							{
								//$newly_added_animals = array();
								foreach($user_organizations as $uo_rows)
								{	
									//echo 'organization_id'.$uo_rows['in_organization_id'];
									$all_emails_data[$row['in_user_id']]['newly_added_animals'][] = $this->get_newly_added_animals($uo_rows['in_organization_id']);								
								}
								//echo 'newly_added_animals<pre/>';count($all_emails_data[$row['in_user_id']]['newly_added_animals']);														
							}							
						}
						if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'atr') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'atr') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'atr') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'atr') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'atr'))
						{
							//send Animal Transfer Requests emails to user
							//echo 'send Animal Transfer Requests emails to user ';
							$user_organizations = $this->get_user_organizations($row['in_user_id']);							
							if(isset($user_organizations) && count($user_organizations) > 0)
							{
								//$newly_animal_transfer_requests = array();
								foreach($user_organizations as $uo_rows)
								{
									$all_emails_data[$row['in_user_id']]['newly_animal_transfer_requests'][] = $this->get_newly_animal_transfer_requests($uo_rows['in_organization_id']);								
								}
								//echo '<pre/>';print_r($newly_animal_transfer_requests);
								//exit;
								
							}
							
						}
						if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'nt') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'nt') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'nt') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'nt') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'nt'))
						{
							//send New Transport emails to user
							//echo 'send New Transport emails to user ';
							$all_emails_data[$row['in_user_id']]['near_by_transport_requests'] = $this->get_near_by_transport_requests($row['in_user_id']);				
						}
						if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'jor') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'jor') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'jor') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'jor') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'jor'))
						{
							//send Join Organization Request emails to user
							//echo 'send Join Organization Request emails to user ';
							$all_emails_data[$row['in_user_id']]['join_organization_requests'] = $this->get_join_organization_requests($row['in_user_id']);
						}
						if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'tor') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'tor') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'tor') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'tor') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'tor'))
						{
							//send Transfer Organization Request emails to user
							//echo 'send Transfer Organization Request emails to user ';
							$all_emails_data[$row['in_user_id']]['transfer_organization_requests'] = $this->get_transfer_organization_requests($row['in_user_id']);
						}												
					}
					
					if(isset($row['st_interested_in']) && $row['st_interested_in'] != '')
					{
						$interested_in_email_array = unserialize($row['st_interested_in']);
						//echo '<pre/>';print_r($interested_in_email_array);exit;
						
						if(isset($interested_in_email_array) && !empty($interested_in_email_array))
						{
							if(in_array('ct',$interested_in_email_array))
							{
								//send join transports emails to coordinators
								//echo 'send join transports emails to coordinators '; exit;
								
								$all_emails_data[$row['in_user_id']]['join_transports_details'] = $this->get_join_transports_details($row['in_user_id']);
								
							}
						}
						
					}
					
					if(isset($row['st_more_info']) && $row['st_more_info'] != '')
					{
						$more_info_email_array = unserialize($row['st_more_info']);
						//echo '<pre/>';print_r($more_info_email_array);
						
					}
					if(isset($row['st_newsletter']) && $row['st_newsletter'] != '')
					{
						$newsletter_email_array = unserialize($row['st_newsletter']);
						//echo '<pre/>';print_r($newsletter_email_array);
					}
					
				}
				
				if(isset($row['st_unsubscribe']) && $row['st_unsubscribe'] != '')
				{
					$unsubscribed_array = unserialize($row['st_unsubscribe']);
					if(isset($unsubscribed_array) && !empty($unsubscribed_array))
					{
						if((isset($unsubscribed_array[0]) && $unsubscribed_array[0] == 'un_com') || (isset($unsubscribed_array[1]) && $unsubscribed_array[1] == 'un_com') || (isset($unsubscribed_array[2]) && $unsubscribed_array[2] == 'un_com') || (isset($unsubscribed_array[3]) && $unsubscribed_array[3] == 'un_com'))
						{
							//Do not send me any email and notification from above list
							//echo 'Do not send me any email and notification from above list';
						}
						else
						{
							if((isset($unsubscribed_array[0]) && $unsubscribed_array[0] != 'un_dde') || (isset($unsubscribed_array[1]) && $unsubscribed_array[1] != 'un_dde') || (isset($unsubscribed_array[2]) && $unsubscribed_array[2] != 'un_dde') || (isset($unsubscribed_array[3]) && $unsubscribed_array[3] != 'un_dde'))
							{
								//send Daily Digest E-mail to users
								//echo 'send Daily Digest E-mail to users ';
								if(isset($row['st_daily_digest_email']) && $row['st_daily_digest_email'] != '')
								{
									$daily_digest_email_array = unserialize($row['st_daily_digest_email']);
									//echo '<pre/>';print_r($daily_digest_email_array);
									if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'nap') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'nap') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'nap') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'nap') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'nap'))
						{
									//send New Animal Profile emails to user
									//echo 'send New Animal Profile emails to user ';
									$user_organizations = $this->get_user_organizations($row['in_user_id']);							
									
									//echo '<pre/>'; print_r($user_organizations);exit;
									if(isset($user_organizations) && count($user_organizations) > 0)
									{
										//$newly_added_animals = array();
										foreach($user_organizations as $uo_rows)
										{	
											//echo 'organization_id'.$uo_rows['in_organization_id'];
													$all_emails_data[$row['in_user_id']]['newly_added_animals'][] = $this->get_newly_added_animals($uo_rows['in_organization_id']);								
											}
											//echo 'newly_added_animals<pre/>';count($all_emails_data[$row['in_user_id']]['newly_added_animals']);														
										}							
									}
									if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'atr') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'atr') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'atr') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'atr') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'atr'))
									{
										//send Animal Transfer Requests emails to user
										//echo 'send Animal Transfer Requests emails to user ';
										$user_organizations = $this->get_user_organizations($row['in_user_id']);							
										if(isset($user_organizations) && count($user_organizations) > 0)
										{
											//$newly_animal_transfer_requests = array();
											foreach($user_organizations as $uo_rows)
											{
												$all_emails_data[$row['in_user_id']]['newly_animal_transfer_requests'][] = $this->get_newly_animal_transfer_requests($uo_rows['in_organization_id']);								
											}
											//echo '<pre/>';print_r($newly_animal_transfer_requests);
											//exit;
											
										}
										
									}
									if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'nt') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'nt') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'nt') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'nt') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'nt'))
									{
										//send New Transport emails to user
										//echo 'send New Transport emails to user ';
										$all_emails_data[$row['in_user_id']]['near_by_transport_requests'] = $this->get_near_by_transport_requests($row['in_user_id']);				
									}
									if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'jor') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'jor') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'jor') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'jor') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'jor'))
									{
										//send Join Organization Request emails to user
										//echo 'send Join Organization Request emails to user ';
										$all_emails_data[$row['in_user_id']]['join_organization_requests'] = $this->get_join_organization_requests($row['in_user_id']);
									}
									if((isset($daily_digest_email_array[0]) && $daily_digest_email_array[0] == 'tor') || (isset($daily_digest_email_array[1]) && $daily_digest_email_array[1] == 'tor') || (isset($daily_digest_email_array[2]) && $daily_digest_email_array[2] == 'tor') || (isset($daily_digest_email_array[3]) && $daily_digest_email_array[3] == 'tor') || (isset($daily_digest_email_array[4]) && $daily_digest_email_array[4] == 'tor'))
									{
										//send Transfer Organization Request emails to user
										//echo 'send Transfer Organization Request emails to user ';
										$all_emails_data[$row['in_user_id']]['transfer_organization_requests'] = $this->get_transfer_organization_requests($row['in_user_id']);
										
									}	
												
								}
							}
							
							if((isset($unsubscribed_array[0]) && $unsubscribed_array[0] != 'un_ie') || (isset($unsubscribed_array[1]) && $unsubscribed_array[1] != 'un_ie') || (isset($unsubscribed_array[2]) && $unsubscribed_array[2] != 'un_ie') || (isset($unsubscribed_array[3]) && $unsubscribed_array[3] != 'un_ie'))
							{
								//send Information Emails to users
								//echo 'send  Information Emails to users ';
								if(isset($row['st_interested_in']) && $row['st_interested_in'] != '')
								{
									$interested_in_email_array = unserialize($row['st_interested_in']);
									//echo '<pre/>';print_r($interested_in_email_array);
									if(isset($interested_in_email_array) && !empty($interested_in_email_array))
										{
											if(in_array('ct',$interested_in_email_array))
											{
												//send join transports emails to coordinators
												//echo 'send join transports emails to coordinators '; exit;
												
												$all_emails_data[$row['in_user_id']]['join_transports_details'] = $this->get_join_transports_details($row['in_user_id']);
												
											}
										}
									
								}
							}
							
							if((isset($unsubscribed_array[0]) && $unsubscribed_array[0] != 'un_nw') || (isset($unsubscribed_array[1]) && $unsubscribed_array[1] != 'un_nw') || (isset($unsubscribed_array[2]) && $unsubscribed_array[2] != 'un_nw') || (isset($unsubscribed_array[3]) && $unsubscribed_array[3] != 'un_nw'))
							{
								//send Newsletter and Notifications to users
								//echo 'send  Newsletter and Notifications to users ';
								if(isset($row['st_newsletter']) && $row['st_newsletter'] != '')
								{
									$newsletter_email_array = unserialize($row['st_newsletter']);
									//echo '<pre/>';print_r($newsletter_email_array);
								}
							}
						}						
						
						
					}
					
				}
				
			}
		}
		//exit;
		//echo '<pre/>';print_r($all_emails_data);exit;
		return $all_emails_data;
		
		
	}
	
	public function get_new_fundraiser_details($userid) {
		$this->db->select('in_new_fundraiser_id,in_any_animal_fund,in_any_org_fund,in_spe_animal_fund,in_spe_animal_fund_dist,in_spe_org_fund,in_spe_org_fund_dist,in_animal_breed_id,st_animal_breed_ids');
		$this->db->from('tbl_new_fundraiser');
		$this->db->where('in_user_id',$userid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	#=========================================================
	#	Function : update_notification_settings
	#	Purpose  : Update notification setting data
	#=========================================================
	
	public function update_new_fundraiser_details($post,$user_id) {
		
		$insert_id = '';
		if(isset($post) && !empty($post))
		{
			$arr_new_funraiser = array('in_user_id'					=> $user_id,
									'in_any_animal_fund'			=> isset($post['any_ani_fundraiser']) && $post['any_ani_fundraiser'] != '' ? $post['any_ani_fundraiser'] : 0,
									'in_any_org_fund'				=> isset($post['any_org_fundraiser']) && $post['any_org_fundraiser'] != '' ? $post['any_org_fundraiser'] : 0,
									'in_spe_animal_fund'			=> isset($post['spe_ani_fundraiser']) && $post['spe_ani_fundraiser'] != '' ? $post['spe_ani_fundraiser'] : 0,
									'in_spe_animal_fund_dist'		=> isset($post['spe_ani_fundraiser_dist']) && $post['spe_ani_fundraiser_dist'] != '' ? $post['spe_ani_fundraiser_dist'] : '',									
									'in_spe_org_fund'				=> isset($post['spe_org_fundraiser']) && $post['spe_org_fundraiser'] != '' ? $post['spe_org_fundraiser'] : 0,
									'in_spe_org_fund_dist'			=> isset($post['spe_org_fundraiser_dist']) && $post['spe_org_fundraiser_dist'] != '' ? $post['spe_org_fundraiser_dist'] : '',										
									'in_animal_breed_id'			=> isset($post['breed-anyanimal-fundraiser']) && $post['breed-anyanimal-fundraiser'] != '' ? $post['breed-anyanimal-fundraiser'] : '',
									'st_animal_breed_ids'			=> isset($post['animalbreed']) && !empty($post['animalbreed']) ? serialize($post['animalbreed']) : '',
									'dt_created'					=> date('Y-m-d H:i:s'),
									'dt_modified'					=> date('Y-m-d H:i:s'),
									'in_deleted'					=> '0'
									);
			//echo "<pre>";print_r($arr_new_funraiser);die;
			if(isset($post["new_fundraiser_id"]) && $post["new_fundraiser_id"] > 0)
			{															
				$this->db->where('in_new_fundraiser_id', $post["new_fundraiser_id"]);
				$this->db->update('tbl_new_fundraiser', $arr_new_funraiser);	
				$insert_id = $post['new_fundraiser_id'];
			}
			else
			{
				$this->db->insert('tbl_new_fundraiser', $arr_new_funraiser);	
				$insert_id = $this->db->insert_id();
			}
		}
		return $insert_id;
	}
	
	public function update_trans_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_user_notification_setting', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('in_trans_notify');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['in_trans_notify'];
	}	
	
	
	public function insert_notification_info($array)
	{
		$this->db->insert('tbl_user_notification_setting', $array);	
		$insert_id = $this->db->insert_id();
		return $insert_id;
	}	
	
	
	public function update_animal_notify($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_user_notification_setting', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('in_animal_notify');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['in_animal_notify'];
	}
	
	public function update_fund_notify($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_user_notification_setting', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('in_fund_notify');
		$this->db->from('tbl_user_notification_setting');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['in_fund_notify'];
	}
	
	
	public function user_notification_setting($userId) 
		{
			$sql	= "SELECT flg_daily_email,flg_immediate_all,flg_immediate_transport,flg_immediate_animal,flg_immediate_fund
					   FROM tbl_users as us 
					   WHERE us.in_user_id= '".$userId."' AND  us.in_deleted= '0'";	
						
			$query = $this->db->query($sql);
			//echo $this->db->last_query();die;
			return $query->row_array();
			
		}
		
	public function unsubscribe_user($email='')
	{
		$this->db->select('*');
		$this->db->from('tbl_unsubscribes_user');
		$this->db->where('in_deleted',0);
		$this->db->where('st_email',$email);
		$query = $this->db->get();
		return  $query->row_array();	
	}		
}