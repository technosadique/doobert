<?php 
# ======================================================================================
# Created by		: Jigar Patel
# Created date		: 18-March-2013
# File description	: common model for genreal query
# Special - notes	: none
# Tables used		: tbl_users,tbl_user_profile
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class common_model extends CI_Model {

    function __construct()
    {
        // Call the Model constructor
        parent::__construct();
    }
    
	function index()
	{
	
	}
	
	function insert_data($table_name,$arrData)
	{
		$user_id = $this->db->insert($table_name, $arrData);
		$this->db->insert_id();	
		//echo "<br>".$this->db->last_query()."<br><br><br>";
		return  $this->db->insert_id();
	}
	function check_exists($table_name='',$field_name='*',$where='')
	{
		if($table_name!='')
		{
			$this->db->select($field_name);
			if(!empty($where))
			{
				$this->db->where($where);
			}
			$query = $this->db->get($table_name);
			//echo $this->db->last_query();die;
			return	$query->num_rows();
		}
	}
	public function get_animal_types() {
		$this->db->select('in_animal_type_id,st_animal_type_name,in_animal_breed_count');
		$this->db->from('tbl_animal_type');
		$this->db->where('in_status',1);
		$this->db->order_by('st_animal_type_name','ASC');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_vehicle_types() {
		$this->db->select('in_vehicle_type_id,st_vehicle_type');
		$this->db->from('tbl_vehicle_type');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->order_by("st_vehicle_type", "asc");
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_animal_breed($id) {
		$this->db->select('in_animal_breed_id,st_animal_breed_name,in_animal_type_id');
		$this->db->from('tbl_animal_breed');
		$this->db->where('in_status',1);
		$this->db->where('in_animal_type_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->order_by('st_animal_breed_name','ASC');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	check_email_ajax	
	#	Purpose		:	Check user id exists in database
	# *******************************************************************************************

	public function check_email_ajax($email,$id='') {
		$this->db->select('in_user_id');	
		$this->db->where('st_email',$email);
		$this->db->where('in_user_id !=',$id);
			
		$this->db->where('in_status !=',2);
		$this->db->where('in_deleted',0);
		$query = $this->db->get('tbl_users');
		
		if($query->num_rows() > 0) {
			return true;
		} else {
			return false;
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_profile	
	#	Purpose		:	User profile details
	#   added u.st_password,st_last_name by ghanshyam on 26Nov2014
	#   added u.st_fb_first_name,st_fb_first_name by ghanshyam on 01Dec2014
	# *******************************************************************************************	
	public function get_user_profile($id='') {
		$result_array = array();
		$this->db->select('	pr.in_user_id,
							pr.st_address1, 
							pr.st_address2, 
							pr.st_city, 
							pr.st_state,
							pr.st_country, 
							pr.st_zip, 
							pr.st_time_zone,
							pr.st_primary_phone, 
							pr.st_secondary_phone, 
							pr.st_fax, 
							pr.st_website,
							pr.st_driver,
							pr.st_pilot,
							pr.st_fundraiser,
							pr.st_photographer,
							pr.st_alternate_email,
							pr.in_status,
							pr.st_about_me,
							pr.st_arpa_cert,
							pr.dt_arpa_cert,
							pr.st_arpa_cert_foster,
							pr.dt_arpa_foster_date,
							pr.st_arpa_cert_tnr,
							pr.dt_arpa_tnr_date,
							pr.st_airline_emp,
							pr.in_number_verified,
							u.st_display_name,
							u.st_last_name,
							u.st_email,
							u.in_public,
							u.st_facebook_uid,
							u.st_password, 			
							u.st_profile_image,
							u.st_fb_first_name,
							u.st_fb_last_name,
							u.dt_created,
							u.st_secondary_email,
							vp.st_identifier,
							vp.st_pilot_zip,
							vp.in_distance_to_pilot,
							a.st_longitude,
							a.st_latitude,
							a.st_iso_country');	
		$this->db->from("tbl_user_profile pr");
		$this->db->join("tbl_users u","pr.in_user_id = u.in_user_id","INNER");
		$this->db->join("tbl_user_pilot vp","vp.in_user_id = u.in_user_id  AND vp.in_deleted='0'","LEFT");	
		$this->db->join("tbl_airport a","a.st_loc_id = vp.st_identifier and a.in_deleted='0'","LEFT");					
		$this->db->where('pr.in_user_id',$id);
		$this->db->where('pr.in_deleted',0);
		$this->db->where('pr.in_deleted',0);
		$this->db->group_by('u.in_user_id');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	# *******************************************************************************************	
	#	Function	:	get_admin_list	
	#	Purpose		:	Get admin list
	# *******************************************************************************************	
	public function get_admin_list() {       
		$this->db->select("st_email_address as email_address,st_name as name,st_permission");
        $this->db->where(array("in_deleted" => '0'));
        $query = $this->db->get("tbl_admin");
        return $query->result_array();
    }

	# *******************************************************************************************	
	#	Function	:	shelter_list	
	#	Purpose		:	Shelter List
	# *******************************************************************************************	
	
	function shelter_list($short_by='',$rec_per_page,$limit)
	{
		$this->db->select("in_shelter_id ,st_shelter_name");
		$this->db->where(array("in_deleted"=>'0',"in_status"=>"1"));
		if($short_by!='all')
		{
			$this->db->where('SUBSTRING(st_shelter_name,1,1)=',$short_by);
		}
		if($this->session->userdata('search_shelter'))
		{
			$searchtxt = $this->session->userdata('search_shelter');
			$searchtxt = str_replace('%', '\%', $searchtxt);
			$where="(st_shelter_name LIKE '%".addslashes($searchtxt)."%'
					OR st_city LIKE '%".addslashes($searchtxt)."%'
					OR st_zip LIKE '%".addslashes($searchtxt)."%'
			)";
			$this->db->where($where, NULL, FALSE); 
		}
		$this->db->from("tbl_shelter");
		$this->db->order_by("st_shelter_name", "asc");
		$this->db->limit($limit,$rec_per_page);
		$query = $this->db->get(); 
		//echo $this->db->last_query();
		if($query->num_rows()>0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[]	= array("shelter_id"	=> $Row->in_shelter_id,
									"sheler_name"   => $Row->st_shelter_name
									);
			}
			return $arrData;
		}
	}
	# *******************************************************************************************	
	#	Function	:	shelter_list_count	
	#	Purpose		:	Shelter List Count
	# *******************************************************************************************	
	
	function shelter_list_count($short_by)
	{
		$this->db->select("in_shelter_id");
		$this->db->where(array("in_deleted"=>'0',"in_status"=>"1"));
		if($short_by!='all')
		{
			$this->db->where('SUBSTRING(st_shelter_name,1,1)=',$short_by);
		}
		if($this->session->userdata('search_shelter'))
		{
			$where="(st_shelter_name LIKE '%".addslashes($this->session->userdata('search_shelter'))."%'
					OR st_city LIKE '%".addslashes($this->session->userdata('search_shelter'))."%'
					OR st_zip LIKE '%".addslashes($this->session->userdata('search_shelter'))."%'
			)";
			$this->db->where($where, NULL, FALSE); 
		}
		$this->db->from("tbl_shelter");
		$this->db->order_by("st_shelter_name", "asc");
		$query = $this->db->get(); 
		//echo $this->db->last_query();
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_animal_breed_name	
	#	Purpose		:	getting animal breed name by id
	# *******************************************************************************************	
	
	public function get_animal_breed_name($data) {
		$this->db->select('st_animal_breed_name');
		$this->db->from('tbl_animal_breed');
		$this->db->where_in('in_animal_breed_id',$data);
		//$this->db->where('in_animal_breed_id',$ter_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_demeanor	
	#	Purpose		:	getting demeanor name by animal id
	# *******************************************************************************************	
	
	public function get_demeanor($animal_id='') {
		$this->db->select('in_demeanor_id,st_demeanor_name,st_demeanor_image,st_demeanor_desc,st_css_class');
		$this->db->from('tbl_demeanor');
		if($animal_id)
		{
			$this->db->where('in_animal_type_id',$animal_id);
		}
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->order_by('st_demeanor_name','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}
	# *******************************************************************************************	
	#	Function	:	get_progress_status	
	#	Purpose		:	Getting all progress status
	# *******************************************************************************************
	
	public function get_progress_status() {
        $this->db->select('in_progress_status_id,st_progress_status,in_status_type');
        $this->db->from('tbl_progress_status');
        $this->db->where('in_deleted', 0);
		$this->db->order_by('st_progress_status','ASC');	
        $query = $this->db->get();
		//echo $this->db->last_query();die;
        return $query->result_array();
    }
	
	public function get_animal_name($id) {
		$this->db->select('st_animal_name,in_primary_breed_id');
		$this->db->from('tbl_animal');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		//$this->db->where('in_status',1);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	# *******************************************************************************************	
	#	Function	:	get_lat_long	
	#	Purpose		:	Latitude and longitude of location
	# *******************************************************************************************	
	
	public function get_lat_long($location)
	{
		/*$res	=	file_get_contents("http://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true");
			//echo "<pre>";print_r($res);exit;
			if(json_decode($res)->status=="OK"){
				$arrAxis=	json_decode($res)->results[0]->geometry->location;	
				$lat 	= 	$arrAxis->lat;
				$lng 	= 	$arrAxis->lng;
				$lat_ar['lat']	=	number_format($lat,"2",".","");
				$lat_ar['lng']	=	number_format($lng,"2",".","");
				return $lat_ar ;
			}
		*/
		//$url = "http://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true&key=AIzaSyABuKkPLIoKopiDXNmb5r9k4doDJaPgtt8";	
		//$url = "https://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true&key=AIzaSyBT1aqerOYrNrX9t6yXWarBcbcen25uh24";	
		//$url = "https://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true&key=AIzaSyCHr0omexe8lVMgkkVRRVF79EZvF78Fi4c";	
		//$url = "https://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true&key=AIzaSyDHWsjEomsjGFW3rtDig5MjC5Ydi63Lj_Q";
		$google_api_key = $this->config->item('googleapi_key');		
		$url = "https://maps.googleapis.com/maps/api/geocode/json?address=".urlencode($location)."&sensor=true&key=".$google_api_key;	
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		$geoloc = curl_exec($ch);
		
		$res = $geoloc;
		//echo "<pre>";print_r($json);die;
		//echo "<pre>";print_r($res);exit;
		if(json_decode($res)->status=="OK"){
			$arrAxis=	json_decode($res)->results[0]->geometry->location;	
			$lat 	= 	$arrAxis->lat;
			$lng 	= 	$arrAxis->lng;
			$lat_ar['lat']	=	number_format($lat,"2",".","");
			$lat_ar['lng']	=	number_format($lng,"2",".","");
			return $lat_ar ;
		}	
			
	}
	
	# *********************************************************************************************	
	#	Function	:	get_miles
	#	Purpose		:	This function is used to calculate driving miles from origin to destination zip code
	#	Param		:	origin zip
	#	Param		:	destination zip
	#	Param		:	avoid tolls flag
	#	Param		:	nearest flag
	#	Return		:	miles
	# *******************************************************************************************
	function get_miles($origin,$destination,$avoid_tolls=FALSE, $nearest_mile=FALSE)
	{
	
		//echo '<br/> Origin: '.$origin.', Destination: '.$destination;
		
		$mode = 'driving';
		
		if($avoid_tolls)
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin&destination=$destination&mode=$mode&alternatives=false&avoid=tolls&sensor=false&key=AIzaSyDHWsjEomsjGFW3rtDig5MjC5Ydi63Lj_Q";
		else
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin&destination=$destination&mode=$mode&alternatives=false&sensor=true&key=AIzaSyDHWsjEomsjGFW3rtDig5MjC5Ydi63Lj_Q";	
		//echo $url;	
		// create curl resource
		$ch = curl_init();
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		
		// $output contains the output string
		$output = curl_exec($ch);
		
		// close curl resource to free up system resources
		curl_close($ch);
		
		$response_array = json_decode($output, TRUE);
		
		//echo '<br/>'.$url;
				
		if($response_array['status'] == 'OK')
		{
			$tmp_miles_array = array();
			
			$routes = $response_array['routes'];
			
			foreach($routes as $key=>$route)
			{
				$raw_miles_value = $route['legs'][0]['distance']['text'];
				$miles_value = preg_replace("/[^0-9.]/", "", $raw_miles_value);
				$tmp_miles_array[$key] = $miles_value;
			}
			
			//echo '<br/>----------------'.$url.'----------------<br/>';
			//echo '<pre>';print_r($tmp_miles_array);echo '<br/>';
			
			$count_tmp_miles_array = count($tmp_miles_array);
			
			if($count_tmp_miles_array>0)
			{
				if($count_tmp_miles_array>1)
				{
					if($avoid_tolls){
						return round(max($tmp_miles_array));
					}	
					else {
					//echo '<pre>';print_r($tmp_miles_array);
						if($nearest_mile)
							return round(min($tmp_miles_array));
						else
							return round(max($tmp_miles_array));	
					}
				}
				else
				{
					return round($tmp_miles_array[0]);
				}
			}
			else
			{
				return 0;
			}	
			
		}
		else
		{
			return 0;
			
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	get_email_containt	
	#	Purpose		:	Latitude and longitude of location
	# *******************************************************************************************	
	
	public function get_email_containt($id) {
		$this->db->select('in_email_id,st_email_subject,st_email_body,st_category,in_allow_status');
		$this->db->from('tbl_email_template');
		$this->db->where('in_email_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_organization_list($org_id='')
	{	
		$this->db->select('o.st_org_name,o.in_organization_id ',FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_organization_user as ou','ou.in_organization_id = o.in_organization_id','LEFT');
		$cnd  = '';
		$cnd2 = '';
		if($org_id!='')
		{
			$cnd = " AND o.in_organization_id = '".addslashes($org_id)."'";
			$cnd2 = " AND ou.in_organization_id = '".addslashes($org_id)."'";
		}
		
		$where = "(( o.in_user_id ='".$this->session->userdata('userid')."' ".$cnd.")  
					OR( ou.in_user_id ='".$this->session->userdata('userid')."' )
					AND ou.in_status='1' 
					AND ou.in_deleted='0'  ".$cnd2.") AND o.in_deleted='0' AND o.in_status='1' 
					";
		$this->db->where($where, NULL, FALSE);
		$this->db->group_by('o.in_organization_id'); 
		$this->db->order_by('o.st_org_name','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//echo "<pre>";print_r($query->result_array());die;
		return $query->result_array();	
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_permission	
	#	Purpose		:	Getting current user permissions
	# *******************************************************************************************
	
	public function get_user_permission() {
		$this->db->select('st_permission');
		$this->db->from('tbl_organization_user');
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_deleted',"0");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	update_org_data	
	#	Purpose		:	Updating organization picture
	# *******************************************************************************************
	
	public function update_org_data($data) {
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$this->db->update('tbl_organization',$data);
		return $this->db->affected_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_picture	
	#	Purpose		:	Getting organization picture.
	# *******************************************************************************************
	
	public function get_org_picture($org_id) {
		$this->db->select('st_org_image');
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$org_id);
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_owner_id	
	#	Purpose		:	Getting organization owner id.
	# *******************************************************************************************
	
	//public function get_org_owner_id($user_id=0,$org_id=0) {
	public function get_org_owner_id($user_id='',$org_id='') {
		$this->db->select('in_user_id');
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_deleted',"0");
		$this->db->where('in_user_id',$user_id);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//return $query->row_array();
		if($query && $query->num_rows() > 0)
		{
			$result = $query->row_array();	 
		} else{
			$result = array();
		}
			return $result;
	}
	
	# *******************************************************************************************	
	#	Function	:	get_permission	
	#	Purpose		:	Getting organization permission.
	# *******************************************************************************************
	
	public function get_permission($user_id='',$org_id='') {
		$this->db->select('st_permission');
		$this->db->from('tbl_organization_user');
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//return $query->row_array();
		if($query && $query->num_rows() > 0)
		{
			$result = $query->row_array();	 
		} else{
			$result = array();
		}
			return $result;
	}
	
	# *******************************************************************************************	
	#	Function	:	check_user_profile	
	#	Purpose		:	Cheking user profile is updated or not.
	# *******************************************************************************************
	
	/*public function check_user_profile($userid) {
		$this->db->select('st_state,st_zip');
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id',$userid);
		$query = $this->db->get();
		
		return $query->row_array();
	}*/
	
	# *******************************************************************************************	
	#	Function	:	get_animal_short_details	
	#	Purpose		:	Getting small basic information about animal.
	# *******************************************************************************************
	
	public function get_animal_short_details($id) {
		$this->db->select('a.st_animal_name,a.in_primary_breed_id,b.st_animal_breed_name,a.st_profile_story');
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_breed as b','a.in_primary_breed_id = b.in_animal_breed_id','INNER');
		$this->db->where('a.in_animal_id',$id);
		$this->db->where('a.in_deleted',0);
		$this->db->where('b.in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	# *******************************************************************************************	
	#	Function	:	get_transport_coodrdinator	
	#	Purpose		:	Get all Transport coordinate associate with current organization
	# *******************************************************************************************	
	public function get_transport_coodrdinator($org_id)
	{
		//SELECT in_org_user_id FROM tbl_organization_user ou INNER JOIN tbl_users u ON ou.in_user_id = u.in_user_id WHERE ou.in_organization_id=5 AND ou.in_deleted=0 AND u.in_deleted=0
		
		$this->db->select('concat(u.st_display_name," ",u.st_last_name) as name,st_email as email_address,u.in_user_id as user_id', FALSE);
		$this->db->from('tbl_organization_user as ou');
		$this->db->join('tbl_users as u','ou.in_user_id = u.in_user_id','INNER');
		$this->db->where('ou.in_organization_id',$org_id);
		$this->db->where('ou.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$where = '(ou.st_transport_cood = "Y" OR ou.st_permission LIKE "%transport%")';
        $this->db->where($where);
		$this->db->where('ou.in_status',1);   //added by ghanshyam on 18-Nov-2014 Accept- Active co-ordinators
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_owner_details	
	#	Purpose		:	Get Organizzation owner details
	# *******************************************************************************************	
		
	public function get_owner_details($org_id)
	{
		//SELECT st_display_name,st_email FROM tbl_organization o INNER JOIN tbl_users u ON o.in_user_id = u.in_user_id WHERE o.in_organization_id=5 AND o.in_deleted=0 AND u.in_deleted=0
		
		$this->db->select('concat(u.st_display_name," ",u.st_last_name) as name,st_email as email_address,u.in_user_id as user_id', FALSE);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_users as u','o.in_user_id = u.in_user_id','INNER');
		$this->db->where('o.in_organization_id',$org_id);
		$this->db->where('o.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();

	}
	
	# *******************************************************************************************	
	#	Function	:	get_owner_details	
	#	Purpose		:	Get Organizzation owner details
	# *******************************************************************************************	
		
	public function get_driver_users()
	{	
		$this->db->select('p.in_user_id,u.st_display_name,u.st_email,st_zip_vehicle,st_driver_availability,in_distance_to_drive,lon,lat');
		$this->db->from('tbl_user_profile p');
		$this->db->join('tbl_user_vehicle v','v.in_user_id = p.in_user_id','INNER');
		$this->db->join('tbl_users u','u.in_user_id = p.in_user_id','INNER');
		$this->db->join('tbl_zip_code z','v.st_zip_vehicle = z.zip_code','INNER');
		$this->db->where('p.in_deleted',0);
		$this->db->where('v.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$this->db->where('p.st_driver',"Y");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}	
	
	public function calc_distance($lat,$lon,$miles)
	{
		//SELECT zip_code,( 3959 * acos( cos( radians('34.0784') ) * cos( radians(lat) ) * cos( radians( lon ) - radians('-118.487') ) + sin( radians('34.0784') ) * sin( radians(lat) ) ) ) as dist FROM tbl_zip_code WHERE ( 3959 * acos( cos( radians('34.0784') ) * cos( radians(lat) ) * cos( radians( lon ) - radians('-118.487') ) + sin( radians('34.0784') ) * sin( radians(lat) ) ) )<=100
		$sql = "SELECT zip_code,round(( 3959 * acos( cos( radians('".$lat."') ) * cos( radians(lat) ) * cos( radians( lon ) - radians('".$lon."') ) + sin( radians('".$lat."') ) * sin( radians(lat) ) ) ),4) as dist FROM tbl_zip_code WHERE round(( 3959 * acos( cos( radians('".$lat."') ) * cos( radians(lat) ) * cos( radians( lon ) - radians('".$lon."') ) + sin( radians('".$lat."') ) * sin( radians(lat) ) ) ),4)<='".$miles."'";
		$query	=	$this->db->query($sql);
		return $query->result_array();
	}
	
	public function insert_distance($arrData)
	{
		$this->db->select('in_id');
		$this->db->from('tbl_google_distance');
		$this->db->where('st_start_zip',$arrData['st_start_zip']);
		$this->db->where('st_end_zip',$arrData['st_end_zip']);
		$query = $this->db->get();
		if($query->num_rows()<=0)
		{
			$user_id = $this->db->insert("tbl_google_distance", $arrData);
			$this->db->insert_id();	
		}
	}

	# *******************************************************************************************	
	#	Function	:	get_transport_list	
	#	Purpose		:	Get list of transportation under the organization
	# *******************************************************************************************	
	
	function get_transport_list($org_id,$limit='',$rec_per_page,$transport_id = '')
	{		
		$transport_details = array();
		$this->db->select("	SQL_CALC_FOUND_ROWS tr.in_transportation_id as rows,
							tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.in_tot_distance,
							tr.st_trans_name,
							tr.in_distance_covered,
							tr.in_status,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.accTcid,
							tr.in_round,
							tr.in_mins,
							tr.st_trans_type,
							tr.in_airline_transport,
							concat(u.st_display_name,' ',u.st_last_name) as co_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							u.st_email,o.st_org_code",FALSE);
		//$where = array("tr.in_deleted"=>"0","tr.in_organization_id"=>$org_id);
		
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users u","u.in_user_id=tr.in_trans_coods_id","INNER");
		$this->db->join("tbl_organization o","o.in_organization_id=tr.in_organization_id","INNER");	
		$this->db->join("tbl_org_transport_participate op","op.in_transportation_id=tr.in_transportation_id AND op.in_status=1 AND op.in_deleted=0","LEFT");
		$this->db->where("tr.in_deleted",0);		
		$where = "(tr.in_organization_id = '".$org_id."' OR op.in_organization_id = '".$org_id."')";	
		$this->db->where($where);
		//$this->db->where_in("tr.in_status",array("1","2","3"),FALSE);
		$this->db->where("(tr.in_status = 1 || (tr.in_status = 2 && tr.dt_target >= current_date()))");
		if($transport_id!='')
		{
			$this->db->where('in_transportation_id',$transport_id);
		}	
		$this->db->group_by('tr.in_transportation_id');
		$this->db->order_by('tr.in_transportation_id','DESC');
		if($limit!='')
			 $this->db->limit($rec_per_page, $limit);	
		else
			$this->db->limit(10);
		//$this->db->limit(3);
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		$transport_details['transport_details'] = $query->result_array();
		$transport_details['total_count']	= $this->db->query('SELECT FOUND_ROWS() as count;')->row()->count;
		//echo "<pre>";print_r($transport_details);die;
		return $transport_details;	
	}
	

	# *******************************************************************************************	
	#	Function	:	get_feeds	
	#	Purpose		:	Get Organization feeds
	# *******************************************************************************************		
	function get_feeds($organization,$rec_per_page,$limit)
	{
/*		SELECT 	n.in_notification_id, 
	n.in_organization_id, 
	n.in_animal_id, 
	n.in_transportation_id, 
	n.st_notification_msg, 
	n.in_type, 
	n.in_modified_by, 
	n.dt_created, 
	o.st_org_image,
	u.st_profile_image
FROM tbl_notification n
INNER JOIN tbl_users u ON  u.in_user_id=n.in_modified_by
INNER JOIN tbl_transportation t ON  t.in_transportation_id=n.in_transportation_id
INNER JOIN tbl_organization o ON  o.in_organization_id=t.in_organization_id
WHERE n.in_transportation_id='1' AND n.in_deleted='0'*/

	$this->db->select('	n.in_notification_id, 
						n.in_organization_id, 
						n.in_transportation_id, 
						n.st_notification_msg,  
						n.in_modified_by, 
						n.dt_created, 
						o.st_org_image,
						u.st_profile_image');
		$this->db->from('tbl_notification n');
		$this->db->join('tbl_users u','u.in_user_id=n.in_modified_by','INNER');
		$this->db->join('tbl_transportation t','t.in_transportation_id=n.in_transportation_id','INNER');
		$this->db->join('tbl_organization o','o.in_organization_id = t.in_organization_id','INNER');
		$this->db->where('n.in_deleted',0);
		$this->db->where('n.in_organization_id',$organization);
		$this->db->order_by('n.in_notification_id','DESC');
		$this->db->limit($limit,$rec_per_page);
		$query =	$this->db->get();
		return $query->result_array();
	}
	
	function get_all_user_seledted_radious($start_zip,$end_zip)
	{
		$user_array	=	array();
		$j	=	0;
		
		############## DRIVER #########################	
		$sql1	=	"SELECT u.in_user_id, 
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name, 
							u.st_email, 
							uv.st_zip_vehicle,
							uv.in_distance_to_drive,
							uv.zip_lat as lati,
							uv.zip_lon as longi, 
							uv.st_driver_availability
					FROM tbl_users as u 
					INNER JOIN tbl_user_vehicle as uv ON u.in_user_id =uv.in_user_id AND uv.in_deleted =0
					WHERE u.in_status =1 AND u.in_deleted=0 AND uv.st_zip_vehicle != '' ";
		$query1		=	$this->db->query($sql1);
		
		if($query1->num_rows() > 0)
		{
			$res_arr1	=	$query1->result_array();
			
			foreach($res_arr1 as $arrval)
			{
				$user_zip	=	'';
				$user_miles	=	'';
				$user_zip	=	$arrval['st_zip_vehicle'];
				$user_miles	=	$arrval['in_distance_to_drive'];
				$sql2		=	"SELECT in_distance_miles FROM tbl_google_distance WHERE ((st_start_zip='$start_zip' AND st_end_zip = '$user_zip') OR (st_start_zip='$end_zip' AND st_end_zip = '$user_zip') OR (st_start_zip='$user_zip' AND st_end_zip = '$start_zip') OR (st_start_zip='$user_zip' AND st_end_zip = '$end_zip')) AND in_distance_miles<='$user_miles'";
				$query2		=	$this->db->query($sql2);
				if($query2->num_rows() > 0)
				{				
					$user_array[$j]['in_user_id'] = $arrval['in_user_id'];
					$user_array[$j]['st_display_name']	=	$arrval['st_display_name'];
					$user_array[$j]['st_email']	=	$arrval['st_email'];
					$user_array[$j]['st_driver_availability']	=	$arrval['st_driver_availability'];
					$j++;
				}			
			}
		}	
		
		############## PILOT #########################	
		
		$sql3	=	"SELECT u.in_user_id, 
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name, 
							u.st_email, 
							up.st_pilot_zip,
							up.in_distance_to_pilot,
							up.zip_lat as lati,
							up.zip_lon as longi, 
							up.st_pilot_availability
					FROM tbl_users as u 
					INNER JOIN tbl_user_pilot as up ON u.in_user_id =up.in_user_id AND up.in_deleted =0
					WHERE u.in_status =1 AND u.in_deleted=0 AND up.st_pilot_zip != ''";
		$query3		=	$this->db->query($sql3);
		
		if($query3->num_rows() > 0)
		{
			$res_arr3	=	$query3->result_array();	
			
			foreach($res_arr3 as $arrval)
			{
				$user_zip	=	'';
				$user_miles	=	'';
				$user_zip	=	$arrval['st_pilot_zip'];
				$user_miles	=	$arrval['in_distance_to_pilot'];
				$sql4		=	"SELECT in_distance_miles FROM tbl_google_distance WHERE ((st_start_zip='$start_zip' AND st_end_zip = '$user_zip') OR (st_start_zip='$end_zip' AND st_end_zip = '$user_zip') OR (st_start_zip='$user_zip' AND st_end_zip = '$start_zip') OR (st_start_zip='$user_zip' AND st_end_zip = '$end_zip')) AND in_distance_miles<='$user_miles'";
				$query4		=	$this->db->query($sql4);
				if($query4->num_rows() > 0)
				{				
					$user_array[$j]['in_user_id'] = $arrval['in_user_id'];
					$user_array[$j]['st_display_name']	=	$arrval['st_display_name'];
					$user_array[$j]['st_email']			=	$arrval['st_email'];
					$user_array[$j]['st_driver_availability']	=	$arrval['st_pilot_availability'];
					$j++;
				}			
			}
		}		
		return $user_array;
		
		/*print_r($user_array);
					
	
		$sql = "SELECT v.in_user_id,d.st_start_zip,d.st_end_zip,d.in_distance_miles,u.st_display_name,u.st_email,v.st_driver_availability FROM tbl_user_vehicle v 
INNER JOIN tbl_google_distance d ON ((v.st_zip_vehicle = d.st_start_zip  AND d.in_distance_miles <= v.in_distance_to_drive ) OR (v.st_zip_vehicle = d.st_end_zip AND d.in_distance_miles <= v.in_distance_to_drive)) 
INNER JOIN tbl_users u ON u.in_user_id = v.in_user_id
WHERE (st_start_zip = '".$start_zip."' OR st_end_zip = '".$start_zip."' OR st_start_zip = '".$end_zip."' OR st_end_zip = '".$end_zip."') GROUP BY in_user_id";
		$query	=	$this->db->query($sql);
		echo $this->db->last_query();die;
		return $query->result_array();*/
	}	
	
	
	/*function get_all_user_seledted_radious($start_zip,$end_zip)
	{
		$sql = "SELECT v.in_user_id,d.st_start_zip,d.st_end_zip,d.in_distance_miles,u.st_display_name,u.st_email,v.st_driver_availability FROM tbl_user_vehicle v 
INNER JOIN tbl_google_distance d ON ((v.st_zip_vehicle = d.st_start_zip  AND d.in_distance_miles <= v.in_distance_to_drive ) OR (v.st_zip_vehicle = d.st_end_zip AND d.in_distance_miles <= v.in_distance_to_drive)) 
INNER JOIN tbl_users u ON u.in_user_id = v.in_user_id
WHERE (st_start_zip = '".$start_zip."' OR st_end_zip = '".$start_zip."' OR st_start_zip = '".$end_zip."' OR st_end_zip = '".$end_zip."') GROUP BY in_user_id";
		$query	=	$this->db->query($sql);
		echo $this->db->last_query();die;
		return $query->result_array();
	}*/
	
	function get_lattitude_longitude($zipcode) {
		$lat_zip_code  = preg_replace('/\s/', '',$zipcode);
		$zip_code = strtoupper($lat_zip_code);
		$this->db->select('zip_code,lat,lon,state_prefix');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zip_code);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_breed_by_animal_id	
	#	Purpose		:	getting animal breed name by id
	# *******************************************************************************************	
	
	public function get_breed_by_animal_id($animal_id) {
		$this->db->select('in_animal_breed_id,st_animal_breed_name');
		$this->db->from('tbl_animal_breed');
		$this->db->where('in_animal_type_id',$animal_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_users_email	
	#	Purpose		:	Get al email addres of current orgnization
	# *******************************************************************************************
	
	public function get_org_users_email($org_id) {
		$data = array();
		
		$this->db->select('u.in_user_id,u.st_email,CONCAT(u.st_display_name," ",st_last_name) as full_name',FALSE);
		$this->db->from('tbl_users as u');
		$this->db->join('tbl_organization_user as o','u.in_user_id = o.in_user_id','INNER');
		
		$this->db->where('o.in_organization_id',$org_id);
		$this->db->where('u.in_deleted',0);
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		$this->db->where('u.in_status <>',3);
		//$this->db->where('u.in_status',1);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	update_user_data	
	#	Purpose		:	Updating user picture
	# *******************************************************************************************
	
	public function update_user_data($data) {
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->update('tbl_users',$data);
		return $this->db->affected_rows();
		
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_picture	
	#	Purpose		:	Getting user picture.
	# *******************************************************************************************
	
	public function get_user_picture($user_id) {
		$this->db->select('st_profile_image');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$user_id);
		$query = $this->db->get();
		
		return $query->row_array();
	}
	# *******************************************************************************************	
	#	Function	:	get_time_zone	
	#	Purpose		:	Getting user timezone based on user profile zipcode.
	# *******************************************************************************************	
	public function get_time_zone($zip_code)
	{
		$this->db->select('st_time_zone');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zip_code);
		$query = $this->db->get();		
		return $query->row_array();	
	}
	function time_zone()
	{
		$data = array();
		$this->db->select('st_time_zone');
		$this->db->from('tbl_time_zone');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
					$data[$row['st_time_zone']] =$row['st_time_zone'];
				}
			return $data;	
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	get_time_difference	
	#	Purpose		:	Getting time difference
	# *******************************************************************************************
	
	public function get_time_difference($time) {
		$time	=	$time.' 23:59:59';
		//$convert_time = date('Y-m-d H:i:s',strtotime($time));
		$query = $this->db->query("select TIMEDIFF ('".$time."','".date('Y-m-d H:i:s')."')");
		//echo $this->db->last_query();
		return $query->row_array();
		
	}
	
	# *******************************************************************************************	
	#	Function	:	check_sponsorship_exist	
	#	Purpose		:	Checking sponsorship exist for animal
	# *******************************************************************************************
	
	public function check_sponsorship_exist($animal_id) {
		$this->db->select('in_animal_id,in_campaign_id,st_custom_url,in_status');
		$this->db->from('tbl_campaign');
		$this->db->where('in_animal_id',$animal_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	check_animal_transport	
	#	Purpose		:	Checking animal is added for transportation
	# *******************************************************************************************
	
	public function check_animal_transport($animal_id) {
		/*$this->db->select('at.in_animal_id');
		$this->db->from('tbl_animal_transportation as at');
		$this->db->join('tbl_transportation as t','at.in_transportation_id = t.in_transportation_id','INNER');
		$this->db->where('at.in_animal_id',$animal_id);
		$this->db->where_in('t.in_status',array('1','2'));
		$this->db->where('at.in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();*/
		
		$this->db->select('at.in_animal_id,t.in_transportation_id,tl.in_route_type,t.dt_pickup_date');
		$this->db->from('tbl_animal_transportation as at');
		
		$this->db->join('tbl_transportation as t','at.in_transportation_id = t.in_transportation_id','INNER');
		$this->db->join('tbl_transportation_leg as tl','at.in_transportation_id = tl.in_transportation_id AND tl.in_route_type = 0 AND tl.in_deleted = 0','LEFT');
		
		$this->db->where('at.in_animal_id',$animal_id);
		
		//$this->db->where('t.in_status',1);
		$this->db->where_in('t.in_status',array('1','2','4'));
		//$this->db->where('tl.in_route_type',0);		
		//$this->db->where('tl.in_deleted',0);
		$this->db->where('at.in_deleted',0);
		$this->db->where('t.in_deleted',0);
		
		//$this->db->order_by('at.in_transportation_id','ASC');
		$this->db->order_by('t.dt_pickup_date','ASC');
		$this->db->limit('1');
		
		$query = $this->db->get();
		
		//echo $this->db->last_query();
		//exit;
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	check_animal_for_aviation	
	#	Purpose		:	Check if animal is transported as aviation
	# *******************************************************************************************
	
	public function check_animal_for_aviation($animal_id) {
		$this->db->select('at.in_animal_id,t.in_transportation_id,tl.in_route_type,t.dt_pickup_date');
		$this->db->from('tbl_animal_transportation as at');
		
		$this->db->join('tbl_transportation as t','at.in_transportation_id = t.in_transportation_id','INNER');
		$this->db->join('tbl_transportation_leg as tl','at.in_transportation_id = tl.in_transportation_id AND tl.in_route_type = 1 AND tl.in_deleted = 0','LEFT');
		$this->db->where('at.in_animal_id',$animal_id);
		
		//$this->db->where('t.in_status',1);
		$this->db->where_in('t.in_status',array('1','2','4'));
		//$this->db->where('tl.in_route_type',1);		
		//$this->db->where('tl.in_deleted',0);
		$this->db->where('at.in_deleted',0);
		$this->db->where('t.in_deleted',0);
		
		//$this->db->order_by('at.in_transportation_id','ASC');
		$this->db->order_by('t.dt_pickup_date','ASC');
		$this->db->limit('1');		
		$query = $this->db->get();		
		//print_r($this->db->last_query());exit;
		//return $query->num_rows();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	pending_requests	
	#	Purpose		:	getting pending_requests of organization
	# *******************************************************************************************
	
	public function pending_requests($org_id,$date_created='') {
		$this->db->select('in_user_id');
		$this->db->from('tbl_organization_user');
		$this->db->where('in_organization_id',$org_id);
		
		if($date_created != '') {
			$this->db->where('dt_created >',$date_created);
		}
		
		$this->db->where('in_status',0);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	pending_notifications	
	#	Purpose		:	getting pending notifications of organization
	# *******************************************************************************************
	
	public function pending_notifications($org_id,$date_created) {
		$this->db->select('in_notification_id');
		$this->db->from('tbl_notification');
		$this->db->where('in_organization_id',$org_id);
		
		if($date_created != '') {
			$this->db->where('dt_created >',$date_created);
		}
		
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->num_rows();
	}
	
	#=========================================================
	#	Function : insert_last_visit_date
	#	Purpose  : Insert Last Visit date
	#=========================================================
	
	public function insert_last_visit_date($data) {
		$this->db->insert('tbl_user_visit',$data);
		return $this->db->affected_rows();
	}
	
	#=========================================================
	#	Function : last_visit_date
	#	Purpose  : Getting user's last visit date
	#=========================================================
	
	public function last_visit_date($user_id,$org_id,$visit_type) {
		$this->db->select('dt_created');
		$this->db->from('tbl_user_visit');
		$this->db->where('in_user_id',$user_id);	
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('st_visit_type',$visit_type);
		
		$this->db->order_by('dt_created','DESC');
		$this->db->limit(1,0);	
			
		$query = $this->db->get();
		return $query->row_array();
		
	}
	
	public function get_plane_types() {
		$this->db->select('in_plane_type_id,st_plane_type');
		$this->db->from('tbl_plane_type');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->order_by("st_plane_type", "asc");
		$query = $this->db->get();
		return $query->result_array();
	}
	
	//
	
	#=========================================================
	#	Function : last_visit_date
	#	Purpose  : Getting user's last visit date
	#=========================================================
	
	public function last_visit_date_front($user_id,$visit_type) {
		$this->db->select('dt_created');
		$this->db->from('tbl_user_visit');
		$this->db->where('in_user_id',$user_id);	
		$this->db->where('st_visit_type',$visit_type);
		
		$this->db->order_by('dt_created','DESC');
		$this->db->limit(1,0);	
			
		$query = $this->db->get();
		return $query->row_array();
		
	}
	
	# *******************************************************************************************	
	#	Function	:	pending_transefer_req	
	#	Purpose		:	getting animal transefer request for organization
	# *******************************************************************************************
	
	public function pending_transefer_req($org_id,$date_created) {
		$this->db->select('ar.in_transfer_req_id');
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_transfer_req as ar','a.in_animal_id = ar.in_animal_id','INNER');
		$this->db->where('a.in_deleted',0);
		$this->db->where('ar.in_to_organization_id',$org_id);
		$this->db->where('ar.in_status = ',0);
		
		if($date_created != '') {
			$this->db->where('ar.dt_created >',$date_created);
		}
		
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	pending_notifications_front	
	#	Purpose		:	getting pending notifications for user
	# *******************************************************************************************
	
	public function pending_notifications_front($user_id,$date_created) {
		$this->db->select('in_notification_id');
		$this->db->from('tbl_notification');
		//$this->db->where('in_user_id',$user_id);
		
		if($date_created != '') {
			$this->db->where('dt_created >',$date_created);
		}
		
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	pending_transportation	
	#	Purpose		:	getting pending transportation for user
	# *******************************************************************************************
	
	public function pending_transportation($user_id,$date) {
		$details = $this->get_driver_user_lat_long_front();
		$trns_ids_list = $this->get_current_driver_participate_front();
		//echo "<pre>";print_r($details );die;
		$trns_ids = '';
		if(!empty($trns_ids_list))
		{
			$trns_ids 		= implode(",",$trns_ids_list);
		}
		if(!empty($details))
		{
			$st_driver_availability = unserialize($details['st_driver_availability']);
			if(!empty($st_driver_availability))
			{
				$days 		= "'".implode("','",unserialize($details['st_driver_availability']))."'";
			}
			$lat 		= $details['lat'];
			$lon 		= $details['lon'];
			$distance 	= $details['in_distance_to_drive'];
		
			$this->db->select(" tr.dt_target,
								DATE_FORMAT(tr.dt_target, '%a') as days,
								tr.in_transportation_id,
								tr.in_status, 
								tr.st_from_street, 
								tr.st_from_city, 
								tr.st_from_state, 
								tr.st_from_zip, 
								tr.st_to_street, 
								tr.st_to_state, 
								tr.st_to_city, 
								tr.st_to_zip, 
								tr.in_tot_distance, 
								tr.in_distance_covered, 
								round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) perc,
							 (SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id AND in_transportation_leg_id!='0') as drivers,
							z.lat,
							z.lon",FALSE);
			$this->db->from("tbl_transportation tr");
			$this->db->join("tbl_zip_code z","tr.st_from_zip = z.zip_code","INNER");
			$this->db->join("tbl_zip_code tz","tr.st_to_zip = tz.zip_code","INNER");
			$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
			$where = array("tr.in_deleted"=>'0',"tr.in_status"=>"1");
			$this->db->where($where);
			$this->db->where('tr.dt_target >=', date("Y-m-d"));
			if($date != '') {
				$this->db->where('tr.dt_created >', $date); 
			}
			
			if($trns_ids!='')
			{
				$this->db->where("tr.in_transportation_id NOT IN (".$trns_ids.") ", NULL, FALSE);
			}
			$this->db->where('
			((3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat))))<="'.$distance.'" 
			OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(tz.lat))))<="'.$distance.'" )
			GROUP BY tr.in_transportation_id HAVING '.((isset($days))? "days in(".$days .") AND ":"").'perc < "100" ', NULL, FALSE);
			$this->db->order_by("tr.in_transportation_id","DESC");
			$this->db->limit(9);
			$query =	$this->db->get();
			//echo "<pre>".$this->db->last_query();die;
			return $query->result_array();
		}
	}
	
	function get_driver_user_lat_long_front()
	{
		$this->db->select("pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon,z.lat,z.lon");
		$this->db->from("tbl_user_profile pr ");
		$this->db->join("tbl_user_vehicle v","v.in_user_id = pr.in_user_id",'INNER');
		$this->db->join("tbl_zip_code z","v.st_zip_vehicle = z.zip_code",'INNER');
		$where = array("pr.in_deleted"=>'0',"pr.st_driver"=>"Y","v.in_deleted"=>"0","pr.in_user_id"=>$this->session->userdata('userid'));
		$this->db->where($where);
		$this->db->order_by("v.in_distance_to_drive","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	function get_current_driver_participate_front()
	{
		$this->db->select("in_transportation_id");
		$this->db->from("tbl_transportation_participants");
		$where = array("in_deleted"=>'0',"in_user_id"=>$this->session->userdata('userid'));
		$this->db->where($where);
		$query =	$this->db->get();
		if($query->num_rows()>0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[]	= $Row->in_transportation_id;
			}
			return $arrData;
		}
		
	}
	public function get_airports($airport_id,$numeric='',$lat_long='')
	{
		$this->db->select("st_loc_id as label,st_loc_id as value,st_state,st_city");
		$this->db->from('tbl_airport');
		if($numeric!='')
		{
			
		}
		else
		{
			$this->db->where('in_deleted',0);
			$this->db->where('st_loc_id LIKE "%'.$airport_id.'%"',FALSE,FALSE);
		}
		$this->db->limit("10");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			return $query->result_array();
		}
	}
	
	//added st_pilot by ghanshyam on 05Nov2014
	public function get_user_profile_setting($userId){
			$this->db->select('u.in_public,u.st_driver,u.st_contact,u.st_driver,u.st_pilot,u.st_org,u.st_foster,u.st_foster_home,u.st_foster_family,u.st_photographer,u.st_in_person_vol,u.st_in_virtual_vol,st_foster_ref,u.st_lost_animal');
			$this->db->from('tbl_user_profile_setting as u');		
			$this->db->where('u.in_user_id',$userId);
			$this->db->where('u.in_deleted',0);		
			$query = $this->db->get();
			//echo $this->db->last_query();
			return $query->row_array();	
				
	}
	
	#=========================================================
	#	Function : get_organization_profile
	#	Purpose  : Getting organization privacy setting detail for current organization
	#=========================================================
	public function get_organization_profile($orgId){
			$this->db->select('tos.in_org_setting_id,tos.in_public');
			$this->db->from('tbl_organization_setting as tos');		
			$this->db->where('tos.in_organization_id',$orgId);
			$query = $this->db->get();
			return $query->row_array();		
	}
	
	#=========================================================
	#	Function : get_organization_event
	#	Purpose  : Getting Evenets for current organization
	#=========================================================
	
	public function get_organization_event($org_id) {
		$this->db->select('in_event_id,st_event_title as title,dt_start as start_date,
						dt_end as end_date,st_event_desc');
		$this->db->from('tbl_organization_event');
		
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		
		return $query->result_array();
	}
	
	#=========================================================
	#	Function : get_event_detail
	#	Purpose  : Getting Events details
	#=========================================================
	
	public function get_event_detail($id) {
		$this->db->select('*');
		$this->db->from('tbl_organization_event');
		
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$this->db->where('in_event_id',$id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	#=========================================================
	#	Function : add_event
	#	Purpose  : Insert Event Data
	#=========================================================
	
	public function add_event($data) {
		$this->db->insert('tbl_organization_event',$data);
		return $this->db->affected_rows();
	}
	
	#=========================================================
	#	Function : get_all_transportation
	#	Purpose  : Getting all transportation for current org
	#=========================================================
	
	public function get_all_transportation($org_id) {
		$data = array();
		$this->db->select('t.in_organization_id,t.st_from_city,t.st_to_city,
						   t.in_transportation_id ,t.dt_pickup_date,t.st_trans_type,t.in_airline_transport,
						   t.dt_target,t.in_status');							
		$this->db->from('tbl_transportation as t');		
		$this->db->where('t.in_deleted',0);
		//$this->db->where_in('in_status',array(1,2,3));
		//$this->db->where_in('in_status',1);
		$this->db->where("(t.in_status = 1 || (t.in_status = 2 && t.dt_target >= current_date()))");
		$this->db->where('t.in_organization_id',$org_id);		
		$query = $this->db->get();
		$org_detail = $this->get_single_org_details($org_id);
		$org_code = (isset($org_detail) && count($org_detail)>0 && $org_detail['st_org_code']!='')?$org_detail['st_org_code'].'#' :'DBT#';
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$event_details = '';
				$transport_type = '';
				//if()
				$event_details .= $org_code.$row['in_transportation_id'];
				
				
				if($row['st_trans_type']=='D')
				{
					if($row['in_airline_transport']=='1')
					{	
						$transport_type =  'Airline';
					}	
					else
					{		
						$transport_type =  'Routing';
					}	
				} else if($row['st_trans_type']=='R')
				{
					$transport_type =  'Ride';
				} else if($row['st_trans_type']=='RO')
				{
					$transport_type =  'Route';
				} else {
					$transport_type =  'Pre-defined';
				}	
				
				
				$data[] = array('tr_title' => $event_details,
								'transportation_id' => $row['in_transportation_id'],
								'location' => $row['st_from_city'].' - '.$row['st_to_city'],
								'start_date' => $row['dt_pickup_date'],
								'end_date' => $row['dt_target'],
								'in_status' => $row['in_status'],
								'in_organization_id' => $row['in_organization_id'],
								'transport_type'	=>$transport_type,
								);
			}
		}
		
		return $data;
	}
	
	#=========================================================
	#	Function : get_all_org_events
	#	Purpose  : Getting all organization events
	#=========================================================
	
	public function get_all_org_events($org_id) {
		$this->db->select('in_organization_id,in_event_id as id,st_event_title as title,dt_start as start_date,
							st_timezone,dt_end as end_date,st_event_desc as description,st_city as location');
		$this->db->from('tbl_organization_event');
		
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->result_array();
	}
	
	#=========================================================
	#	Function : get_org_feed_cnt
	#	Purpose  : Getting all feed count of organization
	#=========================================================
	
	public function get_org_feed_cnt($org_id,$date_created) {
		
		if($date_created == '') {
			//$date = $this->get_user_registration_date();
			$date = $this->get_organization_joining_date($org_id);
		} else {
			$date = $date_created;
		}
		
		$this->db->select('in_notification_id');
		$this->db->from('tbl_notification');
		
		$this->db->where('in_organization_id',$org_id);
		
		if($date != '') {
			$this->db->where('dt_created >',$date);
		}
		
		$this->db->order_by('in_notification_id','DESC');
		
		
		$query = $this->db->get();
		//echo $this->db->last_query();
		$res	=	$query->result_array(); 
		$arr_nids	=	array();
		if(count($res)) {
			foreach($res as $val) {
				
				array_push(	$arr_nids,$val['in_notification_id']);
			}
		}
		//echo "<pre>"; 	print_r($arr_nids); 	die();
		return count($arr_nids);
	}
	
	#=========================================================
	#	Function : get_user_subscription_detail
	#	Purpose  : Getting user subscription detail for current user
	#=========================================================
	public function get_user_subscription_detail($user_id){ 
			$this->db->select('tus.in_subscription_id,tus.in_status,tus.in_subscription_type,tus.dt_created,tus.dt_renewal,tus.st_paypal_subscr_id');
			$this->db->from('tbl_user_subscription as tus');		
			$this->db->where('tus.in_user_id',$user_id);
			$this->db->where('tus.dt_renewal > ',date('Y-m-d'));
			$this->db->where('tus.in_deleted',0);
			$this->db->order_by("tus.in_subscription_id","DESC");
			$this->db->limit(1);			
			$query = $this->db->get();
			///print_r($this->db->last_query());
			return $query->row_array();		
	}
	
	#=========================================================
	#	Function : get_draft_transport_cnt
	#	Purpose  : Getting draft transportation count
	#=========================================================
	
	public function get_draft_transport_cnt($org_id) {
		$data= array();
		
		$this->db->select('SQL_CALC_FOUND_ROWS t.in_transportation_id,t.in_organization_id,t.in_trans_coods_id,t.st_from_street,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_target,t.st_trans_type,t.dt_created,concat(u.st_display_name," ",u.st_last_name) as st_display_name',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->join('tbl_users u','u.in_user_id=t.in_trans_coods_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		$this->db->where('t.in_status',4);
		$this->db->where('t.in_organization_id',$org_id);	
		if($this->session->userdata('draft_search'))
		{
			#st_display_name
			$this->db->where('(t.in_transportation_id="'.str_replace("%","\%",$this->session->userdata('draft_search')).'" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%"  )',FALSE,FALSE);	
		}
		
		$this->db->order_by('t.in_transportation_id','DESC');
		//$this->db->limit($limit,$start);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												'org_id'				=>	$row['in_organization_id'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name']
																								
											);
			}
		}
		
		return $data["num_rows"];
	}
	
	#=========================================================
	#	Function : get_user_transport_count
	#	Purpose  : Getting user transportation count view
	#=========================================================
	
	public function get_user_transport_count($userid,$org_id,$transport_id = '') {
		$this->db->select('in_user_id,in_organization_id,in_transportation_id');
		$this->db->from('tbl_user_visit');
		
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_user_id',$userid);
		
		if($transport_id != '') {
			$this->db->where('in_transportation_id',$transport_id);
		}
		$this->db->where('st_visit_type','DRAFTTRANSPORT');
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_animal_photo	
	#	Purpose		:	Getting one of animal photo
	# *******************************************************************************************
	
	public function get_animal_photo($id) {
		$data = '';
		$result = array();
		$this->db->select('st_file_name,in_profile_pic');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('in_deleted',0);
		$this->db->where('st_file_type','P');
		
		$this->db->order_by('in_file_id','DESC');
		
		//$this->db->limit(1);
		$query = $this->db->get();
		
		if($query->num_rows() > 0) {
			$result = $query->result_array();
			
			foreach($query->result_array() as $row) {
				if($row['in_profile_pic'] == 1) {
					$data = ($row['st_file_name']!='')?$row['st_file_name']:''; 
				}
			}
			
			if($data == '') {
				$data = ($result[0]['st_file_name']!='')?$result[0]['st_file_name']:'';
			}
			return $data;
		}
	}
	
	#=========================================================
	#	Function : get_my_notification_count
	#	Purpose  : Getting notification count
	#=========================================================
	
	public function get_my_notification_count($userid,$date='') {
		$arr_bids	=	array();
		$st_bids	=	'';
		$st_aids	=	'';
		$st_oids	=	'';
		
		// GET BREED IDS AS PER USER NOTIFICATION SETTING		
		$sql1	=	"SELECT in_notifiable_animal_breeds FROM tbl_user_notification_setting WHERE in_user_id = '".$userid."' AND in_notifiable_animal_breeds!=0";
		
		$res1	=	$this->db->query($sql1);
		$rs1	=	$res1->result_array();
		if(count($rs1))
		{
			foreach($rs1 as $val)
			{
				
				array_push(	$arr_bids,$val['in_notifiable_animal_breeds']);
			}
			$st_bids	=	implode(',',$arr_bids);
		}
		// GET ANIMAL IDS AS PER USERS SELECTED BREEDS 
		
		if($st_bids!='')
		{
			$st_join = '';
			$st_owner = '';
			
			$sql_join = "SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
			$res_join	=	$this->db->query($sql_join);
			$rs_join	=	$res_join->result_array();
			
			$sql_join_array	=	array();
			if(count($rs_join))
			{
				foreach($rs_join as $val)
				{
					
					array_push(	$sql_join_array,$val['in_organization_id']);
				}
				$st_join	=	implode(',',$sql_join_array);
			}
			
			$sql_owner = "SELECT in_organization_id FROM tbl_organization WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
			$res_owner	=	$this->db->query($sql_owner);
			$rs_owner	=	$res_owner->result_array();
			
			$sql_owner_array	=	array();
			if(count($rs_owner))
			{
				foreach($rs_owner as $val)
				{
					
					array_push(	$sql_owner_array,$val['in_organization_id']);
				}
				$st_owner	=	implode(',',$sql_owner_array);
			}
			
			$sql_orgs1 = ($st_join != '')?$st_join:'';
			$sql_orgs2 = ($st_owner != '')?($st_join!=''?','.$st_owner:''):'';
			$sql_orgs = $sql_orgs1.$sql_orgs2;
			if($sql_orgs == '') {$sql_orgs=0;}
			$sql2	=	"SELECT in_animal_id
							FROM tbl_animal 
							WHERE (in_primary_breed_id IN (".$st_bids.") OR in_secondry_breed_id IN (".$st_bids.") OR in_tertiary_breed_id IN (".$st_bids.")) 
							AND (in_animal_public=0 OR in_animal_public=1 AND in_organization_id IN (".$sql_orgs.") ) AND in_deleted=0";
			$res2	=	$this->db->query($sql2);
			$rs2	=	$res2->result_array();
			//echo $sql2;//die;
			$arr_aids	=	array();
			if(count($rs2))
			{
				foreach($rs2 as $val)
				{
					
					array_push(	$arr_aids,$val['in_animal_id']);
				}
				$st_aids	=	implode(',',$arr_aids);
			}
			
		}
		//echo "<pre>";print_r($arr_aids);die;
		// GET ORG ID IN WHICH USER ACTIVELY PARTICIPATED 
		$sql3	=	"SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = ".$userid." AND in_status =1 AND in_deleted =0";
		$res3	=	$this->db->query($sql3);
		$rs3	=	$res3->result_array();
		
		$arr_oids	=	array();
		if(count($rs3))
		{
			foreach($rs3 as $val)
			{
				
				array_push(	$arr_oids,$val['in_organization_id']);
			}
			$st_oids	=	implode(',',$arr_oids);
		}
		
		//$query1 = "SELECT in_organization_id from tbl_organization WHERE (in_user_id = ".$userid." OR ) AND in_status=1 AND in_deleted=0";
		
		// GET ORG ID IN WHICH USER IS OWNER OR ORG IS PUBLIC 
						
		$query1	=	"SELECT org.in_organization_id 
						FROM tbl_organization org 
						WHERE org.in_status=1 
						AND org.in_deleted=0 
						AND org.in_user_id = '".$userid."'";
		
		$qres1	=	$this->db->query($query1);
		$qrs1	=	$qres1->result_array();
		
		if(count($qrs1))
		{
			foreach($qrs1 as $row) {
				array_push($arr_oids,$row['in_organization_id']);
			}
			$st_oids	=	implode(',',$arr_oids);
		}
		
		// GET TRansportation ID on which user has joinned.
		 
		
		$query4	=	"SELECT in_transportation_id
						FROM tbl_transportation_participants
						WHERE in_deleted=0 
						AND in_user_id = '".$userid."' AND in_user_id IN(SELECT in_user_id FROM tbl_organization_user WHERE in_organization_id IN('".$st_oids."') AND in_user_id='".$userid."' AND in_status=1)";
		
		$qres4	=	$this->db->query($query4);
		$qrs4	=	$qres4->result_array();
		$arr_tids	=	array();
		$st_tids	=	'';
		if(count($qrs4))
		{
			foreach($qrs4 as $row) {
				array_push($arr_tids,$row['in_transportation_id']);
			}
			$st_tids	=	implode(',',$arr_tids);
		}
		//echo $st_tids;die;
		
		$new_orgs = $st_oids!=''?$st_oids:'0';
		$get_tra_id = "SELECT in_transportation_id
						FROM tbl_transportation
						WHERE in_deleted=0 AND in_organization_id IN (".$new_orgs.")";
						//echo $get_tra_id;die;
		$get_tra_id_qry	=	$this->db->query($get_tra_id);
		$get_tra_id_res	=	$get_tra_id_qry->result_array();
		$get_tra_id_arr_tids	=	array();
		$get_tra_id_tids	=	'';
		
		if(count($get_tra_id_res) == 0) {
			$st_tids = '';
		}
		
		$sub_sql	=	'';
		if($st_oids=='')
			$st_oids	=	'0';
			
		if($st_tids=='')
			$sql_tids	=	'  ';
		else
			$sql_tids	=	" OR (in_transportation_id IN (".$st_tids.") AND in_type IN (5,6,7,8,9,10,11,12,13,14)) ";	
		
		$date_sql = '';
		if($st_aids=='')
		{$st_aids='0';
			if($st_bids == '') {
				$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") OR (in_organization_id IN (".$st_oids."))) AND (in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";
			} else {
				$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") AND (in_organization_id IN (".$st_oids."))) AND (in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";	
			}
			if($date != '') {
				$date_sql = " AND dt_created > '".$date."' ";
			} else {
				$date_sql = " AND dt_created > '".date('Y-m-d H:i:s')."' ";
			}
		}
		else
		{// 5,6,7,8,9,10,11,12,13,14, -- Transport 
			//$sub_sql	=	" AND ( (in_animal_id IN (".$st_aids.")  AND in_organization_id IN (".$st_oids.") AND in_type IN (0,2,3,4)) OR ( in_organization_id IN (".$st_oids.") AND in_type IN (0,1,16,17))  $sql_tids )";
			$sub_sql	=	" AND ((in_animal_id IN (".$st_aids.") AND in_organization_id IN (".$st_oids.") AND in_type IN (0,2,3,4)) OR ( in_organization_id IN (".$st_oids.") AND in_type IN (0,1,16,17))  $sql_tids )";
			if($date != '') {
				$date_sql = " AND dt_created > '".$date."' ";
			} else {
				$date_sql = " AND dt_created > '".date('Y-m-d H:i:s')."' ";
			}	
		}
		
		
			$st_aids	=	'0';
		//echo $st_oids;die;	
		//$sub_sql	=	" AND ( (in_animal_id IN (".$st_aids.")  AND in_type IN (0,2,3,4)) AND ( in_organization_id IN (".$st_oids.") OR in_type IN (0,1,5,6,7,8,9,10,11,12,13,14,16)))";
		
		if($st_tids=='') {
			$sql5	=	"SELECT SQL_CALC_FOUND_ROWS in_notification_id FROM tbl_notification WHERE in_type not in(5,6,7,8,9,10,11,12,13,14,15) $sub_sql $date_sql ORDER BY in_notification_id DESC ";
		} else {
			$sql5	=	"SELECT SQL_CALC_FOUND_ROWS in_notification_id FROM tbl_notification WHERE in_type not in(15) $sub_sql $date_sql ORDER BY in_notification_id DESC ";
		}
		
		//echo $sql5;	
		//echo $sql5; exit;
		$res5	=	$this->db->query($sql5);
		$rs5	=	$res5->result_array();
		
		
		$arr_nids	=	array();
		if(count($rs5))
		{
			foreach($rs5 as $val)
			{
				
				array_push(	$arr_nids,$val['in_notification_id']);
			}
		}
		//echo "<pre>"; 	print_r($rs5); 	die();		
		//echo "<pre>";print_r($rs5);die;
		return count($arr_nids);
		//return $total_nids;		
	
	}
	
	#=========================================================
    #	Function : get_my_notification_count
    #	Purpose  : Getting notification message
    #=========================================================
	
	public function get_my_notification_message($userid, $date = '') {
    $arr_bids = array();
    $st_bids = '';
    $st_aids = '';
    $st_oids = '';
	$CI = & get_instance();	

        // GET BREED IDS AS PER USER NOTIFICATION SETTING		
        $sql1 = "SELECT in_notifiable_animal_breeds FROM tbl_user_notification_setting WHERE in_user_id = '" . $userid . "' AND in_notifiable_animal_breeds!=0";

        $res1 = $this->db->query($sql1);
        $rs1 = $res1->result_array();
        if (count($rs1)) {
            foreach ($rs1 as $val) {

                array_push($arr_bids, $val['in_notifiable_animal_breeds']);
            }
            $st_bids = implode(',', $arr_bids);
        }
        // GET ANIMAL IDS AS PER USERS SELECTED BREEDS 

        if ($st_bids != '') {
            $st_join = '';
            $st_owner = '';

            $sql_join = "SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = " . $userid . " AND in_status =1 AND in_deleted =0";
            $res_join = $this->db->query($sql_join);
            $rs_join = $res_join->result_array();

            $sql_join_array = array();
            if (count($rs_join)) {
                foreach ($rs_join as $val) {

                    array_push($sql_join_array, $val['in_organization_id']);
                }
                $st_join = implode(',', $sql_join_array);
            }

            $sql_owner = "SELECT in_organization_id FROM tbl_organization WHERE in_user_id = " . $userid . " AND in_status =1 AND in_deleted =0";
            $res_owner = $this->db->query($sql_owner);
            $rs_owner = $res_owner->result_array();

            $sql_owner_array = array();
            if (count($rs_owner)) {
                foreach ($rs_owner as $val) {

                    array_push($sql_owner_array, $val['in_organization_id']);
                }
                $st_owner = implode(',', $sql_owner_array);
            }

            $sql_orgs1 = ($st_join != '') ? $st_join : '';
            $sql_orgs2 = ($st_owner != '') ? ($st_join != '' ? ',' . $st_owner : '') : '';
            $sql_orgs = $sql_orgs1 . $sql_orgs2;
            if ($sql_orgs == '') {
                $sql_orgs = 0;
            }
			
			
            $sql2 = "SELECT in_animal_id
							FROM tbl_animal 
							WHERE (in_primary_breed_id IN (" . $st_bids . ") OR in_secondry_breed_id IN (" . $st_bids . ") OR in_tertiary_breed_id IN (" . $st_bids . ")) 
							AND (in_animal_public=0 OR in_animal_public=1 AND in_organization_id IN (" . $sql_orgs . ") ) AND in_deleted=0";
            $res2 = $this->db->query($sql2);
            $rs2 = $res2->result_array();
            //echo $sql2;//die;
            $arr_aids = array();
            if (count($rs2)) {
                foreach ($rs2 as $val) {

                    array_push($arr_aids, $val['in_animal_id']);
                }
                $st_aids = implode(',', $arr_aids);
            }
        }
        //echo "<pre>";print_r($arr_aids);die;
        // GET ORG ID IN WHICH USER ACTIVELY PARTICIPATED 
        $sql3 = "SELECT in_organization_id FROM tbl_organization_user WHERE in_user_id = " . $userid . " AND in_status =1 AND in_deleted =0";
        $res3 = $this->db->query($sql3);
        $rs3 = $res3->result_array();

        $arr_oids = array();
        if (count($rs3)) {
            foreach ($rs3 as $val) {

                array_push($arr_oids, $val['in_organization_id']);
            }
            $st_oids = implode(',', $arr_oids);
        }

        //$query1 = "SELECT in_organization_id from tbl_organization WHERE (in_user_id = ".$userid." OR ) AND in_status=1 AND in_deleted=0";
        // GET ORG ID IN WHICH USER IS OWNER OR ORG IS PUBLIC 

        $query1 = "SELECT org.in_organization_id 
						FROM tbl_organization org 
						WHERE org.in_status=1 
						AND org.in_deleted=0 
						AND org.in_user_id = '" . $userid . "'";

        $qres1 = $this->db->query($query1);
        $qrs1 = $qres1->result_array();

        if (count($qrs1)) {
            foreach ($qrs1 as $row) {
                array_push($arr_oids, $row['in_organization_id']);
            }
            $st_oids = implode(',', $arr_oids);
        }

        // GET TRansportation ID on which user has joinned.


        $query4 = "SELECT in_transportation_id
						FROM tbl_transportation_participants
						WHERE in_deleted=0 
						AND in_user_id = '" . $userid . "' AND in_user_id IN(SELECT in_user_id FROM tbl_organization_user WHERE in_organization_id IN('" . $st_oids . "') AND in_user_id='" . $userid . "' AND in_status=1)";

        $qres4 = $this->db->query($query4);
        $qrs4 = $qres4->result_array();
        $arr_tids = array();
        $st_tids = '';
        if (count($qrs4)) {
            foreach ($qrs4 as $row) {
                array_push($arr_tids, $row['in_transportation_id']);
            }
            $st_tids = implode(',', $arr_tids);
        }
        //echo $st_tids;die;

        $new_orgs = $st_oids != '' ? $st_oids : '0';
        $get_tra_id = "SELECT in_transportation_id
						FROM tbl_transportation
						WHERE in_deleted=0 AND in_organization_id IN (" . $new_orgs . ")";
        //echo $get_tra_id;die;
        $get_tra_id_qry = $this->db->query($get_tra_id);
        $get_tra_id_res = $get_tra_id_qry->result_array();
        $get_tra_id_arr_tids = array();
        $get_tra_id_tids = '';

        if (count($get_tra_id_res) == 0) {
            $st_tids = '';
        }

        $sub_sql = '';
        if ($st_oids == '')
            $st_oids = '0';

        if ($st_tids == '')
            $sql_tids = '  ';
        else
            $sql_tids = " OR (n.in_transportation_id IN (" . $st_tids . ") AND n.in_type IN (5,6,7,8,9,10,11,12,13,14)) ";

        $date_sql = '';
        if ($st_aids == '') {
            $st_aids = '0';
            if ($st_bids == '') {
                //$sub_sql = " AND ((n.in_animal_id IN (" . $st_aids . ") OR (n.in_organization_id IN (" . $st_oids . "))) AND (n.in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";
				$sub_sql = " AND (((n.in_organization_id IN (" . $st_oids . "))) AND (n.in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,25) $sql_tids ))";
            } else {
                $sub_sql = " AND ((n.in_animal_id IN (" . $st_aids . ") AND (n.in_organization_id IN (" . $st_oids . "))) AND (n.in_type IN (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17) $sql_tids ))";
            }
            if ($date != '') {
                $date_sql = " AND n.dt_created > '" . $date . "' ";
            } else {
                $date_sql = " AND n.dt_created > '" . date('Y-m-d H:i:s') . "' ";
            }
        } else {// 5,6,7,8,9,10,11,12,13,14, -- Transport 
            //$sub_sql	=	" AND ( (in_animal_id IN (".$st_aids.")  AND in_organization_id IN (".$st_oids.") AND in_type IN (0,2,3,4)) OR ( in_organization_id IN (".$st_oids.") AND in_type IN (0,1,16,17))  $sql_tids )";
            $sub_sql = " AND ((n.in_animal_id IN (" . $st_aids . ") AND n.in_organization_id IN (" . $st_oids . ") AND n.in_type IN (0,2,3,4)) OR ( n.in_organization_id IN (" . $st_oids . ") AND n.in_type IN (0,1,16,17))  $sql_tids )";
            if ($date != '') {
                $date_sql = " AND n.dt_created > '" . $date . "' ";
            } else {
                $date_sql = " AND n.dt_created > '" . date('Y-m-d H:i:s') . "' ";
            }
        }


        $st_aids = '0';
        //echo $st_oids;die;	
        //$sub_sql	=	" AND ( (in_animal_id IN (".$st_aids.")  AND in_type IN (0,2,3,4)) AND ( in_organization_id IN (".$st_oids.") OR in_type IN (0,1,5,6,7,8,9,10,11,12,13,14,16)))";

        if ($st_tids == '') {
            $sql5 = "SELECT  n.in_notification_id FROM tbl_notification n WHERE n.in_type not in(5,6,7,8,9,10,11,12,13,14,15) $sub_sql $date_sql ORDER BY n.in_notification_id DESC ";
        } else {
            $sql5 = "SELECT n.in_notification_id FROM tbl_notification n WHERE n.in_type not in(15) $sub_sql $date_sql ORDER BY n.in_notification_id DESC ";
        }
		
		$sql1 = $sql5."LIMIT 0,4";
		
        //echo $sql5;	
        //echo $sql5; exit;
		$notification = array();
        $res5 = $this->db->query($sql1);
        $rs5 = $res5->result_array();
		$rscount = $this->db->query($sql5);
		//$notification['count'] = $rscount->num_rows();
		$data['count'] = $rscount->num_rows();

        //$arr_message = array();
		$notification_id = array();
        if (count($rs5)) {
            foreach ($rs5 as $val) {
				array_push($notification_id,$val['in_notification_id']);
                //array_push($arr_message,$val);
            }
        }
		
		$this->load->model('user_settings_model');
		$data['feed']	=	array();
		if(count($notification_id)> 0  && is_array($notification_id) )
		{	
		
			
		
			$data['feed'] = $this->user_settings_model->get_organization_feeds($notification_id,$data['feed']);
			$data['feed'] = $this->user_settings_model->get_organization_feeds_tr($notification_id,$data['feed']);
			$data['feed'] = $this->user_settings_model->join_organization_request($notification_id,$data['feed']);
			$data['feed'] = $this->user_settings_model->get_organization_feeds_for_noti($notification_id,$data['feed']);
			$data['feed'] = $this->user_settings_model->get_sponsorship_pages($notification_id,$data['feed']);
		 	if($this->session->userdata('org_id'))
			{
				$data['feed'] = $this->user_settings_model->get_organization_feeds_for_mvr_check($notification_id,$data['feed']);
			}
			krsort($data['feed']);
		
			$data['get_profile_pic'] = $this->user_settings_model->get_profile_pic($userid);
		}	
		
		
	
		
		 //echo "<pre>";print_r($feed);die;
		 
	$notification_array_message = array();
		if(	(count($data['feed']))> 0  && is_array($data['feed']) ) {
					foreach($data['feed'] as $row) {
							//$check_user = $CI->user_settings_model->check_org_user_status($row['user_id'],$row['organization_id']);
							$org_photo='';	$user_photo='';	
							if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
								$org_photo = $row['org_image'];
							} else {
								$org_photo = 'no_photo_icon.png';
							}
							if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/36x36/".$row['user_image'])) {
								$user_photo = $row['user_image'];
							} else {
								$user_photo = 'no_photo_icon.png';
							}
							if(isset($row['animal_image']) && $row['animal_image']!='' && file_exists($this->config->item('upload')."animal_images/36x36/".$row['animal_image'])) {
								$animal_img = $row['animal_image'];
							} else {
								$animal_img = 'no_photo_icon.png';
							}
								//Animal Details
							if($row['in_type'] == 2 || $row['in_type'] == 3 || $row['in_type'] == 4 || (isset($row['animal_id']) && $row['animal_id'] != 0 && $row['in_type'] != 17 && $row['in_type'] != 19 && $row['in_type'] != 20)) {		
									$get_org_name = '';
									if($row['in_type'] == 4) {
										$get_org_name = $CI->user_settings_model->get_organization_id($row['animal_id'],$row['organization_id']);
									}
									
									$animal_photo = '';
									if(isset($row['animal_image']) && $row['animal_image']!='' && file_exists($this->config->item('upload')."animal_images/36x36/".$row['animal_image'])) {
										$animal_photo = $row['animal_image'];
									} else {
										$animal_photo = 'no_photo_icon.png';
									}
									
									$org_photo = '';
									if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
									} else {
									$org_photo = 'no_photo_icon.png';
									}
									
									if(trim($row['message']) != '') {
										$patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%');
										$replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,$row['org_name'],$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']));
										$content = preg_replace($patterns,$replacements,$row['message']); 
										array_push($notification_array_message,$content);
									} else {
									$get_org_name2 = '';
									$get_org_name3 = '';
									if($row['in_type'] != 4) {
										$patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%');
										$replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,$row['org_name'],$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']));
									} else {
										$notification_id = '';
										
										$get_id_noti = array();
										
										if($get_org_name == '') {
											$notification_id = $row['in_notification_id']-1;
											
											$get_id_noti = $CI->user_settings_model->get_notification_detail($row['in_notification_id']);
											$get_org_name2 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti['in_organization_id']);
											$get_id_noti2 = $CI->user_settings_model->get_notification_detail($notification_id);
											$get_org_name3 = $CI->user_settings_model->get_org_name_for_transefer(isset($get_id_noti2['in_organization_id'])?$get_id_noti2['in_organization_id']:0);
										}
									}
									
									if($get_org_name3 == '') {
										$notification_id = $row['in_notification_id']+1;
											
										$get_id_noti = $CI->user_settings_model->get_notification_detail($row['in_notification_id']);
										$get_org_name2 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti['in_organization_id']);
										$get_id_noti2 = $CI->user_settings_model->get_notification_detail($notification_id);
										$original = $CI->user_settings_model->get_org_name_for_transefer(isset($get_id_noti2['in_organization_id'])?$get_id_noti2['in_organization_id']:0);
										
										$patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%','%##org_name_to##%');
										$replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,$row['org_name'],$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']),$get_org_name);
									} else {
									
										$patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%','%##org_name_to##%');
										$replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,($get_org_name3=='')?$row['org_name']:$get_org_name3,$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']),($get_org_name2=='')?$get_org_name:$get_org_name2);
									}
									
									$content = preg_replace($patterns,$replacements,$this->common_function->org_feeds_notification[$row['in_type']]);
									
									//echo ($row['org_name'] != $get_org_name3 && $get_org_name=='')?'<div class="timeline-time"> <span class="date"> '.date('m/d/y',strtotime($row['dt_created'])).'</span> <span class="time"> '.date('H:i',strtotime($row['dt_created'])).' </span> </div><div class="timeline-icon"> <i class="fa fa-road"></i> </div>'.$content:'';
									//echo '<div class="timeline-time"> <span class="date"> '.date('m/d/y',strtotime($row['dt_created'])).'</span> <span class="time"> '.date('H:i',strtotime($row['dt_created'])).' </span> </div><div class="timeline-icon"> <i class="fa fa-road"></i> </div>'.$content;
									array_push($notification_array_message,$content);
									}
								//Transportation details
								} else if(($row['in_type'] == 5 || $row['in_type'] == 0) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
									
									$user_photo = '';
									if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
										$user_photo = $row['user_image'];
									} else {
										$user_photo = 'no_photo_icon.png';
									}
									
									$org_photo = '';
									if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
										$org_photo = $row['org_image'];
									} else {
										$org_photo = 'no_photo_icon.png';
									}
									
									if(trim($row['message']) != '') {
															
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								//echo $content;
								 
							} else {
							$image_url = $this->config->item('upload_url')."org_doc/36x36/".$org_photo;
							$href_link = base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']);
							
                            $content = '<div class="timeline-body border">
                                
                                    <span><img src="'.$image_url.'"alt=""  width="32"></span><span class="notification-info">
                                    <a href="'.$href_link.'" class="profile">'.$row['org_name'].'</a> created a new transportation #DBT'.$row['transportation_id'].'</span></div>';
									array_push($notification_array_message,$content);	
								}
							} else if(($row['in_type'] == 6) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								//die('Test Fail');
								
								//Transport Animal List Update
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
							
							if(trim($row['message']) != '') {
							
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']);
								array_push($notification_array_message,$content);								
								
							} else {
								$content_msg = '';
							$image_url = $this->config->item('upload_url')."org_doc/36x36/".$org_photo;
							$org_url  =  base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']);
							
                            $content_msg .='<div class="timeline-body border">
									<span><img src="'.$image_url.'" width="32" alt=""></span><span class="notification-info"><a href="'.$org_url.'" class="profile">'.$row['org_name'].'</a> updated the list of animals for #DBT'.$row['transportation_id'];
                                    
								$transport_animals = $CI->user_settings_model->get_transport_animals($row['transportation_id']);
								$content_msg .= (count($transport_animals)>0)?count($transport_animals).' animal is now scheduled for transportation.': "No animal(s) are schedule.";
								//echo $noti_msg;
								$content_msg .='</span></div>';
								array_push($notification_array_message,$content_msg);
                             }
							 } else if(($row['in_type'] == 7) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 
								 if($row['message'] != '') {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']);
								array_push($notification_array_message,$content);								
								} else {
								$image_url = $this->config->item('upload_url').'profile/29x29/'.$user_photo;	
								$content = '<div class="timeline-body border">
								<span><img alt="" src="'.$image_url.'" width="32"></span><span class="notification-info">Transport #DBT'.$row['transportation_id'].'has been modified by'.$row['user_name'].'</span></div>';
								array_push($notification_array_message,$content);
								}
							 } else if(($row['in_type'] == 8) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								 
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 
								 if($row['message'] != '') {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								//echo $content;
								array_push($notification_array_message,$content);								
							
								 } else {
							$image_url = $this->config->item('upload_url').'profile/29x29/'.$user_photo; 
								$content =	'<div class="timeline-body border">
									<span><img alt="" src="'.$image_url.'"  width="32"></span><span class="notification-info">Transport #DBT'. $row['transportation_id'].'has been cancelled by'.$row['user_name'].'</span></div>';
									array_push($notification_array_message,$content);
								 }
							 } else if(($row['in_type'] == 9) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								 $user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) || $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if($row['message'] != '') {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								//echo $content;
								} else {
							 
								$content = '<div class="timeline-body border">
								<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.$row['user_name'].'</a> joined the transportation.</span>
							</div>';
									array_push($notification_array_message,$content); 
								 }
							 } else if(($row['in_type'] == 10) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message']) != '') {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								//echo $content;
								 } else {
							
                            $content = '<div class="timeline-body border">
									<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info">Transport #DBT'.$row['transportation_id'].'has been confirmed.
								</span></div>';
							array_push($notification_array_message,$content);
								 }
							 } else if(($row['in_type'] == 11) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								if(trim($row['message']) != '') {
							
                          
							
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								//echo $content;
								 } else {
							
                           $content = '<div class="timeline-body border">
									<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.$row['user_name'].'</a>left the transportation
									</span></div>';
								array_push($notification_array_message,$content);									
								 }
							 } else if(($row['in_type'] == 12) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message'])) {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								//echo $content;
								 } else {
						 
                            $content = '<div class="timeline-body border">
							<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info"><a class="profile" href="'. base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.$row['user_name'].'</a> created a leg and joined the transportation.
							</span></div>';
									 array_push($notification_array_message,$content);
								 }
							 } else if(($row['in_type'] == 13) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message'])) {
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$user_photo);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								//echo $content;
								array_push($notification_array_message,$content);
								 } else {
						 
                            $content = '<div class="timeline-body border">
										<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.$row['user_name'] .'</a> joined the transportation leg.
										</span></div>';
										array_push($notification_array_message,$content);
								 
								 }
							 } else if(($row['in_type'] == 14 || $row['in_type'] == 1) && (isset($row['transportation_id']) && $row['transportation_id'] != '0')) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
							  
                            $content = '<div class="timeline-body border">
								<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span><span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'. $row['user_name'].'</a>:'.   $row['message'].'</span></div>';
                            array_push($notification_array_message,$content);
								//Join Organization Request
							 } else if($row['in_type'] == 15) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
							      
								$content = '<div class="timeline-body border">
                                <span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span>
                                <span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">
								<strong>'.$row['user_name'].'</strong></a>
                                Join Organization request awaiting approval.
								</span></div>';
							   array_push($notification_array_message,$content);
							
							 } else if($row['in_type'] == 16) {
								 $user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
						 
                            $content = '<div class="timeline-body border">
								
                                <span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32"></span>'.
                                 $row['message'].'</div>';
                    		array_push($notification_array_message,$content);
							} 	else if($row['in_type'] == 17) {
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
                                $content ='<div class="timeline-body border">
											<span><img src="'.$this->config->item('upload_url').'org_doc/36x36/'.$org_photo.'" width="32" alt=""></span>
											<span class="notification-info">A fundraiser page
											<a href="'.base_url().'campaign/'.$this->common_function->get_filtered_name($row['fundraiser_url']).'" target="_blank" class="profile">'.
											$row['fundraiser_title'].'</a> for animal 
											<a href="'.base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']).'" class="profile">'. $row['animal_name'].'</a>
											created for organization <a href="'.base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']).'" class="profile">'.$row['org_name'].'</a>	              
										</span></div>';
								
								array_push($notification_array_message,$content);
							} else if($row['in_type'] == 18) {
								 $patterns = array('%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%');
								 $replacements = array($row['org_name'],$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']));
								$content = preg_replace($patterns,$replacements,$this->common_function->org_feeds_notification[$row['in_type']]);
								array_push($notification_array_message,$content);
							 } else if($row['in_type'] == 19) {
								 
								$animal_photo = '';
								if(isset($row['animal_image']) && $row['animal_image']!='' && file_exists($this->config->item('upload')."animal_images/36x36/".$row['animal_image'])) {
									$animal_photo = $row['animal_image'];
								} else {
									$animal_photo = 'no_photo_icon.png';
								}
								
								$get_org_name = '';
								$get_org_name = $this->org_feed_model->get_organization_id($row['animal_id'],$row['organization_id'],$row['in_type']);
								
								$notification_id = '';
								$get_org_name2 = '';
								$get_org_name3 = '';
								$get_id_noti = array();
								if($get_org_name == '') {
									$notification_id = $row['in_notification_id']-1;
									$get_id_noti = $CI->user_settings_model->get_notification_detail($row['in_notification_id']);
									$get_org_name2 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti['in_organization_id']);
									$get_id_noti2 = $CI->user_settings_model->get_notification_detail($notification_id);
									$get_org_name3 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti2['in_organization_id']);
								}
								 
								 $patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%');
								 $replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,$get_org_name==''?$get_org_name3:$get_org_name,$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']));
							
                            
							
								$content = preg_replace($patterns,$replacements,$this->common_function->org_feeds_notification[$row['in_type']]);
								array_push($notification_array_message,$content);
							 } else if($row['in_type'] == 20) {
								 
								$animal_photo = '';
								if(isset($row['animal_image']) && $row['animal_image']!='' && file_exists($this->config->item('upload')."animal_images/36x36/".$row['animal_image'])) {
									$animal_photo = $row['animal_image'];
								} else {
									$animal_photo = 'no_photo_icon.png';
								}
								
								$get_org_name = '';
								$get_org_name = $this->org_feed_model->get_organization_id($row['animal_id'],$row['organization_id'],$row['in_type']);
								
								$notification_id = '';
								$get_org_name2 = '';
								$get_org_name3 = '';
								$get_id_noti = array();
								if($get_org_name == '') {
									$notification_id = $row['in_notification_id']-1;
									$get_id_noti = $CI->user_settings_model->get_notification_detail($row['in_notification_id']);
									$get_org_name2 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti['in_organization_id']);
									$get_id_noti2 = $CI->user_settings_model->get_notification_detail($notification_id);
									$get_org_name3 = $CI->user_settings_model->get_org_name_for_transefer($get_id_noti2['in_organization_id']);
								}
								 
								 $patterns = array('%##animal_image##%','%##org_name##%','%##animal_name##%','%##breed_string##%','%##type_string##%','%##org_url##%','%##animal_url##%');
								 $replacements = array(base_url().'upload/animal_images/36x36/'.$animal_photo,$get_org_name==''?$get_org_name3:$get_org_name,$row['animal_name'],$row['animal_breed_name'],$row['animal_type_name'],base_url().'organization-'.$row['organization_id'].'-'.$this->common_function->get_filtered_name($row['org_name']),base_url().'animal-'.$row['animal_id'].'-'.$this->common_function->get_filtered_name($row['animal_name']));
								$content = preg_replace($patterns,$replacements,$this->common_function->org_feeds_notification[$row['in_type']]);
								array_push($notification_array_message,$content); 
							 } else if($row['in_type'] == 21) {
						
                             $content = '<div class="timeline-body border">
									Transport #DBT'.$row['transportation_id'].' '.$row['message'].'completed </div>';
									array_push($notification_array_message,$content); 
							} else if($row['in_type'] == 22) {
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message'])!='') {
							
							
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$row['user_image']);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content); 
								 } else {
										$content_data = '';
										  $check_user = $this->common_model->get_user_verified(isset($row['user_id'])?$row['user_id']:0); 
										  $content_data .= '<div class="timeline-body border">
															<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32" title="'.isset($check_user['dt_doobert_verified'])?date('F j, Y',strtotime($check_user['dt_doobert_verified'])):0;
										  $content_data .= '">';	
										 if(!empty($check_user)) {
											$content_data.='<span class="green-logo"><img src="'. base_url().'assets/img/green_logo.png" alt="verified" title="'.date('F j, Y',strtotime($check_user['dt_doobert_verified'])).'" /></span>';
										}else { 
											$content_data.='<span class="gray-logo"><img src="'. base_url().'assets/img/gray_logo.png" alt="non-verified" /></span>';
										} 
											$content_data.='</span><span class="notification-info"><a class="profile" href="'. base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.
															$row['user_name'].'</a> has been removed from transportation.
											</span></div>';
										array_push($notification_array_message,$content_data); 	 
								} 
							} else if($row['in_type'] == 23) {
								 
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message'])!='') {
							
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$row['user_image']);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								 } else {
									 $content_data1 = '';
							 $check_user = $this->common_model->get_user_verified(isset($row['user_id'])?$row['user_id']:0); 
							$content_data1 .=	'<div class="timeline-body border">
											<span><img alt="" src="'. $this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32" title="'. isset($check_user['dt_doobert_verified'])?date('F j, Y',strtotime($check_user['dt_doobert_verified'])):0;
									$content_data1 .=	'">';
                             if(!empty($check_user)) {
							$content_data1 .='<span class="green-logo"><img src="'. base_url().'assets/img/green_logo.png" alt="verified" title="'. date('F j, Y',strtotime($check_user['dt_doobert_verified'])).'" /></span>';
							} else { 
							$content_data1 .='<span class="gray-logo"><img src="'. base_url().'assets/img/gray_logo.png" alt="non-verified" /></span>';
							} 

                            $content_data1 .='</span><span class="notification-info"><a class="profile" href="'. base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.
							 $row['user_name'].'
                            </a> has been signed up as transport monitor.</h2>
							<span></div>';
							array_push($notification_array_message,$content_data1);
							}
						} else if($row['in_type'] == 24) {
								 
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								 if(trim($row['message'])!='') {
							
								$patterns = array('%##org_name##%','%##base_url##%','%##org_image##%','%##user_image##%');
								$replacements = array($row['org_name'],base_url(),$this->config->item('upload_url').'org_doc/36x36/'.$org_photo,$this->config->item('upload_url').'profile/29x29/'.$row['user_image']);
								$content = preg_replace($patterns,$replacements,$row['message']); 
								array_push($notification_array_message,$content);
								
								 } else {
									 $content_data2 ='';
									$check_user = $this->common_model->get_user_verified(isset($row['user_id'])?$row['user_id']:0); 
									$content_data2 .= '<div class="timeline-body border">
									<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32" title="'.isset($check_user['dt_doobert_verified'])?date('F j, Y',strtotime($check_user['dt_doobert_verified'])):0; 
									$content_data2 .= '">';
									if(!empty($check_user)) {
										$content_data2 .='<span class="green-logo"><img src="'. base_url().'assets/img/green_logo.png" alt="verified" title="'.date('F j, Y',strtotime($check_user['dt_doobert_verified'])).'" /></span>';
									} else { 
										$content_data2 .='<span class="gray-logo"><img src="'. base_url().'assets/img/gray_logo.png" alt="non-verified" /></span>';
								} 

								$content_data2 .='</span><span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.
												$row['user_name'].' </a> has been removed from transport monitor.</span></div>';
											array_push($notification_array_message,$content_data2);
								 }
							 } else if($row['in_type'] == 25) {
								 
								$user_photo = '';
								if(isset($row['user_image']) && $row['user_image']!='' && file_exists($this->config->item('upload')."profile/29x29/".$row['user_image'])) {
									$user_photo = $row['user_image'];
								} else {
									$user_photo = 'no_photo_icon.png';
								}
								
								$org_photo = '';
								if(isset($row['org_image']) && $row['org_image']!='' && file_exists($this->config->item('upload')."org_doc/36x36/".$row['org_image'])) {
									$org_photo = $row['org_image'];
								} else {
									$org_photo = 'no_photo_icon.png';
								}
								
								$content_data2 ='';
								$check_user = $this->common_model->get_user_verified(isset($row['user_id'])?$row['user_id']:0); 
								$content_data2 .= '<div class="timeline-body border">';
								$content_data2 .='<span><img alt="" src="'.$this->config->item('upload_url').'profile/29x29/'.$user_photo.'"  width="32">';
									/*if(!empty($check_user)) {
										$content_data2 .='<span class="green-logo"><img src="'. base_url().'assets/img/green_logo.png" alt="verified" title="'.date('F j, Y',strtotime($check_user['dt_doobert_verified'])).'" /></span>';
									} else { 
										$content_data2 .='<span class="gray-logo"><img src="'. base_url().'assets/img/gray_logo.png" alt="non-verified" /></span>';
								}*/ 

								$content_data2 .='<span class="notification-info"><a class="profile" href="'.base_url().'user-'.$row['user_id'].'-'.$this->common_function->get_filtered_name($row['user_name']).'">'.
												$row['user_name'].' </a> requires MVR check.</span></div>';
											array_push($notification_array_message,$content_data2);
								
							 }	
					} 
				}	
		if(	(count($notification_array_message)) > 0  && is_array($notification_array_message) ) {
		$notification_array_message = str_replace("timeline-body border",'',$notification_array_message);
		$data['notification_msg'] = $notification_array_message;
		} else {
			$data['notification_msg'] = '';
		}
		return $data;

        //return count($arr_nids);
        //return $total_nids;		
    }
	
	# *******************************************************************************************	
	#	Function	:	get_date_difference	
	#	Purpose		:	Getting date difference
	# *******************************************************************************************
	
	public function get_date_difference($time) {
		//$convert_time = date('Y-m-d H:i:s',strtotime($time));
		$query = $this->db->query("select DATEDIFF ('".$time."','".date('Y-m-d')."') as DiffDate");
		//echo $this->db->last_query();
		return $query->row_array();
		
	}
	
	
	
	//============================================================
	//	Function	:	get_page_detail()
	//  Parameter	: 	$pageId
	//	Perpose		:	to get cms page Details
	//------------------------------------------------------------
	function get_page_detail($pageId)
	{
		$arrData['error']	=	'';
		
		$this->db->select('in_page_id, 
						   st_page_name, 
						   st_page_title,	
						   st_page_meta_keyword,					  
						   st_page_meta_desc,
						   st_state_img,
						   st_page_content
						  ');
		$this->db->from('tbl_pages');
		$this->db->where('in_page_id', $pageId);		
		$this->db->where('in_deleted', '0');	// 1 -> deleted , 0 -> Not Deleted		
		$query = $this->db->get();
		
		if($query->num_rows()>0)
		{
			foreach($query->result() as $Row)
			{
				$arrData	= array( 'page_id'    	 => $Row->in_page_id,
									 'page_name'  	 => $Row->st_page_name,
									 'page_title' 	 => $Row->st_page_title,
									 'page_keyword'  => $Row->st_page_meta_keyword,									
									 'page_desc' 	 => $Row->st_page_meta_desc,
									 'page_image' 	 => $Row->st_state_img,
									 'page_content'	 => $Row->st_page_content
								   );
			}
			return $arrData;
		}
	}
	
	public function get_vehicle_detail_by_id($id) {
		$this->db->select('in_vehicle_id,vt.st_vehicle_type,st_vehicle_license_plate,st_vehicle_color,st_vehicle_license_state,st_photos_url');
		$this->db->from('tbl_user_vehicle uv');
		$this->db->join('tbl_vehicle_type vt','vt.st_vehicle_type=uv.st_vehicle_type','LEFT');	
		$this->db->where('in_vehicle_id',$id);
		$this->db->where('uv.in_deleted','0');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	
	public function get_plane_detail_by_id($id) {
		$this->db->select('up.in_pilot_id,up.st_plane_type,up.st_pilot_zip,up.st_plane_color,up.st_plane_number,up.in_plane_ifr,up.st_identifier');
		$this->db->from('tbl_user_pilot up');
		$this->db->where('up.in_pilot_id',$id);
		$this->db->where('up.in_deleted','0');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function vehicle_images_by_id($id)
	{
		$this->db->select("st_image as vehicle_image",FALSE);
		$this->db->from('tbl_vehicle_image');
		$this->db->where('in_deleted',0);
		$this->db->where('in_vehicle_id',$id);
		//$this->db->limit("1");
		//echo $this->db->last_query()."<br><br><br>";
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function plane_images_by_id($id)
	{
		$this->db->select("st_image as plane_image",FALSE);
		$this->db->from('tbl_plane_image');
		$this->db->where('in_deleted',0);
		$this->db->where('in_plane_id',$id);
		//$this->db->limit("1");
		//echo $this->db->last_query()."<br><br><br>";
		$query = $this->db->get();
		return $query->result_array();
	}
	
	//
	#=========================================================
	#	Function : get_user_verified
	#	Purpose  : Checking user is Verified or not
	#=========================================================
	
	public function get_user_verified($id) {
		$this->db->select('in_user_id,dt_doobert_verified');
		$this->db->from('tbl_verification');
		$this->db->where('in_user_id',$id);
		$this->db->where('fl_doobert_verified',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	#=========================================================
	#	Function : get_verified_user_details
	#	Purpose  : Geting verified user detail
	#=========================================================
	
	public function get_verified_user_details($id) {
		$this->db->select('in_user_id,dt_doobert_verified,dt_dl_exp,dt_license_verified,dt_vet_verified,dt_org_verified,
							st_dl_state,fl_doobert_verified,fl_license_st_verified,
							fl_license_exp_verified,fl_license_verified,fl_vet_verified,fl_org_verified');
		$this->db->from('tbl_verification');
		$this->db->where('in_user_id',$id);
		
		$this->db->where('fl_doobert_verified',1);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function insert_last_name() {
		$this->db->select('in_user_id,st_display_name,st_last_name');
		$this->db->from('tbl_users');
		$this->db->where('st_last_name','');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function update_last_name($id,$data) {
		$this->db->where('in_user_id',$id);
		$this->db->update('tbl_users',$data);
		return $this->db->affected_rows();
	}
	
	function get_user_part_ids_by_leg_id($id) {
		$this->db->select('in_user_id');
		$this->db->from('tbl_transportation_participants');
		$this->db->where('in_transportation_leg_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//return $query->result_array();
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $row)
			{
				$arrData[]	= $row->in_user_id;
			}
		}
		return $arrData;
	}
	
	function get_filled_legs_count($id) {
		$this->db->select('count(tp.in_transportation_leg_id)','filled_legs_cnt');
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join('tbl_transportation_leg tl','tl.in_transportation_leg_id = tp.in_transportation_leg_id and tl.in_deleted = 0','INNER');
		$this->db->where('tp.in_transportation_id',$id);
		$this->db->where('tp.in_transportation_leg_id >',0);
		$this->db->where('tp.in_deleted',0);
		$this->db->group_by('tp.in_transportation_leg_id');		
		$query = $this->db->get();
		//return $query->result_array();
		//echo $this->db->last_query()."<br><br><br>";
		return $query->num_rows();
	}
	
	function get_non_doobert_filled_legs_count($id) {
		$subquery = '(select in_transportation_leg_id from tbl_transportation_participants where in_transportation_leg_id > 0 and in_deleted = 0 and in_transportation_id =' .$id.')';
		$this->db->select('count(tn.in_non_doobert_user_id)','non_doobert_filled_legs_count');
		$this->db->from('tbl_non_doobert_transport_users tn');
		$this->db->where('tn.in_transportation_id',$id);
		$this->db->where('tn.in_deleted',0);
		$this->db->where('tn.in_leg_id not in '.$subquery);
		$this->db->group_by('tn.in_leg_id');		
		$query = $this->db->get();
		//return $query->result_array();
		//echo $this->db->last_query()."<br><br><br>";//exit;
		return $query->num_rows();
	}
	
	function get_transport_filled_status($transportation_id)
	{
		
		$transport_filled_data = array();
		$transport_filled_data['transport_filled_status'] = 0;
		
		$this->db->select('tl.in_transportation_leg_id,tl.in_multi_user,tl.in_user_num');
		$this->db->from('tbl_transportation_leg tl');
		$this->db->where('tl.in_transportation_id',$transportation_id);
		$this->db->where('tl.in_deleted',0);
		$query = $this->db->get();
		$transport_legs = $query->result_array();
		
		if(isset($transport_legs) && !empty($transport_legs))
		{
			foreach($transport_legs as $leg_val)
			{
				$all_participants = $this->get_leg_all_participants($leg_val['in_transportation_leg_id']);
				
				if($leg_val['in_multi_user'] == 0 && $all_participants == 1)
				{
					$transport_filled_data['transport_filled_status'] = 1;
				}
				else if($leg_val['in_multi_user'] == 1  && $leg_val['in_user_num'] == $all_participants)
				{				
					$transport_filled_data['transport_filled_status'] = 1;													
				}else{
					$transport_filled_data['transport_filled_status'] = 0;
					break;
				}
				
			}
			
			foreach($transport_legs as $leg_val)
			{
				$all_participants = $this->get_leg_all_participants($leg_val['in_transportation_leg_id']);
				if($leg_val['in_multi_user'] == 0 && $all_participants == 1)
				{
					$transport_filled_data['filled_legs_count'][] = 1;
				}
				if($leg_val['in_multi_user'] == 1  && $leg_val['in_user_num'] == $all_participants)
				{				
					$transport_filled_data['filled_legs_count'][] = 1;													
				}
				
			}
			
			
		}
		
		//print_r($transport_filled_data);exit;
		return $transport_filled_data;
		
	}
	
	
	function total_leg_filled_status($transportation_id)
	{
		
		$transport_filled_data = array();
		
		
		$this->db->select('tl.in_transportation_leg_id,tl.in_multi_user,tl.in_user_num');
		$this->db->from('tbl_transportation_leg tl');
		$this->db->where('tl.in_transportation_id',$transportation_id);
		$this->db->where('tl.in_deleted',0);
		$query = $this->db->get();
		$transport_legs = $query->result_array();
		$transport_filled_data['total_leg'] = ($query->num_rows() > 0)?$query->num_rows():'0';
		$total_filled_status = 0;
		if(isset($transport_legs) && !empty($transport_legs))
		{
			foreach($transport_legs as $leg_val)
			{
				$all_participants = $this->get_leg_all_participants($leg_val['in_transportation_leg_id']);
				
				if($leg_val['in_multi_user'] == 0 && $all_participants == 1)
				{
					$total_filled_status++;
				}
				else if($leg_val['in_multi_user'] == 1  && $leg_val['in_user_num'] == $all_participants)
				{
					$total_filled_status++;	
				}
				
			}
			
			
			
		}
		$transport_filled_data['total_leg_filled'] = $total_filled_status;
		
		//print_r($transport_filled_data);exit;
		return $transport_filled_data;
		
	}
	
	function get_leg_all_participants($leg_id)
	{
		$all_participants = 0;
		
		$this->db->select('count(tn.in_non_doobert_user_id) as non_doobert_filled_legs_count');
        $this->db->from('tbl_non_doobert_transport_users tn');
        $this->db->where('tn.in_leg_id', $leg_id);
        $this->db->where('tn.in_deleted', 0);
        $query = $this->db->get();
		$non_doobert_leg_user_count = $query->row_array();
		$non_doobert_leg_user_count = $non_doobert_leg_user_count['non_doobert_filled_legs_count'];
		
		
		$this->db->select('count(tp.in_transportation_leg_id) as doobert_user_cnt');
		$this->db->from('tbl_transportation_participants tp');
		$this->db->where('tp.in_transportation_leg_id',$leg_id);
		$this->db->where('tp.in_photography_profile','0');
		$this->db->where('tp.in_deleted',0);
		$query = $this->db->get();
		$doobert_leg_user_count	= $query->row_array();
		$doobert_leg_user_count = $doobert_leg_user_count['doobert_user_cnt'];
		
		$all_participants = $doobert_leg_user_count + $non_doobert_leg_user_count;
		
		return $all_participants;	
		
	}
	
	function get_non_doobert_user_count($id) {
		$this->db->select('count(tn.in_non_doobert_user_id) as non_doobert_filled_legs_count');
		$this->db->from('tbl_non_doobert_transport_users tn');
		$this->db->where('tn.in_transportation_id',$id);
		$this->db->where('tn.in_deleted',0);
		$query = $this->db->get();
		//return $query->result_array();
		//echo $this->db->last_query()."<br><br><br>";//exit;
		return $query->row_array();
	}
	
	function get_doobert_leg_user_count($id) {
		$this->db->select('count(tp.in_transportation_leg_id) as doobert_user_cnt');
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join('tbl_transportation_leg tl','tl.in_transportation_leg_id = tp.in_transportation_leg_id and tl.in_deleted = 0','INNER');
		$this->db->where('tp.in_transportation_id',$id);
		$this->db->where('tp.in_transportation_leg_id >',0);
		$this->db->where('tp.in_deleted',0);
		$query = $this->db->get();
		//return $query->result_array();
		//echo $this->db->last_query()."<br><br><br>";
		return $query->row_array();
	}
	
	#=========================================================
	#	Function : get_all_organization
	#	Purpose  : getting all organizations
	#=========================================================
	
	public function get_all_organization() {
		$this->db->select('in_organization_id');
		$this->db->from('tbl_organization');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_events($org_id) {
		$org_data = array();
		$transport_data = array();
		
		$this->db->select('in_organization_id,in_event_id as id,st_event_title as title,dt_start as start_date,
							dt_end as end_date,st_event_desc as description,st_city as location,in_status');
		$this->db->from('tbl_organization_event');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->where('in_organization_id',$org_id);
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
				$org_data[] = array('title' => $row['title'],
								'location' => $row['location'],
								'start_date' => $row['start_date'],
								'end_date' => $row['end_date'],
								'in_status' => $row['in_status'],
								'in_organization_id' => $row['in_organization_id'],
								'description' => $row['description']
								);
			}
		}
		
		$this->db->select('t.in_organization_id,t.st_from_city,t.st_to_city,
							t.in_transportation_id ,t.dt_pickup_date,
							t.dt_target,t.in_status');
							
		$this->db->from('tbl_transportation as t');
		
		$this->db->where('t.in_deleted',0);
		
		$this->db->where('in_organization_id',$org_id);
		$this->db->where_in('in_status',array(1,2,3));
		
		$query = $this->db->get();
		
		if($query->num_rows() > 0)
		{
			foreach($query->result_array() as $row) {
				$transport_data[] = array('tr_title' => $row['in_transportation_id'],
								'location' => $row['st_from_city'].' - '.$row['st_to_city'],
								'start_date' => $row['dt_pickup_date'],
								'end_date' => $row['dt_target'],
								'in_status' => $row['in_status'],
								'in_organization_id' => $row['in_organization_id'],
								'description' => ''
								);
			}
		}
		
		$event_array = array_merge($org_data,$transport_data);
		 
		return $event_array;
	}
	
	function get_airport_by_code($airport_code) {
		$this->db->select('ta.in_id,ta.st_state,ta.st_city');
		$this->db->from('tbl_airport ta');
		$this->db->where('ta.st_loc_id',$airport_code);
		$this->db->where('ta.in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_user_registration_date() {
		$data = array();
		
		$this->db->select('dt_created');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		$data = $query->row_array();
		
		return isset($data['dt_created']) ? $data['dt_created'] : '';
	}
	
	public function get_user_transport_agreement_detail() {
		$data = array();
		
		$this->db->select('in_user_id,in_transport,dt_transport_agree');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		$data = $query->row_array();	
		//echo $this->db->last_query()."<br>";	
		return $data;
	}
	
	function get_pending_invitation_cnt($user_id) {
		
		$this->db->select('ou.in_org_user_id');
		$this->db->from('tbl_organization_user as ou');		
		$this->db->join('tbl_organization o','o.in_organization_id = ou.in_organization_id','LEFT');
		$this->db->join('tbl_users u','u.in_user_id = ou.in_invite_by','LEFT');	
		$this->db->where('ou.in_invite_by !=','0');		
		$this->db->where('ou.in_status','5');		
        $this->db->where('ou.in_deleted','0');
		$this->db->where('ou.in_request_type',0);
		$this->db->where('o.in_status','1');
		$this->db->where('ou.in_mark_read',0);	
		$this->db->where('o.in_deleted','0');
		$this->db->where('ou.in_user_id',$user_id);	
		$query = $this->db->get();		
		//return $query->result_array();
		//echo $this->db->last_query()."<br><br><br>";
		return $query->num_rows();
	}
	function get_pending_invitation_org_name($user_id) {

        $this->db->select('o.st_org_name');
        $this->db->from('tbl_organization_user as ou');
        $this->db->join('tbl_organization o', 'o.in_organization_id = ou.in_organization_id', 'LEFT');
        $this->db->join('tbl_users u', 'u.in_user_id = ou.in_invite_by', 'LEFT');
        $this->db->where('ou.in_invite_by !=', '0');
        $this->db->where('ou.in_status', '5');
        $this->db->where('ou.in_deleted', '0');
        $this->db->where('o.in_status', '1');
        $this->db->where('o.in_deleted', '0');
        $this->db->where('ou.in_user_id', $user_id);
		$this->db->limit(3,0);
        $query = $this->db->get();
        //return $query->result_array();
        //echo $this->db->last_query()."<br><br><br>";
        return $query->result_array();
    }
	
	public function get_transport_dates_by_id($transtport_id) {
		$this->db->select('dt_pickup_date,dt_target');
		$this->db->from('tbl_transportation');
		$this->db->where('in_transportation_id',$transtport_id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_demo_video_link_by_id($id) {
		$this->db->select('id_demo_videos,st_url,st_description,st_title');
		$this->db->from('tbl_demo_videos');
		$this->db->where('id_demo_videos',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	public function get_signup_demo_video() {
		$video_ids = array(9,10,11,12,13,14,15,16,17,18,19,20,21);
		$this->db->select('id_demo_videos,st_url,st_description,st_title');
		$this->db->from('tbl_demo_videos');
		$this->db->where_in('id_demo_videos',$video_ids);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_transport_coordinator($id) {
		$this->db->select('in_trans_coods_id,accTcid,dt_target');
		$this->db->from('tbl_transportation');
		$this->db->where('in_transportation_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_transport_organization($id) {
        $this->db->select('in_organization_id');
        $this->db->from('tbl_transportation');
        $this->db->where('in_transportation_id', $id);
        $this->db->where('in_deleted', 0);
        $query = $this->db->get();
        return $query->row_array();
    }
	// added by sadique on 14-01-16
	public function get_widget($refferid) {
	$this->db->select('in_widget_id,st_org_name');
	$this->db->from('tbl_widget');        
	$this->db->where('in_deleted', 0);
	$this->db->where('in_widget_id', $refferid);
	$query = $this->db->get();
	return $query->row_array();
	}
	
	public function check_fb_user($email_add) {
        $this->db->select('st_facebook_uid');
		$this->db->from('tbl_users');        
		$this->db->where('st_email', $email_add);
		$this->db->where('in_deleted', 0);
		$query = $this->db->get();
		//echo $this->db->last_query();
		return $query->row_array();
    }
	
	public function getaddress($zip)
	{
		$org_zip_code  = preg_replace('/\s/', '',$zip);
		$zip_code = strtoupper($org_zip_code);
		$this->db->select('city,state_prefix,st_country,st_time_zone');
		$this->db->from('tbl_zip_code');        
		$this->db->where('zip_code',$zip_code);		
		$query = $this->db->get();
		//echo $this->db->last_query();
		return $query->row_array();
	}
	
	function get_all_user_details()
	{
		$this->db->select('in_user_id,st_email');		
		$this->db->from('tbl_users');        
		$this->db->where('in_deleted', 0);		
		$this->db->where('flg_newsletter', 0);		
		$this->db->limit('50');		
		$query = $this->db->get();
		
		
		
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[] = array('email' => $Row->st_email,'in_user_id' => $Row->in_user_id);				
			}			
		}
		//echo $this->db->last_query(); die;
		return $arrData;
	}
	
	function get_all_active_user_details()
	{
		$this->db->select('in_user_id,st_email,st_display_name');		
		$this->db->from('tbl_users');        
		$this->db->where('in_deleted', 0);		
		//$this->db->where('in_status', 1);		
		$this->db->where("(in_status = 0 OR in_status = 1)");
		$this->db->where('flg_newsletter', 0);		
		//$this->db->where('in_user_id', 7170);		
		$this->db->limit('100');		
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[] = array('email' => $Row->st_email,'in_user_id' => $Row->in_user_id,'user_name' => $Row->st_display_name);				
			}			
		}
		return $arrData;
	}
	
	 public function update_user($userId) {
		$userArr=array('flg_newsletter' => 1);
        $this->db->where('in_user_id', $userId);
        $this->db->update('tbl_users', $userArr);
        return $this->db->affected_rows();
    }
	
	function get_all_driver_pilots() {
        $user_array = array();
        $j = 0;

        ############## DRIVER #########################	
        $sql1 = "SELECT u.in_user_id, 
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name, 
							u.st_email, 
							uv.st_zip_vehicle,
							uv.in_distance_to_drive,
							uv.zip_lat as lati,
							uv.zip_lon as longi, 
							uv.st_driver_availability
					FROM tbl_users as u 
					INNER JOIN tbl_user_vehicle as uv ON u.in_user_id =uv.in_user_id AND uv.in_deleted =0
					WHERE u.in_status =1 AND u.in_deleted=0";
        $query1 = $this->db->query($sql1);


        if ($query1->num_rows() > 0) {
            $res_arr1 = $query1->result_array();

            foreach ($res_arr1 as $arrval) {
                $user_zip = '';
                $user_miles = '';
                $user_zip = $arrval['st_zip_vehicle'];
                $user_miles = $arrval['in_distance_to_drive'];
				$user_array[$j]['in_user_id'] = $arrval['in_user_id'];
				$user_array[$j]['st_display_name'] = $arrval['st_display_name'];
				$user_array[$j]['st_email'] = $arrval['st_email'];
				$user_array[$j]['st_driver_availability'] = $arrval['st_driver_availability'];
				$j++;
            }
        }

        ############## PILOT #########################	

        $sql3 = "SELECT u.in_user_id, 
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name, 
							u.st_email, 
							up.st_pilot_zip,
							up.in_distance_to_pilot,
							up.zip_lat as lati,
							up.zip_lon as longi, 
							up.st_pilot_availability
					FROM tbl_users as u 
					INNER JOIN tbl_user_pilot as up ON u.in_user_id =up.in_user_id AND up.in_deleted =0
					WHERE u.in_status =1 AND u.in_deleted=0";
        $query3 = $this->db->query($sql3);
        if ($query3->num_rows() > 0) {
            $res_arr3 = $query3->result_array();

            foreach ($res_arr3 as $arrval) {
                $user_zip = '';
                $user_miles = '';
                $user_zip = $arrval['st_pilot_zip'];
                $user_miles = $arrval['in_distance_to_pilot'];
               	$user_array[$j]['in_user_id'] = $arrval['in_user_id'];
				$user_array[$j]['st_display_name'] = $arrval['st_display_name'];
				$user_array[$j]['st_email'] = $arrval['st_email'];
				$user_array[$j]['st_driver_availability'] = $arrval['st_pilot_availability'];
				$j++;
            }
        }
        return $user_array;
        //print_r($user_array); 
    }
	
	public function check_email_exists($email='')
	{
		$this->db->select('in_user_id');
        $this->db->where('st_email', $email);         
        $this->db->where('in_deleted', 0);
        $query = $this->db->get('tbl_users');
        if ($query->num_rows() > 0) {
            return true;
        } else {
            return false;
        }
	}
	public function get_organization_joining_date($id){
		$data = array();
		
		$this->db->select('u.dt_created');
		$this->db->from('tbl_organization_user u');
		$this->db->where('u.in_user_id',$this->session->userdata('userid'));
		$this->db->where('u.in_organization_id',$id);
		$this->db->where('u.in_deleted',0);
		//$this->db->where('u.in_status',1);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$data = $query->row_array();
		if(empty($data))
		{
		$this->db->select('u.dt_created');
		$this->db->from('tbl_organization u');
		$this->db->where('u.in_user_id',$this->session->userdata('userid'));
		$this->db->where('u.in_organization_id',$id);
		$this->db->where('u.in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$data = $query->row_array();	
		}
		if(!empty($data)){
		return date('Y-m-d',strtotime($data['dt_created']));
		}else 
		{
		return date('Y-m-d');	
		}
	}
	
	public function get_facebook_access_token()
	{ 			
		$this->db->select("st_access_token,dt_expiry");						   	
		$this->db->from('tbl_facebook_access_token');
		$query = $this->db->get();
		//echo $this->db->last_query(); die;			
		return $query->row_array();
	}
	//Added by Nirav 25-May-2016
	public function get_volunteers_email()
	{
		$this->db->select("in_id");
		$this->db->from('tbl_volunteers_email');
		$where1 = 'dt_date > DATE_ADD(NOW(), INTERVAL -12 HOUR)'; 
		$this->db->where($where1);
		$query = $this->db->get()->result_array();
		if((count($query) <= 0) && is_array($query) )
		{
			$this->db->select("dt_date");
			$this->db->from('tbl_volunteers_email');
			$this->db->order_by("dt_date", "desc");
			$this->db->limit(1);
			$data['latest_data'] = $this->db->get()->result_array();	
			$data['success'] = false;
		} else 
			$data['success'] = true;
		return $data;
			
	}
	
	function add_cron_email_status($cron_email_array)
	{
		$insert_id = $this->db->insert('tbl_cron_email_status', $cron_email_array);
		return $insert_id;
	}
	
	function update_cron_status_email_sent($id,$cron_status_array)
	{
		$this->db->where('id',$id);
		$updated_result = $this->db->update('tbl_cron_email_status',$cron_status_array);
		
		return $updated_result;
	}
	
	function insert_transport_email_checksum($mail_checksum_array)
	{
		$insert_id = $this->db->insert('tbl_transport_email_checksum', $mail_checksum_array);
		return $insert_id;
	}
	
	function get_total_legs_count($tra_id)
	{
		$this->db->select('count(in_transportation_leg_id) AS total_count');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->group_by('in_transportation_leg_id');
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	function get_all_legs_count($tra_id)
	{
		$this->db->select('count(in_transportation_leg_id) AS total_count');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		//$this->db->group_by('in_transportation_leg_id');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function get_feedback_count($user_id)
	{
		$today_date =date("Y-m-d");
		$this->db->select('in_transport_id');
		$this->db->from('tbl_tc_feedback');
		$this->db->where('in_deleted', 0);
		$this->db->where('in_from_user_id',$user_id);
		$this->db->where('in_non_doobert_users',0);
		$this->db->group_by('in_transport_id');  
		$this->db->order_by('in_transport_id','ASC');
		$transport_id_data_tc = $this->db->get()->result_array();
		
		$this->db->select('in_transport_id');
		$this->db->from('tbl_transporter_feedback');
		$this->db->where('in_deleted', 0);
		$this->db->where('in_from_user_id',$user_id);
		$this->db->group_by('in_transport_id');  
		$this->db->order_by('in_transport_id','ASC');
		$transport_id_data_vol = $this->db->get()->result_array();
		
		$transport_id_tc = array();
		$transport_id_vol = array();
		//$transport_id_data_vol1 = array();
		//$transport_id_data_tc1 = array();
		
		$all_transport_id = array();
		
		if(count($transport_id_data_tc) >0 )
		{	
			foreach($transport_id_data_tc as $key=>$value)
			{
				array_push($transport_id_tc,$value['in_transport_id']);
			}
		}
		
		if(count($transport_id_data_vol) >0 )
		{	
			foreach($transport_id_data_vol as $key=>$value)
			{
				array_push($transport_id_vol,$value['in_transport_id']);
			
			}
		}	
			$this->db->select('tr.in_transportation_id');
			$this->db->from('tbl_transportation tr');
			$this->db->join('tbl_transportation_participants p','p.in_transportation_id = tr.in_transportation_id AND p.in_deleted=0','LEFT');
			$this->db->where('tr.in_status', 2);
			$this->db->where('tr.in_deleted', 0);
			$this->db->where('p.in_user_id != tr.in_trans_coods_id');
			$this->db->where('p.in_user_id',$user_id);
			$this->db->where('p.in_transportation_leg_id !=0');
			$this->db->where('tr.dt_target < "'.$today_date.'"');
			$this->db->group_by('tr.in_transportation_id');  
			$this->db->order_by('tr.in_transportation_id','DESC');
			$query_result = $this->db->get();
			
			if($query_result && !empty($query_result))
			{
				$transport_id_data_vol1 = $query_result->result_array();
				if(count($transport_id_data_vol1) >0 )
				{	
					foreach($transport_id_data_vol1 as $key=>$value)
					{
						if(count($transport_id_vol)>0)
						{
							if(in_array($value['in_transportation_id'], $transport_id_vol) == false)
							{	
								array_push($all_transport_id,$value['in_transportation_id']);
							}	
						} else 	
						{		
							   array_push($all_transport_id,$value['in_transportation_id']);
						}	
					}
				}
			}
				
			$this->db->select('count(tr.in_transportation_id) AS Total,p.in_user_id,tr.in_transportation_id');
			$this->db->from('tbl_transportation tr');
			$this->db->join('tbl_transportation_participants p','p.in_transportation_id = tr.in_transportation_id AND p.in_deleted=0','LEFT');
			$this->db->where('tr.in_deleted', 0);
			$this->db->where('tr.in_status', 2);
			$this->db->where('p.in_user_id != tr.in_trans_coods_id');
			$this->db->where('tr.in_trans_coods_id',$user_id);
			$this->db->where('dt_target < "'.$today_date.'"');
			$this->db->group_by('tr.in_transportation_id');  
			$this->db->where('p.in_transportation_leg_id !=0');
			$this->db->order_by('tr.in_transportation_id','DESC');
			
			$query_result = $this->db->get();
			
			if($query_result && !empty($query_result))
			{
				$transport_id_data_tc1 = $query_result->result_array();
				if(count($transport_id_data_tc1) >0 )
				{	
					foreach($transport_id_data_tc1 as $key=>$value)
					{
						if($value['Total'] >0)
						{	
							if(count($transport_id_tc)>0)
							{
								if(in_array($value['in_transportation_id'], $transport_id_tc) == false)
									array_push($all_transport_id,$value['in_transportation_id']);
							} else 	
							{		
								array_push($all_transport_id,$value['in_transportation_id']);
							}	
						}	
					//$transport_id_tc = $value['in_transport_id'];
					}
				}
			}
		
		return count($all_transport_id);
	}
	
	# *******************************************************************************************	
    #	Function	:	get_transport_permission	
    #	Purpose		:	Getting organization permission.
    # *******************************************************************************************

   public function verify_transport_permission($id)
   {
		$this->db->select('in_organization_id');
		$this->db->from('tbl_organization');
		$this->db->where('in_user_id',$id);
		$this->db->where('in_deleted', 0);
		$this->db->where('in_status',1);
		$query = $this->db->get()->result_array();
		//echo $this->db->last_query();
		//exit;
		
		if(count($query) > 0)
			return 'true';
		else {
			$this->db->select('st_permission');
			$this->db->from('tbl_organization_user');
			$this->db->where('in_user_id',$id);
			$this->db->where('in_deleted', 0);
			$this->db->where('in_status',1);
			$query = $this->db->get()->result_array();
			if(count($query) > 0)
			{
				$permission_data = unserialize($query[0]['st_permission']);
				if (array_key_exists('transport', $permission_data)) {
					$transport_permission = $permission_data['transport'];
					if(in_array('transport_cr', $transport_permission))
						return 'true';
					else 
						return 'false';
				} else {
					return 'false';
				}	
			}
			else 
				return 'false';
		}
	}
	
	public function get_user_timezone($user_id) {
        $this->db->select('st_time_zone');
        $this->db->from('tbl_user_profile');
        $this->db->where('in_user_id', $user_id);
        $query = $this->db->get();

        return $query->row_array();
    }
	
	function get_tc_volunteer_count($user_id)
	{
		$end_date =date("Y-m-d");
		$start_date = date('Y-m-d', strtotime('-1 year'));
		$this->db->select('((in_rate_transport+in_rate_comm_tc+in_rate_comm_volunteer)/3) AS average_rating');
		$this->db->from('tbl_transporter_feedback');
		$this->db->where('in_to_user_id',$user_id);
		$this->db->where('DATE(dt_created) BETWEEN "'.$start_date.'" AND "'.$end_date.'"');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		$rate_comm_tc = 0;
		if($query->num_rows() > 0 )
		{	
			$count = $query->num_rows();
			foreach($query->result_array() as $key=>$row)
			{ 
				$rate_comm_tc += $row['average_rating'];
			}
			$average_tc_rate =  $rate_comm_tc/$count;
			$average_rating = 	$average_tc_rate;
			if($average_rating > 5)
			{	
				$average_rating = 5;
			}	
		} else {
			$average_rating = 0;
			$count = 0;
		}	
		$result['average_rating']    = round($average_rating);
		$result['count']		     = $count;
		return $result; 	
	}
	
	function get_transaction_volunteer_count($user_id)
	{
		$end_date =date("Y-m-d");
		$start_date = date('Y-m-d', strtotime('-1 year'));		
		$this->db->select('((in_rate_comm_tc+in_rate_comm_volunteer)/2) AS average_rating');
		$this->db->from('tbl_tc_feedback');
		$this->db->where('in_to_user_id',$user_id);
		$this->db->where('in_non_doobert_users',0);
		$this->db->where('DATE(dt_created) BETWEEN "'.$start_date.'" AND "'.$end_date.'"');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		$rate_comm_volunteer = 0;
		if($query->num_rows() > 0 )
		{	
			$count = $query->num_rows();
			foreach($query->result_array() as $key=>$row)
			{ 
				$rate_comm_volunteer += $row['average_rating'];
			}
			$average_volunteer_rate =  $rate_comm_volunteer/$count;
			$average_rating = 	$average_volunteer_rate;
			if($average_rating > 5)
			{	
				$average_rating = 5;
			}
			
		}else {
			$average_rating = 0;
			$count = 0;
		}
		
		$result['average_rating'] = round($average_rating);
		$result['count']		    = $count;
		return $result; 	
	}
	
	function get_tc_email_id_by_trans_id($trans_id)
	{
		$this->db->select('tr.in_transportation_id,tu.in_user_id,tu.st_email');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_users tu','tu.in_user_id = tr.in_trans_coods_id AND tu.in_deleted=0','INNER');
		$this->db->where('tr.in_deleted', 0);
	 	$query = $this->db->get();

        return $query->row_array();
	}
	
	function check_auto_login_status()
	{
		$this->db->select('in_auto_login_status,st_disable_msg');
        $this->db->from('tbl_auto_login');
        $query = $this->db->get();
        return $query->row_array();
	}
	
	function get_user_type($id)
	{
		$this->db->select('st_signup_as');
        $this->db->from('tbl_users');
		$this->db->where('in_user_id', $id);
		$this->db->where('in_deleted', 0);
        $query = $this->db->get();
        return $query->row_array();
	}
	
	function check_email_verification_status($user_id)
	{
		$this->db->select("in_email_verify_status,dt_created");
		$this->db->where(array("in_deleted"=>'0',"in_user_id"=>$user_id));		
		$this->db->where("(in_status = 0 OR in_status = 1)");
		$query = $this->db->get("tbl_users");
		//echo $this->db->last_query();die;
		return $query->row_array();	
	}
	
	/*function check_arpa_certifcate_status($user_id)
	{
		$this->db->select("st_arpa_cert,dt_arpa_cert");
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id', $user_id);
		$this->db->where('in_deleted', 0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();	
	}*/
	
	function check_arpa_certifcate_status($user_id)
	{
		$this->db->select("st_arpa_cert,dt_arpa_cert,st_arpa_cert_foster,dt_arpa_foster_date,st_arpa_cert_tnr,dt_arpa_tnr_date");
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id', $user_id);
		$this->db->where('in_deleted', 0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();	
	}
	
	function check_update_existing($table_name = '', $field_name = '*', $where = '')
	{
		if ($table_name != '') {
			$this->db->select($field_name);
			if (!empty($where)) {
				$this->db->where($where);
			}
			$query = $this->db->get($table_name);
			//echo $this->db->last_query();die;
			return $query->num_rows();
		}
	
	}
	
	function check_paypal_id($orgid)
	{
		$this->db->select("st_paypal_email");
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$orgid);
		$this->db->where('in_deleted', 0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		$emailid_paypal = $query->row_array();
		return (!empty($emailid_paypal['st_paypal_email']) && count($emailid_paypal)>0) ? $emailid_paypal['st_paypal_email'] :'';	
	}
	
	function get_daily_digest_user_details()
	{
		$current_date = date("Y-m-d");
		
		$this->db->select('in_user_id,st_email,st_display_name');		
		$this->db->from('tbl_users tu');        
		$this->db->where('in_deleted', 0);		
		$this->db->where('in_status', 1);	
		$this->db->where('flg_daily_email', 1);
		/*$where = "(in_email_verify_status = 1 OR dt_created < '2016-11-25')";
		$this->db->where($where);*/
		//$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_users where in_email_verify_status = 0 AND dt_created > '2016-11-25')");
		//$this->db->where('in_email_verify_status', 1);	
		//$this->db->where('flg_daily_digest', 0);	
		//$user_ids = array('2711','2248','2268');
		//$user_ids = array('2268','2236','2248');
		//$user_ids = array('2236','2248','2712');
		//$user_ids = array('2236','2248','2712');
		//$user_ids = array('2236','2268');
		//$user_ids = array('1945','7170');
		//$user_ids = array('7170');
		//$where_date = "(dt_daily_digest <'" .$current_date. "' OR dt_daily_digest is null)"; 
		//$where_date = "in_user_id = 3516";
		$where_date = "in_user_id = 2624";		
		$this->db->where($where_date);
		$this->db->group_by('in_user_id');			
		//$this->db->where('in_user_id', 2248);	
		//$this->db->where('in_user_id', 2711);
		//$this->db->where('in_user_id', 2268);
		//$this->db->where_in('in_user_id', $user_ids);		
		$this->db->limit('50');		
		$query = $this->db->get();
		//echo $this->db->last_query();//die;
		
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[] = array('email' => $Row->st_email,'in_user_id' => $Row->in_user_id,'user_name' => $Row->st_display_name);				
			}			
		}
		return $arrData;
	}
	
	 public function update_daily_digest_user($userId) {
	 	$current_date = date("Y-m-d H:i:s");
		$userArr=array('dt_daily_digest'=>$current_date);
        $this->db->where('in_user_id', $userId);
        $this->db->update('tbl_users', $userArr);
        return $this->db->affected_rows();
    }
	
	function get_user_id_by_email($email_id)
	{
		$user_id = '';
		$this->db->select('in_user_id');		
		$this->db->from('tbl_users');        
		$this->db->where('in_deleted', 0);		
		$this->db->where('st_email', $email_id);
		$query = $this->db->get();
		$user_data = $query->row_array();
		if(isset($user_data) && !empty($user_data))
		{
			$user_id = $user_data['in_user_id'];
		}
		
		return $user_id;
	}
	
	public function add_user_feed($data){
		$this->db->insert('tbl_feed_log',$data);
		return $this->db->insert_id();
	}
	
	function get_daily_digest_user_details_new()
	{
		$current_date = date("Y-m-d");
		
		$this->db->select('in_user_id,st_email,st_display_name');		
		$this->db->from('tbl_users tu');        
		$this->db->where('in_deleted', 0);		
		$this->db->where('in_status', 1);
		$this->db->where("tu.in_user_id NOT IN (select in_user_id from tbl_users where in_email_verify_status = 0 AND dt_created > '2016-11-25')");	
		//$this->db->where('in_email_verify_status', 1);	
		//$this->db->where('flg_daily_digest', 0);	
		//$user_ids = array('2711','2248','2268');
		//$user_ids = array('2268','2236','2248');
		//$user_ids = array('2236','2248','2712');
		//$user_ids = array('2236','2248','2712');
		//$user_ids = array('2236','2268');
		//$user_ids = array('2236','2712');
		$user_ids = array('3833');
		
		//$where_date = "(dt_daily_digest <'" .$current_date. "' OR dt_daily_digest is null)";  
		//$this->db->where($where_date);	
		
		//$this->db->where('in_user_id', 2248);	
		//$this->db->where('in_user_id', 2711);
		//$this->db->where('in_user_id', 2268);
		$this->db->where_in('in_user_id', $user_ids);		
		$this->db->limit('50');		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[] = array('email' => $Row->st_email,'in_user_id' => $Row->in_user_id,'user_name' => $Row->st_display_name);				
			}			
		}
		return $arrData;
	}
	
	function get_daily_digest_user_details_new1()
	{
		$current_date = date("Y-m-d");
		
		$this->db->select('in_user_id,st_email,st_display_name');		
		$this->db->from('tbl_users tu');        
		$this->db->where('in_deleted', 0);		
		$this->db->where('in_status', 1);
		$this->db->where('flg_daily_email', 1);
		$where = "(in_email_verify_status = 1 OR dt_created < '2016-11-25')";
		$this->db->where($where);		
		$where_date = "(dt_daily_digest <'" .$current_date. "' OR dt_daily_digest is null)";  
		$this->db->where($where_date);	
		//$this->db->where('in_user_id', 2419);	
		//$this->db->where('in_user_id', 2711);
		//$user_ids = array('16884','16889');
		$user_ids = array('16554','14731','17162','17161','16859','17159','7170','2419');
		$this->db->where_in('in_user_id', $user_ids);		
		//$this->db->limit('70');		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$arrData = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[] = array('email' => $Row->st_email,'in_user_id' => $Row->in_user_id,'user_name' => $Row->st_display_name);				
			}			
		}
		return $arrData;
	}
	
	public function user_notification_setting($userId) 
	{
		$sql	= "SELECT flg_immediate_transport,flg_immediate_animal,flg_immediate_fund
				   FROM tbl_users as us 
				   WHERE us.in_user_id= '".$userId."' AND  us.in_deleted= '0'";		
					
		$query = $this->db->query($sql);
		//echo $this->db->last_query();die;
		return $query->row_array();
		
	}
	
	public function update_notification_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_users', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('flg_immediate_transport');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['flg_immediate_transport'];
	}	
	
	public function update_animal_notification_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_users', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('flg_immediate_animal');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['flg_immediate_animal'];
	}
	
	public function update_fundraiser_notification_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_users', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('flg_immediate_fund');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['flg_immediate_fund'];
	}
	
	public function update_daily_notification_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_users', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('flg_daily_email');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['flg_daily_email'];
	}	
	
	public function update_immediate_notification_info($array ,$updateid)
	{
		$this->db->where('in_user_id', $updateid);
		$this->db->update('tbl_users', $array);
		//echo $this->db->last_query(); die;
		
		$this->db->select('flg_immediate_all');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$updateid);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$dataArr	=	$query->row_array();
		return $dataArr['flg_immediate_all'];
	}
	
	public function check_allowed_even_blocked($email_temp_id)
	{
		$this->db->select('in_allow_status');
		$this->db->from('tbl_email_template');
		$this->db->where('in_email_id',$email_temp_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$result_data = $query->row_array();
		return $result_data;
	}
	
	public function check_user_unsub_emails($user_id)
	{
		$this->db->select('flg_immediate_all,flg_immediate_transport,flg_immediate_animal,flg_immediate_fund,flg_daily_email');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();		
		$result_data = $query->row_array();
		return $result_data;
	}
	
	public function get_affiliate_detail($id,$position,$banner_id='')
	{
		
		$pos_array	=	array('B',$position);	
        $this->db->select('id,st_url,st_code,st_position,st_image,st_email_id,st_banner_name,st_affiliate_content,in_type');
        $this->db->from('tbl_affiliate_banner'); 
		$this->db->where("FIND_IN_SET('".$id."',st_email_id) !=", 0);  		
		$this->db->where_in('st_position', $pos_array);
		$this->db->where('id!=', $banner_id); 		
		$this->db->where('dt_start <= "'. date('Y-m-d'). '" and dt_end >="'. date('Y-m-d').'"');
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_status', '1');  
		$this->db->order_by('rand()');
		$this->db->limit(1);
        $query = $this->db->get();
		//echo $this->db->last_query(); //exit;
        return $query->result_array();
    }

	public function get_zipcode_info($zipcode)
   	{
	   $this->db->select('state_prefix');
	   $this->db->from('tbl_zip_code');
	   $this->db->where('zip_code',$zipcode);
	   $query = $this->db->get();		
	   $result_data = $query->row_array();
	   return $result_data;
   	}
	
	public function get_single_org_details($org_id){
        $this->db->select('*');
        $this->db->from('tbl_organization');
        $this->db->where('in_organization_id', $org_id);
        $query = $this->db->get();
		//echo $this->db->last_query(); die;		
        $result_data = $query->row_array();
        return $result_data;
    }
	
	public function get_country($zip_code) 
	{
        $this->db->select('st_country');
        $this->db->from('tbl_zip_code');
        $this->db->where('zip_code', $zip_code);
        $query = $this->db->get();
        return $query->row_array();
    }
    
	/*public function transport_routing_enable($user_id){
        $this->db->select('in_tc_request_board');
        $this->db->from('tbl_users');
        $this->db->where('in_user_id',$user_id);
        $query = $this->db->get();     
        $result_data = $query->row_array();
        return $result_data['in_tc_request_board'];
    }*/
	
	public function transport_routing_enable($user_id)
	{	
		$routing_status = 0;
        $this->db->select('p.dt_exp_tc_date,u.in_tc_request_board');
        $this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile p','u.in_user_id = p.in_user_id','INNER');
		$this->db->where('u.in_deleted',0);
		$this->db->where('p.in_deleted',0);
        $this->db->where('u.in_user_id',$user_id);
		$this->db->where('u.in_tc_request_board',1);
		$query = $this->db->get(); 	
		if($query->num_rows()>0)
		{	
			$result_data = $query->row_array();
			$today_date= date('Y-m-d');
			$today_dt = new DateTime($today_date);
			$expire_dt = new DateTime($result_data['dt_exp_tc_date']);
			if(!empty($result_data['dt_exp_tc_date']) && $expire_dt > $today_dt)
			{
				$routing_status = 2;
			} else if($this->check_assigned_router_count()>0)
			{
				
				$routing_status = 1;	
			} else {
				$routing_status = 0;
			}
		} else if($this->check_assigned_router_count() >0)
			{
				$routing_status = 1;	
			} else {
				$routing_status = 0;
			}
			
        return $routing_status;
    }
	
	#=========================================================
	#	Function : check_direct_login
	#	Purpose  : Checking user direct login
	#=========================================================
	
	public function check_direct_login($user_id) {
		$this->db->select('in_user_id,in_login_direct');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function check_assigned_router_count()
	{
		$this->db->select('tr.in_transportation_id');
		$this->db->from('tbl_transportation tr');
		$this->db->where('tr.in_deleted',0);
		$this->db->where('tr.st_trans_type','D');
		$this->db->where('tr.enable_routing_status','1');
		$this->db->where('tr.accTcid',$this->session->userdata('userid'));
		$this->db->where('tr.in_status!=','3',FALSE);
		$this->db->where('tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)');
		$this->db->order_by('tr.in_transportation_id','desc');
		$query = $this->db->get();		
		return $query->num_rows();
	}
	
	public function update_product($productId) {
	$data=array('flg_win'=> 1 );
	$this->db->where('in_prod_id',$productId);
	$this->db->update('tbl_auction_products',$data);		
	return $this->db->affected_rows();
	}
	
	
	
	# *******************************************************************************************	
	#	Function	:	user_profile	
	#	Purpose		:	Cheking user profile is updated or not.
	# *******************************************************************************************
	
	public function user_profile($userid) {
		$this->db->select('u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone, up.st_zip');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile as up','up.in_user_id = u.in_user_id','INNER');
		$this->db->where('u.in_user_id',$userid);
		$this->db->where('u.in_deleted',0);
		$query = $this->db->get();		
		return $query->row_array();
	}
	
	
	function get_user_legs_participants($user_id)
	{
		$arrData = array();
		$this->db->distinct();
		$this->db->select("in_transportation_id");
		$this->db->from("tbl_transportation_participants");
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted',0);
		$query =	$this->db->get();
		
		if($query->num_rows() > 0)
		{
			$arrData = $query->result();							
		}
		return $arrData;
	}
	
	
	
	function get_user_leg_joined($transport_id,$user_id)
	{
		$this->db->select('in_tr_pr_id');
		$this->db->from('tbl_transportation_participants');
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_photography_profile','0');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted','0');
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	function get_airline()
	{
		$this->db->select('*');
		$this->db->from('tbl_airline');
		$this->db->where('in_deleted',0);
		$this->db->order_by('st_airline_name','asc');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	function get_base_airport()
	{
		$this->db->select('*');
		$this->db->from('tbl_airport_base');
		$this->db->where('in_deleted',0);
		$this->db->order_by('st_city','asc');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_airline_profile($user_id) 
	{
		$this->db->select('*');
		$this->db->from('tbl_user_airline_employee');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_id','desc');
		$query = $this->db->get();
		return $query->result_array();
			
	}
	
	
	public function get_email_subscription($user_id)
	{
		
		$this->db->select('in_newsletter');
		$this->db->from('tbl_users');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_deleted',0);		
		$query = $this->db->get();
		return $query->row_array();		
	}
	
	
	public function get_orgdashboard_banner_detail($id)
	{
        $this->db->select('st_url,st_code,st_position,st_image,st_email_id,st_banner_name');
        $this->db->from('tbl_affiliate_banner'); 
		$this->db->where("FIND_IN_SET('".$id."',st_email_id) !=", 0);  
		//$this->db->where('st_position', $position); 
		$this->db->where('dt_start <= "'. date('Y-m-d'). '" and dt_end >="'. date('Y-m-d').'"');
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_status', '1');  
		$this->db->order_by('rand()');
        $query = $this->db->get();
		//echo $this->db->last_query();die;
        return $query->result_array();
    }
	
	public function get_public_assisted_routing($id)
	{
		$this->db->select('*');
        $this->db->from('tbl_recommend_routing_leg'); 
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_id', $id);  
        $query = $this->db->get();
        return $query->row_array();
	}

	public function get_public_airline_routing($id)
	{
		$this->db->select('*');
        $this->db->from('tbl_recommend_tripdate'); 
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_id', $id);  
        $query = $this->db->get();
        return $query->row_array();
	}

	public function check_org_arpa($id)
	{
			$this->db->select('in_membership,in_arpa_org_id');
			$this->db->from('tbl_arpa_org');
			$this->db->where('in_org_id',$id);
			 $query = $this->db->get();
			return $query->row_array();
	}

	public function get_state_rules($state)
	{
		$this->db->select('st_rule,st_state');
		$this->db->from('tbl_state_rule');
		$this->db->where('st_state',$state);
		$query = $this->db->get();
		return $query->row_array();
	}

	public function state_rules_optout($userid,$state)
	{
		$this->db->select('st_state');
		$this->db->from('tbl_state_optout');
		$this->db->where('in_opt_out',1);
		$this->db->where('st_state',$state);
		$this->db->where('in_deleted',0);
		$this->db->where('in_user_id',$userid);
		$query = $this->db->get();
		return $query->row_array();
	}

	public function verify_rules_optout($userid,$state)
	{
		$this->db->select('in_id');
		$this->db->from('tbl_state_optout');
		$this->db->where('st_state',$state);
		$this->db->where('in_deleted',0);
		$this->db->where('in_user_id',$userid);
		$query = $this->db->get();
		return $query->row_array();
	}	
	
	public function get_email_detail()
	{
		$this->db->select('in_email_id,st_category');
        $this->db->from('tbl_email_template'); 
        $this->db->where('in_deleted', 0);  
		$this->db->where_in('in_email_id', array('42','51','52','73','74','79','118'));  
 
        $query = $this->db->get(); 		
		//echo $this->db->last_query();die;
		$arrEmail = array();
        if($query->num_rows()>0)
					{  
						foreach($query->result() as $Row)
						{				
									
							$arrEmail[]	=	array('in_email_id'	 => $Row->in_email_id,
																	   'st_category' => $Row->st_category	
											);
						}
						return $arrEmail;						
					}
	}
	
	public function get_rescue_banner()
	{ 
		$this->db->select("st_image");
		$this->db->from('tbl_rescue_store_banner');		
		$this->db->where('in_deleted',0);
		$this->db->order_by('id','DESC');
		$this->db->limit('1');
		$query = $this->db->get();
		return $query->row_array();	
	}
	
	public function get_ride_profile($user_id)
	{
		$this->db->select("*");
		$this->db->from("tbl_user_rides");
		$where = array("in_deleted"=>"0","in_user_id"=>$user_id);
		$this->db->where($where);
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}


	public function get_transport_crates($transportation_id,$crate_type='')
	{
		$this->db->select("tc.in_crate_id, tc.in_transportation_id, tc.st_crate_type, tc.in_crate_qty, tc.in_cost_public, tc.in_cost_private,t.in_approval");
		$this->db->Join('tbl_transportation t','t.in_transportation_id = tc.in_transportation_id');
		$this->db->from("tbl_transport_crates tc");
		$where = array("tc.in_deleted"=>'0',"tc.in_transportation_id"=>$transportation_id, "tc.in_crate_qty >" => '0');
		$this->db->where($where);
		if($crate_type!='')
		{
			$this->db->where('tc.st_crate_type',$crate_type);
		}	
		$query =	$this->db->get();
		return $query->result_array();
	}
	
	public function get_seminar_user_detail($id)
	{
		$this->db->select('*');
		$this->db->from('tbl_seminar_registration');
		$this->db->where('in_id',$id);
		$query =	$this->db->get();
		return $query->row_array();
	}

	public function get_space_user_detail($id)
	{
		$this->db->select('*');
		$this->db->from('tbl_order_address');
		$this->db->where('in_order_id',$id);
		$query =	$this->db->get();
		return $query->row_array();
	}
	
	public function get_order_address($id='') {
		$result_array = array();
		$this->db->select('*');	
		$this->db->from("tbl_order_address");
		$this->db->where('in_order_id',$id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();
		 if($query->num_rows()>0)
		 {
			$result_address = $query->row_array();	
			$result_array[0]	= array('st_display_name' => $result_address['st_first_name'],
										'st_last_name' 	=> $result_address['st_last_name'],
										'st_email' 		=> $result_address['st_email'],
										'st_primary_phone'	=> $result_address['st_phone'],
										'st_addr1'		=> $result_address['st_addr1'],
										'st_addr2'		=> $result_address['st_addr2'],
										'st_city'		=> $result_address['st_city'],
										'st_state'		=> $result_address['st_state'],
										'st_country'	=> $result_address['st_country'],
										'st_zip'		=> $result_address['st_zip'],
										'st_notes'		=> $result_address['st_notes'],
									 );						
		 }
		return $result_array;
	}
	
	public function get_order_detail($order_id)
	{
		$this->db->select('*');
        $this->db->from('tbl_order');
        $this->db->where('in_order_id',$order_id);
		$this->db->where('in_deleted',0);
        $query = $this->db->get();     
        $result_data = $query->row_array();
        return $result_data;
	}
	
	public function get_category() {
		$this->db->select('in_cat_id,st_category');
		$this->db->from('tbl_product_category');
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->order_by('st_category','ASC');
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_partner() {
		$this->db->select('p.in_partner_id,o.st_org_name,o.in_organization_id');
		$this->db->from('tbl_partner p');
		$this->db->join("tbl_organization o","o.in_organization_id = p.in_organization_id","LEFT");
		$this->db->where('p.in_deleted',0);
		$this->db->where('o.in_deleted',0);
		$this->db->where('p.in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_org() {
		$this->db->select('o.st_org_name');
		$this->db->from('tbl_organization o');		
		$this->db->where('o.in_deleted',0);	
		$this->db->where('o.in_organization_id',$this->session->userdata('partnerorg_id'));
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_user_details($wsdl_token) {
		$this->db->select('in_user_id,st_display_name');
		$this->db->from('tbl_users');
		$this->db->where('wsdl_token',$wsdl_token);
		$query = $this->db->get();		
		return $query->row_array();
	}
	
	public function get_breed_by_pet_id($animal_id) {
		$this->db->select('in_pet_breed_id,st_pet_breed_name');
		$this->db->from('tbl_pet_breed');
		$this->db->where('in_pet_type_id',$animal_id);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);	
		$this->db->order_by('st_pet_breed_name','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query(); die;
		return $query->result_array();
	}
	
	public function verify_unsubscribe_user($email_add)
	{
		$this->db->select('*');
		$this->db->from('tbl_unsubscribes_user');
		$this->db->where('st_email',$email_add);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->num_rows();
	}
	
	
	
	public function get_affiliate_donation_detail($position)
	{		
        $this->db->select('id,st_url,st_image,st_banner_name');
        $this->db->from('tbl_affiliate_banner'); 		 		
		$this->db->where('in_banner_placement', $position);		 		
		$this->db->where('dt_start <= "'. date('Y-m-d'). '" and dt_end >="'. date('Y-m-d').'"');
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_status', '1');  
		$this->db->order_by('rand()');
		$this->db->limit(1);
        $query = $this->db->get();
		//echo $this->db->last_query(); //exit;
        return $query->result_array();
    }
	
	
	public function get_coalition()
	{		
		$this->db->select('in_coalition_id,st_coalition_name');
        $this->db->from('tbl_coalition'); 
        $this->db->where('in_deleted', 0);  
		$this->db->where('in_status', 1);  		
        $query = $this->db->get();
		//echo $this->db->last_query(); //exit;
        return $query->result_array();
	}
	
	
	function delete_coalition($id)
	{   $data = array("in_deleted" => 1);
		$this->db->where('in_id',$id);
		$this->db->update('tbl_org_coalition',$data);
		return $this->db->affected_rows();
	}
	
	
	public function get_coalition_admin($id)
	{
		$this->db->select('cu.in_user_id,u.st_display_name,u.st_email');
		$this->db->from('tbl_coalition_user cu');
		$this->db->join('tbl_users as u', 'u.in_user_id = cu.in_user_id AND u.in_deleted=0','LEFT');
		$this->db->where('cu.in_deleted', 0);
		$this->db->where('cu.in_approved', 1);
		$this->db->where('cu.in_active', 1);
		$this->db->where('cu.in_coalition_id',$id);
		//echo $this->db->last_query(); die;
		$query=$this->db->get();
		return $query->result_array();
	}
	public function get_coalition_name($id)
	{
		$this->db->select("st_coalition_name");		
		$this->db->where(array("in_deleted"=>'0'));		
		$this->db->from("tbl_coalition");
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	public function get_coalition_name_admin($id)
	{
		$this->db->select("cu.st_coalition_name");		
		
		$this->db->from("tbl_coalition as cu");
		$this->db->where(array("cu.in_deleted"=>'0'));
		$this->db->where("cu.in_coalition_id",$id);		
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	public function is_coalition_exists($orgid,$id)
	{
		$this->db->select('in_id');
		$this->db->from('tbl_org_coalition');							
		$this->db->where("in_coalition_id",$id); 
		$this->db->where("in_organization_id",$orgid); 
		$this->db->where("in_deleted",0);
		$query = $this->db->get();		
		//echo $this->db->last_query(); die;			
		if($query->num_rows()>0)
			return true;
		else
			return false;	
	}
	
	public function get_nondoobert_org_details($org_id)
	{		
        $this->db->select('*');
        $this->db->from('tbl_non_doobert_org'); 		 		
		$this->db->where('inNonDoobertOrgId',$org_id);
		$this->db->where('inDeleted',0);
		$this->db->limit(1);
        $query = $this->db->get();
		//echo $this->db->last_query(); //exit;
        return $query->row_array();
    }
	
	public function get_animal_weight()
	{
		$animal_weight = array();
		$this->db->select('st_value,st_label');
		$this->db->from('tbl_animal_weight');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		if($query->num_rows() >0)
		{	
			foreach($query->result_array() as $key=>$value)
			{
				$animal_weight[$value['st_value']] = $value['st_label'];
			}
		}
		return 	$animal_weight;
	}
	
	public function get_animal_age()
	{
		$animal_age = array();
		$this->db->select('st_value,st_label');
		$this->db->from('tbl_animal_age');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		if($query->num_rows() >0)
		{	
			foreach($query->result_array() as $key=>$value)
			{
				$animal_age[$value['st_value']] = $value['st_label'];
			}
		}
		return 	$animal_age;
	}
	
	public function verify_joined_trans($trans_id,$id)
	{
		$this->db->select('*');
		$this->db->from('tbl_transportation_participants');
		$this->db->where('in_transportation_id',$trans_id);
		$this->db->where('in_user_id',$id);
		$this->db->where('in_deleted',0);
		$query2 = $this->db->get();
		return $query2->result_array();
	}
	
	public function get_userjoind_trans($id)
	{
		$user_jin_trans = array();
		$in_user_joined = '0';
		$user_id = $this->session->userdata('userid');
		$this->db->select('*');
		$this->db->from('tbl_transportation');
		$this->db->where('in_deleted',0);
		$this->db->where('in_status',1);
		$this->db->where("(((`in_trans_coods_id`='$user_id' AND (st_trans_type='R' || st_trans_type='P')) OR (`accTcid` = '$user_id' AND `st_trans_type` = 'D')))");
		//$this->db->or_where("(in_trans_coods_id='$user_id' AND (st_trans_type='R' || st_trans_type='P'))");
		//$this->db->or_where("(accTcid='$user_id' AND st_trans_type='D')");
		$query = $this->db->get();
		if($query->num_rows()>0)
		{
			foreach($query->result_array() as $key=>$value)
			{
				$non_of_rows = $this->verify_joined_trans($value['in_transportation_id'],$id);
				if(count($non_of_rows)>0)
				{
					$in_user_joined = '1';
				} else if($value['st_trans_type']=='D')
				{
					if($value['in_airline_transport']=='1')
					{
						$airline_leg = $this->get_covering_airline_legs($value['in_transportation_id'],$id);
						if(count($airline_leg)>0)
						{
							$in_user_joined = '1';
						}	
					} else {
						$covering_leg = $this->get_covering_legs($value['in_transportation_id'],$id);
						if(count($covering_leg)>0)
						{
							$in_user_joined = '1';
						}
					}	
				}

				if($in_user_joined == '1')
				{
						break;
				}	
			}
		}
		return $in_user_joined;
	}
	
	function get_covering_legs($trans_id,$id)
	{
		$this->db->select('*');
		$this->db->from('tbl_legs_cover');
		$this->db->where('in_transportation_id='.$trans_id.' AND in_user_id ='.$id.' AND in_deleted = "0" AND leghandle = "0"');
		$query3 = $this->db->get();
		return $query3->result_array();
	}
	
	function get_covering_airline_legs($trans_id,$id)
	{
		$this->db->select('*');
		$this->db->from('tbl_airline_transport_leg');
		$this->db->where('in_transportation_id='.$trans_id.' AND in_user_id ='.$id.' AND in_deleted = "0" AND leghandle = "0"');
		$query4 = $this->db->get();
		return $query4->result_array();
	}


	public function get_partner_org($orgId) {
		$this->db->select('o.st_org_name');
		$this->db->from('tbl_organization o');		
		$this->db->where('o.in_deleted',0);	
		$this->db->where('o.in_organization_id',$orgId);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_org_import() {
		$this->db->select('*');
		$this->db->from('tbl_org_import');	
		$this->db->limit(5);
		$query = $this->db->get();		
		return $query->result_array();
	}
	
	
	public function adduser($arrData)
	{
		$this->db->insert("tbl_users",$arrData);
		return $this->db->insert_id();			
	}
	
	
	public function adduserprofile($arrData)
	{		
		$this->db->insert("tbl_user_profile",$arrData);
		return $this->db->affected_rows();		
	}
	
	public function addorg($arrData)
	{
		$this->db->insert("tbl_organization",$arrData);
		return $this->db->affected_rows();	
	}
	
	public function get_user_email() {       
		$this->db->select("st_email");
        $this->db->where(array("in_deleted" => '0',"in_user_id" => $this->session->userdata('userid')));
        $query = $this->db->get("tbl_users");
        return $query->row_array();
    }
	
	public function get_transport_miles($userId)
	{
		$sql	= "SELECT MAX(vh.in_distance_to_drive) as distance_to_drive
		           FROM tbl_user_vehicle as vh 
				   WHERE vh.in_user_id= '".$userId."' AND  vh.in_deleted= '0' ";
				  	
		$query = $this->db->query($sql);
		//echo $this->db->last_query();die;
		
		if($query->num_rows()>0){
		foreach($query->result() as $Row)
				{
					
					
					$arrData[]=	array('distance_to_drive'	=>	$Row->distance_to_drive									  
									);					
				}			
				return $arrData;
		}
	}
	
	public function get_pilot_miles($userId)
	{
		$sql	= "SELECT MAX(vh.in_distance_to_pilot) as distance_to_pilot
		           FROM tbl_user_pilot as vh 
				   WHERE vh.in_user_id= '".$userId."' AND  vh.in_deleted= '0' ";
				  	
		$query = $this->db->query($sql);
		//echo $this->db->last_query();die;
		
		if($query->num_rows()>0){
		foreach($query->result() as $Row)
				{
					
					
					$arrData[]=	array('distance_to_drive'	=>	$Row->distance_to_pilot									  
									);					
				}			
				return $arrData;
		}
	}
	
	public function get_photographer_miles($userId)
	{
		$sql	= "SELECT pd.in_distance_to_travel,pd.st_photographer_zipcode
		           FROM tbl_photographer_detail as pd 
				   WHERE pd.in_user_id= '".$userId."' AND  pd.in_deleted= '0' ";
				  	
		$query = $this->db->query($sql);
		//echo $this->db->last_query();die;
		
		if($query->num_rows()>0){
		foreach($query->result() as $Row)
				{
					$state_prefix_array = array();
					$state_prefix_array = $this->get_lattitude_longitude($Row->st_photographer_zipcode);
					$state_prefix  =  (count($state_prefix_array)>0 && !empty($state_prefix_array['state_prefix']))?$state_prefix_array['state_prefix']:''; 
					$arrData[]=	array('distance_to_drive'	=>	$Row->in_distance_to_travel,
									  'st_zipcode'	=>  $Row->st_photographer_zipcode,
									  'state_prefix' => $state_prefix,	
									);					
				}			
				return $arrData;
		}
	}
	
	public function get_affiliate_info()
	{
		$this->db->select('*');
		$this->db->from('tbl_affiliate_content');
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_filtered_name($dname){
		if(!is_null($dname)){
			$dname = trim($dname);
			$dname = str_replace(' ','-',trim($dname));
			$dname = preg_replace("![^a-z0-9&~_-]+!i", "", html_entity_decode($dname));
			$dname = str_replace('---','-',trim($dname));			
			if(substr($dname,-1) == '.')
				$dname = substr($dname,0,-1);
		}
		return strtolower($dname);
	}
	
	public function get_resuce_store($org_id='')
	{
		$today_date = date("Y-m-d H:i:s");
		$prod_data = array();
		$this->db->select('tbl_auction_products.in_prod_id,
		tbl_auction_products.st_product,
		tbl_auction_products.st_sku,
		tbl_auction_products.fl_regular_price,
		tbl_auction_products.fl_discount_price,
		tbl_auction_products.in_prod_type,
	
		tbl_auction_products.fl_reserve_price, 
		tbl_auction_products.fl_start_price, 
		tbl_auction_products.fl_bid_price, 		
		tbl_auction_products.dt_from,
		tbl_auction_products.dt_to,		
		tbl_auction_products.in_organization_id,				
		tbl_auction_products.st_selected_category,
		tbl_auction_products.st_prod_image,
		tbl_auction_products.st_affiliate_image_url,
		tbl_auction_products.st_affiliate_url,		
		tbl_organization.st_org_image,
		tbl_organization.st_additional_info,
		tbl_organization.st_org_name');
		$this->db->from('tbl_auction_products');
		$this->db->join('tbl_organization','tbl_auction_products.in_organization_id=tbl_organization.in_organization_id','inner');		
		
		$where = "tbl_auction_products.in_stock_status='1' AND tbl_auction_products.in_prod_status='1' AND tbl_auction_products.in_deleted='0' AND tbl_organization.in_deleted=0 AND tbl_organization.in_status=1";
		
		//echo $where; exit;
		$this->db->where($where);
		$this->db->where('tbl_auction_products.in_prod_type','P');
		if($org_id!='')
		{
			$this->db->where('tbl_auction_products.in_organization_id',$org_id);
		}
		
		//$this->db->where('tbl_auction_products.in_prod_id IN(169,185,188)');
		$this->db->order_by('rand()');
		$this->db->limit(3);
		
		//$this->db->order_by("tbl_auction_products.fl_regular_price", $orderby);
		//$this->db->limit($limit, $start);
		$query = $this->db->get();
		//echo  $this->db->last_query(); exit;
		if ($query->num_rows() > 0){
			foreach ($query->result_array() as $row) {
				//$row['button_ty']	=	1;
				
				
				$row['p_url']	=	$row['in_prod_id'].'-';	
				$row['p_url']	.=	$this->get_filtered_name($row['st_product']);
				$row['p_affiliate_image_url']	=	$row['st_affiliate_image_url'];
				$row['p_affiliate_url']	=	$row['st_affiliate_url'];
				//$row['prod_name'] = $row['st_product'];
				$row['o_url']	=	$row['in_organization_id'].'-';	
				$row['o_url']	.=	$this->get_filtered_name($row['st_org_name']);				
				
				$prod_data[] = $row;
				//array_push($prod_data,$row);
			}
			
		}
		/*echo "<pre>"; print_r($prod_data); echo "</pre>";
		die;*/
		return $prod_data;
	}
	
	public function resuce_store_template($resuce_store)
	{
		$resuce_template = '';
		$button_url =  base_url().'assets/img/viewall.png';
		$cart_url = base_url().'assets/img/addcart.png';
		if(count($resuce_store)>0)
		{	
			//$resuce_template .='<tr><td>';
			$resuce_template .='<table cellspacing="0" cellpadding="0" width="100%" style="margin-top: 20px;">';
			$resuce_template .=	'<tbody>
									<tr>
										<td style="padding:0; font:bold 16px/22px Helvetica, sans-serif; color:#333333; vertical-align:top;">Doobert Rescue Store</td>
										<td style="text-align: right; padding-bottom:7px;"><a href="'.base_url().'shop" target="_blank"><img src="'.$button_url.'" alt="DOOBERT - animal rescue made simple" title="DOOBERT - animal rescue made simple" /></a></td>
									</tr>
								</tbody>
								</table>
								<table cellpadding="0" cellspacing="0" width="100%" style="margin-top:0;">
									<tbody>
						<tr>';
			$font_type = 'Roboto';	
			if(count($resuce_store[0])>0)
			{		
				$img_path1 =  base_url().'upload/animal_images/140x140/no_photo_icon.png';
				if($resuce_store[0]['p_affiliate_image_url']!='')
				{
					$img_path1 = $resuce_store[0]['p_affiliate_image_url'];
				} else 
				{		
					if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[0]['st_prod_image']) && $resuce_store[0]['st_prod_image']!='')	
						$img_path1 = base_url().'upload/product/225x225/'.$resuce_store[0]['st_prod_image'];	
				}		
				$resuce_template .=	'<td style="padding-right:6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
												<tr>
                                                        <td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank"><img src="'.$img_path1.'" alt="" title="" style="width:169px; height:126px;" /></a></td>
                                                </tr>
                                                <tr>
                                                        <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[0]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[0]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px'.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[0]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[0]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                        </td>
                                                </tr>
											</tbody>
										</table>
									</td>';
			}
			if(count($resuce_store[1])>0)
			{	
				$img_path2 = base_url().'upload/animal_images/140x140/no_photo_icon.png';
				if($resuce_store[1]['p_affiliate_image_url']!='')
				{
					$img_path2 = $resuce_store[1]['p_affiliate_image_url'];
				} else 
				{	if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[1]['st_prod_image']) && $resuce_store[1]['st_prod_image']!='')
						$img_path2 = base_url().'upload/product/225x225/'.$resuce_store[1]['st_prod_image'];
				}	
				$resuce_template .=	'<td style="padding:0 6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
													<tr>
                                                            <td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank"><img src="'.$img_path2.'" alt="" title="" style="width:169px;height:126px;" /></a></td>
													</tr>
                                                    <tr>
                                                            <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[1]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[1]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px '.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[1]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[1]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                            </td>
                                                    </tr>
											</tbody>
										</table>
									</td>';
			}
			if(count($resuce_store[2])>0)
			{	
				$img_path3 = base_url().'upload/animal_images/140x140/no_photo_icon.png';
				if($resuce_store[2]['p_affiliate_image_url']!='')
				{
					$img_path3 = $resuce_store[2]['p_affiliate_image_url'];
				} else 
				{
					if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[2]['st_prod_image']) && $resuce_store[2]['st_prod_image']!='')
						$img_path3 = base_url().'upload/product/225x225/'.$resuce_store[2]['st_prod_image'];
						
				}	
				$resuce_template .=	'<td style="padding-left:6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
												<tr>
														<td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank"><img src="'.$img_path3.'" alt="" title="" style="width:169px;height:126px;" /></a></td>
                                                </tr>
                                                <tr>
                                                        <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[2]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[2]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px '.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[2]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[2]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                        </td>
                                                </tr>
											</tbody>
										</table>
									</td>';
			}						
			$resuce_template .=	'</tr></tbody></table>';
			//$resuce_template .= '</td></tr>';
		}
		return $resuce_template;
	}
	
	public function resuce_store_template_one($resuce_store)
	{
		$resuce_template = '';
		$button_url =  base_url().'assets/img/viewall.png';
		$cart_url = base_url().'assets/img/addcart.png';
		if(count($resuce_store)>0)
		{	
			$resuce_template .='<tr>
				<td>	
				<table cellspacing="0" cellpadding="0" width="100%" style="margin-top: 20px;">
				<tbody>
					<tr>
						<td style="padding:0; font:bold 16px/22px Helvetica, sans-serif; color:#333333; vertical-align:top;">Doobert Rescue Store</td>
						<td style="text-align: right; padding-bottom:7px;"><a href="'.base_url().'shop" target="_blank"><img src="'.$button_url.'" alt="DOOBERT - animal rescue made simple" title="DOOBERT - animal rescue made simple" /></a></td>
					</tr>
				</tbody>
				</table>
				
				<table cellpadding="0" cellspacing="0" width="100%" style="margin-top:0;">
					<tbody>
						<tr>';
			$font_type = 'Roboto';	
			if(count($resuce_store[0])>0)
			{		
				$img_path1 = '';
				if($resuce_store[0]['p_affiliate_image_url']!='')
				{
					$img_path1 = $resuce_store[0]['p_affiliate_image_url'];
				} else 
				{		
					if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[0]['st_prod_image']) && $resuce_store[0]['st_prod_image']!='')	
						$img_path1 = base_url().'upload/product/225x225/'.$resuce_store[0]['st_prod_image'];	
				}		
				$resuce_template .=	'<td style="padding-right:6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
												<tr>
                                                        <td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank">';
				if($img_path1!='')
				{	
					$resuce_template .='<img src="'.$img_path1.'" alt="" title="" style="width:169px; height:126px;" />';
				} else {
					$resuce_template .='<img src="'.base_url().'upload/animal_images/140x140/no_photo_icon.png" alt="" title="" style="width:169px; height:126px;" />';
				}	
				$resuce_template .=	'</a></td>
                                                </tr>
                                                <tr>
                                                        <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[0]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[0]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px'.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[0]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[0]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[0]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                        </td>
                                                </tr>
											</tbody>
										</table>
									</td>';
			}
			if(count($resuce_store[1])>0)
			{	
				$img_path2 = '';
				if($resuce_store[1]['p_affiliate_image_url']!='')
				{
					$img_path2 = $resuce_store[1]['p_affiliate_image_url'];
				} else 
				{	if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[1]['st_prod_image']) && $resuce_store[1]['st_prod_image']!='')
						$img_path2 = base_url().'upload/product/225x225/'.$resuce_store[1]['st_prod_image'];
				}	
				$resuce_template .=	'<td style="padding:0 6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
													<tr>
                                                            <td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank">';
				if($img_path2!='')
				{											
					$resuce_template .='<img src="'.$img_path2.'" alt="" title="" style="width:169px;height:126px;" />';
				}   else {
					$resuce_template .=	'<img src="'.base_url().'upload/animal_images/140x140/no_photo_icon.png" alt="" title="" style="width:169px; height:126px;" />';
				}		
				$resuce_template .=	'</a></td></tr>
                                                    <tr>
                                                            <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[1]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[1]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px '.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[1]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[1]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[1]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                            </td>
                                                    </tr>
											</tbody>
										</table>
									</td>';
			}
			if(count($resuce_store[2])>0)
			{	
				$img_path3 = '';
				if($resuce_store[2]['p_affiliate_image_url']!='')
				{
					$img_path3 = $resuce_store[2]['p_affiliate_image_url'];
				} else 
				{
					if(file_exists($this->config->item('upload').'/product/225x225/'.$resuce_store[2]['st_prod_image']) && $resuce_store[2]['st_prod_image']!='')
						$img_path3 = base_url().'upload/product/225x225/'.$resuce_store[2]['st_prod_image'];
						
				}	
				$resuce_template .=	'<td style="padding-left:6px; vertical-align:top;">
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align:center; border:1px solid #dedede;">
                                            <tbody>
												<tr>
														<td style="padding:14px;"><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank">';
				if($img_path3!='')
				{	
					$resuce_template .=	 '<img src="'.$img_path3.'" alt="" title="" style="width:169px;height:126px;" />';
				}  else {
					$resuce_template .=	'<img src="'.base_url().'upload/animal_images/140x140/no_photo_icon.png" alt="" title="" style="width:169px; height:126px;" />';
				}		
				$resuce_template .=	 '</a></td>
                                                </tr>
                                                <tr>
                                                        <td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; text-align:center; padding-top:10px; padding-bottom:16px;" class="stack-column-center">
																<p style="margin-top:0; margin-bottom:0; color: #f25613; font: 500 17px '.$font_type.',sans-serif;"><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank" style="color:#f25613;">'.$resuce_store[2]['st_product'].'</a></p>
																<p style="margin-top:18px!important; margin-bottom:14px!important; font: 500 17px '.$font_type.',sans-serif;">Price: $'.$resuce_store[2]['fl_regular_price'].'</p>
                                                                <p style="color:#6c6d72; font:400 15px '.$font_type.',sans-serif; margin-bottom:16px!important;">by <a href="'.base_url().'org/'.$resuce_store[2]['o_url'].'" target="_blank" style="color:#6c6d72;text-decoration:underline!important;">'.$resuce_store[2]['st_org_name'].'</a></p>
																<p><a href="'.base_url().'prod/'.$resuce_store[2]['p_url'].'" target="_blank"><img src="'.$cart_url.'" alt="Add To Cart" title="Add To Cart" /></a></p>
                                                        </td>
                                                </tr>
											</tbody>
										</table>
									</td>';
			}						
			$resuce_template .=	'</tr></tbody></table></td></tr>';
		}
		return $resuce_template;
	}
	
	
	public function get_user_dts($id) {       
		$this->db->select("st_email,st_display_name");
        $this->db->where(array("in_deleted" => '0',"in_user_id" => $id));
        $query = $this->db->get("tbl_users");
        return $query->row_array();
    }
	
	
	public function get_user_access_permission($id)
	{
		$this->db->select("st_permission");
        $this->db->where(array("in_deleted" => '0',"in_org_user_id" => $id));
        $query = $this->db->get("tbl_organization_user");
        return $query->row_array();
	}
	
	public function get_org_dts($orgid)
	{
		$this->db->select("in_user_id,st_org_name");
        $this->db->where(array("in_deleted" => '0',"in_organization_id" => $orgid));
        $query = $this->db->get("tbl_organization");
        return $query->row_array();
	}
	
	public function get_local_ride_profile($id='') {		
		$this->db->select('pr.in_ride_radius');	
		$this->db->from("tbl_user_rides pr");						
		$this->db->where('pr.in_user_id',$id);
		$this->db->where('pr.in_deleted',0);		
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function check_org_permission_exist($userid,$orgid) {
		$this->db->select('in_org_user_id');	
		$this->db->where('in_organization_id',$orgid);
		$this->db->where('in_user_id',$userid);			
		//$this->db->where('in_status',5);
		$this->db->where('in_deleted',0);
		$where = '(in_status = 5 OR in_status = 1)';
		$this->db->where($where);
		$query = $this->db->get('tbl_organization_user');	
		//echo $this->db->last_query(); die;		
		if($query->num_rows() > 0) {
			return true;
		} else {
			return false;
		}
	}
	
	
	function check_org_exists($table_name='',$field_name='*',$where='')
	{
		if($table_name!='')
		{
			$this->db->select($field_name);
			if(!empty($where))
			{
				$this->db->where($where);
			}
			$query = $this->db->get($table_name);
			//echo $this->db->last_query();die;
			//return	$query->num_rows();			
			return $query->row_array();
		}
	}
	
	function n2l($number)
	{
		$result = array();
		$tens = floor($number / 10);
		$units = $number % 10;
	
		$words = array
				(
					'units' => array('', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'),
					'tens' => array('', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety')
				);

		if ($tens < 2)
		{
			$result = $words['units'][$tens * 10 + $units];
		}
		else
		{
			$result = $words['tens'][$tens];

			if ($units > 0)
			{
				$result .= ' ' . $words['units'][$units];
			}
		}

		if (empty($result))
		{
			$result = 'Zero';
		}

		return $result;
	}
	
	public function addzip($arrData)
	{
		$this->db->insert("tbl_zip_code",$arrData);
		return $this->db->affected_rows();	
	}
	
	public function get_zipcode_import() {
		$this->db->select('*');
		$this->db->from('tbl_zip_code_import');	
		$this->db->where('in_status',0);		
		$this->db->limit(10000);
		$query = $this->db->get();	
		//echo $this->db->last_query(); die;		
		return $query->result_array();
	}
	
	
	public function update_zipcode_import($id) {
		$data=array('in_status'=>1);
		$this->db->where('id',$id);
		$this->db->update('tbl_zip_code_import',$data);
		return $this->db->affected_rows();
	}

		function generate_fb_image_option1()
	{
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option1.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string   = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? $transport_info['st_org_code'] : 'DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = 'From: '.$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = 'To: '.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		if($transport_info['dt_target']!='1969-12-31' && $transport_info['dt_target']!='0000-00-00' && $transport_info['dt_target']!='' && isset($transport_info['dt_target']) )
		{	
			$end_date 	= date("D, M d",strtotime($transport_info['dt_target']));
		} else {
			$end_date = '';
		}	
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		$arrow_image = imagecreatefrompng($arrow_pics);
		list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
		$textDarkGrey = imagecolorallocate ($im,70,70,70);
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		} 
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,160,63, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,160,83, $textColorWhite, $bold, $string2);
		imagettftext($im,11, 0, 10,145, $textDarkGrey, $font,$transport_from);
		imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+45,145, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 10,165, $textDarkGrey, $font, $start_date);
		}
		if($end_date!='')
		{	
			imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		}
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,11, 0, 10,190, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 50,190, $textColorOrange, $bold,count($leg_details).' Legs');
			$x_cor = strlen(count($leg_details))>1?108:100;
			imagettftext($im,11, 0,$x_cor,190, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "44";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				imagecopyresized($thumb, $im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,45,45,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	// added by sadique on 14-3-18
	
	function generate_fb_image_option5()
	{   
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";		
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));			
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file 	   = $upload_dir."doobert_fb_post_option5.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{
			$start_date = date("l, F d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}	
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,180,70, $textDarkGrey, $font, $string);
		imagettftext($im,11, 0,160,90, $textColorGrey, $font, $string2);
		
		imagettftext($im,11, 0,130,130, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+180,130, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 175,130, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+210,130, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 150,150, $textDarkGrey, $font, $start_date);
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,11, 0, 140,170, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 180,170, $textColorOrange, $bold,count($leg_details).' Legs');
			imagettftext($im,11, 0, 230,170, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,20,100,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;				
	}
	
	
	function generate_fb_image_option6()
	{  
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option6.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = strtoupper($transport_info['st_org_name']);
		$string3 = "ROAD TRANSPORT CREATED BY";
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		
		imagettftext($im,11, 0,170,30, $textColorWhite, $bold, $string3);
		imagettftext($im,11, 0,200,50, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,160,90, $textDarkGrey, $font, $string2);
		
		imagettftext($im,11, 0,150,115, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+200,115, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 195,115, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,115, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 160,140, $textDarkGrey, $font, $start_date); 
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 163,165, $textColorOrange, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 210,165, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "67";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,0,0,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;					
	}
	
	function generate_fb_image_option7()
	{   
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";			
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file 	   = $upload_dir."doobert_fb_post_option7.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = strtoupper($transport_info['st_org_name']);
		$string3 = "ROAD TRANSPORT CREATED BY";
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}	
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		
		imagettftext($im,11, 0,120,25, $textColorWhite, $bold, $string3);
		imagettftext($im,11, 0,150,45, $textColorWhite, $bold, $string);
		imagettftext($im,11, 0,170,80, $textColorGrey, $font, $string2);
		
		imagettftext($im,11, 0,150,115, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+200,115, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 190,115, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,115, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 160,135, $textDarkGrey, $font, $start_date); 
		}
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 170,155, $textColorOrange, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 220,155, $textColorGrey, $font,'in this transport'); 
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,30,100,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	function generate_fb_image_option8()
	{    
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";			
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option8.jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."doobertv4/assets/OpenSansBold.ttf";
		$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
		
		$string = $transport_info['st_org_name'];
		$orgcode = ($transport_info['st_org_code']) ? '#'.$transport_info['st_org_code'] : '#DBT';
		$string2  = 'Transport '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_from = "".$transport_from_add;
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		$transport_to = ''.$transport_to_add;
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("l, F d",strtotime($transport_info['dt_pickup_date']));	
		} else {
			$start_date = '';
		}
		
		//$end_date 	= date("l, F d",strtotime($transport_info['dt_target']));
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		//$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		//$arrow_image = imagecreatefrompng($arrow_pics);
		//list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81);
		$textDarkGrey = imagecolorallocate ($im,70,70,70);		
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		
		/* if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,10,116, $textColorOrange,$bold,ucfirst($transport_info['st_trans_name']));
		}  */
				
		$bbox1 = imagettfbbox(11,0,$font, $transport_from);
		
		imagettftext($im,11, 0,180,30, $textDarkGrey, $bold, $string);
		imagettftext($im,11, 0,170,50, $textDarkGrey, $bold, $string2);
		
		imagettftext($im,11, 0,145,120, $textColorOrange, $font,'From: ');
		imagettftext($im,11, 0,$bbox1[2]+195,120, $textColorOrange,$font,'To: ');
		
		imagettftext($im,11, 0, 185,120, $textDarkGrey, $font,$transport_from);
		//imagecopy($im,$arrow_image,$bbox1[2]+20,135,0,0,$width1,$height1);
		imagettftext($im,11, 0,$bbox1[2]+225,120, $textDarkGrey, $font,$transport_to);
		if($start_date!='')
		{	
			imagettftext($im,11, 0, 165,150, $textDarkGrey, $font, $start_date); 
		} 
		//imagettftext($im,11, 0, $bbox1[2]+45,165, $textDarkGrey, $font, $end_date);
		if(count($leg_details)>0)
		{	
			$string5 = count($leg_details).' Legs in this transportation';
			//imagettftext($im,11, 0, 430,460, $textColorGrey, $font,'Total');
			imagettftext($im,11, 0, 170,180, $textColorGrey, $font,count($leg_details).' Legs');
			imagettftext($im,11, 0, 220,180, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{  
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			//$im2 = imagecreatefromjpeg($org_profile_src);
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			if($flag_type == 1)
			{
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				//$source = imagecreatefromjpeg($org_profile_src);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,0,0,0,0,$newwidth,$newheight);
			}	
		}
		
		
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
					
	}
	
	
	function generate_fb_image($id)
	{
		$upload_dir = $this->config->item('upload') . "fb_transport_share/";
		$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
		$leg_details 	   = $this->orgtrasnportation_model->get_trans_legs_join_user();
		$transport_info	   = $transport_details[0];	
		$attched_file = $upload_dir."doobert_fb_post_option".$id.".jpg";
		$y = 0;
		$flag_type = 0;
		//$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/OpenSansBold.ttf";
		$font =	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
		$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
		$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";		
		$string = $transport_info['st_org_name'];
		$orgcode=	($transport_info['st_org_code']) ?  $transport_info['st_org_code'] : 'DBT';		
		$string2  = 'Transport ID: '.$orgcode.$transport_info['in_transportation_id'];
		
		$transport_from_add  = '';
		$transport_from_add .= $transport_info['st_from_city']? $this->common_function->custom_htmlentities($transport_info['st_from_city']).", ":"";
		$transport_from_add .= $transport_info['st_from_state']? $this->common_function->custom_htmlentities($transport_info['st_from_state']):"";
		$transport_to_add  = '';
		$transport_to_add .= $transport_info['st_to_city']? $this->common_function->custom_htmlentities($transport_info['st_to_city']).", ":"";
		$transport_to_add .= $transport_info['st_to_state']? $this->common_function->custom_htmlentities($transport_info['st_to_state']):"";
		if($transport_info['dt_pickup_date']!='1969-12-31' && $transport_info['dt_pickup_date']!='0000-00-00' && $transport_info['dt_pickup_date']!='' && isset($transport_info['dt_pickup_date']))
		{	
			$start_date = date("D, M d",strtotime($transport_info['dt_pickup_date']));
		} else {
			$start_date = '';
		}
		if($transport_info['dt_target']!='1969-12-31' && $transport_info['dt_target']!='0000-00-00' && $transport_info['dt_target']!='' && isset($transport_info['dt_target']) )
		{	
			$end_date 	= date("D, M d",strtotime($transport_info['dt_target']));
		} else {
			$end_date = '';
		}
		
		$im = imagecreatefromjpeg($attched_file);
		imagealphablending($im, true); 
		imagesavealpha($im, true); 
		
		$arrow_pics = $this->config->item('upload').'fb_transport_share/arrow.png';
		
		$arrow_image = imagecreatefrompng($arrow_pics);
		list($width1, $height1) = getimagesize($arrow_pics);
		$textColorWhite = imagecolorallocate($im, 255,255,255);
		$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
		$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
		$lightColorGrey = imagecolorallocate ($im, 169, 169, 169); 
		$textColorblack = imagecolorallocate ($im, 0, 0, 0);
		$textColorOrange = imagecolorallocate ($im, 241,55,44);
		
		if($transport_info['st_trans_name']!='')
		{
			//$y = 10;
			imagettftext($im,12, 0,15,60, $textColorblack, $font,ucfirst($transport_info['st_trans_name']));
		} 
				
		$bbox1 = imagettfbbox(12, 0, $font, $transport_from_add);
		
		imagettftext($im,11, 0,110,176, $textColorblack, $light, $string);
		imagettftext($im,11, 0,110,196, $textColorblack, $light, $string2);
		imagettftext($im,12, 0,15,84, $textColorGrey, $bold,'From:');
		imagettftext($im,12, 0,$bbox1[2]+60,84, $textColorGrey,$bold,'To:');
		imagettftext($im,12, 0, 15,104, $textColorOrange, $font,$transport_from_add);
		imagecopy($im,$arrow_image,$bbox1[2]+30,94,0,0,$width1,$height1);
		imagettftext($im,12, 0,$bbox1[2]+60,104, $textColorOrange, $font,$transport_to_add);
		if($start_date!='')
		{	
			imagettftext($im,10, 0, 15,120, $lightColorGrey,$bold, $start_date);
		}	
		if($end_date!='')
		{	
			imagettftext($im,10, 0, $bbox1[2]+60,120, $lightColorGrey,$bold, $end_date);
		}
		if(count($leg_details)>0)
		{	
			$string5 = 'Total '.count($leg_details).' Legs in this transportation';
			imagettftext($im,10, 0, 15,144, $textColorGrey, $font,'Total');
			imagettftext($im,10, 0, 50,144, $textColorOrange, $bold,count($leg_details).' LEGS');
			$x_cor = strlen(count($leg_details))>1?105:97;
			imagettftext($im,10, 0,$x_cor,144, $textColorGrey, $font,'in this transport'); 	
		}

		$picture = $this->common_function->get_picture($transport_info['in_organization_id']);
		$profile_image = '';
		if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
		{
			$profile_image = $picture;
			$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromgif($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefrompng($org_profile_src);
			}
			
			if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
			{
				$flag_type = 1;
				$im2 = imagecreatefromjpeg($org_profile_src);
			}
			
			if($flag_type == 1)
			{	
				$percent = 0.45;
				list($width, $height) = getimagesize($org_profile_src);
				$newwidth = $width * $percent;
				$newheight = "70";
				$thumb = imagecreatetruecolor($newwidth, $newheight);
				imagecopyresized($thumb,$im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
				imagecopy($im, $thumb,20,164,0,0,$newwidth,$newheight);
			}	
		}
		
		//$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$img_name = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'_'.mt_rand().'.jpg';
		$img_name2 = 'transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg';
		$imagename = $upload_dir.$img_name;
		$imagename2 = $upload_dir.$img_name2;
		imagejpeg($im,$imagename);
		imagejpeg($im,$imagename2);
		imagedestroy($im);		
		return $img_name;
	}	
	
	public function update_org_permission()
	{
		$userArr=array('in_mark_read' => 1);
        $this->db->where('in_user_id', $this->session->userdata('userid'));
		$this->db->where('in_deleted', 0);
        $this->db->update('tbl_organization_user', $userArr);
        return $this->db->affected_rows();
	}
	
	
	public function get_all_transportation_user($user_id) {
		$data = array();
		$this->db->select('t.in_organization_id,t.st_from_city,t.st_to_city,
						   t.in_transportation_id ,t.dt_pickup_date,t.st_trans_type,t.in_airline_transport,
						   t.dt_target,t.in_status,o.st_org_code');							
		$this->db->from('tbl_transportation as t');	
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id');
		$this->db->where('t.in_deleted',0);
		//$this->db->where_in('in_status',array(1,2,3));
		//$this->db->where_in('in_status',1);
		$this->db->where("(t.in_status = 1 || (t.in_status = 2 && t.dt_target >= current_date()))");
		$this->db->where('t.in_trans_coods_id',$user_id);		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		//$org_detail = $this->get_single_org_details($user_id);
		//$org_code = (isset($org_detail) && count($org_detail)>0 && $org_detail['st_org_code']!='')?$org_detail['st_org_code'].'#' :'DBT#';
	
		
		
		//die;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$event_details = '';
				$transport_type = '';
				//if()
					$org_code = isset($row['st_org_code'])?$row['st_org_code'].'#' :'DBT#';
				$event_details .= $org_code.$row['in_transportation_id'];			
				
				if($row['st_trans_type']=='D')
				{
					if($row['in_airline_transport']=='1')
					{	
						$transport_type =  'Airline';
					}	
					else
					{		
						$transport_type =  'Routing';
					}	
				} else if($row['st_trans_type']=='R')
				{
					$transport_type =  'Ride';
				} else if($row['st_trans_type']=='RO')
				{
					$transport_type =  'Route';
				} else {
					$transport_type =  'Pre-defined';
				}	
				
				
				$data[] = array('tr_title' 			=> $event_details,
								'transportation_id' => $row['in_transportation_id'],
								'location' 			=> $row['st_from_city'].' - '.$row['st_to_city'],
								'start_date' 		=> $row['dt_pickup_date'],
								'end_date' 			=> $row['dt_target'],
								'in_status' 		=> $row['in_status'],
								'in_organization_id' => $row['in_organization_id'],
								'transport_type'	=>$transport_type,
								);
			}
		}
		
		return $data;
	}
	
	
	function get_transport_list_ajax($limit,$rec_per_page)
	{   
		$sql =	"SELECT SQL_CALC_FOUND_ROWS tr.in_transportation_id as rows,tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.st_trans_type,
							tr.st_trans_name,
							tr.in_status,
							tr.in_trans_coods_id,
							tr.in_tot_distance,	
							tr.accTcid,
							tr.in_round,
							tr.in_mins,							
							tr.in_airline_transport,	
							concat(tu.st_display_name,' ',tu.st_last_name) as co_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							tu.st_email,o.st_org_code,p.in_photography_profile 
							FROM `tbl_transportation` `tr`, 
							`tbl_users` `tu`,`tbl_transportation_participants` `p`,`tbl_organization` `o` 
							WHERE (`tu`.`in_user_id` = `tr`.`in_trans_coods_id` )";
		$where = '';
		$where .= "AND o.in_organization_id = tr.in_organization_id AND o.in_deleted = 0  AND ((`p`.`in_transportation_id` = `tr`.`in_transportation_id` AND tr.in_deleted = 0 AND p.in_deleted = 0 AND p.in_user_id = ".$this->session->userdata('userid').")";
		$where .= "|| (`tr`.`in_trans_coods_id`= ".$this->session->userdata('userid')." ))";		
		$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";		
		$where .= " AND (tr.in_deleted = '0')";
		$sql	.=	$where." GROUP BY `tr`.`in_transportation_id`";
		$sql	.=	" ORDER BY tr.in_transportation_id DESC";
		
		$sql	.=	" LIMIT $limit,$rec_per_page";
		
		$query = $this->db->query($sql);
		
		//echo $this->db->last_query();die; 
		//return ($query->num_rows() > 0) ? $query->result_array()  :  FALSE;

		$transport_details['transport_details'] = $query->result_array();
		$transport_details['total_count']	= $this->db->query('SELECT FOUND_ROWS() as count;')->row()->count;
		return $transport_details;
		
	}
	
	public function get_org_details($id) {
		$this->db->select('st_city,st_state');
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$id);
		$this->db->where('in_deleted',0);
		//$this->db->where('in_deleted',0);
		
		$query = $this->db->get();
		return $query->row_array();
	}

	//----------------------------------------------------BFHVT-----------------------------------------
	
	function get_pending_invitation() {
		
		$this->db->select('in_id');
		$this->db->from('tbl_org_transport_participate');		
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));	
		$this->db->where('in_status','0');	
		$this->db->where('in_deleted','0');			
		$query = $this->db->get();	
		return $query->num_rows();
	}
	
	
	function get_pending_reservation()
	{
		$this->db->select('ao.in_id');
		$this->db->from('tbl_adoption_order ao');
		$this->db->join('tbl_animal a','a.in_animal_id=ao.in_animal_id  and a.in_deleted=0');		
		$this->db->where('a.in_organization_id',$this->session->userdata('org_id'));		
		$this->db->where('ao.in_deleted','0');
		$this->db->where('ao.in_status','0');
		$this->db->where('ao.in_transportation_id !=','');	
		$this->db->group_by('in_transportation_id');
		$query = $this->db->get();
		//echo $this->db->last_query();die;		
		return $query->num_rows();
		
	}
	
	function get_total_animals()
	{
		$this->db->select('in_animal_id');
		$this->db->from('tbl_adoption_order');		
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));		
		$this->db->where('in_deleted','0');		
		$query = $this->db->get();
		//echo $this->db->last_query();die;		
		return $query->num_rows();
	}
	
	function get_total_crates()
	{
		//SELECT * FROM tbl_transport_crates WHERE in_transportation_id=2985
		$this->db->select('st_crate_type,in_crate_qty');
		$this->db->from('tbl_transport_crates');		
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));		
		$this->db->where('in_deleted','0');		
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_animalBy_trans_org()
    {
		
		$this->db->select('ts.in_id,ts.is_shared,ts.in_crate_id,ao.in_adoption_id,ao.in_animal_id');
		$this->db->from('tbl_trans_summary  ts');
        $this->db->join('tbl_adoption_order  ao', 'ao.in_id = ts.in_id','LEFT');
		$this->db->where('ao.in_transportation_id',$this->session->userdata('transport_id'));   
		$this->db->where('ts.in_status','1');	 
		$this->db->where('ts.in_deleted','0');			
		$query = $this->db->get(); 
		//echo $this->db->last_query(); die;	
		
        if($query->num_rows()>0)
        {   
	
			$s=$m=$l=$xl=$xs=$nc='';
            foreach($query->result() as $Row)
            {    

										$sqlanimalname  = "SELECT st_animal_name,in_animal_type_id FROM tbl_animal  where in_animal_id = '".$Row->in_animal_id."' and in_deleted=0";
										$sqlaniname	=	$this->db->query($sqlanimalname);										
										$animalname			=	$sqlaniname->result();
										$st_animal_name		=	$animalname[0]->st_animal_name;
										$in_animal_type_id		=	$animalname[0]->in_animal_type_id;
										
										
										
										$sqlprogressstatus  = "SELECT st_animal_type_name FROM tbl_animal_type  where in_animal_type_id = '".$in_animal_type_id."' and in_deleted=0";
										$sqlprogressstat	=	$this->db->query($sqlprogressstatus);										
										$prostatus			=	$sqlprogressstat->result();
										$st_animal_type_name		=	$prostatus[0]->st_animal_type_name;
										
										
										
										$sqlanimalimage  = "SELECT st_file_name FROM tbl_animal_file  where in_animal_id = '".$Row->in_animal_id."' and in_deleted=0 and st_file_type='P'";
										$sqlaniimage	=	$this->db->query($sqlanimalimage);										
										$animalicon			=	$sqlaniimage->result();
										$st_file_name		=	$animalicon[0]->st_file_name;
										
										
										
										
										
										$sqlcratetype  = "SELECT st_crate_type FROM tbl_transport_crates  where in_crate_id = '".$Row->in_crate_id."' and in_deleted=0";
										$sqlctype	=	$this->db->query($sqlcratetype);										
										$cratetype			=	$sqlctype->result();
										$st_crate_type		=	$cratetype[0]->st_crate_type;
										
										if($st_crate_type == 'S'){
											$s++;
										}
										
										if($st_crate_type == 'M'){
											$m++;
										}
										if($st_crate_type == 'L'){
											$l++;
										}
										
										if($st_crate_type == 'XL'){
											$xl++;
										}
										if($st_crate_type == 'XS'){
											$xs++;
										}
										
										
										if(is_numeric($Row->in_crate_id) && $Row->in_crate_id == 0)
											{
												$st_crate_type		=	'No Crate';
												$nc++;
											}								
										
										else if(empty($st_crate_type) && $Row->is_shared ==0){
												$st_crate_type		=	'--';
											}
										else if($Row->is_shared !=0){
												$st_crate_type = "Shared Crate";
											}
										
										
										$sqladoption  = "SELECT st_fname,st_phone,st_backup_contact,st_backup_phone FROM tbl_adoption  where in_adoption_id = '".$Row->in_adoption_id."' and in_deleted=0";
										$sqladoptiondet	=	$this->db->query($sqladoption);										
										$adoptiondetail			=	$sqladoptiondet->result();
										$st_fname		=	$adoptiondetail[0]->st_fname;
										$st_phone		=	$adoptiondetail[0]->st_phone;
										$st_backup_contact		=	$adoptiondetail[0]->st_backup_contact;
										$st_backup_phone		=	$adoptiondetail[0]->st_backup_phone;
										
										
										$sqlcomment  = "SELECT st_commment FROM tbl_trans_summary_comment  where in_id = '".$Row->in_id."' and in_deleted=0";
										$sqlpetcomment	=	$this->db->query($sqlcomment);										
										$petcomment			=	$sqlpetcomment->result();
										$comment		=	$petcomment[0]->st_commment;
			
                $arrData[]  = array("in_adoption_order"     => $Row->in_id,        
									"in_crate_id"     		=> $Row->in_crate_id, 
                                    "in_animal_id"          => $Row->in_animal_id,
                                    "st_animal_name"        => $st_animal_name,  
									"st_animal_type_name"   => $st_animal_type_name,
									"st_crate_size"         => $st_crate_type,
                                    "st_fname"        		=> $st_fname,                                 
                                    "st_phone"        		=> $st_phone,                                 
                                    "st_backup_contact"    	=> $st_backup_contact,                                   
                                    "st_backup_phone"      	=> $st_backup_phone,  
									"scount"                => $s,
									"mcount"                => $m,
									"lcount"                => $l,
									"xlcount"               => $xl,
									"xscount"               => $xs,
									"nocratecount"          => $nc,
									"comment"               => $comment,
                                    "animalicon" => ($st_file_name != '' && file_exists($this->config->item('upload') . "animal_images/70x70/" . $st_file_name)) ? base_url() . 'upload/animal_images/70x70/' . $st_file_name : base_url() . 'upload/animal_images/70x70/no_photo_icon.png',
                                    );
            }
			
            return $arrData;
        }
		
    }
	
}
?>