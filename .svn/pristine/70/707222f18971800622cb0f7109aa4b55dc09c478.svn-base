<?php 
# ======================================================================================
# Created by		: Jigar Patel
# Created date		: 31-March-2014
# File description	: Organization Trasnportation Model for Transportation of organization
# Special - notes	: none
# Tables used		: tbl_users,tbl_user_profile
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class Orgtrasnportation_model extends CI_Model {

    function __construct() 
    {
        // Call the Model constructor
        parent::__construct();
    }
    
	function index()
	{
	
	}
	
	
	
	# *******************************************************************************************	
	#	Function	:	upload_files	
	#	Purpose		:	Uplaod file in 
	# *******************************************************************************************	
	function upload_files($file_name)
	{
		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."trasnportation/";
		$config['allowed_types'] = 'jpg|jpeg|doc|docx|xls|xlsx|pdf';
		$config['max_size']	= '20480';
		$config['file_name'] = time();
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		if (!$this->upload->do_upload($file_name)) {
			return $this->upload->display_errors();
		}
		else {
			$arrImageInfo = $this->upload->data();
		   return $arrImageInfo;
			
		}	
	}

	# *******************************************************************************************	
	#	Function	:	add_transport	
	#	Purpose		:	Add data in Trasport 
	# *******************************************************************************************	
	function add_transport($arrData)
	{
		$user_id = $this->db->insert('tbl_transportation', $arrData);
		return  $this->db->insert_id();
	}
	# *******************************************************************************************	
	#	Function	:	add_transport_file	
	#	Purpose		:	Add data in Trasport attachments
	# *******************************************************************************************	
	function add_transport_file($arrData)
	{
		$user_id = $this->db->insert('tbl_transportation_file', $arrData);
		return  $this->db->insert_id();
	}	
	
	function add_transport_photo($arrData)
	{
		$user_id = $this->db->insert('tbl_transportation_photo', $arrData);
		return  $this->db->insert_id();
	}	
	
	# *******************************************************************************************	
	#	Function	:	get_org_animal	
	#	Purpose		:	Get Organization animals
	# *******************************************************************************************	
	
	public function get_org_animal($org_id,$status)
	{	
		$animal_details = array();
		$this->db->select('a.in_animal_id,a.st_travel_with,a.in_weight,a.in_animal_type_id,a.in_primary_breed_id,a.st_gender,a.st_cvi,
						  GROUP_CONCAT(ant.in_transportation_id) as in_transportation_id,
						  a.st_animal_name,
						  a.in_demeanor_id,
						  af.st_file_name,
						  st_animal_breed_name,
						  st_animal_type_name,
						  st_demeanor_name,
						  st_css_class,
						  st_demeanor_image,
						  st_demeanor_desc',FALSE);
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');
		//$this->db->join('tbl_demeanor td','td.in_demeanor_id = a.in_demeanor_id','INNER');
		$this->db->join('tbl_animal_file af',"af.in_animal_id = a.in_animal_id AND st_file_type='P'",'LEFT');
		$this->db->join('tbl_animal_transportation ant',"ant.in_animal_id=a.in_animal_id AND ant.in_deleted='0'",'LEFT');
		//$this->db->join('tbl_transportation t',"ant.in_transportation_id=t.in_transportation_id AND t.in_deleted='0' AND  t.in_status='3'",'LEFT');
		$this->db->join("tbl_organization o","o.in_organization_id = a.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->where('a.in_deleted',0);		
		//$this->db->where('(ant.in_animal_id IS NULL OR ant.in_transportation_id IN (SELECT t.in_transportation_id FROM tbl_transportation t WHERE t.in_deleted="0" AND t.in_status="3"))',FALSE,FALSE);
		//updated by ghanshyam on 11-Nov-2014 added condition for transportations which are draft and then deleted
		//$this->db->where('(ant.in_animal_id IS NULL OR ant.in_transportation_id IN (SELECT t.in_transportation_id FROM tbl_transportation t WHERE t.in_deleted="0" AND t.in_status="3") OR ant.in_transportation_id IN (SELECT t.in_transportation_id FROM tbl_transportation t WHERE t.in_deleted="1" AND t.in_status="4"))',FALSE,FALSE);
		//updated by ghanshyam on 21-Nov-2014 added t.in_status = 4
		//$this->db->where("a.in_animal_id NOT IN (SELECT in_animal_id FROM tbl_animal_transportation WHERE in_transportation_id IN (SELECT t.in_transportation_id FROM tbl_transportation t WHERE t.in_deleted='0' AND t.in_status = 1) AND in_deleted='0')",FALSE,FALSE);
		//$this->db->where("a.in_animal_id NOT IN (SELECT in_animal_id FROM tbl_animal_transportation WHERE in_transportation_id IN (SELECT t.in_transportation_id FROM tbl_transportation t WHERE t.in_deleted='0' AND (t.in_status = 1 || t.in_status = 4)) AND in_deleted='0')",FALSE,FALSE);
		if($this->session->userdata('transport_id'))
		{
			$this->db->where("a.in_animal_id NOT IN (SELECT in_animal_id FROM tbl_animal_transportation WHERE in_deleted = 0 AND in_transportation_id = ".$this->session->userdata('transport_id').")",FALSE,FALSE);
		}
		
		$this->db->where('a.in_organization_id',$org_id);
		$this->db->where('a.in_status <>',3);
		#$this->db->where('a.in_progress_status',$status);
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			$animal_details = $query->result_array();
		}
		//echo  "<pre>";print_r($animal_details);die;
		return $animal_details;
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_org_trans_animal	
	#	Purpose		:	Get Organization animals in selected Transport
	# *******************************************************************************************	
	
	public function get_org_trans_animal($org_id,$status)
	{	
		$animal_details = array();
		$this->db->select('a.in_animal_id,
						   a.st_gender,
						   a.in_primary_breed_id,
						   a.in_animal_type_id,
						   a.st_travel_with,
						   a.st_cvi,
						   tr.in_transportation_id,
						   tr.in_animal_trans_id,
						  a.st_animal_name,
						  a.in_demeanor_id,
							a.in_weight,	
						  af.st_file_name,
						  st_animal_breed_name,
						  st_animal_type_name,
						  st_demeanor_name,
						  st_demeanor_image,
						  st_css_class,
						  st_demeanor_desc',FALSE);
		$this->db->from('tbl_animal as a');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');
		$this->db->join('tbl_animal_transportation tr','tr.in_animal_id = a.in_animal_id  AND tr.in_deleted="0"','INNER');
		$this->db->join('tbl_animal_file af',"af.in_animal_id = a.in_animal_id AND st_file_type='P'",'LEFT');
		$this->db->join("tbl_organization o","o.in_organization_id = a.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->where('a.in_deleted',0);
		$this->db->where('tr.in_deleted',0);
		$this->db->where('tr.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('tr.in_transportation_id is NOT NULL', NULL, FALSE);
		$this->db->where('a.in_organization_id',$org_id);
		#$this->db->where('a.in_progress_status',$status);
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			$animal_details = $query->result_array();
		}
		//echo  "<pre>";print_r($animal_details);die;
		return $animal_details;
	}
	
	# *******************************************************************************************	
	#	Function	:	add_animal_trasport	
	#	Purpose		:	Add Animal in tranport
	# *******************************************************************************************	
		
	public function add_animal_trasport($animals,$transport_id)
	{
		/*$this->db->where('in_organization_id',$this->session->userdata("org_id"));
		$this->db->update('tbl_animal',array("in_progress_status"=>"0"));*/	
		//$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->update('tbl_animal_transportation',array("in_deleted"=>"1"));
		for($a=0;$a<count($animals);$a++)
		{
			$arrData = array();
			$arrData = array(//"in_transportation_id"	=> $this->session->userdata('transport_id'),
							 "in_transportation_id"	=> $transport_id,
							 "in_animal_id"			=> $animals[$a],
							 "in_created_by"		=> $this->session->userdata('userid'),
							 "dt_created"			=> date("Y-m-d H:i:s"),
							 "in_deleted"			=> "0"
							  );
			$this->db->insert('tbl_animal_transportation', $arrData);
			
			$this->db->where('in_animal_id',$animals[$a]);
			$this->db->update('tbl_animal',array("in_progress_status"=>"2"));	
		}
	}
	# *******************************************************************************************	
	#	Function	:	add_animal_trasport	
	#	Purpose		:	Before Add Animal in tranport update all amimal status of that transport
	# *******************************************************************************************
		
	public function update_current_trasport_animal()
	{
		$cur_trans_animal = $this->get_org_trans_animal($this->session->userdata("org_id"),"2");
		for($a=0;$a<count($cur_trans_animal);$a++)
		{
			$this->db->where('in_animal_id',$cur_trans_animal[$a]['in_animal_id']);
			$this->db->update('tbl_animal',array("in_progress_status"=>"0"));	
		}
	}
	
	#*********************************************************************************************
	#	Function	:	get_transport_details
	#	Purpouse	:	Get Transportation details
	#*********************************************************************************************
	
	public function get_transport_details($transport_id)
	{
		$transport_details = array();
		$this->db->select("	tr.in_transportation_id,
							tr.in_trans_coods_id,
							tr.in_organization_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_from_country,
							tr.st_to_street,
							tr.st_to_city,
							tr.st_to_state,
							tr.st_to_zip,
							tr.st_to_country,
							tr.dt_pickup_date,
							tr.dt_target,
							tr.st_from_info,
							tr.st_to_info,
							tr.st_trans_type,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.dt_confirm,
							tr.in_status,
							tr.st_trans_name,
							tr.in_modified_by,
							tr.st_add_comments,
							tr.in_need_trans_monitor,
							tr.stSendOrgNm,
						    tr.stSendNm,
						    tr.stSendEmail,
						    tr.stSphone,
						    tr.stS501c3,
						    tr.stRecOrgNm,  
						    tr.stRecNm,
						    tr.stRecEmail,
						    tr.stRphone,
						    tr.stR501c3,
						    tr.accTcid,
							tr.stAniStory,
							tr.inRouteTnc,
							tr.enable_routing_status,	
							tr.in_allow_pics,
							tr.inSendOrgRunsheet,
							tr.inRecOrgRunsheet,
							tr.in_airline_transport,
							tr.in_ride_id,
							tr.no_of_kitten,
							tr.in_approval,
							tr.in_round,
							tr.in_mins,
							tr.in_quick_add,
							tr.in_frm_ride_location,
							tr.in_to_ride_location,
							tr.st_latest_pickup,
							tr.dt_latest_date,
							tr.in_selected_type,
							tr.st_selected_trans,
							tr.in_sms_notification,
							tr.in_fb_share,
							tr.in_route_notify_type,
							tr.st_private_type_notify,
							tr.in_transport_crate_vehicle,
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							u.st_profile_image,
							u.st_email,
							u.in_public,
							p.in_user_id,
							p.st_primary_phone,
							p.st_address1,
							p.st_city,
							p.st_state,
							p.st_zip,
							p.st_country,
							o.st_org_image,
							o.st_org_name,
							o.in_organization_id,
							o.st_org_code,	
							tr.in_status,	
							o.st_additional_info,
							o.st_profile_desc,
							o.in_enable_terms_condition,
							o.st_terms_condition,
							o.in_enable_terms_condition_route,
							o.st_terms_condition_route,
							DATE_FORMAT(tr.dt_pickup_date, '%a') as pdays,
						    DATE_FORMAT(tr.dt_target, '%a') as days,
						    tr.st_sendOrg,
						    tr.st_sendStreet,
						    tr.st_receiveOrg,
						    tr.st_receiveStreet,
						    tr.in_public_reservation,
						    tr.in_multiple_route",

						FALSE);
		$where = array("tr.in_deleted"=>"0","tr.in_transportation_id"=>$transport_id);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_user_profile p ","p.in_user_id= tr.in_trans_coods_id","INNER");
		$this->db->join("tbl_users u","p.in_user_id = u.in_user_id","INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id AND o.in_deleted='0'","INNER");	
		//$this->db->join("tbl_transportation_participants tp","tr.in_transportation_id = tp.in_transportation_id AND tp.in_deleted='0'","INNER");		
		$this->db->where($where);
		$query =	$this->db->get();
		//print_r($this->db->last_query()); exit;
		if($query->num_rows()>0)
		{
			$transport_details = $query->result_array();
		}
		//echo "<pre>";print_r($transport_details);die;
		return $transport_details;
	} 
	
	#*********************************************************************************************
	#	Function	:	delete_legs
	#	Purpouse	:	Delete Lege details
	#*********************************************************************************************
	public function delete_legs()
	{
		
		$leg_id = $this->get_trans_legs_id();
		if(isset($leg_id['in_transportation_leg_id']))
		{
			$leg_s = $leg_id['in_transportation_leg_id'];
			$arrData = array("in_deleted"=>1);
			$this->db->where('in_transportation_leg_id',$leg_id['in_transportation_leg_id']);
			$this->db->update("tbl_transportation_leg_detail",$arrData);
	
			$arrData = array("in_deleted"=>1);
			$this->db->where('in_transportation_leg_id',$leg_id['in_transportation_leg_id']);
			$this->db->update("tbl_transportation_leg",$arrData);
		}
	}
	
	#*********************************************************************************************
	#	Function	:	create_legs
	#	Purpouse	:	Add legs
	#*********************************************************************************************
	
	public function create_legs($arrData)
	{
		$this->db->insert('tbl_transportation_leg', $arrData);
		$leg_id = $this->db->insert_id();
		return $leg_id;
	}
	
	#*********************************************************************************************
	#	Function	:	add_legs_details
	#	Purpouse	:	Add legs details
	#*********************************************************************************************
	
	public function add_legs_details($arrData)
	{
		$this->db->insert('tbl_transportation_leg_detail', $arrData);
		//echo "<br><br><pre>";print_r($this->db->last_query());
		$this->db->insert_id();
	}
	#*********************************************************************************************
	#	Function	:	update_transport_distance
	#	Purpouse	:	Update coverdistance
	#*********************************************************************************************	
	public function update_transport_distance($miles)
	{
		$this->db->set('in_distance_covered',$miles, false);
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->update('tbl_transportation');
		//echo $this->db->last_query();die;
	}
	
	# *******************************************************************************************	
	#	Function	:	get_org_trans_animal	
	#	Purpose		:	Get Organization animals in selected Transport
	# *******************************************************************************************	
	
	public function get_trans_legs()
	{	
		$this->db->select('l.in_transportation_leg_id,l.in_status as mark_completed,d.st_leg_type,st_street,st_city,st_state,st_zip,st_country,dt_start_time,st_timezone,st_meeting_location,in_multi_user,in_user_num,l.in_route_type,l.in_sort_order,l.st_leg_instruction,l.st_to_meeting_location',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		//$this->db->order_by('l.in_transportation_leg_id','ASC');
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$r_type = '';
				if($Row->in_route_type == 1)
				{
					$r_type = 'Aviation';
				}
				if($Row->in_route_type == 2)
				{
					$r_type = 'Overnight';
				}
				if($Row->in_route_type == 0)
				{
					$r_type = 'Road';
				}
				$arrData[$Row->in_transportation_leg_id]['in_sort_order']= $Row->in_sort_order;	
				
				if($Row->st_leg_type=="P")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;	
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014
					$arrData[$Row->in_transportation_leg_id]['leg_instruction'] = $Row->st_leg_instruction;
					$arrData[$Row->in_transportation_leg_id]['to_meeting_location'] = $Row->st_to_meeting_location;
				}
				
				if($Row->st_leg_type=="D")
				{
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;	
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;		
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014				
					$arrData[$Row->in_transportation_leg_id]['leg_instruction'] = $Row->st_leg_instruction;
					$arrData[$Row->in_transportation_leg_id]['to_meeting_location'] = $Row->st_to_meeting_location;
				}
				//added by ghanshyam on 05Dec2014
				if($Row->st_leg_type=="O")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']			= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']		= $Row->mark_completed;	
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']			= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['o_pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['o_pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['o_pick_city']			= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['o_pick_country']		= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['o_pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['overnight_comments']	= $Row->st_meeting_location;
					$arrData[$Row->in_transportation_leg_id]['leg_instruction'] 	= $Row->st_leg_instruction;
					$arrData[$Row->in_transportation_leg_id]['to_meeting_location'] = $Row->st_to_meeting_location;
				}
				
				$get_legs_participants_details = $this->get_legs_participants_details_by_leg_id($Row->in_transportation_leg_id);
				
				$non_doobert_leg_participant_details = $this->get_non_doobert_legs_participants_details_by_leg_id($Row->in_transportation_leg_id);
					
				if(count($get_legs_participants_details) >0)
				{	
					$arrData[$Row->in_transportation_leg_id]['leg_participant_details'] = array('in_user_id'=>$get_legs_participants_details[0]['in_user_id'],'display_name'=>$get_legs_participants_details[0]['st_display_name']);	
				} else {
					$arrData[$Row->in_transportation_leg_id]['leg_participant_details'] = array('in_user_id'=>'','display_name'=>'');
				}
				if(count($non_doobert_leg_participant_details) >0)
				{	
					$arrData[$Row->in_transportation_leg_id]['non_doobert_leg_participant_details'] = array('in_nondoobert_user_id'=>$non_doobert_leg_participant_details[0]['in_non_doobert_user_id'],'nondoobert_user_name'=>$non_doobert_leg_participant_details[0]['st_name']);
				} else {
					$arrData[$Row->in_transportation_leg_id]['non_doobert_leg_participant_details'] = array('in_nondoobert_user_id'=>'','nondoobert_user_name'=>'');
				}
				
			}
			return $arrData;
		}
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_trans_legs_id	
	#	Purpose		:	Get Transport legs
	# *******************************************************************************************	
		
	public  function get_trans_legs_id()
	{
		$this->db->select('l.in_transportation_leg_id,l.in_status as mark_completed',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->where('l.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		$query = $this->db->get();
		//echo "<pre>".$this->db->last_query();die;
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	update_legs	
	#	Purpose		:	Update legs details
	# *******************************************************************************************	
		
	public function update_legs($array,$leg_id)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->update('tbl_transportation_leg',$array);
	}
	# *******************************************************************************************	
	#	Function	:	update_leg_info	
	#	Purpose		:	Update legs information
	# *******************************************************************************************
		
	public function update_leg_info($array,$leg_id,$type)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->where('st_leg_type',$type);
		$this->db->update('tbl_transportation_leg_detail',$array);
		//echo $this->db->last_query();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_trans_legs_join_user	
	#	Purpose		:	Get Legs with join user
	# *******************************************************************************************	
	//added in_vehicle_id on 20Nov2014 by ghanshyam
	//added in_user_num,in_multi_user,st_meeting_location on 06Dec2014 by ghanshyam to display drivers/pilot needed for leg
	public function get_trans_legs_join_user($user='')
	{	
		$this->db->select('l.in_sort_order,l.in_transportation_leg_id,l.in_status as mark_completed,l.in_route_type,l.st_leg_instruction,l.st_to_meeting_location,l.in_multi_user, l.in_user_num, l.st_meeting_location ,(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_leg_id=l.in_transportation_leg_id AND in_photography_profile=0) as participants_cnt,(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_leg_id=l.in_transportation_leg_id AND in_photography_profile=1) as participants_photography_cnt,(SELECT count(in_non_doobert_user_id) FROM tbl_non_doobert_transport_users WHERE in_deleted=0 AND in_leg_id=l.in_transportation_leg_id) as non_doobert_participants_cnt',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		
		$this->db->order_by('l.in_sort_order','ASC');		
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			$zip_code = '';
			$user_lat = '';
			$user_long = '';
			$lat_lon = array();
			if($this->session->userdata('zip'))
			{	
				$zip_code = $this->session->userdata('zip');
				if($zip_code!='')
				{
					$user_lat_long_details = $this->get_latlong_by_zipcode($zip_code);
					$user_lat			   = $user_lat_long_details['lat'];
					$user_long		   	   = $user_lat_long_details['lon'];
				}
			} else 
			{
				$user_loc = 0;
				if(isset($_COOKIE['user_loc']))
				{
					$user_loc = $_COOKIE['user_loc'];
				}
				
				if($user_loc == 1)
				{	
					$lat_lon = $this->ip_visitor();
					if(count($lat_lon)>0)
					{
						$user_lat  = $lat_lon['lat'];
						$user_long = $lat_lon['lon'];
					}
				}		
				//$zip_code = '96755';
			}
					
			foreach($query->result() as $Row)
			{
				
				
				$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;
				$arrData[$Row->in_transportation_leg_id]['route_type']		= ($Row->in_route_type=='1'?"Aviation":"Road");		
				$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;	
				$arrData[$Row->in_transportation_leg_id]['in_multi_user']	= $Row->in_multi_user;
				$arrData[$Row->in_transportation_leg_id]['in_user_num']		= $Row->in_user_num;
				$arrData[$Row->in_transportation_leg_id]['st_meeting_location']		= $Row->st_meeting_location;
				$arrData[$Row->in_transportation_leg_id]['participants_cnt']		= $Row->participants_cnt;
				$arrData[$Row->in_transportation_leg_id]['non_doobert_participants_cnt']		= $Row->non_doobert_participants_cnt;
				$arrData[$Row->in_transportation_leg_id]['trans_leg_id']			= $Row->in_transportation_leg_id;
				$arrData[$Row->in_transportation_leg_id]['in_sort_order']			= $Row->in_sort_order;
				$arrData[$Row->in_transportation_leg_id]['to_meeting']			= $Row->st_to_meeting_location;
				$arrData[$Row->in_transportation_leg_id]['leg_instruction']		= $Row->st_leg_instruction;
				$arrData[$Row->in_transportation_leg_id]['participants_photography_cnt'] = $Row->participants_photography_cnt;
				$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
				
				$leg_filled = '0';
				$verify_relevant_leg = '0';
				$all_participants = $Row->participants_cnt+$Row->non_doobert_participants_cnt;
				if( ($Row->in_multi_user == 0 && $all_participants == 1) || ($Row->in_multi_user == 1  && $Row->in_user_num == $all_participants) )
				{
					$leg_filled = '1';
				}
				
				if($Row->in_route_type==1 || $Row->in_route_type==0)
				{
					$from_leg = $this->get_leg_by_leg_id($Row->in_transportation_leg_id,'P');
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $from_leg->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $from_leg->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $from_leg->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $from_leg->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $from_leg->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $from_leg->st_country;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $from_leg->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $from_leg->st_timezone;
					
					if($leg_filled == 0 && trim($from_leg->st_zip)!='')
					{	
						$total_miles = '';
						$from_zip_lat = '';
						$from_zip_long = '';
						$from_zip_lat_long_details = $this->get_latlong_by_zipcode(trim($from_leg->st_zip));
						$from_zip_lat		   = $from_zip_lat_long_details['lat'];
						$from_zip_long		   = $from_zip_lat_long_details['lon'];
						
						$total_miles = $this->total_distance($user_lat,$user_long,$from_zip_lat,$from_zip_long,'');
						if($total_miles <= 100)
						{
								$verify_relevant_leg = '1';
						}
							
					}
					
					$to_leg = $this->get_leg_by_leg_id($Row->in_transportation_leg_id,'D');
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $to_leg->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $to_leg->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $to_leg->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $to_leg->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $to_leg->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $to_leg->st_country;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $to_leg->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $to_leg->st_timezone;	
					
					if($leg_filled == 0 && $verify_relevant_leg==0 && trim($to_leg->st_zip)!='')
					{	
						$relevant_leg_miles = '';
						$total_miles = '';
						$to_zip_lat = '';
						$to_zip_long = '';
						$to_zip_lat_long_details = $this->get_latlong_by_zipcode(trim($to_leg->st_zip));
						$to_zip_lat		     = $to_zip_lat_long_details['lat'];
						$to_zip_long		 = $to_zip_lat_long_details['lon'];
						
						
						$total_miles = $this->total_distance($to_zip_lat,$to_zip_long,$user_lat,$user_long,'');
						if($total_miles <= 100)
						{
							$verify_relevant_leg = '1';
						}		
					}				
				} else if($Row->in_route_type==2)
				{
					$o_leg = $this->get_leg_by_leg_id($Row->in_transportation_leg_id,'O');
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']		= $o_leg->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['st_street']		= $o_leg->st_street;
					$arrData[$Row->in_transportation_leg_id]['st_state']		= $o_leg->st_state;
					$arrData[$Row->in_transportation_leg_id]['st_city']			= $o_leg->st_city;
					$arrData[$Row->in_transportation_leg_id]['st_zip']			= $o_leg->st_zip;
					$arrData[$Row->in_transportation_leg_id]['st_country']		= $o_leg->st_country;
					
					if($leg_filled == 0 && trim($o_leg->st_zip)!='')
					{	
						$total_miles = '';
						$o_zip_lat = '';
						$o_zip_long = '';
						$o_zip_lat_long_details = $this->get_latlong_by_zipcode(trim($o_leg->st_zip));
						$o_zip_lat		   = $o_zip_lat_long_details['lat'];
						$o_zip_long		   = $o_zip_lat_long_details['lon'];
							
						$total_miles = $this->total_distance($user_lat,$user_long,$o_zip_lat,$o_zip_long,'');
						if($total_miles <= 100)
						{
							$verify_relevant_leg = '1';
						}	
					}
				}
				
				$arrData[$Row->in_transportation_leg_id]['leg_participant_details'] = $this->get_legs_joined_details_by_leg_id($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['non_doobert_leg_participant_details'] = $this->get_non_doobert_legs_participants_details_by_leg_id($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['is_relevant_leg']	= $verify_relevant_leg;		
				
				$arrData[$Row->in_transportation_leg_id]['total_miles']	= $total_miles;
					
				
				$route_details = $this->get_legs_path($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['leg_distance']	=	isset($route_details['fl_distance']) ? $route_details['fl_distance'] : 0;
				
			}
			return $arrData;
		}
		
	}
	
	function ip_visitor()
	{
		$lat_lon = array();
		$remote  = $_SERVER['REMOTE_ADDR'];
		//$arr_location = file_get_contents("http://api.ipstack.com/$remote?access_key=235748a79234afc7a79488411265f939&output=json&legacy=1");
		$arr_location = file_get_contents("http://ip-api.com/json/$remote");
		$location = json_decode($arr_location);
		$lat_lon['lat'] = $location->lat;
		$lat_lon['lon'] = $location->lon;
		return $lat_lon;
		//return $location->zip_code;
	}
	
	function total_distance($lat1, $lon1, $lat2, $lon2, $unit) 
	{

		$theta = $lon1 - $lon2;
		$dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
		$dist = acos($dist);
		$dist = rad2deg($dist);
		$miles = $dist * 60 * 1.1515;
		$unit = strtoupper($unit);
	
		if ($unit == "K") {
			return ($miles * 1.609344);
		} else if ($unit == "N") {
			return ($miles * 0.8684);
		} else {
			return $miles;
		}
	}
	
	
	
	
	/*public function verify_relevant_leg()
	{
		$this->db->select('ld.in_transportation_leg_id');
		$this->db->from('tbl_transportation_leg_detail ld');
		$this->db->join('tbl_zip_code zp','');
		$this->db->where('ld.in_transportation_leg_id',$leg_id);
		$this->db->where('ld.st_leg_type',$type);
	}*/	
	
	
	#*********************************************************************************************
	#	Function	:	get_legs_participants_details_by_leg_id
	#	Purpouse	:	get_legs_participants_details_by_leg_id
	#*********************************************************************************************	
		
	function get_legs_participants_details_by_leg_id($leg_id)
	{
		$result_array = array();
		//$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,v.st_photos_url,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,vp.st_photos_url as plane_photos,ps.st_contact,lv.in_vehicle_id as leg_vehicle_id,lv.in_plane_id as leg_plane_id',FALSE);
		$this->db->select('p.in_tr_pr_id,p.in_photography_profile,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,v.st_photos_url,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,vp.st_photos_url as plane_photos,lv.in_vehicle_id as leg_vehicle_id,lv.in_plane_id as leg_plane_id',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','INNER');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id','INNER');
		//$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->join('tbl_user_vehicle v','v.in_user_id = u.in_user_id AND v.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_pilot vp','vp.in_user_id = u.in_user_id AND vp.in_deleted = 0','LEFT');
		//$this->db->join('tbl_user_profile_setting ps','ps.in_user_id = u.in_user_id AND ps.in_deleted = 0','LEFT');
		$this->db->join('tbl_vehicle_image vi','vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0','LEFT');
		$this->db->join('tbl_leg_vehicle_detail lv','lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = '.$leg_id.' AND lv.in_deleted = 0','LEFT');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_transportation_leg_id',$leg_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$this->db->group_by('p.in_photography_profile');
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	function get_legs_joined_details_by_leg_id($leg_id)
	{
		$result_array = array();
		$this->db->select('p.in_tr_pr_id,p.in_photography_profile,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,
						  pr.st_arpa_cert,pr.dt_arpa_cert,pr.st_arpa_cert_foster,pr.dt_arpa_foster_date,pr.st_arpa_cert_tnr,pr.dt_arpa_tnr_date,v.fl_doobert_verified,v.dt_doobert_verified,lv.in_vehicle_id as leg_vehicle_id,lv.in_plane_id as leg_plane_id',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','INNER');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id','INNER');
		$this->db->join('tbl_verification v','p.in_user_id=v.in_user_id AND v.in_deleted = 0','LEFT');
		$this->db->join('tbl_leg_vehicle_detail lv','lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = '.$leg_id.' AND lv.in_deleted = 0','LEFT');
		$this->db->where('p.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$this->db->where('p.in_transportation_leg_id',$leg_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$this->db->group_by('p.in_photography_profile');
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	function get_non_doobert_legs_participants_details_by_leg_id($leg_id)
	{
		$this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id',FALSE);
		$this->db->from('tbl_non_doobert_transport_users nd');
		$this->db->where('nd.in_deleted',0);
		$this->db->where('nd.in_leg_id',$leg_id);
		$this->db->where('nd.in_transportation_id',$this->session->userdata('transport_id'));
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		return $query->result_array();
	}
	
	
	
		# *******************************************************************************************	
	#	Function	:	get_trans_legs_join_user	
	#	Purpose		:	Get Legs with join user
	# *******************************************************************************************	
	//added in_vehicle_id on 20Nov2014 by ghanshyam
	//added in_user_num,in_multi_user,st_meeting_location on 06Dec2014 by ghanshyam to display drivers/pilot needed for leg
	public function get_trans_legs_join_user_test($user='')
	{	
		//$this->db->select('l.in_sort_order,l.in_transportation_leg_id,l.in_status as mark_completed,l.in_route_type, l.in_vehicle_id as leg_vehicle_id, l.in_multi_user, l.in_user_num, l.st_meeting_location, d.st_leg_type, d.st_street, d.st_city, d.st_state, d.st_zip,d.st_country, d.dt_start_time, d.st_timezone,p.in_user_id,p.in_transportation_leg_id as in_source_leg_id,concat(u.st_display_name," ",u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,ps.st_contact,(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_leg_id=l.in_transportation_leg_id) as participants_cnt,(SELECT count(in_non_doobert_user_id) FROM tbl_non_doobert_transport_users WHERE in_deleted=0 AND in_leg_id=l.in_transportation_leg_id) as non_doobert_participants_cnt',FALSE);
		$this->db->select('l.in_sort_order,l.in_transportation_leg_id,l.in_status as mark_completed,l.in_route_type, l.in_vehicle_id as leg_vehicle_id, l.in_multi_user, l.in_user_num, l.st_meeting_location, d.st_leg_type, d.st_street, d.st_city, d.st_state, d.st_zip,d.st_country, d.dt_start_time, d.st_timezone,p.in_user_id,p.in_transportation_leg_id as in_source_leg_id,concat(u.st_display_name," ",u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_leg_id=l.in_transportation_leg_id) as participants_cnt,(SELECT count(in_non_doobert_user_id) FROM tbl_non_doobert_transport_users WHERE in_deleted=0 AND in_leg_id=l.in_transportation_leg_id) as non_doobert_participants_cnt',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id = l.in_transportation_leg_id','INNER');
		$this->db->join('tbl_transportation_participants p','p.in_transportation_leg_id = l.in_transportation_leg_id AND p.in_deleted=0','LEFT');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','LEFT');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','LEFT');
		//$this->db->join('tbl_user_vehicle v','v.in_user_id = u.in_user_id AND v.in_deleted = 0','LEFT');
		//$this->db->join('tbl_user_pilot vp','vp.in_user_id = u.in_user_id AND vp.in_deleted = 0','LEFT');
		//$this->db->join('tbl_user_profile_setting ps','ps.in_user_id = u.in_user_id AND ps.in_deleted = 0','LEFT');
		//$this->db->join('tbl_vehicle_image vi','vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0','LEFT');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		//$this->db->where_not_in('l.in_route_type','2'); //added by ghanshyam on 05Dec2014
		if($user!='')
		{
			//$this->db->where('p.in_user_id IS NOT NULL ',FALSE,FALSE);
		}
		//$this->db->order_by('l.in_transportation_leg_id','ASC');
		$this->db->order_by('l.in_sort_order','ASC');		
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		//echo "<pre>";print_r($query->result());die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$images = array();
				if(!empty($Row->in_vehicle_id))
				{
					$images = $this->vehicle_images($Row->in_vehicle_id);
				}
				
				$arrData[$Row->in_transportation_leg_id]['user_id']			= $Row->in_user_id;
				$arrData[$Row->in_transportation_leg_id]['source_leg_id']	= $Row->in_source_leg_id;
				$arrData[$Row->in_transportation_leg_id]['display_name']	= ($Row->st_display_name==''|| $Row->st_display_name=='null')?"":$Row->st_display_name;
				$arrData[$Row->in_transportation_leg_id]['profile_image']	= $Row->st_profile_image;
				$arrData[$Row->in_transportation_leg_id]['pr_address1']		= $Row->pr_st_address1;
				$arrData[$Row->in_transportation_leg_id]['pr_city']			= $Row->pr_st_city;
				$arrData[$Row->in_transportation_leg_id]['pr_state']		= $Row->pr_st_state;
				$arrData[$Row->in_transportation_leg_id]['pr_zip']			= $Row->pr_st_zip;
				$arrData[$Row->in_transportation_leg_id]['user_email']		= $Row->user_email;
				$arrData[$Row->in_transportation_leg_id]['primary_phone']	= $Row->st_primary_phone;
				$arrData[$Row->in_transportation_leg_id]['vehicle_type']			= $Row->st_vehicle_type;
				$arrData[$Row->in_transportation_leg_id]['vehicle_color']			= $Row->st_vehicle_color;
				$arrData[$Row->in_transportation_leg_id]['vehicle_license_plate']	= $Row->st_vehicle_license_plate;
				$arrData[$Row->in_transportation_leg_id]['vehicle_license_state']	= $Row->st_vehicle_license_state;
				$arrData[$Row->in_transportation_leg_id]['in_public']	= $Row->in_public;
				$arrData[$Row->in_transportation_leg_id]['route_type']		= ($Row->in_route_type=='1'?"Aviation":"Road");		
				$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;	
				//$arrData[$Row->in_transportation_leg_id]['st_contact']		= $Row->st_contact;	
				$arrData[$Row->in_transportation_leg_id]['images']		= $images;	
				$arrData[$Row->in_transportation_leg_id]['plane_type']		= $Row->st_plane_type;
				$arrData[$Row->in_transportation_leg_id]['plane_color']		= $Row->st_plane_color;
				$arrData[$Row->in_transportation_leg_id]['plane_number']	= $Row->st_plane_number;
				$arrData[$Row->in_transportation_leg_id]['in_plane_ifr']	= $Row->in_plane_ifr;
				$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;
				$arrData[$Row->in_transportation_leg_id]['leg_vehicle_id']	= $Row->leg_vehicle_id;
				$arrData[$Row->in_transportation_leg_id]['in_multi_user']	= $Row->in_multi_user;
				$arrData[$Row->in_transportation_leg_id]['in_user_num']		= $Row->in_user_num;
				$arrData[$Row->in_transportation_leg_id]['st_meeting_location']		= $Row->st_meeting_location;
				$arrData[$Row->in_transportation_leg_id]['participants_cnt']		= $Row->participants_cnt;
				$arrData[$Row->in_transportation_leg_id]['non_doobert_participants_cnt']		= $Row->non_doobert_participants_cnt;
				$arrData[$Row->in_transportation_leg_id]['trans_leg_id']			= $Row->in_transportation_leg_id;
				$arrData[$Row->in_transportation_leg_id]['in_sort_order']			= $Row->in_sort_order;
				
				if($Row->st_leg_type=="P")
				{
					if($Row->in_route_type==1)
					{
						$pickup = $this->get_airport_details($Row->st_street);
					}			
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['pick_longitude']	= isset($pickup['st_longitude'])?$pickup['st_longitude']:"";
					$arrData[$Row->in_transportation_leg_id]['pick_latitude']	= isset($pickup['st_latitude'])?$pickup['st_latitude']:"";				
				}
				
				if($Row->st_leg_type=="D")
				{
					if($Row->in_route_type==1)
					{
						$dropoff = $this->get_airport_details($Row->st_street);
					}
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;	
					$arrData[$Row->in_transportation_leg_id]['drop_longitude']		= isset($dropoff['st_longitude'])?$dropoff['st_longitude']:"";
					$arrData[$Row->in_transportation_leg_id]['drop_latitude']		= isset($dropoff['st_latitude'])?$dropoff['st_latitude']:"";
				}
				
				if($Row->st_leg_type=="O")
				{
					
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['st_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['st_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['st_city']			= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['st_zip']			= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['st_country']		= $Row->st_country;
					
				}
				
				$arrData[$Row->in_transportation_leg_id]['leg_participant_details'] = $this->get_legs_participants_details_by_leg_id_test($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['non_doobert_leg_participant_details'] = $this->get_non_doobert_legs_participants_details_by_leg_id_test($Row->in_transportation_leg_id);
				
				$route_details = $this->get_legs_path($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['leg_distance']	=	isset($route_details['fl_distance']) ? $route_details['fl_distance'] : 0;
				
			}
			//echo "<pre>";print_r($arrData);die;
			
			//echo "<pre>";print_r($leg_participant_details);die;
			
			return $arrData;
		}
	}
	
	
	#*********************************************************************************************
	#	Function	:	get_legs_participants_details_by_leg_id
	#	Purpouse	:	get_legs_participants_details_by_leg_id
	#*********************************************************************************************	
		
	function get_legs_participants_details_by_leg_id_test($leg_id)
	{
		$result_array = array();
		//$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,v.st_photos_url,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,vp.st_photos_url as plane_photos,ps.st_contact,lv.in_vehicle_id as leg_vehicle_id,lv.in_plane_id as leg_plane_id',FALSE);
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,v.st_photos_url,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,vp.st_photos_url as plane_photos,lv.in_vehicle_id as leg_vehicle_id,lv.in_plane_id as leg_plane_id',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','INNER');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->join('tbl_user_vehicle v','v.in_user_id = u.in_user_id AND v.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_pilot vp','vp.in_user_id = u.in_user_id AND vp.in_deleted = 0','LEFT');
		//$this->db->join('tbl_user_profile_setting ps','ps.in_user_id = u.in_user_id AND ps.in_deleted = 0','LEFT');
		$this->db->join('tbl_vehicle_image vi','vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0','LEFT');
		$this->db->join('tbl_leg_vehicle_detail lv','lv.in_user_id = pr.in_user_id AND lv.in_transportation_leg_id  = '.$leg_id.' AND lv.in_deleted = 0','LEFT');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_transportation_leg_id',$leg_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	
	function get_non_doobert_legs_participants_details_by_leg_id_test($leg_id)
	{
		$this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id',FALSE);
		$this->db->from('tbl_non_doobert_transport_users nd');
		$this->db->where('nd.in_deleted',0);
		$this->db->where('nd.in_leg_id',$leg_id);
		$this->db->where('nd.in_transportation_id',$this->session->userdata('transport_id'));
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		return $query->result_array();
	}
	
	
	
	
	#*********************************************************************************************
	#	Function	:	update_transport_details
	#	Purpouse	:	Update transport details
	#*********************************************************************************************	
	public function update_transport_details($array)
	{
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->update('tbl_transportation',$array);
		//echo $this->db->last_query();die;
	}
	
	public function get_transport_files($tra_id)
	{
		$this->db->select('st_file_name,in_transport_file_id',FALSE);
		$this->db->from('tbl_transportation_file');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_transport_photos($tra_id)
	{
		$this->db->select('st_file_name,st_file_type,in_transport_photo_id',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	
	public function get_transport_story_photos($tra_id)
	{
		$this->db->select('trs.in_id,trs.in_transportation_id,trs.st_rescue_title,trs.st_rescue_story,trs.in_created_by,trs.dt_created,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,trs.in_flag',FALSE);
		$this->db->from('tbl_transport_rescue_story trs');
		$this->db->where('trs.in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->join('tbl_users u','trs.in_created_by = u.in_user_id AND u.in_deleted = 0','LEFT');
		$this->db->order_by('dt_created','DESC');
		$query = $this->db->get();
		return $query->result_array();
		
	}
	
	public function get_story_photos_by_id($story_id,$tra_id,$created_by)
	{
		$this->db->select('st_file_name,st_file_type,st_video_provider,st_video_id,in_transport_photo_id,in_transport_story_id',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->where('in_transport_story_id',$story_id);
		$this->db->where('in_created_by',$created_by);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_transport_photos_by_id($story_id,$tra_id,$created_by)
	{
		$this->db->select('st_file_name,st_file_type,st_video_provider,st_video_id,in_transport_photo_id',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transport_story_id',$story_id);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->where('in_created_by',$created_by);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_latlong_by_zipcode($zipcode)
	{
		$this->db->select('lat,lon');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zipcode);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_transport_animals($tra_id)
	{	
		$result_array = array();
		$this->db->select('a.in_animal_id,
							a.st_animal_name,
							a.in_demeanor_id,
							st_animal_breed_name,
							st_animal_type_name,
							st_demeanor_name,
							st_demeanor_image,
							st_demeanor_desc,
							st_file_type,
							st_file_name,
							a.st_on_clock,
							td.st_css_class,
							a.st_gender,
							a.in_age,
							a.in_weight,
							a.st_rabies_vaccine,
							a.dt_rabiesvac_date,
							a.st_cvi,
							a.dt_cvi,
							a.in_neutered_id,
							a.st_crates_well,
							a.st_flight_risk,
							a.st_profile_story,
							a.st_travel_with,
							a.in_enter_age',FALSE);
		$this->db->from('tbl_animal_transportation as an_t');
		$this->db->join('tbl_animal as a','a.in_animal_id = an_t.in_animal_id','INNER');
		$this->db->join('tbl_animal_breed ab','ab.in_animal_breed_id = a.in_primary_breed_id','INNER');
		$this->db->join('tbl_animal_type ty','ty.in_animal_type_id = a.in_animal_type_id','INNER');
		$this->db->join('tbl_demeanor td','a.in_demeanor_id = td.in_demeanor_id','LEFT');
		$this->db->join('tbl_animal_file af','af.in_animal_id = a.in_animal_id AND af.st_file_type="P" AND af.in_deleted="0" ','LEFT');
		//$this->db->where('a.in_deleted',0);	//commented this condition bcz we have to display the animal even if animal profile is deleted but animal relates to that transport 
		$this->db->where('an_t.in_deleted',0);
		$this->db->where('a.in_deleted',0);		
		$this->db->where('an_t.in_transportation_id',$tra_id);		
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	
	public function get_routes($origin_zip,$dest_zip)
	{
		
		//echo '<br/> Origin: '.$origin.', Destination: '.$destination;
		$mode = 'driving';
		$google_api_key = $this->config->item('googleapi_key');
		//$url = "http://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=true&sensor=false";
		//$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=false&key=AIzaSyDHWsjEomsjGFW3rtDig5MjC5Ydi63Lj_Q";
		$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=false&key=$google_api_key";
		// create curl resource
		$ch = curl_init();
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		// $output contains the output string
		$output = curl_exec($ch);
		// close curl resource to free up system resources
		curl_close($ch);
		$response_array = json_decode($output, TRUE);
		//echo '<br/>'.$url;
		/*$url = "https://maps.googleapis.com/maps/api/directions/json?waypoints=optimize:true|$origin_zip||$dest_zip&sensor=false";
		$res	= file_get_contents($url);			
		$response_array = json_decode($res, TRUE);	*/
		
		if($response_array['status'] == 'OK')
		{
			$tmp_miles_array = array();
			
			$routes = $response_array['routes'];
			/*echo '<pre>';
			print_r($routes);
			die;*/
			$map_routes = $routes[0]['legs'][0]['steps'];
			//print_r($map_routes);die;
			$new_arr = array();
			foreach($map_routes as $key=>$route)
			{
				$ploy_line = '';
				$ploy_line = $this->decodePolylineToArray($route['polyline']['points']);
				$new_arr = array_merge($new_arr,$ploy_line);
			}
			//echo '<pre>';print_r($new_arr);die;
			return ($new_arr);

			
		}
		else
		{
			return (array());
		}
	
	}
	
	
	function get_transport_list($status,$org_id)
	{
		
		$this->db->select("	tr.dt_target,
							tr.in_transportation_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.st_trans_type,
							tr.st_trans_name,
							tr.in_status,
							o.st_org_image,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							(SELECT count(in_animal_trans_id) FROM tbl_animal_transportation  WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id) as animal_in_transport,tl.in_multi_user,(SELECT count(in_transportation_leg_id) FROM tbl_transportation_leg  WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id) as leg_in_transport,(SELECT count(in_transportation_leg_id) FROM tbl_transportation_leg  WHERE in_deleted=0 AND in_status=1 AND in_transportation_id=tr.in_transportation_id) as comp_leg_in_transport"
						,FALSE);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		$this->db->join("tbl_transportation_leg tl","tr.in_transportation_id = tl.in_transportation_id AND tl.in_deleted='0'", "LEFT");
		$where = '';
		$where .= "tr.in_deleted = 0";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		$where .= " AND tr.in_organization_id = '".$org_id."'";
		
		$this->db->where($where);
		$this->db->group_by("tr.in_transportation_id");
		$this->db->order_by("tr.in_transportation_id","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		$transport_details = $query->result_array();
		//echo "<pre>";print_r($transport_details);die;
		return $transport_details;
	}

	#*********************************************************************************************
	#	Function	:	join_legs
	#	Purpouse	:	Join the leg by driver user 
	#*********************************************************************************************	
	function join_legs($data)
	{
		$this->db->insert('tbl_transportation_participants', $data);
	}
	
	#*********************************************************************************************
	#	Function	:	leave_legs
	#	Purpouse	:	leave the leg by driver user 
	#*********************************************************************************************	
	function leave_legs($leg_id,$photo_profile='')
	{
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_transportation_leg_id',$leg_id);
		if($photo_profile!='')
		{
			$this->db->where('in_photography_profile',$photo_profile);
		}	
		$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1"));
	}
	
	function leave_legs_by_user_id($leg_id,$remove_user_id,$photo_profile='')
	{
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_user_id',$remove_user_id);
		$this->db->where('in_transportation_leg_id',$leg_id);
		if($photo_profile!='')
		{
			$this->db->where('in_photography_profile',$photo_profile);
		}
		$this->db->update('tbl_transportation_participants',array("in_deleted"=>"1"));
	}
	
	#*********************************************************************************************
	#	Function	:	leave_legs
	#	Purpouse	:	leave the leg by driver user 
	#*********************************************************************************************	
	function delete_legs_transport($leg_id)
	{
		$arrData = array("in_deleted"=>1);
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->update("tbl_transportation_leg_detail",$arrData);
		$arrData = array("in_deleted"=>1);
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->update("tbl_transportation_leg",$arrData);
		$arrData = array("in_deleted"=>1);
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->update("tbl_transportation_participants",$arrData);
		$arrData = array("in_deleted"=>1);
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->update("tbl_routes",$arrData);
		
	}
	
	#*********************************************************************************************
	#	Function	:	leave_legs
	#	Purpouse	:	leave the leg by driver user 
	#*********************************************************************************************	
	function get_driver_details($tra_id,$drivers='')
	{
		$result_array = array();
		//SELECT u.st_display_name,u.st_profile_image,pr.st_city,pr.st_state,pr.st_zip FROM  tbl_users u,tbl_user_profile pr,tbl_transportation_participants p WHERE pr.in_user_id=u.in_user_id AND pr.in_user_id=p.in_user_id
		$this->db->select("p.in_tr_pr_id,u.in_user_id,concat(u.st_display_name,' ',u.st_last_name) as st_display_name,u.st_profile_image,u.in_public,u.st_email,pr.st_city,pr.st_state,pr.st_zip,pr.st_primary_phone, pr.st_driver, pr.st_pilot, pr.st_foster_home, pr.st_photographer, pr.st_in_person_volunteer, pr.st_virtual_support_volunteer,ps.st_contact",FALSE);
		$where = array(	"p.in_deleted"			=> "0",
						"pr.in_deleted"			=> "0",
						"u.in_deleted"			=> "0",
						"p.in_transportation_id"	=> $tra_id);
		$this->db->from("tbl_transportation_participants p");
		$this->db->from("tbl_users u");
		$this->db->from("tbl_user_profile pr");
		$this->db->join('tbl_user_profile_setting ps','ps.in_user_id=u.in_user_id  AND ps.in_deleted=0','LEFT');
		$this->db->where($where);
		if($drivers!='')
		{
			$this->db->where("p.in_transportation_leg_id!='0'",FALSE,FALSE);	
		}
		$this->db->where("pr.in_user_id=p.in_user_id",FALSE,FALSE);
		$this->db->where("pr.in_user_id=u.in_user_id",FALSE,FALSE);
		$this->db->group_by('u.in_user_id');
		$query =	$this->db->get();
		//echo $this->db->last_query();die;<br />
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		}
		return $result_array;
	}
	

	#*********************************************************************************************
	#	Function	:	get_legs_participants
	#	Purpouse	:	Session User is already join leg or not
	#*********************************************************************************************	
		
	function get_legs_participants($leg_id,$join='',$photo_profile='')
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_leg_id"		=> $leg_id,
						"in_transportation_id"	=> $this->session->userdata('transport_id'));
		if($join=='')
		{				
			$where['in_user_id'] = $this->session->userdata('userid');				
		}
		if($photo_profile!='')
		{				
			$where['in_photography_profile'] = $photo_profile;				
		}
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();
		return $query->num_rows();
	}
	
	
	function get_leg_details($leg_id)
	{
//SELECT l.in_transportation_leg_id,in_transportation_id,st_leg_type,st_street,st_city,st_zip,dt_start_time,st_timezone FROM tbl_transportation_leg l,tbl_transportation_leg_detail ld WHERE ld.in_transportation_leg_id=l.in_transportation_leg_id AND l.in_transportation_leg_id='3'
		$this->db->select("l.in_transportation_leg_id,in_transportation_id,st_leg_type,in_route_type,st_street,st_state,st_city,st_zip,dt_start_time,st_timezone,l.in_status as mark_completed,ld.st_country,l.in_sort_order,l.st_leg_instruction");
		$where = array(	"l.in_deleted"				=> "0",
						"l.in_transportation_leg_id"	=> $leg_id);
		$this->db->from("tbl_transportation_leg l");
		$this->db->from("tbl_transportation_leg_detail ld");
		$this->db->where("ld.in_transportation_leg_id=l.in_transportation_leg_id",NULL,FALSE);
		$this->db->where($where);
		$query =	$this->db->get();
		$arrData = array();
		$arrData1 = array();
		$arrData2 = array();
	//	echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$airport_details = array("st_latitude"=>"","st_longitude"=>"");
			foreach($query->result() as $Row)
			{
				if($Row->st_leg_type=="O")
				{		
					$arrData1['leg_type_O']			= $Row->st_leg_type;
					$arrData1['leg_id']				= $Row->in_transportation_leg_id;
					$arrData1['route_type']			= $Row->in_route_type;
					$arrData1['mark_completed']		= $Row->mark_completed;
					$arrData1['pick_street']		= $Row->st_street;
					$arrData1['pick_state']			= $Row->st_state;
					$arrData1['pick_city']			= $Row->st_city;
					$arrData1['pick_zip']			= $Row->st_zip;
					$arrData1['pick_country']		= $Row->st_country;
					$arrData1['pick_start_time']	= $Row->dt_start_time;
					$arrData1['pick_timezone']		= $Row->st_timezone;	
					$arrData1['sort_order']			= $Row->in_sort_order;
					$arrData1['leg_instruction']	= $Row->st_leg_instruction;
				}
				
				if($Row->st_leg_type=="P")
				{
					if($Row->in_route_type=='1')
					{
						$airport_details = $this->get_airport_details($Row->st_street);
					}		
					$arrData1['leg_type_P']			= $Row->st_leg_type;
					$arrData1['leg_id']				= $Row->in_transportation_leg_id;
					$arrData1['route_type']			= $Row->in_route_type;
					$arrData1['mark_completed']		= $Row->mark_completed;
					$arrData1['pick_street']		= $Row->st_street;
					$arrData1['pick_state']			= $Row->st_state;
					$arrData1['pick_city']			= $Row->st_city;
					$arrData1['pick_zip']			= $Row->st_zip;
					$arrData1['pick_country']		= $Row->st_country;
					$arrData1['pick_start_time']	= $Row->dt_start_time;
					$arrData1['pick_timezone']		= $Row->st_timezone;
					$arrData1['pick_lat']			= (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '')  ? $airport_details['st_latitude'] : '';
					$arrData1['pick_lng']			= (isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '') ? $airport_details['st_longitude'] : '';			
					$arrData1['sort_order']			= $Row->in_sort_order;
					$arrData1['leg_instruction']	= $Row->st_leg_instruction;	
				}
				if($Row->st_leg_type=="D")
				{
					if($Row->in_route_type=='1')
					{
						$airport_details = $this->get_airport_details($Row->st_street);
					}
					$arrData2['leg_type_D']			= $Row->st_leg_type;
					$arrData2['leg_id']				= $Row->in_transportation_leg_id;
					$arrData1['route_type']			= $Row->in_route_type;
					$arrData2['mark_completed']		= $Row->mark_completed;
					$arrData2['drop_street']		= $Row->st_street;
					$arrData2['drop_state']			= $Row->st_state;
					$arrData2['drop_city']			= $Row->st_city;
					$arrData2['drop_zip']			= $Row->st_zip;
					$arrData1['drop_country']		= $Row->st_country;
					$arrData2['drop_start_time']	= $Row->dt_start_time;
					$arrData2['drop_timezone']		= $Row->st_timezone;
					$arrData2['drop_lat']			= (isset($airport_details['st_latitude']) && $airport_details['st_latitude'] != '')  ? $airport_details['st_latitude'] : '';
					$arrData2['drop_lng']			= (isset($airport_details['st_longitude']) && $airport_details['st_longitude'] != '')  ? $airport_details['st_longitude'] : '';		
					$arrData2['sort_order']			= $Row->in_sort_order;
					$arrData1['leg_instruction']	= $Row->st_leg_instruction;	
				}
			}
		}
		$arrData = array_merge($arrData1,$arrData2);
		return $arrData;
	}
	#*********************************************************************************************
	#	Function	:	get_feeds
	#	Purpouse	:	Get Trasporttaion feeds
	#*********************************************************************************************		
	
	function get_feeds($transport_id,$start = '',$end = '')
	{
		$data = array();
		$this->db->select('	n.in_notification_id, 
						n.in_organization_id, 
						n.in_transportation_id, 
						n.st_notification_msg,  
						n.in_modified_by, 
						n.dt_created,
						n.in_type, 
						n.in_non_doobert_user_id,
						nd.st_name,
						o.st_org_image,
						o.st_org_code,
						o.st_org_name,
						u.st_profile_image,
						u.st_display_name as full_name,
						u.in_user_id,
						t.dt_pickup_date,t.dt_target,
						t.dt_created as tr_date,
						t.st_from_city,t.st_from_state,t.st_from_zip,
						t.st_to_city,t.st_to_state,t.st_to_zip,
						tl.in_sort_order,
						v.fl_doobert_verified,
						up.st_arpa_cert,
						up.dt_arpa_cert,
						up.st_arpa_cert_foster,
						up.dt_arpa_foster_date,
						up.st_arpa_cert_tnr,
						up.dt_arpa_tnr_date');
		$this->db->from('tbl_notification n');
		$this->db->join('tbl_transportation_leg tl','tl.in_transportation_leg_id=n.in_transport_leg_id','LEFT');
		$this->db->join('tbl_users u','u.in_user_id=n.in_modified_by','LEFT');
		$this->db->join('tbl_user_profile up','up.in_user_id=n.in_modified_by','LEFT');
		$this->db->join('tbl_verification v','v.in_user_id=n.in_modified_by','LEFT');
		$this->db->join('tbl_non_doobert_transport_users nd','nd.in_non_doobert_user_id=n.in_non_doobert_user_id','LEFT');
		$this->db->join('tbl_transportation t','t.in_transportation_id=n.in_transportation_id','INNER');
		$this->db->join('tbl_organization o','o.in_organization_id = t.in_organization_id AND o.in_deleted="0"','INNER');
		$this->db->where('n.in_deleted',0);
		$this->db->where('n.in_transportation_id',$transport_id);
		$this->db->order_by('n.in_notification_id','DESC');
		
		if($start != '') {
			$this->db->limit($end,$start);
		} else {
			$this->db->limit(10);
		}
		
		$query =	$this->db->get();
		//echo $this->db->last_query();
		foreach($query->result_array() as $row) {
			$data[] = 	array(	'in_type'	=>	$row['in_type'],
								'org_name'	=>	$row['st_org_name'],
								'org_code'	=>	$row['st_org_code'],
								'org_image'	=>	$row['st_org_image'],
								'transportation_id' => $row['in_transportation_id'],
								'organization_id' => $row['in_organization_id'],
									
								'from_city'	=>	$row['st_from_city'],
								'from_state'=>	$row['st_from_state'],
								'from_zip'	=>	$row['st_from_zip'],
									
								'to_city'	=>	$row['st_to_city'],
								'to_state'	=>	$row['st_to_state'],
								'to_zip'	=>	$row['st_to_zip'],
								
								'dt_created' => $row['tr_date'],
								'message'	=>	$row['st_notification_msg'],
								'target_date' => $row['dt_target'],
								'pickup_date' => $row['dt_pickup_date'],
								'notification_date' => $row['dt_created'],
								'user_name' => $row['full_name'],
								'user_image' => $row['st_profile_image'],
								'user_id' => $row['in_user_id'],
								'st_name' => $row['st_name'],
								'in_notification_id' => $row['in_notification_id'],
								'in_sort_order' => $row['in_sort_order'],
								'st_arpa_cert'         => $row['st_arpa_cert'],
								'dt_arpa_cert'  	   => $row['dt_arpa_cert'],
								'st_arpa_cert_foster'  => $row['st_arpa_cert_foster'],
								'dt_arpa_foster_date'  => $row['dt_arpa_foster_date'],
								'st_arpa_cert_tnr'     => $row['st_arpa_cert_tnr'],
								'dt_arpa_tnr_date'     => $row['dt_arpa_tnr_date'],
								'doobert_verified'     => $row['fl_doobert_verified'],	
							); 
		}
		//return $query->result_array();
		return $data;
	}
	
	#*********************************************************************************************
	#	Function	:	get_feeds_count
	#	Purpouse	:	Get Trasporttaion feeds count
	#*********************************************************************************************		
	function get_feeds_count($transport_id)
	{
		$this->db->select('	n.in_notification_id');
			$this->db->from('tbl_notification n');
			$this->db->join('tbl_users u','u.in_user_id=n.in_modified_by','INNER');
			$this->db->join('tbl_transportation t','t.in_transportation_id=n.in_transportation_id','INNER');
			$this->db->join('tbl_organization o','o.in_organization_id = t.in_organization_id','INNER');
			$this->db->where('n.in_deleted',0);
			$this->db->where('n.in_transportation_id',$transport_id);
			$this->db->order_by('n.in_notification_id','DESC');
			$query =	$this->db->get();
			return $query->num_rows();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_transport_coodrdinator	
	#	Purpose		:	Get all Transport coordinate associate with current organization
	# *******************************************************************************************	
	public function get_transport_coodrdinator($org_id)
	{
		//SELECT in_org_user_id FROM tbl_organization_user ou INNER JOIN tbl_users u ON ou.in_user_id = u.in_user_id WHERE ou.in_organization_id=5 AND ou.in_deleted=0 AND u.in_deleted=0
		
		$this->db->select('concat(u.st_display_name," ",u.st_last_name) as st_display_name,st_email as user_email',FALSE);
		$this->db->from('tbl_organization_user as ou');
		$this->db->join('tbl_users as u','ou.in_user_id = u.in_user_id','INNER');
		$this->db->where('ou.in_organization_id',$org_id);
		$this->db->where('ou.in_deleted',0);
		$this->db->where('u.in_deleted',0);
		$this->db->where('ou.st_transport_cood',"Y");
		$query = $this->db->get();
		return $query->result_array();
	}
	
	function decodePolylineToArray($encoded)
	{
	  $length = strlen($encoded);
	  $index = 0;
	  $points = array();
	  $lat = 0;
	  $lng = 0;
	
	  while ($index < $length)
	  {
		// Temporary variable to hold each ASCII byte.
		$b = 0;
	
		// The encoded polyline consists of a latitude value followed by a
		// longitude value.  They should always come in pairs.  Read the
		// latitude value first.
		$shift = 0;
		$result = 0;
		do
		{
		  // The `ord(substr($encoded, $index++))` statement returns the ASCII
		  //  code for the character at $index.  Subtract 63 to get the original
		  // value. (63 was added to ensure proper ASCII characters are displayed
		  // in the encoded polyline string, which is `human` readable)
		  $b = ord(substr($encoded, $index++)) - 63;
	
		  // AND the bits of the byte with 0x1f to get the original 5-bit `chunk.
		  // Then left shift the bits by the required amount, which increases
		  // by 5 bits each time.
		  // OR the value into $results, which sums up the individual 5-bit chunks
		  // into the original value.  Since the 5-bit chunks were reversed in
		  // order during encoding, reading them in this way ensures proper
		  // summation.
		  $result |= ($b & 0x1f) << $shift;
		  $shift += 5;
		}
		// Continue while the read byte is >= 0x20 since the last `chunk`
		// was not OR'd with 0x20 during the conversion process. (Signals the end)
		while ($b >= 0x20);
	
		// Check if negative, and convert. (All negative values have the last bit
		// set)
		$dlat = (($result & 1) ? ~($result >> 1) : ($result >> 1));
	
		// Compute actual latitude since value is offset from previous value.
		$lat += $dlat;
	
		// The next values will correspond to the longitude for this point.
		$shift = 0;
		$result = 0;
		do
		{
		  $b = ord(substr($encoded, $index++)) - 63;
		  $result |= ($b & 0x1f) << $shift;
		  $shift += 5;
		}
		while ($b >= 0x20);
	
		$dlng = (($result & 1) ? ~($result >> 1) : ($result >> 1));
		$lng += $dlng;
	
		// The actual latitude and longitude values were multiplied by
		// 1e5 before encoding so that they could be converted to a 32-bit
		// integer representation. (With a decimal accuracy of 5 places)
		// Convert back to original values.
		$points[] = array($lat * 1e-5, $lng * 1e-5);
	  }
	
	  return $points;
	}
	
	function get_route_miles($origin_zip,$dest_zip,$base='',$type='')
	{
		//echo '<br/> Origin: '.$origin.', Destination: '.$destination;
		$google_api_key = $this->config->item('googleapi_key');
		if($type==1)
		{
			$mode = 'driving';
		}
		else
		{
			$mode = 'driving';
		}
		$distance = '0';
		//$url = "http://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=true&sensor=false";
		if($base)
		{	
			$base =urlencode($base);
			//&key=AIzaSyCojCr2_VZfJVrtLAYBZCkSjeV1vkidvyI
			//AIzaSyCHr0omexe8lVMgkkVRRVF79EZvF78Fi4c
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&waypoints=optimize:true$base&mode=$mode&alternatives=false&sensor=false&key=$google_api_key";
		}
		else
		{
			//AIzaSyCHr0omexe8lVMgkkVRRVF79EZvF78Fi4c
			//AIzaSyDHWsjEomsjGFW3rtDig5MjC5Ydi63Lj_Q 		//prof-key
			//$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=true&key=AIzaSyCHr0omexe8lVMgkkVRRVF79EZvF78Fi4c";
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=true&key=$google_api_key";
		}
		//echo $url."<br><br><br>";//die;
		// create curl resource
		$ch = curl_init();
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		// $output contains the output string
		$output = curl_exec($ch);
		// close curl resource to free up system resources
		curl_close($ch);
		//echo $output;die;
		$response_array = json_decode($output, TRUE);
		//echo "<pre>";print_r($response_array);die;
		//echo '<br/>'.$url;
		/*$url = "https://maps.googleapis.com/maps/api/directions/json?waypoints=optimize:true|$origin_zip||$dest_zip&sensor=false";
		$res	= file_get_contents($url);			
		$response_array = json_decode($res, TRUE);	*/
		
		if($response_array['status'] == 'OK')
		{
				$tmp_miles_array = array();
				$routes = $response_array['routes'];
				//echo 'base<pre>';
				//print_r($routes[0]);
				//die;
				$dist = 0;
				$duration_value = '';
				$new_arr = array();
				for($a=0;$a<count($routes[0]['legs']);$a++)
				{
					$map_routes = $routes[0]['legs'][$a]['steps'];
					//print_r($map_routes);die;
					if($type=='1')
					{
						$ploy_line[] = array($routes[0]['legs'][$a]['start_location']['lat'],$routes[0]['legs'][$a]['start_location']['lng']);
						$ploy_line[] = array($routes[0]['legs'][$a]['end_location']['lat'],$routes[0]['legs'][$a]['end_location']['lng']);
						$new_arr = array_merge($new_arr,$ploy_line);
					}
					/*else
					{
						foreach($map_routes as $key=>$route)
						{
							$ploy_line = '';
							$ploy_line = $this->decodePolylineToArray($route['polyline']['points']);
							$new_arr = array_merge($new_arr,$ploy_line);
						}
					}*/
					$miles_value = preg_replace("/[^0-9.]/", "", $routes[0]['legs'][$a]['distance']['text']);
					$dist = $dist+ $miles_value;
					$total_time 	= $routes[0]['legs'][$a]['duration']['value'];
					$duration_value = $duration_value + $total_time;
				}
				if($type!='1')
				{
					$ploy_line = $this->decodePolylineToArray($routes[0]['overview_polyline']['points']);
					$new_arr = array_merge($new_arr,$ploy_line);
				}
				$routes_lat['routes_lat_lon'] = $new_arr;
				$routes_lat['distance'] 	  = $dist;
				$routes_lat['route_path'] 	  = $routes[0]['overview_polyline']['points'];
				$routes_lat['duration_value'] = $duration_value;
				//echo '<pre>';print_r($routes_lat);die;
				return ($routes_lat);			
		}
		else
		{
			return (array("routes_lat_lon"=>"","distance"=> "0","route_path"=>"","duration_value"=>"0"));
		}
	}
	
	function get_route_miles_after_delete_leg($origin_zip,$dest_zip,$base='',$type='')
	{
		//echo '<br/> Origin: '.$origin.', Destination: '.$destination;
		//echo '<br/> Origin: '.$origin_zip.', Destination: '.$dest_zip;
		$google_api_key = $this->config->item('googleapi_key');
		if($type==1)
		{
			$mode = 'driving';
		}
		else
		{
			$mode = 'driving';
		}
		$distance = '0';
		//$url = "http://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=true&sensor=false";
		if($base)
		{	
			$base =urlencode($base);
			//&key=AIzaSyCojCr2_VZfJVrtLAYBZCkSjeV1vkidvyI
			//&key=AIzaSyABuKkPLIoKopiDXNmb5r9k4doDJaPgtt8
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&waypoints=optimize:true$base&mode=$mode&alternatives=false&sensor=false&key=$google_api_key";
		}
		else
		{
			$url = "https://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=true&key=$google_api_key";
		}
		//echo $url."<br><br><br>";//die;
		// create curl resource
		$ch = curl_init();
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		// $output contains the output string
		$output = curl_exec($ch);
		// close curl resource to free up system resources
		curl_close($ch);
		//echo $output;die;
		$response_array = json_decode($output, TRUE);
		//echo "<pre>";print_r($response_array);die;
		//echo '<br/>'.$url;
		/*$url = "https://maps.googleapis.com/maps/api/directions/json?waypoints=optimize:true|$origin_zip||$dest_zip&sensor=false";
		$res	= file_get_contents($url);			
		$response_array = json_decode($res, TRUE);	*/
		
		if($response_array['status'] == 'OK')
		{
				$tmp_miles_array = array();
				$routes = $response_array['routes'];
				//echo 'base<pre>';
				//print_r($routes[0]);
				//die;
				$dist = 0;
				$new_arr = array();
				for($a=0;$a<count($routes[0]['legs']);$a++)
				{
					$map_routes = $routes[0]['legs'][$a]['steps'];
					//print_r($map_routes);die;
					if($type=='1')
					{
						$ploy_line[] = array($routes[0]['legs'][$a]['start_location']['lat'],$routes[0]['legs'][$a]['start_location']['lng']);
						$ploy_line[] = array($routes[0]['legs'][$a]['end_location']['lat'],$routes[0]['legs'][$a]['end_location']['lng']);
						$new_arr = array_merge($new_arr,$ploy_line);
					}
					/*else
					{
						foreach($map_routes as $key=>$route)
						{
							$ploy_line = '';
							$ploy_line = $this->decodePolylineToArray($route['polyline']['points']);
							$new_arr = array_merge($new_arr,$ploy_line);
						}
					}*/
					$miles_value = preg_replace("/[^0-9.]/", "", $routes[0]['legs'][$a]['distance']['text']);
					$dist = $dist+ $miles_value;
				}
				if($type!='1')
				{
					$ploy_line = $this->decodePolylineToArray($routes[0]['overview_polyline']['points']);
					$new_arr = array_merge($new_arr,$ploy_line);
				}
				$routes_lat['routes_lat_lon'] = $new_arr;
				$routes_lat['distance'] 	  = $dist;
				$routes_lat['route_path'] 	  = $routes[0]['overview_polyline']['points'];
				//echo '<pre>';print_r($routes_lat);die;
				return ($routes_lat);			
		}
		else
		{
			return (array("routes_lat_lon"=>"","distance"=> "0","route_path"=>""));
		}
	}	
		
	# *******************************************************************************************	
	#	Function	:	delete_user_legs	
	#	Purpose		:	Delete driver legs
	# *******************************************************************************************	
	public function delete_user_legs($leg_id,$photography_leg='')
	{
			$res = $this->get_legs_participants($leg_id);
			if($res>0)
			{
			
				$tra_id			= $this->session->userdata('transport_id');
				$transport_details 	= $this->get_transport_details($tra_id);
				//if($transport_details[0]['st_trans_type'] != 'D')
				//{
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->where('in_user_id',$this->session->userdata('userid'));
				if($photography_leg!='')
				{
					$this->db->where('in_photography_profile',$photography_leg);
				}
				$this->db->update("tbl_transportation_participants",$arrData);
				//}
				if($transport_details[0]['st_trans_type'] == 'D' && $transport_details[0]['in_airline_transport'] == '1')
				{
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg_detail",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_routes",$arrData);
				}
				//echo $this->db->last_query();die;
			}
	}
	
		
	function get_legs_participants_by_user_id($leg_id,$user_id,$photo_leg_type='0')
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_leg_id"		=> $leg_id,
						"in_transportation_id"	=> $this->session->userdata('transport_id'),
						"in_photography_profile" => $photo_leg_type
						);
		if($user_id != '')
		{				
			$where['in_user_id'] = $user_id;				
		}
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();
		return $query->num_rows();
	}
	
	public function delete_user_leg_by_user_id($leg_id,$user_id,$photography_leg='')
	{	
			$res = $this->get_legs_participants_by_user_id($leg_id,$user_id,$photography_leg);
			if($res>0)
			{
				
				$tra_id			= $this->session->userdata('transport_id');
				$transport_details 	= $this->get_transport_details($tra_id);
					
				//if($transport_details[0]['st_trans_type'] != 'D')
				//{
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->where('in_user_id',$user_id);
				if($photography_leg!='')
				{
					$this->db->where('in_photography_profile',$photography_leg);
				}
				
					
				$this->db->update("tbl_transportation_participants",$arrData);
				
				//}
				if($transport_details[0]['st_trans_type'] == 'D' && $transport_details[0]['in_airline_transport'] == '1')
				{
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg_detail",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_routes",$arrData);
				}
				//echo $this->db->last_query();die;
			}
	}
	
	
	# *******************************************************************************************	
	#	Function	:	update_distance	
	#	Purpose		:	Update cover distance
	# *******************************************************************************************	
	public function update_distance($distance)
	{
				/*$arrData = array("in_distance_covered=(in_distance_covered-".$distance.")",FALSE);
				$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
				$this->db->update("tbl_transportation",$arrData);*/
				$query = $this->db->query("UPDATE tbl_transportation SET in_distance_covered = if(((in_distance_covered-".$distance.")<=0),'0',(in_distance_covered-".$distance.")) WHERE in_transportation_id='".$this->session->userdata('transport_id')."'");
				//echo $this->db->last_query();die;
	}
	
	# *******************************************************************************************	
	#	Function	:	update_distance	
	#	Purpose		:	Update cover distance
	# *******************************************************************************************	
	public function add_distance($distance)
	{
				/*$arrData = array("in_distance_covered=(in_distance_covered-".$distance.")",FALSE);
				$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
				$this->db->update("tbl_transportation",$arrData);*/
				$query = $this->db->query("UPDATE tbl_transportation SET in_distance_covered = if(((in_distance_covered+".$distance.")>=in_tot_distance),in_tot_distance,(in_distance_covered+".$distance.")) WHERE in_transportation_id='".$this->session->userdata('transport_id')."'");
				//echo $this->db->last_query();die;
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_trans_legs_user	
	#	Purpose		:	Get current user legs
	# *******************************************************************************************	
	
	public function get_trans_legs_user($user='',$route='')
	{	

		$this->db->select('l.in_transportation_leg_id,l.in_route_type,l.in_sort_order,l.in_status as mark_completed,d.st_leg_type, d.st_street, d.st_city, d.st_state, d.st_zip, d.dt_start_time, d.st_timezone,p.in_user_id,p.in_transportation_leg_id as in_source_leg_id,concat(u.st_display_name," ",u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state, ',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id = l.in_transportation_leg_id','INNER');
		$this->db->join('tbl_transportation_participants p','p.in_transportation_leg_id = l.in_transportation_leg_id AND p.in_deleted=0','INNER');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','INNER');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->join('tbl_user_vehicle v','v.in_user_id = u.in_user_id AND v.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_pilot vp','vp.in_user_id = u.in_user_id AND vp.in_deleted = 0','LEFT');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('p.in_user_id',$this->session->userdata('userid'));
		$this->db->where('p.in_photography_profile',0);
		if($route!='')
		{
			$this->db->where('l.in_route_type',$route);
		}
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');		
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());//die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				
				$arrData[$Row->in_transportation_leg_id]['user_id']			= $Row->in_user_id;
				$arrData[$Row->in_transportation_leg_id]['leg_order']		= $Row->in_sort_order;
				$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
				$arrData[$Row->in_transportation_leg_id]['source_leg_id']	= $Row->in_source_leg_id;
				$arrData[$Row->in_transportation_leg_id]['display_name']	= ($Row->st_display_name==''|| $Row->st_display_name=='null')?"":$Row->st_display_name;
				$arrData[$Row->in_transportation_leg_id]['profile_image']	= $Row->st_profile_image;
				$arrData[$Row->in_transportation_leg_id]['pr_address1']		= $Row->pr_st_address1;
				$arrData[$Row->in_transportation_leg_id]['pr_city']			= $Row->pr_st_city;
				$arrData[$Row->in_transportation_leg_id]['pr_state']		= $Row->pr_st_state;
				$arrData[$Row->in_transportation_leg_id]['pr_zip']			= $Row->pr_st_zip;
				$arrData[$Row->in_transportation_leg_id]['user_email']		= $Row->user_email;
				$arrData[$Row->in_transportation_leg_id]['primary_phone']	= $Row->st_primary_phone;
				$arrData[$Row->in_transportation_leg_id]['vehicle_type']			= $Row->st_vehicle_type;
				$arrData[$Row->in_transportation_leg_id]['vehicle_color']			= $Row->st_vehicle_color;
				$arrData[$Row->in_transportation_leg_id]['vehicle_license_plate']	= $Row->st_vehicle_license_plate;
				$arrData[$Row->in_transportation_leg_id]['vehicle_license_state']	= $Row->st_vehicle_license_state;
				$arrData[$Row->in_transportation_leg_id]['mark_completed']			= $Row->mark_completed;
				if($Row->st_leg_type=="P")
				{			
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;				
				}
				
				if($Row->st_leg_type=="D")
				{
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;	
				}
				
				if($Row->st_leg_type=="O")
				{
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['overnight_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['overnight_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['overnight_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['overnight_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['overnight_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['overnight_timezone']	= $Row->st_timezone;	
				}
			}
			//echo "<pre>";print_r($arrData);die;
			return $arrData;
		}
	}
	
	function get_all_legs($all='')
	{
		//SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
		$this->db->select('in_transportation_leg_id');
		$this->db->from('tbl_transportation_participants');
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_deleted','0');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->result_array();
	}
	
	function get_all_transport_monitors()
	{
		$this->db->select('tp.in_tr_pr_id,tp.in_transportation_id,tp.in_user_id,tp.in_transportation_leg_id,tp.in_created_by,tp.in_modified_by,tp.in_monitor,tp.dt_created,u.st_email,concat(u.st_display_name," ",u.st_last_name) as st_display_name,u.st_profile_image,u.in_public,p.st_address1,p.st_city,p.st_state,p.st_zip',FALSE);
		$this->db->from('tbl_transportation_participants tp');
		$this->db->join("tbl_users u","u.in_user_id = tp.in_user_id","INNER");
		$this->db->join("tbl_user_profile p ","p.in_user_id = tp.in_user_id","INNER");
		$this->db->where('tp.in_transportation_id',$this->session->userdata('transport_id'));
		//$this->db->where('tp.in_user_id',$this->session->userdata('userid'));
		$this->db->where('tp.in_deleted','0');
		$this->db->where('tp.in_monitor','1');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->result_array();
	}
	
	#*********************************************************************************************
	#	Function	:	get_num_driver
	#	Purpouse	:	Get number of drivers
	#*********************************************************************************************	
	function get_num_driver($tra_id,$driver='')
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_id"	=> $tra_id);
		if($driver!='')
		{
			$this->db->where("in_transportation_leg_id!=","0",FALSE);
		}
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();
		//echo $this->db->last_query();
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	insert_tbl_route	
	#	Purpose		:	Insert in route table but new database
	# *******************************************************************************************	

	function insert_tbl_route($table_name,$arrData)
	{
		$DB2 = $this->load->database('route_data', TRUE);
		$user_id = $DB2->insert($table_name, $arrData);
		$DB2->insert_id();	
		//echo "<br>".$this->db->last_query()."<br><br><br>";
		$this->load->database('default', TRUE);	
		return  $DB2->insert_id();
	}
	# *******************************************************************************************	
	#	Function	:	get_routes	
	#	Purpose		:	Get existing routes
	# *******************************************************************************************	
	public function get_db_routes($source_zip,$dest_zip)
	{
		$DB2 = $this->load->database('route_data', TRUE);		
		$DB2->select('st_source_zip,st_dest_zip,in_distance,st_route');
		$DB2->from('tbl_route');
		$DB2->where('st_source_zip',$source_zip);
		$DB2->where('st_dest_zip',$dest_zip);
		$query = $DB2->get();
		$this->load->database('default', TRUE);
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_user_details	
	#	Purpose		:	Get User details
	# *******************************************************************************************
	
	public function get_user_details() {
		$this->db->select('st_zip');
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_time_zone	
	#	Purpose		:	Get Time zone
	# *******************************************************************************************
	
	public function get_time_zone($zip_code) {
		$this->db->select('st_time_zone');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zip_code);
		$query = $this->db->get();
		//$this->db->last_query();
		return $query->row_array();
	}

	# *******************************************************************************************	
	#	Function	:	delete_all_legs_trans	
	#	Purpose		:	Delete transportation legs
	# *******************************************************************************************	
	/*public function delete_all_legs_trans($tra_id)
	{
		$this->db->where('l.in_transportation_leg_id=ld.in_transportation_leg_id',FALSE,FALSE);
		$this->db->where('in_transportation_id',$tra_id);
		$this->db->where('ld.in_deleted',"0");
		$this->db->where('l.in_deleted',"0");
		$this->db->update('tbl_transportation_leg l,tbl_transportation_leg_detail ld',array("ld.in_deleted"=>"1","l.in_deleted"=>"1"),FALSE,FALSE);
		echo $this->db->last_query();
	}*/
	public function delete_all_legs_trans($tra_id)
	{
		$sql = "UPDATE `tbl_transportation_leg` `l`,`tbl_transportation_leg_detail` `ld` SET `ld`.`in_deleted` = '1', `l`.`in_deleted` = '1'
			    WHERE l.in_transportation_leg_id=ld.in_transportation_leg_id
				AND `in_transportation_id` = $tra_id
				AND `ld`.`in_deleted` = '0'
				AND `l`.`in_deleted` = '0'";
		$this->db->query($sql);
	}


	# *******************************************************************************************	
	#	Function	:	get_transport_cordinator	
	#	Purpose		:	Get transportation legs
	# *******************************************************************************************		
	public function get_transport_cordinator($user_id='',$org_id='') {
		$this->db->select('in_org_user_id');
		$this->db->from('tbl_organization_user');
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_deleted',"0");
		$this->db->where('in_status',"1");
		$this->db->where('in_user_id',$user_id);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	
	# *******************************************************************************************	
	#	Function	:	get_all_draft_transportation	
	#	Purpose		:	Getting all Draft transportation
	# *******************************************************************************************
	
	public function get_all_draft_transportation($limit,$start,$userid,$org_id) {
		$data= array();
		
		$this->db->select('SQL_CALC_FOUND_ROWS t.in_transportation_id,t.in_organization_id,t.in_airline_transport,t.in_trans_coods_id,t.st_from_street,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_target,t.dt_pickup_date,t.st_trans_type,t.dt_created,concat(u.st_display_name," ",u.st_last_name) as st_display_name,o.st_org_code',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->join('tbl_users u','u.in_user_id=t.in_trans_coods_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		$this->db->where('t.in_status',4);
		$this->db->where('t.st_trans_type!="RO"');
		$this->db->where('t.in_organization_id',$org_id);	
		if($this->session->userdata('draft_search'))
		{
			#st_display_name
			$this->db->where('(t.in_transportation_id LIKE "'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%"  )',FALSE,FALSE);	
		}
		$this->db->order_by('t.in_transportation_id','DESC');
		$this->db->limit($limit,$start);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				if($row['st_trans_type']=="R")
				{
					$transport_status="Ride";
				} else if($row['st_trans_type']=="D")
				{
					if($row['in_airline_transport']=="0")
					{	
						$transport_status="Assisted";
					} else {
						$transport_status="Airline";
					}	
				}else if($row['st_trans_type']=="U")
				{
					$transport_status="Undefined";
				} else {
					$transport_status="Pre-Specify";		
				}
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												'org_id'				=>	$row['in_organization_id'],
												'org_code'				=>	$row['st_org_code'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'pickup_date'			=>	$row['dt_pickup_date'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],
												'transport_status'		=>  $transport_status,
												'enable_routing_status' => $row['enable_routing_status']
																								
											);
			}
		}
		
		return $data;
		
	}
	function delete_transport($transport_id)
	{
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->update('tbl_transportation',array("in_deleted"=>"1"));
		$this->delete_all_legs_trans($transport_id);
	}
	
	
		
	# *******************************************************************************************	
	#	Function	:	get_all_preplan_transportation	
	#	Purpose		:	Getting all preplan transportation
	# *******************************************************************************************
	
	public function get_all_preplan_transportation($limit,$start,$userid,$org_id) {
		$data= array();
		
		$this->db->select('SQL_CALC_FOUND_ROWS t.in_transportation_id,t.in_organization_id,t.in_trans_coods_id,t.st_from_street,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_target,t.st_trans_type,t.dt_created,concat(u.st_display_name," ",u.st_last_name) as st_display_name,o.st_org_code',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->join('tbl_users u','u.in_user_id=t.in_trans_coods_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		$this->db->where_in('t.in_status',array('1','2'));
		$this->db->where('t.st_trans_type','P');
		$this->db->where('t.in_routes_copy_from',0);
		$this->db->where('t.in_organization_id',$org_id);	
		if($this->session->userdata('preplan_search'))
		{
			#st_display_name
			$this->db->where('(t.in_transportation_id LIKE "'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%"  )',FALSE,FALSE);	
		}
		$this->db->order_by('t.in_transportation_id','DESC');
		$this->db->limit($limit,$start);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												'org_id'				=>	$row['in_organization_id'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],
												'org_code'				=>	$row['st_org_code']																								
											);
			}
		}
		
		return $data;
		
	}
	
		
	# *******************************************************************************************	
	#	Function	:	get_trans_legs_copy	
	#	Purpose		:	Get Organization animals in selected Transport
	# *******************************************************************************************	
	
	public function get_trans_legs_copy($transport_id)
	{	
		$this->db->select('l.in_transportation_leg_id,l.in_sort_order,d.st_leg_type,st_street,st_city,st_state,st_zip,st_country,dt_start_time,st_timezone,st_meeting_location,in_multi_user,in_user_num,l.in_route_type,l.in_status as mark_completed',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$transport_id);
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				if($Row->st_leg_type=="P")
				{			
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;	
					$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;	
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 09Jan2015
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 09Jan2015	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 09Jan2015
					$arrData[$Row->in_transportation_leg_id]['sort_order']	    = $Row->in_sort_order;	       //added by Nirav on 02Sept2016
				}
				
				if($Row->st_leg_type=="D")
				{
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;	
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;	
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 09Jan2015	
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 09Jan2015	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 09Jan2015
					$arrData[$Row->in_transportation_leg_id]['sort_order']	    = $Row->in_sort_order;	       //added by Nirav on 02Sept2016
				}
				
				//added by ghanshyam on 09Jan2015
				if($Row->st_leg_type=="O")
				{
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']			= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['o_pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['o_pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['o_pick_city']			= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['o_pick_country']		= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['o_pick_start_time']	= $Row->dt_start_time;

					$arrData[$Row->in_transportation_leg_id]['overnight_comments']	= $Row->st_meeting_location;
					$arrData[$Row->in_transportation_leg_id]['sort_order']	    = $Row->in_sort_order;	       //added by Nirav on 02Sept2016	
				}
				
			}
			return $arrData;
		}
	}
	
	public function get_airports($airport_id,$numeric='',$lat_long='')
	{
		$this->db->select("st_loc_id as label,st_loc_id as value,st_state,st_city");
		$this->db->from('tbl_airport');
		if($numeric!='')
		{
			
		}
		else
		{
			$this->db->where('in_deleted',0);
			$this->db->where('st_loc_id LIKE "%'.$airport_id.'%"',FALSE,FALSE);
		}
		$this->db->where('in_deleted',0);
		$this->db->limit("10");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			return $query->result_array();
		}
	}
	function get_airport_details($airport_id)
	{
		$this->db->select("st_state,st_city,st_longitude,st_latitude,st_iso_country");
		$this->db->from('tbl_airport');
		$this->db->where('st_loc_id',$airport_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();
		return $query->row_array();
	}
	
	function get_airports_by_zipcode($lat,$lon,$rad,$R,$maxLat,$minLat,$maxLon,$minLon)
	{
		/*$sql = "Select id,zip_code,lat,lon,
                acos(sin($lat)*sin(radians(lat)) + cos($lat)*cos(radians(lat))*cos(radians(lon)-$lon)) * $R As D
            From (
                Select id,zip_code,lat,lon
                From tbl_zip_code
                Where Lat Between $minLat And $maxLat
                  And Lon Between $minLon And $maxLon
            ) As FirstCut
            Where acos(sin($lat)*sin(radians(lat)) + cos($lat)*cos(radians(lat))*cos(radians(lon)-$lon)) * $R < $rad
            Order by D";
			st_loc_id as label,st_loc_id as value,st_state,st_city
			*/
		// cmd by bhushan 
		/*$sql = "Select in_id,st_loc_id as label,st_loc_id as value,st_state,st_city,st_latitude,st_longitude,
                acos(sin($lat)*sin(radians(st_latitude)) + cos($lat)*cos(radians(st_latitude))*cos(radians(st_longitude)-$lon)) * $R As D
            From (
                Select in_id,st_loc_id,st_state,st_city,st_latitude,st_longitude
                From tbl_airport
                Where st_latitude Between $minLat And $maxLat
                  And st_longitude Between $minLon And $maxLon
				  And in_deleted = 0 
            ) As FirstCut
            Where acos(sin($lat)*sin(radians(st_latitude)) + cos($lat)*cos(radians(st_latitude))*cos(radians(st_longitude)-$lon)) * $R < $rad
            Order by D limit 10";*/
		
			$sql = "Select in_id,st_loc_id as label,st_loc_id as value,st_state,st_city,st_latitude,st_longitude,
               3959 * acos( cos( radians( $lat ) ) * cos( radians( st_latitude ) ) * cos( radians( st_longitude ) -
 radians( $lon ) ) + sin( radians( $lat ) ) * sin( radians( st_latitude ) ) ) As D
                From (
                Select in_id,st_loc_id,st_state,st_city,st_latitude,st_longitude
                From tbl_airport
				  Where st_latitude Between $minLat And $maxLat
                  And st_longitude Between $minLon And $maxLon
				  And in_deleted = 0 
            ) As FirstCut
           
	where ((3959 * acos( cos( radians( $lat ) ) * cos( radians( st_latitude ) ) * cos( radians( st_longitude ) -
 radians( $lon ) ) + sin( radians( $lat ) ) * sin( radians( st_latitude ) ) ) ) < '1000')
	Order by D limit 10";

		$query = $this->db->query($sql);
		//echo '<br/>';
		//echo $this->db->last_query(); exit;
		return $query->result_array();
	}
	
	//function to get aviation range
	function get_system_aviation_range()
	{
		$this->db->select("in_system_id,st_aviation_fly_range");
		$this->db->from('tbl_system');
		$query = $this->db->get();
		//echo $this->db->last_query();
		return $query->row_array();
	}
	
	function get_airport_details1($data='')
	{

		//$aviation_range =  $this->get_system_aviation_range();
		
		//$range_data =  unserialize($aviation_range['st_aviation_fly_range']);
		
		$this->db->select("st_longitude as longitude ,st_latitude as latitude,st_loc_id as name,st_name as id,st_state,st_city,st_iso_country");
		$this->db->from('tbl_airport');
		/*if(isset($data['st_longitude']) && $data['st_longitude']!='' && isset($data['st_latitude']) && $data['st_latitude']!='')
		{
			$user_dist = $data['in_distance_to_pilot'];
			
			$range_data[0]['route_nm'] = $range_data[0]['route_nm']+100;
			$range_data[1]['route_nm'] = $range_data[1]['route_nm']+100;
			$range_data[2]['route_nm'] = $range_data[2]['route_nm']+100;
			
			if($user_dist<=$range_data[0]['nm_to'])
			{
				$user_dist = $range_data[0]['route_nm']*1.15078;
			}
			elseif($user_dist<=$range_data[1]['nm_to'])
			{
				$user_dist = $range_data[1]['route_nm']*1.15078;
			}
			else
			{
				$user_dist = $range_data[2]['route_nm']*1.15078;
			}
			
		$data['in_distance_to_pilot'] = ($data['in_distance_to_pilot'])?$data['in_distance_to_pilot']:"0";	
		$this->db->where('(3959*acos(cos(radians("'.$data['st_latitude'].'"))*cos(radians(st_latitude))*cos(radians(st_longitude)-radians("'.$data['st_longitude'].'"))+sin(radians("'.$data['st_latitude'].'"))*sin(radians(st_latitude))))<="'.$user_dist.'"',FALSE,FALSE);
		}*/
		$this->db->where('in_deleted',0);
		//$this->db->limit(1000);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return  $query->result_array();
	}
	# *******************************************************************************************	
	#	Function	:	delete_animal_files	
	#	Purpose		:	Deleting animal files
	# *******************************************************************************************
	
	public function delete_animal_files($id) {
		$this->db->where('in_transport_file_id',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_transportation_file',$data);
		return $this->db->affected_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_transport_photos	
	#	Purpose		:	delete_transport_photos
	# *******************************************************************************************
	
	public function delete_transport_photos($id) {
		$this->db->where('in_transport_photo_id',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_transportation_photo',$data);
		return $this->db->affected_rows();
	}
	
	function get_legs_path($leg_id)
	{
			$this->db->select('	in_route_id, 
								in_transportation_leg_id, 
								in_transportation_id, 
								in_route_type, 
								st_legs_details, 
								fl_distance, 
								in_deleted');
			$this->db->from('tbl_routes');
			$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
			$this->db->where('in_transportation_leg_id',$leg_id);
			$this->db->where('in_deleted','0');
			$this->db->where_not_in('in_route_type','2'); //added by ghanshyam on 05Dec2014
			$query = $this->db->get();
			//echo "<pre>";print_r($this->db->last_query());die;
			return $query->row_array();
		
	}
	function update_legs_path($arrData,$leg_id)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->where('in_deleted',"0");
		$this->db->update("tbl_routes",$arrData);
		//echo "<pre>";print_r($this->db->last_query());//die;
	}
	function update_airports($airport,$arrData)
	{
		$this->db->where('in_deleted',"0");
		$this->db->where('st_loc_id',$airport);
		$this->db->update("tbl_airport",$arrData);
	}
	
	public function get_airports_update()
	{
		$this->db->select("st_loc_id,st_state,st_city,st_iso_country");
		$this->db->from('tbl_airport');
		$this->db->where('in_deleted',0);
		$this->db->where('(st_city ="" OR st_city IS NULL)',FALSE,FALSE);
		$this->db->limit("10000");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->result_array();
	}
	
	public function get_zipcode($zipcode='',$city='',$state='',$action='')
	{
		$this->db->select("concat(zip_code,', ',city,', ',state_prefix) as label, zip_code as value,city,state_prefix,st_country",FALSE);
		$this->db->from('tbl_zip_code');
		if($action=='')
		{
			$this->db->where('zip_code LIKE "'.$zipcode.'%"',FALSE,FALSE);
			$this->db->limit("10");
		}
		else
		{
		if($city)
		{
			$this->db->where('lower(city) LIKE lower("'.$city.'%")',FALSE,FALSE);
		}
		if($state)
		{
			if(strlen($state) > 2)
			{
				$states_list = $this->common_function->state_list;
				if(in_array(ucfirst($state), $states_list))
				{
					$state_key = array_search(ucfirst($state), $states_list);
					$state = $state_key;
				}
				//echo $state;exit;
			}
			$this->db->where('UPPER(state_prefix) = UPPER("'.$state.'")',FALSE,FALSE);
		}
		$this->db->limit("10");
		}
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
			//echo $Row->st_country;die;
					$arrData[]	= array("label"			=> $Row->label.", ".$this->common_function->shortCountry[trim($Row->st_country)],
										"value"			=> $Row->value,
										"city"			=> $Row->city,
										"state_prefix"	=> $Row->state_prefix,
										"st_country"	=> strtoupper($this->common_function->shortCountry[trim($Row->st_country)])
										);
			}
			return $arrData;
		}
		//return $query->result_array();
	}
	
	public function get_zipcode2($zipcode)
	{
		$this->db->select("concat(zip_code,', ',city,', ',state_prefix) as label, zip_code as value,city,state_prefix,st_country",FALSE);
		$this->db->from('tbl_zip_code');
		
		// if normal 1 char is present 
		if (strpos($zipcode ,',') == false) {
		$this->db->where('zip_code LIKE "'.$zipcode.'%" OR lower(city) LIKE lower("'.$zipcode.'%") OR UPPER(state_prefix) = UPPER("'.trim($zipcode).'")');
		} else {
		$value=explode(',',$zipcode);
		if(!empty($value))
		{
			if(is_numeric($value[0]))
			{
				$this->db->where('zip_code LIKE "'.$value[0].'%"',FALSE,FALSE);			
			}else {
			 if(isset($value[0]) && isset($value[1])){
			 	
				if(strlen($value[1]) > 2)
				{
					$states_list = $this->common_function->state_list;
					if(in_array(ucfirst($value[1]), $states_list))
					{
						$state_key = array_search(ucfirst($value[1]), $states_list);
						$value[1] = $state_key;
					}
					//echo $state;exit;
				}
			 $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) = UPPER("'.trim($value[1]).'")');
			 }else {
			  $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) = UPPER("'.trim($value[0]).'")');
			 }
			}
			
		}
		}
		$this->db->limit("10");
				
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
			//echo $Row->st_country;die;
					$arrData[]	= array("label"			=> $Row->label.", ".$this->common_function->shortCountry[trim($Row->st_country)],
										"value"			=> $Row->value,
										"city"			=> $Row->city,
										"state_prefix"	=> $Row->state_prefix,
										"st_country"	=> strtoupper($this->common_function->shortCountry[trim($Row->st_country)])
										);
			}
			return $arrData;
		}
		//return $query->result_array();
	}
	
	
	
	public function vehicle_images($id)
	{
		$this->db->select("st_image as vehicle_image",FALSE);
		$this->db->from('tbl_vehicle_image');
		$this->db->where('in_deleted',0);
		$this->db->where('in_vehicle_id',$id);
		//$this->db->limit("1");
		//echo $this->db->last_query()."<br><br><br>";
		$query = $this->db->get();
		return $query->result_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	get_trans_legs_join_user	
	#	Purpose		:	Get Legs with join user
	# *******************************************************************************************	
	
	public function get_trans_legs_details($user='')
	{	
		$this->db->select('l.in_transportation_leg_id, l.in_route_type, d.st_leg_type, d.st_street, d.st_city,
 d.st_state, d.st_zip, d.st_country , p.in_user_id, p.in_transportation_leg_id as in_source_leg_id,p.in_photography_profile',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id = l.in_transportation_leg_id','INNER');
		$this->db->join('tbl_transportation_participants p','p.in_transportation_leg_id = l.in_transportation_leg_id AND p.in_deleted=0','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('p.in_user_id',$this->session->userdata('userid'));
		$this->db->where('p.in_transportation_leg_id >',0);
		if($user!='')
		{
			$this->db->where('p.in_user_id IS NOT NULL ',FALSE,FALSE);
		}
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');		
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				if($Row->st_leg_type=="P")
				{
					if($Row->in_route_type==1)
					{
						$pickup = $this->get_airport_details($Row->st_street);
					}			
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->st_country;
					//$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					//$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['pick_longitude']		= isset($pickup['st_longitude'])?$pickup['st_longitude']:"";
					$arrData[$Row->in_transportation_leg_id]['pick_latitude']		= isset($pickup['st_latitude'])?$pickup['st_latitude']:"";				
				}
				
				if($Row->st_leg_type=="D")
				{
					if($Row->in_route_type==1)
					{
						$dropoff = $this->get_airport_details($Row->st_street);
					}
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->st_country;
					//$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					//$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;	
					$arrData[$Row->in_transportation_leg_id]['drop_longitude']		= isset($dropoff['st_longitude'])?$dropoff['st_longitude']:"";
					$arrData[$Row->in_transportation_leg_id]['drop_latitude']		= isset($dropoff['st_latitude'])?$dropoff['st_latitude']:"";
				}
					$arrData[$Row->in_transportation_leg_id]['photo_profile']		= $Row->in_photography_profile;
			}
			//echo "<pre>";print_r($arrData);die;
			return $arrData;
		}
	}
	
	function get_user_list()
	{
		$arrData = array();
		$this->db->select("	CONCAT(u.st_display_name,' ',u.st_last_name) as user_name,
							p.st_city,
							p.st_state,
							p.st_country,
							p.st_zip,
							p.st_driver,
							p.st_pilot,
							p.st_foster_home,
							p.st_photographer,
							p.st_in_person_volunteer,
							p.st_virtual_support_volunteer,
							u.in_user_id,
							u.st_email,
							v.in_distance_to_drive as drive,
							pi.in_distance_to_pilot as in_distance_to_pilot,
							z.lat,
							z.lon",FALSE);
		$this->db->from("tbl_users u");
		$this->db->join("tbl_user_profile p","p.in_user_id=u.in_user_id","INNER");
		$this->db->join("tbl_zip_code z","z.zip_code=p.st_zip","INNER");
		$this->db->join("tbl_user_vehicle v","v.in_user_id=p.in_user_id AND v.in_deleted='0'","LEFT");
		$this->db->join("tbl_user_pilot pi","pi.in_user_id=p.in_user_id AND pi.in_deleted='0'","LEFT");
		$this->db->where("u.in_public","1",FALSE);
		$this->db->where("u.in_deleted","0",FALSE);
		$this->db->where("p.in_deleted","0",FALSE);
		if($this->session->userdata('recent_activity'))
		{
			if($this->session->userdata('recent_activity') =="D")
			{
				$this->db->where("(p.st_driver='Y')",FALSE,FALSE);
			}
			elseif($this->session->userdata('recent_activity') =="P")
			{
				$this->db->where("(p.st_pilot='Y')",FALSE,FALSE);
			}
			else
			{
				# this is for all types of user
				$this->db->where("(p.st_driver='Y' OR p.st_pilot='Y')",FALSE,FALSE);
			}
		}
		else
		{
			$this->db->where("(p.st_driver='Y' OR p.st_pilot='Y')",FALSE,FALSE);
		}
		$this->db->group_by('p.in_user_id');
		//$this->db->order_by('p.in_user_id', 'RANDOM');
		//$this->db->limit('500');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				if($Row->drive!='' && $Row->in_distance_to_pilot!='')
				{
					if($Row->drive>($Row->in_distance_to_pilot*1.15078))
					{
						$distance = $Row->drive;
						$nm_or_mile = "Miles";
					}
					else
					{
						//$distance = $Row->in_distance_to_pilot*1.15078;	
						$distance = $Row->in_distance_to_pilot;
						$nm_or_mile = "NM";	
					}
				}
				elseif($Row->drive=='' && $Row->in_distance_to_pilot!='')
				{
					//$distance = $Row->in_distance_to_pilot*1.15078;	
					$distance = $Row->in_distance_to_pilot;
					$nm_or_mile = "NM";	
				}
				elseif($Row->drive!='' && $Row->in_distance_to_pilot=='')
				{
					$distance = $Row->drive;	
					$nm_or_mile = "Miles";	
				}
				else
				{
					$distance = 5;
					$nm_or_mile = "Miles";	
				}
				//echo $Row->st_pilot."==".$Row->st_driver."<br>";
				if($Row->st_pilot=='Y' && $Row->st_driver=='Y')
				{
					$icon = $this->config->item('base_url')."assets/img/rescue_map_icon/multi.png";
					$role="M";
					$drive_or_fly = "Drive/Fly";
				}
				elseif($Row->st_driver=='Y')
				{
					$icon = $this->config->item('base_url')."assets/img/rescue_map_icon/driver.png";
					$role="D";
					$drive_or_fly = "Drive";
				}
				elseif($Row->st_pilot=='Y')
				{
					$icon = $this->config->item('base_url')."assets/img/rescue_map_icon/pilot.png";
					$role="P";
					$drive_or_fly = "Fly";
				}
				//echo $role;die;
				$user_add = '';
				if(isset($Row->st_city) && $Row->st_city != '')
				{
					$user_add .= $Row->st_city.', ';
				}
				if(isset($Row->st_state) && $Row->st_state != '')
				{
					$user_add .= $Row->st_state.', ';
				}
				if(isset($Row->st_zip) && $Row->st_zip != '')
				{
					$user_add .= $Row->st_zip.', ';
				}
				if(isset($Row->st_country) && $Row->st_country != '')
				{
					$user_add .= $Row->st_country;
				}
				
				$foster_pro_icon = '';
				if($Row->st_foster_home=='Y')
				{
					$foster_pro_icon .= $this->config->item('base_url')."assets/img/icon-foster-home.png";					
				}
				$photographer_pro_icon = '';
				if($Row->st_photographer=='Y')
				{
					$photographer_pro_icon .= $this->config->item('base_url')."assets/img/icon-photographer.png";					
				}
				$pilot_pro_icon = '';
				if($Row->st_pilot=='Y')
				{
					$pilot_pro_icon .= $this->config->item('base_url')."assets/img/icon-pilot-profile.png";					
				}
				$driver_pro_icon = '';
				if($Row->st_driver=='Y')
				{
					$driver_pro_icon .= $this->config->item('base_url')."assets/img/icon-driver.png";					
				}
				$person_pro_icon = '';
				if($Row->st_in_person_volunteer=='Y')
				{
					$person_pro_icon .= $this->config->item('base_url')."assets/img/icon-person.png";					
				}
				$virtual_pro_icon = '';
				if($Row->st_virtual_support_volunteer=='Y')
				{
					$virtual_pro_icon .= $this->config->item('base_url')."assets/img/icon-virtual-support-volunteers.png";					
				}
				
				$arrData[]		= array("user_name"				=> $Row->user_name,
										"in_user_id"			=> $Row->in_user_id,
										"st_email"				=> $Row->st_email,
										"drive"					=> $Row->drive,
										"in_distance_to_pilot"	=> ($Row->in_distance_to_pilot*1.15078),
										"lat"					=> $Row->lat,
										"lon"					=> $Row->lon,
										"distance"				=> number_format($distance,2,".",""),
										"st_city"				=> $Row->st_city,
										"st_state"				=> $Row->st_state,
										"st_country"			=> $Row->st_country,
										"st_zip"				=> $Row->st_zip,
										"icon"					=> $icon,
										"foster_icon"			=> $foster_pro_icon,
										"photographer_icon"		=> $photographer_pro_icon,
										"pilot_icon"			=> $pilot_pro_icon,
										"driver_icon"			=> $driver_pro_icon,
										"person_icon"			=> $person_pro_icon,
										"virtual_icon"			=> $virtual_pro_icon,
										"role"					=> $role,
										"drive_or_fly"			=> $drive_or_fly,
										"nm_or_mile"			=> $nm_or_mile,
										"user_add"				=> $user_add
										);
			}
		}
		//echo "<pre>";print_r($arrData);die;
		return $arrData;
	}
	
	
	#*********************************************************************************************
	#	Function	:	get_overnight_legs_detail_by_trans_id
	#	Purpouse	:	get_overnight_legs_detail_by_trans_id
	#*********************************************************************************************	
		
	function get_overnight_legs_detail_by_trans_id()
	{
		$icon = $this->config->item('base_url')."assets/img/rescue_map_icon/multi.png";
		$where = array(	"l.in_deleted"			=> "0",
						"l.in_route_type"		=> "2",
						"d.in_deleted"			=> "0",
						"l.in_transportation_id"	=> $this->session->userdata('transport_id'));
		$this->db->select('l.in_transportation_leg_id, l.in_route_type, d.st_leg_type, d.st_street, d.st_city,
 d.st_state, d.st_zip, d.st_country',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id = l.in_transportation_leg_id','INNER');		
		$this->db->where($where);
		
		$query = $this->db->get();
		$arrData1 = array();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				
				$lat_long_details = $this->common_model->get_lat_long($Row->st_zip);
				
				$address = '';
				if(isset($Row->st_street) && $Row->st_street != '')
				{
					$address .= 	$Row->st_street .', ';
				}
				if(isset($Row->st_city) && $Row->st_city != '')
				{
					$address .= 	$Row->st_city .', ';
				}
				if(isset($Row->st_state) && $Row->st_state != '')
				{
					$address .= 	$Row->st_state .', ';
				}
				if(isset($Row->st_country) && $Row->st_country != '')
				{
					$address .= 	$Row->st_country .', ';
				}
				if(isset($Row->st_zip) && $Row->st_zip != '')
				{
					$address .= 	$Row->st_zip;
				}
				
				$arrData1[]		= array("in_transportation_leg_id"				=> $Row->in_transportation_leg_id,
										"in_route_type"			=> $Row->in_route_type,
										"st_street"				=> $Row->st_street,
										"st_city"				=> $Row->st_city,
										"st_state"				=> $Row->st_state,
										"st_country"			=> $Row->st_country,
										"st_zip"				=> $Row->st_zip,
										"address"				=> $address,
										"lat"					=> $lat_long_details['lat'],
										"lon"					=> $lat_long_details['lng'],
										"icon"					=> $icon
										);
			}
		}
		return $arrData1;
	}
	
	#*********************************************************************************************
	#	Function	:	get_legs_participants
	#	Purpouse	:	Session User is already join leg or not
	#*********************************************************************************************	
		
	function get_legs_participants_user()
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_id"	=> $this->session->userdata('transport_id'));
		$where['in_user_id'] = $this->session->userdata('userid');				
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();
		return $query->num_rows();
	}
	
	#*********************************************************************************************
	#	Function	:	get_all_read_transportation
	#	Purpouse	:	get_all_read_transportation
	#*********************************************************************************************	
		
	function get_all_read_transportation($user_id,$org_id)
	{
		$this->db->select("in_user_id,in_organization_id,in_transportation_id");
		$this->db->from("tbl_user_visit");
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('st_visit_type','DRAFTTRANSPORT');
		$query =	$this->db->get();
		return $query->result_array();
	}

	#*********************************************************************************************
	#	Function	:	get_user_contact
	#	Purpouse	:	Getting user details
	#*********************************************************************************************
	
	function get_user_contact($id) {
		$this->db->select('st_primary_phone');
		$this->db->from('tbl_user_profile');
		$this->db->where('in_user_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	# *******************************************************************************************	
	#	Function	:	update_animal_transport_details	
	#	Purpose		:	update_animal_transport_details
	# *******************************************************************************************
		
	public function update_animal_transport_details($animal_id)
	{
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_animal_id',$animal_id);
		$this->db->update('tbl_animal_transportation',array("in_deleted"=>"1"));
	}
	
	#*********************************************************************************************
	#	Function	:	add_leg_vehicle_detail
	#	Purpouse	:	add_leg_vehicle_detail
	#*********************************************************************************************	
	function add_leg_vehicle_detail($data)
	{
		$this->db->insert('tbl_leg_vehicle_detail', $data);
	}
	
	# *******************************************************************************************	
	#	Function	:	update_leg_vehicle_detail	
	#	Purpose		:	update_leg_vehicle_detail
	# *******************************************************************************************	
		
	public function update_leg_vehicle_detail($array,$leg_id,$user_id,$transport_id)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_user_id',$user_id);
		$this->db->update('tbl_leg_vehicle_detail',$array);
	}
	
	# *******************************************************************************************	
	#	Function	:	update_leg_plane_detail	
	#	Purpose		:	update_leg_plane_detail
	# *******************************************************************************************	
		
	public function update_leg_plane_detail($array,$leg_id,$user_id,$transport_id)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_user_id',$user_id);
		$this->db->update('tbl_leg_vehicle_detail',$array);
	}
	
	
	function get_leg_type_by_id($id) {
		$this->db->select('in_route_type');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_leg_id',$id);
		$query = $this->db->get();
		return $query->result_array();
	}
	
	public function get_zipcode_data($zipcode='',$city='',$state='',$action='')
	{
		$this->db->select("concat(zip_code,', ',city,', ',state_prefix,', ',st_country) as label, zip_code,city,state_prefix,st_country",FALSE);
		$this->db->from('tbl_zip_code');
		if($action=='')
		{
			$this->db->where('zip_code LIKE "'.$zipcode.'%"',FALSE,FALSE);
			$this->db->limit("10");
		}
		else
		{
		if($city)
		{
			//$this->db->where('lower(city) LIKE lower("'.$city.'%")',FALSE,FALSE);
			$this->db->where('lower(city) = lower("'.$city.'")',FALSE,FALSE);
		}
		if($state)
		{
			$this->db->where('UPPER(state_prefix) = UPPER("'.$state.'")',FALSE,FALSE);
		}
		$this->db->limit("20");
		}
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		/*if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
			//echo $Row->st_country;die;
					$arrData[]	= array("label"			=> $Row->label.", ".$this->common_function->shortCountry[trim($Row->st_country)],
										"value"			=> $Row->value,
										"city"			=> $Row->city,
										"state_prefix"	=> $Row->state_prefix,
										"st_country"	=> strtoupper($this->common_function->shortCountry[trim($Row->st_country)])
										);
			}
			return $arrData;
		}*/
		return $query->result_array();
	}
	
	
	public function get_zipcode_by_state_city($city,$state)
	{
		$this->db->select('zip_code');
		$this->db->from('tbl_zip_code');
		//$this->db->where('city',$city);
		$this->db->where('lower(city)',strtolower($city));
		$this->db->where('state_prefix',$state);
		$this->db->limit("1");
		$query = $this->db->get();
		return $query->row_array();
		//return $this->db->last_query();
		
	}
	
	public function get_fullzipcode_by_state_city($city='',$state='')
	{
		$this->db->select("concat(zip_code,', ',city,', ',state_prefix) as label, zip_code as value,city,state_prefix,st_country",FALSE);
		$this->db->from('tbl_zip_code');
	
		//$this->db->where('city',$city);
		//$this->db->where('state_prefix',$state);
		$this->db->where('lower(city) LIKE lower("'.$city.'%") AND UPPER(state_prefix) = UPPER("'.trim($state).'")');
		$this->db->limit("1");
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
			//echo $Row->st_country;die;
					$arrData[]	= array("label"			=> $Row->label.", ".$this->common_function->shortCountry[trim($Row->st_country)],
										"value"			=> $Row->value,
										"city"			=> $Row->city,
										"state_prefix"	=> $Row->state_prefix,
										"st_country"	=> strtoupper($this->common_function->shortCountry[trim($Row->st_country)])
										);
			}
			return $arrData;
		}
		
	}
	
	function find_airport_id_or_zipcode($data_val)
	{
		$airport_id = 1;
		$this->db->select("st_loc_id");
		$this->db->from('tbl_airport');
		$this->db->where('in_deleted',0);
		$this->db->where('st_loc_id LIKE "%'.$data_val.'%"',FALSE,FALSE);
		$this->db->limit("1");
		$query = $this->db->get();
		//echo $this->db->last_query();die;	
		
		if($query->num_rows() > 0)
		{
			$airport_id  = 1;	
		}
		else
		{
		$this->db->select("zip_code");
		$this->db->from('tbl_zip_code');
				
		// if normal 1 char is present 
		if (strpos($data_val ,',') == false) {
		$this->db->where('zip_code LIKE "'.$data_val.'%" OR lower(city) LIKE lower("'.$data_val.'%") OR UPPER(state_prefix) = UPPER("'.trim($data_val).'")');
		} else {
		$value=explode(',',$data_val);
		if(!empty($value))
		{
			if(is_numeric($value[0]))
			{
				$this->db->where('zip_code LIKE "'.$value[0].'%"',FALSE,FALSE);			
			}else {
			 if(isset($value[0]) && isset($value[1])){
			 $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) LIKE UPPER("'.trim($value[1]).'")');
			 }else {
			  $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) LIKE UPPER("'.trim($value[0]).'")');
			 }
			}
			
		}
		}
			
		//$this->db->where('zip_code LIKE "%'.$data_val.'%"',FALSE,FALSE);
		$this->db->limit("1");
		$query_zip = $this->db->get();
		if($query_zip->num_rows() > 0)
			{
				$airport_id  = 0;
			}
		
		}
		return $airport_id;
		
	}
	
	#=========================================================
	#	Function : get_transport_feed_users
	#	Purpose  : Getting all users for transport feed
	#=========================================================
	
	public function get_transport_feed_users($org_id ,$substr=''){
		//$name = str_replace('@','',addslashes(trim($this->input->get('term'))));
		$name = str_replace('@','',addslashes(trim($substr)));
		$usertext='';
		$usertext = strstr(trim($this->input->get('term')),'@',true);
		//	echo '<br>name='.$name;
		$data = array();
		
		if(trim($name) != '') {
			$query = $this->db->query("SELECT `u`.`in_user_id`, `u`.`st_email`,
										CONCAT(`u`.`st_display_name`,' ', `u`.`st_last_name`) as label,
										`u`.`st_profile_image`
									FROM (`tbl_users` as u)
									WHERE
										`u`.`in_user_id` != ".$this->session->userdata('userid')."
									AND (trim(u.st_display_name) LIKE '$name%' OR CONCAT(trim(`u`.`st_display_name`),' ', trim(`u`.`st_last_name`)) LIKE '$name%')
									AND `u`.`in_deleted` =  0
									AND `u`.`in_status` =  1 ORDER BY label ASC LIMIT 25"
						);
			
			$result = $query->result_array();
			//echo "<pre>";print_r($result);die;
			
			foreach($result as $row) {
				$data[] = array('user_id' 	 => $row['in_user_id'],
								'label'		 => $row['label'],
								'image'		 =>	($row['st_profile_image'] != '' && file_exists($this->config->item('upload')."profile/29x29/".$row['st_profile_image']))?$row['st_profile_image']:'no_photo_icon.png',
								'email'		 => $row['st_email'],
								'usertext'   => $usertext
								);
			}
		}
		
		return $data;
	}
	
	#=========================================================
	#	Function : get_org_image
	#	Purpose  : Getting organization image
	#=========================================================
	
	public function get_org_image() {
		$data = array();
		
		$this->db->select('st_org_image');
		$this->db->from('tbl_organization');
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$query = $this->db->get();
		
		$data = $query->row_array();
		return (isset($data['st_org_image']) && file_exists($this->config->item('upload')."upload/org_doc/thumb/".$data['st_org_image']) && $data['st_org_image'] != '')?$data['st_org_image']:'temp-logo.jpg';
	}
	
	#=========================================================
	#	Function : transport_check
	#	Purpose  : Checking Transport ID
	#=========================================================
	
	public function transport_check() {
		$this->db->select('*');
		$this->db->from('tbl_user_visit');
		$this->db->where('in_organization_id',$this->session->userdata('org_id'));
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$query = $this->db->get();
		
		return $query->num_rows();
	}
	
	#=========================================================
	#	Function : get_city
	#	Purpose  : Getting all cities according to state
	#=========================================================
	
	public function get_city($city,$state) {
		$data = array();
		
		$query = $this->db->query('SELECT DISTINCT `city` as label FROM (`tbl_zip_code`) WHERE `state_prefix` = "'.$state.'" AND LOWER(`city`) LIKE LOWER("%'.$city.'%") LIMIT 10 ');
		
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data[] = array('label' => $row['label']);
			}
		}
		
		return $data;
	}
	
	#=========================================================
	#	Function : get_transport_zipcode
	#	Purpose  : Getting current transport zipcode
	#=========================================================
	
	public function get_transport_zipcode($transport_id) {
		$this->db->select('st_from_zip,st_to_zip');
		$this->db->from('tbl_transportation');
		$this->db->where('in_transportation_id',$transport_id);
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	function find_airport_data($data_val)
	{
		$this->db->select("st_loc_id as label,st_loc_id as value,st_name,st_latitude,st_longitude,st_state,st_city,st_iso_country");
		$this->db->from('tbl_airport');
		$this->db->where('in_deleted',0);
		$this->db->where('st_loc_id LIKE "%'.$data_val.'%"',FALSE,FALSE);
		$this->db->limit("100");
		$query = $this->db->get();
		//echo $this->db->last_query();die;	
		
		return $query->result_array();
		
	}
	
	public function update_user_transport_agreement($user_id)
	{
		$this->db->where('in_user_id',$user_id);
		$updated_result = $this->db->update('tbl_users',array("in_transport"=>"1","dt_transport_agree"=>date("Y-m-d H:i:s")));
		return $updated_result;
	}
	
	function get_leg_participant_detail_by_leg_id_user_id($leg_id,$user_id)
	{
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','LEFT');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','LEFT');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_transportation_leg_id',$leg_id);
		//$this->db->where('p.in_created_by',$user_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->row_array();
	}
	
	function get_participant_detail($id,$user_id)
	{
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','LEFT');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','LEFT');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_tr_pr_id',$id);
		$this->db->where('p.in_user_id',$user_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		return $query->row_array();
	}
	
	function add_transport_emails($arrData)
	{
		$insert_id = $this->db->insert('tbl_new_transportation_cron', $arrData);
		//echo "<pre>";print_r($this->db->last_query());die;
		return  $this->db->insert_id();
	}
	
	public  function get_new_transports()
	{
		$this->db->select('tc.in_new_transportation_cron_id,tc.user_detail,tc.email_subject,tc.email_content,tc.in_transport_id');
		$this->db->from('tbl_new_transportation_cron as tc');
		$this->db->where('tc.in_email_sent',0);
		$this->db->order_by('tc.in_new_transportation_cron_id','desc');
		//$this->db->limit('1');
		$this->db->limit('25');
		$query = $this->db->get();
		//echo "<pre>".$this->db->last_query();die;
		return $query->result_array();
	}
	
	function get_legs_participant($user_id,$leg_id,$transport_id,$join='')
	{
		$this->db->select("in_tr_pr_id");
		$where = array(	"in_deleted"			=> "0",
						"in_transportation_leg_id"		=> $leg_id,
						"in_transportation_id"	=> $transport_id);
		if($join=='')
		{				
			$where['in_user_id'] = $user_id;				
		}
		$this->db->from("tbl_transportation_participants");
		$this->db->where($where);
		$query =	$this->db->get();
		return $query->num_rows();
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_user_legs	
	#	Purpose		:	Delete driver legs
	# *******************************************************************************************	
	public function delete_user_leg($user_id,$leg_id,$transport_id)
	{     
			$res = $this->get_legs_participant($user_id,$leg_id,$transport_id);
			
			//echo '<pre>'; print_r($res); die;
			if($res>0)
			{
			
				
				$transport_details 	= $this->get_transport_details($transport_id);
				/*if($transport_details[0]['st_trans_type'] != 'D')
				{
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->where('in_user_id',$user_id);
				$this->db->update("tbl_transportation_participants",$arrData);
				}*/
				
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->where('in_user_id',$user_id);
				$this->db->update("tbl_transportation_participants",$arrData);
				
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->update("tbl_transportation_leg_detail",$arrData);
				
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->update("tbl_transportation_leg",$arrData);
				
				$arrData = array("in_deleted"=>1);
				$this->db->where('in_transportation_leg_id',$leg_id);
				$this->db->update("tbl_routes",$arrData);
				//echo $this->db->last_query();die;
			}
	}
	
	public function update_transport_emails($id)
	{
		$this->db->where('in_new_transportation_cron_id',$id);
		$updated_result = $this->db->update('tbl_new_transportation_cron',array("in_email_sent"=>"1","dt_modified"=>date("Y-m-d H:i:s")));
		return $updated_result;
	}
	
	function get_transportations()
	{
		$trans_query	=	"SELECT tr.dt_target, tr.in_transportation_id, tr.st_trans_type, tr.in_organization_id, 
							(SELECT count(in_transportation_leg_id) FROM tbl_transportation_leg WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id) as leg_in_transport,
							(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_id= tr.in_transportation_id) as participants_cnt,
							(SELECT count(in_animal_trans_id) FROM tbl_animal_transportation  WHERE in_deleted=0 AND in_transportation_id=tr.in_transportation_id) as animal_in_transport 
							FROM (`tbl_transportation` tr) 
							INNER JOIN `tbl_organization` o ON `o`.`in_organization_id` = `tr`.`in_organization_id` 
							WHERE `tr`.`in_deleted` = 0 
							AND (tr.in_status = '1' && tr.dt_target < current_date()) 
							GROUP BY `tr`.`in_transportation_id` 
							ORDER BY `tr`.`in_transportation_id` DESC
							LIMIT 25";
		
		
		$res	=	$this->db->query($trans_query);
		
		$trans_data	=	$res->result_array();
		
		return $trans_data;
	}
	
	public function get_org_trans_animal_by_transport_id($org_id,$transport_id)
	{	
		$animal_details = array();
		$this->db->select('a.in_animal_id');
		$this->db->from('tbl_animal as a');		
		$this->db->join('tbl_animal_transportation tr','tr.in_animal_id = a.in_animal_id  AND tr.in_deleted="0"','INNER');		
		$this->db->where('a.in_deleted',0);
		$this->db->where('tr.in_deleted',0);
		$this->db->where('tr.in_transportation_id',$transport_id);
		$this->db->where('a.in_organization_id',$org_id);
		$this->db->order_by('a.in_animal_id','DESC');
		$this->db->group_by('a.in_animal_id');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			$animal_details = $query->result_array();
		}
		//echo  "<pre>";print_r($animal_details);die;
		return $animal_details;
	}
	
	public function update_animal_transport_details_by_transport_id($animal_id,$transport_id)
	{
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_animal_id',$animal_id);
		$this->db->update('tbl_animal_transportation',array("in_deleted"=>"1"));
	}
	
	public function update_transport_status($array,$transport_id,$org_id)
	{
		if($array['in_status'] == 3)
		{
			$animal_details = $this->get_org_trans_animal_by_transport_id($org_id,$transport_id);			
			//print_r($animal_details);exit;
			
			if(!empty($animal_details))
			{
				foreach($animal_details as $animal_data)
				{
					$this->update_animal_transport_details_by_transport_id($animal_data['in_animal_id'],$transport_id);
				}
			}
		}
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->update('tbl_transportation',$array);
		//echo $this->db->last_query();die;
	}
	
	public function update_transport_monitor_status($array,$transport_part_id)
	{
		$this->db->where('in_tr_pr_id',$transport_part_id);
		$this->db->update('tbl_transportation_participants',$array);
		//echo $this->db->last_query();die;
	}
	
	public function get_trans_legs_by_id($transport_id)
	{	
		$this->db->select('l.in_transportation_leg_id,l.in_status as mark_completed,d.st_leg_type,st_street,st_city,st_state,st_zip,st_country,dt_start_time,st_timezone,st_meeting_location,in_multi_user,in_user_num,l.in_route_type',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$transport_id);
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$r_type = '';
				if($Row->in_route_type == 1)
				{
					$r_type = 'Aviation';
				}
				if($Row->in_route_type == 2)
				{
					$r_type = 'Overnight';
				}
				if($Row->in_route_type == 0)
				{
					$r_type = 'Road';
				}
				
				
				if($Row->st_leg_type=="P")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;	
					$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014
				}
				
				if($Row->st_leg_type=="D")
				{
					$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;	
					$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;		
					$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->st_timezone;
					$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
					$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014
				}
				//added by ghanshyam on 05Dec2014
				if($Row->st_leg_type=="O")
				{	
					$arrData[$Row->in_transportation_leg_id]['route_type']			= $r_type;		
					$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
					$arrData[$Row->in_transportation_leg_id]['mark_completed']		= $Row->mark_completed;	
					$arrData[$Row->in_transportation_leg_id]['leg_type_O']			= $Row->st_leg_type;
					$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
					$arrData[$Row->in_transportation_leg_id]['o_pick_street']		= $Row->st_street;
					$arrData[$Row->in_transportation_leg_id]['o_pick_state']		= $Row->st_state;
					$arrData[$Row->in_transportation_leg_id]['o_pick_city']			= $Row->st_city;
					$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;
					$arrData[$Row->in_transportation_leg_id]['o_pick_country']		= $Row->st_country;
					$arrData[$Row->in_transportation_leg_id]['o_pick_start_time']	= $Row->dt_start_time;
					$arrData[$Row->in_transportation_leg_id]['overnight_comments']	= $Row->st_meeting_location;
				}
				
			}
			return $arrData;
		}
	}
	
	public function republish_transport_details()
	{
		$status = '1';
		$this->db->select("tr.in_transportation_id,
							tr.in_organization_id,
							tr.dt_pickup_date,
							tr.dt_target,
							tr.in_trans_coods_id,
							tr.st_trans_type,
							tr.in_tot_distance,
							tr.st_from_country,	
							tr.st_from_state,							
							tr.st_from_city,						
							tr.st_from_zip,
							tr.st_to_country,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							org.st_org_name,
							u.in_user_id,
							concat(u.st_display_name,' ',u.st_last_name) as st_display_name", false);						   	
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization org', 'org.in_organization_id = tr.in_organization_id AND org.in_deleted="0"','INNER');	
		$this->db->join('tbl_users u','tr.in_trans_coods_id = u.in_user_id','INNER');
		
		$where = '';
		$where .= "((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		
		$this->db->where($where);
		$this->db->where('tr.in_deleted','0');
		$this->db->where('org.in_deleted','0');
		$this->db->where('u.in_deleted','0');								
	
		$query = $this->db->get(); 				
		//echo $this->db->last_query(); exit;
		$arrTransportation = array();
		
		
		if($query->num_rows()>0)
		{  
			foreach($query->result() as $Row)
			{		
				$arrTransportation[]	= array('in_transportation_id'	=> $Row->in_transportation_id,								
								'in_organization_id'					=> $Row->in_organization_id
								);
			}
		}
		
		if(isset($arrTransportation) && !empty($arrTransportation))
		{				
			foreach($arrTransportation as $trans_values)
			{
				$tra_id				= $trans_values['in_transportation_id'];
				$org_id				= $trans_values['in_organization_id'];
				
				$transport_details 	= $this->get_transport_details($tra_id);
				
				$transport_coordinators	= $this->common_model->get_transport_coodrdinator($org_id);
				$organisation_owner 	= $this->common_model->get_owner_details($org_id);
				$emails_list 			= array_merge($organisation_owner,$transport_coordinators);
			
				#====================== Add data for driver email notification start ===========# 		
				$user_list = $this->common_model->get_all_user_seledted_radious($transport_details[0]['st_from_zip'],$transport_details[0]['st_to_zip']);
							
				for($i=0; $i< count($user_list);$i++)
				{
					
					$days = unserialize($user_list[$i]['st_driver_availability']);
					if(in_array(date("D", strtotime($transport_details['0']['dt_target'])),$days))
					{
						#================== Near by transport email is collect start ============#
						$emails_list[] = array("name"=>$user_list[$i]['st_display_name'],"email_address"=>$user_list[$i]['st_email']);
						#================== Near by transport email is collect end ============#
						
					}
				}
	
				$tmp_email = array ();
				foreach ($emails_list as $row) 
				{
					if (!in_array($row,$tmp_email)){
						 array_push($tmp_email,$row);
					}
				}				
							
				//print_r($tmp_email);exit;
				$legs = ($transport_details[0]['st_trans_type']=="P")?"Pre-Specify Legs":"Drivers Build Their Legs";
				$email_transport_details	=	$trans_values;
				
				$transport_legs	= $this->get_trans_legs_by_id($tra_id);
	
				$this->load->library('email');
				$email_details = $this->common_model->get_email_containt("35");
				$animals_cnt = 0 ;
				$transport_animals 			= $this->get_transport_animals($tra_id);
					
				if(isset($transport_animals) && !empty($transport_animals))
				{
					$animals_cnt = count($transport_animals);	
				}
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
						if(isset($q) && !empty($q)){					   		
								foreach($q as $qr)
								{		 
									  
									if(!empty($qr['st_image']))
									{
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 				
											$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

											alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
										  
										  
									}
									else
									{
										   $donation='';								 
									}							  
										
								}
							}			
							   
						   else
						   {
							  $donation='';
						   }	
				if(isset($email_details[0]['st_email_body']))
					{
						
						
						$leg_str = '';
						$templete	= 	$email_details[0]['st_email_body'];
						$templete  	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
						$templete  	= 	str_replace("##DONATION##",$donation,$templete);
						$templete  	= 	str_replace("##transport_coordinator_display_name##",ucfirst($transport_details[0]['st_display_name']),$templete);
						$templete  	= 	str_replace("##transport##","#DBT".$tra_id,$templete);
						$templete  	= 	str_replace("##transport_day,transport_date##",date("l, M d",strtotime($transport_details[0]['dt_target'])),$templete);
						$templete  	= 	str_replace("##sending_city/state/zip_code##",$transport_details[0]['st_from_city'].", ".$transport_details[0]['st_from_state'].", ".$transport_details[0]['st_from_zip'],$templete);
						$templete  	= 	str_replace("##receiving_city/state/zip_code##",$transport_details[0]['st_to_city'].", ".$transport_details[0]['st_to_state'].", ".$transport_details[0]['st_to_zip'],$templete);
						$templete	=	str_replace("##schedule##",$this->config->item('base_url')."org-transportation-scheduled/".$tra_id."/",$templete);
						//
						$templete	=	str_replace("##sending_state##",$transport_details[0]['st_from_state'],$templete);
						$templete	=	str_replace("##receiving_state##",$transport_details[0]['st_to_state'],$templete);
						$templete	=	str_replace("##animal_count##",$animals_cnt,$templete);
						$templete   =   str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
						$templete   =   str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);
						
						$join_url = base_url().'org-transportation-scheduled/'.$tra_id;
						$leg_str .= '<table width="100%" border="0" cellpadding="5">';
					if(!empty($transport_legs)) {
						foreach($transport_legs as $row) {
							if($row['route_type_id'] == 0 || $row['route_type_id'] == 1) {
								$pick_address = $row['pick_city'].', '.$row['pick_state'].', '.$row['pick_country'].', '.$row['pick_zip'];
								$drop_address = $row['drop_city'].', '.$row['drop_state'].', '.$row['drop_country'].', '.$row['drop_zip'];
							$leg_str .= '<tr><td style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;"><strong>From</strong> '.$pick_address.' <strong>To</strong> '.$drop_address.'<a href="'.$join_url.'" style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px; border-radius:3px; display:inline-block;margin-left:15px;" title="Join">Join</a></td></tr>';
							} else {
								$o_pick_address = $row['o_pick_city'].', '.$row['o_pick_state'].', '.$row['o_pick_zip'].', '.$row['o_pick_country'];
								$leg_str .= '<tr><td style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;"><strong>Meeting Location:</strong> '.$o_pick_address.'<a href="'.$join_url.'"  style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px; border-radius:3px; display:inline-block;margin-left:15px;" title="Join">Join</a></td></tr>';
							}
							
						}
					} else {
						$leg_str .= '<tr><td style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 20px;"><a href="'.$join_url.'" style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px; border-radius:3px; display:inline-block;margin-left:15px;" title="Join">Join this Transport</a></td></tr>';
					}
						
						$leg_str .= '</table>';
						
						$templete	=	str_replace("##leg_detail##",$leg_str,$templete);
						
						$animal_str = '';
						$animal_image = '';
						
						//Animal_details
						$org_image = $this->get_org_image($org_id);
						
						$i=0;
						$data_image = array();
						if(!empty($transport_animals)) {
							foreach($transport_animals as $rows) {
								if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
									$data_image[] = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
								} else {
									$data_image[] = base_url().'upload/org_doc/thumb/'.$org_image;;
								}
							}
						}
						
						if(!empty($transport_animals)) {
							foreach($transport_animals as $rows) {
								if($i>1) { break;}
								$animal_url = base_url().'animal-'.$rows['in_animal_id'].'-'.$this->common_function->get_filtered_name($rows['st_animal_name']);
								
								if($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload')."animal_images/140x140/".$rows['st_file_name'])) {
									$animal_image = base_url().'upload/animal_images/140x140/'.$rows['st_file_name'];
								} else {
									$animal_image = base_url().'upload/org_doc/thumb/'.$org_image;
								}
								
								$animal_str .= '<tr><td style="padding:25px 0;border-bottom:1px solid #ebebeb;border-top:1px solid #ebebeb;">';
			  
			  $animal_str .= '<table align="left" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td><table align="center" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="480"><tbody><tr><td style="font-family: Arial, sans-serif; font-size: 14px; color: #4c4c4c; text-align:justify; line-height: 20px;">'.$rows['st_profile_story'].' <span style="display:block"><a href="'.$animal_url.'" style="color:#fff;text-decoration:none;font-family:Arial, Helvetica, sans-serif;font-size:14px;display:inline;background:#ee6d35;padding:5px 10px;border-radius:3px;display:inline-block;margin:15px 0 0;" title="View Animal Profile"><img src="http://dev.doobert.com/assets/img/email_img/animal_profile_icon.gif" style="border:none;vertical-align:top;padding-top:3px;border:none" /> View Animal Profile</a></span></td></tr></tbody></table></td></tr></tbody></table>';
			  
			  $animal_str .= '<table align="right" border="0" cellpadding="0" cellspacing="0" class="devicewidth" width="150"><tbody><tr><td align="center" class="devicewidth" height="140" width="150"><img alt="" src="'.$animal_image.'" /></td></tr></tbody></table>
			  <table align="left" border="0" cellpadding="0" cellspacing="0" class="mobilespacing"><tbody><tr><td height="15" style="font-size:1px; line-height:1px; mso-line-height-rule: exactly;" width="100%">&nbsp;</td></tr></tbody></table>
			  </td></tr>';
							$i++;
							}
						}
						$templete	=	str_replace("##animal_details##",$animal_str,$templete);
						//End Animal Details
						
						
						$share_url = base_url().'org-transportation-scheduled/'.$transport_details[0]['in_transportation_id'];
						$title = 'DOOBERT -Transportation #DBT'.htmlspecialchars($transport_details[0]['in_transportation_id']);
						if($transport_details[0]['perc']>0)
							{
								$transport_comp_perc = (($transport_details[0]['perc']>100)? "100%":$transport_details[0]['perc']."%");
							}
							else
							{
								$transport_comp_perc = "0%";
							}
							
						$description = "";
									
						$description .= date("l, M",strtotime($transport_details[0]['dt_target']));
						$description .= date(" d",strtotime($transport_details[0]['dt_target']));
						$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DBT".$transport_details[0]['in_transportation_id']."&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
						$description .= "\r\n";
						$description .= $transport_details[0]['st_from_street']? $this->common_function->custom_htmlentities($transport_details[0]['st_from_street']).",":"";
						$description .= $transport_details[0]['st_from_city']? $this->common_function->custom_htmlentities($transport_details[0]['st_from_city']).",":"";
						$description .= $transport_details[0]['st_from_state']? $this->common_function->custom_htmlentities($transport_details[0]['st_from_state']).",":"";
						$description .= $transport_details[0]['st_from_zip']? $this->common_function->custom_htmlentities($transport_details[0]['st_from_zip']).",":"";
						$description .= ' to ';
						$description .= $transport_details[0]['st_to_street']? $this->common_function->custom_htmlentities($transport_details[0]['st_to_street']).",":"";
						$description .= $transport_details[0]['st_to_city']? $this->common_function->custom_htmlentities($transport_details[0]['st_to_city']).",":"";
						$description .= $transport_details[0]['st_to_state']? $this->common_function->custom_htmlentities($transport_details[0]['st_to_state']).",":"";
						$description .= $transport_details[0]['st_to_zip']? $this->common_function->custom_htmlentities($transport_details[0]['st_to_zip']).",":"";
						$description .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
						$description .= "\r\n";
						$description .= $transport_comp_perc ." of ".($transport_details[0]['in_tot_distance']!=''? $transport_details[0]['in_tot_distance']:"0").'miles covered.';
						
						
						$description_str = str_replace('&nbsp;',' ',$description);
						//$description_str = str_replace(array("\r\n","\r","\n"), "<br>",$description_str);
									
						$share_facebook_str  = ''; 
						$share_facebook_str .= '<a href="https://www.facebook.com/sharer/sharer.php?u='.urlencode($share_url).'&t='.urlencode($description_str).'"><img src="dev.doobert.com/assets/img/Facebook.jpg" alt="Facebook" title="Facebook" /></a>';
						$templete	=	str_replace("##share_facebook##",$share_facebook_str,$templete);
						
						$share_twitter_str = ''; 
						
						$share_twitter_str .= '<a href="http://twitter.com/share?url='.urlencode($share_url).'&text='.urlencode($description_str).'"><img src="dev.doobert.com/assets/img/Twitter.jpg" alt="Twitter" title="Twitter" /></a>';
			
						$templete	=	str_replace("##share_twitter##",$share_twitter_str,$templete);
						
						$share_gplus_str = ''; 
						$share_gplus_str .= '<a href="https://plus.google.com/share?url='.urlencode($share_url).'"><img src="dev.doobert.com/assets/img/G-Plus.jpg" alt="G-Plus" title="G-Plus" /></a>';
						
						
								
						$templete	=	str_replace("##share_gplus##",$share_gplus_str,$templete);
						
						$strMail 	= 	$templete;
						
						$subject	=	str_replace("Revised","Republished",$email_details[0]['st_email_subject']);
						$subject	=	str_replace("##transport##","#DBT".$tra_id,$subject);
						$subject	=	str_replace("##Pickup_date##",date("m/d",strtotime($transport_details[0]['dt_pickup_date'])),$subject);
						$subject	=	str_replace("##Dropoff_date##",date("m/d",strtotime($transport_details[0]['dt_target'])),$subject);
						$subject  	= 	str_replace("##sending city/state##",$transport_details[0]['st_from_city'].", ".$transport_details[0]['st_from_state'],$subject);
						$subject  	= 	str_replace("##receiving city/state##",$transport_details[0]['st_to_city'].", ".$transport_details[0]['st_to_state'],$subject);
					
						$transport_emails = array(	"user_id"		=> $tmp_email['user_id'],
												  	"user_detail"	=> serialize($tmp_email), 
													"email_subject"	=> $subject, 
													"email_content"	=> $strMail, 
													"dt_created"	=> date("Y-m-d H:i:s"),  
													"dt_modified"	=> ("0000-00-00 00:00:00"),  
													"in_email_sent"	=> "0"
												  );
			
						$this->add_transport_emails($transport_emails);
					
				} 
			}
		}
		
	}
	
	function update_leg_sort_order($leg_id,$sort_order)
	{
		$this->db->where('in_transportation_leg_id',$leg_id);
		$update_status = $this->db->update('tbl_transportation_leg',array("in_sort_order"=>$sort_order));
		return $update_status;
	}
	
	function insert_non_doobert_user($arr_data)
	{
		$non_doobert_user_id = $this->db->insert('tbl_non_doobert_transport_users', $arr_data);
		return  $this->db->insert_id();
	}
	
	function get_state_city_by_zipcode($zipcode)
	{
		$org_zip_code  = preg_replace('/\s/', '',$zipcode);
		$zip_code = strtoupper($org_zip_code);
		$this->db->select('city,state_prefix');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zip_code);
		//$this->db->where('zip_code',$zipcode);
		$this->db->limit('1');
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	
	function update_non_doobert_user_leg($id)
	{
		$this->db->where('in_non_doobert_user_id',$id);
		$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s")));
		return $update_status;
	}
	
	function get_non_doobert_user_detail($id)
	{
		$this->db->select('in_non_doobert_user_id,st_name,st_email,st_vehicle_color,st_license_state,st_zipcode,st_state_prefix,st_city,in_transportation_id,in_leg_id');
		$this->db->from('tbl_non_doobert_transport_users');
		$this->db->where('in_non_doobert_user_id',$id);
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	function get_non_doobert_driver_details($transport_id)
	{
		$this->db->select('in_non_doobert_user_id,st_name,st_email,st_vehicle_color,st_license_state,st_zipcode,st_state_prefix,st_city,in_transportation_id,in_leg_id');
		$this->db->from('tbl_non_doobert_transport_users');
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_deleted','0');
		$query = $this->db->get();
		
		return $query->result_array();
	}
	
	function match_user_email_id($email_id)
	{
		$this->db->select('u.in_user_id,u.st_email,u.st_display_name,u.st_last_name,up.st_primary_phone');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id = up.in_user_id','INNER');
		$this->db->where("(u.st_email='".$email_id."' OR u.st_secondary_email ='".$email_id."')");
		//$this->db->where('u.st_email',$email_id);
		$this->db->where('u.in_deleted','0');
		$this->db->where('up.in_deleted','0');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function get_user_email_id($email_id)
	{
		$this->db->select('u.in_user_id,u.st_email,
							u.st_display_name,
							u.st_last_name,
							up.st_zip,
							up.st_primary_phone,
							up.st_driver,
							uv.st_vehicle_type,
							uv.st_vehicle_license_plate,
							uv.st_vehicle_license_state,
							uv.st_vehicle_color');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id = up.in_user_id','INNER');
		$this->db->join('tbl_user_vehicle uv','u.in_user_id = uv.in_user_id AND uv.in_deleted = 0','LEFT');
		$this->db->where("(u.st_email='".$email_id."' OR u.st_secondary_email ='".$email_id."')");
		//$this->db->where('u.st_email',$email_id);
		$this->db->where('u.in_deleted','0');
		$this->db->where('up.in_deleted','0');
		//$this->db->where('uv.in_deleted','0');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_transport_coordinator_detail($transport_id)
	{
		$transport_details = array();
		if(!empty($transport_id))
		{	
			$type = $this->get_transport_details($transport_id);
			$transport_date = date('Y-m-d', strtotime($type[0]['dt_target']."+7 day"));
			$today_date= date('Y-m-d');
			$today_dt = new DateTime($today_date);
			$expire_dt = new DateTime($transport_date);
		}
		$this->db->select("tr.in_transportation_id,
						   tr.in_trans_coods_id,
						   o.st_org_code,
						   u.st_email as coordinatoremail,
						   concat(u.st_display_name,' ',u.st_last_name) as coordinatorname",FALSE);
		$where = array("tr.in_deleted"=>"0","tr.in_transportation_id"=>$transport_id);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_organization o",'tr.in_organization_id = o.in_organization_id','INNER'); // added by sadiq
		if($type[0]['st_trans_type']=='D' && $expire_dt >= $today_dt)
		{
			$this->db->join("tbl_users u","u.in_user_id = tr.accTcid","INNER");
		} else {	
			$this->db->join("tbl_users u","u.in_user_id = tr.in_trans_coods_id","INNER");
		}
		$this->db->where($where);
		$query =	$this->db->get();
		if($query->num_rows()>0)
		{
			$transport_co_details = $query->row_array();
		}
		//echo "<pre>";print_r($transport_co_details);die;
		return $transport_co_details;
	}
	
	function get_leg_required_user_count_by_id($id) {
		$this->db->select('in_user_num');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_leg_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_user_rel_legs($trans_id,$user_id)
	{	
		$details 		= $this->get_driver_detail_by_user_id($user_id);
		//echo '<pre/>driver details';print_r($details);
		$pilot_details  = $this->get_pilot_detail_by_user_id($user_id);
		//echo '<pre/>pilot details';print_r($pilot_details);				
		
		$driver		= '';
		$pilot		= '';
		
		$arrData = array();	
		if(!empty($details) || !empty($pilot_details))
		{
			if(!empty($details))
			{
				$days 		= "'".implode("','",unserialize($details['st_driver_availability']))."'";
				$lat 		= $details['lat'];
				$lon 		= $details['lon'];
				$distance 	= $details['in_distance_to_drive'];
			}
			if(!empty($pilot_details))
			{
				$a_days 	= "'".implode("','",unserialize($pilot_details['st_pilot_availability']))."'";
				$a_lat 		= $pilot_details['st_latitude'];
				$a_lon 		= $pilot_details['st_longitude'];
				$a_distance = $pilot_details['in_distance_to_pilot'];
			}
			
			$transport_legs = $this->get_trans_legs();
			
			foreach($transport_legs as $legs_val)
			{
				if($legs_val['route_type'] == 'Road')
				{
					$this->db->select("l.in_transportation_leg_id,l.in_status as mark_completed,d.st_leg_type as pick_type,d.st_street as pick_street,d.st_city as pick_city,d.st_state as pick_state,d.st_country as pick_country,d.dt_start_time as pick_start_time,d.st_timezone as pick_timezone,dp.st_leg_type as drop_type,dp.st_street as drop_street,dp.st_city as drop_city,dp.st_state as drop_state,dp.st_country as drop_country,dp.dt_start_time as drop_start_time,dp.st_timezone as drop_timezone,st_meeting_location,in_multi_user,in_user_num,l.in_route_type,l.in_sort_order,
								tr.dt_target,
								DATE_FORMAT(tr.dt_pickup_date, '%a') as pdays,
								DATE_FORMAT(tr.dt_target, '%a') as days,
								tr.in_transportation_id,
								tr.in_status, 
								tr.st_from_zip, 
								tr.st_to_zip, 
								tr.in_tot_distance, 
								tr.in_distance_covered,
								tr.st_trans_type,
								round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) perc,
								d.st_zip as pick_zip,
								dp.st_zip as drop_zip,
								z.lat,
								z.lon",FALSE);
					$this->db->from("tbl_transportation_leg l");
					$this->db->join("tbl_transportation tr",'tr.in_transportation_id = l.in_transportation_id','INNER');
					$this->db->join("tbl_transportation_leg_detail d",'d.in_transportation_leg_id=l.in_transportation_leg_id AND d.in_deleted = "0" AND d.st_leg_type = "P"','LEFT');
					$this->db->join("tbl_transportation_leg_detail dp",'dp.in_transportation_leg_id=l.in_transportation_leg_id AND d.in_deleted = "0" AND dp.st_leg_type = "D"','LEFT');					
					$this->db->join("tbl_zip_code z","d.st_zip = z.zip_code","INNER");
					$this->db->join("tbl_zip_code tz","dp.st_zip = tz.zip_code","INNER");
					$where = array("tr.in_transportation_id"=>$trans_id,"l.in_transportation_leg_id"=>$legs_val['leg_id'],"tr.in_deleted"=>'0',"tr.in_status"=>"1","tr.in_near_by_email"=>"0");
					$this->db->where($where);
					
					$pilot_h = '';
					$driver_h = '';
					if(!empty($details))
					{
						$driver = '(3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat))))<="'.$distance.'" 
						OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat)))) is NULL 
					OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(tz.lat))))<="'.$distance.'" 
					OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(tz.lat)))) is NULL  ';
						$driver_h = '(days in('.$days .') OR pdays in('.$days .'))';
					}
					if(!empty($pilot_details))
					{
						$pilot  = '(3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat))))<="'.$a_distance.'" 
					OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat)))) is NULL	
					OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(tz.lat))))<="'.$a_distance.'" 
					OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(tz.lat))*cos(radians(tz.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(tz.lat)))) is NULL ';
						$pilot_h = '(days in('.$a_days .') OR pdays in('.$a_days .'))';
					}
					$cnd = ($driver)?$driver:"";
					$cnd_h = ($driver_h)?$driver_h:"";
					if($cnd!='' && $pilot!='' )
					{
						$cnd .= " OR ".$pilot;
					}
					elseif($pilot)
					{
						$cnd = $pilot;
					}
					if($cnd)
					{
						$cnd = "( ".$cnd." ) ";
					}
					if($cnd_h!='' && $pilot_h!='' )
					{
						$cnd_h .= " OR ".$pilot_h;
					}
					elseif($pilot_h)
					{
						$cnd_h = $pilot_h;
					}
					if($cnd_h)
					{
						$cnd_h = "( ".$cnd_h." ) AND ";
					}
					//echo $cnd_h;die;
					
					$this->db->where($cnd.'GROUP BY tr.in_transportation_id HAVING '.$cnd_h.' perc < "100" ', NULL, FALSE);
					//$this->db->limit(1);
					$query =	$this->db->get();
					//echo "<pre>".$this->db->last_query();//die;
					if($query->num_rows() > 0)
					{
						foreach($query->result() as $Row)
						{
							$r_type = '';
							if($Row->in_route_type == 1)
							{
								$r_type = 'Aviation';
							}
							if($Row->in_route_type == 2)
							{
								$r_type = 'Overnight';
							}
							if($Row->in_route_type == 0)
							{
								$r_type = 'Road';
							}
							$arrData[$Row->in_transportation_leg_id]['in_sort_order']= $Row->in_sort_order;	
							
							if($Row->pick_type=="P")
							{	
								$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;		
								$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
								$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;	
								$arrData[$Row->in_transportation_leg_id]['leg_type_P']		= $Row->pick_type;
								$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
								$arrData[$Row->in_transportation_leg_id]['pick_street']		= $Row->pick_street;
								$arrData[$Row->in_transportation_leg_id]['pick_state']		= $Row->pick_state;
								$arrData[$Row->in_transportation_leg_id]['pick_city']		= $Row->pick_city;
								$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->pick_zip;
								$arrData[$Row->in_transportation_leg_id]['pick_country']	= $Row->pick_country;
								$arrData[$Row->in_transportation_leg_id]['pick_start_time']	= $Row->pick_start_time;
								$arrData[$Row->in_transportation_leg_id]['pick_timezone']	= $Row->pick_timezone;
								$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
								$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
								$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014
							}
							
							if($Row->drop_type=="D")
							{
								$arrData[$Row->in_transportation_leg_id]['route_type']		= $r_type;	
								$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
								$arrData[$Row->in_transportation_leg_id]['mark_completed']	= $Row->mark_completed;		
								$arrData[$Row->in_transportation_leg_id]['leg_type_D']		= $Row->drop_type;
								$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
								$arrData[$Row->in_transportation_leg_id]['drop_street']		= $Row->drop_street;
								$arrData[$Row->in_transportation_leg_id]['drop_state']		= $Row->drop_state;
								$arrData[$Row->in_transportation_leg_id]['drop_city']		= $Row->drop_city;
								$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->drop_zip;
								$arrData[$Row->in_transportation_leg_id]['drop_country']	= $Row->drop_country;
								$arrData[$Row->in_transportation_leg_id]['drop_start_time']	= $Row->drop_start_time;
								$arrData[$Row->in_transportation_leg_id]['drop_timezone']	= $Row->drop_timezone;
								$arrData[$Row->in_transportation_leg_id]['meeting_location']= $Row->st_meeting_location;	//added by ghanshyam on 04Dec2014	
								$arrData[$Row->in_transportation_leg_id]['multiple_drivers_pilots']= $Row->in_multi_user;	//added by ghanshyam on 04Dec2014	
								$arrData[$Row->in_transportation_leg_id]['no_of_drivers_pilots']= $Row->in_user_num;	//added by ghanshyam on 04Dec2014
							}
						}
				}
			}
			
				if($legs_val['route_type'] == 'Overnight')
				{
					$this->db->select("l.in_transportation_leg_id,l.in_status as mark_completed,d.st_leg_type,d.st_street,d.st_city,d.st_state,d.st_country,d.dt_start_time,d.st_timezone,st_meeting_location,in_multi_user,in_user_num,l.in_route_type,l.in_sort_order,
								tr.dt_target,
								DATE_FORMAT(tr.dt_pickup_date, '%a') as pdays,
								DATE_FORMAT(tr.dt_target, '%a') as days,
								tr.in_transportation_id,
								tr.in_status, 
								tr.st_from_zip, 
								tr.st_to_zip, 
								tr.in_tot_distance, 
								tr.in_distance_covered,
								tr.st_trans_type,
								round(( tr.in_distance_covered/tr.in_tot_distance * 100 ), 2) perc,
								d.st_zip,
								z.lat,
								z.lon",FALSE);
					$this->db->from("tbl_transportation_leg l");
					$this->db->join("tbl_transportation tr",'tr.in_transportation_id = l.in_transportation_id','INNER');
					$this->db->join("tbl_transportation_leg_detail d",'d.in_transportation_leg_id=l.in_transportation_leg_id AND d.in_deleted = "0" AND d.st_leg_type = "O"','LEFT');					
					$this->db->join("tbl_zip_code z","d.st_zip = z.zip_code","INNER");
					$where = array("tr.in_transportation_id"=>$trans_id,"l.in_transportation_leg_id"=>$legs_val['leg_id'],"tr.in_deleted"=>'0',"tr.in_status"=>"1","tr.in_near_by_email"=>"0");
					$this->db->where($where);
					
					$pilot_h = '';
					$driver_h = '';
					if(!empty($details))
					{
						$driver = '(3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat))))<="'.$distance.'" 
						OR (3959*acos(cos(radians("'.$lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$lon.'"))+sin(radians("'.$lat.'"))*sin(radians(z.lat)))) is NULL ';
						$driver_h = '(days in('.$days .') OR pdays in('.$days .'))';
					}
					if(!empty($pilot_details))
					{
						$pilot  = '(3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat))))<="'.$a_distance.'" 
					OR (3959*acos(cos(radians("'.$a_lat.'"))*cos(radians(z.lat))*cos(radians(z.lon)-radians("'.$a_lon.'"))+sin(radians("'.$a_lat.'"))*sin(radians(z.lat)))) is NULL	';
						$pilot_h = '(days in('.$a_days .') OR pdays in('.$a_days .'))';
					}
					$cnd = ($driver)?$driver:"";
					$cnd_h = ($driver_h)?$driver_h:"";
					if($cnd!='' && $pilot!='' )
					{
						$cnd .= " OR ".$pilot;
					}
					elseif($pilot)
					{
						$cnd = $pilot;
					}
					if($cnd)
					{
						$cnd = "( ".$cnd." ) ";
					}
					if($cnd_h!='' && $pilot_h!='' )
					{
						$cnd_h .= " OR ".$pilot_h;
					}
					elseif($pilot_h)
					{
						$cnd_h = $pilot_h;
					}
					if($cnd_h)
					{
						$cnd_h = "( ".$cnd_h." ) AND ";
					}
					//echo $cnd_h;die;
					
					$this->db->where($cnd.'GROUP BY tr.in_transportation_id HAVING '.$cnd_h.' perc < "100" ', NULL, FALSE);
					//$this->db->limit(1);
					$query =	$this->db->get();
					//echo "<pre>".$this->db->last_query();//die;
					if($query->num_rows() > 0)
					{
						foreach($query->result() as $Row)
						{
							$r_type = '';
							if($Row->in_route_type == 1)
							{
								$r_type = 'Aviation';
							}
							if($Row->in_route_type == 2)
							{
								$r_type = 'Overnight';
							}
							if($Row->in_route_type == 0)
							{
								$r_type = 'Road';
							}
							$arrData[$Row->in_transportation_leg_id]['in_sort_order']= $Row->in_sort_order;	
							
							if($Row->st_leg_type=="O")
							{	
								$arrData[$Row->in_transportation_leg_id]['route_type']			= $r_type;		
								$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
								$arrData[$Row->in_transportation_leg_id]['mark_completed']		= $Row->mark_completed;	
								$arrData[$Row->in_transportation_leg_id]['leg_type_O']			= $Row->st_leg_type;
								$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
								$arrData[$Row->in_transportation_leg_id]['o_pick_street']		= $Row->st_street;
								$arrData[$Row->in_transportation_leg_id]['o_pick_state']		= $Row->st_state;
								$arrData[$Row->in_transportation_leg_id]['o_pick_city']			= $Row->st_city;
								$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;
								$arrData[$Row->in_transportation_leg_id]['o_pick_country']		= $Row->st_country;
								$arrData[$Row->in_transportation_leg_id]['o_pick_start_time']	= $Row->dt_start_time;
								$arrData[$Row->in_transportation_leg_id]['overnight_comments']	= $Row->st_meeting_location;
							}
							
						}
				}
			}
			}
		}
		//print_r($arrData);exit;
		return $arrData;
	}
	
	public function get_driver_detail_by_user_id($user_id)
	{
		
		$this->db->select("pr.in_user_id,pr.st_driver,v.st_driver_availability,v.st_zip_vehicle,v.in_distance_to_drive,zip_lat,zip_lon,z.lat,z.lon");
		$this->db->from("tbl_user_profile pr ");
		$this->db->join("tbl_user_vehicle v","v.in_user_id = pr.in_user_id",'INNER');
		$this->db->join("tbl_zip_code z","v.st_zip_vehicle = z.zip_code",'INNER');
		$where = array("pr.in_deleted"=>'0',"pr.st_driver"=>"Y","v.in_deleted"=>"0","pr.in_user_id"=>$user_id);
		$this->db->where($where);
		$this->db->order_by("v.in_distance_to_drive","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	public function get_pilot_detail_by_user_id($user_id)
	{
		
		$this->db->select("pr.in_user_id,pr.st_driver,vp.st_pilot_availability,vp.st_pilot_zip,vp.in_distance_to_pilot,a.st_longitude,a.st_latitude");
		$this->db->from("tbl_user_profile pr ");
		$this->db->join("tbl_user_pilot vp","vp.in_user_id = pr.in_user_id",'INNER');
		$this->db->join("tbl_airport a","a.st_loc_id = vp.st_identifier",'INNER');
		$where = array("pr.in_deleted"=>'0',"pr.st_pilot"=>"Y","vp.in_deleted"=>"0","a.in_deleted"=>"0","pr.in_user_id"=>$user_id);
		$this->db->where($where);
		$this->db->order_by("vp.in_distance_to_pilot","DESC");
		$query =	$this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	function get_state_city_country_by_zipcode($zipcode)
	{
		$this->db->select('city,state_prefix,st_country');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zipcode);
		$this->db->limit('1');
		$query = $this->db->get();
		
		return $query->row_array();
	}
	
	function add_recommended_leg($arrData)
	{
		$insert_id = $this->db->insert('tbl_recommend_legs', $arrData);
		//echo "<pre>";print_r($this->db->last_query());die;
		return  $this->db->insert_id();
	}
	
	public function get_trans_cron_legs($trans_id)
	{	
		$arrData = array();
		$insert_cron_status = false;
		$this->db->select('l.in_transportation_leg_id,d.st_leg_type,DATE_FORMAT(d.dt_start_time, "%a") as day,l.in_sort_order,st_zip,l.in_route_type',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$trans_id);
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$get_transport_corn_leg =  $this->transport_cron_leg($trans_id);
			foreach($query->result() as $Row)
			{
				if(count($get_transport_corn_leg) >0)
				{
					if (in_array($Row->in_transportation_leg_id, $get_transport_corn_leg,true)== false)
					{
							$get_user_leg_participant =  $this->get_leg_participant_detail_by_leg_id_user_id($Row->in_transportation_leg_id,'');
							if(count($get_user_leg_participant)>0)
							{	
								$insert_cron_status = false;
							}	
							else {	
								$insert_cron_status = true;
							}	
					} else {
						$insert_cron_status = false;
					}
					
				} else {
					$get_user_leg_participant =  $this->get_leg_participant_detail_by_leg_id_user_id($Row->in_transportation_leg_id,'');
							if(count($get_user_leg_participant)>0)
							{	
								$insert_cron_status = false;
							}	
							else
							{		
								$insert_cron_status = true;
							}	
				}
				if($insert_cron_status == true)
				{	
					if($Row->st_leg_type=="P")
					{	
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);

						$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
						$arrData[$Row->in_transportation_leg_id]['pick_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['pick_lon']		= $lat_long_details['lon'];
						$arrData[$Row->in_transportation_leg_id]['pick_day']		= $Row->day;			
					}
				
					if($Row->st_leg_type=="D")
					{
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);
				
						$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
						$arrData[$Row->in_transportation_leg_id]['drop_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['drop_lon']		= $lat_long_details['lon'];	
						$arrData[$Row->in_transportation_leg_id]['drop_day']		= $Row->day;			
					}
					//added by ghanshyam on 05Dec2014
					if($Row->st_leg_type=="O")
					{	
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);
					
						$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;					
						$arrData[$Row->in_transportation_leg_id]['o_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['o_lon']		= $lat_long_details['lon'];
					
						$overnight_leg_day	= $this->get_overnight_leg_date($trans_id,$Row->in_sort_order);
						
						$arrData[$Row->in_transportation_leg_id]['o_day'] 	= $overnight_leg_day['day'];
					
					
					
					}
				}
				
			}
			
			return $arrData;
		}
	}
	
	public function transport_cron_leg($trans_id)
	{
		$cron_leg_id = array();
		$transport_legs_data = array();
		$this->db->select('st_transport_legs');
		$this->db->from('tbl_rel_transport_cron');
		$this->db->where('in_transport_id',$trans_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$transport_legs_data = unserialize($Row->st_transport_legs);
				if(count($transport_legs_data)>0)
				{	
					foreach($transport_legs_data as $trans_val)
					{
						if (in_array($trans_val['leg_id'], $cron_leg_id,true)== false)
						{
							array_push($cron_leg_id,$trans_val['leg_id']);
						}
					}
				}		
			}	
		}
		return $cron_leg_id;
	}
	
	public function get_overnight_leg_date($t_id,$sort_order)
	{
		$overnight_leg_data = array();
		//echo $t_id;
		//echo $sort_order;
		
		if(isset($sort_order) && $sort_order > 1)
		{
			$this->db->select('DATE_FORMAT(d.dt_start_time, "%a") as day',FALSE);
			$this->db->from('tbl_transportation_leg as l');
			$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
			$this->db->where('l.in_transportation_id',$t_id);
			$this->db->where('l.in_sort_order',($sort_order-1));
			$this->db->where('l.in_deleted',0);
			$this->db->where('d.in_deleted',0);
			$this->db->where('d.st_leg_type','D');
			$query = $this->db->get();
			//echo $this->db->last_query();die;
			 
			$overnight_leg_data = $query->row_array();		
		}
		//print_r($overnight_leg_data);exit;
		return $overnight_leg_data;
	}
	
	public function insert_transport_legs_details($data)
	{
		$insert_id = $this->db->insert('tbl_rel_transport_cron', $data);
		return $insert_id;
	}

	public function get_leg_data($tr_id)
	{
		$this->db->select('count(in_transportation_leg_id) as cnt');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_id',$tr_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
	//return $total_leg->result();
		$result=array();
		foreach($query->result() as $Row)
		{
			$result['cnt']=$Row->cnt;
		}
		return $result;
	}
	
	public function get_file_name_by_id($file_id)
	{
		$file_name = '';
		$this->db->select('st_file_name',FALSE);
		$this->db->from('tbl_transportation_file');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transport_file_id',$file_id);
		$query = $this->db->get();
		$result = $query->row_array();
		if(isset($result) && !empty($result))
		{
			$file_name = $result['st_file_name'];
		}
		return $file_name;
	}
	
	public function get_photo_name_by_id($file_id)
	{
		$file_name = '';
		$this->db->select('st_file_name',FALSE);
		$this->db->from('tbl_transportation_photo');
		$this->db->where('in_deleted',0);
		$this->db->where('in_transport_photo_id',$file_id);
		$query = $this->db->get();
		$result = $query->row_array();
		if(isset($result) && !empty($result))
		{
			$file_name = $result['st_file_name'];
		}
		return $file_name;
	}
	
	public function update_transport_detail_by_id($details,$transport_id)
	{
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->update('tbl_transportation',$details);
		//echo $this->db->last_query();die;
	}
	
	function delete_transport_from_routes_listing($leg_id)
	{
		$arrData = array("in_routes_copy_from"=>1);
		$this->db->where('in_transportation_id',$leg_id);
		$this->db->update("tbl_transportation",$arrData);
		if($this->db->affected_rows() >=0){
		return true; 
		}else{
		return false; 
		}
	}
	
	public function add_transport_rescue_details($post_data)
	{
		$added_id = $this->db->insert('tbl_transport_rescue_story', $post_data);
		//echo $this->db->last_query(); die;
		return  $this->db->insert_id();
	}
	
	public function delete_transport_story($id,$created_by_id) {
		$this->db->where('in_id',$id);
		$this->db->where('in_created_by',$created_by_id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_transport_rescue_story',$data);
		
		$this->db->where('in_transport_story_id',$id);
		$data = array('in_deleted' => 1);
		$this->db->update('tbl_transportation_photo',$data);
		return $this->db->affected_rows();
	}

	public function insert_transport_date_log($arrData)
	{
		$this->db->insert('tbl_transport_date_log', $arrData);
		return  $this->db->insert_id();
	}
	
	public function insert_transport_animal_log($arrData)
	{
		$this->db->insert('tbl_transport_animal_log', $arrData);
		return  $this->db->insert_id();
	}
	
	public function get_transport_users_by_permission()
	{	
		$this->db->select('l.in_transportation_leg_id,l.in_status as mark_completed,l.in_route_type, l.in_vehicle_id as leg_vehicle_id, l.in_multi_user, l.in_user_num, l.st_meeting_location, d.st_leg_type, d.st_street, d.st_city, d.st_state, d.st_zip,d.st_country, d.dt_start_time, d.st_timezone,p.in_user_id,p.in_transportation_leg_id as in_source_leg_id,concat(u.st_display_name," ",u.st_last_name) as st_display_name,u.st_profile_image,pr.st_primary_phone,pr.st_address1 as pr_st_address1,pr.st_city as pr_st_city,pr.st_state as pr_st_state,pr.st_zip as pr_st_zip,u.st_email as user_email,u.in_public,v.in_vehicle_id,v.st_vehicle_type, v.st_vehicle_color, v.st_vehicle_license_plate, v.st_vehicle_license_state,vp.st_plane_type,vp.st_plane_color,vp.st_identifier,vp.st_plane_number,vp.in_plane_ifr,ps.st_contact,(SELECT count(in_tr_pr_id) FROM tbl_transportation_participants WHERE in_deleted=0 AND in_transportation_leg_id=l.in_transportation_leg_id) as participants_cnt,(SELECT count(in_non_doobert_user_id) FROM tbl_non_doobert_transport_users WHERE in_deleted=0 AND in_leg_id=l.in_transportation_leg_id) as non_doobert_participants_cnt',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id = l.in_transportation_leg_id','INNER');
		$this->db->join('tbl_transportation_participants p','p.in_transportation_leg_id = l.in_transportation_leg_id AND p.in_deleted=0','LEFT');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','LEFT');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id AND u.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_vehicle v','v.in_user_id = u.in_user_id AND v.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_pilot vp','vp.in_user_id = u.in_user_id AND vp.in_deleted = 0','LEFT');
		$this->db->join('tbl_user_profile_setting ps','ps.in_user_id = u.in_user_id AND ps.in_deleted = 0','LEFT');
		$this->db->join('tbl_vehicle_image vi','vi.in_vehicle_id = v.in_vehicle_id AND vi.in_deleted = 0','LEFT');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$this->session->userdata('transport_id'));
		//$this->db->where_not_in('l.in_route_type','2'); //added by ghanshyam on 05Dec2014
		//$this->db->order_by('l.in_transportation_leg_id','ASC');
		$this->db->order_by('l.in_sort_order','ASC');		
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$arrData[$Row->in_transportation_leg_id]['leg_participant_details'] = $this->get_legs_participants_by_leg_id_permission($Row->in_transportation_leg_id);
				
				$arrData[$Row->in_transportation_leg_id]['non_doobert_leg_participant_details'] = $this->get_non_doobert_legs_participants_by_leg_id_permission($Row->in_transportation_leg_id);
				
			}
			//echo "<pre>";print_r($arrData);die;
			
			//echo "<pre>";print_r($leg_participant_details);die;
			
			return $arrData;
		}
	}
	
	function get_legs_participants_by_leg_id_permission($leg_id)
	{
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_profile_image,u.st_email as user_email',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_users u','p.in_user_id = u.in_user_id AND u.in_deleted = 0','INNER');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_transportation_leg_id',$leg_id);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		return $query->result_array();
	}
	
	
	function get_non_doobert_legs_participants_by_leg_id_permission($leg_id)
	{
		$this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id',FALSE);
		$this->db->from('tbl_non_doobert_transport_users nd');
		$this->db->where('nd.in_deleted',0);
		$this->db->where('nd.in_leg_id',$leg_id);
		$this->db->where('nd.in_transportation_id',$this->session->userdata('transport_id'));
		$query =	$this->db->get();
		
		//echo "<pre>";print_r($this->db->last_query());//die;
		return $query->result_array();
	}
	
	function get_all_colorado_legs()
	{
		//SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
		$this->db->select('tp.in_transportation_leg_id');
		$this->db->from('tbl_transportation_leg tp');
		$this->db->join('tbl_transportation_leg_detail p','p.in_transportation_leg_id=tp.in_transportation_leg_id','INNER');
		$this->db->where('tp.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('p.st_state','CO');
		$this->db->where('tp.in_deleted','0');
		$this->db->group_by('tp.in_transportation_leg_id');
		$query = $this->db->get();
		//echo "<pre>";print_r($this->db->last_query());
		return $query->result_array();
	}
	
	function enable_colorado_notify()
	{
		$colorado_notify = array('in_transport_cron_colorodo_notify' => 1);										
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->update('tbl_transportation',$colorado_notify);
		return $this->db->affected_rows();				 
	}
	
	public function update_rescue_transport_photo($story_id)
	{   
		$array=array("in_deleted"	=>	'1');
		$this->db->where('in_transport_story_id',$story_id);
		$this->db->where('st_file_type','V');
		$this->db->update('tbl_transportation_photo',$array);
	}
	
	public function get_rescue_story($story_id)
	{   
		$this->db->select('st_rescue_title,st_rescue_story,in_flag',FALSE);
		$this->db->from('tbl_transport_rescue_story');				
		$this->db->where('in_id',$story_id);	
		$this->db->where('in_deleted',0);	
		$query = $this->db->get();		
		//echo $this->db->last_query();die;
		//return $query->row_array();
		
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{			
			
				if($Row->in_flag == 1)
				{
					$story1 = unserialize($Row->st_rescue_story);
					//$story1= implode('',$story);
				}
				else{
					$story1= $Row->st_rescue_story;
				}
			
				$arrData[]	= array("st_rescue_title"	=> $Row->st_rescue_title,
									"st_rescue_story"	=> $story1,
									'in_flag'			=> $Row->in_flag									
									);
			}
		}		
		return $arrData;		
	}
	
	# *******************************************************************************************	
	#	Function	:	update_transport_rescue_details	
	#	Purpose		:	Update story details
	# *******************************************************************************************	
		
	public function update_transport_rescue_details($array,$story_id)
	{
		$this->db->where('in_id',$story_id);
		$this->db->update('tbl_transport_rescue_story',$array);
	}
	
	public function get_last_leg_order()
	{
		$this->db->select('count(l.in_transportation_leg_id) as total_count,',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation tr','tr.in_transportation_id=l.in_transportation_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('tr.in_deleted',0);		
		$this->db->where('tr.in_transportation_id',$this->session->userdata('transport_id'));
		$query = $this->db->get();	
		$total_count = $query->row_array();
		return $total_count['total_count'];
		//$this->db->order_by('l.in_transportation_leg_id','ASC');
	}
	
	function get_all_requesting_router($limit,$rec_per_page)
	{
		$today_date = date('Y-m-d');
		$this->db->select('in_transport_id');
		$this->db->from('tbl_trans_rout_deleted');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_deleted',0);
		$transport_id = array();
		$query = $this->db->get();
		foreach($query->result() as $row)
		{
			array_push($transport_id,$row->in_transport_id);
		}
		$status = array(4,1);
		$this->db->select('tr.in_transportation_id,
						   tr.st_trans_name,
						   tr.st_from_street,	
						   tr.st_from_city,
						   tr.st_from_state,
						   tr.st_from_zip,
						   tr.st_to_street,
						   tr.st_to_city,
						   tr.st_to_state,
						   tr.st_to_zip,
						   tr.dt_pickup_date,
						   tr.dt_target,
						   tr.stRecOrgNm,
						   tr.stR501c3,
						   tr.stSendOrgNm,
						   tr.stS501c3,
						   tr.in_airline_transport,
						   tr.st_trans_type,
						   tr.in_organization_id');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','tr.in_organization_id=o.in_organization_id','INNER');
		$this->db->where('tr.in_deleted',0);
		$this->db->where_in('tr.in_status',$status);
		$this->db->where('tr.enable_routing_status',1);
		$this->db->where('tr.st_trans_type','D');
		$this->db->where('tr.accTcid','0');
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		//$this->db->where('tr.dt_target >=',$today_date);
		$this->db->where('((tr.dt_target >="'.$today_date.'" && tr.in_airline_transport =0) || (tr.in_airline_transport=1))');
		if(count($transport_id)>0)
		{	
			$this->db->where_not_in('tr.in_transportation_id',$transport_id);
		}	
		$this->db->order_by('tr.in_transportation_id','desc');
		
		$this->db->limit($rec_per_page,$limit);
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $row)
			{
				$type = '';
				if($row->in_airline_transport == 1)
				{
					$type = 'Airline';
				} else {
					$type = 'Relay';
				}	
				$router_data[] =  array('transportation_id' => $row->in_transportation_id,
										'from_street'		=> $row->st_from_street,
										'from_city'			=> $row->st_from_city,
										'from_state'		=> $row->st_from_state,
										'from_zip'			=> $row->st_from_zip,
										'to_street'			=> $row->st_to_street,
										'to_city'			=> $row->st_to_city,
										'to_state'			=> $row->st_to_state,
										'to_zip'			=> $row->st_to_zip,
										'pick_date'			=> $row->dt_pickup_date,
										'drop_date'			=> $row->dt_target,
										'st_org_name'		=> $row->stSendOrgNm,
										'st_has_501c3'		=> $row->stS501c3,
										'st_receiving_org_name'	=> $row->stRecOrgNm,
										'receiving_501c3_cert'	=>	$row->stR501c3,
										'st_trans_name'		=> $row->st_trans_name,
										'type'				=> 	$type,
										'st_trans_type'		=> $row->st_trans_type,
										'in_organization_id' => $row->in_organization_id,
									);
				
			}
		} else {
			$router_data = array();
		}		
		return $router_data;
	}
	
	function get_all_requesting_router_count()
	{
		$today_date = date('Y-m-d');
		$this->db->select('in_transport_id');
		$this->db->from('tbl_trans_rout_deleted');
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->where('in_deleted',0);
		$transport_id = array();
		$query = $this->db->get();
		foreach($query->result() as $row)
		{
			array_push($transport_id,$row->in_transport_id);
		}
		$status = array(4,1);
		$this->db->select('tr.in_transportation_id');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','tr.in_organization_id=o.in_organization_id','INNER');
		$this->db->where('tr.in_deleted',0);
		$this->db->where_in('tr.in_status',$status);
		//$this->db->where('tr.in_status',4);
		$this->db->where('tr.enable_routing_status',1);
		$this->db->where('((tr.dt_target >="'.$today_date.'" && tr.in_airline_transport =0) || (tr.in_airline_transport=1))');		
		$this->db->where('tr.st_trans_type','D');
		$this->db->where('tr.accTcid','0');
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		if(count($transport_id)>0)
		{	
			$this->db->where_not_in('tr.in_transportation_id',$transport_id);
		}
		$this->db->order_by('tr.in_transportation_id','desc');
		
		//$this->db->where_not_in('tr.in_transportation_id',$transport_id);
		$query = $this->db->get();
		/*if($query->num_rows() > 0)
		{
			foreach($query->result() as $row)
			{
				$router_data[] =  array('transportation_id' => $row->in_transportation_id,
										'from_city'			=> $row->st_from_city,
										'from_state'		=> $row->st_from_state,
										'from_zip'			=> $row->st_from_zip,
										'to_city'			=> $row->st_to_city,
										'to_state'			=> $row->st_to_state,
										'to_zip'			=> $row->st_to_zip,
										'pick_date'			=> $row->dt_pickup_date,
										'drop_date'			=> $row->dt_target,
										'st_org_name'		=> $row->stSendOrgNm,
										'st_has_501c3'		=> $row->stS501c3,
										'st_receiving_org_name'	=> $row->stRecOrgNm,
										'receiving_501c3_cert'	=>	$row->stR501c3,
										'st_trans_name'		=> $row->st_trans_name	
									);
				
			}
		} else {
			$router_data = array();
		}*/		
		return $query->num_rows();
	}
	
	function get_transport_requesting_router($id)
	{
		$this->db->select('tr.in_transportation_id,
						   tr.st_trans_name,
						   tr.st_from_street,	
						   tr.st_from_city,
						   tr.st_from_state,
						   tr.st_from_zip,
						   tr.st_to_street,
						   tr.st_to_city,
						   tr.st_to_state,
						   tr.st_to_zip,
						   tr.dt_pickup_date,
						   tr.dt_target,
						   tr.stSendOrgNm,
						   tr.stSendNm,
						   tr.stSendEmail,
						   tr.stSphone,
						   tr.stS501c3,
						   tr.stRecOrgNm,  
						   tr.stRecNm,
						   tr.stRecEmail,
						   tr.stRphone,
						   tr.stR501c3,
						   tr.in_organization_id,
						   tr.in_airline_transport');
		$this->db->from('tbl_transportation tr');
		$this->db->where('tr.in_transportation_id',$id);
		$this->db->where('tr.in_deleted',0);
		
		//$this->db->where('tr.in_status',4);
		$this->db->where('tr.st_trans_type','D');
		
		//$this->db->where('tr.accTcid','0');
		
		$row = $this->db->get()->row();

				if($row->in_airline_transport==1)
				{
					$source_loc = $row->st_from_city.' ('.$row->st_from_street.')';
					$dest_loc	= $row->st_to_city.' ('.$row->st_to_street.')';
					$type 		= 'Airline';
					
				} else 
				{
					$source_loc = $row->st_from_city.', '.$row->st_from_state.', '.$row->st_from_zip;
					$dest_loc	= $row->st_to_city.', '.$row->st_to_state.', '.$row->st_to_zip;
					$type 		= 'Relay';
				}

				$organization_code = $this->common_model->get_single_org_details($row->in_organization_id);
				$transport_batch = (isset($organization_code) && count($organization_code)>0 && $organization_code['st_org_code']!='' )?$organization_code['st_org_code']:'DBT';	
		
				$router_data =  array('transportation_id'		  => '#'.$transport_batch.$row->in_transportation_id,
									  'from_source'       		  => $source_loc,
									  'to_dest'       	  		  => $dest_loc,
									  'pick_date'		  		  => date('M d, Y',strtotime($row->dt_pickup_date)),
									  'drop_date'		  		  => date('M d, Y',strtotime($row->dt_target)),
									  'st_org_name'		  		  => $row->stSendOrgNm,
									  'st_has_501c3'	  		  => $row->stS501c3,
									  'st_receiving_org_name'	  => $row->stRecOrgNm,
									  'receiving_501c3_cert'	  => $row->stR501c3,
									  'st_trans_name'			  => $row->st_trans_name,
									  'sending_user_name'		  => $row->stSendNm,
									  'receiving_user_name'	  	  => $row->stRecNm,
									  'sending_email_address'	  => $row->stSendEmail,
									  'receiving_email_address'   => $row->stRecEmail,
									  'sending_phone_number'	  => $row->stSphone,
									  'receiving_phone_number'    => $row->stRphone,
									  'airline_status'		  	  => $row->in_airline_transport,
									  'type'					  => $type,
									  'in_organization_id' 	  	  => $row->in_organization_id,
									  'transportation_number'	  => $row->in_transportation_id,
									);
				
				
		return $router_data;
	}
	
	function get_all_assigned_router($limit,$rec_per_page)
	{
		$this->db->select('tr.in_transportation_id,
						   tr.st_trans_name,
						   tr.st_from_street,		
						   tr.st_from_city,
						   tr.st_from_state,
						   tr.st_from_zip,
						   tr.st_to_street,
						   tr.st_to_city,
						   tr.st_to_state,
						   tr.st_to_zip,
						   tr.dt_pickup_date,
						   tr.dt_target,
						   tr.stRecOrgNm,
						   tr.stR501c3,
						   tr.stSendOrgNm,
						   tr.stS501c3,
						   tr.in_status,
						   tr.in_organization_id,
						   tr.st_trans_type,
						   tr.in_airline_transport');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','tr.in_organization_id=o.in_organization_id','INNER');
		$this->db->where('tr.in_deleted',0);
		//$this->db->where('tr.in_status',1);
		$this->db->where('tr.st_trans_type','D');
		$this->db->where('tr.enable_routing_status','1');
		$this->db->where('tr.in_status!=','3',FALSE);
		$this->db->where('tr.accTcid',$this->session->userdata('userid'));
		//$this->db->where('tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)');
		//$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| (tr.in_airline_transport =1) )');
		//$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| (tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =1) )');
		$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| ( CASE WHEN tr.dt_target!="0000-00-00" AND tr.dt_target!="" AND tr.dt_target!="1969-12-31"  THEN  tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =1 ELSE tr.in_airline_transport =1 END) )');
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		$this->db->order_by('tr.in_transportation_id','desc');
		$this->db->limit($rec_per_page,$limit);
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $row)
			{
				$type = '';
				if($row->in_airline_transport == 1)
				{
					$type = 'Airline';
				} else {
					$type = 'Relay';
				}	
				$router_data[] =  array('transportation_id' => $row->in_transportation_id,
										'from_street'		=> $row->st_from_street, 
										'from_city'			=> $row->st_from_city,
										'from_state'		=> $row->st_from_state,
										'from_zip'			=> $row->st_from_zip,
										'to_street'			=> $row->st_to_street,
										'to_city'			=> $row->st_to_city,
										'to_state'			=> $row->st_to_state,
										'to_zip'			=> $row->st_to_zip,
										'pick_date'			=> $row->dt_pickup_date,
										'drop_date'			=> $row->dt_target,
										'st_org_name'		=> $row->stSendOrgNm,
										'st_has_501c3'		=> $row->stS501c3,
										'st_receiving_org_name'	=> $row->stRecOrgNm,
										'receiving_501c3_cert'	=>	$row->stR501c3,
										'st_trans_name'		=> $row->st_trans_name,
										'in_status'			=> $row->in_status,
										 'type'				=> 	$type,
										 'st_trans_type'    => $row->st_trans_type,
										'in_organization_id' => $row->in_organization_id,	
									);
				
			}
		} else {
			$router_data = array();
		}		
		return $router_data;
	}
	
	function get_all_assigned_router_count()
	{
		$this->db->select('tr.in_transportation_id');
		$this->db->from('tbl_transportation tr');
		$this->db->join('tbl_organization o','tr.in_organization_id=o.in_organization_id','INNER');
		$this->db->where('tr.in_deleted',0);
		//$this->db->where('tr.in_status',1);
		$this->db->where('tr.st_trans_type','D');
		$this->db->where('tr.enable_routing_status','1');
		$this->db->where('tr.in_status!=','3',FALSE);
		$this->db->where('tr.accTcid',$this->session->userdata('userid'));
		//$this->db->where('tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)');
		//$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| (tr.in_airline_transport =1) )');
		//$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| (tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =1) )');
		$this->db->where('((tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =0 )|| ( CASE WHEN tr.dt_target!="0000-00-00" AND tr.dt_target!="" AND tr.dt_target!="1969-12-31"  THEN  tr.dt_target >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) && tr.in_airline_transport =1 ELSE tr.in_airline_transport =1 END) )');
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		$this->db->order_by('tr.in_transportation_id','desc');
		$query = $this->db->get();		
		return $query->num_rows();
	}
	
	public function get_legs_data($origin_zip,$dest_zip,$tra_id,$transport_details,$split_based_on,$default_split_val,$start_time,$end_time,$handoff_time)
	{
		//echo 'called get_legs_data';	
		
		$mode = 'driving';
		$url = "http://maps.googleapis.com/maps/api/directions/json?origin=$origin_zip&destination=$dest_zip&mode=$mode&alternatives=false&sensor=false";
		// create curl resource
		$ch = curl_init();
		// set url
		curl_setopt($ch, CURLOPT_URL, $url);
		//return the transfer as a string
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		// $output contains the output string
		$output = curl_exec($ch);
		// close curl resource to free up system resources
		curl_close($ch);
		//echo $output;die;
		$response_array = json_decode($output, TRUE);
		//echo "<pre>";print_r($response_array); die;
		//echo '<br/>'.$url;
		if($response_array['status'] == 'OK')
		{   
			$tmp_miles_array = array();
			$routes = $response_array['routes'];
			//echo '<pre/>routes data:'; print_r($routes);
			
			for($a=0;$a<count($routes[0]['legs']);$a++)
			{	
				$map_routes = $routes[0]['legs'][$a]['steps'];
				//echo "<pre>map_routes: "; print_r(($map_routes)); 
				//die;
				
				
				for($x=0;$x<count($map_routes);$x++)
				{
					//echo '<pre/>';echo 'value of x: '.$x;
					//echo "<br>";
					
					$leg_miles_value = preg_replace("/[^0-9.]/", "", $map_routes[$x]['distance']['text']);
					$leg_parameter = substr(trim($map_routes[$x]['distance']['text']),-2);
					if($leg_parameter == 'ft')
					{
						$leg_miles_value = number_format((float)$leg_miles_value/5280, 4, '.', '');
					}
					//echo 'leg distance in miles: '. $leg_miles_value;
					//echo "<br>";
					
					if($leg_miles_value > $default_split_val)
					{
						/*echo 'split leg again';
						echo "<br>";
						echo 'start location lat: '.$map_routes[0]['start_location']['lat'];
						echo 'start location long: '.$map_routes[0]['start_location']['lng'];
						echo "<br>";*/
						
					}
				}
			}	
			//exit;
			
			$legs_dist = 0;
			$legs_min = 0;
			$add_last = 0;
			$total_legs_min = 0;
			$add_prev = 0;
			$next_new_leg_dist = 0;
			$next_leg_time = 0;
			
			for($a=0;$a<count($routes[0]['legs']);$a++)
			{	
				$map_routes = $routes[0]['legs'][$a]['steps'];
				//echo "<pre>map_routes: "; print_r(($map_routes)); die;
				
				$leg_new_arr = array();
				$leg_no = 1;
				$user_time_zone = $this->common_model->get_user_timezone($this->session->userdata('userid'));	
				if(isset($user_time_zone) && !empty($user_time_zone))
				{
					$time_zone = $user_time_zone['st_time_zone'];
				}
				$leg_data = array();
				$next_start_address = '';
				$o_night = 0;
				$new_leg_dist = 0;
				for($x=0;$x<count($map_routes);$x++)
				{
					$add_prev = 0;
					$dist_bet_two_legs = $default_split_val;
					if($leg_no == 1)
					{
						$start_location = $map_routes[0]['start_location']['lat'].' '.$map_routes[0]['start_location']['lng'];						
					}
					else
					{
						$start_location = $next_start_address;
					}
					
					$leg_miles_value = preg_replace("/[^0-9.]/", "", $map_routes[$x]['distance']['text']);
					//echo 'distance'.trim($map_routes[$x]['distance']['text']);
					//echo 'leg_parameter'.$leg_parameter = substr(trim($map_routes[$x]['distance']['text']),-2);
					$leg_parameter = substr(trim($map_routes[$x]['distance']['text']),-2);
					if($leg_parameter == 'ft')
					{
						//$leg_miles_value = $leg_miles_value/5280;
						$leg_miles_value = number_format((float)$leg_miles_value/5280, 4, '.', '');
					}
					
					//echo "<pre>"; echo 'leg_miles_value: '.$leg_miles_value;
					$legs_dist = $legs_dist+ $leg_miles_value;
					//echo "<pre>"; echo 'legs_dist'.$legs_dist;
					//echo "<pre>"; echo 'legs sort no: '.($leg_no+1);
					$new_leg_dist = $new_leg_dist+$leg_miles_value;
					//echo "<pre>"; echo 'new_leg_dist: '.($new_leg_dist);
					
					if(isset($map_routes[$x+1]))
					{
					$next_leg_miles_value = preg_replace("/[^0-9.]/", "", $map_routes[$x+1]['distance']['text']);
					//echo 'distance'.trim($map_routes[$x]['distance']['text']);
					//echo 'leg_parameter'.$leg_parameter = substr(trim($map_routes[$x]['distance']['text']),-2);
					$next_leg_parameter = substr(trim($map_routes[$x+1]['distance']['text']),-2);
					if($next_leg_parameter == 'ft')
					{
						//$leg_miles_value = $leg_miles_value/5280;
						$next_leg_miles_value = number_format((float)$next_leg_miles_value/5280, 4, '.', '');
					}
					
					$next_new_leg_dist = $next_new_leg_dist+$next_leg_miles_value;
					
					}
					//echo "<pre>"; echo 'next_new_leg_dist: '.($next_new_leg_dist);
					
					//echo "<pre>"; echo 'next_leg_miles_value: '.($next_leg_miles_value);
					
					/*$current_total_distance_diff = ($dist_bet_two_legs*($leg_no)) - $legs_dist;
					
					echo '<pre/>'; echo 'current_total_distance_diff: '.($current_total_distance_diff);
					
					$next_total_distance_diff = ($dist_bet_two_legs*($leg_no)) - ($next_leg_miles_value);
					
					echo '<pre/>'; echo 'next_total_distance_diff: '.($next_total_distance_diff);*/
					
					$new_leg_min = 0;
					
					
					$leg_time_in_sec	=  trim($map_routes[$x]['duration']['value']);
					$leg_time_in_min	=  round($leg_time_in_sec/60);
					if($leg_time_in_min <= 1)
					{
						$leg_time_in_min = 1;
					}
					
					$legs_min = $legs_min+ $leg_time_in_min;
					$total_legs_min = $total_legs_min+ $leg_time_in_min;
					
					//echo '<br/>'; echo 'total legs min: '.$total_legs_min;
					
					//echo '<br/>'; echo 'current loop legs min: '.$legs_min;
					
					$new_leg_min = $new_leg_min+$leg_time_in_min;
					
					//echo '<br/>'; echo 'new_leg_min'.$new_leg_min;
					
					$mins_bet_two_legs = $default_split_val;
					
					
					if(isset($map_routes[$x+1]))
					{
						$next_leg_time_in_sec = trim($map_routes[$x+1]['duration']['value']);
						$next_leg_time_in_min =  round($next_leg_time_in_sec/60);
						if($next_leg_time_in_min <= 1)
						{
							$next_leg_time_in_min = 1;
						}
						$next_leg_time = $next_leg_time+$next_leg_time_in_min;	
					}
					
					//echo '<br/>'; echo 'next_leg_time'.$next_leg_time;
					
					if($split_based_on == 't')
					{
						//echo 'split_based_on time';
						
						if($x == (count($map_routes)-1))
						{
							if(($mins_bet_two_legs - $new_leg_min) > 0 && $new_leg_min < $mins_bet_two_legs)
							{
								//echo 'add last leg';
								$add_last = 1;
							} 
						}
						
						if($next_leg_time > (($mins_bet_two_legs*($leg_no)) + ($mins_bet_two_legs*($leg_no))* 25 /100))
						{
							//echo 'add prev leg';
							$add_prev = 1;
						}
						
						//echo '<pre/>';echo 'leg no. '.$leg_no;
						//echo '<pre/>';echo 'value of x: '.$x;
								
						if((($new_leg_min > ($mins_bet_two_legs*80/100)) && ($total_legs_min >= $mins_bet_two_legs*($leg_no))) || ($add_last == 1) || ($add_prev == 1))
						{
								$overnight	= 0;
								//echo '<pre/>';echo 'leg no. '.$leg_no;
								//echo '<pre/>';echo 'value of x: '.$x;
								if($leg_no == 1)
								{
									$cure_legs_dist = $legs_dist;
								}else{
									$cure_legs_dist = $new_leg_dist;							
								}
								if(isset($next_leg_start_time) && $next_leg_start_time != '')
								{
									$leg_start_time = $next_leg_start_time;
									//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
								}
								elseif(isset($leg_end_time) && $leg_end_time != '')
								{
									$leg_start_time = date('Y-m-d H:i',strtotime("+{$handoff_time} minutes",strtotime($leg_end_time)));
									//$leg_start_time = date('Y-m-d H:i',strtotime('+10 minutes',strtotime($leg_end_time)));
									//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
								}
								else
								{
									$start_time_array = explode(' ',$start_time);
									$start_time = $start_time_array[0];
									$leg_start_time = date("Y-m-d {$start_time}", strtotime($transport_details['dt_pickup_date']));									
								}
								//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
								
								$rounded_legs_min = $this->roundUpToAny($legs_min,5);
								$leg_end_time = date('Y-m-d H:i',strtotime("+{$rounded_legs_min} minutes",strtotime($leg_start_time)));
								
								//echo '<br/>';echo 'leg_end_time'.$leg_end_time;
								
								$leg_end_only_time = date("H:i",strtotime($leg_end_time));
							
								$leg_end_only_date = date('Y-m-d',strtotime($leg_end_time));
								$add_days = $o_night;
	
								$u_end_time  = date("H:i", strtotime($end_time));
								if( $o_night > 0 )
								{
								$user_end_time = date("Y-m-d {$u_end_time}",strtotime("+{$add_days} days",strtotime($transport_details['dt_pickup_date'])));
								}else{
								$user_end_time = date("Y-m-d {$u_end_time}",strtotime($transport_details['dt_pickup_date']));
								}	
								
								$user_end_only_date = date('Y-m-d',strtotime($user_end_time));
								
								if(strtotime($leg_end_time) >= strtotime($user_end_time))
								{
									$overnight = 1;
									$o_night++;
									$legs_array = array("in_transportation_id" => $tra_id,
													"in_route_type" => '2',
													"in_multi_user" => '0', 
													"in_user_num" => '0', 
													"st_meeting_location" => "", 
													"in_created_by" => $this->session->userdata('userid'),
													//"in_sort_order" => ($leg_no+1),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => "0"
												);
						
									//print_r($legs_array);exit;					
									//echo 'insert legs start';exit;
									
									$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
									//echo 'overnight leg address '. $next_start_address;
									$overnight_address = $next_start_address;
									$overnight_address = str_replace(' ', '+', $overnight_address);
	
									$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$overnight_address.'&sensor=false';
									//echo $url."<br><br><br>";
									$ch = curl_init();
									curl_setopt($ch, CURLOPT_URL, $url);
									curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
									$geoloc = curl_exec($ch);
									//echo "<pre>";print_r(json_decode($geoloc));die;
									if(json_decode($geoloc)->status=="OK"){
									$json = json_decode($geoloc);
									//echo '<pre/>';print_r($json);
									$o_postal_code = '';
									$o_state='';
									$o_city='';
									$o_country='';
									for($c=0;$c<count($json->results[0]->address_components);$c++)
									{
										if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
										{
											$o_postal_code = $json->results[0]->address_components[$c]->short_name;
										}
										if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
										{
											$o_state = $json->results[0]->address_components[$c]->short_name;
										}
										if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
										{
											$o_city = $json->results[0]->address_components[$c]->short_name;					
										}
										if($city == '')
										{
											$zip_data = $this->get_state_city_by_zipcode($o_postal_code);
											if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
											{
												$o_city = $zip_data['city'];
											}
										}
										if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
										{
											$o_country = $json->results[0]->address_components[$c]->short_name;
										}
									}
									//echo "<pre>overnight address: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
										
										
										$overnight_array = array("in_transportation_leg_id" => $leg_id,
															"st_leg_type" => "O",
															//"st_street" => $legs['o_pickup_street'],
															"st_city " => $o_city,
															"st_state " => $o_state,
															"st_zip " => $o_postal_code,
															"st_country " => $o_country,
															"in_deleted" => "0"
														);
										$this->orgtrasnportation_model->add_legs_details($overnight_array);
															
									}
									
									//update leg start time based on user earliest leg start time
									if(strtotime($user_end_only_date) == strtotime($leg_end_only_date)){
									$next_leg_start_time	= date("Y-m-d {$start_time}",strtotime("+1 days",strtotime($leg_end_only_date)));
									}else{
									$next_leg_start_time	= date("Y-m-d {$start_time}",strtotime($leg_end_only_date));
									}
									//echo '<br/>';echo 'after overnight next leg start time'.$next_leg_start_time;
									
								}
								else
								{
								$legs_array = array("in_transportation_id" => $tra_id,
													"in_route_type" => '0',
													"in_multi_user" => '0', 
													"in_user_num" => '0', 
													"st_meeting_location" => "", 
													"in_created_by" => $this->session->userdata('userid'),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => "0"
												);
						
								//print_r($legs_array);exit;					
								//echo 'insert legs start';exit;
								$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
								
								//echo '<pre/>start_location lat long'; echo $start_location;
								
								$address = $start_location;
								$address = str_replace(' ', '+', $address);
								
								$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&sensor=false';
								//echo $url."<br><br><br>";
								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL, $url);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
								$geoloc = curl_exec($ch);
								//echo "<pre>";print_r(json_decode($geoloc));die;
								$postal_code = '';
								if(json_decode($geoloc)->status=="OK")
								{
								$json = json_decode($geoloc);
								//echo '<pre/>';print_r($json);
								$postal_code = '';
								$state='';
								$city='';
								$country='';
								for($c=0;$c<count($json->results[0]->address_components);$c++)
								{
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
									{
										$postal_code = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
									{
										$state = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
									{
										$city = $json->results[0]->address_components[$c]->short_name;					
									}
									if($city == '')
									{
										$zip_data = $this->get_state_city_by_zipcode($postal_code);
										if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
										{
											$city = $zip_data['city'];
										}
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
									{
										$country = $json->results[0]->address_components[$c]->short_name;
									}
								}
								echo "<pre>start adderess: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
								
								
								$pickup_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type" => "P",
													//"st_street" => $legs[$i]['pickup_street'],
													"st_city" => $city,
													"st_state" => $state,
													"st_zip" => $postal_code,
													"st_country" => $country,
													"dt_start_time" => $leg_start_time,
													"st_timezone" => isset($time_zone) && $time_zone != '' ? $time_zone : 'CST',
													//"st_geometry"				=> @serialize($lat_long),
													"in_deleted" => "0"
												);
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
								}
								
								$end_address = $map_routes[$x]['end_location']['lat'].' '.$map_routes[$x]['end_location']['lng'];
								$next_start_address = $map_routes[$x]['end_location']['lat'].' '.$map_routes[$x]['end_location']['lng'];
								
								//echo '<pre/>end_location lat long'; echo $end_address;
								
								$end_address = str_replace(' ', '+', $end_address);
								
								$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$end_address.'&sensor=false';
								//echo $url."<br><br><br>";
								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL, $url);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
								$geoloc = curl_exec($ch);
								//echo "<pre>";print_r(json_decode($geoloc));die;
								$postal_code = '';
								if(json_decode($geoloc)->status=="OK"){
								$json = json_decode($geoloc);
								//echo '<pre/>';print_r($json);
								$postal_code = '';
								$state='';
								$city='';
								$country='';
								for($c=0;$c<count($json->results[0]->address_components);$c++)
								{
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
									{
										$postal_code = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
									{
										$state = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
									{
										$city = $json->results[0]->address_components[$c]->short_name;					
									}
									if($city == '')
									{
										$zip_data = $this->get_state_city_by_zipcode($postal_code);
										if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
										{
											$city = $zip_data['city'];
										}
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
									{
										$country = $json->results[0]->address_components[$c]->short_name;
									}
								}
								echo "<pre>end address: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
								
								$dropoff_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type" => "D",
													//"st_street" => $legs[$i]['dropoff_street'],
													"st_city " => $city,
													"st_state " => $state,
													"st_zip " => $postal_code,
													"st_country " => $country,
													"dt_start_time" => $leg_end_time,
													"st_timezone" =>  isset($time_zone) && $time_zone != '' ? $time_zone : 'CST',
													//"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
													"in_deleted" => "0"
												);
								$this->orgtrasnportation_model->add_legs_details($dropoff_array);
								}
								
								//$next_leg_start_time = date('Y-m-d H:i',strtotime('+10 minutes',strtotime($leg_end_time)));
								$next_leg_start_time = date('Y-m-d H:i',strtotime("+{$handoff_time} minutes",strtotime($leg_end_time)));
		
								if (isset($cure_legs_dist) && $cure_legs_dist != '') {
										$route_details = array("in_transportation_leg_id" => $leg_id,
											"in_transportation_id" => $tra_id,
											"in_route_type" => '0',
											"st_legs_details" => '',
											"fl_distance" => $cure_legs_dist,
											"in_deleted" => "0"
										);
										$this->common_model->insert_data("tbl_routes", $route_details);
									}
							}
								
							$old_leg_no =  $leg_no;
							if($leg_time_in_min > ($mins_bet_two_legs*1) && $leg_time_in_min <= ($mins_bet_two_legs*2))
							{
								$leg_no = ($leg_no+1);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*2) && $leg_time_in_min <= ($mins_bet_two_legs*3))
							{
								$leg_no = ($leg_no+2);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*3) && $leg_time_in_min <= ($mins_bet_two_legs*4))
							{
								$leg_no = ($leg_no+3);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*4) && $leg_time_in_min <= ($mins_bet_two_legs*5))
							{
								$leg_no = ($leg_no+4);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*5) && $leg_time_in_min <= ($mins_bet_two_legs*6))
							{
								$leg_no = ($leg_no+5);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*6) && $leg_time_in_min <= ($mins_bet_two_legs*7))
							{
								$leg_no = ($leg_no+6);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*7) && $leg_time_in_min <= ($mins_bet_two_legs*8))
							{
								$leg_no = ($leg_no+7);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*8) && $leg_time_in_min <= ($mins_bet_two_legs*9))
							{
								$leg_no = ($leg_no+8);
							}
							if($leg_time_in_min > ($mins_bet_two_legs*9) && $leg_time_in_min <= ($mins_bet_two_legs*10))
							{
								$leg_no = ($leg_no+9);
							}
							if($leg_miles_value > ($dist_bet_two_legs*10) && $leg_miles_value <= ($dist_bet_two_legs*11))
							{
								$leg_no = ($leg_no+10);
							}
							if($leg_miles_value > ($dist_bet_two_legs*11) && $leg_miles_value <= ($dist_bet_two_legs*12))
							{
								$leg_no = ($leg_no+11);
							}
							if($old_leg_no == $leg_no)
							{
								$leg_no++;
							}	
							if($overnight != 1)
							{
								$new_leg_dist = 0;
								$legs_min = 0;	
							}
							$overnight = 0;		
						}
					}
					
					$dist_bet_two_legs = $default_split_val;
					
					//echo '<pre/>';echo 'leg no. '.$leg_no;
					//echo '<pre/>';echo 'value of x: '.$x;
						
					if($split_based_on == 'd')
					{
						//echo 'split_based_on distance';
						//echo '<pre/>';echo 'total legs count: '.count($map_routes);
						//echo '<pre/>';echo 'leg no. '.$leg_no;
						//echo '<pre/>';echo 'value of x: '.$x;
						//echo '<br/>';echo 'leg distance is:'.($dist_bet_two_legs*($leg_no) - $legs_dist);
						//echo '<br/>';echo 'total_legs_dist'.$legs_dist;
						
						if($x == (count($map_routes)-1))
						{
							if(($dist_bet_two_legs - $new_leg_dist) > 0 && $new_leg_dist < $dist_bet_two_legs)
							{
								//echo 'add last leg';
								$add_last = 1;
							} 
						}
						
						if($next_new_leg_dist > (($dist_bet_two_legs*($leg_no)) + ($dist_bet_two_legs*($leg_no))* 25 /100))
						{
							//echo 'add prev leg';
							$add_prev = 1;
						}
						
						if(((($new_leg_dist > ($dist_bet_two_legs*80/100))) && ($legs_dist >= $dist_bet_two_legs*($leg_no))) || ($add_last == 1) || ($add_prev == 1))
						{
							$overnight	= 0;
							//echo '<pre/>';echo 'leg no. '.$leg_no;
							//echo '<pre/>';echo 'value of x: '.$x;
							if($leg_no == 1)
							{
								$cure_legs_dist = $legs_dist;
								//echo '<br/>'; echo 'inside if'; echo 'cure_legs_dist'.$cure_legs_dist;
							}else{
								$cure_legs_dist = $new_leg_dist;	
								//echo '<br/>'; echo 'inside else'; echo 'cure_legs_dist'.$cure_legs_dist;						
							}
							
							if(isset($next_leg_start_time) && $next_leg_start_time != '')
							{
								$leg_start_time = $next_leg_start_time;
								//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
							}
							elseif(isset($leg_end_time) && $leg_end_time != '')
							{
								//$leg_start_time = date('Y-m-d H:i',strtotime('+10 minutes',strtotime($leg_end_time)));
								$leg_start_time = date('Y-m-d H:i',strtotime("+{$handoff_time} minutes",strtotime($leg_end_time)));
								//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
							}
							else
							{
								//$start_time_array = explode(' ',$start_time);
								//$start_time = $start_time_array[0];
								$start_time  = date("H:i", strtotime($start_time));
								$leg_start_time = date("Y-m-d {$start_time}", strtotime($transport_details['dt_pickup_date']));
								
							}
							//echo '<br/>';echo 'leg_start_time'.$leg_start_time;
							$rounded_legs_min = $this->roundUpToAny($legs_min,5);
							//echo '<br/>';
							//echo 'rounded_legs_min'.strtotime($rounded_legs_min);//exit;
							//echo '<br/>';
							$leg_end_time = date('Y-m-d H:i',strtotime("+{$rounded_legs_min} minutes",strtotime($leg_start_time)));
							//echo '<br/>';echo 'leg_end_time'.$leg_end_time;
							
							$leg_end_only_time = date("H:i",strtotime($leg_end_time));
							
							$leg_end_only_date = date('Y-m-d',strtotime($leg_end_time));
							$add_days = $o_night;
							//echo '<br/>';
							//echo 'user add_days'.$add_days;
							
							$u_end_time  = date("H:i", strtotime($end_time));
							if( $o_night > 0 )
							{
							$user_end_time = date("Y-m-d {$u_end_time}",strtotime("+{$add_days} days",strtotime($transport_details['dt_pickup_date'])));
							}else{
							$user_end_time = date("Y-m-d {$u_end_time}",strtotime($transport_details['dt_pickup_date']));
							}
							//$user_end_time  = date("H:i", strtotime($end_time));	
							
							//echo '<br/>';echo 'user end time'.$user_end_time;
							
							$user_end_only_date = date('Y-m-d',strtotime($user_end_time));
							//echo '<br/>';
							//echo 'user end date'.$user_end_only_date;
							//if(strtotime($leg_end_only_time) >= strtotime($user_end_time))
							if(strtotime($leg_end_time) >= strtotime($user_end_time))
							{
								$overnight = 1;
								$o_night++;
								$legs_array = array("in_transportation_id" => $tra_id,
												"in_route_type" => '2',
												"in_multi_user" => '0', 
												"in_user_num" => '0', 
												"st_meeting_location" => "", 
												"in_created_by" => $this->session->userdata('userid'),
												//"in_sort_order" => ($leg_no+1),
												"dt_created" => date("Y-m-d H:i:s"),
												"in_deleted" => "0"
											);
					
								//print_r($legs_array);exit;					
								//echo 'insert legs start';exit;
								
								$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
								//echo 'overnight leg address '. $next_start_address;
								$overnight_address = $next_start_address;
								$overnight_address = str_replace(' ', '+', $overnight_address);

								$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$overnight_address.'&sensor=false';
								//echo $url."<br><br><br>";
								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL, $url);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
								$geoloc = curl_exec($ch);
								//echo "<pre>";print_r(json_decode($geoloc));die;
								if(json_decode($geoloc)->status=="OK"){
								$json = json_decode($geoloc);
								//echo '<pre/>';print_r($json);
								$o_postal_code = '';
								$o_state='';
								$o_city='';
								$o_country='';
								for($c=0;$c<count($json->results[0]->address_components);$c++)
								{
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
									{
										$o_postal_code = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
									{
										$o_state = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
									{
										$o_city = $json->results[0]->address_components[$c]->short_name;					
									}
									if($city == '')
									{
										$zip_data = $this->get_state_city_by_zipcode($o_postal_code);
										if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
										{
											$o_city = $zip_data['city'];
										}
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
									{
										$o_country = $json->results[0]->address_components[$c]->short_name;
									}
								}
								//echo "<pre>overnight address: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
									
									
									$overnight_array = array("in_transportation_leg_id" => $leg_id,
														"st_leg_type" => "O",
														//"st_street" => $legs['o_pickup_street'],
														"st_city " => $o_city,
														"st_state " => $o_state,
														"st_zip " => $o_postal_code,
														"st_country " => $o_country,
														"in_deleted" => "0"
													);
									$this->orgtrasnportation_model->add_legs_details($overnight_array);
														
								}
								
								//update leg start time based on user earliest leg start time
								if(strtotime($user_end_only_date) == strtotime($leg_end_only_date)){
								$start_time  = date("H:i", strtotime($start_time));
								$next_leg_start_time	= date("Y-m-d {$start_time}",strtotime("+1 days",strtotime($leg_end_only_date)));
								}else{
								$start_time  = date("H:i", strtotime($start_time));
								$next_leg_start_time	= date("Y-m-d {$start_time}",strtotime($leg_end_only_date));
								}
								//echo '<br/>';echo 'after overnight next leg start time'.$next_leg_start_time;
								
							}
							else
							{
								$legs_array = array("in_transportation_id" => $tra_id,
													"in_route_type" => '0',
													"in_multi_user" => '0', 
													"in_user_num" => '0', 
													"st_meeting_location" => "", 
													"in_created_by" => $this->session->userdata('userid'),
													//"in_sort_order" => ($leg_no+1),
													"dt_created" => date("Y-m-d H:i:s"),
													"in_deleted" => "0"
												);
						
								//print_r($legs_array);exit;					
								//echo 'insert legs start';exit;
								$leg_id = $this->orgtrasnportation_model->create_legs($legs_array);
								
								//echo '<pre/>start_location lat long'; echo $start_location;
								
								$address = $start_location;
								$address = str_replace(' ', '+', $address);
								
								$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$address.'&sensor=false';
								//echo $url."<br><br><br>";
								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL, $url);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
								$geoloc = curl_exec($ch);
								//echo "<pre>";print_r(json_decode($geoloc));die;
								$postal_code = '';
								if(json_decode($geoloc)->status=="OK")
								{
								$json = json_decode($geoloc);
								//echo '<pre/>';print_r($json);
								$postal_code = '';
								$state='';
								$city='';
								$country='';
								for($c=0;$c<count($json->results[0]->address_components);$c++)
								{
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
									{
										$postal_code = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
									{
										$state = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
									{
										$city = $json->results[0]->address_components[$c]->short_name;					
									}
									if($city == '')
									{
										$zip_data = $this->get_state_city_by_zipcode($postal_code);
										if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
										{
											$city = $zip_data['city'];
										}
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
									{
										$country = $json->results[0]->address_components[$c]->short_name;
									}
								}
								//echo "<pre>start adderess: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
								
								
								$pickup_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type" => "P",
													//"st_street" => $legs[$i]['pickup_street'],
													"st_city" => $city,
													"st_state" => $state,
													"st_zip" => $postal_code,
													"st_country" => $country,
													"dt_start_time" => $leg_start_time,
													"st_timezone" => isset($time_zone) && $time_zone != '' ? $time_zone : 'CST',
													//"st_geometry"				=> @serialize($lat_long),
													"in_deleted" => "0"
												);
								$this->orgtrasnportation_model->add_legs_details($pickup_array);
								}
								
								$end_address = $map_routes[$x]['end_location']['lat'].' '.$map_routes[$x]['end_location']['lng'];
								$next_start_address = $map_routes[$x]['end_location']['lat'].' '.$map_routes[$x]['end_location']['lng'];
								
								//echo '<pre/>end_location lat long'; echo $end_address;
								
								$end_address = str_replace(' ', '+', $end_address);
								
								$url = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$end_address.'&sensor=false';
								//echo $url."<br><br><br>";
								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL, $url);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
								$geoloc = curl_exec($ch);
								//echo "<pre>";print_r(json_decode($geoloc));die;
								$postal_code = '';
								if(json_decode($geoloc)->status=="OK"){
								$json = json_decode($geoloc);
								//echo '<pre/>';print_r($json);
								$postal_code = '';
								$state='';
								$city='';
								$country='';
								for($c=0;$c<count($json->results[0]->address_components);$c++)
								{
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='postal_code')
									{
										$postal_code = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='administrative_area_level_1')
									{
										$state = $json->results[0]->address_components[$c]->short_name;
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='locality')
									{
										$city = $json->results[0]->address_components[$c]->short_name;					
									}
									if($city == '')
									{
										$zip_data = $this->get_state_city_by_zipcode($postal_code);
										if(isset($zip_data) && !empty($zip_data) && $zip_data['city'] != '')
										{
											$city = $zip_data['city'];
										}
									}
									if(isset($json->results[0]->address_components[$c]->types[0]) && $json->results[0]->address_components[$c]->types[0]=='country')
									{
										$country = $json->results[0]->address_components[$c]->short_name;
									}
								}
								//echo "<pre>end address: ";print_r(array("postal_code"=>$postal_code,"state"=>$state,"city"=>$city,"country" => $country,"lat_long"=> array($json->results[0]->geometry->location->lat, $json->results[0]->geometry->location->lng)));
								
								$dropoff_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type" => "D",
													//"st_street" => $legs[$i]['dropoff_street'],
													"st_city " => $city,
													"st_state " => $state,
													"st_zip " => $postal_code,
													"st_country " => $country,
													"dt_start_time" => $leg_end_time,
													"st_timezone" =>  isset($time_zone) && $time_zone != '' ? $time_zone : 'CST',
													//"st_geometry"				=> @serialize($routes_miles['routes_lat_lon']),
													"in_deleted" => "0"
												);
								$this->orgtrasnportation_model->add_legs_details($dropoff_array);
								}
								
								//$next_leg_start_time = date('Y-m-d H:i',strtotime('+10 minutes',strtotime($leg_end_time)));
								$next_leg_start_time = date('Y-m-d H:i',strtotime("+{$handoff_time} minutes",strtotime($leg_end_time)));
								
								//echo '<pre/>'; echo 'cure_legs_dist'.$cure_legs_dist;
								
								 if (isset($cure_legs_dist) && $cure_legs_dist != '') {
										$route_details = array("in_transportation_leg_id" => $leg_id,
											"in_transportation_id" => $tra_id,
											"in_route_type" => '0',
											"st_legs_details" => '',
											"fl_distance" => $cure_legs_dist,
											"in_deleted" => "0"
										);
										$this->common_model->insert_data("tbl_routes", $route_details);
									}
								}
							
							$old_leg_no =  $leg_no;
							if($leg_miles_value > ($dist_bet_two_legs*1) && $leg_miles_value <= ($dist_bet_two_legs*2))
							{
								$leg_no = ($leg_no+1);
							}
							if($leg_miles_value > ($dist_bet_two_legs*2) && $leg_miles_value <= ($dist_bet_two_legs*3))
							{
								$leg_no = ($leg_no+2);
							}
							if($leg_miles_value > ($dist_bet_two_legs*3) && $leg_miles_value <= ($dist_bet_two_legs*4))
							{
								$leg_no = ($leg_no+3);
							}
							if($leg_miles_value > ($dist_bet_two_legs*4) && $leg_miles_value <= ($dist_bet_two_legs*5))
							{
								$leg_no = ($leg_no+4);
							}
							if($leg_miles_value > ($dist_bet_two_legs*5) && $leg_miles_value <= ($dist_bet_two_legs*6))
							{
								$leg_no = ($leg_no+5);
							}
							if($leg_miles_value > ($dist_bet_two_legs*6) && $leg_miles_value <= ($dist_bet_two_legs*7))
							{
								$leg_no = ($leg_no+6);
							}
							if($leg_miles_value > ($dist_bet_two_legs*7) && $leg_miles_value <= ($dist_bet_two_legs*8))
							{
								$leg_no = ($leg_no+7);
							}
							if($leg_miles_value > ($dist_bet_two_legs*8) && $leg_miles_value <= ($dist_bet_two_legs*9))
							{
								$leg_no = ($leg_no+8);
							}
							if($leg_miles_value > ($dist_bet_two_legs*9) && $leg_miles_value <= ($dist_bet_two_legs*10))
							{
								$leg_no = ($leg_no+9);
							}
							if($leg_miles_value > ($dist_bet_two_legs*10) && $leg_miles_value <= ($dist_bet_two_legs*11))
							{
								$leg_no = ($leg_no+10);
							}
							if($leg_miles_value > ($dist_bet_two_legs*11) && $leg_miles_value <= ($dist_bet_two_legs*12))
							{
								$leg_no = ($leg_no+11);
							}
							if($old_leg_no == $leg_no)
							{
								$leg_no++;
							}	
							
							if($overnight != 1)
							{
								$new_leg_dist = 0;
								$legs_min = 0;	
							}
							$overnight = 0;												
						}
					}
					
					if(isset($postal_code) && $postal_code == $transport_details['st_to_zip']) 
					{
						break;
					}
			}
			//echo '<pre/>';print_r($leg_data);
			}
		}
		//exit;
		return true;
	}
	
	function get_all_organization_data($data_val)
	{
		$this->db->select('st_org_name,st_director,st_email_address,st_primary_phone,st_has_501c3,st_zip');
		$this->db->from('tbl_organization');
		$this->db->like('st_org_name',$data_val);
		$this->db->where('in_status',1);
		$this->db->where('in_deleted',0);
		$this->db->limit("10");
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_org_name,
									"value"			=> $Row->st_org_name,
									"telephone"		=> $Row->st_primary_phone,
									"director"		=> $Row->st_director,
									"email"         => $Row->st_email_address,
									"st_has_501c3"  => $Row->st_has_501c3,
									"st_zip"		=> $Row->st_zip	
									);
			}
			return $arrData;
		}
	}
	
	function get_transport_list_data($status,$org_id,$rec_per_page,$limit,$sort,$order)
	{		
		
		$this->db->select("	tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.st_trans_type,
							tr.st_trans_name,
							tr.in_status,
							tr.in_trans_coods_id,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.st_trans_type,
							tr.in_airline_transport,
							tr.in_round,
							tr.in_mins,
							o.st_org_image,
							o.st_org_code,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							concat(tu.st_display_name,' ',tu.st_last_name) as co_name,
							tu.st_email",FALSE);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users tu","tu.in_user_id = tr.in_trans_coods_id", "INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		$where = '';
		$where .= "tr.in_deleted = 0";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		$where .= " AND tr.in_organization_id = '".$org_id."'";
		
		$this->db->where($where);
		$this->db->group_by("tr.in_transportation_id");
		//$this->db->order_by("tr.in_transportation_id","DESC");
		
		switch($sort)
		{
			case 'trid':
					$this->db->order_by("tr.in_transportation_id",$order);
			break;
			case 'transname':
					$this->db->order_by("tr.st_trans_name",$order);
			break;
			case 'tdate':
					$this->db->order_by("tr.dt_pickup_date",$order);
			break;
			case 'coname':
					$this->db->order_by("co_name",$order);
			default:
					$this->db->order_by("tr.in_transportation_id",$order);
			break;	
		} 
		
		$this->db->limit($rec_per_page,$limit);
			
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;     
		return ($query->num_rows() > 0) ? $query->result_array()  :  FALSE;	
	}	
	
	function get_transport_list_all_data($status,$org_id)
	{		
		
		$this->db->select("	tr.in_transportation_id",FALSE);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users tu","tu.in_user_id = tr.in_trans_coods_id", "INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		
		$where = '';
		$where .= "tr.in_deleted = 0";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		$where .= " AND tr.in_organization_id = '".$org_id."'";
		
		$this->db->where($where);		
		$this->db->group_by("tr.in_transportation_id");
			
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;     
		return ($query->num_rows() > 0) ? $query->num_rows()  :  FALSE;	
	}

	public function update_animal_profile($data,$animal_id,$animal_transport_id,$transport_id)
	{
		//$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_animal_id',$animal_id);
		$this->db->update('tbl_animal',$data);
		
		if($animal_transport_id==0 && $transport_id!='' && $transport_id!='0')
		{
			$arrData = array(//"in_transportation_id"	=> $this->session->userdata('transport_id'),
							 "in_transportation_id"	=> $transport_id,
							 "in_animal_id"			=> $animal_id,
							 "in_created_by"		=> $this->session->userdata('userid'),
							 "dt_created"			=> date("Y-m-d H:i:s"),
							 "in_deleted"			=> "0"
							  );
			$this->db->insert('tbl_animal_transportation', $arrData);
		}
		
	}

	function insert_animal_transport($transport_animal)
	{
		$this->db->insert_batch('tbl_animal_file',$transport_animal);
		return  $this->db->insert_id();
	}

	function update_animal_transport($animalarr, $animal_name){
		$this->db->where('st_file_name', $animal_name);
        $this->db->update('tbl_animal_file', $animalarr);
        return $this->db->affected_rows();
	}

	public function add_animal_profile($data,$transport_id) 
	{
		$this->db->insert('tbl_animal',$data);	
		$animals_id = $this->db->insert_id();
		$arraygen=array('gender','pbreed','sbreed','tbreed','age','weight','demeanor','cstatus','nstatus','city','state','clock','where','quarantine','shelter_time','shelter_contact','comments','files','photo_video','pstory','cost','social','birdsex');	
		$general = serialize($arraygen);
		$arraymed = array('neutered','rvaccine','hvaccine','fecaltest','bvaccine','microchipped','surgery','dlhhp','medical_issue','medical_comments');					
		$medical = serialize($arraymed);
		$arraytran = array('crates','frisk','baggresive','recent_vaccine','cvi','current_zip','desired_zip','available_transfer','tr_date','travel','tr_comment');
		$transport = serialize($arraytran);
		$arrayfoster = array ('other','same','trained','kids','declawed','fh_comment');
		$foster = serialize($arrayfoster);
		$date = date('Y-m-d H:i:s');
		
		$animalchkset    = array('in_animal_id'			=> $animals_id,
								 'in_user_id'			=> $this->session->userdata('userid'),
								 'in_organization_id'	=> $this->session->userdata('org_id'),
								 'st_general_setting'	=> $general,
								 'st_medical_setting'	=> $medical,
								 'st_transport_setting'	=> $transport,
								 'st_foster_home_setting'=> $foster,
								 'dt_created'			=> $date,
								  'dt_modified'			=> $date
								);							
			$this->db->insert('tbl_animal_setting',$animalchkset);	
			if($transport_id!='' && $transport_id!='0')
			{
			$arrData = array(//"in_transportation_id"	=> $this->session->userdata('transport_id'),
							 "in_transportation_id"	=> $transport_id,
							 "in_animal_id"			=> $animals_id,
							 "in_created_by"		=> $this->session->userdata('userid'),
							 "dt_created"			=> date("Y-m-d H:i:s"),
							 "in_deleted"			=> "0"
							  );
			$this->db->insert('tbl_animal_transportation', $arrData);
			}
			return $animals_id;
	}

	public function create_split_leg($legs_data,$transport_id,$target_date)
	{
		if(count($legs_data)>0)
		{	
			$row = $this->get_lastleg_order();
			if(count($row)>0)
			{
				$order_no = $row['in_sort_order'];
			} else {
				$order_no = '0'; 
			}	
			foreach ($legs_data as $key=>$value)
			{
				$order_no = $order_no+1;
				if($value['type']=='driver')
				{	
					$legs_array = 	array("in_transportation_id" => $transport_id,
										  "in_route_type" => 0,
										  "in_multi_user" => '0', 
										  "in_user_num" =>  '0', 
										  "st_meeting_location" => "", 
										  "in_created_by" => $this->session->userdata('userid'),
									      "in_sort_order" => $order_no,
									      "dt_created" => date("Y-m-d H:i:s"),
									      "in_deleted" => "0"
									     );
						
					$leg_id = $this->create_legs($legs_array);						
					$source_loc = array();
					$source_zip_state = array();
					$source_loc =  explode(",",$value['sLoc']);
					$s_cnt = count($source_loc);
						
					if($s_cnt>0)
					{
						$st_frm_zip = '';
						$st_frm_city = '';
						$st_frm_state = '';
						$st_frm_country = '';
						$st_frm_street = '';
						$pickupzone = '';
					
					
					
						if(isset($source_loc[$s_cnt-1]) && !empty(trim($source_loc[$s_cnt-1])))
							$st_frm_country = trim($source_loc[$s_cnt-1]);
					
						if(isset($source_loc[$s_cnt-2]) && !empty(trim($source_loc[$s_cnt-2])))
							$source_zip_state = explode(" ",trim($source_loc[$s_cnt-2]));
					
						if(isset($source_zip_state[1]) && !empty($source_zip_state[1]))
						{
							$st_frm_zip .= 	$source_zip_state[1];
							if(isset($source_zip_state[2]) && !empty($source_zip_state[2]))
							{
								$st_frm_zip .= 	$source_zip_state[2];
							}		
						}
					
						if(isset($source_zip_state[1]) && !empty($source_zip_state[1]))
						{	
							$pickup_timezone = $this->get_time_zone($st_frm_zip);
							$pickupzone =  $pickup_timezone['st_time_zone'];
						}
					
						if(isset($source_zip_state[0]) && !empty($source_zip_state[0]))
						{
							$st_frm_state = $source_zip_state[0];
							if(strlen($st_frm_state)>2)
							{
								if($st_frm_country == 'India')
								{	
									if(in_array($source_zip_state[0],$this->common_function->indian_state_list))
									{
										$st_frm_state = array_search($source_zip_state[0],$this->common_function->indian_state_list);
									}				
							
								}
							}	
							
						}
					
						if(isset($source_loc[$s_cnt-3]) && !empty(trim($source_loc[$s_cnt-3])))
							$st_frm_city = trim($source_loc[$s_cnt-3]);
						
						$cnt_street = $s_cnt-3;
						
						foreach($source_loc as $st_key=>$st_value)
						{
							if($cnt_street > $st_key)
								$st_frm_street .= trim($source_loc[$st_key]);
							if($cnt_street > $st_key+1)
								$st_frm_street .= ',';	
						}	
						
						
					
						
		
					
					$pickup_array = array("in_transportation_leg_id" => $leg_id,
										"st_leg_type" 	=> "P",
										"st_street"   	=>  $st_frm_street,
										"st_city" 	  	=>  $st_frm_city,
										"st_state"    	=>  $st_frm_state,
										"st_zip" 	  	=>  $st_frm_zip,
										"st_country"  	=> 	$st_frm_country,
										"dt_start_time" => 	date('Y-m-d H:i:s', strtotime($value['starttime'])),
										"st_timezone" 	=> 	$pickupzone,
										"in_deleted" 	=> 	"0"
									);	
						$this->orgtrasnportation_model->add_legs_details($pickup_array);
					}
					
					
					$dest_loc = array();
					$dest_zip_state = array();
					$dest_loc =  explode(",",$value['eLoc']);
					$d_cnt = count($dest_loc);
					if($d_cnt>0)
					{
						$st_to_zip = '';
						$st_to_city = '';
						$st_to_state = '';
						$st_to_country = '';
						$st_to_street = '';
						$dropoffzone = '';
				
						
						
						if(isset($dest_loc[$d_cnt-1]) && !empty(trim($dest_loc[$d_cnt-1])))	
							$st_to_country = trim($dest_loc[$d_cnt-1]);
						
						if(isset($dest_loc[$d_cnt-2]) && !empty(trim($dest_loc[$d_cnt-2])))
							$dest_zip_state = explode(" ",trim($dest_loc[$d_cnt-2]));
					
						if(isset($dest_zip_state[1]) && !empty($dest_zip_state[1]))
						{
							$st_to_zip .= 	$dest_zip_state[1];
							if(isset($dest_zip_state[2]) && !empty($dest_zip_state[2]))
							{
								$st_to_zip .= 	$dest_zip_state[2];
							}	
						}
			
						if(isset($dest_zip_state[1]) && !empty($dest_zip_state[1]))
						{	
							$dropoff_timezone = $this->get_time_zone($st_to_zip);
							$dropoffzone =  $dropoff_timezone['st_time_zone'];
						}

						if(isset($dest_zip_state[0]) && !empty($dest_zip_state[0]))
						{
							$st_to_state = $dest_zip_state[0];
							if(strlen($st_to_state)>2)
							{
								if($st_to_country == 'India')
								{	
									if(in_array($dest_zip_state[0],$this->common_function->indian_state_list))
									{
										$st_to_state = array_search($dest_zip_state[0],$this->common_function->indian_state_list);
									}				
							
								}
							}
						}
					
						if(isset($dest_loc[$d_cnt-3]) && !empty(trim($dest_loc[$d_cnt-3])))
							$st_to_city = trim($dest_loc[$d_cnt-3]);
						
						$d_cnt_street = $d_cnt-3;
						
						foreach($dest_loc as $dt_key=>$dt_value)
						{
							if($d_cnt_street > $dt_key)
								$st_to_street .= $dest_loc[$dt_key];
							if($d_cnt_street > $dt_key+1)
								$st_to_street .= ',';	
						}
									  
					
						$dropoff_array = array("in_transportation_leg_id" => $leg_id,
													"st_leg_type"   => "D",
													 "st_street"   	=>  $st_to_street,
													   "st_city" 	=>  $st_to_city,
													  "st_state"    =>  $st_to_state,
													    "st_zip" 	=>  $st_to_zip,
													"st_country"  	=> 	$st_to_country,
												  "dt_start_time" => date('Y-m-d H:i:s', strtotime($value['endtime'])),
													"st_timezone" => $dropoffzone,
												   //"st_geometry"=> @serialize($routes_miles['routes_lat_lon']),
													 "in_deleted" => "0"
									  );	
                     
						
						$this->orgtrasnportation_model->add_legs_details($dropoff_array);
					}		
							
					$end_transport_date =   date('Y-m-d', strtotime($value['endtime']));			
			
					$miles_value = preg_replace("/[^0-9.]/", "",$value['distance']);
			
					$route_details = array("in_transportation_leg_id" => $leg_id,
										   "in_transportation_id" => $this->session->userdata('transport_id'),
												  "in_route_type" => 0,
												"st_legs_details" => $value['route_path'],
												    "fl_distance" => $miles_value,
													  "in_deleted" => "0"
										);
                               
					$this->common_model->insert_data("tbl_routes", $route_details);
				} else if($value['type']=='overnight')
				{
					$legs_array = 	array("in_transportation_id" => $transport_id,
											     "in_route_type" => 2,
									             "in_multi_user" => '0', 
									               "in_user_num" =>  '0', 
									       "st_meeting_location" => "", 
									             "in_created_by" => $this->session->userdata('userid'),
									             "in_sort_order" => $order_no,
									                "dt_created" => date("Y-m-d H:i:s"),
									                "in_deleted" => "0"
									     );
						
					$leg_id = $this->create_legs($legs_array);
					
					$source_loc = array();
					$source_zip_state = array();
					$source_loc =  explode(",",$value['overnightLoc']);
					$s_cnt = count($source_loc); 
					$st_frm_zip = '';
					$st_frm_city = '';
					$st_frm_state = '';
					$st_frm_country = '';
					$st_frm_street = '';
					$pickupzone = '';
					
					if($s_cnt>0)
					{
					
						if(isset($source_loc[$s_cnt-1]) && !empty(trim($source_loc[$s_cnt-1])))
							//$st_frm_country = explode(" ",trim($source_loc[$s_cnt-1]));
							$st_frm_country = trim($source_loc[$s_cnt-1]);
						
						
						if(isset($source_loc[$s_cnt-2]) && !empty(trim($source_loc[$s_cnt-2])))
							$source_zip_state = explode(" ",trim($source_loc[$s_cnt-2]));
						
						
						if(isset($source_zip_state[1]) && !empty($source_zip_state[1]))
						{
							$st_frm_zip .= 	$source_zip_state[1];
							if(isset($source_zip_state[2]) && !empty($source_zip_state[2]))
							{
								$st_frm_zip .= 	$source_zip_state[2];
							}		
						}
					
						if(isset($source_zip_state[1]) && !empty($source_zip_state[1]))
						{	
							$pickup_timezone = $this->get_time_zone($st_frm_zip);
							$pickupzone =  $pickup_timezone['st_time_zone'];
						}
					
						if(isset($source_zip_state[0]) && !empty($source_zip_state[0]))
						{
							$st_frm_state = $source_zip_state[0];
							if(strlen($source_zip_state[0])>2)
							{
								if($st_frm_country == 'India')
								{	
									if(in_array($source_zip_state[0],$this->common_function->indian_state_list))
									{
										$st_frm_state = array_search($source_zip_state[0],$this->common_function->indian_state_list);
									}				
							
								}
							}	
							
						}
					
						if(isset($source_loc[$s_cnt-3]) && !empty(trim($source_loc[$s_cnt-3])))
							//$st_frm_city = explode(" ",trim($source_loc[$s_cnt-3]));
						$st_frm_city = trim($source_loc[$s_cnt-3]);
						
						$o_cnt_street = $s_cnt-3;
						
						foreach($source_loc as $o_key=>$o_value)
						{
							if($o_cnt_street > $o_key)
								$st_frm_street .= trim($source_loc[$o_key]);
							if($o_cnt_street > $o_key+1)
								$st_frm_street .= ',';	
						}	
						
						
					
					}

					
					$overnight_array = array("in_transportation_leg_id" => $leg_id,
										"st_leg_type" => "O",
										"st_street" =>   $st_frm_street,
										"st_city" =>    $st_frm_city,
										"st_state" =>   $st_frm_state,
										"st_zip" =>     $st_frm_zip,
										"st_country" => $st_frm_country,
										"dt_start_time" => date('Y-m-d H:i:s', strtotime($value['starttime'])),
										"st_timezone" => $pickupzone,
										//"st_geometry"				=> @serialize($lat_long),
										"in_deleted" => "0"
									);			
					$this->orgtrasnportation_model->add_legs_details($overnight_array);	
						
				}	
			}
				
			$transport_target_date       = new DateTime($target_date);
			$transport_split_end_date    = new DateTime($end_transport_date);	
				
			if(isset($end_transport_date) && $end_transport_date!='1969-12-31' && $end_transport_date!='0000-00-00' && !empty($end_transport_date) && $transport_split_end_date > $transport_target_date)
			{	
				$transport_details = array("dt_target" => date("Y-m-d", strtotime($end_transport_date)));
				$this->orgtrasnportation_model->update_transport_details($transport_details);
			}	
		}
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->update('tbl_transportation_split_detail',array('in_completed_process'=>'0'));	
	}

	function add_splitleg_detail($arrData)
	{
		$user_id = $this->db->insert('tbl_transportation_split_detail', $arrData);
		return  $this->db->insert_id();
	}
	
	function get_all_image($id)
	{
		$this->db->select('in_file_id,in_animal_id,st_file_name,in_profile_pic,dt_created');
		$this->db->from('tbl_animal_file');
		$this->db->where('in_animal_id',$id);
		$this->db->where('st_file_type',"P");
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_profile_pic','desc');
		$query = $this->db->get();
		return $query->result_array();
	}

	function update_animal_transport_status($trans_id,$animal_id)
	{
		$update_data = array('in_deleted' => 1);										
		$this->db->where('in_transportation_id',$trans_id);
		$this->db->where('in_animal_id',$animal_id);
		$this->db->update('tbl_animal_transportation',$update_data);
		return $this->db->affected_rows();
	}

	function get_covering_legs()
	{
		//SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
		$this->db->select('lg.*,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_legs_cover lg');
		$this->db->join('tbl_users u','u.in_user_id=lg.in_user_id','INNER');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','LEFT');
		$this->db->join('tbl_transportation_leg tlg','lg.in_leg_id=tlg.in_transportation_leg_id','LEFT');
		$this->db->where('(lg.in_transportation_id='.$this->session->userdata('transport_id').' AND lg.in_deleted = "0" AND lg.leghandle =  "0")');
		$this->db->or_where('(lg.in_transportation_id='.$this->session->userdata('transport_id').' AND lg.in_deleted = "0" AND tlg.in_deleted =  "0" AND lg.leghandle =  "1")');
		$this->db->group_by('lg.in_id');
		$query = $this->db->get();
		return $query->result_array();
	}

	function get_airline_transport_leg()
	{
		//SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
		$this->db->select('lg.*,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_airline_transport_leg lg');
		$this->db->join('tbl_users u','u.in_user_id=lg.in_user_id','INNER');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','LEFT');
		$this->db->join('tbl_transportation_leg tlg','lg.in_leg_id=tlg.in_transportation_leg_id','LEFT');
		$this->db->where('(lg.in_transportation_id='.$this->session->userdata('transport_id').' AND lg.in_deleted = "0" AND lg.leghandle =  "0")');
		$this->db->or_where('(lg.in_transportation_id='.$this->session->userdata('transport_id').' AND lg.in_deleted = "0" AND tlg.in_deleted =  "0" AND lg.leghandle =  "1")');
		$this->db->group_by('lg.in_id');
		$query = $this->db->get();
		return $query->result_array();
	}	
		
	function get_lat_Lon($zipcode='')
	{
		$this->db->select('lat,lon,id');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zipcode);
		//$this->db->limit('1');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function get_routing_details($id)
	{
		$this->db->select('*');
		$this->db->from('tbl_legs_cover');
		$this->db->where('in_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function get_routing_airline_details($id)
	{
		$this->db->select('*');
		$this->db->from('tbl_airline_transport_leg');
		$this->db->where('in_id',$id);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function update_leghandle($routing_legs_id,$leg_id)
	{
		$legs_handle = array('leghandle' => 1,'in_leg_id'=>$leg_id);										
		$this->db->where('in_id',$routing_legs_id);
		$this->db->update('tbl_legs_cover',$legs_handle);
		return $this->db->affected_rows();		
	}
	
	function update_airline_leghandle($routing_legs_id,$leg_id)
	{
		$legs_handle = array('leghandle' => 1,'in_leg_id'=>$leg_id);										
		$this->db->where('in_id',$routing_legs_id);
		$this->db->update('tbl_airline_transport_leg',$legs_handle);
		return $this->db->affected_rows();		
	}
	
	
	function covering_legs($id)
	{
		//SELECT in_transportation_leg_id FROM  tbl_transportation_participants WHERE  in_transportation_id= '$this->session->userdata('transport_id')' AND in_user_id='$this->session->userdata('userid')'
		$this->db->select('lg.*,u.st_display_name,u.st_last_name');
		$this->db->from('tbl_legs_cover lg');
		$this->db->join('tbl_users u','u.in_user_id=lg.in_user_id','INNER');
		$this->db->where('lg.in_id',$id);
		$this->db->where('lg.in_deleted','0');
		$this->db->group_by('lg.in_id');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	function airline_date_legs($id)
	{
		$this->db->select('lg.*,u.st_display_name,u.st_last_name');
		$this->db->from('tbl_airline_transport_leg lg');
		$this->db->join('tbl_users u','u.in_user_id=lg.in_user_id','INNER');
		$this->db->where('lg.in_id',$id);
		$this->db->where('lg.in_deleted','0');
		$this->db->group_by('lg.in_id');
		$query = $this->db->get();
		return $query->row_array();
	}
	
	
	function get_driver_user($value)
	{
		$arrData = array();
		$this->db->select('u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','INNER');
		//$this->db->like('st_org_name',$data_val);
		$this->db->where("(CONCAT(u.st_display_name,' ',u.st_last_name) LIKE '%".$value."%' OR u.st_email LIKE '%".$value."%')", NULL, FALSE);
		$this->db->where('up.st_driver','Y');
		$this->db->where('u.in_deleted',0);
		$this->db->where('up.in_deleted',0);
		$this->db->where('u.in_status',1);
		$this->db->where("up.st_primary_phone!=''", NULL, FALSE);	
		$this->db->limit('10');
		$query = $this->db->get();
		
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_display_name.' '.$Row->st_last_name.' ('.$Row->st_email.')',
									"value"			=> $Row->in_user_id,
									'name'			=> $Row->st_display_name.' '.$Row->st_last_name,
									'primary_phone' => $Row->st_primary_phone,
									);
			}
		}
		
		return $arrData;
	}
	
	function get_pilot_user($value)
	{
		$arrData = array();
		$this->db->select('u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','INNER');
		$this->db->where("(CONCAT(u.st_display_name,' ',u.st_last_name) LIKE '%".$value."%' OR u.st_email LIKE '%".$value."%')", NULL, FALSE);
		$this->db->where('up.st_pilot','Y');
		$this->db->where('u.in_deleted',0);
		$this->db->where('up.in_deleted',0);
		$this->db->where("up.st_primary_phone!=''", NULL, FALSE);
		$this->db->where('u.in_status',1);
		$this->db->limit('10');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_display_name.' '.$Row->st_last_name.' ('.$Row->st_email.')',
									"value"			=> $Row->in_user_id,
									'name'			=> $Row->st_display_name.' '.$Row->st_last_name,
									'primary_phone' => $Row->st_primary_phone,
									);
			}
		}
		
		return $arrData;
	}
	
	function get_all_user($value)
	{
		$arrData = array();
		$this->db->select('u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','INNER');
		$this->db->where("(CONCAT(u.st_display_name,' ',u.st_last_name) LIKE '%".$value."%' OR u.st_email LIKE '%".$value."%')", NULL, FALSE);
		//$this->db->where('up.st_pilot','Y');
		$this->db->where('u.in_deleted',0);
		$this->db->where("up.st_primary_phone!=''", NULL, FALSE);
		//$this->db->where('up.in_deleted',0);
		$this->db->where('u.in_status',1);
		$this->db->limit('10');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_display_name.' '.$Row->st_last_name.' ('.$Row->st_email.')',
									"value"			=> $Row->in_user_id,
									'name'			=> $Row->st_display_name.' '.$Row->st_last_name,
									'primary_phone' => $Row->st_primary_phone,
									);
			}
		}
		
		return $arrData;
	}
	
	function get_airline_user($value)
	{
		$arrData = array();
		$this->db->select('u.in_user_id,u.st_display_name,u.st_last_name,u.st_email,up.st_primary_phone');
		$this->db->from('tbl_users u');
		$this->db->join('tbl_user_profile up','u.in_user_id=up.in_user_id','INNER');
		$this->db->where("(CONCAT(u.st_display_name,' ',u.st_last_name) LIKE '%".$value."%' OR u.st_email LIKE '%".$value."%')", NULL, FALSE);
		$this->db->where('up.st_airline_emp','Y');
		$this->db->where("up.st_primary_phone!=''", NULL, FALSE);
		$this->db->where('u.in_deleted',0);
		$this->db->where('up.in_deleted',0);
		$this->db->where('u.in_status',1);
		$this->db->limit('10');
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_display_name.' '.$Row->st_last_name.' ('.$Row->st_email.')',
									"value"			=> $Row->in_user_id,
									'name'			=> $Row->st_display_name.' '.$Row->st_last_name,
									'primary_phone' => $Row->st_primary_phone,
									);
			}
		}
		
		return $arrData;
	}
	
	public function delete_routing_leg($details,$id)
	{
		$this->db->where('in_id',$id);
		$this->db->update('tbl_legs_cover',$details);
	}
	
	public function delete_airlinerouting_leg($details,$id)
	{
		$this->db->where('in_id',$id);
		$this->db->update('tbl_airline_transport_leg',$details);
	}
	
	public function check_users_accept_condition($user_id,$org_id,$route_type)
	{
		$arrData = array();
		$this->db->select('in_id');
		$this->db->from('tbl_users_accept_condition');
		$this->db->where('in_user_id',$user_id);
		$this->db->where('in_route_transport',$route_type);
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_airport_base($data_val)
	{
		$this->db->select('*');
		$this->db->from('tbl_airport_base');
		$this->db->where('st_base_name LIKE "%'.$data_val.'%" OR st_city LIKE "%'.$data_val.'%" OR st_label LIKE "%'.$data_val.'%"',NULL,FALSE);
		$this->db->where('in_deleted',0);
		$this->db->limit("10");
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{			
				$arrData[]	= array("label"			=> $Row->st_city.' ('.$Row->st_base_name.')',
									"value"			=> $Row->st_base_name,
									);
			}
		}
		
		return $arrData;	
	}
	
	public function get_state_baseairport($data_val)
	{
		$arrData = array();
		$this->db->select('*');
		$this->db->from('tbl_airport_base');
		$this->db->where('st_base_name',$data_val);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		if($query->num_rows() > 0)
		{
			$arrData = $query->row_array();
		}
		
		return $arrData;
	}
	
	public function delete_nondoobert_user_leg($leg_id,$user_id)
	{	
			
			
				$tra_id			= $this->session->userdata('transport_id');
				$transport_details 	= $this->get_transport_details($tra_id);
				
				//if($transport_details[0]['st_trans_type'] != 'D')
				//{
				$this->db->where('in_non_doobert_user_id',$user_id);
				$update_status = $this->db->update('tbl_non_doobert_transport_users',array("in_deleted"=>'1',"dt_modified"=>date("Y-m-d H:i:s")));
				//}
				if($transport_details['0']['in_airline_transport']=='1')
				{
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg_detail",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_transportation_leg",$arrData);
				
					$arrData = array("in_deleted"=>1);
					$this->db->where('in_transportation_leg_id',$leg_id);
					$this->db->update("tbl_routes",$arrData);
				}
				//echo $this->db->last_query();die;
	}
		
	public function update_order_legs($order_id,$transport_id)
	{
		/*$arrData = array("in_sort_order"=>in_sort_order-1);
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_sort_order >',$order_id);
		$this->db->update("tbl_transportation_leg",$arrData);*/
		$sql ="UPDATE `tbl_transportation_leg` SET `in_sort_order` = in_sort_order-1 WHERE `in_transportation_id` = '$transport_id' AND `in_sort_order` > '$order_id' AND `in_deleted` = 0";
		$query = $this->db->query($sql);
	}
	
	public function update_transport_dates($tra_id)
	{
		$transport_dates = array();
		$this->db->select('min(p.dt_start_time) as start_date,max(d.dt_start_time) as end_date');
		$this->db->from('tbl_transportation_leg l');
		$this->db->join('tbl_transportation_leg_detail p','l.in_transportation_leg_id=p.in_transportation_leg_id');
		$this->db->join('tbl_transportation_leg_detail d','l.in_transportation_leg_id=d.in_transportation_leg_id');
		$this->db->where('l.in_transportation_id',$tra_id);
		$this->db->where('l.in_deleted',0);
		$this->db->where('p.st_leg_type',"P");
		$this->db->where('d.st_leg_type',"D");
		$query = $this->db->get();
		$transport_dates = $query->row_array();
		
		if(count($transport_dates)>0)
		{	
			$transport_details = array( "dt_pickup_date" => (isset($transport_dates['start_date']) && $transport_dates['start_date']!='1969-12-31' && $transport_dates['start_date']!='0000-00-00' && !empty($transport_dates['start_date']))?date("Y-m-d", strtotime($transport_dates['start_date'])):'',
										"dt_target"      => (isset($transport_dates['end_date']) && $transport_dates['end_date']!='1969-12-31' && $transport_dates['end_date']!='0000-00-00' && !empty($transport_dates['end_date']) )?date("Y-m-d", strtotime($transport_dates['end_date'])):'',
										);
			$this->orgtrasnportation_model->update_transport_details($transport_details);
		}	
		
	}

	function get_last_leg_meetinglocation($order_id)
	{
		$this->db->select('st_meeting_location,st_to_meeting_location,in_route_type');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_sort_order',$order_id);
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_deleted','0');
		$query=$this->db->get();
		$data_array = $query->row_array();
		if(count($data_array) >0 )
		{	
			if($data_array['in_route_type'] == 2)
			{
				$meeting_location = $data_array['st_meeting_location'];
			} else {
				$meeting_location = $data_array['st_to_meeting_location'];
			}
		} else {
			$meeting_location = '';
		}	
		return $meeting_location;
	}


	//rajashri
	function get_last_leg_pickupaddress($order_id)
	{
		$result_array = array();
		$this->db->select('l.st_meeting_location,l.st_to_meeting_location,l.in_route_type,ld.st_street, ld.st_city, ld.st_state, ld.st_zip, ld.st_country, ld.dt_start_time');
		
		$this->db->join('tbl_transportation_leg_detail ld', 'ld.in_transportation_leg_id =l.in_transportation_leg_id');
		$this->db->where('l.in_sort_order',$order_id);		
		$this->db->where('ld.st_leg_type','D');
		$this->db->where('l.in_transportation_id ',$this->session->userdata('transport_id'));
		$this->db->where('l.in_deleted','0');		
		$this->db->where('ld.in_deleted','0');	
		$this->db->from('tbl_transportation_leg l');
		$query=$this->db->get();
		$data_array = $query->row_array();
		
		if(count($data_array) > 0)
		{
			
				//$startdate = date("D M d g:i a",strtotime($data_array['dt_start_time']));
				$startdate = date("D M d - h:i A",strtotime($data_array['dt_start_time']));
				$start_year = date("Y",strtotime($data_array['dt_start_time']));
				$result_array = array(
					'st_meeting_location' => $data_array['st_meeting_location'],
					'st_to_meeting_location' => $data_array['st_to_meeting_location'],
					'in_route_type' => $data_array['in_route_type'],
					'st_street' => $data_array['st_street'],
					'st_city' => $data_array['st_city'],
					'st_zip' => $data_array['st_zip'],
					'st_state'=> $data_array['st_state'],
					'st_country' => $data_array['st_country'],
					'dt_start_time' => $startdate,
					'dt_start_year' => $start_year,
					);
			
		}		
		
				
		return $result_array;
	}

	
	function get_next_leg_meetinglocation($order_id)
	{
		$this->db->select('st_meeting_location,');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_sort_order',$order_id);
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_deleted','0');
		$query=$this->db->get();
		$data_array = $query->row_array();
		if(count($data_array) >0 )
		{	
			$meeting_location = $data_array['st_meeting_location'];
		} else {
			$meeting_location = '';
		}	
		return $meeting_location;
	}
	
	function joining_transport_participants()
	{
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_email as user_email',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_user_profile pr','pr.in_user_id = p.in_user_id AND p.in_deleted = 0','INNER');
		$this->db->join('tbl_users u','pr.in_user_id = u.in_user_id','INNER');
		$this->db->where('p.in_deleted',0);
		$this->db->where('p.in_joining_transport_mail',1);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		} else {
			$result_array = array();
		}
		
		if(count($result_array)>0)
		{
			$transport_details 	= $this->get_transport_details($this->session->userdata('transport_id'));
			foreach($result_array as $key=>$participants)
			{
				$user_legs = $this->get_leg_details($participants['in_transportation_leg_id']);
				
				if(	(!empty($transport_details)) && (count($transport_details) > 0) && (is_array($transport_details)) )
				{	
					$transport_id = $transport_details[0]['in_transportation_id'];
					$owner_name = $transport_details[0]['st_display_name'];	
					$user_name = explode(" ",$transport_details[0]['st_display_name']);
					$email_address = $transport_details[0]['st_email'];
					$user_id         = $transport_details[0]['in_user_id'];
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("58");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
						if(isset($q) && !empty($q)){					   		
								foreach($q as $qr)
								{		 
									  
									if(!empty($qr['st_image']))
									{
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 				
											$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

											alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
										  
										  
									}
									else
									{
										   $donation='';								 
									}							  
										
								}
							}			
							   
						   else
						   {
							  $donation='';
						   }
					if (isset($email_details[0]['st_email_body'])) 
					{
						
						
						$orgcode = ($transport_details[0]['st_org_code'] != '')? '#'.$transport_details[0]['st_org_code'] : '#DBT';
						$templete = $email_details[0]['st_email_body'];
						$templete = str_replace("##user_name##",$participants['st_display_name'], $templete);
						$templete = str_replace("##tc_email##", $email_address , $templete);
						$templete = str_replace("##tc_name##", $owner_name, $templete);
						$templete =	str_replace("##XXX##",$orgcode.$transport_id, $templete);
						$templete =	str_replace("##DONATION##",$donation, $templete);
							
						$leg_date_time = '';
						if (isset($user_legs['route_type']) && $user_legs['route_type'] != '' && ($user_legs['route_type'] == 0 || $user_legs['route_type'] == 1)) 
						{
							if(!empty($user_legs) && isset($user_legs['pick_start_time']) && $user_legs['pick_start_time'] != '')
							{
								$leg_start_date = date("l F d,Y", strtotime($user_legs['pick_start_time']));
								$leg_start_time = date("h:iA", strtotime($user_legs['pick_start_time']));

								$leg_date_time .= 'Your leg is on '.$leg_start_date.' at '.$leg_start_time;
								if(isset($user_legs['pick_timezone']) && $user_legs['pick_timezone'] != '')	
								{
											$leg_date_time .= ' '.$user_legs['pick_timezone'].'.';
								}
							}
						}								
							
						$templete =	str_replace("##leg_date_time##",$leg_date_time, $templete);

						$templete =	str_replace("##transport_id_link##",base_url().'org-transportation-scheduled/'. $transport_id .'/', $templete);	
						$templete =	str_replace("##transport_corrdinator_link##",base_url().'user-'.$user_id.'-'.$user_name[0].'-'.$user_name[1], $templete);
						$templete =	str_replace("##mailto##",'mailto:'.$email_address, $templete);		
						$templete = str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);	
						$templete = str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);	
						
						if(isset($user_legs['leg_instruction']) && !empty($user_legs['leg_instruction']))
						{
								$leg_instruction_template = '<li style="padding-bottom:10px">'.$user_legs['leg_instruction'].'</li>';
						} else {
								$leg_instruction_template = '';
						}

						$templete = str_replace("##leg_instruction##",$leg_instruction_template,$templete);	
										
						$additional_info_str = ''; 				
						$transport_files = $this->get_transport_files($transport_id);
							
						if((isset($transport_details[0]['st_add_comments']) && $transport_details[0]['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
						{
									$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
							
									$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details[0]['st_add_comments'].'</p>';
							
									if(isset($transport_files) && !empty($transport_files))
									{
										$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
										foreach($transport_files as $key=>$value)
										{
											$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
										}
											$additional_info_str .='</ul>';
									}
						}
							
						$templete = str_replace("##additional_details##", $additional_info_str, $templete);
							
						$org_details 	= $this->common_model->get_single_org_details($transport_details[0]['in_organization_id']);	
						$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
						if($share_template == 1)
						{
							$main_image = $this->common_model->generate_fb_image_option1();
						} 
					
						else if($share_template == 5){						
							$main_image = $this->common_model->generate_fb_image_option5();						
						}
						else if($share_template == 6){						
							$main_image = $this->common_model->generate_fb_image_option6();						
						}
						else if($share_template == 7){						
							$main_image = $this->common_model->generate_fb_image_option7();						
						}
						else if($share_template == 8){						
							$main_image = $this->common_model->generate_fb_image_option8();						
						}				
						else {
							$main_image = $this->common_model->generate_fb_image($share_template);
						}	
				
						$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
						if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
				
				
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
						
						$strMail = $templete;
						$to = $participants['user_email'];
						$subject = $email_details[0]['st_email_subject'];
						$category = "DBT".$transport_id." - ".$email_details[0]['st_category'];
						$message = $strMail;
						$reply_to = $transport_details[0]['st_email'];
						$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($participants['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
						$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($participants['in_user_id']).'/'.$this->common_function->encode_base64($to),$message);
							
						$send_email = 0;							
						$sub_data = $this->common_model->check_user_unsub_emails($participants['in_user_id']);
						if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
						{
									$send_email = 0;										
						}
							
						$email_template_id = $email_details[0]['in_email_id'];
						$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
						if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
						{
									$send_email = 1;
						}	
							
						if($send_email == 0)
						{
							$transport_setting = $this->common_model->user_notification_setting($participants['in_user_id']);
							if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
							{
										$send_email = 1;
							}								
						}
							
						if($send_email == '1')
						{
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category,$reply_to);
						}
						$this->verify_volunteer_vehicle_checks($this->session->userdata('org_id'),$participants['in_user_id']);
					}
				}
				$this->db->where('in_tr_pr_id',$participants['in_tr_pr_id']);
				$this->db->update('tbl_transportation_participants',array('in_joining_transport_mail'=>"0"));
			}		
		}
		
		//return $result_array;
	}
	
	function deleted_transport_participants()
	{
		$this->db->select('p.in_tr_pr_id,p.in_user_id,p.in_transportation_leg_id,concat(u.st_display_name," " ,u.st_last_name) as st_display_name,u.st_email as user_email',FALSE);
		$this->db->from('tbl_transportation_participants p');
		$this->db->join('tbl_users u','p.in_user_id = u.in_user_id','INNER');
		$this->db->where('p.in_deleted_transport_user',1);
		$this->db->where('p.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('p.in_user_id');
		$query =	$this->db->get();
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		} else {
			$result_array = array();
		}
		return $result_array;
	}
	
	function nondoobert_joining_transport_participants()
	{
		$this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id',FALSE);
		$this->db->from('tbl_non_doobert_transport_users nd');
		$this->db->where('nd.in_deleted',0);
		$this->db->where('nd.in_joining_transport_mail',1);
		$this->db->where('nd.in_transportation_id',$this->session->userdata('transport_id'));
		$query =	$this->db->get();
		
		if($query && !empty($query))
		{
			$result_array = $query->result_array();	
		} else {
			$result_array = array();
		}
		
		if(count($result_array) >0)
		{
			$transport_details 	= $this->get_transport_details($this->session->userdata('transport_id'));
					
			foreach($result_array as $key=>$participants)
			{
					$this->load->library('email');
				$email_body = $this->common_model->get_email_containt('39');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
						if(isset($q) && !empty($q)){					   		
								foreach($q as $qr)
								{		 
									  
									if(!empty($qr['st_image']))
									{
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 				
											$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

											alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
										  
										  
									}
									else
									{
										   $donation='';								 
									}							  
										
								}
							}			
							   
						   else
						   {
							  $donation='';
						   }
				if(isset($email_body) && !empty($email_body))
				{
					$html_string = '';
					$transport_id = $transport_details[0]['in_transportation_id'];
					$user_legs = $this->get_leg_details($participants['in_leg_id']);
					if(!empty($user_legs))
					{	
						//$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
						//$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
						
					$co_ordinator_name = '';
					$co_ordinator_email = '';
					$orgcode  =	($transport_details[0]['st_org_code'])? '#'.$transport_details[0]['st_org_code'] : '#DBT';
					if($transport_details['0']['st_trans_type']=='D')
					{
						$rou_tc_user 		= $this->common_model->get_user_profile($transport_details[0]['accTcid']);
						if(count($rou_tc_user)>0 && isset($rou_tc_user))
						{	
							$co_ordinator_name	= $rou_tc_user[0]['st_display_name'].' '.$rou_tc_user[0]['st_last_name'];
							$co_ordinator_email = $rou_tc_user[0]['st_email']; 
						} 	
					} else 
					{	
						$co_ordinator_name  = $transport_details[0]['st_display_name'];
						$co_ordinator_email = $transport_details[0]['st_email'];
					}
						
						if($transport_details['0']['st_trans_type']=='D' && $transport_details['0']['in_airline_transport']=='1' )
						{
							$origin1 		= ($user_legs['pick_city'] ? $user_legs['pick_city'] . " (" : "").($user_legs['pick_street'] ? $user_legs['pick_street'] . ")" : "");
							$destinations1 	= ($user_legs['drop_city'] ? $user_legs['drop_city'] . " (" : "").($user_legs['drop_street'] ? $user_legs['drop_street'] . ")" : "");
						} else 
						{		
							$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
							$destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
						}
						$leg_start_date = '';
						$leg_end_date   = '';
						if(isset($user_legs['pick_start_time']) && !empty($user_legs['pick_start_time']))
						{		
							$leg_start_date	.= date("l F d,Y h:i A", strtotime($user_legs['pick_start_time'])).' ';
							$leg_start_date	.= $user_legs['pick_timezone'];
						}
						if(isset($user_legs['drop_start_time']) && !empty($user_legs['drop_start_time']))
						{	
							$leg_end_date	.= date("l F d,Y h:i A", strtotime($user_legs['drop_start_time'])).' ';
							$leg_end_date	.= $user_legs['drop_timezone'];
						}	
						if(isset($origin1) && $origin1!='' && isset($destinations1) && $destinations1!='')
						{	
							$html_string .= '<b>From </b>'.$origin1.',<b>To</b> '.$destinations1.'<br>';
						}
						if(isset($origin1) && $origin1!='' && isset($user_legs['route_type']) && $user_legs['route_type'] ==2)
						{	
							$html_string .= '<b>Overnight location </b> '.$origin1.'<br>';
						}
						if(isset($leg_end_date) && $leg_end_date!='' && isset($leg_start_date) && $leg_start_date!='')
						{	
							$html_string .= '<b>Date </b>'.$leg_start_date.',<b>To</b> '.$leg_end_date.'<br>';
						}
						if(isset($user_legs['route_type']) && $user_legs['route_type']!='')
						{	
							if($user_legs['route_type'] == 0)
							{
								$route_type = 'Road';
							}
							if($user_legs['route_type'] == 2)
							{
								$route_type = 'Overnight';
							}
							if($user_legs['route_type'] == 1)
							{
								$route_type = 'Aviation';
							}
							if($user_legs['route_type'] == 3)
							{
								$route_type = 'Airline';
							}	
							$html_string .= '<b>Type of Transportation </b>'.$route_type;
						}
						if(isset($user_legs['leg_instruction']) && !empty($user_legs['leg_instruction']))
						{
							$html_string .= '<br><b>Leg Instruction </b>'.$user_legs['leg_instruction'];
						}	
					}	
				
					$to = $participants['st_email'];
					$subject = $email_body[0]['st_email_subject'];
					$templete	= 	$email_body[0]['st_email_body'];
		
					$templete  	= 	str_replace("##user_name##",$participants['st_name'],$templete);
					$templete =	str_replace("##DONATION##",$donation, $templete);
					$templete  	= 	str_replace("##transport_id##",$orgcode.$transport_id,$templete);
					$templete  	= 	str_replace("##transport_coordinator##",$transport_details[0]['st_display_name'],$templete);
					$templete  	= 	str_replace("##organization_name##",$org_name,$templete);
					$templete  	= 	str_replace("##transport_day_date##",date("l, M d",strtotime($transport_details[0]['dt_target'])),$templete);
					//$templete  	= 	str_replace("##transport_start_city_state##",$transport_details[0]['st_from_city'].", ".$transport_details[0]['st_from_state'].", ".$transport_details[0]['st_from_zip'],$templete);
					//$templete  	= 	str_replace("##transport_end_city_state##",$transport_details[0]['st_to_city'].", ".$transport_details[0]['st_to_state'].", ".$transport_details[0]['st_to_zip'],$templete);	
					
					if($transport_details['0']['st_trans_type']=='D' && $transport_details['0']['in_airline_transport']=='1' )
					{	
						$templete  	= 	str_replace("##transport_start_city_state##",$transport_details[0]['st_from_city']." (".$transport_details[0]['st_from_street'].")",$templete);
						$templete  	= 	str_replace("##transport_end_city_state##",$transport_details[0]['st_to_city']." (".$transport_details[0]['st_to_street'].")",$templete);	
					} else {
						$templete  	= 	str_replace("##transport_start_city_state##",$transport_details[0]['st_from_city'].", ".$transport_details[0]['st_from_state'].", ".$transport_details[0]['st_from_zip'],$templete);
						$templete  	= 	str_replace("##transport_end_city_state##",$transport_details[0]['st_to_city'].", ".$transport_details[0]['st_to_state'].", ".$transport_details[0]['st_to_zip'],$templete);	
					}
					
					$templete 	= 	str_replace("##organization_name##",$transport_details[0]['st_org_name'],$templete);
					//$templete 	=   str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);
					
					/*if($transport_details['0']['st_trans_type']=='D')
					{
						$templete 	=   str_replace("##coordinator_details##",$co_ordinator_name.' ('.$co_ordinator_email.')',$templete);
					} else {	
						$templete 	=   str_replace("##coordinator_details##",$transport_details[0]['st_display_name'].' ('.$transport_details[0]['st_email'].')',$templete);
					}*/	
					
					$templete 	=   str_replace("##coordinator_details##",$co_ordinator_name,$templete);
					$templete 	=   str_replace("##coordinator_email##",$co_ordinator_email,$templete);
					
					$templete   =   str_replace("##leg_info_details##",$html_string,$templete);
					$transport_link = base_url()."org-transportation-scheduled/".$transport_id;
					$templete   =   str_replace("##transport_url##",$transport_link,$templete);
					$additional_info_str = ''; 				
					$transport_files = $this->get_transport_files($transport_id);
		
					if((isset($transport_details[0]['st_add_comments']) && $transport_details[0]['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
					{
						$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
		
						$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details[0]['st_add_comments'].'</p>';
		
						if(isset($transport_files) && !empty($transport_files))
						{
							$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
							foreach($transport_files as $key=>$value)
							{
								$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
							}
							$additional_info_str .='</ul>';
						}
					}
					$templete = str_replace("##additional_details##", $additional_info_str, $templete);
					
					$org_details 	= $this->common_model->get_single_org_details($transport_details[0]['in_organization_id']);	
					$share_template = (isset($org_details['in_fb_templateid'])&& $org_details['in_fb_templateid']!='')?$org_details['in_fb_templateid']:'2';
					if($share_template == 1)
					{
						$main_image = $this->common_model->generate_fb_image_option1();
					} 
					
					else if($share_template == 5){						
						$main_image = $this->common_model->generate_fb_image_option5();						
					}
					else if($share_template == 6){						
						$main_image = $this->common_model->generate_fb_image_option6();						
					}
					else if($share_template == 7){						
						$main_image = $this->common_model->generate_fb_image_option7();						
					}
					else if($share_template == 8){						
						$main_image = $this->common_model->generate_fb_image_option8();						
					}				
					
					else {
						$main_image = $this->common_model->generate_fb_image($share_template);
					}	
				
					$fbtransportshare_image = base_url().'upload/fb_transport_share/'.$main_image;
					if(file_exists($this->config->item('upload') . 'fb_transport_share/'.$main_image))
					{
						$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.base_url().'upload/fb_transport_share/'.$main_image.'" title="Animal Rescue Relay Transport" />';
					} else {
						$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
					}
				
				
					$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
					
					$category  =    "DBT".$transport_id." - ".$email_details[0]['st_category'];		
					$this->common_function->send_mail($this->email, $to, $subject, $templete, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				$this->db->where('in_non_doobert_user_id',$participants['in_non_doobert_user_id']);
				$this->db->update('tbl_non_doobert_transport_users',array('in_joining_transport_mail'=>"0"));	
			} 
		}
		//return $query->result_array();
	}
	
	function nondoobert_deleted_transport_participants()
	{
		$this->db->select('nd.in_non_doobert_user_id,nd.st_name,nd.st_phone,nd.st_email,nd.st_vehicle_type,nd.st_vehicle_color,nd.st_license_plate,nd.st_license_state,nd.st_zipcode,nd.st_state_prefix,nd.st_city,nd.in_transportation_id,nd.in_leg_id',FALSE);
		$this->db->from('tbl_non_doobert_transport_users nd');
		$this->db->where('nd.in_deleted_transport_user',1);
		$this->db->where('nd.in_transportation_id',$this->session->userdata('transport_id'));
		$query =	$this->db->get();
		return $query->result_array();
	}
	
	public function get_all_active_transportation($org_id,$start,$limit) 
	{
		$data = array();
		$this->db->select("SQL_CALC_FOUND_ROWS t.in_transportation_id,
						   t.in_organization_id,
						   t.st_from_street,
						   t.st_from_city,
						   t.st_from_state,
						   t.st_from_country,
						   t.st_from_zip,
						   t.st_to_street,
						   t.st_to_state,
						   t.st_to_city,
						   t.st_to_zip,
						   t.st_to_country,
						   t.dt_pickup_date,
						   o.st_org_code,
						   concat(u.st_display_name,' ',u.st_last_name) as co_name,
						   t.in_trans_coods_id,
						   t.dt_target,t.in_status",FALSE);							
		$this->db->from('tbl_transportation as t');
		$this->db->join("tbl_users u","u.in_user_id=t.in_trans_coods_id","INNER");
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');	
		$this->db->where('t.in_deleted',0);
		$this->db->where("t.in_status",1);
		$this->db->where("t.st_trans_type","P");
		$this->db->where('t.in_organization_id',$org_id);
		
		if($this->session->userdata('switchtc_search'))
		{
			$this->db->where('(t.in_transportation_id LIKE "'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('switchtc_search')).'%"  )',FALSE,FALSE);	
		}
		
		$this->db->order_by('t.in_transportation_id','DESC');
		$this->db->limit($limit,$start);	
		$query = $this->db->get();
		//echo $this->db->last_query();
		//die;
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		
			if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
														'org_id'				=>	$row['in_organization_id'],
														'org_code'				=>	$row['st_org_code'],
														'trans_coods_id'		=>	$row['in_trans_coods_id'],
														'from_street'			=>	$row['st_from_street'],
														'from_city'				=>	$row['st_from_city'],
														'from_state'			=>	$row['st_from_state'],
														'from_zip'				=>	$row['st_from_zip'],
														'from_country'			=>	$row['st_from_country'],
														'to_street'				=>	$row['st_to_street'],
														'to_city'				=>	$row['st_to_city'],
														'to_state'				=>	$row['st_to_state'],
														'to_zip'				=>	$row['st_to_zip'],
														'to_country'			=>	$row['st_to_country'],
														'target_date'			=>	$row['dt_target'],
														'pickup_date'			=>	$row['dt_pickup_date'],
														'display_name'			=>	$row['co_name'],
													);
											}
		}
		//echo $this->db->last_query();die;
		
		return $data;
	}
	
	public function get_all_approved_users($org_id,$user_id='') 
	{
		$data= array();
		
		$this->db->select("o.in_org_user_id,o.in_organization_id,o.in_user_id,o.st_permission,,u.st_email,CONCAT(u.st_display_name,' ' ,u.st_last_name) as st_display_name ",FALSE);
		$this->db->from('tbl_organization_user as o');
		
		//$this->db->join('tbl_user_profile as up','o.in_user_id = up.in_user_id','INNER');
		$this->db->join('tbl_users as u','o.in_user_id = u.in_user_id','INNER');
		
		//$this->db->where('u.in_user_id NOT IN(select in_transfer_to from tbl_organization_transfer where in_status = 1 AND in_deleted = 0 AND in_organization_id='.$org_id.')');
		
		$this->db->where('o.in_deleted',0);
		$this->db->where('o.in_status',1);
		$this->db->where('u.in_deleted',0);
		if(!empty($user_id))
		{	
			$this->db->where("o.in_user_id!=$user_id");
		}	
		$this->db->where('o.in_organization_id',$org_id);
		
		$query = $this->db->get();
		
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
			
				$st_permission = unserialize($row['st_permission']);
				if (array_key_exists("transport", $st_permission))
				{
					if(in_array('transport_ed',$st_permission['transport']))
					{
						$data[] = 	array(	'user_id'	=>	$row['in_user_id'],
											'name'		=>	$row['st_display_name'],
											'email'		=>	$row['st_email'],
											'user_name' =>  $row['st_display_name'].' ('.$row['st_email'].')',
											//'transport' =>  $st_permission['transport'],	
										);
					}			 
				}				 
			}
		}
			
		return $data;
	}
	
	public function get_kitten_transport($org_id='',$favorite_ride='')
	{
		$data= array();
		
		$this->db->select('t.*,
						  p.st_loc_street as pickup_street,
						  p.st_loc_city as pickup_city,
						  p.st_loc_state as pickup_state,
						  p.st_loc_zip as pickup_zip,
						  p.st_loc_contact as sending_contact_name,
						  p.st_loc_email as sending_email_address,
						  p.st_loc_phone as sending_phone_number,
						  d.st_loc_street as dropoff_street,
						  d.st_loc_city as dropoff_city,
						  d.st_loc_state as dropoff_state,
						  d.st_loc_contact as receiving_contact_name,
						  d.st_loc_email as receiving_email_address,
						  d.st_loc_phone as receiving_phone_number,
						  d.st_loc_zip as dropoff_zip',FALSE);	
		$this->db->from('tbl_trans_rides t');
		$this->db->join('tbl_trans_location p','p.in_loc_id=t.in_from_id AND p.in_deleted="0"','INNER');
		$this->db->join('tbl_trans_location d','d.in_loc_id=t.in_to_id AND d.in_deleted="0"','INNER');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_org_id AND o.in_deleted="0"','INNER');	
		$this->db->join('tbl_users u','u.in_user_id=t.in_user_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		//$this->db->where('t.in_status',4);
		$this->db->where('t.in_org_id',$org_id);

		if($favorite_ride!='')
		{
			$this->db->where('t.in_ride_id',$favorite_ride);
		}		
			
		$query = $this->db->get();
		
		return $query->result_array();
		
	}
	
	public function get_transport_crates($transport_id='')
	{
		$crate_price = array();
		$this->db->select('*');
		$this->db->from('tbl_transport_crates');
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		if(count($query->result_array())>0)
		{
			foreach($query->result_array() as $key=>$value)
			{
				if($value['st_crate_type']=='XS')
				{
					$crate_price['qtyxs'] = $value['in_crate_qty'];
					$crate_price['qtyxs_cst_public'] = $value['in_cost_public'];
					$crate_price['qtyxs_cst_private'] = $value['in_cost_private'];
					$crate_price['xs_crate_id'] = $value['in_crate_id'];
				}

				if($value['st_crate_type']=='S')
				{
					$crate_price['qtys'] = $value['in_crate_qty'];
					$crate_price['qtys_cst_public'] = $value['in_cost_public'];
					$crate_price['qtys_cst_private'] = $value['in_cost_private'];
					$crate_price['s_crate_id'] = $value['in_crate_id'];
				}
				
				if($value['st_crate_type']=='M')
				{
					$crate_price['qtym'] = $value['in_crate_qty'];
					$crate_price['qtym_cst_public'] = $value['in_cost_public'];
					$crate_price['qtym_cst_private'] = $value['in_cost_private'];
					$crate_price['m_crate_id'] = $value['in_crate_id'];
				}
				
				if($value['st_crate_type']=='L')
				{
					$crate_price['qtyl'] = $value['in_crate_qty'];
					$crate_price['qtyl_cst_public'] = $value['in_cost_public'];
					$crate_price['qtyl_cst_private'] = $value['in_cost_private'];
					$crate_price['l_crate_id'] = $value['in_crate_id'];
				}
				
				if($value['st_crate_type']=='XL')
				{
					$crate_price['qtyxl'] = $value['in_crate_qty'];
					$crate_price['qtyxl_cst_public'] = $value['in_cost_public'];
					$crate_price['qtyxl_cst_private'] = $value['in_cost_private'];
					$crate_price['xl_crate_id'] = $value['in_crate_id'];
				}
				
			}
		}	
		return $crate_price;
	}
	
	public function get_route_draft_transportation($limit,$start,$userid,$org_id) 
	{
		$data= array();
		
		$this->db->select('SQL_CALC_FOUND_ROWS t.in_transportation_id,t.in_organization_id,t.in_airline_transport,t.in_trans_coods_id,t.st_from_street,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_target,t.dt_pickup_date,t.st_trans_type,t.dt_created,concat(u.st_display_name," ",u.st_last_name) as st_display_name,o.st_org_code',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->join('tbl_users u','u.in_user_id=t.in_trans_coods_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		$this->db->where('t.in_status',4);
		$this->db->where('t.st_trans_type','RO');
		$this->db->where('t.in_organization_id',$org_id);	
		if($this->session->userdata('draft_search'))
		{
			#st_display_name
			$this->db->where('(t.in_transportation_id LIKE "'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('draft_search')).'%"  )',FALSE,FALSE);	
		}
		$this->db->order_by('t.in_transportation_id','DESC');
		$this->db->limit($limit,$start);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				
					$transport_status="Route";
				
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												'org_id'				=>	$row['in_organization_id'],
												'org_code'				=>	$row['st_org_code'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'pickup_date'			=>	$row['dt_pickup_date'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],
												'transport_status'		=>  $transport_status,
												'enable_routing_status' => $row['enable_routing_status']
																								
											);
			}
		}
		
		return $data;
		
	}
	
	public function get_all_preplan_route_transportation($limit,$start,$userid,$org_id) 
	{
		$data= array();
		
		$this->db->select('SQL_CALC_FOUND_ROWS t.in_transportation_id,t.in_organization_id,t.in_trans_coods_id,t.st_from_street,t.st_from_city,t.st_from_state,t.st_from_zip,t.st_from_country,t.st_to_street,t.st_to_city,t.st_to_state,t.st_to_zip,t.st_to_country,t.dt_target,t.st_trans_type,t.dt_created,concat(u.st_display_name," ",u.st_last_name) as st_display_name,o.st_org_code',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->join('tbl_users u','u.in_user_id=t.in_trans_coods_id AND u.in_deleted="0"','INNER');			
		$this->db->where('t.in_deleted',0);
		$this->db->where_in('t.in_status',array('1','2'));
		$this->db->where('t.st_trans_type','RO');
		$this->db->where('t.in_routes_copy_from',0);
		$this->db->where('t.in_organization_id',$org_id);	
		if($this->session->userdata('preplan_search'))
		{
			#st_display_name
			$this->db->where('(t.in_transportation_id LIKE "'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR concat(u.st_display_name," ",u.st_last_name) LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_street LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_city LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_state LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_country LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_from_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_street LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_city LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_state LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_country LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%" OR t.st_to_zip LIKE "%'.str_replace("%","\%",$this->session->userdata('preplan_search')).'%"  )',FALSE,FALSE);	
		}
		$this->db->order_by('t.in_transportation_id','DESC');
		$this->db->limit($limit,$start);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		
		$query2 = $this->db->query('SELECT FOUND_ROWS() as rows');		
		$data["num_rows"] = $query2->row()->rows;
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												'org_id'				=>	$row['in_organization_id'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],
												'org_code'				=>	$row['st_org_code']												
											);
			}
		}
		
		return $data;
		
	}
	
	function get_transport_route_list_data($status,$org_id,$rec_per_page,$limit,$sort,$order)
	{		
		
		$this->db->select("	tr.dt_target,
							tr.dt_pickup_date,
							tr.in_transportation_id,
							tr.st_from_street,
							tr.st_from_city,
							tr.st_from_state,
							tr.st_from_zip,
							tr.st_to_street,
							tr.st_to_state,
							tr.st_to_city,
							tr.st_to_zip,
							tr.st_trans_type,
							tr.st_trans_name,
							tr.in_status,
							tr.in_trans_coods_id,
							tr.in_tot_distance,
							tr.in_distance_covered,
							tr.st_trans_type,
							tr.in_airline_transport,
							o.st_org_image,
							o.st_org_code,
							round(( tr.in_distance_covered/tr.in_tot_distance * 100 ),2) perc,
							concat(tu.st_display_name,' ',tu.st_last_name) as co_name,
							tu.st_email",FALSE);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users tu","tu.in_user_id = tr.in_trans_coods_id", "INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		$where = '';
		$where .= "tr.in_deleted = 0";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		$where .= " AND  tr.st_trans_type= 'RO' AND  tr.in_organization_id = '".$org_id."'";
		
		$this->db->where($where);
		$this->db->group_by("tr.in_transportation_id");
		//$this->db->order_by("tr.in_transportation_id","DESC");
		
		switch($sort)
		{
			case 'trid':
					$this->db->order_by("tr.in_transportation_id",$order);
			break;
			case 'transname':
					$this->db->order_by("tr.st_trans_name",$order);
			break;
			case 'tdate':
					$this->db->order_by("tr.dt_pickup_date",$order);
			break;
			case 'coname':
					$this->db->order_by("co_name",$order);
			default:
					$this->db->order_by("tr.in_transportation_id",$order);
			break;	
		} 
		
		$this->db->limit($rec_per_page,$limit);
			
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;     
		return ($query->num_rows() > 0) ? $query->result_array()  :  FALSE;	
	}	
	
	function get_transport_route_list_all_data($status,$org_id)
	{		
		
		$this->db->select("	tr.in_transportation_id",FALSE);
		$this->db->from("tbl_transportation tr");
		$this->db->join("tbl_users tu","tu.in_user_id = tr.in_trans_coods_id", "INNER");
		$this->db->join("tbl_organization o","o.in_organization_id = tr.in_organization_id  AND o.in_deleted='0'", "INNER");
		
		$where = '';
		$where .= "tr.in_deleted = 0";
		if($status == '1')
		{
			$where .= " AND ((tr.in_status = '1') || (tr.in_status = '2' && tr.dt_target >= current_date()))";
		}
		else if($status == '2')
		{
			$where .= " AND (tr.in_status = '2' && tr.dt_target < current_date())";
		}
		else
		{
			$where .= " AND tr.in_status = '".$status."'";
		}
		$where .= " AND tr.st_trans_type= 'RO' AND tr.in_organization_id = '".$org_id."'";
		
		$this->db->where($where);		
		$this->db->group_by("tr.in_transportation_id");
			
		$query = $this->db->get(); 
		//echo $this->db->last_query();die;     
		return ($query->num_rows() > 0) ? $query->num_rows()  :  FALSE;	
	}


	public function get_leg_by_leg_id($leg_id, $type)
	{
		$this->db->select('st_street, st_city, st_state, st_zip,st_country, dt_start_time, st_timezone,st_leg_type');
		$this->db->from('tbl_transportation_leg_detail');
		$this->db->where('st_leg_type',$type);
		$this->db->where('in_transportation_leg_id',$leg_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();	
		return $query->row();

	}
	
	public function order_userinfo_details($transport_id,$email_add='')
	{
		$this->db->select('ora.*',FALSE);
		$this->db->from('tbl_order_address ora');
		$this->db->join("tbl_order o","ora.in_order_id = o.in_order_id", "INNER");
		$this->db->join("tbl_order_transport ot","ot.in_order_id = ora.in_order_id", "INNER");
		$where = '';
		$where .= "o.in_deleted = 0 AND o.st_transaction_id !='waiting' 
				   AND o.st_transaction_id !='' AND o.in_deleted='0' and ot.in_deleted='0'
				   AND ot.is_waitinglist!='1' AND ora.in_deleted='0' AND ot.in_transport_id='".$transport_id."'";
		$this->db->where($where);
		if(!empty($email_add))
		{	
			$this->db->where('ora.st_email',$email_add);
		}	
		$query = $this->db->get();	
		return $query->result_array();
	}
	
	public function get_route_cron_legs($trans_id)
	{	
		$arrData = array();
		$insert_cron_status = false;
		$this->db->select('l.in_transportation_leg_id,d.st_leg_type,DATE_FORMAT(d.dt_start_time, "%a") as day,l.in_sort_order,st_zip,l.in_route_type',FALSE);
		$this->db->from('tbl_transportation_leg as l');
		$this->db->join('tbl_transportation_leg_detail d','d.in_transportation_leg_id=l.in_transportation_leg_id','INNER');
		$this->db->where('l.in_deleted',0);
		$this->db->where('d.in_deleted',0);
		$this->db->where('l.in_transportation_id',$trans_id);
		$this->db->order_by('l.in_sort_order','ASC');
		$this->db->order_by('l.in_transportation_leg_id','ASC');
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$get_transport_corn_leg =  $this->transport_cron_route_leg($trans_id);
			foreach($query->result() as $Row)
			{
				if(count($get_transport_corn_leg) >0)
				{
					if (in_array($Row->in_transportation_leg_id, $get_transport_corn_leg,true)== false)
					{
							$get_user_leg_participant =  $this->get_leg_participant_detail_by_leg_id_user_id($Row->in_transportation_leg_id,'');
							if(count($get_user_leg_participant)>0)
							{	
								$insert_cron_status = false;
							}	
							else {	
								$insert_cron_status = true;
							}	
					} else {
						$insert_cron_status = false;
					}
					
				} else {
					$get_user_leg_participant =  $this->get_leg_participant_detail_by_leg_id_user_id($Row->in_transportation_leg_id,'');
							if(count($get_user_leg_participant)>0)
							{	
								$insert_cron_status = false;
							}	
							else
							{		
								$insert_cron_status = true;
							}	
				}
				if($insert_cron_status == true)
				{	
					if($Row->st_leg_type=="P")
					{	
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);

						$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['pick_zip']		= $Row->st_zip;
						$arrData[$Row->in_transportation_leg_id]['pick_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['pick_lon']		= $lat_long_details['lon'];
						$arrData[$Row->in_transportation_leg_id]['pick_day']		= $Row->day;			
					}
				
					if($Row->st_leg_type=="D")
					{
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);
					
						$arrData[$Row->in_transportation_leg_id]['route_type_id']	= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']			= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['drop_zip']		= $Row->st_zip;
						$arrData[$Row->in_transportation_leg_id]['drop_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['drop_lon']		= $lat_long_details['lon'];	
						$arrData[$Row->in_transportation_leg_id]['drop_day']		= $Row->day;			
					}
					//added by ghanshyam on 05Dec2014
					if($Row->st_leg_type=="O")
					{	
						$lat_long_details = $this->get_latlong_by_zipcode($Row->st_zip);
					
						$arrData[$Row->in_transportation_leg_id]['route_type_id']		= $Row->in_route_type;
						$arrData[$Row->in_transportation_leg_id]['leg_id']				= $Row->in_transportation_leg_id;
						$arrData[$Row->in_transportation_leg_id]['o_pick_zip']			= $Row->st_zip;					
						$arrData[$Row->in_transportation_leg_id]['o_lat']		= $lat_long_details['lat'];
						$arrData[$Row->in_transportation_leg_id]['o_lon']		= $lat_long_details['lon'];
					
						$overnight_leg_day	= $this->get_overnight_leg_date($trans_id,$Row->in_sort_order);
						
						$arrData[$Row->in_transportation_leg_id]['o_day'] 	= $overnight_leg_day['day'];
					
					
					
					}
				}
			}
			return $arrData;
		}
	}
	
	public function transport_cron_route_leg($trans_id)
	{
		$cron_leg_id = array();
		$transport_legs_data = array();
		$this->db->select('st_transport_legs');
		$this->db->from('tbl_rel_transport_cron');
		$this->db->where('in_transport_id',$trans_id);
		$this->db->where('in_deleted',0);
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			foreach($query->result() as $Row)
			{
				$transport_legs_data = unserialize($Row->st_transport_legs);
				if(count($transport_legs_data)>0)
				{	
					foreach($transport_legs_data as $trans_val)
					{
						if (in_array($trans_val['leg_id'], $cron_leg_id,true)== false)
						{
							array_push($cron_leg_id,$trans_val['leg_id']);
						}
					}
				}		
			}	
		}
		return $cron_leg_id;
	}
	
	 public function total_order_qty($crate_id){
        //$status = array('0','1');
        $this->db->select_sum('in_qty');
        $this->db->where('in_crate_id',$crate_id);
        $this->db->where('in_deleted',0);
        $this->db->where_in('in_approval',1);
        $result = $this->db->get('tbl_order_transport')->row();  
        return $result->in_qty;
    }
	
	public function insert_route_legs_details($data)
	{
		$insert_id = $this->db->insert('tbl_rel_route_cron', $data);
		return $insert_id;
	}
	
	public function get_previous_transportation($airline_trans='') 
	{
		$data= array();
		$this->db->select('t.in_transportation_id,t.st_trans_type,t.enable_routing_status,t.in_airline_transport',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->where('t.in_deleted',0);
		$this->db->where('t.in_status',4);
		$this->db->where('t.st_trans_type!="RO" AND t.st_trans_type!="R" ');
		$this->db->where('t.enable_routing_status',0);
		$this->db->where('t.in_completed_steps!="0"');
		if($airline_trans=='1' && !empty($airline_trans))
		{	
			$this->db->where('t.in_airline_transport',"1");
		} else {
			$this->db->where('t.in_airline_transport',"0");
		}
		$this->db->where('t.in_trans_coods_id',$this->session->userdata('userid'));
		$this->db->where('t.in_organization_id',$this->session->userdata('org_id'));
		$this->db->order_by('t.in_transportation_id','desc');	
		//$this->db->limit(1);
		$this->db->limit('1');	
		$query = $this->db->get();	
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				if($row['st_trans_type']=="R")
				{
					$transport_status="Ride";
				} else if($row['st_trans_type']=="D")
				{
					if($row['in_airline_transport']=="0")
					{	
						$transport_status="Assisted";
					} else {
						$transport_status="Airline";
					}	
				}else if($row['st_trans_type']=="RO")
				{
					$transport_status="Route";
				} else {
					$transport_status="Pre-Specify";		
				}
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												/*'org_id'				=>	$row['in_organization_id'],
												'org_code'				=>	$row['st_org_code'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'pickup_date'			=>	$row['dt_pickup_date'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],*/
												'transport_status'		=>  $transport_status,
												'enable_routing_status' => $row['enable_routing_status']
																								
											);
			}
		}
	
		return $data;
		
	}
	
	public function get_previous_route_transportation() 
	{
		$data= array();
		
		$this->db->select('t.in_transportation_id,t.st_trans_type,t.enable_routing_status,t.in_airline_transport',FALSE);
		$this->db->from('tbl_transportation t');
		$this->db->join('tbl_organization o','o.in_organization_id=t.in_organization_id AND o.in_deleted="0"','INNER');		
		$this->db->where('t.in_deleted',0);
		$this->db->where('t.in_status',4);
		$this->db->where('t.st_trans_type',"RO");
		$this->db->where('t.in_completed_steps!="0"');	
		$this->db->where('t.in_trans_coods_id',$this->session->userdata('userid'));
		$this->db->where('t.in_organization_id',$this->session->userdata('org_id'));
		$this->db->order_by('t.in_transportation_id','desc');	
		//$this->db->limit(1);
		$this->db->limit('1');	
		$query = $this->db->get();
		//echo $this->db->last_query();	
		if($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
				if($row['st_trans_type']=="R")
				{
					$transport_status="Ride";
				} else if($row['st_trans_type']=="D")
				{
					if($row['in_airline_transport']=="0")
					{	
						$transport_status="Assisted";
					} else {
						$transport_status="Airline";
					}	
				}else if($row['st_trans_type']=="RO")
				{
					$transport_status="Route";
				} else {
					$transport_status="Pre-Specify";		
				}
				$data['transportation_list'][] = array( 'transportation_id'		=>	$row['in_transportation_id'],
												/*'org_id'				=>	$row['in_organization_id'],
												'org_code'				=>	$row['st_org_code'],
												'trans_coods_id'		=>	$row['in_trans_coods_id'],
												'from_street'			=>	$row['st_from_street'],
												'from_city'				=>	$row['st_from_city'],
												'from_state'			=>	$row['st_from_state'],
												'from_zip'				=>	$row['st_from_zip'],
												'from_country'			=>	$row['st_from_country'],
												'to_street'				=>	$row['st_to_street'],
												'to_city'				=>	$row['st_to_city'],
												'to_state'				=>	$row['st_to_state'],
												'to_zip'				=>	$row['st_to_zip'],
												'to_country'			=>	$row['st_to_country'],
												'target_date'			=>	$row['dt_target'],
												'pickup_date'			=>	$row['dt_pickup_date'],
												'trans_type'			=>	$row['st_trans_type'],
												'added_date'			=>	$row['dt_created'],
												'display_name'			=>	$row['st_display_name'],*/
												'transport_status'		=>  $transport_status,
												'enable_routing_status' => $row['enable_routing_status']
																								
											);
			}
		}
	
		return $data;
		
	}
	
	function get_lastleg_order()
	{
		$this->db->select('in_transportation_leg_id,in_route_type,in_sort_order');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_sort_order','desc');
		$query = $this->db->get();
		return  $query->row_array();
	}
	
	function get_last_leg_details($transport_details)
	{
		$pick_drop_array = array();
		/*$this->db->select('in_transportation_leg_id,in_route_type');
		$this->db->from('tbl_transportation_leg');
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->where('in_deleted',0);
		$this->db->order_by('in_sort_order','desc');
		$query = $this->db->get();
		$row = $query->row_array();*/
		$row = $this->get_lastleg_order();
		if(count($row)>0)
		{
			$this->db->select('*');
			$this->db->from('tbl_transportation_leg_detail');
			$this->db->where('in_transportation_leg_id',$row['in_transportation_leg_id']);
			$this->db->where('in_deleted',0);
			if($row['in_route_type']== '2')
			{
				$this->db->where('st_leg_type','O');
			} else {
				$this->db->where('st_leg_type','D');
			}
			$query = $this->db->get();
			$row2 = $query->row_array();
			if(count($row2)>0)
			{	
				$pick_drop_array['from_address'] = $row2['st_zip'].','.$row2['st_city'].','.$row2['st_state'].','.$row2['st_country'];
				$pick_drop_array['from_zip'] = $row2['st_zip'];
				$pick_drop_array['start_time'] = $row2['dt_start_time'];
				$pick_drop_array['leg_type'] = $row2['st_leg_type'];
			} else {
				$pick_drop_array['from_address'] = $transport_details['0']['st_from_zip'].','.$transport_details['0']['st_from_city'].','.$transport_details['0']['st_from_state'].','.$transport_details['0']['st_from_country'];
				$pick_drop_array['from_zip'] =  $transport_details['0']['st_from_zip'];
				$pick_drop_array['start_time'] = '';
				$pick_drop_array['leg_type'] = 'D';
			}		
		} else{
			 $pick_drop_array['from_address'] = $transport_details['0']['st_from_zip'].','.$transport_details['0']['st_from_city'].','.$transport_details['0']['st_from_state'].','.$transport_details['0']['st_from_country'];
			 $pick_drop_array['from_zip'] =  $transport_details['0']['st_from_zip'];
			 $pick_drop_array['start_time'] = '';
			 $pick_drop_array['leg_type'] = 'D';			 
		}	
	
		$pick_drop_array['to_address'] = $transport_details['0']['st_to_zip'].','.$transport_details['0']['st_to_city'].','.$transport_details['0']['st_to_state'].','.$transport_details['0']['st_to_country'];
		$pick_drop_array['to_zip'] =  $transport_details['0']['st_to_zip'];
		return $pick_drop_array;  	
		
	}
	
	public function get_splitleg_info()
	{
		$this->db->select('*');
		$this->db->from('tbl_transportation_split_detail');
		$this->db->where('in_transportation_id',$this->session->userdata('transport_id'));
		$query = $this->db->get();
		return $query->row_array();
	}
	
	public function get_passenger_info_details()
	{
		$this->db->select('or.*');
		$this->db->from('tbl_order_transport or');
		$this->db->join('tbl_transportation tr','or.in_transport_id=tr.in_transportation_id AND or.in_deleted="0"','INNER');
		$this->db->join('tbl_transportation_leg tlgs','or.in_transport_id=tlgs.in_transportation_id AND tlgs.in_deleted="0"','INNER');
		$this->db->join('tbl_transportation_leg tlgd','or.in_transport_id=tlgd.in_transportation_id AND tlgd.in_deleted="0"','INNER');
		$this->db->where('tr.in_transportation_id',$this->session->userdata('transport_id'));
		$this->db->group_by('or.in_order_id');
		$this->db->group_by('or.in_from_id');
		$this->db->group_by('or.in_to_id');
		$this->db->order_by('tlgs.in_sort_order','ASC');
		$this->db->order_by('tlgd.in_sort_order','ASC');
		$query = $this->db->get();
		$passenger_info = array();
		if($query->num_rows() > 0) 
		{
			foreach($query->result_array() as $row) 
			{
				$from_location = $this->get_leg_details($row['in_from_id']);
				$to_location   = $this->get_leg_details($row['in_to_id']);
				
				$crate_size_array =  array();
				$crate_quantity_array =  array();
				$this->db->select('*');
				$this->db->from('tbl_order_address');
				$this->db->where('in_order_id',$row['in_order_id']);
				$this->db->where('in_deleted',0);
				$query2 = $this->db->get(); 
				$order_address = $query2->row_array();
				
				$this->db->select('*');
				$this->db->from('tbl_order_transport');
				$this->db->where('in_from_id',$row['in_from_id']);
				$this->db->where('in_to_id',$row['in_to_id']);
				$this->db->where('in_order_id',$row['in_order_id']);
				$this->db->where('in_deleted',0);
				
				$query4 = $this->db->get(); 
				if($query4->num_rows() > 0)
				{	
					foreach($query4->result_array() as $row4) 
					{
					$this->db->select('*');
					$this->db->from('tbl_transport_crates');
					$this->db->where('in_crate_id',$row4['in_crate_id']);
					$this->db->where('in_deleted',0);
					$query3 = $this->db->get();
					$transport_crate = $query3->row_array();
				
					if($transport_crate['st_crate_type']=='XS')
					{
						$crate_size = 'XS';
					}

					if($transport_crate['st_crate_type']=='S')
					{
						$crate_size = 'S';
					}

					if($transport_crate['st_crate_type']=='M')
					{
						$crate_size = 'M';
					}	
				
					if($transport_crate['st_crate_type']=='L')
					{
						$crate_size = 'L';
					}
				
					if($transport_crate['st_crate_type']=='XL')
					{
						$crate_size = 'XL';
					}
					array_push($crate_size_array,$crate_size);
					array_push($crate_quantity_array,$row4['in_qty']); 
					}	
				}
				$passenger_info[] = array( 'transportation_id'		=>	$row['in_transportation_id'],
										   'transport_status'		=>  $transport_status,
										   'pick_street' 			=>  $from_location['pick_street'],
										   'pick_state'				=>  $from_location['pick_state'],
										   'pick_city'				=>  $from_location['pick_city'],
										   'pick_zip'				=>  $from_location['pick_zip'],
										   'pick_country'			=>  $from_location['pick_country'],
										   'pick_start_time'		=>  $from_location['pick_start_time'],
										   'pick_timezone'			=>  $from_location['pick_timezone'],
										   'drop_street'			=>  $to_location['drop_street'],
										   'drop_state'				=>  $to_location['drop_state'],
										   'drop_city'				=>  $to_location['drop_city'],
										   'drop_zip'				=>  $to_location['drop_zip'],
										   'drop_start_time'		=>  $to_location['drop_start_time'],
										   'drop_timezone'			=>  $to_location['drop_timezone'],
										   'user_name'				=>  $order_address['st_first_name'].' '.$order_address['st_last_name'],
										   'user_email'				=>  $order_address['st_email'],
										   'user_phone'				=>  $order_address['st_phone'],
										   'crate_size'				=>  $crate_size_array,	
										   //'crate_size'				=>  $transport_crate['st_crate_type'],
										   'quantity'				=>  $crate_quantity_array,
										   'crate_id'				=> $transport_crate['in_crate_id']
										   
										  );
			}
		}
		
		/*print_r($passenger_info);
		die;*/
		return $passenger_info;
		
	}
	
	public function get_organization_privacy_setting_by_org_id($org_id) 
	{
		$this->db->select('tos.in_tc_info');
		$this->db->from('tbl_organization_setting as tos');		
		$this->db->where('tos.in_organization_id',$org_id);
		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}
	
	public function driver_mvr_check($org_id,$user_id)
	{
		$this->db->select('in_mvr_id');
		$this->db->from('tbl_mvr_check');
		$this->db->where('in_deleted',0);
		$this->db->where('in_organization_id',$org_id);
		$this->db->where('in_user_id',$user_id);
		$query = $this->db->get();
		return $query->num_rows();	
	}
	
	public function verify_volunteer_vehicle_checks($org_id,$user_id)
	{
		$org_info = $this->common_model->get_single_org_details($org_id);
		
		$mvr_notification = (isset($org_info['in_mvr_notification']) && !empty($org_info['in_mvr_notification']))?$org_info['in_mvr_notification']:'0';					
		
		$mvr_notification_orgdashboard = (isset($org_info['in_mvr_notification_orgdashboard']) && !empty($org_info['in_mvr_notification_orgdashboard']))?$org_info['in_mvr_notification_orgdashboard']:'0';					
		
		$mvr_notification_email = (isset($org_info['in_mvr_notification_email']) && !empty($org_info['in_mvr_notification_email']))?$org_info['in_mvr_notification_email']:'0';	

		$mvr_no_driver_completed = (isset($org_info['in_mvr_no_driver_completed']) && !empty($org_info['in_mvr_no_driver_completed']))?$org_info['in_mvr_no_driver_completed']:'';
		
		$verify_driver_checked = $this->driver_mvr_check($org_id,$user_id);
		
		if($mvr_notification==1 && $verify_driver_checked<=0)
		//if($mvr_notification==1)	
		{
			$this->db->select('tr.in_transportation_id');
			$this->db->from('tbl_transportation tr');
			$this->db->join('tbl_transportation_participants tp','tp.in_transportation_id=tr.in_transportation_id AND tp.in_deleted="0"','INNER');
			$this->db->where('tr.in_organization_id',$org_id);
			$this->db->where_in('tr.in_status',array('1','2'));
			$this->db->where('tr.in_deleted',0);
			$this->db->where('tp.in_user_id',$user_id);
			$query = $this->db->get();
			$total_count = $query->num_rows();	
		
			if($total_count>=$mvr_no_driver_completed)
			{
				if($mvr_notification_orgdashboard==1)
				{
					$arr_notification = array(	"in_organization_id"	=> $org_id,
													"in_type"				=> 25,
													'in_user_id'			=> $user_id,
													"in_modified_by"		=> $user_id,
													"dt_created"			=> date("Y-m-d H:i:s"),
													"in_deleted"			=> "0"
												  );
						$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
				}

				if($mvr_notification_email==1)
				{
					$transport_coordinators	= $this->common_model->get_transport_coodrdinator($org_id);
					$organisation_owner 	= $this->common_model->get_owner_details($org_id);
					$emails_list 			= array_merge($organisation_owner,$transport_coordinators);
								
					$this->load->library('email');
					$email_details = $this->common_model->get_email_containt("155");				
					$user_details = $this->common_model->get_user_profile($user_id);
					$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
					$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
								
					$user_link_name	=	"<a href='".base_url()."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link."' target='_blank'>";
					$user_link_name	.=	$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name'];
					$user_link_name	.=	"</a>";
					
					$org_link_name	=	"<a href='".base_url()."organization-".$org_info['in_organization_id']."-".$this->common_function->get_filtered_name($org_info['st_org_name'])."' target='_blank'>";
					$org_link_name	.=	$org_info['st_org_name'];
					$org_link_name	.=	"</a>";
								
					$user_display = '';
					$user_display .= 'Name: '.$user_link_name."<br>";
					//$user_display .= 'Name: '.$user_details[0]['st_display_name'].' '.$user_details[0]['st_last_name']."<br>";
					$user_display .= 'Email: '.$user_details[0]['st_email']."<br>";
					$user_display .= 'Phone: '.$user_details[0]['st_primary_phone']."<br>";
					$user_display .= 'Zip Code: '.$user_details[0]['st_zip']."<br>";
					$q			=	$this->common_model->get_affiliate_donation_detail('3');
						if(isset($q) && !empty($q)){					   		
								foreach($q as $qr)
								{		 
									  
									if(!empty($qr['st_image']))
									{
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 				
											$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

											alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
										  
										  
									}
									else
									{
										   $donation='';								 
									}							  
										
								}
							}			
							   
						   else
						   {
							  $donation='';
						   }
					
					if (isset($email_details[0]['st_email_body'])) 
					{
						$templete = $email_details[0]['st_email_body'];
						$templete = str_replace("##User_info##",$user_display, $templete);
						$templete = str_replace("##volunteer_user##",$user_link_name, $templete);
						$templete = str_replace("##org_name##",$org_link_name, $templete);
						$templete = str_replace("##DONATION##",$donation, $templete);
						foreach($emails_list as $key=>$value)
						{
							$strMail = $templete;
							$strMail = str_replace("##user_name##",$value['name'], $strMail);
							$to = $value['email_address'];
							$subject = $email_details[0]['st_email_subject'];
							$category = $email_details[0]['st_category'];
							$message = $strMail;
							$user_to_id = $this->common_model->get_user_id_by_email($to);
										
							$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($value['user_id']).'/'.$this->common_function->encode_base64($to),$message);		
							$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($value['user_id']).'/'.$this->common_function->encode_base64($to),$message);
							
							$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc, $this->config->item('admin_from_name'),$this->email,$category);		
						}
					}
				}
					
			}	
		}		
		
	}

	public function sendtext($text,$to,$postal_code)
	{

		$phone = preg_replace('/[^0-9]/', '', $to);		
		//$phone = '9152139418';		
				
		/*if($phone == '2626555523'){
			
			$result = sendsms("+1".$phone,$text);		
		}else{
			$result = sendsms("+91".$phone,$text);
		}*/
		
		if($postal_code!='')
		{
			$result = sendsms($postal_code.$phone,$text);
		}

		return $result;
		
	}

	public function sort_leg_date()
	{
		$leg_details 				= $this->get_trans_legs_join_user();
		$complete_leg = array();
		$resort_array = array();
		$sort_date_array = array_column($leg_details,'pick_start_time','leg_id');
		$order_leg_array = array_column($leg_details,'in_sort_order','leg_id');
		$type_leg_array = array_column($leg_details,'route_type_id','leg_id');
		$leg_id = array_column($leg_details,'leg_id');
		asort($sort_date_array);
		/*echo "<pre>"; print_r($sort_date_array); echo "</pre>";
		echo "<pre>"; print_r($order_leg_array); echo "</pre>";
		echo "<pre>"; print_r($type_leg_array); echo "</pre>";*/
		if(count($leg_id)>0)
		{	
			$sort_order='0';
			$prev_key = '';
			foreach($sort_date_array as $key=>$value)
			{
				$sort_order = $sort_order+'1';
				$update_overnight_leg = '0';
				$leg_id = '';
				
				$leg_id = array_search($sort_order,$order_leg_array);
				if($leg_id!='' && $leg_id!='0')
				{
					if($type_leg_array[$leg_id]==2 && $sort_order=='1')
					{
						$sort_order = $sort_order+'1';
						$leg_id = array_search($sort_order,$order_leg_array);
						array_push($resort_array,array('leg_id'=>$leg_id,'sort_order'=>$sort_order));
						array_push($complete_leg,$leg_id);
						$sort_order = $sort_order+'1';
						array_push($resort_array,array('leg_id'=>$key,'sort_order'=>$sort_order));
						array_push($complete_leg,$key);
					} else if($type_leg_array[$leg_id]==2 && $sort_order!='1')
					{
						$past_date = $sort_date_array[$prev_key];
						$present_date = date('Y-m-d',strtotime($value));
						$prev_date    = date('Y-m-d',strtotime($past_date));
						$date1 =  new DateTime($present_date);
						$date2 =  new DateTime($prev_date);
						if($date1 == $date2)
						{	
							array_push($resort_array,array('leg_id'=>$key,'sort_order'=>$sort_order));
							array_push($complete_leg,$key);
							$sort_order = $sort_order+'1';
							array_push($resort_array,array('leg_id'=>$leg_id,'sort_order'=>$sort_order));
							array_push($complete_leg,$leg_id);
						}else {
							
							array_push($resort_array,array('leg_id'=>$leg_id,'sort_order'=>$sort_order));
							array_push($complete_leg,$leg_id);
							$sort_order = $sort_order+'1';
							array_push($resort_array,array('leg_id'=>$key,'sort_order'=>$sort_order));
							array_push($complete_leg,$key);
						}	
					} else {
						array_push($resort_array,array('leg_id'=>$key,'sort_order'=>$sort_order));
						array_push($complete_leg,$key);
					}	
					
				}
				$prev_key = $key;	
				//$this->db->where('in_transportation_leg_id',$key);
				//$this->db->update('tbl_transportation_leg',array('in_sort_order'=>$sort_order));
				
				
				/*if($update_overnight_leg==1) 
				{	
						$sort_order = $sort_order+'1';
						//$this->db->where('in_transportation_leg_id',$leg_id);
						//$this->db->update('tbl_transportation_leg',array('in_sort_order'=>$leg_id));
						array_push($resort_array,array('leg_id'=>$leg_id,'sort_order'=>$sort_order));
						array_push($complete_leg,$leg_id);	
				}*/	
			}
			if(count($leg_id) > count($complete_leg))
			{	
				foreach($leg_id as $key=>$value)
				{
					if((in_array($value,$complete_leg)== false) && $type_leg_array[$value]==2)
					{
						$sort_order = $sort_order+'1';
						array_push($resort_array,array('leg_id'=>$value,'sort_order'=>$sort_order));
						//$this->db->where('in_transportation_leg_id',$value);
						//$this->db->update('tbl_transportation_leg',array('in_sort_order'=>$sort_order));
						array_push($complete_leg,$value);
					}	
				}
			}	
			
		}
		
		/*echo "<pre>"; print_r($resort_array); echo "</pre>";
		die;*/
		foreach($resort_array as $key=>$value)
		{
			$this->db->where('in_transportation_leg_id',$value['leg_id']);
			$this->db->update('tbl_transportation_leg',array('in_sort_order'=>$value['sort_order']));
		}			
	}	
	
	function legparticipant_user_detail($legid)
	{
		$this->db->select("concat(u.st_display_name,' ',u.st_last_name) as name");
		$this->db->from('tbl_users u');
		$this->db->join('tbl_transportation_participants p','p.in_user_id = u.in_user_id AND p.in_deleted = 0','LEFT');
		$this->db->where('in_transportation_leg_id',$legid);		
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		return $query->row_array();
	}

	function get_org_transport_participate($transport_id)
	{
		$org_participate = array();
		$this->db->select('op.in_organization_id,op.st_invitation_type,op.in_id,o.st_org_name,o.st_org_image');
		$this->db->from('tbl_org_transport_participate op');
		$this->db->join('tbl_organization o','o.in_organization_id = op.in_organization_id','INNER');
		$this->db->where('in_transportation_id',$transport_id);
		$this->db->where('o.in_status',1);
		$this->db->where('o.in_deleted',0);
		$this->db->where('op.in_deleted',0);		
		$query = $this->db->get();	
		return $query->result_array();
	}	
	
	public function get_ordered_crates_details($order_id='')
	{
		$passenger_info = array();
		$transport_id = array();
		$trans_info = array();
		$this->db->select('or.*');
		$this->db->from('tbl_order_transport or');
		$this->db->where('or.in_order_id',$order_id);
		$this->db->where('in_approval',1);
		$this->db->where('is_waitinglist',0);
		
		/*$this->db->group_by('or.in_from_id');
		$this->db->group_by('or.in_to_id');
		$this->db->order_by('tlgs.in_sort_order','ASC');
		$this->db->order_by('tlgd.in_sort_order','ASC');*/
		$query = $this->db->get();
		
		if($query->num_rows() > 0) 
		{
			foreach($query->result_array() as $row) 
			{
				//$from_location = $this->get_leg_details($row['in_from_id']);
				$to_location   = $this->get_leg_details($row['in_to_id']);
				
				$crate_size_array =  array();
				$crate_quantity_array =  array();
				
				$this->db->select('*');
				$this->db->from('tbl_transport_crates');
				$this->db->where('in_crate_id',$row['in_crate_id']);
				$this->db->where('in_deleted',0);
				$query3 = $this->db->get();
				$transport_crate = $query3->row_array();
				if($transport_crate['st_crate_type']=='XS')
				{
						$crate_size = 'XS';
				}

				if($transport_crate['st_crate_type']=='S')
				{
						$crate_size = 'S';
				}

				if($transport_crate['st_crate_type']=='M')
				{
						$crate_size = 'M';
				}	
				
				if($transport_crate['st_crate_type']=='L')
				{
						$crate_size = 'L';
				}
				
				if($transport_crate['st_crate_type']=='XL')
				{
						$crate_size = 'XL';
				}
				
				$crate_size_array[$crate_size]= $row['in_qty'];
				$transport_id[$row['in_transport_id']] = $row['in_transport_id'];
				
				if(count($to_location)>0)
				{	
					if(isset($to_location['drop_street']) && !empty($to_location['drop_street'])){
						$drop_off_address = $to_location['drop_street'].", ".$to_location['drop_city'].", ".$to_location['drop_state'].", ".$to_location['drop_zip'];
					}else{
						$drop_off_address = $to_location['drop_city'].", ".$to_location['drop_state'].", ".$to_location['drop_zip'];		
					}
				}
				
					
			}
		}
		
		foreach($transport_id as $key=>$val)
		{
			$transport_data = $this->get_transport_details($val);
			$trans_info[] = array('tc_name'=>$transport_data[0]['st_display_name'],'tc_email'=>$transport_data[0]['st_email'],'tc_phone'=>$transport_data[0]['st_primary_phone']); 
			
		}
		
		$this->db->select('*');
		$this->db->from('tbl_order_address');
		$this->db->where('in_order_id',$row['in_order_id']);
		$this->db->where('in_deleted',0);
		$query2 = $this->db->get(); 
		$order_address = $query2->row_array();	
		
		$passenger_info      = array(   'drop_off_address'			=>  $drop_off_address,
										   'user_name'				=>  $order_address['st_first_name'].' '.$order_address['st_last_name'],
										   'crate_size'				=>  $crate_size_array,
										   'receiving_org'      	=>  $order_address['st_rorg_name'],
										   'receiving_person'       =>  $order_address['st_r_name'],
										   'receiving_cell'			=>  $order_address['st_r_phone'],
										   'backup_person'			=>  $order_address['st_backup_r_name'],
										   'backup_call'			=>	$order_address['st_backup_r_phone'],
										   'trans_info'				=>  $trans_info,
										   'sending_run_sheet'      =>  $order_address['in_srun_sheet'],
										   'sending_email'			=>	$order_address['st_s_mail'],
										   'receiving_run_sheet'	=>	$order_address['in_rrun_sheet'],
										   'receiving_email'        =>	$order_address['st_r_mail'],
										 	
											);
										   
		return $passenger_info;									
	}
	
}
?>