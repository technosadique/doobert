<?php
//require_once 'fpdf/fpdf-1.8.php';
class CI_common_function {
	
	public $shortCountry;
	public $time_zone_abbr;
	public $table_type;
	public $group_tickets;
	public $language;
	public $access_level;
	public $time_zone;
	public $course_category;
    public $currency;
	public $rank;
	public $months;
	public $overprint_consultation;
	public $item_type;
	
	function __construct() {
		
	$this->shortCountry = array (
						"AU" => "Australia",
						"AF" => "Afghanistan",
						"AL" => "Albania",
						"AS" => "American Samoa",
						"AQ" => "Antarctica",
						"AD" => "Andorra",
						"AO" => "Angola",
						"AI" => "Anguilla",
						"AQ" => "Antarctica",
						"AG" => "Antigua and Barbuda",
						"AR" => "Argentina",
						"AM" => "Armenia",
						"AW" => "Aruba",
						"AT" => "Austria",
						"AZ" => "Azerbaijan",
						"DZ" => "Algeria",
						"BS" => "Bahamas",
						"BH" => "Bahrain",
						"BD" => "Bangladesh",
						"BB" => "Barbados",
						"BY" => "Belarus",
						"BE" => "Belgium",
						"BZ" => "Belize",
						"BJ" => "Benin",
						"BM" => "Bermuda",
						"BT" => "Bhutan",
						"BO" => "Bolivia",
						"BA" => "Bosnia and Herzegovina",
						"BW" => "Botswana",
						"BV" => "Bouvet Island",
						"BR" => "Brazil",
						"BN" => "Brunei Darussalam",
						"BG" => "Bulgaria",
						"BF" => "Burkina Faso",
						"BI" => "Burundi",
						"BL" => "Bonaire (Netherlands Antilles)",
						"IO" => "British Indian Ocean Territory",
						"KH" => "Cambodia",
						"CM" => "Cameroon",						
						"CV" => "Cape Verde",
						"KY" => "Cayman Islands",
						"CF" => "Central African Republic",
						"TD" => "Chad",
						"CL" => "Chile",
						"CN" => "China",
						"CC" => "Cocos (Keeling) Islands",
						"CO" => "Colombia",
						"KM" => "Comoros",
						"CG" => "Congo",
						"CK" => "Cook Islands",
						"CR" => "Costa Rica",
						"CI" => "Cote d'Ivoire",
						"HR" => "Croatia",
						"CU" => "Cuba",
						"CY" => "Cyprus",
						"CZ" => "Czech Republic",
						"CA" => "Canada",
						"IC" => "Canary Islands (Spain)",
						"CX" => "Christmas Island (Australia)",
						"CB" => "Curacao (Netherlands Antilles)",
						"DK" => "Denmark",
						"DJ" => "Djibouti",
						"DM" => "Dominica",
						"DO" => "Dominican Republic",
						"TL" => "East Timor",
						"EC" => "Ecuador",
						"EG" => "Egypt",
						"SV" => "El Salvador",
						"GQ" => "Equatorial Guinea",
						"ER" => "Eritrea",
						"EE" => "Estonia",
						"ET" => "Ethiopia",
						"TP" => "East Timor",
						"EN" => "England",
						"TF" => "French Southern Territories",
						"FK" => "Falkland Islands",
						"FO" => "Faroe Islands",
						"FJ" => "Fiji",
						"FI" => "Finland",
						"FR" => "France",
						"GF" => "French Guiana",
						"PF" => "French Polynesia",
						"GA" => "Georgia",
						"GM" => "Gambia",
						"DE" => "Germany",
						"GH" => "Ghana",
						"GR" => "Greece",
						"GL" => "Greenland",
						"GD" => "Grenada",
						"GP" => "Guadeloupe",
						"GU" => "Guam",
						"GT" => "Guatemala",
						"GN" => "Guinea",
						"GW" => "Guinea-Bissau",
						"GY" => "Guyana",
						"GG" => "Guernsey",
						"GI" => "Gibraltar",
						"HT" => "Haiti",
						"HN" => "Honduras",
						"HK" => "Hong Kong",
						"HU" => "Hungary",
						"HM" => "Heard Island and McDonald Islands",
						"HO" => "Holland",
						"VA" => "Holy See (Vatican City)",
						"IS" => "Iceland",
						"IN" => "India",
						"ID" => "Indonesia",
						"IR" => "Iran",
						"IQ" => "Iraq",
						"IE" => "Ireland",
						"IL" => "Israel",
						"IT" => "Italy",
						"JM" => "Jamaica",
						"JP" => "Japan",
						"JO" => "Jordan",
						"JE" => "Jersey",
						"KZ" => "Kazakhstan",
						"KE" => "Kenya",
						"KI" => "Kiribati",
						"KW" => "Kuwait",
						"KG" => "Kyrgyzstan",
						"LV" => "Latvia",
						"LB" => "Lebanon",
						"LS" => "Lesotho",
						"LR" => "Liberia",
						"LY" => "Libya",
						"LI" => "Liechtenstein",
						"LT" => "Lithuania",
						"LU" => "Luxembourg",
						"MO" => "Macau",
						"MK" => "Macedonia",
						"MG" => "Madagascar",
						"MW" => "Malawi",
						"MY" => "Malaysia",
						"MV" => "Maldives",
						"ML" => "Mali",
						"MT" => "Malta",
						"MH" => "Marshall Islands",
						"MQ" => "Martinique",
						"MR" => "Mauritania",
						"MU" => "Mauritius",
						"YT" => "Mayotte",
						"MX" => "Mexico",
						"FM" => "Micronesia",
						"MD" => "Moldova",
						"MC" => "Monaco",
						"MN" => "Mongolia",
						"MS" => "Montserrat",
						"MA" => "Morocco",
						"MZ" => "Mozambique",
						"MM" => "Myanmar",
						"ME" => "Montenegro",
						"AN" => "Netherlands Antilles",
						"NB" => "Northern Ireland",
						"KP" => "North Korea",
						"NA" => "Namibia",
						"NR" => "Nauru",
						"NP" => "Nepal",
						"NL" => "Netherlands",
						"NC" => "New Caledonia",
						"NZ" => "New Zealand",
						"NI" => "Nicaragua",
						"NE" => "Niger",
						"NG" => "Nigeria",
						"NU" => "Niue",
						"NF" => "Norfolk Island",
						"MP" => "Northern Mariana Islands",
						"NO" => "Norway",
						"OM" => "Oman",
						"PK" => "Pakistan",
						"PW" => "Palau",
						"PS" => "Palestinian Territory, Occupied",
						"PA" => "PANAMA",
						"PG" => "Papua New Guinea",
						"PY" => "Paraguay",
						"PE" => "Peru",
						"PH" => "Philippines",
						"PN" => "Pitcairn",
						"PL" => "Poland",
						"PT" => "Portugal",
						"PR" => "Puerto Rico",
						
						"QA" => "Qatar",
						"RE" => "Reunion",
						"RO" => "Romania",
						"RU" => "Russian Federation",
						"RW" => "Rwanda",
						"GE" => "Republic of Georgia",
						"KR" => "South Korea",
						"KN" => "Saint Kitts and Nevis",
						"LC" => "Saint Lucia",
						"WS" => "Samoa",
						"SM" => "San Marino",
						"ST" => "Sao Tome and Principe",
						"SA" => "Saudi Arabia",
						"SN" => "Senegal",
						"SC" => "Seychelles",
						"SL" => "Sierra Leone",
						"SG" => "Singapore",
						"SK" => "Slovakia",
						"SI" => "Slovenia",
						"SB" => "Solomon Islands",
						"SO" => "Somalia",
						"ZA" => "South Africa",
						"ES" => "Spain",
						"LK" => "Sri Lanka",
						"PM" => "St Pierre and Miquelon",
						"SD" => "Sudan",
						"SR" => "Suriname",
						"SZ" => "Swaziland",
						"SE" => "Sweden",
						"CH" => "Switzerland",
						"SY" => "Syrian Arab Republic",	
						"SS" => "Saba",
						"SW" => "Saint Christopher (St. Kitts) and Nevis",
						"SH" => "Saint Helena",
						"VC" => "Saint Vincent and the Grenadines",
						"SF" => "Scotland",
						"RS" => "Serbia",
						"GS" => "South Georgia and the South Sandwich Islands",
						"NT" => "St. Barthelemy",
						"EU" => "St. Eustatius (Netherlands Antilles)",
						"MB" => "St. Maarten (Netherlands Antilles)",
						"TB" => "St. Martin (Guadeloupe)",
						"SJ" => "Svalbard and Jan Mayen",
						"TW" => "Taiwan",
						"TJ" => "Tajikistan",
						"TZ" => "Tanzania",
						"TH" => "Thailand",
						"TG" => "Togo",
						"TK" => "Tokelau",
						"TO" => "Tonga",
						"TT" => "Trinidad and Tobago",
						"TN" => "Tunisia",
						"TR" => "Turkey",
						"TM" => "Turkmenistan",
						"TC" => "Turks and Caicos Islands",
						"TV" => "Tuvalu",	
						"US" => "USA",
						"UG" => "Uganda",
						"UA" => "Ukraine",
						"AE" => "United Arab Emirates",
						"GB" => "United Kingdom (Great Britain)",
						"UY" => "Uruguay",
						"UZ" => "Uzbekistan",
						"UM" => "United States Minor Outlying Islands",
						"VU" => "Vanuatu",
						"VE" => "Venezuela",
						"VN" => "VietNam",
						"VI" => "Virgin Islands U.S.",	
						"VG" => "Virgin Islands, British",
						"WL" => "Wales",
						"WF" => "Wallis and Futuna",
						"EH" => "Western Sahara",						
						"YE" => "Yemen",
						"YU" => "Yugoslavia",
						"CD" => "Zaire",
						"ZM" => "Zambia",
						"ZW" => "Zimbabwe"						
							
					);	

	$this->time_zone_abbr = array("EST"		=>	"America/New_York",
								 "CST"		=>	"America/Chicago",
								 "PST"		=>	"America/Los_Angeles",
								 "MST"		=>	"America/Anchorage",
								 "IST"		=>	"Asia/Calcutta",
								 "AST"		=>	"Canada/Atlantic"
								);
	$this->table_type	 = array( 
								712	=> '10 Seating (Corporate Table)', //if the key length is more than or equal to 3 then sum of that key will be type of that value. ie. if key is 112 then its sum is 4 which will be used for calculating seats.
								2	=>'2 Seating',
								3	=>'3 Seating',
								4	=>'4 Seating',
								5 	=> '5 Seating',
								6 	=> '6 Seating',
								7 	=> '7 Seating',
								8 	=> '8 Seating',
								9 	=> '9 Seating',
								10 	=> '10 Seating',
								);
	$this->group_tickets	 = array( 
								//712	=> '10 Seating (Corporate Table)', //if the key length is more than or equal to 3 then sum of that key will be type of that value. ie. if key is 112 then its sum is 4 which will be used for calculating seats.
								2	=> '2 Tickets',
								3	=> '3 Tickets',
								4	=> '4 Tickets',
								5 	=> '5 Tickets',
								6 	=> '6 Tickets',
								7 	=> '7 Tickets',
								8 	=> '8 Tickets',
								9 	=> '9 Tickets',
								10 	=> '10 Tickets',
								);
	$this->time_zone = array(
								"0" =>'(UTC+10.00) Canberra,Melbourne,Sydney',
								"1" =>'(UTC-11.00) Midway Island, Samoa',
								"2" =>'(UTC-10.00) Hawaii-Aleutian',
								"3" =>'(UTC-10.00) Hawaii',
								"4" =>'(UTC-09.30) Marquesas Islands',
								"5" =>'(UTC-09.00) Gambier Islands',
								"6" =>'(UTC-09.00) Alaska',
								"7" =>'(UTC-08.00) Tijuana, Baja California',
								"8" =>'(UTC-08.00) Pitcairn Islands',
								"9" =>'(UTC-08.00) Pacific Time (US & Canada)',
								"10"=>'(UTC-07.00) Mountain Time (US & Canada)',
								"11"=>'(UTC-07.00) Chihuahua, La Paz, Mazatlan',
								"12"=>'(UTC-07.00) Arizona',
								"13"=>'(UTC-06.00) Saskatchewan, Central America',
								"14"=>'(UTC-06.00) Guadalajara, Mexico City, Monterrey',
								"15"=>'(UTC-06.00) Easter Island',
								"16"=>'(UTC-06.00) Central Time (US & Canada)',
								"17"=>'(UTC-05.00) Eastern Time (US & Canada)',
								"18"=>'(UTC-05.00) Cuba',
								"19"=>'(UTC-05.00) Bogota, Lima, Quito, Rio Branco',
								"20"=>'(UTC-04.30) Caracas',
								"21"=>'(UTC-04.00) Santiago',
								"22"=>'(UTC-04.00) La Paz',
								"23"=>'(UTC-04.00) Faukland Islands',
								"24"=>'(UTC-04.00) Brazil',
								"25"=>'(UTC-04.00) Atlantic Time (Goose Bay)',
								"26"=>'(UTC-04.00) Atlantic Time (Canada)',
								"27"=>'(UTC-03.30) Newfoundland',
								"28"=>'(UTC-03.00) UTC-3',
								"29"=>'(UTC-03.00) Montevideo',
								"30"=>'(UTC-03.00) Miquelon, St. Pierre',
								"31"=>'(UTC-03.00) Greenland',
								"32"=>'(UTC-03.00) Buenos Aires',
								"33"=>'(UTC-03.00) Brasilia',
								"34"=>'(UTC-02.00) Mid-Atlantic',
								"35"=>'(UTC-01.00) Cape Verde Is.',
								"36"=>'(UTC-01.00) Azores',
								"37"=>'(UTC) Greenwich Mean Time . Belfast',
								"38"=>'(UTC) Greenwich Mean Time . Dublin',
								"39"=>'(UTC) Greenwich Mean Time . Lisbon',
								"40"=>'(UTC) Greenwich Mean Time . London',
								"41"=>'(UTC) Monrovia, Reykjavik',
								"42"=>'(UTC+01.00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',
								"43"=>'(UTC+01.00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',
								"44"=>'(UTC+01.00) Brussels, Copenhagen, Madrid, Paris',
								"45"=>'(UTC+01.00) West Central Africa',
								"46"=>'(UTC+01.00) Windhoek',
								"47"=>'(UTC+02.00) Beirut',
								"48"=>'(UTC+02.00) Cairo',
								"49"=>'(UTC+02.00) Gaza',
								"50"=>'(UTC+02.00) Harare, Pretoria',
								"51"=>'(UTC+02.00) Jerusalem',
								"52"=>'(UTC+02.00) Minsk',
								"53"=>'(UTC+02.00) Syria',
								"54"=>'(UTC+03.00) Moscow, St. Petersburg, Volgograd',
								"55"=>'(UTC+03.00) Nairobi',
								"56"=>'(UTC+03.30) Tehran',
								"57"=>'(UTC+04.00) Abu Dhabi, Muscat',
								"58"=>'(UTC+04.00) Yerevan',
								"59"=>'(UTC+04.30) Kabul',
								"60"=>'(UTC+05.00) Ekaterinburg',
								"61"=>'(UTC+05.00) Tashkent',
								"62"=>'(UTC+05.30) Chennai, Kolkata, Mumbai, New Delhi',
								"63"=>'(UTC+05.45) Kathmandu',
								"64"=>'(UTC+06.00) Astana, Dhaka',
								"65"=>'(UTC+06.00) Novosibirsk',
								"66"=>'(UTC+06.30) Yangon (Rangoon)',
								"67"=>'(UTC+07.00) Bangkok, Hanoi, Jakarta',
								"68"=>'(UTC+07.00) Krasnoyarsk',
								"69"=>'(UTC+08.00) Beijing, Chongqing, Hong Kong, Urumqi',
								"70"=>'(UTC+08.00) Irkutsk, Ulaan Bataar',
								"71"=>'(UTC+08.00) Perth',
								"72"=>'(UTC+08.45) Eucla',
								"73"=>'(UTC+09.00) Osaka, Sapporo, Tokyo',
								"74"=>'(UTC+09.00) Seoul',
								"75"=>'(UTC+09.00) Yakutsk',
								"76"=>'(UTC+09.30) Adelaide',
								"77"=>'(UTC+09.30) Darwin',
								"78"=>'(UTC+10.00) Brisbane',
								"79"=>'(UTC+10.00) Hobart',
								"80"=>'(UTC+10.00) Vladivostok',
								"81"=>'(UTC+10.30) Lord Howe Island',
								"82"=>'(UTC+11.00) Solomon Is., New Caledonia',
								"83"=>'(UTC+11.00) Magadan',
								"84"=>'(UTC+11.30) Norfolk Island',
								"85"=>'(UTC+12.00) Anadyr, Kamchatka',
								"86"=>'(UTC+12.00) Auckland, Wellington',
								"87"=>'(UTC+12.00) Fiji, Kamchatka, Marshall Is.',
								"88"=>'(UTC+12.45) Chatham Islands',
								"89"=>'(UTC+13.00) Nuku\'alofa',
								"90"=>'(UTC+14.00) Kiritimati',
							);							
								
	$this->language = array(
								'en' => 'English' , 
								'aa' => 'Afar' , 
								'ab' => 'Abkhazian' , 
								'af' => 'Afrikaans' , 
								'am' => 'Amharic' , 
								'ar' => 'Arabic' , 
								'as' => 'Assamese' , 
								'ay' => 'Aymara' , 
								'az' => 'Azerbaijani' , 
								'ba' => 'Bashkir' , 
								'be' => 'Byelorussian' , 
								'bg' => 'Bulgarian' , 
								'bh' => 'Bihari' , 
								'bi' => 'Bislama' , 
								'bn' => 'Bengali/Bangla' , 
								'bo' => 'Tibetan' , 
								'br' => 'Breton' , 
								'ca' => 'Catalan' , 
								'co' => 'Corsican' , 
								'cs' => 'Czech' , 
								'cy' => 'Welsh' , 
								'da' => 'Danish' , 
								'de' => 'German' , 
								'dz' => 'Bhutani' , 
								'el' => 'Greek' , 
								'eo' => 'Esperanto' , 
								'es' => 'Spanish' , 
								'et' => 'Estonian' , 
								'eu' => 'Basque' , 
								'fa' => 'Persian' , 
								'fi' => 'Finnish' , 
								'fj' => 'Fiji' , 
								'fo' => 'Faeroese' , 
								'fr' => 'French' , 
								'fy' => 'Frisian' , 
								'ga' => 'Irish' , 
								'gd' => 'Scots/Gaelic' , 
								'gl' => 'Galician' , 
								'gn' => 'Guarani' , 
								'gu' => 'Gujarati' , 
								'ha' => 'Hausa' , 
								'hi' => 'Hindi' , 
								'hr' => 'Croatian' , 
								'hu' => 'Hungarian' , 
								'hy' => 'Armenian' , 
								'ia' => 'Interlingua' , 
								'ie' => 'Interlingue' , 
								'ik' => 'Inupiak' , 
								'in' => 'Indonesian' , 
								'is' => 'Icelandic' , 
								'it' => 'Italian' , 
								'iw' => 'Hebrew' , 
								'ja' => 'Japanese' , 
								'ji' => 'Yiddish' , 
								'jw' => 'Javanese' , 
								'ka' => 'Georgian' , 
								'kk' => 'Kazakh' , 
								'kl' => 'Greenlandic' , 
								'km' => 'Cambodian' , 
								'kn' => 'Kannada' , 
								'ko' => 'Korean' , 
								'ks' => 'Kashmiri' , 
								'ku' => 'Kurdish' , 
								'ky' => 'Kirghiz' , 
								'la' => 'Latin' , 
								'ln' => 'Lingala' , 
								'lo' => 'Laothian' , 
								'lt' => 'Lithuanian' , 
								'lv' => 'Latvian/Lettish' , 
								'mg' => 'Malagasy' , 
								'mi' => 'Maori' , 
								'mk' => 'Macedonian' , 
								'ml' => 'Malayalam' , 
								'mn' => 'Mongolian' , 
								'mo' => 'Moldavian' , 
								'mr' => 'Marathi' , 
								'ms' => 'Malay' , 
								'mt' => 'Maltese' , 
								'my' => 'Burmese' , 
								'na' => 'Nauru' , 
								'ne' => 'Nepali' , 
								'nl' => 'Dutch' , 
								'no' => 'Norwegian' , 
								'oc' => 'Occitan' , 
								'om' => '(Afan)/Oromoor/Oriya' , 
								'pa' => 'Punjabi' , 
								'pl' => 'Polish' , 
								'ps' => 'Pashto/Pushto' , 
								'pt' => 'Portuguese' , 
								'qu' => 'Quechua' , 
								'rm' => 'Rhaeto-Romance' , 
								'rn' => 'Kirundi' , 
								'ro' => 'Romanian' , 
								'ru' => 'Russian' , 
								'rw' => 'Kinyarwanda' , 
								'sa' => 'Sanskrit' , 
								'sd' => 'Sindhi' , 
								'sg' => 'Sangro' , 
								'sh' => 'Serbo-Croatian' , 
								'si' => 'Singhalese' , 
								'sk' => 'Slovak' , 
								'sl' => 'Slovenian' , 
								'sm' => 'Samoan' , 
								'sn' => 'Shona' , 
								'so' => 'Somali' , 
								'sq' => 'Albanian' , 
								'sr' => 'Serbian' , 
								'ss' => 'Siswati' , 
								'st' => 'Sesotho' , 
								'su' => 'Sundanese' , 
								'sv' => 'Swedish' , 
								'sw' => 'Swahili' , 
								'ta' => 'Tamil' , 
								'te' => 'Tegulu' , 
								'tg' => 'Tajik' , 
								'th' => 'Thai' , 
								'ti' => 'Tigrinya' , 
								'tk' => 'Turkmen' , 
								'tl' => 'Tagalog' , 
								'tn' => 'Setswana' , 
								'to' => 'Tonga' , 
								'tr' => 'Turkish' , 
								'ts' => 'Tsonga' , 
								'tt' => 'Tatar' , 
								'tw' => 'Twi' , 
								'uk' => 'Ukrainian' , 
								'ur' => 'Urdu' , 
								'uz' => 'Uzbek' , 
								'vi' => 'Vietnamese' , 
								'vo' => 'Volapuk' , 
								'wo' => 'Wolof' , 	
								'xh' => 'Xhosa' , 
								'yo' => 'Yoruba' , 
								'zh' => 'Chinese' , 
								'zu' => 'Zulu' , 
        			);							
		$this->access_level =array( 
								4 => 'Clinic Owner/Manager',
								2 => 'DMK Admin',
								3 => 'DMK Account Manager',								
								5 => 'DMK Therapist',
								6 => 'Potential DMK Therapist',
								1 => 'Super Admin'
							);
                
                $this->course_category =array(              
                                                                2   =>  'Advanced Skin Education',
                                                                3   =>  'Business & Marketing',
                                                                4   =>  'DMK Advanced Training',
                                                                5   =>  'DMK Practical Training',
                                                                6   =>  'DMK Program 1',
                                                                7   =>  'DMKC',
                                                                8   =>  'Events',
                                                                9   =>  'Interviews',
                                                                10  =>  'Sales & Communication',
																1   =>  'Video Library',
                                                                11  =>  'Webinars',  
                                                                12 	=> 	'Communication & Language',
                                                                13 	=> 	'Non Prod. Education',   
							);
                $this->currency=array(
                                                               
                                                                2   =>  'AUD',
                                                                3   =>  'CAD',
                                                                4   =>  'EUR',
                                                                5   =>  'GBP',
                                                                6   =>  'NZD',
																1   =>  'USD',
                );
				$this->rank=array(
                                                                1   =>  'Rank1',
                                                                2   =>  'Rank2',
                                                                3   =>  'Rank3',
                                                                4   =>  'Rank4',
                                                                5   =>  'Rank5',
                                 );
			$this->months=array(
									1  => 'Jan',
									2 =>  'Feb',
									3 =>  'Mar',
									4 =>  'Apr',
									5 =>  'May',
									6 =>  'Jun',
									7 =>  'Jul',
									8 =>  'Aug',
									9 =>  'Sep',
									10=>  'Oct',
									11=>  'Nov',
									12 => 'Dec', 
			);		

			$this->overprint_consultation = array(
										'text1'=>'Receive a FREE Skin Consultation when you purchase any three DMK Home Prescriptive products on',                
										'text2'=>'Receive a FREE DMK Facial when you purchase any three DMK Home Prescriptive products on',                
										'text3'=>'Receive a FREE Skin Consultation when you purchase any four DMK Home Prescriptive products on',                
										'text4'=>'Receive a FREE DMK Facial when you purchase any four DMK Home Prescriptive products on',                
										'text5'=>'Receive a FREE Transdermal Nutrition Treatment including Eye Fusion when you purchase any three DMK Home Prescriptive products on',                
										'text6'=>'Receive a FREE DMK MediPedi® when you purchase any three DMK Home Prescriptive products on',                
										'text7'=>'Receive a FREE Body Sculpting Treatment (thighs or buttocks) when you purchase any three DMK Home Prescriptive products on',                
										'text8'=>'Receive a FREE personalised essentials pack when you purchase a course of 6 DMK Enzyme Therapy Facials on',               
										'text9'=>'Receive a FREE home combination masque of Foamy Lift and Exoderma Peel when you purchase four DMK Home Presscriptive products on',
										'text10'=>'Receive a FREE essential pack PLUS an EFA Ultra suppliments bottle when you book your DMK Six-Layer Peel on'
									);	
			//$this->admin_email 	     = "No-reply@dmkeducation.com";		 
			//$this->admin_email 	     = "education@danne.com.au";
			
			// changed  on 07-11-17
			//$this->admin_email 	         = "education@danne.com.au";	
			//$this->admin_email_usa 	     = "education@dannemking.com";	
			
			$this->admin_email 	         = "rupesh.kumar@pulsesolutions.net";	
			$this->admin_email_usa 	     = "rupesh.kumar@pulsesolutions.net";

			$this->item_type=array(
                                                                1   =>  'Events',
                                                                2   =>  'Raffle Tickets',
                                                                3   =>  'Products',
                                 );

	}
	
	
	
	function custom_addslashes($value)
	{
		//CodeIgniter Always removes effect of magic quotes so that input data is always be unslashed by defalut.
		if(get_magic_quotes_gpc())
		{
			return $value;
		}
		else
		{
			return addslashes($value);
		}
	}
	
	function send_mail($o_email, $to, $subject, $message, $from = '',$cc ='', $name ='',$reply_to='',$bcc = '',$category = '',$file_path=null)
	{
		$mail_message = '';	
		if($to == "no@email.com")
		{
			$check_mail_sent = FALSE;
			return $check_mail_sent;
		} 
		$o_email->clear();
		// echo strpos($to,'pulsesolutions')."test";exit;
		// if(strpos($to,'pulsesolutions') !== false)  // Commented to mail the draft to any user
		{
			$o_email->to($to);
			if(!empty($cc))
			{
				$o_email->cc($cc);	
			}
			if(!empty($bcc))
			{
				$o_email->bcc($bcc);	
			}else{
				$o_email->bcc('');
			}
			 if(isset($file_path))
                        {
                              $o_email->attach($file_path);
                        }
			
		//$o_email->bcc('rupesh.kumar@pulsesolutions.net');
			if($_SERVER['HTTP_HOST']!='crystal99')
			{ 
				//$o_email->bcc('rupesh.kumar@pulsesolutions.net');	
			}
			if($category!='')
		{					
			//$o_sendgrid->setCategory($category); 
			//$o_email->setCategory($category);
			$o_email->add_custom_header('X-SMTPAPI', '{"category":"'.$category.'"}');
		}
			$o_email->from($from,$name);
			$o_email->subject($subject);
		
			if($reply_to != '') {
			$o_email->reply_to($reply_to);
			}
			$mail_message = str_replace("##current_year##",date('Y'),$message);
		
			$o_email->message($mail_message);
		
			$check_mail_sent = $o_email->send(); // UNCOMMENT TO SEND EMAIL.
			// $check_mail_sent = TRUE;
			
			
			//print_r($o_email->print_debugger());exit;
			return $check_mail_sent;
		}
	}
	
	public function encode_base64($sData){
		$sBase64 = base64_encode($sData);
		return str_replace('=', '', strtr($sBase64, '+/', '-_'));
	}
	public function decode_base64($sData){
		$sBase64 = strtr($sData, '-_', '+/');
		return base64_decode($sBase64.'==');
	}
	
	public function get_resource() {
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$resource_details = $CI->common_model->get_resource();	
		if(!strpos($resource_details['st_external_link'],"http://") || !strpos($resource_details['st_external_link'],"https://"))
		{
			$resource_details['st_external_link'] = "http://".$resource_details['st_external_link'];
		}	
		return $resource_details;
		
	}
	
	
	public function get_marketing_calender() {
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$mcalender_details = $CI->common_model->get_marketing_calender();		
		return $mcalender_details;		
	}
	
	
	public function get_online_order_form_link() {
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$order_form_details = $CI->common_model->get_online_order_form_link();	
		if(!strpos($order_form_details['st_external_link'],"http://") || !strpos($order_form_details['st_external_link'],"https://"))
		{
			$order_form_details['st_external_link'] = "http://".$order_form_details['st_external_link'];
		}
		return $order_form_details;		
	}
	
	public function save_log($array) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$array['in_is_admin_login'] = $CI->session->userdata('sess_is_admin_login');
		if(!strrpos(trim($array['st_log_text']), '.', -1))
		{
			$array['st_log_text'] = $array['st_log_text'].'.';
		}
		$id = $CI->common_model->save_log($array);
		if(!empty($id)) {
			return $id;
		}
	}

	public function save_admin_log($user_id, $st_action, $st_log_text) {
		$CI = & get_instance();
		$CI->load->model('common_model');
		$array = array();
		if(!strrpos(trim($st_log_text), '.', -1))
		{
			$st_log_text = $st_log_text.'.';
		}
        $array = array(
            'in_user_id'=> $user_id,
            'st_action'=> $st_action,
            'st_log_text'=> $st_log_text,
            'dt_created'=> date("Y-m-d H:i:s")
            );
		$id = $CI->common_model->save_admin_log($array);
		if(!empty($id)) {
			return $id;
		}
	}
	
	public function get_education_calender() {
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$ecalender_details = $CI->common_model->get_education_calender();		
		return $ecalender_details;		
	}
	
	public function get_location_detail() {
		$CI = & get_instance();
		$CI->load->model('common_model');		
		$location_details = $CI->common_model->get_location_details();				
		return $location_details;		
	}
	function custom_htmlentities($value)
	{
		return htmlspecialchars($value);
	}
	
}


?>