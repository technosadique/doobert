<?php
# ======================================================================================
# Created by		: Rajashri Mahapure
# Created date		: 31-May-2017
# File description	: Partner map model
# Special - notes	: none
# Tables used		: none
# Stored procedures	: NONE 
# Triggers used		: none
# --------------------------------------------------------------------------------------
class animal_shelter_model extends CI_Model {

    function __construct() {
        // Call the Model constructor
        parent::__construct();
    }


   function get_doobert_org_bystatezip($state_name='', $zipcode='') {
	$this->db->select("o.in_organization_id,o.in_status,o.st_org_name,o.st_address1,o.st_address2,o.st_city,o.st_state,o.st_zip,z.lat,z.lon,
			st_org_image,o.in_disaster,",false);
		$this->db->from('tbl_organization as o');
		$this->db->join('tbl_zip_code as z',"z.zip_code=o.st_zip",'LEFT');
		$this->db->join('tbl_organization_setting as os',"os.in_organization_id=o.in_organization_id",'LEFT');
		$this->db->join('tbl_users as u','u.in_user_id = o.in_user_id','INNER'); // for testing. 	
		$wh='';
		$wh .="(o.in_deleted=0 AND o.in_status=1 AND z.lat!='' AND z.lon!='' AND u.in_deleted=0)";
		$wh .= "AND (os.in_public IS NULL OR os.in_public = 0)";
		$wh .= "AND o.in_disaster = '1'";
		$this->db->where($wh);
		if(!empty($state_name) || !empty($zipcode)){
				
			if(!empty($state_name))	{
				$this->db->where('o.st_state',$state_name);
			}
			
			if(!empty($zipcode))	{
				$this->db->where('o.st_zip',$zipcode);
			}
		}
		

		$this->db->group_by('o.in_organization_id');	
		$query = $this->db->get();	
		
		$data=array();
		$temp_lat	=	0;
		$temp_lon	=	0;
		$i =0;
		
		if ($query->num_rows() > 0) {
			foreach($query->result_array() as $row) {
			
					$address  = '';				
					$address .= (!empty($row['st_address1'])?$row['st_address1'].', ':'');
					$address .= (!empty($row['st_address2'])?$row['st_address2'].', ':'');		
					
					if($temp_lat!=0 && $temp_lon!=0)
					{
						$miles = $this->distance($temp_lat, $temp_lon, $row['lat'], $row['lon'], 'K');
						
						//if($miles < 1)
						if($miles)
						{	
						
							$i++;							
							$temp_lat	=	$row['lat'] +($i/30);
							$temp_lon	=	$row['lon'];
						}
						else{
						
							$temp_lat	=	$row['lat'];
							$temp_lon	=	$row['lon'];
						}
						
					}else{
						
						$temp_lat	=	$row['lat'];
						$temp_lon	=	$row['lon'];
					}


			   
				$data[] = array('org_id'		=>	$row['in_organization_id'],
								'orgname'		=>	$row['st_org_name'],
								'address'		=>  $address,							
								'city'			=>  $row['st_city'],
								'state'			=>  $row['st_state'],
								'zip'			=>  $row['st_zip'],
								'lat' 			=>  $temp_lat,
								'lon'			=>  $temp_lon,
								'status'		=>  $row['in_status'],
								'img'			=>  'doobert-organization-legend.png',
								'provide_animal'    =>  unserialize($row['st_prov_animal_type']),
								'accept_animal'		=> 	unserialize($row['st_accpt_animal_type']),
								'st_org_image' => $row['st_org_image']
								);							
							
			}	
			return $data;
		}
		
	}


	public function distance($lat1, $lon1, $lat2, $lon2, $unit) {

	  $theta = $lon1 - $lon2;
	  $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
	  $dist = acos($dist);
	  $dist = rad2deg($dist);
	  $miles = $dist * 60 * 1.1515;
	  $unit = strtoupper($unit);

	  if ($unit == "K") {
	    return ($miles * 1.609344);
	  } else if ($unit == "N") {
	      return ($miles * 0.8684);
	    } else {
	        return $miles;
	      }
	}
	
	public function get_zipcode2($zipcode)
	{
		$this->db->select("concat(zip_code,', ',city,', ',state_prefix) as label, zip_code as value,city,state_prefix",FALSE);
		$this->db->from('tbl_zip_code');	
		
		// if normal 1 char is present 
		if (strpos($zipcode ,',') == false) {
		$this->db->where('zip_code LIKE "'.$zipcode.'%" OR lower(city) LIKE lower("'.$zipcode.'%") OR UPPER(state_prefix) = UPPER("'.trim($zipcode).'")');
		} else {
		$value=explode(',',$zipcode);
		if(!empty($value))
		{
			if(is_numeric($value[0]))
			{
				$this->db->where('zip_code LIKE "'.$value[0].'%"',FALSE,FALSE);			
			}else {
			 if(isset($value[0]) && isset($value[1])){

			 	if(strlen($value[1]) > 2)
				{
					$states_list = $this->common_function->state_list;
					if(in_array(ucfirst($value[1]), $states_list))
					{
						$state_key = array_search(ucfirst($value[1]), $states_list);
						$value[1] = $state_key;
					}
					//echo $state;exit;
				}
			 
			 $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) = UPPER("'.trim($value[1]).'")');
			 }else {
			  $this->db->where('lower(city) LIKE lower("'.$value[0].'%") AND UPPER(state_prefix) = UPPER("'.trim($value[0]).'")');
			 }
			}
			
		}
		}
		$this->db->limit("10");
				
		$query = $this->db->get();
		//echo $this->db->last_query();die;
		if($query->num_rows() > 0)
		{
			$arrData = array();
			foreach($query->result() as $Row)
			{			
			//echo $Row->st_country;die;
					$arrData[]	= array( "label"     	=> $Row->label,
										"value"			=> $Row->value,
										"city"			=> $Row->city,
										"state_prefix"	=> $Row->state_prefix,
										//"st_country"	=> strtoupper($this->common_function->shortCountry[trim($Row->st_country)])
										);
			}
			return $arrData;
		}
	}
	
	public function get_lat_lon_state($state='')
	{
		$this->db->select('lat,lon');
		$this->db->from('tbl_zip_code');
		$this->db->where('state_prefix',$state);
		//$this->db->where('lower(city) = lower("'.$city.'")',FALSE,FALSE);
		$query = $this->db->get();
		return $query->row_array();
		
	}
	
	public function get_lat_lon_zip($zip='')
	{
		$this->db->select('lat,lon');
		$this->db->from('tbl_zip_code');
		$this->db->where('zip_code',$zip);
		//$this->db->where('lower(city) = lower("'.$city.'")',FALSE,FALSE);
		$query = $this->db->get();
		return $query->row_array();
	}

}