var FormValidation = function () {
	$('#st_phone').inputmask("(999) 999-9999");
	$('#contact_phone_no').inputmask("(999) 999-9999");
	$('#receiving_contact_phone_no').inputmask("(999) 999-9999");
	$('#backupphone').inputmask("(999) 999-9999");
	$('#bk_contact_phone_no').inputmask("(999) 999-9999");
	$('#bk_receiving_contact_phone_no').inputmask("(999) 999-9999");
	
	
	$.validator.addMethod("telephone_number", function (value, element) {
		var a = /^(1\s|1|)?((\(\d{3}\))|\d{3})(\-|\s)?(\d{3})(\-|\s)?(\d{4})$/.test(value);
		return a;
	},'Please enter valid phone number');


	var handleValidation1 = function() {
		var form1 = $('#checkout-form');
        var error1 = $('.alert-danger', form1);
        var success1 = $('.alert-success', form1);

				form1.validate({
	            errorElement: 'span', //default input error message container
	            errorClass: 'help-block', // default input error message class
	            focusInvalid: false, // do not focus the last invalid input
	            ignore: "false", // validate all fields including form hidden input
	            rules: {
	                st_first_name :{
	                  	required: true
	                },
	                st_last_name :{
	                  	required: true
	                },
	                st_email :{
	                  	required: true,
	                  	email:true
	                },
	                st_phone :{
	                  	required: true,
	                  	telephone_number: true
	                },
	                st_addr1:{
	                	required:true
	                },
	                st_city:{
	                	required:true
	                },
	                st_state:{
	                	required:true
	                },
	                st_country:{
	                	required:true
	                },
	                st_zip:{
	                	required:true
	                },
	                terms_conditions:{
	                	required:true	
	                },
	                organization_name:{
	                	required:true
	                },
	                contact_name:{
	                	required:true
	                },
					bk_contact_name:{
	                	required:true
	                },
	                contact_email:{
	                	required:true,
	                	email:true
	                },
	                contact_phone_no:{
	                	required: true,
	                  	telephone_number: true
	                },
	                receiving_organization_name:{
	                	required:true
	                },
	                receiving_contact_name:{
	                	required:true
	                },
					bk_receiving_contact_name:{
						required:true
					},	
	                receiving_contact_email:{
	                	required:true,
	                	email:true
	                },
	                receiving_contact_phone_no:{
	                	required: true,
	                  	telephone_number: true
	                },
					backupcontact:{
	                	required:true
	                },
					backupphone:{
	                	required:true,
						telephone_number: true
	                },
					bk_contact_phone_no:{
	                	required: true,
	                  	telephone_number: true
	                },
					bk_receiving_contact_phone_no:{
	                	required: true,
	                  	telephone_number: true
	                },
					

	            },

	            messages: {
	                st_first_name :{
	                  	required: "First Name is required."
	                },
	                st_last_name :{
	                  	required: "Last Name is required."
	                },
	                st_email :{
	                  	required: "Email is required.",
	                  	email:"Please Enter Valid Email."
	                },
	                st_phone :{
	                  	required: "Phone Number is required."
	                },
	                st_addr1:{
	                	required:"Address is required."
	                },
	                st_city:{
	                	required:"City is required."
	                },
	                st_state:{
	                	required:"State is required."
	                },
	                st_country:{
	                	required:"Country is required."
	                },
	                st_zip:{
	                	required:"Zip is required."
	                },
	                terms_conditions:{
	                	required:"Please accept the terms & conditions."
	                },
	                organization_name:{
	                	required:"Organization name is required."
	                },
	                contact_name:{
	                	required:"Contact name is required."
	                },
					bk_contact_name:{
	                	required:"Contact name is required."
	                },
	                contact_email:{
	                	required: "Contact email is required.",
	                  	email:"Please Enter Valid Email."
	                },
	                contact_phone_no:{
	                	required: "Contact phone number is required."
	                },
					bk_contact_phone_no:{
	                	required: "Contact phone number is required."
	                },
	                receiving_organization_name:{
	                	required:"Organization name is required."
	                },
	                receiving_contact_name:{
	                	required:"Contact name is required."
	                },
					bk_receiving_contact_name:{
	                	required:"Contact name is required."
	                },
	                receiving_contact_email:{
	                	required: "Contact email is required.",
	                  	email:"Please Enter Valid Email."
	                },
	                receiving_contact_phone_no:{
	                	required: "Contact phone number is required."
	                },
					bk_receiving_contact_phone_no:{
	                	required: "Contact phone number is required."
	                },
					backupcontact:{
	                	required: "Backup contact is required."
	                },
					backupphone:{
	                	required: "Backup phone number is required."
	                },

	           },

	            invalidHandler: function (event, validator) { //display error alert on form submit   
	                //jQuery('.alert-danger', jQuery('#goal')).show();
	               
	                var errors = validator.numberOfInvalids();
        			if (errors) {
					  	var message ='';
					 	if(errors <= 3){
			              for (var i=0;i<validator.errorList.length;i++){
			                message += validator.errorList[i]['message']+"\n";
			              }
			            }
			            else{
							message = 'You missed ' + errors + ' fields. They have been highlighted';
								  
			            }
					  alert(message);
					  return false;
					}	
	            },

	           highlight: function (element) { // hightlight error inputs
					$(element)
						.closest('.form-group').addClass('has-error'); // set error class to the control group
				},

				success: function (label) { //alert(label);
					label.closest('.form-group').removeClass('has-error');
					label.remove();
				},
				
				errorPlacement: function (error, element) { 
					if (element.attr("name") == "terms_conditions"){
     		          $('div#div_error').html(error);
     		          
    				}else{

						error.insertAfter(element.closest('.form-control'));
					}

				}
	        });

			 jQuery('#checkout-form input').keypress(function (e) {
	            if (e.which == 13) {
	                if (jQuery('#checkout-form').validate().form()) {
	                    jQuery('#checkout-form').submit(); //form validation success, call ajax form submit
	                }
	                return false;
	            }
	        });

	}

	
    return {
        //main function to initiate the module
        init: function () {
        	
            handleValidation1();
			
        }

    };

}();

jQuery(document).ready(function () {
    FormValidation.init();
});

jQuery(document).ready(function(){
	$('#organization_name').autocomplete({
		source: function (request, response)
   		 {
			request = $.trim(request.term);
			$.ajax(
			{
				url: base_url+"org_transportation/get_all_organization/" ,
				dataType: "json",
				data:
				{
					term: request
				},
				success: function (data)
				{
					if(data=="1")
					{
						window.location.href=base_url;
					}
					if(1)
					{
						response(data);
					}
					
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#organization_name" ).width()) },
		focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.label;
			var person =  ui.item.director;
			var email =  ui.item.email;
			var tel_num =  ui.item.telephone;
			var cert = ui.item.st_has_501c3;
			//var zip = ui.item.st_zip;
			if(cert=='Y')
			{
				$('#rememberme1').prop("checked",true);
			}
			if(cert=='N')
			{
				$('#rememberme1').prop("checked",false);
			}	
			$("#organization_name" ).val(name);
			$("#contact_name" ).val(person);
			$("#contact_email" ).val(email);
			$("#contact_phone_no" ).val(tel_num);
				return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.label;
			var person =  ui.item.director;
			var email =  ui.item.email;
			var tel_num =  ui.item.telephone;
			var cert = ui.item.st_has_501c3;
			//var zip = ui.item.st_zip;
			if(cert=='Y')
			{
				$('#rememberme1').prop("checked",true);
				//$('#receiving-501c3-certified').next('.slider').html('<span class="yes">Yes</span>');
			}
			
			if(cert=='N')
			{
				$('#rememberme1').prop("checked",false);
				//$('#receiving-501c3-certified').next('.slider').html('<span class="no">No</span>');
			}
			
			$("#organization_name" ).val(name);
			$("#contact_name" ).val(person);
			$("#contact_email" ).val(email);
			$("#contact_phone_no" ).val(tel_num);
			return false;
		}
	});	
});


jQuery(document).ready(function(){
	$('#receiving_organization_name').autocomplete({
		source: function (request, response)
   		 {
			request = $.trim(request.term);
			$.ajax(
			{
				url: base_url+"org_transportation/get_all_organization/" ,
				dataType: "json",
				data:
				{
					term: request
				},
				success: function (data)
				{
					if(data=="1")
					{
						window.location.href=base_url;
					}
					if(1)
					{
						response(data);
					}
					
				}
			});
  	  	},
		minLength:1,
		open: function() { $('.ui-menu').width($("#receiving_organization_name" ).width()) },
		focus: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.label;
			var person =  ui.item.director;
			var email =  ui.item.email;
			var tel_num =  ui.item.telephone;
			var cert = ui.item.st_has_501c3;
			//var zip = ui.item.st_zip;
			if(cert=='Y')
			{
				$('#receiving-501c3-certified').prop("checked",true);
			}
			if(cert=='N')
			{
				$('#receiving-501c3-certified').prop("checked",false);
			}	
			$("#receiving_organization_name" ).val(name);
			$("#receiving_contact_name" ).val(person);
			$("#receiving_contact_email" ).val(email);
			$("#receiving_contact_phone_no" ).val(tel_num);
			//get_zip_code(zip,'#drop_zip');
				return false;
		},     
		select: function( event, ui ) {
			var id = ui.item.label;
			var name = ui.item.label;
			var person =  ui.item.director;
			var email =  ui.item.email;
			var tel_num =  ui.item.telephone;
			var cert = ui.item.st_has_501c3;
			//var zip = ui.item.st_zip;
			if(cert=='Y')
			{
				$('#receiving-501c3-certified').prop("checked",true);
				//$('#receiving-501c3-certified').next('.slider').html('<span class="yes">Yes</span>');
			}
			
			if(cert=='N')
			{
				$('#receiving-501c3-certified').prop("checked",false);
				//$('#receiving-501c3-certified').next('.slider').html('<span class="no">No</span>');
			}
			
			$("#receiving_organization_name" ).val(name);
			$("#receiving_contact_name" ).val(person);
			$("#receiving_contact_email" ).val(email);
			$("#receiving_contact_phone_no" ).val(tel_num);
			return false;
		}
	});	
});



