<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Org_animal extends CI_Controller {

	public function __construct() {
		parent::__construct();
		if($_SERVER['REMOTE_ADDR']=='162.158.46.16' || $_SERVER['REMOTE_ADDR']=='172.68.144.175')
		{
			//$this->output->enable_profiler(TRUE);
		}
		else
		{
			$this->output->enable_profiler(FALSE);
		}
		$this->load->model('common_model');
		$this->load->model('organimal_model');
		$this->load->library('form_validation');
		$this->load->helper('url');
		$this->load->library('common_function');
		$this->load->helper('cookie');
		$this->load->model('rescue_animal_model');
		error_reporting(0);
		if(!$this->session->userdata('org_id')) {
			//redirect(base_url().'my-profile');
		}
		if($this->session->userdata('cart_session_id'))
		{ }else{
			$this->session->set_userdata('cart_session_id',md5(uniqid()));			
		}
	}

	#=========================================================
	#	Function : Verification of valid email address
	#	Purpose  : To verify if user has entered valid email address
	#---------------------------------------------------------
		
	
	function verify_valid_email($email)
	{	 
	   if(!empty($email))
	   {	
			if(filter_var($email, FILTER_VALIDATE_EMAIL) === FALSE)
			{
				$this->form_validation->set_message('verify_valid_email', 'Please enter a valid email address.');
				return FALSE;
			} else {
				return TRUE;
			}
	   }		
	}		
	
	#=========================================================
	#	Function : index
	#	Purpose  : Add new animal
	#---------------------------------------------------------
	
	public function index() {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		if(!$this->session->userdata('org_id')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$usa_states=array();
		$canada_states=array();
		$fbconfig = array();
			 
		$this->config->load('facebook');			 
		$fbconfig['appid' ]  = $this->config->item('appId');
		$fbconfig['secret']  = $this->config->item('secret');
		$fbconfig['baseurl'] = $this->config->item('baseurl');
	 
		/*$this->load->library('facebook');	
		$facebook = new Facebook(array(
			'appId' => $fbconfig['appid'],
			'secret' => $fbconfig['secret'],
			'cookie' => true,
		));
	
		$user = $facebook->getUser();
		if($user)$data['fb_user'] = 'yes';*/
		
		//$data['get_demeanor'] = $this->common_model->get_demeanor();
		$all_animal_type = $this->organimal_model->get_animal_all_type();
		$data['check_for_new_animal'] = $this->organimal_model->check_for_new_animal();
		$data['check_for_new_org'] = $this->organimal_model->check_for_new_org();
		
		//Checking for new animal creation
		if($data['check_for_new_animal'] > 0 && $data['check_for_new_org'] > 0) {
			set_cookie('tooltip_animal', "Y", 864000);	
			set_cookie('get_started_animal', "Y", 864000);	
			$data['tooltip_animal'] 	 	= "Y";
			$data['get_started_animal'] 	= "Y";
		} else {
			if(get_cookie('tooltip_animal')) {
				$data['tooltip_animal'] 	 	= get_cookie('tooltip_animal');
			} else {
				set_cookie('tooltip_animal', "N", 864000);	
				$data['tooltip_animal'] 	= "N";	
			}
				
			if(get_cookie('get_started_animal')) {
				$data['get_started_animal'] 	= get_cookie('get_started_animal');
			} else {
				set_cookie('get_started_animal', "N", 864000);	
				$data['get_started_animal'] 	= "N";	
			}
		}
		//End Checking for new animal creation
		
		$usa_states =  array_keys($this->common_function->state_list);		        // added by sadiq on 5-1-15          
		$canada_states =  array_keys($this->common_function->canadian_state_list); // added by sadiq on 5-1-15
		//echo "<pre>";print_r($all_animal_type);die;
		for($q=0;$q<count($all_animal_type);$q++)
		{
			$demeanors = $this->common_model->get_demeanor($all_animal_type[$q]['in_animal_type_id']);
			$all_animal_type[$q]['demeanors'] = $demeanors;
			
		}
		$data['get_demeanor'] = $all_animal_type;
		//echo "<pre>";print_r($all_animal_type);die;
		if($this->input->post('frm_action') == 'add_animal') {
		
			$req_fields = array(	array('field'   => 'name',				'label'  => 'Name',				'rules' => 'required|trim'),
									array('field'   => 'gender', 			'label'  => 'Gender', 			'rules' => 'required|trim'),
									array('field'   => 'animal_type', 		'label'  => 'Animal Type', 		'rules' => 'required|trim'),
									array('field'   => 'animal_breed',		'label'  => 'Animal breed',		'rules' => 'required|trim'),
									//array('field'   => 'age', 				'label'  => 'Age', 				'rules' => 'required|trim'),
									//array('field'   => 'demeanor',			'label'  => 'Demeanor',			'rules' => 'required|trim'),
									array('field'   => 'neutered_spayed', 	'label'  => 'Neutered/Spayed', 	'rules' => 'required|trim'),
									array('field'   => 'visibility', 	    'label'  => 'Visiblity', 		'rules' => ''),
									//array('field'   => 'animal_country', 	'label'  => 'Country', 		'rules' => 'required|trim'),
									//array('field'   => 'city', 	    		'label'  => 'City', 		'rules' => 'required|trim'),
									//array('field'   => 'state', 	    	'label'  => 'State', 		'rules' => 'required|trim')		
									);

			$this->form_validation->set_rules($req_fields);
			
			if($this->input->post('chipped_animals') == 'Y') {
				$this->form_validation->set_rules('chipped_animals_id', 'Company/Service ID', 'required|trim');
			}
			
			if($this->input->post('on_the_clock') != '') {
				$this->form_validation->set_rules('on_date', 'Date', 'required|trim');
			}
			
			if($this->input->post('other_animals') == 'No') {
				$this->form_validation->set_rules('other_animals_notes', 'Other animal explanation', 'required|trim');
			}
			
			if($this->input->post('quarantine') == 'Y') {
				$this->form_validation->set_rules('quarantine_end_date', 'Quarantine End Date', 'required|trim');
			}
			
			/*if($this->input->post('known_medical_issues') != '') {
				$this->form_validation->set_rules('known_medical_issues_notes', 'Medical issues', 'required|trim');
			}*/
			//echo $this->input->post('fecaltest');die;
			
			($this->input->post('recent_vaccin_date') == 'Y')?$this->form_validation->set_rules('vaccin_date', 'Vaccin date', 'required|trim'):'';
			
			//($this->input->post('cvi') == 'Y')?$this->form_validation->set_rules('cvi_date', 'CVI date', 'required|trim'):'';
			
			($this->input->post('rabiesvac') == 'Y')?$this->form_validation->set_rules('rabiesvac_date', 'Rabies Vaccin date', 'required|trim'):'';
			($this->input->post('fecaltest') == 'Y')?$this->form_validation->set_rules('fecaltest_date', 'Fecal Test Vaccine date', 'required|trim'):'';
			($this->input->post('heartworm') == 'Y')?$this->form_validation->set_rules('heartworm_date', 'Heart worm Vaccine date', 'required|trim'):'';
			($this->input->post('bordatella') == 'Y')?$this->form_validation->set_rules('bordatella_date', 'Bordatella Vaccin date', 'required|trim'):'';
			($this->input->post('surgery') == 'Y')?$this->form_validation->set_rules('surgery_date', 'Surgery date', 'required|trim'):'';
			($this->input->post('heartworm') == 'Y')?$this->form_validation->set_rules('heartworm_brand', 'Heartworm Brand', 'required|trim'):'';
			($this->input->post('bordatella') == 'Y')?$this->form_validation->set_rules('bordatella_brand', 'Bordatella Brand', 'required|trim'):'';
				/** Added By Nirav **/
			$email_address = $this->input->post('shelteremail');
			if (count(array_filter($email_address))>0) {
				$this->form_validation->set_rules('shelteremail[]','Email Address','callback_verify_valid_email');
			}
		}
	
		//this is for the zip code generation 
		$form_field = array(
            'pick_country' => "USA",
            'drop_country' => "USA",
           );
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}		
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		$c_state_list 			= $this->common_function->canadian_state_list;
		$data['c_state_list'] 	= $c_state_list;
		
		$data['all_state']     = array_merge($data['state_list'],$data['c_state_list']);
		
		
		if ($this->form_validation->run() == FALSE) {
			// Validation error				
			$data['error_msg'] = validation_errors();
			
			//Get Animal types
			$data['animal_type'] = $this->common_model->get_animal_types();
			
			$data['progress_status'] = $this->common_model->get_progress_status();
			$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
			
			$this->load->view('add-new-animal-profile',$data);
		} else {
			
			//Adding animal information
										$country='';
										if (in_array($this->input->post('state'), $usa_states))  // added by sadiq on 5-1-15
										  {
										 	$country="USA";
										  }
										else if(in_array($this->input->post('state'), $canada_states))
										  {
										 	$country="CANADA";  
										  }
			//by bhushan 
			$splitcurrent  = explode(",",$this->input->post('st_current_zip'));
			$splitdesired  = explode(",",$this->input->post('st_desired_zip')); 
			if($this->input->post('set_profile_public') == 1){
			$this->session->set_flashdata('gotoprivacy',1);
			$is_public = 0;
			}
			else 
			$is_public = $this->input->post('visibility');
			
			if($this->input->post('demeanor')=='')
			{
				$demeanotid = '';
                $this->db->select('in_demeanor_id');
                $this->db->from('tbl_demeanor');
                $this->db->where('in_animal_type_id', $this->input->post('animal_type'));
                $this->db->where('st_demeanor_name', 'Unknown');
                $query = $this->db->get();
                //echo $this->db->last_query();
                $res = $query->row_array();
                $demeanotid=$res['in_demeanor_id'];
			}
			
			
			$data['animal_info'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$this->input->post('name'),
											'st_gender'				=>	$this->input->post('gender'),
											//'in_animal_public'		=>	$this->input->post('visibility'), 
											'in_animal_public'		=>	$is_public,	
											'in_animal_type_id'		=>	$this->input->post('animal_type'),
											'in_primary_breed_id'	=>	$this->input->post('animal_breed'),
											'in_secondry_breed_id'	=>	$this->input->post('secondary_breed'),
											'in_tertiary_breed_id'	=>	$this->input->post('tertiary_breed'),
											'in_age'				=>	$this->input->post('age'),
										    'in_demeanor_id'		=>	($this->input->post('demeanor')=='')?$demeanotid:$this->input->post('demeanor'),
											'in_neutered_id'		=>	$this->input->post('neutered_spayed'),
											'in_weight'				=>	$this->input->post('weight'),
											'st_crates_well'		=>	$this->input->post('crates'),
											'st_flight_risk'		=>	$this->input->post('flight'),
											'st_barrier_aggressive'	=>	$this->input->post('aggressive'),
											//'st_ok_others'			=>	($this->input->post('other_animals') == 'No')?'N':'Y',
											//'st_ok_explanation'		=>	$this->input->post('other_animals_notes'),
											'st_micro_chipped'		=>	($this->input->post('chipped_animals')=='Y')?'Y':($this->input->post('chipped_animals')=='N'?'N':'U'),
											'st_micro_chip_comp'	=>	$this->input->post('chipped_animals_id'),
											'st_on_clock'			=>	($this->input->post('on_the_clock')=='Y')?'Y':'N',
											'dt_date'				=>	($this->input->post('on_the_clock')=='Y')?date('Y-m-d',strtotime($this->input->post('on_date'))):'',
											'st_medical_issue'		=>	($this->input->post('known_medical_issues')=='Yes')?'Y':'N',
											'st_medical_desc'		=>	$this->input->post('known_medical_issues'),
											'st_profile_story'		=>	$this->input->post('profile_story'),
											
											'st_recent_vaccination' => $this->input->post('recent_vaccns'),
											'dt_vaccination' 		=> ($this->input->post('recent_vaccns')=='Y')?date('Y-m-d',strtotime($this->input->post('vaccin_date'))):'',
											'st_good_with_dogs' 	=> $this->input->post('dogs'),
											'st_good_with_cats' 	=> $this->input->post('other_cats'),
											'st_good_with_kids' 	=> $this->input->post('kids'),
											'st_house_trained' 		=> $this->input->post('house_trained'),
											'st_cvi' 				=> $this->input->post('cvi'),
											//'dt_cvi' 				=> ($this->input->post('cvi')=='Y')?date('Y-m-d',strtotime($this->input->post('cvi_date'))):'',
											'dt_cvi' 				=> ($this->input->post('cvi')=='Y' && $this->input->post('cvi_date'))?date('Y-m-d',strtotime($this->input->post('cvi_date'))):'',
											'st_declawed' 			=> $this->input->post('declawed'),
											
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0,
											'in_progress_status'	=>	$this->input->post('current_status'),
											'in_next_status'		=>	$this->input->post('next_status'),
											
											//'st_country'			=>	$this->input->post('animal_country'),
											'st_city'				=>	$this->input->post('city'),
											'st_state'				=>	$this->input->post('state'),
											'st_country'			=>  $country,   // added by sadiq on 5-1-15
											
											'in_enter_age'			=>	$this->input->post('enterage'),
											'in_dog_where'			=>	$this->input->post('dogfrmshelter'),
											'st_quarantine'			=>	$this->input->post('quarantine'),
											'dt_quarantine_end_date'=>	($this->input->post('quarantine')=='Y')?date('Y-m-d',strtotime($this->input->post('quarantine_end_date'))):'',
											
											'st_timeout'			=>	$this->input->post('timeout'),
											'dt_target_tr_date'		=>	($this->input->post('target_tr_date')!='')?date('Y-m-d',strtotime($this->input->post('target_tr_date'))):'',
											'st_travel_with'		=>	($this->input->post('travel_with'))?implode(',',$this->input->post('travel_with')):'',
											'st_tr_comment'			=>	$this->input->post('transportcomments'),
											
											'st_foster_comment'		=>	$this->input->post('fostercomments'),
											
											'st_rabies_vaccine'		=>	$this->input->post('rabiesvac'),
											'st_fecal_test'			=>	$this->input->post('fecaltest'),
											'st_dlhhp'				=>	$this->input->post('dlhpp'),
											'st_heartworm_vaccine'	=>	$this->input->post('heartworm'),
											'st_bordatella_vaccine'	=>	$this->input->post('bordatella'),
											'st_surgery'			=>	$this->input->post('surgery'),
											
											'dt_rabiesvac_date'		=>	($this->input->post('rabiesvac')=='Y')?date('Y-m-d',strtotime($this->input->post('rabiesvac_date'))):'',
											'dt_fecal_test_date'	=>	($this->input->post('fecaltest')=='Y')?date('Y-m-d',strtotime($this->input->post('fecaltest_date'))):'',
											'dt_heartworm_vaccine_date'	=>	($this->input->post('heartworm')=='Y')?date('Y-m-d',strtotime($this->input->post('heartworm_date'))):'',
											'dt_bordatella_vaccine_date' =>	($this->input->post('bordatella')=='Y')?date('Y-m-d',strtotime($this->input->post('bordatella_date'))):'',
											'dt_surgery_date'		=>	($this->input->post('surgery')=='Y')?date('Y-m-d',strtotime($this->input->post('surgery_date'))):'',
											'st_heartworm_brand'	=>	($this->input->post('heartworm')=='Y')?$this->input->post('heartworm_brand'):'',
											'st_bordatella_brand'	=>	($this->input->post('bordatella')=='Y')?$this->input->post('bordatella_brand'):'',
											'st_birdsex'			=>	$this->input->post('birdsex'),
											'st_general_comment'	=>	$this->input->post('generalcomments'),
											'st_current_zip'		=>  $splitcurrent[0],
											'st_desired_zip'		=>  $splitdesired[0],
											'in_ready_transfer'		=>  ($this->input->post('in_ready_transfer')=='Yes')?1:0
										);	
			//echo "<pre>";print_r($_POST['set_default']);die;
			$this->load->library('upload');
			
			$date = date('Y-m-d H:i:s');
			
			$photos = array('photo1' => '',
							'photo2' => '',
							'photo3' => '',
							'photo4' => ''
							);
			
				$xaxis = '';
				$yaxis = '';
				$height = '';
				$width = '';
							
			//if($_FILES['photo1']['name'] != '') {
			if($this->input->post('uploaded_photo1') != '') {
				$photos['photo1'] = $this->input->post('uploaded_photo1');//$_FILES['photo1']['name'];

				$img_name_array = explode('.', $photos['photo1']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo1'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo1']);
					imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
					$photos['photo1'] =  $new_image_name;
				}
				
			}
			//if($_FILES['photo2']['name'] != '') {
			if($this->input->post('uploaded_photo2') != '') {
				$photos['photo2'] = $this->input->post('uploaded_photo2');//$_FILES['photo2']['name'];
				
				$img_name_array = explode('.', $photos['photo2']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo2'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo2']);
					imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
					$photos['photo2'] =  $new_image_name;
				}
				
			}
			
			//if($_FILES['photo3']['name'] != '') {
			if($this->input->post('uploaded_photo3') != '') {
				$photos['photo3'] = $this->input->post('uploaded_photo3');//$_FILES['photo3']['name'];
				
				$img_name_array = explode('.', $photos['photo3']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo3'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo3']);
					imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
					$photos['photo3'] =  $new_image_name;
				}
				
			}
			//if($_FILES['photo4']['name'] != '') {
			if($this->input->post('uploaded_photo4') != '') {
				$photos['photo4'] = $this->input->post('uploaded_photo4');//$_FILES['photo4']['name'];
				
				$img_name_array = explode('.', $photos['photo4']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo4'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $photos['photo4']);
					imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
					$photos['photo4'] =  $new_image_name;
				}
				
			}
			
			//print_r($_POST);die;
			$data['add_animal_info'] = $this->organimal_model->add_animal_profile($data['animal_info']);
			$last_id = $this->db->insert_id();//get last inserted id
			
			$this->update_animal_transfer();
			
			
			$shelter_contact_name = $this->input->post('sheltername');
			$shelter_contact_email = $this->input->post('shelteremail');
			$shelter_contact_phone = $this->input->post('shelterphno');
			
			//Adding Shelter Contact
			for($i=0;$i<count($shelter_contact_name);$i++) {
				if($shelter_contact_name[$i]!='' || $shelter_contact_email[$i]!='' || $shelter_contact_phone[$i]!='') {
					$data['shelter_contact'] = array('in_animal_id' => $last_id,
												 'st_shelter_name' => $shelter_contact_name[$i],
												 'st_shelter_email' => $shelter_contact_email[$i],
												 'st_shelter_phone' => $shelter_contact_phone[$i]
												);
					$this->organimal_model->add_shelter_contact($data['shelter_contact']);
				}
			}
			
			if(isset($_POST['image_file']) && $_POST['image_file'] !='' ) {
				$explode_file = explode(',',$_POST['image_file']);
				$date = date('Y-m-d H:i:s');
				
				foreach($explode_file as $row) {
					if(trim($row)!='') {
						$file_data = array(	'in_animal_id'	=>	$last_id,
											'st_file_name'	=>	trim($row),
											'st_file_type'	=>	'O',
											'dt_created'	=>	$date,
											'in_deleted'	=>	0
										);
						$this->organimal_model->add_animal_files($file_data);
					}
				}
			}
			
			//Add youtube URLS
			$url_link = array(	'url_link_one'		=>	'',
								'url_link_two'		=>	'',
								'url_link_three'	=>	'',
								'url_link_four'		=>	''
							);
			
			if($this->input->post('url_link_one') != '') {
				$url_link['url_link_one'] = $this->input->post('url_link_one'); 
			}
			if($this->input->post('url_link_two') != '') {
				$url_link['url_link_two'] = $this->input->post('url_link_two'); 
			}
			if($this->input->post('url_link_three') != '') {
				$url_link['url_link_three'] = $this->input->post('url_link_three'); 
			}
			if($this->input->post('url_link_four') != '') {
				$url_link['url_link_four'] = $this->input->post('url_link_four'); 
			}
			
			foreach($url_link as $key => $value) {
				if($value != '') {
					$value   =	 str_replace("1.jpg","hqdefault.jpg",$value);
					$data['animal_links'] = array(	'in_animal_id'	=>	$last_id,
													'st_file_name'	=>	$value,
													'st_file_type'	=>	'V',
													'dt_created'	=>	$date
													);
										  
					$data['add_animal_link']	=	$this->organimal_model->add_animal_images($data['animal_links']);
				}
			}
			
			//Resize the image with ratio (4 Thumbnails)
			$thumb = array(	'315x315'	=>	'315X315',
							//'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'
							);
			
			//Adding animal images
			$rotate_angle1	=	0;
			$rotate_angle2	=	0;
			$rotate_angle3	=	0;
			$rotate_angle4	=	0;
			
			$this->load->library('image_lib');
			
			foreach($photos as $key => $row) {
				$config = array();	
				//echo "<pre>";print_r($_POST);die;
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1');
						$xaxis = $this->input->post('x1');
						$yaxis = $this->input->post('y1');
						$height = $this->input->post('h1');
						$width = $this->input->post('w1');
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2');
						$xaxis = $this->input->post('x2');
						$yaxis = $this->input->post('y2');
						$height = $this->input->post('h2');
						$width = $this->input->post('w2');
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3');
						$xaxis = $this->input->post('x3');
						$yaxis = $this->input->post('y3');
						$height = $this->input->post('h3');
						$width = $this->input->post('w3');
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4');
						$xaxis = $this->input->post('x4');
						$yaxis = $this->input->post('y4');
						$height = $this->input->post('h4');
						$width = $this->input->post('w4');
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}
					
					//Cropping Image
					/*$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
					*/
					/*$config['x_axis'] = isset($xaxis) ? $xaxis : 200 ;
					$config['y_axis'] = isset($yaxis) ? $yaxis : 200 ;					
					$config['width'] = isset($width) ? $width : 200;
					$config['height'] = isset($height) ? $height : 200;*/
					//$config['rotation_angle'] = $rotate_angle;
					
					//print_r($config);exit;
										
					/*$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();*/
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						//Resizing Image
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>	$last_id,
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	$date
													);
											  
					$data['add_animal_images']	=	$this->organimal_model->add_animal_images($data['animal_images']);
				}
			}
			//exit;
			//echo "<pre>";print_r($test);echo "<br>".$i; die;
			//Adding animal costs			
			$cost_desc	= array();
			$cost_price = array();
			
			$cost_desc	= $this->input->post('cost_desc');
			$cost_price = $this->input->post('cost_price');
			
			//$cost_description = (!empty($cost_description1) && !empty($cost_description2))?array_merge($cost_description1,$cost_description2):((!empty($cost_description1))?$cost_description1:$cost_description2);
			
			//$cost_price = (!empty($cost_price1) && !empty($cost_price2))?array_merge($cost_price1,$cost_price2):((!empty($cost_price1))?$cost_price1:$cost_price2);
			
			//echo "<pre>";print_r($cost_desc);print_r($cost_price);die;
			
			for($i=0;$i<count($cost_desc);$i++) {
				if(trim($cost_desc[$i]) != '' && trim($cost_price[$i]) != '' && trim($cost_price[$i]) != 0) {
					$data['animal_cost'] = array(	'in_animal_id'	=>	$last_id,
													'st_cost_desc'	=>	$cost_desc[$i],
													'in_amount'		=>	$cost_price[$i],
													'dt_created'	=>	$date
												);
			
					$data['add_animal_cost'] = $this->organimal_model->add_animal_cost($data['animal_cost']);
				}
			}
			
			$social_page_title = array();
			$social_page_url = array();
			
			$social_page_title = $this->input->post('social_page_title');
			$social_page_url = $this->input->post('social_page_url');
			
			for($i=0;$i<count($social_page_title);$i++) {
				if(trim($social_page_title[$i]) != '' && trim($social_page_url[$i]) != '') {
					$data['social_pages'] = array(	'in_animal_id'		=>	$last_id,
													'st_social_page_title'	=>	$social_page_title[$i],
													'st_social_page_url'	=>	$social_page_url[$i],
													'dt_created'		=>	$date
												);
			
					$data['add_social_pages'] = $this->organimal_model->add_social_pages($data['social_pages']);
				}
			}
			
			//Adding animal privacy setting
			if($this->input->post('visibility') == 0) {
				
				
				
				(isset($_POST['general']))?$general = serialize($_POST['general']):$general = '';
				(isset($_POST['medical']))?$medical = serialize($_POST['medical']):$medical = '';
				(isset($_POST['transport']))?$transport = serialize($_POST['transport']):$transport = '';
				(isset($_POST['foster_home']))?$foster_home = serialize($_POST['foster_home']):$foster_home = '';
			} else {
				$general = '';
				$medical = '';
				$transport = '';
				$foster_home = '';
			}
				
			$data['animal_setting'] = array('in_animal_id'			=> $last_id,
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> $general,
											'st_medical_setting'	=> $medical,
											'st_transport_setting'	=> $transport,
											'st_foster_home_setting'=> $foster_home,
											'dt_created'			=> $date,
											'dt_modified'			=> $date
											);
			$data['success'] = $this->organimal_model->add_animal_setting($data['animal_setting']);
			
			//End of Adding animal privacy setting
			
			
			//if($this->input->post('visibility')=='0')
			//{
				//Adding notification
				
				$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
												'in_animal_id'			=>	$last_id,
												'in_type'				=>	2,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'dt_created'			=>	date('Y-m-d H:i:s'),
												'in_deleted'			=>	0
											);
											
				$notification = $this->organimal_model->add_notification($data['notification']);
				
				//Sending Email to all organization users 
				$data['get_emails'] = $this->common_model->get_org_users_email($this->session->userdata('org_id'));
				
				$email_add = array();
				if(!empty($data['get_emails'])) {
					foreach($data['get_emails'] as $row) {
						$email_add[] = $row['st_email'];
					}
				}
				
				//Pushing login user email to array
				array_push($email_add,$this->session->userdata('email'));
				
				$this->load->library('email');
				/*$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
				
				$this->email->to($data['get_emails']);
				
				if($_SERVER['HTTP_HOST']!='crystal9') {
					$this->email->bcc($this->config->item('bcc_email_id'));
				}*/
				
				//Getting email body
				$email_body = $this->common_model->get_email_containt('19');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
					if(isset($q) && !empty($q)){					   		
							foreach($q as $qr)
							{		 
								  
								if(!empty($qr['st_image']))
								{
										$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
										$imgtitle   =   $qr['st_banner_name']; 				
										$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

										alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
									  
									  
								}
								else
								{
									   $donation='';								 
								}							  
									
							}
						}			
						   
					   else
					   {
						  $donation='';
					   }
				
				$added_animal_image = $this->organimal_model->get_animal_images($last_id);
				$animal_image = '';
				
				if($added_animal_image == '') {
					$animal_image = 'no_photo_icon.png';
				} else {
					$animal_image = $added_animal_image;
				}
				
				//Sending email to organization owner.
				$patterns = array('%##url##%','%##user_display_name##%','%##animal_profile_display_name##%','%##organization_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%','%##user_display_name_adding_animal##%');
				$replacements = array(base_url(),$this->session->userdata('user_name')." ".$this->session->userdata('last_name'),$this->input->post('name'),$this->session->userdata('org_name'),$animal_image,$this->input->post('profile_story'),base_url().'animal-'.$last_id.'-'.$this->common_function->get_filtered_name($this->input->post('name')),date('Y'),$this->session->userdata('user_name')." ".$this->session->userdata('last_name'));
				
				$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
				//$this->email->message($content);
				$this->email->send();
				
				$to = $data['get_emails'];
				$subject = str_replace('##organization_name##',$this->session->userdata('org_name'),$email_body[0]['st_email_subject']);
				$content = str_replace('##DONATION##',$donation,$content);
				$message = $content;
				
				
				$category  =    $email_body[0]['st_category'];
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
			
				$user_to_id = $this->common_model->get_user_id_by_email($this->session->userdata('email'));
						
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);		
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);		
				
				$send_email = 0;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}	
				
				if($send_email == 0)
				{
					$animal_setting = $this->common_model->user_notification_setting($user_to_id);
					if(isset($animal_setting) && isset($animal_setting['flg_immediate_animal']) && $animal_setting['flg_immediate_animal'] == '1')
					{
						$send_email = 1;
					}								
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $this->session->userdata('email'), $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				//End sending email to organization owner.
				
				if(!empty($data['get_emails'])) {
					foreach($data['get_emails'] as $row) {
				
					$patterns = array('%##url##%','%##user_display_name##%','%##animal_profile_display_name##%','%##organization_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%','%##user_display_name_adding_animal##%');
					$replacements = array(base_url(),$row['full_name'],$this->input->post('name'),$this->session->userdata('org_name'),$animal_image,$this->input->post('profile_story'),base_url().'animal-'.$last_id.'-'.$this->common_function->get_filtered_name($this->input->post('name')),date('Y'),$this->session->userdata('user_name')." ".$this->session->userdata('last_name'));
					
					$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
					//$to = $email_add;
					
					$subject = str_replace('##organization_name##',$this->session->userdata('org_name'),$email_body[0]['st_email_subject']);
					$message = $content;
					$category = $email_body[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($row['st_email']);
						
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($row['st_email']),$message);		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($row['st_email']),$message);		

					$send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_body[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$animal_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($animal_setting) && isset($animal_setting['flg_immediate_animal']) && $animal_setting['flg_immediate_animal'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $row['st_email'], $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					}
					
					}
				}
			//End of sending email
			
			//Sending facebook wall posts to users
			if($this->input->post('visibility') == 0) {	
				
				if($user) {
					try {
						$publishStream = $facebook->api("/me/feed", 'post', array(
							'message' => '',
							'link'    => base_url().'animal-'.$last_id.'-'.$this->common_function->get_filtered_name($this->input->post('name')),
							'picture' => ($animal_image=='no_photo_icon.png')?base_url().'assets/img/doobert-fb-logo.png':$this->config->item('upload_url').'animal_images/140x140/'.$animal_image,
							'name'    => 'Checkout this Doobert.com Animal',
							'description'=> $this->input->post('name').' - '.$this->input->post('animal_type_name')
							)
							
						);
					} catch (FacebookApiException $e) {
						print_r($d);
					}
				}
			}
			//End Sending posts to users
			
			$this->session->set_flashdata('message', 'Animal profile added successfully.');
			redirect(base_url().'org-animal');
		}
		
	}
	
	#=========================================================
	#	Function : get_animal_breed
	#	Purpose  : Get Animal breeds by id
	#=========================================================	
	
	public function get_animal_breed() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data['get_animal_breed']  = $this->common_model->get_animal_breed($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	#=========================================================
	#	Function : animals_in_my_organization
	#	Purpose  : Display all animals in the users organization
	#=========================================================	
	
	public function animals_in_my_organization($sort=false,$order=false,$limit=false) {
		$data = array();

		$organization_id = $this->session->userdata('org_id');		
		$animal_rescue_id = $this->rescue_animal_model->get_rescue_org_id($organization_id);
		if(!empty($animal_rescue_id)){
			$data['rescue_group_id'] = $animal_rescue_id[0]['in_rescue_group_id'];
			$data['shelter_group_id'] = $animal_rescue_id[0]['in_adopt_a_pet_id'];
			$data['shelter_api_key'] = $animal_rescue_id[0]['in_adopt_a_pet_key'];
		}else{
			$data['rescue_group_id'] = '';
			$data['shelter_group_id'] = '';
			$data['shelter_api_key'] = '';
		}	
		
		$this->session->unset_userdata('quick_call_from');
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
                
                if(!$sort)
                    $sort='in_animal_id';
		
		if(!$order)
                    $order = 'desc';
				
		
		 $verify_in_animal_id =  $this->uri->segment(3);
			
		 /** Added By Nirav ***/		
		  if(empty($verify_in_animal_id))
		  {
				 $this->session->unset_userdata('status');
				$this->session->unset_userdata('search_text');
		  }		
		
                
       if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0'; 
		
		
                $data['progress_status'] = $this->common_model->get_progress_status(); 
                
                if(isset($_POST['search_module'])){
                    $pstatus          =   $this->input->post('select_status');
                    $psearch_text     =   trim($this->input->post('module_search_text'));
                    
                    $session_data   = array(
                                                'status'        =>  $pstatus,
                                                'search_text'   =>  $psearch_text
                                            );
                    $this->session->set_userdata($session_data);
                }
                $status       =   $this->session->userdata('status');
                $search_text         =   $this->session->userdata('search_text');
        
		$config = array();
		
		$this->load->library('pagination');
		
		$config["base_url"] 		= base_url().'org_animal/animals_in_my_organization/'.$sort.'/'.$order;
		
		$config["per_page"]	 	= $this->config->item('records_per_page');
               // $config["per_page"]	 	= 3;
		//$config["uri_segment"] 		= $this->uri->segment(5);
                $config['cur_page'] 		= $limit;
                
                
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';

		$page = $limit;
		
		$data['get_animals'] = $this->organimal_model->get_all_animals_by_org($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'),$sort,$order,$status,$search_text);		

		//Getting total rows
		$config["total_rows"] = $data['get_animals']['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] = $this->pagination->create_links();
                
		$data["limit"]          =   $limit;
		$data["sort"]           =   $sort;
		$data["order"]          =   $order;
		$data['status']         =   $status;
		$data['search_text']    =   $search_text;
		
		// code for the csv upload  
		// by bhushan on 7-1-16
			if($this->input->post('upload_animal_p'))
			{
				//echo $this->input->post('upload_animal_p');exit; //use for testing
				$error_message = '';
				$leg_upload_data = $_FILES['profile_upload']['name'];
				$leg_upload_data_type = $_FILES['profile_upload']['type'];
			
				$config1['upload_path'] 		= $this->config->item('upload')."profileupload/";
				$config1['allowed_types'] 	= 'xls|xlsx|text/csv|csv';
				$config1['max_size']			= '1024';
				$config1['remove_spaces']  	= TRUE;
				$config1['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['profile_upload']['name']);
				$this->load->library('upload', $config1);
				$this->upload->initialize($config1);
				$this->upload->do_upload('profile_upload');
				$error_message  .= $this->upload->display_errors();
			
				$filename = $config1['file_name'];
				$extension = explode('.',$filename);
				$uploadfilename = $config1['file_name'];
				
				if($error_message!='')
				{
					$data['Err_Msg'] = "<p>".$error_message."</p>";
					
				}
			   if($error_message == '');
			   {
					// if file upload succefully 
					$organization_id	=	$this->session->userdata('org_id');	
					$file_in_dir_name = $this->config->item('upload').'profileupload/'.$uploadfilename;
					
					if(isset($extension[1]) && ($extension[1]=='xls' ||$extension[1]=='xlsx'))
					{
						set_include_path(get_include_path() . PATH_SEPARATOR . 'Classes/');
						/** PHPExcel_IOFactory */
						$this->load->library('PHPExcel');
						$inputFileName = $file_in_dir_name;
												
						try {
							$objPHPExcel = PHPExcel_IOFactory::load($inputFileName);
						} catch(Exception $e) {
							die('Error loading file "'.pathinfo($inputFileName,PATHINFO_BASENAME).'": '.$e->getMessage());
						}
						
						//Get worksheet dimensions
						$sheet = $objPHPExcel->getActiveSheet(); 
						$excel_data = $sheet->toArray(null,true,true,true);
						foreach($excel_data as $key=>$value)
						{
							if (!array_filter($value)) {
								unset($excel_data[$key]);	// all column values are empty then remove that row
							}
							
						}
						
						//echo "<pre>";print_r($data); exit;  //use for testing
						$sheetData = array_values($excel_data);
						//echo "<pre>";print_r($sheetData);
							//	exit;//use for testing
						$var=0;	
						for($m=4;$m<count($sheetData);$m++,$var++)
						{
							$e = $m+1;	
							if(trim($sheetData[$m]['A'])=='' || trim($sheetData[$m]['B'])=='' || trim($sheetData[$m]['C'])=='' ||  trim($sheetData[$m]['D']) == "" || trim($sheetData[$m]['E'])=='')
								{
									$error_message .=(trim($sheetData[$m]['A'])=='')?"Animal Name, ":"";
									$error_message .=(trim($sheetData[$m]['B'])=='')?"Animal Type, ":"";
									$error_message .=(trim($sheetData[$m]['C'])=='')?"Animal Gender, ":"";
									$error_message .=(trim($sheetData[$m]['D'])=='')?"Animal Breed, ":"";
									$error_message .=(trim($sheetData[$m]['E'])=='')?"Animal Neutered Spayed, ":"";
									$error_message .="Field(s) are blank in Row ".$e."<br>";
								}	
									
							 else
								{
								if(isset($sheetData[$m]['A']) && $sheetData[$m]['A'] != '' && strlen($sheetData[$m]['A']) > 100)
									{
										$error_message .= "The Animal Name Must be less Than or equal to 100 characters in Row ".$e."<br>";
									}
								if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '' && strlen($sheetData[$m]['B']) > 50 )
									{
										$error_message .= "The Animal type Must less than or equal to 50 characters  as per given in sheet <br>";	
									}
									if(isset($sheetData[$m]['C']) && $sheetData[$m]['C'] != '' && strlen($sheetData[$m]['C']) > 8)
									{
										$error_message .= "The Animal Gender Must be equal to 1 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['D']) && $sheetData[$m]['D'] != '' && strlen($sheetData[$m]['D']) > 255)
									{
										$error_message .= "The Animal Breed must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['E']) && $sheetData[$m]['E'] != '' && strlen($sheetData[$m]['E']) > 10 )
									{
										$error_message .= "The Animal Neutered Spayed Must be less than or equal to 10 characters as define in the sheet ,in the Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['F']) && $sheetData[$m]['F'] != '' && strlen($sheetData[$m]['F']) > 8)
									{
										$error_message .= "The Animal breed Birdsex must be less than or equal to 8 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									
									if(isset($sheetData[$m]['G']) && $sheetData[$m]['G'] != '' && strlen($sheetData[$m]['G']) > 10)
									{
										$error_message .= "The Animal Entering Age Must be less than or equal to 10 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['H']) && $sheetData[$m]['H'] != '' && strlen(trim($sheetData[$m]['H'])) > 10)
									{
										$error_message .= "The Animal Est. Age Must be less than or equal to 10 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['I']) && $sheetData[$m]['I'] != '' && strlen($sheetData[$m]['I']) > 8)
									{
										$error_message .= "The Animal Weight Must be less than or equal to 8 characters as define in the sheet , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['J']) && $sheetData[$m]['J'] != '' && strlen($sheetData[$m]['J']) > 255)
									{
										$error_message .= "The Animal Demeano Must be less than or equal to 255 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['K']) && $sheetData[$m]['K'] != '' && strlen($sheetData[$m]['K']) > 100)
									{
										$error_message .= "The Animal City Must be Less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['L']) && $sheetData[$m]['L'] != '' && strlen($sheetData[$m]['L']) > 3)
									{
										$error_message .= "The Animal State Must be Less than or equal to 2 characters in the Row ".$e."<br>";	
									}	
								
									
									/*if(isset($sheetData[$m]['M']) && $sheetData[$m]['M'] != '' && strlen($sheetData[$m]['M']) > 2)
									{
										$error_message .= "The Animal Onclock date ";	
									}*/
									
									if(isset($sheetData[$m]['N']) && $sheetData[$m]['N'] != '' && strlen($sheetData[$m]['N']) > 501)
									{
										$error_message .= "The Animal General comment Must be less than or equal to 500 characters in the row ".$e."<br>";	
									}	
									if(isset($sheetData[$m]['O']) && $sheetData[$m]['O'] != '' && strlen($sheetData[$m]['O']) > 501)
									{
										$error_message .= "The Animal Profile story Must be less than or equal to 500 characters in the Row ".$e."<br>";	
									}	
									
									if(isset($sheetData[$m]['P']) && $sheetData[$m]['P'] != '' && strlen($sheetData[$m]['P']) > 8)
									{
										$error_message .= "The Animal Rabies vaccine Must be Less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
								/*	if(isset($sheetData[$m]['Q']) && $sheetData[$m]['Q'] != '' && strlen($sheetData[$m]['Q']) > 500)									{
									    $error_message .= "The Animal Rabies vaccine date ";	
									}*/
									
									if(isset($sheetData[$m]['R']) && $sheetData[$m]['R'] != '' && strlen($sheetData[$m]['R']) > 8)
									{
										$error_message .= "The Animal Fecal test performed Must be less than or equal to 8 characters , in the Row ".$e."<br>";	
									}
									
									/*if(isset($sheetData[$m]['S']) && $sheetData[$m]['S'] != '' && strlen($sheetData[$m]['S']) > 100)
									{
										$error_message .= "The Animal Fecal test date";	
									}*/
									
									if(isset($sheetData[$m]['T']) && $sheetData[$m]['T'] != '' && strlen($sheetData[$m]['T']) > 8)
									{
										$error_message .= "The Animal Micro Chipped Must be less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
									if(isset($sheetData[$m]['U']) && $sheetData[$m]['U'] != '' && strlen($sheetData[$m]['U']) > 100)
									{
										$error_message .= "The Animal Micro Chipped Number and Company Must be less than or equal to 100 characters ,in the Row ".$e."<br>";
									}
									if(isset($sheetData[$m]['V']) && $sheetData[$m]['V'] != '' && strlen($sheetData[$m]['V']) > 8)
									{
										$error_message .= "The Animal  5-way DLHPP must be less than or equal to 7 characters ,in the Row".$e."<br>";
									}
									
									if(isset($sheetData[$m]['W']) && $sheetData[$m]['W'] != '' && strlen($sheetData[$m]['W']) > 8)
									{
										$error_message .= "The Animal Heartworm vaccine must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
																		
									/*if(isset($sheetData[$m]['X']) && $sheetData[$m]['X'] != '' && strlen($sheetData[$m]['X']) > 255)
									{
										$error_message .= "The Animal Heartworm vaccine date";	
									}*/
									
									if(isset($sheetData[$m]['Y']) && $sheetData[$m]['Y'] != '' && strlen($sheetData[$m]['Y']) > 100)
									{
										$error_message .= "The Animal Heartworm brand must less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['Z']) && $sheetData[$m]['Z'] != '' && strlen(trim($sheetData[$m]['Z'])) > 8)
									{
										$error_message .= "The Animal Bordatella vaccine must be less than or equal to 7 characters as per define in the sheet ,in Row ".$e."<br>";
									}
		
									/*if(isset($sheetData[$m]['AA']) && $sheetData[$m]['AA'] != '' && strlen($sheetData[$m]['AA']) > 501)
									{
										$error_message .= "The Animal Bordatella vaccine date ";	
									}*/

									if(isset($sheetData[$m]['AB']) && $sheetData[$m]['AB'] != '' && strlen($sheetData[$m]['AB']) > 100)
									{
										$error_message .= "The Animal Bordatella  brand must be less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AC']) && $sheetData[$m]['AC'] != '' && strlen($sheetData[$m]['AC']) > 255)
									{
										$error_message .="The Animal Medical Description must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									// transport tab data
									if(isset($sheetData[$m]['AD']) && $sheetData[$m]['AD'] != '' && strlen($sheetData[$m]['AD']) > 8)
									{
										$error_message .="The Animal Crates Well must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AE']) && $sheetData[$m]['AE'] != '' && strlen($sheetData[$m]['AE']) > 8)
									{
										$error_message .= "The Animal Barrier Aggressive must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AF']) && $sheetData[$m]['AF'] != '' && strlen($sheetData[$m]['AF']) > 7)
									{
										$error_message .= "The Animal  Health Cert or CVI must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
								
									/*if(isset($sheetData[$m]['AG']) && $sheetData[$m]['AG'] != '' && strlen($sheetData[$m]['AG']) > 7)
									{
									$error_message .= "The Animal Health Cert or CVI date";	
									}*/
								
									if(isset($sheetData[$m]['AH']) && $sheetData[$m]['AH'] != '' && strlen($sheetData[$m]['AH']) > 7)
									{
										$error_message .= "The Animal Flight Risk must be less than or equal to 7 characters , in the Row ".$e."<br>";	
									}
									// Location
									if(isset($sheetData[$m]['AI']) && $sheetData[$m]['AI'] != '' && strlen($sheetData[$m]['AI']) > 7)
									{
										$error_message .= "The Animal Current zip must be less than or equal to 7 characters in the Row".$e."<br>";	;	
									}
									
									if(isset($sheetData[$m]['AJ']) && $sheetData[$m]['AJ'] != '' && strlen($sheetData[$m]['AJ']) > 7)
									{
										$error_message .=  "The Animal Desired zip must be less than or equal to 7 characters in the Row ".$e."<br>";	
									}
									
									/*   end  new added */
									
								//for on the clock date
								$cdate=strtotime(trim($sheetData[$m]['M']));
								$onclock_date=NULL;
								if(trim($sheetData[$m]['M']) && $cdate !='')
								{
									$onclock_date = date('Y-m-d',strtotime(trim($sheetData[$m]['M'])));
								}
								//for on the Rabies vaccine date 
								$rdate = strtotime(trim($sheetData[$m]['Q']));
								$Rabies_vaccine_date=NULL;
								if(trim($sheetData[$m]['Q']) &&  $rdate != '')
								{
									$Rabies_vaccine_date = date('Y-m-d',strtotime(trim($sheetData[$m]['Q'])));
								}
								//for on the Fecal test date 
								$fdate = strtotime(trim($sheetData[$m]['S']));
								$Fecal_test_date=NULL;
								if(trim($sheetData[$m]['S']) && $fdate !='')
								{
									$Fecal_test_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['S'])));
								}
								//for on the Heartworm vaccine date
								$hdate = strtotime(trim($sheetData[$m]['X']));
								$Heartworm_vaccine_date=NULL;
 								if(trim($sheetData[$m]['X']) && $hdate != '')
								{
									$Heartworm_vaccine_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['X'])));
								}
								//for on the Bordatella vaccine date
								$bdate = strtotime(trim($sheetData[$m]['AA']));
								$Bordatella_vaccine_date=NULL;
 								if(trim($sheetData[$m]['AA']) && $bdate !='')
								{
									$Bordatella_vaccine_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['AA'])));
								}
								//for on the CVI Date
								$cvidate = strtotime(trim($sheetData[$m]['AG']));
								$CvDate=NULL;
 								if(trim($sheetData[$m]['AG']) && $cvidate !='')
								{
									$CvDate  = date('Y-m-d',strtotime(trim($sheetData[$m]['AG'])));
								}
								
								// chk Animal_type_present
								$animal_type_id = $this->organimal_model->chk_animaltype_present(trim($sheetData[$m]['B'])); 	
								if(empty($animal_type_id[0]))
								{
									$error_message .= "The Animal type not as per define in the sheet";	
								} else {
															
								//for Multipal Data stored field 
								
								$animal_breed_id =array();
								if(trim($sheetData[$m]['D']))
								{
									$animal_breed = explode(',',trim($sheetData[$m]['D']));
									for($i=0;$i<count($animal_breed);$i++)
									{
										$animal_breed_id[$i]=$this->organimal_model->chk_animalbreed(trim($animal_breed[$i]),$animal_type_id[0]['in_animal_type_id']); 
									}
								}
								$pri=''; $sec=''; $ters='';
																					
								if(isset($animal_breed_id[0][0]['in_animal_breed_id']))
									$pri = $animal_breed_id[0][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[1][0]['in_animal_breed_id']))
									$sec = 	$animal_breed_id[1][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[2][0]['in_animal_breed_id']))	
									$ters = $animal_breed_id[2][0]['in_animal_breed_id'];														
								if($pri=='')
								{
									$error_message .= "The Animal primary breed is incorrect in the Row ". $e."<br>";
								}
								
								//animal age id
								$animal_age_id = $this->organimal_model->chk_animalage(trim($sheetData[$m]['G']));
									
								//animal demeanor
								$animal_demeanor = $this->organimal_model->chk_demeanor(trim($sheetData[$m]['J']) ,$animal_type_id[0]['in_animal_type_id']);
								
								}//else 
								
								// for the yes / No
								if(trim($sheetData[$m]['C']) =='Male'){$st_gender='M';}else if(trim($sheetData[$m]['C']) =='Female'){$st_gender='F';} else {$st_gender='U';}  
								if(trim($sheetData[$m]['E']) =='Spayed'){$in_neutered_id=2;}else if(trim($sheetData[$m]['E']) =='Neutered'){$in_neutered_id=1;} else {$in_neutered_id=3;}
								if(trim($sheetData[$m]['F']) =='Yes'){$st_birdsex='Y';}else if(trim($sheetData[$m]['F']) =='No'){$st_birdsex='N';} else { $st_birdsex='U';} 
								if(trim($sheetData[$m]['P']) =='Yes'){$st_rabies_vaccine='Y';}else if(trim($sheetData[$m]['P']) =='No'){$st_rabies_vaccine='N';} else { $st_rabies_vaccine='U';}						
								if(trim($sheetData[$m]['R']) =='Yes'){$st_fecal_test='Y';}else if(trim($sheetData[$m]['R']) =='No'){$st_fecal_test='N';} else { $st_fecal_test='U';}
								if(trim($sheetData[$m]['T']) =='Yes'){$st_micro_chipped='Y';}else if(trim($sheetData[$m]['T']) =='No'){$st_micro_chipped='N';} else { $st_micro_chipped='U';}
								if(trim($sheetData[$m]['W']) =='Yes'){$st_heartworm_vaccine='Y';}else if(trim($sheetData[$m]['W']) =='No'){$st_heartworm_vaccine='N';} else { $st_heartworm_vaccine='U';}	
							if(trim($sheetData[$m]['Z']) =='Yes'){$st_bordatella_vaccine='Y';}else if(trim($sheetData[$m]['Z']) =='No'){$st_bordatella_vaccine='N';} else { $st_bordatella_vaccine='U';}	
								if(trim($sheetData[$m]['AD']) =='Yes'){$st_crates_well='Y';}else if(trim($sheetData[$m]['AD']) =='No'){$st_crates_well='N';} else { $st_crates_well='U';}		
								if(trim($sheetData[$m]['AE']) =='Yes'){$st_barrier_aggressive='Y';}else if(trim($sheetData[$m]['AE']) =='No'){$st_barrier_aggressive='N';} else { $st_barrier_aggressive='U';}
								if(trim($sheetData[$m]['AF']) =='Yes'){$st_cvi='Y';}else if(trim($sheetData[$m]['AF']) =='No'){$st_cvi='N';} else { $st_cvi='U';}														
								if(trim($sheetData[$m]['AH']) =='Yes'){$st_flight_risk='Y';}else if(trim($sheetData[$m]['AH']) =='No'){$st_flight_risk='N';} else { $st_flight_risk='U';}
								
							$profile_array[] = array(
											'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$sheetData[$m]['A'],
											'st_gender'				=>	$st_gender,
											'st_birdsex'            => 	$st_birdsex,
											'in_animal_type_id'		=>	$animal_type_id[0]['in_animal_type_id'],
											
											'in_primary_breed_id'	=> $pri,
											'in_secondry_breed_id'	=> $sec,	 
											'in_tertiary_breed_id'	=> $ters,
											'in_age'				=>	$animal_age_id,  //GHI
											'in_enter_age'			=>  $sheetData[$m]['H'],
											'in_weight'				=>  ($sheetData[$m]['I']=='Unknown')?'U':$sheetData[$m]['I'],
											'in_demeanor_id'		=>	($animal_demeanor[0]['in_demeanor_id'] =='')?5:$animal_demeanor[0]['in_demeanor_id'],
																				
											'st_city'				=>	$sheetData[$m]['K'],
											'st_state'				=>	$sheetData[$m]['L'],
											'st_on_clock'			=>	($sheetData[$m]['M'] =='')?'N':'Y',
											'dt_date'				=>  ($onclock_date=='')?NULL:$onclock_date,
											
											'st_general_comment'	=>	$sheetData[$m]['N'],
											'st_profile_story'		=>	$sheetData[$m]['O'],
											
											'in_neutered_id'		=>	$in_neutered_id,
											
											'st_rabies_vaccine'		=>	$st_rabies_vaccine,
											'dt_rabiesvac_date'		=>($Rabies_vaccine_date=='')?NULL:$Rabies_vaccine_date,

											'st_fecal_test'			=>  $st_fecal_test,
											'dt_fecal_test_date'	=> ($Fecal_test_date=='')?NULL:$Fecal_test_date,
											'st_micro_chipped'		=> $st_micro_chipped,
											'st_micro_chip_comp'	=> $sheetData[$m]['U'],
											'st_dlhhp'				=> ($sheetData[$m]['V'] =='Unknown')?'U':$sheetData[$m]['V'] ,
											'st_heartworm_vaccine'		=>	$st_heartworm_vaccine,
											'dt_heartworm_vaccine_date' =>($Heartworm_vaccine_date=='')?NULL:$Heartworm_vaccine_date,
											'st_heartworm_brand'		=> $sheetData[$m]['Y'],
											
											'st_bordatella_vaccine'		=> $st_bordatella_vaccine,
											'dt_bordatella_vaccine_date'=> ($Bordatella_vaccine_date=='')?NULL:$Bordatella_vaccine_date, 
											'st_bordatella_brand'  		=> $sheetData[$m]['AB'],
											
											'st_medical_desc'		=>	$sheetData[$m]['AC'],
											
											'st_crates_well'		=>	$st_crates_well,
											'st_barrier_aggressive'	=>	$st_barrier_aggressive,
											'st_cvi' 				=>  $st_cvi,
											'dt_cvi' 				=> ($CvDate =='')?NULL:$CvDate,
											'st_declawed'			=>'U',
											'st_flight_risk'		=>	$st_flight_risk,
																					
											'st_current_zip'		=>	$sheetData[$m]['AI'],
											'st_desired_zip'		=>	$sheetData[$m]['AJ'],
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0	
										);	
							}//else
						
						}
													
					}//if Extantion
					else
					{
						$a=0;
							$error_message = "";
							if (($handle = fopen($file_in_dir_name, "r")) !== FALSE){
									//echo "<br> in if fopen";
								$error_array = array();	
								while (($data_csv = fgetcsv($handle, 1000, ",")) !== FALSE)
								{
									//echo "<pre>";print_r($data_csv);
									if($a>3)
										{
										$error_line = $a+1;
										$e=$a;
								if(trim($data_csv[0]!=''))
									{
										
									// hear all deleted data. 
								if(trim($data_csv[0])=='' || trim($data_csv[1])=='' || trim($data_csv[2])=='' ||  trim($data_csv[3])=='' || trim($data_csv[4])=='')
								{
									$error_message .=(trim($data_csv[0])=='')?"Animal Name, ":"";
									$error_message .=(trim($data_csv[1])=='')?"Animal type, ":"";
									$error_message .=(trim($data_csv[2])=='')?"Animal Gender, ":"";
									$error_message .=(trim($data_csv[3])=='')?"Animal Breed, ":"";
									$error_message .=(trim($data_csv[4])=='')?"Animal Neutered Spayed, ":"";
									$error_message .="Field(s) are blank in Row ".$a."<br>";
								}
								else {
									
									if(isset($data_csv[0]) && $data_csv[0] != '' && strlen($data_csv[0]) > 100)
									{
										$error_message .= "The Animal Name Must be less Than or equal to 100 characters in Row ".$e."<br>";
									}
								if(isset($data_csv[1]) && $data_csv[1] != '' && strlen($data_csv[1]) > 50 )
									{
										$error_message .= "The Animal type Must less than equal to 50 characters  as per given in sheet <br>";	
									}
								if(isset($data_csv[2]) && $data_csv[2] != '' && strlen($data_csv[2]) > 8)
									{
										$error_message .= "The Animal Gender must be less than or equal to 8 characters in the Row ".$e."<br>";	
									}
									
								if(isset($data_csv[3]) && $data_csv[3] != '' && strlen($data_csv[3]) > 255)
									{
										$error_message .= "The Animal Breed must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[4]) && $data_csv[4]!= '' && strlen($data_csv[4]) > 10 )
									{
										$error_message .= "The Animal Neutered Spayed Must be less than or equal to 10 characters as define in the sheet ,in the Row ".$e."<br>";
									}
									
									if(isset($data_csv[5]) && $data_csv[5] != '' && strlen($data_csv[5]) > 8)
									{
										$error_message .= "The Animal breed Birdsex must be less than or equal to 8 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									
									if(isset($data_csv[6]) && $data_csv[6] != '' && strlen($data_csv[6]) > 10)
									{
										$error_message .= "The Animal Entering Age Must be less than or equal to 10 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[7]) && $data_csv[7] != '' && strlen(trim($data_csv[7])) > 10)
									{
										$error_message .= "The Animal Est. Age Must be less than or equal to 10 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[8]) && $data_csv[8] != '' && strlen($data_csv[8]) > 8)
									{
										$error_message .= "The Animal Weight Must be less than or equal to 8 characters as define in the sheet , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[9]) && $data_csv[9] != '' && strlen($data_csv[9]) > 255)
									{
										$error_message .= "The Animal Demeano Must be less than or equal to 255 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[10]) && $data_csv[10] != '' && strlen($data_csv[10]) > 100)
									{
										$error_message .= "The Animal City Must be Less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[11]) && $data_csv[11] != '' && strlen($data_csv[11]) > 3)
									{
										$error_message .= "The Animal State Must be Less than or equal to 2 characters in the Row ".$e."<br>";	
									}	
								
									/*if(isset($data_csv[12]) && $data_csv[12] != '' && strlen($data_csv[12]) > 2)
									{
										$error_message .= "The Animal Onclock date ";	
									}*/
									
									if(isset($data_csv[13]) && $data_csv[13] != '' && strlen($data_csv[13]) > 501)
									{
										$error_message .= "The Animal General comment Must be less than or equal to 500 characters in the row ".$e."<br>";	
									}	
									if(isset($data_csv[14]) && $data_csv[14] != '' && strlen($data_csv[14]) > 501)
									{
										$error_message .= "The Animal Profile story Must be less than or equal to 500 characters in the Row ".$e."<br>";	
									}	
									
									if(isset($data_csv[15]) && $data_csv[15] != '' && strlen($data_csv[15]) > 8)
									{
										$error_message .= "The Animal Rabies vaccine Must be Less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
								/*	if(isset($data_csv[16]) && $data_csv[16] != '' && strlen($data_csv[16]) > 500)									{
									    $error_message .= "The Animal Rabies vaccine date ";	
									}*/
									
									if(isset($data_csv[17]) && $data_csv[17] != '' && strlen($data_csv[17]) > 8)
									{
										$error_message .= "The Animal Fecal test performed Must be less than or equal to 8 characters , in the Row ".$e."<br>";	
									}
									
									/*if(isset($data_csv[18]) && $data_csv[18] != '' && strlen($data_csv[18]) > 100)
									{
										$error_message .= "The Animal Fecal test date";	
									}*/
									
									if(isset($data_csv[19]) && $data_csv[19] != '' && strlen($data_csv[19]) > 8)
									{
										$error_message .= "The Animal Micro Chipped Must be less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
									if(isset($data_csv[20]) && $data_csv[20] != '' && strlen($data_csv[20]) > 100)
									{
										$error_message .= "The Animal Micro Chipped Number and Company Must be less than or equal to 100 characters ,in the Row ".$e."<br>";
									}
									if(isset($data_csv[21]) && $data_csv[21] != '' && strlen($data_csv[21]) > 8)
									{
										$error_message .= "The Animal  5-way DLHPP must be less than or equal to 7 characters ,in the Row".$e."<br>";
									}
									
									if(isset($data_csv[22]) && $data_csv[22] != '' && strlen($data_csv[22]) > 8)
									{
										$error_message .= "The Animal Heartworm vaccine must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
																		
									/*if(isset($data_csv[23]) && $data_csv[23] != '' && strlen($data_csv[23]) > 255)
									{
										$error_message .= "The Animal Heartworm vaccine date";	
									}*/
									
									if(isset($data_csv[24]) && $data_csv[24] != '' && strlen($data_csv[24]) > 100)
									{
										$error_message .= "The Animal Heartworm brand must less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[25]) && $data_csv[25] != '' && strlen(trim($data_csv[25])) > 8)
									{
										$error_message .= "The Animal Bordatella vaccine must be less than or equal to 7 characters as per define in the sheet ,in Row ".$e."<br>";
									}
		
									/*if(isset($data_csv[26]) && $data_csv[26] != '' && strlen($data_csv[26]) > 501)
									{
										$error_message .= "The Animal Bordatella vaccine date ";	
									}*/

									if(isset($data_csv[27]) && $data_csv[27] != '' && strlen($data_csv[27]) > 100)
									{
										$error_message .= "The Animal Bordatella  brand must be less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[28]) && $data_csv[28] != '' && strlen($data_csv[28]) > 255)
									{
										$error_message .="The Animal Medical Description must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									// transport tab data
									if(isset($data_csv[29]) && $data_csv[29] != '' && strlen($data_csv[29]) > 8)
									{
										$error_message .="The Animal Crates Well must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
									
									if(isset($data_csv[30]) && $data_csv[30] != '' && strlen($data_csv[30]) > 8)
									{
										$error_message .= "The Animal Barrier Aggressive must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[31]) && $data_csv[31] != '' && strlen($data_csv[31]) > 7)
									{
										$error_message .= "The Animal  Health Cert or CVI must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
								
									/*if(isset($data_csv[32]) && $data_csv[32] != '' && strlen($data_csv[32]) > 7)
									{
									$error_message .= "The Animal Health Cert or CVI date";	
									}*/
								
									if(isset($data_csv[33]) && $data_csv[33] != '' && strlen($data_csv[33]) > 7)
									{
										$error_message .= "The Animal Flight Risk must be less than or equal to 7 characters , in the Row ".$e."<br>";	
									}
									// Location
									if(isset($data_csv[34]) && $data_csv[34] != '' && strlen($data_csv[34]) > 7)
									{
										$error_message .= "The Animal Current zip must be less than or equal to 7 characters in the Row".$e."<br>";	;	
									}
									
									if(isset($data_csv[35]) && $data_csv[35] != '' && strlen($data_csv[35]) > 7)
									{
										$error_message .=  "The Animal Desired zip must be less than or equal to 7 characters in the Row ".$e."<br>";	
									}				
								
								//for on the clock date
								$cdate=strtotime(trim($data_csv[12]));
								$onclock_date=NULL;
								if(trim($data_csv[12]) && $cdate !='')
								{
									$onclock_date = date('Y-m-d',strtotime(trim($data_csv[12])));
								}
								//for on the Rabies vaccine date 
								$rdate = strtotime(trim($data_csv[16]));
								$Rabies_vaccine_date=NULL;
								if(trim($data_csv[16]) &&  $rdate != '')
								{
									$Rabies_vaccine_date = date('Y-m-d',strtotime(trim($data_csv[16])));
								}
								//for on the Fecal test date 
								$fdate = strtotime(trim($data_csv[18]));
								$Fecal_test_date=NULL;
								if(trim($data_csv[18]) && $fdate !='')
								{
									$Fecal_test_date  = date('Y-m-d',strtotime(trim($data_csv[18])));
								}
								//for on the Heartworm vaccine date
								$hdate = strtotime(trim($data_csv[23]));
								$Heartworm_vaccine_date=NULL;
 								if(trim($data_csv[23]) && $hdate != '')
								{
									$Heartworm_vaccine_date  = date('Y-m-d',strtotime(trim($data_csv[23])));
								}
								//for on the Bordatella vaccine date
								$bdate = strtotime(trim($data_csv[26]));
								$Bordatella_vaccine_date=NULL;
 								if(trim($data_csv[26]) && $bdate !='')
								{
									$Bordatella_vaccine_date  = date('Y-m-d',strtotime(trim($data_csv[26])));
								}
								//for on the CVI Date
								$cvidate = strtotime(trim($data_csv[32]));
								$CvDate=NULL;
 								if(trim($data_csv[32]) && $cvidate !='')
								{
									$CvDate  = date('Y-m-d',strtotime(trim($data_csv[32])));
								}
								
								// chk Animal_type_present
								$animal_type_id = $this->organimal_model->chk_animaltype_present(trim($data_csv[1])); 	
								if(empty($animal_type_id[0]))
								{
									$error_message .= "The Animal type not as per define in the sheet";	
								} else {
															
								$animal_breed_id=array();
								//for Multipal Data stored field 
								if(trim($data_csv[3]))
								{
									$pri=NULL; $sec=NULL; $ters=NULL;
									$animal_breed = explode(',',trim($data_csv[3]));
									for($i=0;$i<count($animal_breed);$i++)
									{
										$animal_breed_id[$i]=$this->organimal_model->chk_animalbreed($animal_breed[$i],$animal_type_id[0]['in_animal_type_id']); 
																			}
								}
								$pri=NULL; $sec=NULL; $ters=NULL;														
								if(isset($animal_breed_id[0][0]['in_animal_breed_id']))
									$pri = $animal_breed_id[0][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[1][0]['in_animal_breed_id']))
									$sec = 	$animal_breed_id[1][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[2][0]['in_animal_breed_id']))	
									$ters = $animal_breed_id[2][0]['in_animal_breed_id'];														
								if($pri=='')
								{
									$error_message .= "The Animal primary breed is incorrect in the Row ". $e."<br>";
								}
								
														
								//animal age id
								$animal_age_id = $this->organimal_model->chk_animalage(trim($data_csv[6]));
									
								//animal demeanor
								$animal_demeanor = $this->organimal_model->chk_demeanor(trim($data_csv[9]) ,$animal_type_id[0]['in_animal_type_id']);
								
								}//else 
								
								// for the yes / No
								if(trim($data_csv[2]) =='Male'){$st_gender='M';}else if(trim($data_csv[2]) =='Female'){$st_gender='F';} else {$st_gender='U';}  
								if(trim($data_csv[4]) =='Spayed'){$in_neutered_id=2;}else if(trim($data_csv[4]) =='Neutered'){$in_neutered_id=1;} else {$in_neutered_id=3;}
								if(trim($data_csv[5]) =='Yes'){$st_birdsex='Y';}else if(trim($data_csv[5]) =='No'){$st_birdsex='N';} else { $st_birdsex='U';} 
								if(trim($data_csv[15]) =='Yes'){$st_rabies_vaccine='Y';}else if(trim($data_csv[15]) =='No'){$st_rabies_vaccine='N';} else { $st_rabies_vaccine='U';}						
								if(trim($data_csv[17]) =='Yes'){$st_fecal_test='Y';}else if(trim($data_csv[17]) =='No'){$st_fecal_test='N';} else { $st_fecal_test='U';}
								if(trim($data_csv[19]) =='Yes'){$st_micro_chipped='Y';}else if(trim($data_csv[19]) =='No'){$st_micro_chipped='N';} else { $st_micro_chipped='U';}
								if(trim($data_csv[22]) =='Yes'){$st_heartworm_vaccine='Y';}else if(trim($data_csv[22]) =='No'){$st_heartworm_vaccine='N';} else { $st_heartworm_vaccine='U';}	
								if(trim($data_csv[25]) =='Yes'){$st_bordatella_vaccine='Y';}else if(trim($data_csv[25]) =='No'){$st_bordatella_vaccine='N';} else { $st_bordatella_vaccine='U';}	
								if(trim($data_csv[29]) =='Yes'){$st_crates_well='Y';}else if(trim($data_csv[29]) =='No'){$st_crates_well='N';} else { $st_crates_well='U';}		
								if(trim($data_csv[30]) =='Yes'){$st_barrier_aggressive='Y';}else if(trim($data_csv[30]) =='No'){$st_barrier_aggressive='N';} else { $st_barrier_aggressive='U';}
								if(trim($data_csv[31]) =='Yes'){$st_cvi='Y';}else if(trim($data_csv[31]) =='No'){$st_cvi='N';} else { $st_cvi='U';}														
								if(trim($data_csv[33]) =='Yes'){$st_flight_risk='Y';}else if(trim($data_csv[33]) =='No'){$st_flight_risk='N';} else { $st_flight_risk='U';}
								
								}//else 
									
								
							$profile_array[] = array(
											'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$data_csv[0],
											'st_gender'				=>	$st_gender,
											'st_birdsex'            => 	$st_birdsex,
											'in_animal_type_id'		=>	$animal_type_id[0]['in_animal_type_id'],
											
											'in_primary_breed_id'	=> $pri,
											'in_secondry_breed_id'	=> $sec,	 
											'in_tertiary_breed_id'	=> $ters,
											'in_age'				=>	$animal_age_id,  //GHI
											'in_enter_age'			=>  $data_csv[7],
											'in_weight'				=>  ($data_csv[8]=='Unknown')?'U':$data_csv[8],
											'in_demeanor_id'		=>	($animal_demeanor[0]['in_demeanor_id'] =='')?5:$animal_demeanor[0]['in_demeanor_id'],
																				
											'st_city'				=>	$data_csv[10],
											'st_state'				=>	$data_csv[11],
											'st_on_clock'			=>	($data_csv[12] =='')?'N':'Y',
											'dt_date'				=>  ($onclock_date=='')?NULL:$onclock_date,
											
											'st_general_comment'	=>	$data_csv[13],
											'st_profile_story'		=>	$data_csv[14],
											
											'in_neutered_id'		=>	$in_neutered_id,
											
											'st_rabies_vaccine'		=>	$st_rabies_vaccine,
											'dt_rabiesvac_date'		=>($Rabies_vaccine_date=='')?NULL:$Rabies_vaccine_date,

											'st_fecal_test'			=>  $st_fecal_test,
											'dt_fecal_test_date'	=> ($Fecal_test_date=='')?NULL:$Fecal_test_date,
											'st_micro_chipped'		=> $st_micro_chipped,
											'st_micro_chip_comp'	=> $data_csv[20],
											'st_dlhhp'				=> ($data_csv[21] =='Unknown')?'U':$data_csv[21],
											'st_heartworm_vaccine'		=>	$st_heartworm_vaccine,
											'dt_heartworm_vaccine_date' =>($Heartworm_vaccine_date=='')?NULL:$Heartworm_vaccine_date,
											'st_heartworm_brand'		=> $data_csv[24],
											
											'st_bordatella_vaccine'		=> $st_bordatella_vaccine,
											'dt_bordatella_vaccine_date'=> ($Bordatella_vaccine_date=='')?NULL:$Bordatella_vaccine_date, 
											'st_bordatella_brand'  		=> $data_csv[27],
											
											'st_medical_desc'		=>	$data_csv[28],
											
											'st_crates_well'		=>	$st_crates_well,
											'st_barrier_aggressive'	=>	$st_barrier_aggressive,
											'st_cvi' 				=>  $st_cvi,
											'dt_cvi' 				=> ($CvDate =='')?NULL:$CvDate,
											'st_declawed'			=>'U',	
											'st_flight_risk'		=>	$st_flight_risk,
																					
											'st_current_zip'		=>	$data_csv[34],
											'st_desired_zip'		=>	$data_csv[35],
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0	
										);	

								}//if trim
						
							   }// if$a>3
							   		$a++;
							}//while
									
									
							}//if
						}//else 
							
					@unlink($this->config->item('upload')."profileupload/".$uploadfilename);
					if(!isset($profile_array) || empty($profile_array))
					{
						if($error_message=='')
						{
							$error_message .= "Empty file is uploaded Or File Format is incorrect.";
						}
					}
										 
			   }//if error msg 
			// }  
			 
				/*echo "<pre>";  print_r($profile_array);
				exit;*/
				if($error_message != "")
				{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";					
					if(!empty($data['Err_Msg']))
					{
						$this->session->set_flashdata('profile_upload_error', $data['Err_Msg']);
					}
					 				
					redirect($this->config->item('base_url')."org_animal/animals_in_my_organization/");
				}	
							
				if(isset($profile_array) && !empty($profile_array))
				{
					for($q=0;$q<count($profile_array);$q++)
					{
						$profile_id	= $this->organimal_model->add_animal_profile($profile_array[$q]);
						$last_id = $this->db->insert_id();//get last inserted id
					
					$arraygen=array('gender','pbreed','sbreed','tbreed','age','weight','demeanor','cstatus','nstatus','city','state','clock','where','quarantine','shelter_time','shelter_contact','comments','files','photo_video','pstory','cost','social','birdsex');	
					$general = serialize($arraygen);
					
					$arraymed = array('neutered','rvaccine','hvaccine','fecaltest','bvaccine','microchipped','surgery','dlhhp','medical_issue','medical_comments');					
					$medical = serialize($arraymed);
					
					$arraytran = array('crates','frisk','baggresive','recent_vaccine','cvi','current_zip','desired_zip','available_transfer','tr_date','travel','tr_comment');
					$transport = serialize($arraytran);
					
					$arrayfoster = array ('other','same','trained','kids','declawed','fh_comment');
					$foster = serialize($arrayfoster);
					$date = date('Y-m-d H:i:s');
					// for check box checked.
					$animalchkset    = array('in_animal_id'			=> $last_id,
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> $general,
											'st_medical_setting'	=> $medical,
											'st_transport_setting'	=> $transport,
											'st_foster_home_setting'=> $foster,
											'dt_created'			=> $date,
											'dt_modified'			=> $date
											);
					 $this->organimal_model->add_animal_setting($animalchkset);	
										
					}
					$this->session->set_flashdata('profile_upload_success', 'Animal profiles have been uploaded successfully.');
					redirect($this->config->item('base_url')."org_animal/animals_in_my_organization/");
				}
				
			}//if post
			
		$signup_video		 =	$this->common_model->get_signup_demo_video();
		
		//echo '<pre>'; print_r($signup_video);die;
		foreach($signup_video as $val){				
				$arr_v	=	explode('v=',$val['st_url']);
				$data['signup_video'][$val['id_demo_videos']]	=	$arr_v[1];
		}
                
		$this->load->view('animals-in-my-organization',$data);
	}
	
	#=========================================================
	#	Function : animal_profile_details
	#	Purpose  : Display selected animal profile
	#=========================================================	
	public function animal_profile_details($id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$data['user_permission'] = $this->common_model->get_user_permission();
		
		//echo "<pre>";print_r($data['user_permission']);die;
		
		$data['animal_id'] = $id;
		
		
		$this->generate_fb_animal_image($id);
		
		//Getting animal profile details
		$data['animal_profile_details'] = $this->organimal_model->animal_profile_details($id);
		
		$data['shelter_contact'] = $this->organimal_model->get_animal_shelter_contact($id);
		
		//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
		$primary_breed 	= $data['animal_profile_details']['in_primary_breed_id'];
		
		if($primary_breed){
		$primary_breed_data = $this->common_model->get_animal_breed_name($primary_breed);
		if(!empty($primary_breed_data))
		$data['primary_breed'] 	= $primary_breed_data[0]['st_animal_breed_name'];
		//print_r($data['primary_breed']); exit;
		//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 ends
		}
		$data['check_animal_exist'] = $this->organimal_model->check_animal_exist($id);
		
		$data['check_animal_exist_campaign'] = $this->organimal_model->check_animal_exist_campaign($id,$this->session->userdata('org_id'));
		//echo "<pre>";print_r($data['check_animal_exist_campaign']);die;
		
		$data['animal_files'] = $this->organimal_model->get_animal_files($id);
		
		$data['progress_status'] = $this->common_model->get_progress_status();
		
		$data['animal_transfer_request'] = $this->organimal_model->get_animal_transfer_request($id);
		
		if(!empty($data['animal_profile_details']) && $data['animal_profile_details']['in_organization_id'] == $this->session->userdata('org_id')) {
			
			//Getting animal breeds name
			/*$breed_array = array($data['animal_profile_details']['in_secondry_breed_id'],$data['animal_profile_details']['in_tertiary_breed_id']);
			
			$data['other_breeds'] = $this->common_model->get_animal_breed_name($breed_array);
			
			$breeds = array();
			foreach($data['other_breeds'] as $row) {
				$breeds[] = $row['st_animal_breed_name'];
			}
			$data['animal_other_breeds'] = implode(', ',$breeds);*/
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$secondary_breed 	= $data['animal_profile_details']['in_secondry_breed_id'];
			
			$animal_secondary_breed ='';
			if(!empty($secondary_breed))
			{
			$secondary_breed_data = $this->common_model->get_animal_breed_name($secondary_breed);
			$animal_secondary_breed 	= (isset($secondary_breed_data[0]['st_animal_breed_name']) && $secondary_breed_data[0]['st_animal_breed_name'] != '') ? $secondary_breed_data[0]['st_animal_breed_name'] : '';
			}
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$tertiary_breed 	= $data['animal_profile_details']['in_tertiary_breed_id'];
			
			$animal_tertiary_breed ='';
			if(!empty($tertiary_breed)){
			$tertiary_breed_data = $this->common_model->get_animal_breed_name($tertiary_breed);
			
			$animal_tertiary_breed 	= (isset($tertiary_breed_data[0]['st_animal_breed_name']) && $tertiary_breed_data[0]['st_animal_breed_name'] != '') ? $tertiary_breed_data[0]['st_animal_breed_name'] : '';
			}
			
			$data['animal_other_breeds']='';
			if((isset($animal_secondary_breed) && $animal_secondary_breed != '') && (isset($animal_tertiary_breed) && $animal_tertiary_breed != ''))
			{
				$data['animal_other_breeds'] = $animal_secondary_breed . ', '. $animal_tertiary_breed;
			}
			elseif(!isset($animal_tertiary_breed) || $animal_tertiary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_secondary_breed;
			}
			elseif(!isset($animal_secondary_breed) || $animal_secondary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_tertiary_breed;
			}
			
			
			
			
			//Getting cost details
			$data['cost_to_org'] = $this->organimal_model->cost_to_org($id);
			
			//Getting animal photos & videos
			$data['animal_images'] = $this->organimal_model->get_animal_photos($id);
			
			$data['org_details'] = $this->organimal_model->get_org_details($data['animal_profile_details']['in_organization_id']);
			
			if(empty($data['org_details'])) {
				redirect(base_url().'my-profile');
			}
			//echo "<pre>";print_r($data['org_details']);die;
			
			//added by ghanshyam on 10_Nov_2014 starts
			$this->load->model('organization_privacy_setting_model');	
			$data['organization_privacy_setting_details'] 	= $this->organization_privacy_setting_model->get_organization_privacy_setting_by_org_id($data['animal_profile_details']['in_organization_id']);
			//added by ghanshyam on 10_Nov_2014 ends
			
			$this->load->view('animal-profile',$data);
		} else {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
	}
	
	public function cancel_transfer_request()
	{
		$transfer_aid = $this->input->post('transfer_aid');
		
		$data['request_data'] = array(	'dt_modified'			=>	date('Y-m-d H:i:s'),
										'in_deleted'			=>	'1'
									);
		
		$update = $this->organimal_model->update_request($data['request_data'],$transfer_aid);
		$this->session->set_flashdata('delete_transfer_success', 'Animal transfer request deleted successfully.');
		echo json_encode(1);
		
	}
	#=========================================================
	#	Function : edit_animal_profile
	#	Purpose  : Editing animal profile
	#=========================================================	
	
	public function edit_animal_profile($id='') {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
	  $owner_id = $this->common_function->get_org_owner_id($this->session->userdata('userid'),$this->session->userdata('org_id'));
	  $user_permission = $this->common_function->get_permission($this->session->userdata('userid'),$this->session->userdata('org_id'));
	  $make_array_user = unserialize($user_permission);
	  if($owner_id != $this->session->userdata('userid')) { 
			if(isset($make_array_user['profile_manager']) && in_array('pr_manager_ed',$make_array_user['profile_manager']) == true) { 
				$check_per_flag = '1';
			} else {
				$check_per_flag = '0';
			}
		}
		
		if($check_per_flag == '0') {
		redirect(base_url().'org_animal/animals_in_my_organization');
		} 
              
		
		$data = array();
		$usa_states=array();
		$canada_states=array();
		$usa_states =  array_keys($this->common_function->state_list);		             // added by sadiq on 5-1-15      
		$canada_states =  array_keys($this->common_function->canadian_state_list);        // added by sadiq on 5-1-15      
		
		$form_field	=	array(
							  'pick_country'	=> "US",
							  'drop_country'	=> "US",
							 );
		foreach($form_field as $key => $value)	
		{	
			$data['org_trasport'][$key] = $value;	
		}					
	
		if($id != '') {
			$data['animal_id'] = $id;
			$data['edit_animal'] = $this->organimal_model->animal_profile_details($id);
		} else {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
		
		//echo '<pre>'; print_r($data['edit_animal']);die;
		
		//$data['social_links']	=	$this->organimal_model->get_social_pages($id);
				
		if($this->input->post('frm_action') == 'edit_animal') {
		
			$req_fields = array(	array('field'   => 'name',				'label'  => 'Name',				'rules' => 'required|trim'),
									array('field'   => 'gender', 			'label'  => 'Gender', 			'rules' => 'required|trim'),
									array('field'   => 'animal_type', 		'label'  => 'Animal Type', 		'rules' => 'required|trim'),
									array('field'   => 'animal_breed',		'label'  => 'Animal breed',		'rules' => 'required|trim'),
									//array('field'   => 'age', 				'label'  => 'Age', 				'rules' => 'required|trim'),
									//array('field'   => 'demeanor',			'label'  => 'Demeanor',			'rules' => 'required|trim'),
									array('field'   => 'neutered_spayed', 	'label'  => 'Neutered/Spayed', 	'rules' => 'required|trim'),
									array('field'   => 'visibility', 	    'label'  => 'Visiblity', 		'rules' => ''),
									//array('field'   => 'animal_country', 	'label'  => 'Country', 		'rules' => 'required|trim'),
									//array('field'   => 'city', 	    		'label'  => 'City', 		'rules' => 'required|trim'),
									//array('field'   => 'state', 	    	'label'  => 'State', 		'rules' => 'required|trim')		
									);

			$this->form_validation->set_rules($req_fields);
			
			if($this->input->post('chipped_animals') == 'Yes') {
				$this->form_validation->set_rules('chipped_animals_id', 'Company/Service ID', 'required|trim');
			}
			
			if($this->input->post('on_the_clock') != '') {
				$this->form_validation->set_rules('on_date', 'Date', 'required|trim');
			}
			
			if($this->input->post('other_animals') == 'No') {
				$this->form_validation->set_rules('other_animals_notes', 'Other animal explanation', 'required|trim');
			}
			
			if($this->input->post('quarantine') == 'Y') {
				$this->form_validation->set_rules('quarantine_end_date', 'Quarantine End Date', 'required|trim');
			}
			
			/*if($this->input->post('known_medical_issues') != '') {
				$this->form_validation->set_rules('known_medical_issues_notes', 'Medical issues', 'required|trim');
			}*/
			
			($this->input->post('recent_vaccin_date') == 'Y')?$this->form_validation->set_rules('vaccin_date', 'Vaccin date', 'required|trim'):'';
			
			//($this->input->post('cvi') == 'Y')?$this->form_validation->set_rules('cvi_date', 'CVI date', 'required|trim'):'';
			
			($this->input->post('recent_vaccin_date') == 'Y')?$this->form_validation->set_rules('vaccin_date', 'Vaccin date', 'required|trim'):'';
			
			//($this->input->post('cvi') == 'Y')?$this->form_validation->set_rules('cvi_date', 'CVI date', 'required|trim'):'';
			
			($this->input->post('rabiesvac') == 'Y')?$this->form_validation->set_rules('rabiesvac_date', 'Rabies Vaccin date', 'required|trim'):'';
			($this->input->post('fecaltest') == 'Y')?$this->form_validation->set_rules('fecaltest_date', 'Fecal Test Vaccine date', 'required|trim'):'';
			($this->input->post('heartworm') == 'Y')?$this->form_validation->set_rules('heartworm_date', 'Heart worm Vaccine date', 'required|trim'):'';
			($this->input->post('bordatella') == 'Y')?$this->form_validation->set_rules('bordatella_date', 'Bordatella Vaccin date', 'required|trim'):'';
			($this->input->post('surgery') == 'Y')?$this->form_validation->set_rules('surgery_date', 'Surgery date', 'required|trim'):'';
			
			($this->input->post('heartworm') == 'Y')?$this->form_validation->set_rules('heartworm_brand', 'Heartworm Brand', 'required|trim'):'';
			($this->input->post('bordatella') == 'Y')?$this->form_validation->set_rules('bordatella_brand', 'Bordatella Brand', 'required|trim'):'';
				/** Added By Nirav **/
			$email_address = $this->input->post('shelteremail');
			if (count(array_filter($email_address))>0) {
				$this->form_validation->set_rules('shelteremail[]','Email Address','callback_verify_valid_email');
			}
			
		}
		
		if ($this->form_validation->run() == FALSE) {
			// Validation error				
			$data['error_msg'] = validation_errors();
			
			//Get Animal types
			$data['animal_type'] = $this->common_model->get_animal_types();
			$data['edit_animal'] = $this->organimal_model->animal_profile_details($id);
			
			$data['progress_status'] = $this->common_model->get_progress_status();
						
			if(empty($data['edit_animal'])) {
				redirect(base_url().'org_animal/animals_in_my_organization');
			}
			
			$data['cost_to_org'] = $this->organimal_model->cost_to_org($id);
			$data['animal_images'] = $this->organimal_model->get_animal_photos($id);
			
			$data['animal_files'] = $this->organimal_model->get_animal_files($id);
			
			$data['get_animal_setting'] = $this->organimal_model->get_animal_setting($this->session->userdata('org_id'),$id);
		
			if(!empty($data['get_animal_setting'])) {
				$data['animal_setting_id'] = $data['get_animal_setting']['in_animal_setting_id'];
				
				$data['general_setting'] = ($data['get_animal_setting']['st_general_setting']!='')?unserialize($data['get_animal_setting']['st_general_setting']):'';
				
				$data['medical_setting'] = ($data['get_animal_setting']['st_medical_setting']!='')?unserialize($data['get_animal_setting']['st_medical_setting']):'';
				
				$data['transport_setting'] = ($data['get_animal_setting']['st_transport_setting']!='')?unserialize($data['get_animal_setting']['st_transport_setting']):'';
				
				$data['foster_home_setting'] = ($data['get_animal_setting']['st_foster_home_setting']!='')?unserialize($data['get_animal_setting']['st_foster_home_setting']):'';
			}
			//for pop up zip code 
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		$c_state_list 			= $this->common_function->canadian_state_list;
		$data['c_state_list'] 	= $c_state_list;
		
		$data['all_state']     = array_merge($data['state_list'],$data['c_state_list']);
		//print_r($data['all_state']);
		//exit; 
		
		$data['country_list'] 	= $this->common_function->doobertcountry; 
			
		
			$this->load->view('edit-animal-profile',$data);
		} else {
			/*echo "<pre>";
			print_r($_POST);
			echo "</pre>";
			die('test');*/              $country='';
										if (in_array($this->input->post('state'), $usa_states))            // added by sadiq on 5-1-15
										  {
										 	$country="USA";
										  }
										else if(in_array($this->input->post('state'), $canada_states))
										  {
										 	$country="CANADA";  
										  }
			//by bhushan 
			$splitcurrent  = explode(",",$this->input->post('st_current_zip'));
			$splitdesired  = explode(",",$this->input->post('st_desired_zip')); 
			if($this->input->post('set_profile_public') == 1){
			$this->session->set_flashdata('gotoprivacy',1);
			$is_public = 0;
			}
			else 
			$is_public = $this->input->post('visibility');
			
			if($this->input->post('set_transfer_no') == 1){
			$is_transfer = 0;
			}
			else 
			$is_transfer = ($this->input->post('in_ready_transfer')=='Yes')?1:0;
			//
						
			$date = date('Y-m-d H:i:s');
			if($this->input->post('demeanor')=='')
			{
				$demeanotid = '';
                $this->db->select('in_demeanor_id');
                $this->db->from('tbl_demeanor');
                $this->db->where('in_animal_type_id', $this->input->post('animal_type'));
                $this->db->where('st_demeanor_name', 'Unknown');
                $query = $this->db->get();
                //echo $this->db->last_query();
                $res = $query->row_array();
                $demeanotid=$res['in_demeanor_id'];
			}
			//Adding animal information
			$data['edit_animal_info'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
								'st_animal_name'		=>	$this->input->post('name'),
								'st_gender'				=>	$this->input->post('gender'),
								//'in_animal_public'		=>	$this->input->post('visibility'), 
								'in_animal_public'		=>  $is_public,
								'in_animal_type_id'		=>	$this->input->post('animal_type'),
								'in_primary_breed_id'	=>	$this->input->post('animal_breed'),
								'in_secondry_breed_id'	=>	$this->input->post('secondary_breed'),
								'in_tertiary_breed_id'	=>	$this->input->post('tertiary_breed'),
								'in_age'				=>	$this->input->post('age'),
								'in_demeanor_id'		=>	($this->input->post('demeanor')=='')?$demeanotid:$this->input->post('demeanor'),
								'in_neutered_id'		=>	$this->input->post('neutered_spayed'),
								'in_weight'				=>	$this->input->post('weight'),
								'st_crates_well'		=>	$this->input->post('crates'),
								'st_flight_risk'		=>	$this->input->post('flight'),
								'st_barrier_aggressive'	=>	$this->input->post('aggressive'),
								//'st_ok_others'			=>	($this->input->post('other_animals') == 'No')?'N':'Y',
								//'st_ok_explanation'		=>	$this->input->post('other_animals_notes'),
								'st_micro_chipped'		=>	($this->input->post('chipped_animals')=='Y')?'Y':($this->input->post('chipped_animals')=='N'?'N':'U'),
								'st_micro_chip_comp'	=>	$this->input->post('chipped_animals_id'),
								'st_on_clock'			=>	($this->input->post('on_the_clock')=='Y')?'Y':'N',
								'dt_date'				=>	($this->input->post('on_the_clock')=='Y')?date('Y-m-d',strtotime($this->input->post('on_date'))):'',
								'st_medical_issue'		=>	($this->input->post('known_medical_issues')=='Yes')?'Y':'N',
								'st_medical_desc'		=>	$this->input->post('known_medical_issues'),
								'st_profile_story'		=>	$this->input->post('profile_story'),
								
								'st_recent_vaccination' => $this->input->post('recent_vaccns'),
								'dt_vaccination' 		=> ($this->input->post('recent_vaccns')=='Y')?date('Y-m-d',strtotime($this->input->post('vaccin_date'))):'',
								'st_good_with_dogs' 	=> $this->input->post('dogs'),
								'st_good_with_cats' 	=> $this->input->post('other_cats'),
								'st_good_with_kids' 	=> $this->input->post('kids'),
								'st_house_trained' 		=> $this->input->post('house_trained'),
								'st_cvi' 				=> $this->input->post('cvi'),
								//'dt_cvi' 				=> ($this->input->post('cvi')=='Y')?date('Y-m-d',strtotime($this->input->post('cvi_date'))):'',
								'dt_cvi' 				=> ($this->input->post('cvi')=='Y' && $this->input->post('cvi_date'))?date('Y-m-d',strtotime($this->input->post('cvi_date'))):'',
								'st_declawed' 			=> $this->input->post('declawed'),
								
								'in_created_by'			=>	$this->session->userdata('userid'),
								'dt_created'			=>	date('Y-m-d H:i:s'),
								//'in_status'				=>	0,
								'in_progress_status'	=>	$this->input->post('current_status'),
								'in_next_status'		=>	$this->input->post('next_status'),
								
								//'st_country'			=>	$this->input->post('animal_country'),
								'st_city'				=>	$this->input->post('city'),
								'st_state'				=>	$this->input->post('state'),
								'st_country'			=>   $country,    // added by sadiq on 5-1-15
								
								
								'in_enter_age'			=>	$this->input->post('enterage'),
								'in_dog_where'			=>	$this->input->post('dogfrmshelter'),
								'st_quarantine'			=>	$this->input->post('quarantine'),
								'dt_quarantine_end_date'=>	($this->input->post('quarantine')=='Y')?date('Y-m-d',strtotime($this->input->post('quarantine_end_date'))):'',
								
								'st_timeout'			=>	$this->input->post('timeout'),
								'dt_target_tr_date'		=>	($this->input->post('target_tr_date')!='')?date('Y-m-d',strtotime($this->input->post('target_tr_date'))):'',
								'st_travel_with'		=>	($this->input->post('travel_with'))?implode(',',$this->input->post('travel_with')):'',
								'st_tr_comment'			=>	$this->input->post('transportcomments'),
								
								'st_foster_comment'		=>	$this->input->post('fostercomments'),
								
								'st_rabies_vaccine'		=>	$this->input->post('rabiesvac'),
								'st_fecal_test'			=>	$this->input->post('fecaltest'),
								'st_dlhhp'				=>	$this->input->post('dlhpp'),
								'st_heartworm_vaccine'	=>	$this->input->post('heartworm'),
								'st_bordatella_vaccine'	=>	$this->input->post('bordatella'),
								'st_surgery'			=>	$this->input->post('surgery'),
								
								'dt_rabiesvac_date'		=>	($this->input->post('rabiesvac')=='Y')?date('Y-m-d',strtotime($this->input->post('rabiesvac_date'))):'',
								'dt_fecal_test_date'	=>	($this->input->post('fecaltest')=='Y')?date('Y-m-d',strtotime($this->input->post('fecaltest_date'))):'',
								'dt_heartworm_vaccine_date'	=>	($this->input->post('heartworm')=='Y')?date('Y-m-d',strtotime($this->input->post('heartworm_date'))):'',
								'dt_bordatella_vaccine_date' =>	($this->input->post('bordatella')=='Y')?date('Y-m-d',strtotime($this->input->post('bordatella_date'))):'',
								'dt_surgery_date'		=>	($this->input->post('surgery')=='Y')?date('Y-m-d',strtotime($this->input->post('surgery_date'))):'',
								'st_heartworm_brand'	=>	($this->input->post('heartworm')=='Y')?$this->input->post('heartworm_brand'):'',
								'st_bordatella_brand'	=>	($this->input->post('bordatella')=='Y')?$this->input->post('bordatella_brand'):'',
								'st_birdsex'			=>	$this->input->post('birdsex'),
								'st_general_comment'	=>	$this->input->post('generalcomments'),
								'st_current_zip'		=>  $splitcurrent[0],
								'st_desired_zip'		=>  $splitdesired[0],
								'in_ready_transfer'		=>  $is_transfer
											);
				//echo "<pre>";print_r($this->input->post('gender'));die;						
			$data['update_animal_info'] = $this->organimal_model->update_animal_profile($data['edit_animal_info'],$id);
			
			//Deleting shelter contact
			$data['delete_contact'] = $this->organimal_model->delete_contact($id);
			
			$this->update_animal_transfer();
				
			
			//Adding Animal Contact
			$shelter_contact_name = $this->input->post('sheltername');
			$shelter_contact_email = $this->input->post('shelteremail');
			$shelter_contact_phone = $this->input->post('shelterphno');
			
			/*echo "<pre>";
			print_r($shelter_contact_name);
			print_r($shelter_contact_email);
			print_r($shelter_contact_phone);
			die;*/
			//Adding Shelter Contact
			for($i=0;$i<count($shelter_contact_name);$i++) {
				if($shelter_contact_name[$i]!='' || $shelter_contact_email[$i]!='' || $shelter_contact_phone[$i]!='') {
						$data['shelter_contact'] = array('in_animal_id' => $id,
														 'st_shelter_name' => $shelter_contact_name[$i],
														 'st_shelter_email' => $shelter_contact_email[$i],
														 'st_shelter_phone' => $shelter_contact_phone[$i]
														);
				
						$this->organimal_model->add_shelter_contact($data['shelter_contact']);
				}
			}

			
			if(isset($_POST['image_file']) && $_POST['image_file'] !='' ) {
				$explode_file = explode(',',$_POST['image_file']);
				$date = date('Y-m-d H:i:s');
				
				/*$animal_files_array = array();
				foreach($explode_file as $row) {
					$animal_files_array[] =  trim($row);
				}*/
				
				foreach($explode_file as $row) {
					if(trim($row)!='') {
						$file_data = array(	'in_animal_id'	=>	$id,
											'st_file_name'	=>	trim($row),
											'st_file_type'	=>	'O',
											'dt_created'	=>	$date,
											'in_deleted'	=>	0
										);
						$this->organimal_model->add_animal_files($file_data);
					}
				}
			}
			
			//Add animal Images
			
			$this->load->library('upload');
			
			$date = date('Y-m-d H:i:s');
			
			$xaxis = '';
			$yaxis = '';
			$height = '';
			$width = '';
			
			$photos = array('photo1' => '',
							'photo2' => '',
							'photo3' => '',
							'photo4' => ''
							);
			
			//if($_FILES['photo1']['name'] != '') {
			if($this->input->post('uploaded_photo1') != '') {
				$photos['photo1'] = $this->input->post('uploaded_photo1');//$_FILES['photo1']['name'];
				
				$img_name_array = explode('.', $photos['photo1']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo1'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'profile/' . $photos['photo1']);
					imagejpeg($image, $this->config->item('upload') . 'profile/' . $new_image_name);
					$photos['photo1'] =  $new_image_name;
				}
			}
			//if($_FILES['photo2']['name'] != '') {
			if($this->input->post('uploaded_photo2') != '') {
				$photos['photo2'] = $this->input->post('uploaded_photo2');//$_FILES['photo2']['name'];
				
				$img_name_array = explode('.', $photos['photo2']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo2'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'profile/' . $photos['photo2']);
					imagejpeg($image, $this->config->item('upload') . 'profile/' . $new_image_name);
					$photos['photo2'] =  $new_image_name;
				}
			}
			//if($_FILES['photo3']['name'] != '') {
			if($this->input->post('uploaded_photo3') != '') {
				$photos['photo3'] = $this->input->post('uploaded_photo3');//$_FILES['photo3']['name'];
				
				$img_name_array = explode('.', $photos['photo3']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo3'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'profile/' . $photos['photo3']);
					imagejpeg($image, $this->config->item('upload') . 'profile/' . $new_image_name);
					$photos['photo3'] =  $new_image_name;
				}
			}
			//if($_FILES['photo4']['name'] != '') {
			if($this->input->post('uploaded_photo4') != '') {
				$photos['photo4'] = $this->input->post('uploaded_photo4');//$_FILES['photo4']['name'];
				
				$img_name_array = explode('.', $photos['photo4']);
				$img_extension = end($img_name_array);
				$image_name = current(explode('.', $photos['photo4'])); 
				 
				if($img_extension == "JPE" || $img_extension == "jpe")
				{
					$new_image_name = $image_name.'.jpg';
					$image = imagecreatefromjpeg($this->config->item('upload') . 'profile/' . $photos['photo4']);
					imagejpeg($image, $this->config->item('upload') . 'profile/' . $new_image_name);
					$photos['photo4'] =  $new_image_name;
				}
			}
			
			//Add youtube URLS
			$url_link = array(	'url_link_one'		=>	'',
								'url_link_two'		=>	'',
								'url_link_three'	=>	'',
								'url_link_four'		=>	''
							);
			
			if($this->input->post('url_link_one') != '') {
				$url_link['url_link_one'] = $this->input->post('url_link_one'); 
			}
			if($this->input->post('url_link_two') != '') {
				$url_link['url_link_two'] = $this->input->post('url_link_two'); 
			}
			if($this->input->post('url_link_three') != '') {
				$url_link['url_link_three'] = $this->input->post('url_link_three'); 
			}
			if($this->input->post('url_link_four') != '') {
				$url_link['url_link_four'] = $this->input->post('url_link_four'); 
			}
			
			foreach($url_link as $key => $value) {
				if($value != '') {	
				    $value   =	 str_replace("1.jpg","hqdefault.jpg",$value);
					$data['animal_links'] = array(	'in_animal_id'	=>	$id,
													'st_file_name'	=>	$value,
													'st_file_type'	=>	'V',
													'dt_created'	=>	$date
													);
										  
					$data['add_animal_link']	=	$this->organimal_model->add_animal_images($data['animal_links']);
				}
			}
			
			//Resize the image with ratio (4 Thumbnails)
			$thumb = array(	'315x315'	=>	'315X315',
							//'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'
							);

			$profile_pic = '';
			$rotate_angle1	=	0;
			$rotate_angle2	=	0;
			$rotate_angle3	=	0;
			$rotate_angle4	=	0;
			//echo "<pre>";print_r($photos);die;
			
			$this->load->library('image_lib');
			
			foreach($photos as $key => $row) {
				$config = array();		
				if(trim($row) != '') {
					$replace_array = array(" ");
					
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1');
						$xaxis = $this->input->post('x1');
						$yaxis = $this->input->post('y1');
						$height = $this->input->post('h1');
						$width = $this->input->post('w1');
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2');
						$xaxis = $this->input->post('x2');
						$yaxis = $this->input->post('y2');
						$height = $this->input->post('h2');
						$width = $this->input->post('w2');
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3');
						$xaxis = $this->input->post('x3');
						$yaxis = $this->input->post('y3');
						$height = $this->input->post('h3');
						$width = $this->input->post('w3');
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4');
						$xaxis = $this->input->post('x4');
						$yaxis = $this->input->post('y4');
						$height = $this->input->post('h4');
						$width = $this->input->post('w4');
					}
					
					########################		
					
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					$config['file_name'] 		= $row;
					
					if($rotate_angle < 0 )
					{
						$rotate_angle	=	360+$rotate_angle;
					}
					//$rotate_angle = $this->input->post('rotate_angle'.$count_photo);
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					
					if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}
					
					//Cropping Image
				/*	$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];					
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width']	= $width;
					$config['height']	= $height;
					
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
				*/	
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						//Resizing Image
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
					}
					
					$data['animal_images'] = array(	'in_animal_id'	=>	$id,
													'st_file_name'	=>	$config['file_name'],
													'st_file_type'	=>	'P',
													'in_profile_pic'=>	$profile_pic,
													'dt_created'	=>	$date
													);
											  
					$data['add_animal_images']	=	$this->organimal_model->add_animal_images($data['animal_images']);
				}
			}
			
			
			if($this->input->post('update_default_pic') != '') { 
				$profile_pic_array = array('in_profile_pic'	=>	1);
				$remove_profile_pic_array = array('in_profile_pic'	=>	0);
				
				$data['remove_profile_pic'] = $this->organimal_model->remove_profile_pic($remove_profile_pic_array,$id);
			
				$data['update_primary_pic'] = $this->organimal_model->update_primary_pic($profile_pic_array,$this->input->post('update_default_pic'));
			}
			
			//End of add animal images
		
		$cost_desc1	= $this->input->post('cost_desc1');
		$cost_price1 = $this->input->post('cost_price1');
		
		$cost_desc2	= $this->input->post('cost_desc2');
		$cost_price2 = $this->input->post('cost_price2');
		
		$cost_description = (!empty($cost_desc1) && !empty($cost_desc2))?array_merge($cost_desc1,$cost_desc2):((!empty($cost_desc1))?$cost_desc1:$cost_desc2);
			
		$cost_price = (!empty($cost_price1) && !empty($cost_price2))?array_merge($cost_price1,$cost_price2):((!empty($cost_price1))?$cost_price1:$cost_price2);
		
		$data['delete_cost_details'] = $this->organimal_model->delete_cost_details($id);
			
		for($i=0;$i<count($cost_description);$i++) {
			if(trim($cost_description[$i]) != '' && trim($cost_price[$i]) != '' && trim($cost_price[$i]) != 0 ){
				$data['animal_cost'] = array('in_animal_id'	=>	$id,
											 'st_cost_desc'	=>	$cost_description[$i],
											 'in_amount'	=>	$cost_price[$i],
											 'dt_created'	=>	$date
											);
			
				$data['add_animal_cost'] = $this->organimal_model->add_animal_cost($data['animal_cost']);
			}
		}
		
			$social_page_title = array();
			$social_page_url = array();
			
			$social_page_title = $this->input->post('social_page_title');
			$social_page_url = $this->input->post('social_page_url');
			
			$data['delete_social_pages'] = $this->organimal_model->delete_social_pages($id);
			
			for($i=0;$i<count($social_page_title);$i++) {
				if(trim($social_page_title[$i]) != '' && trim($social_page_url[$i]) != '') {
					$data['social_pages'] = array(	'in_animal_id'			=>	$id,
													'st_social_page_title'	=>	$social_page_title[$i],
													'st_social_page_url'	=>	$social_page_url[$i],
													'dt_created'			=>	$date
												);
			
					$data['add_social_pages'] = $this->organimal_model->add_social_pages($data['social_pages']);
				}
			}
			
			//Updating Animal Privacy Setting
			
			//if($this->input->post('visibility') == 0){
				(isset($_POST['general']))?$general = serialize($_POST['general']):$general = '';
				(isset($_POST['medical']))?$medical = serialize($_POST['medical']):$medical = '';
				(isset($_POST['transport']))?$transport = serialize($_POST['transport']):$transport = '';
				(isset($_POST['foster_home']))?$foster_home = serialize($_POST['foster_home']):$foster_home = '';
			/*} else {
				$general = '';
				$medical = '';
				$transport = '';
				$foster_home = '';
			}*/
			
			$data['animal_setting'] = array('in_animal_id'			=> $id,
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> $general,
											'st_medical_setting'	=> $medical,
											'st_transport_setting'	=> $transport,
											'st_foster_home_setting'=> $foster_home,
											'dt_created'			=> date('Y-m-d H:i:s'),
											'dt_modified'			=> date('Y-m-d H:i:s')
											);
											
										
			if($this->input->post('visibility') == 0)
			{								
			$get_animal_privacy_setting = $this->organimal_model->get_animal_privacy_setting($id);
			
			if(empty($get_animal_privacy_setting)) {
				$data['success'] = $this->organimal_model->add_animal_setting($data['animal_setting']);
			} else {								
				$data['success'] = $this->organimal_model->update_animal_setting($id,$data['animal_setting']);
			}
			}
			
			
			//End of Updating Animal Privacy Setting
			
			//if($data['edit_animal']['in_animal_public']!=0 && $this->input->post('visibility')==0)
			//{
				//Adding notification
				/*$notification_string = "<div class='timeline-body'><h2><span>";
				$notification_string .= "<img src='##animal_image##' alt='animal_image'>";
				$notification_string .= "</span>";
				$notification_string .= "<a class='profile' href='##org_url##".$this->session->userdata('org_id')."'>";
				$notification_string .= $this->session->userdata('org_name')."</a>";
				$notification_string .= "&nbsp;updated the animal profile of&nbsp;<a class='profile' href='##animal_url##".$id."'>";
				$notification_string .= $this->input->post('name')."</a></h2></div>";
				
				$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
												'st_notification_msg'	=>	$notification_string,
												'dt_created'			=>	date('Y-m-d H:i:s'),
												'in_deleted'			=>	'0',
												'in_animal_id'			=>	$id,
												'in_modified_by'		=>	$this->session->userdata('userid')
											);
				
				$notification = $this->organimal_model->add_notification($data['notification']);*/
				
				$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
												'in_animal_id'			=>	$id,
												'in_type'				=>	3,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'dt_created'			=>	date('Y-m-d H:i:s'),
												'in_deleted'			=>	0
											);
				
				$notification = $this->organimal_model->add_notification($data['notification']);			
			//}
			
			$this->session->set_flashdata('message', 'Animal profile updated successfully.');
			redirect(base_url().'org_animal/edit_animal_profile/'.$id);
		}
		
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_cost	
	#	Purpose		:	Deleting cost
	# *******************************************************************************************
	
	public function delete_cost() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = $this->organimal_model->delete_cost($this->input->post('cost_id'));
		return $data;
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_file	
	#	Purpose		:	Deleting animal images
	# *******************************************************************************************
	
	public function delete_file() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = $this->organimal_model->delete_file($this->input->post('file_id'));
		//chmod("/upload/animal_images", 0777);
		//unlink('./upload/animal_images/'.$this->input->post('file_name'));
		return $data;
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_animal_profile	
	#	Purpose		:	Deleting animal profile
	# *******************************************************************************************
	
	public function delete_animal_profile($id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data['profiles']	=	$this->organimal_model->delete_animal_profile($id,'tbl_animal');
		$data['costs']		=	$this->organimal_model->delete_animal_profile($id,'tbl_animal_cost');
		$data['photos']		=	$this->organimal_model->delete_animal_profile($id,'tbl_animal_file');
		
		$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
										'in_animal_id'			=>	$id,
										'in_type'				=>	18,
										'in_modified_by'		=>	$this->session->userdata('userid'),
										'dt_created'			=>	date('Y-m-d H:i:s'),
										'in_deleted'			=>	0
									);
											
		$notification = $this->organimal_model->add_notification($data['notification']);
				
		$this->session->set_flashdata('message', 'Animal profile deleted successfully.');
		redirect(base_url().'org_animal/animals_in_my_organization');
	}
	
	# *******************************************************************************************	
	#	Function	:	transfer_animal_profile	
	#	Purpose		:	Transfer animal profile
	# *******************************************************************************************
	
	public function transfer_animal_profile($id) {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$data['animal_id'] = $id;
		
		$data['animal_name'] = $this->common_model->get_animal_name($id);
		
		if(empty($data['animal_name'])) {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
		
		$sort_value = '';
		$search_value = '';
		
		$this->load->library('pagination');
		
		$config = array();
		$config["base_url"] 		= base_url().'org_animal/transfer_animal_profile/'.$id;
		
		$config["per_page"]	 		= $this->config->item('records_per_page');
		$config["uri_segment"] 		= 4;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';
		
		if($this->input->post('frm_action') == 'search_value') {
			//echo "<pre>";print_r($_POST);die;
			
			if($this->session->userdata('search_txt_tr'))
				$this->session->unset_userdata('search_txt_tr');
			
			if($this->session->userdata('sort_value_tr'))
				$this->session->unset_userdata('sort_value_tr');
					
				$search_value = $this->input->post('search_txt');
				$this->session->set_userdata('search_txt_tr',$search_value);
				
				$sort_value = $this->input->post('sort_by');
				$this->session->set_userdata('sort_value_tr',$sort_value);
		} else {
			if($this->session->userdata('search_txt_tr'))
				$search_value	= $this->session->userdata('search_txt_tr');
			else
				$search_value	= '' ;
				
			if($this->session->userdata('sort_value_tr'))
				$sort_value	= $this->session->userdata('sort_value_tr');
			else
				$sort_value	= '';
		}
		
		
		//Pagination methods.
		$page = ($this->uri->segment(4)) ? $this->uri->segment(4) : 0;
		
		$data['organization_list'] 	= $this->organimal_model->transefer_animal_organization($config["per_page"],$page,$sort_value,$search_value,$this->session->userdata('userid'));
		
		//Getting total rows
		$config["total_rows"] 	= $data["organization_list"]['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] 			= $this->pagination->create_links();
		$data['total_data'] 	= $config["total_rows"];
		$data['total_pages'] 	= floor($config["total_rows"]/$config["per_page"]);
		$data['currentPage'] 	= floor(($this->uri->segment(4)/$config['per_page']) + 1);
		$data['per_page']		= $config["per_page"];

		$this->load->view('transfer-animal-profile',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	organization_profile_animal_transfer	
	#	Purpose		:	Getting orgnization details
	# *******************************************************************************************
	
	public function organization_profile_animal_transfer($org_id,$animal_id='') {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['organization_id'] = $org_id;
		$data['animal_id'] = $animal_id;
		
		$data['animal_name'] = $this->common_model->get_animal_name($animal_id);
		
		//echo "<pre>";print_r($data['animal_name']);die;
		if(empty($data['animal_name'])) {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
		
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		
		$this->load->model('organization_privacy_setting_model');
		$data['organization_privacy_setting_details'] 	= $this->organization_privacy_setting_model->get_organization_privacy_setting_by_org_id($org_id);
		
		if(empty($data['org_details'])) {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
		
		$this->load->view('organization-profile-animal-transfer',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	confirm_transefer_animal_profile	
	#	Purpose		:	Adding transefer data in animals
	# *******************************************************************************************
	
	public function confirm_transefer_animal_profile($org_id,$animal_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$values =$this->session->userdata('values');
		
		if(!empty($values))
		{
			// for bulk action 
			//print_r($values);Array ( [0] => 1248 [1] => 1247 [2] => 1246 ) 
			//die();
			
		foreach($values as $v){
			
		$data['animal_short_dtl'] = $this->common_model->get_animal_short_details($v);
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		$data['owner_name'] = $this->common_model->get_owner_details($org_id);
		
		$added_animal_image = $this->organimal_model->get_animal_images($v);
		$animal_image = '';
		
		if($added_animal_image == '') {
			$animal_image = 'no_photo_icon.png';
		} else {
			$animal_image = $added_animal_image;
		}
		
		$org_transefer_data = array('in_animal_id'				=>	$v,
									'in_from_organization_id'	=>	$this->session->userdata('org_id'),
									'in_to_organization_id'		=>	$org_id,
									'in_requested_by'			=>	$this->session->userdata('userid'),
									'in_status'					=>	'0',
									'dt_created'				=>	date('Y-m-d H:i:s'),
									'dt_modified'				=>	date('Y-m-d H:i:s')
									);
									
		$data['transefer_profile'] = $this->organimal_model->add_transefer_data($org_transefer_data);
		
		//Sending mail
		if($data['transefer_profile'] == 1) {
			$this->load->library('email');
			$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
			
			$this->email->to($data['org_details']['st_email_address']);
			
			if($_SERVER['HTTP_HOST']!='crystal9') {
				$this->email->bcc($this->config->item('bcc_email_id'));
			}
			
			//Getting email body
			$email_body = $this->common_model->get_email_containt('12');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			
			$this->email->subject($email_body[0]['st_email_subject']);
			
			$patterns = array('%##url##%','%##organization_owner_display_name##%','%##sending_organization_name##%','%##animal_profile_name##%','%##organization_display_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%');
			$replacements = array(base_url(),$data['owner_name'][0]['name'],$this->session->userdata('org_name'),$data['animal_short_dtl']['st_animal_name'],$data['org_details']['st_org_name'],$animal_image,$data['animal_short_dtl']['st_profile_story'],base_url().'animal-'.$v.'-'.$this->common_function->get_filtered_name($data['animal_short_dtl']['st_animal_name']),date('Y'));
			
			$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
			
			$owner_email_id = $data['owner_name'][0]['email_address'];
			$owner_user_id = $data['owner_name'][0]['user_id'];
			
			$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($owner_user_id).'/'.$this->common_function->encode_base64($owner_email_id),$content);		
			$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($owner_user_id).'/'.$this->common_function->encode_base64($owner_email_id),$content);		
			$content = str_replace("##DONATION##",$donation,$content);		
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($owner_user_id);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_body[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
				$this->email->message($content);
				$this->email->send();
			}
			
			//Adding notification
			/*$notification_string  = "<div class='timeline-body'><h2><span>";
			$notification_string .= "<img src='##animal_image##' alt='animal_image'>";
			$notification_string .= "</span>";
			$notification_string .= "<a class='profile' href='##org_url##".$this->session->userdata('org_id')."'>";
			$notification_string .= $this->session->userdata('org_name')."</a>";
			$notification_string .= "&nbsp;transferred <a class='profile' href='##animal_url##".$animal_id."'>";
			$notification_string .= $data['animal_short_dtl']['st_animal_name']."'s"."</a> animal profile to ".$data['org_details']['st_org_name']."</h2></div>";*/
		
			/*$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_notification_msg'	=>	$notification_string,
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_deleted'			=>	'0',
											'in_animal_id'			=>	$animal_id,
											'in_modified_by'		=>	$this->session->userdata('userid')
										);*/

			$notification_date = date('Y-m-d H:i:s');
			$data['notification'] = array(		'in_organization_id'	=>	$this->session->userdata('org_id'),
												'dt_created'			=>	$notification_date,
												'in_deleted'			=>	0,
												'in_animal_id'			=>	$v,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'in_type'				=>	4
											);
			$notification = $this->organimal_model->add_notification($data['notification']);	
									
			$data['notification_to'] = array(	'in_organization_id'	=>	$org_id,
												'dt_created'			=>	$notification_date,
												'in_deleted'			=>	0,
												'in_animal_id'			=>	$v,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'in_type'				=>	4
											);
			$notification = $this->organimal_model->add_notification($data['notification_to']);
			
			/*$this->session->set_flashdata('transefer_success','This profile successfully transfer to ');
			redirect(base_url().'org_animal/transefer_profile_confirmation/'.$animal_id.'/'.$org_id);*/
			
		} else {
			/*$this->session->set_flashdata('transefer_error','error');
			redirect(base_url().'org_animal/transefer_profile_confirmation/'.$animal_id.'/'.$org_id);*/
		}
		
	}// foreach 
			$this->session->unset_userdata('values');
			$this->session->set_flashdata('message','The selected Animal profile successfully transfer');
			redirect(base_url().'org_animal/animals_in_my_organization'); 
			
		} else{		
			// for single values ids
		
		//$data['animal_name'] = $this->common_model->get_animal_name($animal_id);
		$data['animal_short_dtl'] = $this->common_model->get_animal_short_details($animal_id);
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		$data['owner_name'] = $this->common_model->get_owner_details($org_id);
		
		$added_animal_image = $this->organimal_model->get_animal_images($animal_id);
		$animal_image = '';
		
		if($added_animal_image == '') {
			$animal_image = 'no_photo_icon.png';
		} else {
			$animal_image = $added_animal_image;
		}
		
		
		$org_transefer_data = array('in_animal_id'				=>	$animal_id,
									'in_from_organization_id'	=>	$this->session->userdata('org_id'),
									'in_to_organization_id'		=>	$org_id,
									'in_requested_by'			=>	$this->session->userdata('userid'),
									'in_status'					=>	'0',
									'dt_created'				=>	date('Y-m-d H:i:s'),
									'dt_modified'				=>	date('Y-m-d H:i:s')
									);
									
		$data['transefer_profile'] = $this->organimal_model->add_transefer_data($org_transefer_data);
		
		//Sending mail
		if($data['transefer_profile'] == 1) {
			$this->load->library('email');
			$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
			
			$this->email->to($data['org_details']['st_email_address']);
			
			if($_SERVER['HTTP_HOST']!='crystal9') {
				$this->email->bcc($this->config->item('bcc_email_id'));
			}
			
			//Getting email body
			$email_body = $this->common_model->get_email_containt('12');
			$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			
			$this->email->subject($email_body[0]['st_email_subject']);
			
			$patterns = array('%##url##%','%##organization_owner_display_name##%','%##sending_organization_name##%','%##animal_profile_name##%','%##organization_display_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%');
			$replacements = array(base_url(),$data['owner_name'][0]['name'],$this->session->userdata('org_name'),$data['animal_short_dtl']['st_animal_name'],$data['org_details']['st_org_name'],$animal_image,$data['animal_short_dtl']['st_profile_story'],base_url().'animal-'.$animal_id.'-'.$this->common_function->get_filtered_name($data['animal_short_dtl']['st_animal_name']),date('Y'));
			
			$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
			
			$owner_email_id = $data['owner_name'][0]['email_address'];
			$owner_user_id = $data['owner_name'][0]['user_id'];
			
			$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($owner_user_id).'/'.$this->common_function->encode_base64($owner_email_id),$content);		
			$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($owner_user_id).'/'.$this->common_function->encode_base64($owner_email_id),$content);		
			$content = str_replace("##DONATION##",$donation,$content);		
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($owner_user_id);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_body[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
				$this->email->message($content);
				$this->email->send();
			}
			
			//Adding notification
			/*$notification_string  = "<div class='timeline-body'><h2><span>";
			$notification_string .= "<img src='##animal_image##' alt='animal_image'>";
			$notification_string .= "</span>";
			$notification_string .= "<a class='profile' href='##org_url##".$this->session->userdata('org_id')."'>";
			$notification_string .= $this->session->userdata('org_name')."</a>";
			$notification_string .= "&nbsp;transferred <a class='profile' href='##animal_url##".$animal_id."'>";
			$notification_string .= $data['animal_short_dtl']['st_animal_name']."'s"."</a> animal profile to ".$data['org_details']['st_org_name']."</h2></div>";*/
		
			/*$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_notification_msg'	=>	$notification_string,
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_deleted'			=>	'0',
											'in_animal_id'			=>	$animal_id,
											'in_modified_by'		=>	$this->session->userdata('userid')
										);*/

			$notification_date = date('Y-m-d H:i:s');
			$data['notification'] = array(		'in_organization_id'	=>	$this->session->userdata('org_id'),
												'dt_created'			=>	$notification_date,
												'in_deleted'			=>	0,
												'in_animal_id'			=>	$animal_id,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'in_type'				=>	4
											);
			$notification = $this->organimal_model->add_notification($data['notification']);	
									
			$data['notification_to'] = array(	'in_organization_id'	=>	$org_id,
												'dt_created'			=>	$notification_date,
												'in_deleted'			=>	0,
												'in_animal_id'			=>	$animal_id,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'in_type'				=>	4
											);
			$notification = $this->organimal_model->add_notification($data['notification_to']);
			
			$this->session->set_flashdata('transefer_success','This profile successfully transfer to ');
			redirect(base_url().'org_animal/transefer_profile_confirmation/'.$animal_id.'/'.$org_id);
			
		} else {
			$this->session->set_flashdata('transefer_error','error');
			redirect(base_url().'org_animal/transefer_profile_confirmation/'.$animal_id.'/'.$org_id);
		}
		}
		
	}
	
	# *******************************************************************************************	
	#	Function	:	transefer_profile_confirmation	
	#	Purpose		:	Getting Animal profile transefer confirmation
	# *******************************************************************************************
	
	public function transefer_profile_confirmation($id,$org_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url')."my-profile/");
		}
		
		$data = array();
		
		$data['animal_id'] = $id;
		$data['org_name'] = $this->organimal_model->get_org_name($org_id);
		$data['organization_id'] = $org_id;
		
		//Getting animal profile details
		$data['animal_profile_details'] = $this->organimal_model->animal_profile_details($id);
		
		$data['animal_files'] = $this->organimal_model->get_animal_files($id);
		
		if(!empty($data['animal_profile_details'])) {
			
			//Getting animal breeds name
			/*$breed_array = array($data['animal_profile_details']['in_secondry_breed_id'],$data['animal_profile_details']['in_tertiary_breed_id']);
			
			$data['other_breeds'] = $this->common_model->get_animal_breed_name($breed_array);
			
			$breeds = array();
			foreach($data['other_breeds'] as $row) {
				$breeds[] = $row['st_animal_breed_name'];
			}
			$data['animal_other_breeds'] = implode(', ',$breeds);*/
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$primary_breed 	= $data['animal_profile_details']['in_primary_breed_id'];
			
			$primary_breed_data = $this->common_model->get_animal_breed_name($primary_breed);
			
			$data['primary_breed'] 	= $primary_breed_data[0]['st_animal_breed_name'];
			//print_r($data['primary_breed']); exit;
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 ends
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$secondary_breed 	= $data['animal_profile_details']['in_secondry_breed_id'];
			
			$secondary_breed_data = $this->common_model->get_animal_breed_name($secondary_breed);
			
			$animal_secondary_breed 	= (isset($secondary_breed_data[0]['st_animal_breed_name']) && $secondary_breed_data[0]['st_animal_breed_name'] != '') ? $secondary_breed_data[0]['st_animal_breed_name'] : '';
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$tertiary_breed 	= $data['animal_profile_details']['in_tertiary_breed_id'];
			
			$tertiary_breed_data = $this->common_model->get_animal_breed_name($tertiary_breed);
			
			$animal_tertiary_breed 	= (isset($tertiary_breed_data[0]['st_animal_breed_name']) && $tertiary_breed_data[0]['st_animal_breed_name'] != '') ? $tertiary_breed_data[0]['st_animal_breed_name'] : '';
			
			if((isset($animal_secondary_breed) && $animal_secondary_breed != '') && (isset($animal_tertiary_breed) && $animal_tertiary_breed != ''))
			{
				$data['animal_other_breeds'] = $animal_secondary_breed . ', '. $animal_tertiary_breed;
			}
			elseif(!isset($animal_tertiary_breed) || $animal_tertiary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_secondary_breed;
			}
			elseif(!isset($animal_secondary_breed) || $animal_secondary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_tertiary_breed;
			}
			
			//Getting cost details
			$data['cost_to_org'] = $this->organimal_model->cost_to_org($id);
			
			//Getting animal photos & videos
			$data['animal_images'] = $this->organimal_model->get_animal_photos($id);
			
			$data['org_details'] = $this->organimal_model->get_org_details($data['animal_profile_details']['in_organization_id']);
			
			//echo "<pre>";print_r($data['org_details']);die;
			
			$this->load->view('transfer-confirmation',$data);
		} else {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	update_animal_status	
	#	Purpose		:	Updating animal status
	# *******************************************************************************************
	
	public function update_animal_status($id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$data = array();
		
		if($this->input->post('status_frm') == 'Status_Update') {
			if($this->input->post('current_stat') != '' && $this->input->post('next_stat') != '') {
				
				$data['status_data'] = array('in_progress_status'	=>	$this->input->post('current_stat'),
											 'in_next_status'		=>	$this->input->post('next_stat'),
											 'dt_modified'			=>	date('Y-m-d H:i:s')
											);
				
				$data['update_status'] = $this->organimal_model->update_animal_profile($data['status_data'],$id);
			}
		}
		
		redirect(base_url().'org_animal/animal_profile_details/'.$id);
	}
	
	# *******************************************************************************************	
	#	Function	:	org_details	
	#	Purpose		:	Organization short details
	# *******************************************************************************************
	
	public function org_details($org_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['organization_id'] = $org_id;
		
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		
		if(empty($data['org_details'])) {
			redirect(base_url().'org_animal/animals_in_my_organization');
		}
		
		$this->load->view('org_short_details',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	animal_transefer_request	
	#	Purpose		:	Animal transefer request listing
	# *******************************************************************************************
	
	public function animal_transefer_request() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$config = array();
		
		$this->load->library('pagination');
		
		$config["base_url"] 		= base_url().'org_animal/animal_transefer_request';
		
		$config["per_page"]	 		= $this->config->item('records_per_page');
		$config["uri_segment"] 		= 3;
	
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';

		$page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;
		
		$data['get_animals'] = $this->organimal_model->get_all_animals_for_accept($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'));
		
		//Getting total rows
		$config["total_rows"] = $data['get_animals']['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] = $this->pagination->create_links();
		
		$this->load->view('animal_transefer_req',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	animal_transfer_profile_accept	
	#	Purpose		:	Animal transefer request accept & reject
	# *******************************************************************************************
	
	public function animal_transfer_profile_accept($id,$transefer_id='') {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$data['animal_id'] = $id;
		
		
		if(isset($transefer_id) && $transefer_id != '') {
			$data['transefer_id'] = $transefer_id;
		} else {
			redirect(base_url().'org_animal/animal_transefer_request');
		}
		
		//Getting animal profile details
		$data['animal_profile_details'] = $this->organimal_model->animal_profile_details($id);
		
		$data['org_id'] = $data['animal_profile_details']['in_organization_id'];
		
		$data['progress_status'] = $this->common_model->get_progress_status();
		
		$data['animal_files'] = $this->organimal_model->get_animal_files($id);
		
		if(!empty($data['animal_profile_details'])) {
			
			//Getting animal breeds name
			/*$breed_array = array($data['animal_profile_details']['in_secondry_breed_id'],$data['animal_profile_details']['in_tertiary_breed_id']);
			
			$data['other_breeds'] = $this->common_model->get_animal_breed_name($breed_array);
			
			$breeds = array();
			
			foreach($data['other_breeds'] as $row) {
				$breeds[] = $row['st_animal_breed_name'];
			}
			$data['animal_other_breeds'] = implode(', ',$breeds);*/
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$primary_breed 	= $data['animal_profile_details']['in_primary_breed_id'];
			
			$primary_breed_data = $this->common_model->get_animal_breed_name($primary_breed);
			
			$data['primary_breed'] 	= $primary_breed_data[0]['st_animal_breed_name'];
			//print_r($data['primary_breed']); exit;
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 ends
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$secondary_breed 	= $data['animal_profile_details']['in_secondry_breed_id'];
			
			$secondary_breed_data = $this->common_model->get_animal_breed_name($secondary_breed);
			
			$animal_secondary_breed 	= (isset($secondary_breed_data[0]['st_animal_breed_name']) && $secondary_breed_data[0]['st_animal_breed_name'] != '') ? $secondary_breed_data[0]['st_animal_breed_name'] : '';
			
			//code added by ghanshyam to get primary breed of the animal 28-Oct-2014 starts
			$tertiary_breed 	= $data['animal_profile_details']['in_tertiary_breed_id'];
			
			$tertiary_breed_data = $this->common_model->get_animal_breed_name($tertiary_breed);
			
			$animal_tertiary_breed 	= (isset($tertiary_breed_data[0]['st_animal_breed_name']) && $tertiary_breed_data[0]['st_animal_breed_name'] != '') ? $tertiary_breed_data[0]['st_animal_breed_name'] : '';
			
			if((isset($animal_secondary_breed) && $animal_secondary_breed != '') && (isset($animal_tertiary_breed) && $animal_tertiary_breed != ''))
			{
				$data['animal_other_breeds'] = $animal_secondary_breed . ', '. $animal_tertiary_breed;
			}
			elseif(!isset($animal_tertiary_breed) || $animal_tertiary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_secondary_breed;
			}
			elseif(!isset($animal_secondary_breed) || $animal_secondary_breed == '')
			{
				$data['animal_other_breeds'] = $animal_tertiary_breed;
			}
			
			//Getting cost details
			$data['cost_to_org'] = $this->organimal_model->cost_to_org($id);
			
			//Getting animal photos & videos
			$data['animal_images'] = $this->organimal_model->get_animal_photos($id);
			
			$data['org_details'] = $this->organimal_model->get_org_details($data['animal_profile_details']['in_organization_id']);
			
			$this->load->view('animal-transfer-profile_accept',$data);
		} else {
			redirect(base_url().'org_animal/animal_transefer_request');
		}
		
	}
	
	# *******************************************************************************************	
	#	Function	:	accept_animal_request	
	#	Purpose		:	Accepting animal request
	# *******************************************************************************************
	
	public function accept_animal_request($id,$org_id,$transefer_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		
		//Get animal name
		$data['animal_name'] = $this->organimal_model->get_animal_name($id);
		$data['user_email']	= $this->organimal_model->get_user_email($transefer_id);
		
		$added_animal_image = $this->organimal_model->get_animal_images($id);
		$animal_image = '';
		
		if($added_animal_image == '') {
			$animal_image = 'no_photo_icon.png';
		} else {
			$animal_image = $added_animal_image;
		}
		
		$this->load->library('email');
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		
		$this->email->to($data['user_email']['st_email']);
		
		if($_SERVER['HTTP_HOST']!='crystal9') {
			$this->email->bcc($this->config->item('bcc_email_id'));
		}
		
		//Getting email body
		$email_body = $this->common_model->get_email_containt('11');
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
		$this->email->subject($email_body[0]['st_email_subject']);
		
		$patterns = array('%##url##%','%##accepted_user_e-mail##%','%##animal_profile_name##%','%##organization_display_name##%','%##receiving_organization_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%');
		$replacements = array(base_url(),$data['user_email']['st_email'],$data['animal_name']['st_animal_name'],$data['org_details']['st_org_name'],$this->session->userdata('org_name'),$animal_image,$data['animal_name']['st_profile_story'],base_url().'animal-'.$id.'-'.$this->common_function->get_filtered_name($data['animal_name']['st_animal_name']),date('Y'));
		
		$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
		
		$user_to_id = $this->common_model->get_user_id_by_email($data['user_email']['st_email']);
						
		$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($data['user_email']['st_email']),$content);		
		$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($data['user_email']['st_email']),$content);		
		$content = str_replace("##DONATION##",$donation,$content);		
		
		$send_email = 1;							
		$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
		if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
		{
			$send_email = 0;										
		}
		
		$email_template_id = $email_body[0]['in_email_id'];
		$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
		if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
		{
			$send_email = 1;
		}
		
		if($send_email == '1')
		{
			$this->email->message($content);
			$this->email->send();	
		}
		
		$data['request_data'] = array(	'in_accepted_by'		=>	$this->session->userdata('userid'),
										'dt_modified'			=>	date('Y-m-d H:i:s'),
										'in_status'				=>	'1'
									);
		
		$data['update_animal_transefer_req'] = $this->organimal_model->update_request($data['request_data'],$transefer_id);
		
		$data['animal_data'] = array(	'in_organization_id' => $this->session->userdata('org_id'),
										'in_created_by'		=>	$this->session->userdata('userid')
									);
		
		$data['update_animal_profile'] = $this->organimal_model->update_animal_profile($data['animal_data'],$id);
		
		//Update for campaign animal
		$animal_check = $this->organimal_model->check_animal_campaign($id);
		
		if(!empty($animal_check)) {
			$update_campaign_org_id = $this->organimal_model->update_campaign_org_id($animal_check['in_campaign_id'],$this->session->userdata('org_id'));
		}
		//End Update for campaign animal
		
		//Add Notification
		$data['notification'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
									'in_animal_id'			=>	$id,
									'in_type'				=>	19,
									'in_modified_by'		=>	$this->session->userdata('userid'),
									'dt_created'			=>	date('Y-m-d H:i:s'),
									'in_deleted'			=>	0
									);
								
		$notification = $this->organimal_model->add_notification($data['notification']);
		
		$data['notification'] = array('in_organization_id'	=>	$org_id,
									'in_animal_id'			=>	$id,
									'in_type'				=>	19,
									'in_modified_by'		=>	$this->session->userdata('userid'),
									'dt_created'			=>	date('Y-m-d H:i:s'),
									'in_deleted'			=>	0
									);
								
		$notification = $this->organimal_model->add_notification($data['notification']);
		//End Notification
		
		$this->session->set_flashdata('animal_accept','This animal profile successfully added in to the ');
		$this->session->set_flashdata('org_name',$data['org_details']['st_org_name']);
		
		$this->session->set_userdata('accept_success','yes');
		
		redirect(base_url().'animal-transfer-profile-accept/'.$id.'/'.$transefer_id);
	}
	
	# *******************************************************************************************	
	#	Function	:	reject_animal_request	
	#	Purpose		:	Rejecting animal request
	# *******************************************************************************************
	
	public function reject_animal_request($id,$org_id,$transefer_id) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		
		$data['org_details'] = $this->organimal_model->get_org_details($org_id);
		
		//Get animal name
		$data['animal_name'] = $this->organimal_model->get_animal_name($id);
		$data['user_email']	= $this->organimal_model->get_user_email($transefer_id);
		
		$added_animal_image = $this->organimal_model->get_animal_images($id);
		$animal_image = '';
		
		if($added_animal_image == '') {
			$animal_image = 'no_photo_icon.png';
		} else {
			$animal_image = $added_animal_image;
		}
		
		//Add Notification
		$data['notification'] = array('in_organization_id'	=>	$this->session->userdata('org_id'),
									'in_animal_id'			=>	$id,
									'in_type'				=>	20,
									'in_modified_by'		=>	$this->session->userdata('userid'),
									'dt_created'			=>	date('Y-m-d H:i:s'),
									'in_deleted'			=>	0
									);
								
		$notification = $this->organimal_model->add_notification($data['notification']);
		
		$data['notification'] = array('in_organization_id'	=>	$org_id,
									'in_animal_id'			=>	$id,
									'in_type'				=>	20,
									'in_modified_by'		=>	$this->session->userdata('userid'),
									'dt_created'			=>	date('Y-m-d H:i:s'),
									'in_deleted'			=>	0
									);
								
		$notification = $this->organimal_model->add_notification($data['notification']);
		//End Notification
		
		$this->load->library('email');
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		
		$this->email->to($data['user_email']['st_email']);
		
		if($_SERVER['HTTP_HOST']!='crystal9') {
			$this->email->bcc($this->config->item('bcc_email_id'));
		}
		
		//Getting email body
		$email_body = $this->common_model->get_email_containt('32');
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		
		$this->email->subject($email_body[0]['st_email_subject']);
		
		$patterns = array('%##url##%','%##user_email##%','%##animal_profile_name##%','%##organization_display_name##%','%##receiving_organization_name##%','%##animal_img##%','%##animal_profile_story##%','%##animal_profile_details##%','%##current_year##%');
		$replacements = array(base_url(),$data['user_email']['st_email'],$data['animal_name']['st_animal_name'],$data['org_details']['st_org_name'],$this->session->userdata('org_name'),$animal_image,$data['animal_name']['st_profile_story'],base_url().'animal-'.$id.'-'.$this->common_function->get_filtered_name($data['animal_name']['st_animal_name']),date('Y'));
		
		$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
		
		$user_to_id = $this->common_model->get_user_id_by_email($data['user_email']['st_email']);
						
		$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($data['user_email']['st_email']),$content);		
		$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($data['user_email']['st_email']),$content);		
		$content = str_replace("##DONATION##",$donation,$content);		
		
		$send_email = 1;							
		$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
		if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
		{
			$send_email = 0;										
		}
		
		$email_template_id = $email_body[0]['in_email_id'];
		$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
		if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
		{
			$send_email = 1;
		}
		
		if($send_email == '1')
		{
			$this->email->message($content);
			$this->email->send();		
		}		
		
		$data['request_data'] = array(	'dt_modified'	=>	date('Y-m-d H:i:s'),
										'in_status'		=>	'3'
									);
		
		$data['update_animal_transefer_req'] = $this->organimal_model->update_request($data['request_data'],$transefer_id);
		
		//Updating animal request
		//$data['animal_data'] = array('in_organization_id' => $org_id);
		//$data['update_animal_profile'] = $this->organimal_model->update_animal_profile($data['animal_data'],$id);
		
		$this->session->set_flashdata('animal_reject','This animal profile rejected and notification sent to ');
		$this->session->set_flashdata('org_name',$data['org_details']['st_org_name']);
		$this->session->set_flashdata('org_id',$org_id);
		
		$this->session->set_userdata('reject_success','yes');
		
		redirect(base_url().'animal-transfer-profile-accept/'.$id.'/'.$transefer_id);
	}
	
	public function get_demeanor() {
		$data['get_demeanor'] = $this->common_model->get_demeanor($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	# *******************************************************************************************	
	#	Function	:	get_demeanor_details	
	#	Purpose		:	Getting all details of demeanor
	# *******************************************************************************************
	
	public function get_demeanor_details() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['demeanor_detail'] = $this->organimal_model->get_demeanor_detail($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	# *******************************************************************************************	
	#	Function	:	animal_add_files
	#	Purpose		:	Add animal files
	# *******************************************************************************************
	
	public function animal_add_files() {
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		
		$config['upload_path']  	= 'upload/animal_images/large/';
		$config['max_size']			= '51200';
		$config['allowed_types'] 	= 'jpg|jpeg|doc|docx|xls|xlsx|pdf|jpe';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']));
		
		//Upload image image library
		$this->load->library('upload', $config);
		
		//Upload image by calling do_upload method.
		$this->upload->do_upload('files');
		
		$file_errors = array('errors' => $this->upload->display_errors());
			
		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}
				
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type']
					);
		echo json_encode(array('files' => array($data) ));
	}
	
	# *******************************************************************************************	
	#	Function	:	delete_animal_files
	#	Purpose		:	Deleting animal files
	# *******************************************************************************************
	public function delete_animal_files($file_id,$animal_id) {
		$data['animal_files']	=	$this->organimal_model->delete_animal_files($file_id);
		redirect(base_url().'org_animal/edit_animal_profile/'.$animal_id);
	}
	
	function generate_download($document)
    {	
	
		$this->load->library('user_agent');
		if($document=='')
		{
			redirect($this->agent->referrer());	
		}
		$document = $this->common_function->decode_base64($document);
        $file = $this->config->item('upload')."animal_images/large/".$document;
		
		if ($document!='' && file_exists($file)) {
			$this->load->helper('download');
			$data = file_get_contents($file); // Read the file's contents
			$name = $document;
			force_download($name, $data);
		}
		else
		{   		
			$this->session->set_flashdata('upload_error', 'File does not exist.');
			redirect($this->agent->referrer());		
			
		}
    }
	
	# *******************************************************************************************	
	#	Function	:	ajax_file_upload
	#	Purpose		:	Uploading files with ajax
	# *******************************************************************************************
	
	public function ajax_file_upload() {
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'animal_images/';
		$config['max_size']			= '5120';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','', str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		$lastDot = strrpos($_FILES[$this->input->post('file_name')]['name'], ".");
		$_FILES[$this->input->post('file_name')]['name'] = str_replace(".", "", substr($_FILES[$this->input->post('file_name')]['name'], 0, $lastDot)) . substr($_FILES[$this->input->post('file_name')]['name'], $lastDot);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		//Initialization
		$this->upload->initialize($config);
			
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload($this->input->post('file_name'));
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 
		
		$img_name_array = explode('.', $config['file_name']);
		$img_extension = end($img_name_array);
		$image_name = current(explode('.', $config['file_name'])); 
		 
		if($img_extension == "JPE" || $img_extension == "jpe")
		{
			$new_image_name = $image_name.'.jpg';
			$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $config['file_name']);
			imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
			$config['file_name'] =  $new_image_name;
		}
		
		echo "{";
		echo "file_name: '" . $config['file_name'] . "'\n";
		echo "}";
	}
	
	public function cropped_image_ajax_file_upload() {
		
			$this->load->library('image_lib');
			
			$rotate_angle1	=	0;
			$rotate_angle = $this->input->post('rotate_angle');
			$xaxis = $this->input->post('x');
			$yaxis = $this->input->post('y');
			$height = $this->input->post('h');
			$width = $this->input->post('w');
			
			$config['file_name'] = $this->input->post('uploaded_photo');
			
			$img_name_array = explode('.', $config['file_name']);
			$img_extension = end($img_name_array);
			$image_name = current(explode('.', $config['file_name'])); 
			 
			if($img_extension == "JPE" || $img_extension == "jpe")
			{
				$new_image_name = $image_name.'.jpg';
				$image = imagecreatefromjpeg($this->config->item('upload') . 'animal_images/' . $config['file_name']);
				imagejpeg($image, $this->config->item('upload') . 'animal_images/' . $new_image_name);
				$config['file_name'] =  $new_image_name;
			}
			
			if($rotate_angle < 0 )
			{
				$rotate_angle	=	360+$rotate_angle;
			}
			
			if($rotate_angle > 0 )
			{
				if($rotate_angle == 90)
				{
					$rotate_angle = 270;
				}
				else if($rotate_angle == 270){
					$rotate_angle = 90;
				}
				
				$config['image_library'] = 'gd2';
				$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
				//$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
				
				$config['rotation_angle'] = $rotate_angle;
				
				$this->image_lib->initialize($config);
				if ( ! $this->image_lib->rotate()) {
					//echo $this->image_lib->display_errors();
					$file_errors = array('errors' => $this->image_lib->display_errors());
				}
				if(!empty($file_errors['errors'])) {
					$data = array('upload_error' => strip_tags($file_errors['errors']));
					echo json_encode($data);
					return false;
				} 
				
			}
			
			
			$this->image_lib->clear();
			
			
			//Cropping Image
			$config['image_library'] = 'gd2';
			$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
			$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];					
			$config['maintain_ratio'] 	= FALSE;
			$config['x_axis'] = $xaxis;
			$config['y_axis'] = $yaxis;					
			$config['width']	= $width;
			$config['height']	= $height;
			
			$this->image_lib->initialize($config); 
			if ( ! $this->image_lib->crop()) {
				//echo $this->image_lib->display_errors();
				$file_errors = array('errors' => $this->image_lib->display_errors());
			}
			if(!empty($file_errors['errors'])) {
				$data = array('upload_error' => strip_tags($file_errors['errors']));
				echo json_encode($data);
				return false;
			} 
			$this->image_lib->clear();
			//Resizing Image
			$config['image_library'] 	= 'gd2';
			$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
			$config['new_image']		= $this->config->item('upload').'animal_images/140x140/'.$config['file_name'];
			$config['maintain_ratio'] 	= TRUE;
			$config['width']	 		= 140;
			$config['height']			= 140;
			$this->image_lib->initialize($config);
			$this->image_lib->resize();
			$this->image_lib->clear();
			
			echo "{";
			echo "cropped_image_path: '" . $config['new_image'] . "'\n";
			echo "}";
		
	}
	# *******************************************************************************************	
	#	Function	:	rotate_image
	#	Purpose		:	Rotating uploaded image
	# *******************************************************************************************
	
	public function rotate_image() {
		$this->load->library('upload');
		
		$config = array();
		$config['file_name'] = $this->input->post('rotate_file_name');
		
		$config['image_library'] = 'gd2';
		$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
		$config['rotation_angle'] = $this->input->post('angle');
		
		$this->load->library('image_lib');
		$this->load->library('image_lib', $config);
		$this->image_lib->initialize($config);

		if ( ! $this->image_lib->rotate()) {
    		echo $this->image_lib->display_errors();
		}
		
		echo $config['file_name'];
		/*echo "{";
		echo "rotate_file_name: '" . $config['file_name'] . "'\n";
		echo "}";*/
	}
	
	/*public function get_animal() {
		$data = array();
		$data['animal'] = $this->organimal_model->get_all_animals();
		//echo "<pre>";print_r($data['animal']);die;
		
					foreach($data['animal'] as $row) {	
										$data['animal_setting'] = array('in_animal_id'			=> $row['in_animal_id'],
											'in_user_id'			=> $row['in_created_by'],
											'in_organization_id'	=> $row['in_organization_id'],
											'st_general_setting'	=> 'a:23:{i:0;s:6:"gender";i:1;s:6:"pbreed";i:2;s:6:"sbreed";i:3;s:6:"tbreed";i:4;s:3:"age";i:5;s:6:"weight";i:6;s:8:"demeanor";i:7;s:7:"cstatus";i:8;s:7:"nstatus";i:9;s:4:"city";i:10;s:5:"state";i:11;s:5:"clock";i:12;s:5:"where";i:13;s:10:"quarantine";i:14;s:12:"shelter_time";i:15;s:15:"shelter_contact";i:16;s:8:"comments";i:17;s:5:"files";i:18;s:11:"photo_video";i:19;s:6:"pstory";i:20;s:4:"cost";i:21;s:6:"social";i:22;s:7:"birdsex";}',
											'st_medical_setting'	=> 'a:9:{i:0;s:8:"neutered";i:1;s:8:"rvaccine";i:2;s:8:"hvaccine";i:3;s:9:"fecaltest";i:4;s:8:"bvaccine";i:5;s:12:"microchipped";i:6;s:7:"surgery";i:7;s:5:"dlhhp";i:8;s:13:"medical_issue";}',
											'st_transport_setting'	=> 'a:8:{i:0;s:6:"crates";i:1;s:5:"frisk";i:2;s:10:"baggresive";i:3;s:14:"recent_vaccine";i:4;s:3:"cvi";i:5;s:7:"tr_date";i:6;s:6:"travel";i:7;s:10:"tr_comment";}',
											'st_foster_home_setting'=> 'a:6:{i:0;s:5:"other";i:1;s:4:"same";i:2;s:7:"trained";i:3;s:4:"kids";i:4;s:8:"declawed";i:5;s:10:"fh_comment";}',
											'dt_created'			=> date('Y-m-d H:i:s'),
											'dt_modified'			=> date('Y-m-d H:i:s')
											);					
						$data['add_animal'] = $this->organimal_model->add_animal_setting($data['animal_setting']);
					}
					redirect(base_url().'org-animal/');
		
	}*/
	
	public function add_new_animal_profile() {
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		/*if(!$this->session->userdata('org_id')) {
			redirect(base_url().'my-profile');
		}*/
		
		$data = array();
		//$data['get_demeanor'] = $this->common_model->get_demeanor();
		$all_animal_type = $this->organimal_model->get_animal_all_type();
		$data['check_for_new_animal'] = $this->organimal_model->check_for_new_animal();
		$data['check_for_new_org'] = $this->organimal_model->check_for_new_org();
		//echo "<pre>";print_r($all_animal_type);die;
		for($q=0;$q<count($all_animal_type);$q++)
		{
			$demeanors = $this->common_model->get_demeanor($all_animal_type[$q]['in_animal_type_id']);
			$all_animal_type[$q]['demeanors'] = $demeanors;
			
		}
		$data['get_demeanor'] = $all_animal_type;
		//echo "<pre>";print_r($all_animal_type);die;
		if($this->input->post('frm_action') == 'add_animal') {
		
			$req_fields = array(	array('field'   => 'name',				'label'  => 'Name',				'rules' => 'required|trim'),
									array('field'   => 'gender', 			'label'  => 'Gender', 			'rules' => 'required|trim'),
									array('field'   => 'animal_type', 		'label'  => 'Animal Type', 		'rules' => 'required|trim'),
									array('field'   => 'animal_breed',		'label'  => 'Animal breed',		'rules' => 'required|trim'),
									//array('field'   => 'age', 				'label'  => 'Age', 				'rules' => 'required|trim'),
									//array('field'   => 'demeanor',			'label'  => 'Demeanor',			'rules' => 'required|trim'),
									array('field'   => 'neutered_spayed', 	'label'  => 'Neutered/Spayed', 	'rules' => 'required|trim'),
									array('field'   => 'visibility', 	    'label'  => 'Visiblity', 		'rules' => ''),
									//array('field'   => 'city', 	    		'label'  => 'City', 		'rules' => 'required|trim'),
									//array('field'   => 'state', 	    	'label'  => 'State', 		'rules' => 'required|trim')		
									);

			$this->form_validation->set_rules($req_fields);
			
			if($this->input->post('chipped_animals') == 'Yes') {
				$this->form_validation->set_rules('chipped_animals_id', 'Company/Service ID', 'required|trim');
			}
			
			if($this->input->post('on_the_clock') != '') {
				$this->form_validation->set_rules('on_date', 'Date', 'required|trim');
			}
			
			if($this->input->post('other_animals') == 'No') {
				$this->form_validation->set_rules('other_animals_notes', 'Other animal explanation', 'required|trim');
			}
			
			if($this->input->post('known_medical_issues') != '') {
				$this->form_validation->set_rules('known_medical_issues_notes', 'Medical issues', 'required|trim');
			}
			
			($this->input->post('recent_vaccin_date') != '')?$this->form_validation->set_rules('vaccin_date', 'Vaccin date', 'required|trim'):'';
			
			($this->input->post('cvi_date_val') != '')?$this->form_validation->set_rules('cvi_date', 'CVI date', 'required|trim'):'';
			
		}
		
		
		if ($this->form_validation->run() == FALSE) {
			// Validation error				
			$data['error_msg'] = validation_errors();
			
			//Get Animal types
			$data['animal_type'] = $this->common_model->get_animal_types();
			
			$data['progress_status'] = $this->common_model->get_progress_status();
			
			 $state_list = $this->common_function->state_list;
			$data['state_list'] = $state_list;
	
			$c_state_list = $this->common_function->canadian_state_list;
			$data['c_state_list'] = $c_state_list;
	
			$data['all_state'] = array_merge($data['state_list'], $data['c_state_list']);
			//print_r($data['all_state']);
			//exit; 

        $data['country_list'] = $this->common_function->doobertcountry;

			
			$this->load->view('add-new-animal-profile-nov',$data);
		} else {
			
			//Adding animal information
			$data['animal_info'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$this->input->post('name'),
											'st_gender'				=>	($this->input->post('gender')=='M')?'M':'F',
											'in_animal_public'		=>	$this->input->post('visibility'), 
											'in_animal_type_id'		=>	$this->input->post('animal_type'),
											'in_primary_breed_id'	=>	$this->input->post('animal_breed'),
											'in_secondry_breed_id'	=>	$this->input->post('secondary_breed'),
											'in_tertiary_breed_id'	=>	$this->input->post('tertiary_breed'),
											'in_age'				=>	$this->input->post('age'),
											'in_demeanor_id'		=>	$this->input->post('demeanor'),
											'in_neutered_id'		=>	$this->input->post('neutered_spayed'),
											'in_weight'				=>	$this->input->post('weight'),
											'st_crates_well'		=>	$this->input->post('crates'),
											'st_flight_risk'		=>	$this->input->post('flight'),
											'st_barrier_aggressive'	=>	$this->input->post('aggressive'),
											//'st_ok_others'			=>	($this->input->post('other_animals') == 'No')?'N':'Y',
											//'st_ok_explanation'		=>	$this->input->post('other_animals_notes'),
											//'st_micro_chipped'		=>	($this->input->post('chipped_animals')=='Yes')?'Y':'N',
											//'st_micro_chip_comp'	=>	$this->input->post('chipped_animals_id'),
											'st_on_clock'			=>	($this->input->post('on_the_clock')=='Yes')?'Y':'N',
											'dt_date'				=>	($this->input->post('on_the_clock')=='Yes')?date('Y-m-d',strtotime($this->input->post('on_date'))):'',
											'st_medical_issue'		=>	($this->input->post('known_medical_issues')=='Yes')?'Y':'N',
											'st_medical_desc'		=>	$this->input->post('known_medical_issues_notes'),
											'st_profile_story'		=>	$this->input->post('profile_story'),
											
											'st_recent_vaccination' => $this->input->post('recent_vaccns'),
											'dt_vaccination' 		=> ($this->input->post('recent_vaccns')=='Y')?date('Y-m-d',strtotime($this->input->post('vaccin_date'))):'',
											'st_good_with_dogs' 	=> $this->input->post('dogs'),
											'st_good_with_cats' 	=> $this->input->post('other_cats'),
											'st_good_with_kids' 	=> $this->input->post('kids'),
											'st_house_trained' 		=> $this->input->post('house_trained'),
											'st_cvi' 				=> $this->input->post('cvi'),
											'dt_cvi' 				=> ($this->input->post('cvi')=='Y')?date('Y-m-d',strtotime($this->input->post('cvi_date'))):'',
											'st_declawed' 			=> $this->input->post('declawed'),
											
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0,
											'in_progress_status'	=>	$this->input->post('current_status'),
											'in_next_status'		=>	$this->input->post('next_status'),
											
											'st_city'				=>	$this->input->post('city'),
											'st_state'				=>	$this->input->post('state')
										);
			//echo "<pre>";print_r($_POST['set_default']);die;
			$this->load->library('upload');
			
			$date = date('Y-m-d H:i:s');
			
			$photos = array('photo1' => '',
							'photo2' => '',
							'photo3' => '',
							'photo4' => ''
							);
			
				$xaxis = '';
				$yaxis = '';
				$height = '';
				$width = '';
							
			//if($_FILES['photo1']['name'] != '') {
			if($this->input->post('uploaded_photo1') != '') {
				$photos['photo1'] = $this->input->post('uploaded_photo1');//$_FILES['photo1']['name'];
			}
			//if($_FILES['photo2']['name'] != '') {
			if($this->input->post('uploaded_photo2') != '') {
				$photos['photo2'] = $this->input->post('uploaded_photo2');//$_FILES['photo2']['name'];
			}
			//if($_FILES['photo3']['name'] != '') {
			if($this->input->post('uploaded_photo3') != '') {
				$photos['photo3'] = $this->input->post('uploaded_photo3');//$_FILES['photo3']['name'];
			}
			//if($_FILES['photo4']['name'] != '') {
			if($this->input->post('uploaded_photo4') != '') {
				$photos['photo4'] = $this->input->post('uploaded_photo4');//$_FILES['photo4']['name'];
			}
			//echo "<pre>";//print_r($_FILES);print_r($photos);die;
			//print_r($_POST);die;
			$data['add_animal_info'] = $this->organimal_model->add_animal_profile($data['animal_info']);
			$last_id = $this->db->insert_id();//get last inserted id
			
			if(isset($_POST['image_file']) && $_POST['image_file'] !='' ) {
				$explode_file = explode(',',$_POST['image_file']);
				$date = date('Y-m-d H:i:s');
				
				foreach($explode_file as $row) {
					if(trim($row)!='') {
						$file_data = array(	'in_animal_id'	=>	$last_id,
											'st_file_name'	=>	trim($row),
											'st_file_type'	=>	'O',
											'dt_created'	=>	$date,
											'in_deleted'	=>	0
										);
						$this->organimal_model->add_animal_files($file_data);
					}
				}
			}
			
			//Add youtube URLS
			$url_link = array(	'url_link_one'		=>	'',
								'url_link_two'		=>	'',
								'url_link_three'	=>	'',
								'url_link_four'		=>	''
							);
			
			if($this->input->post('url_link_one') != '') {
				$url_link['url_link_one'] = $this->input->post('url_link_one'); 
			}
			if($this->input->post('url_link_two') != '') {
				$url_link['url_link_two'] = $this->input->post('url_link_two'); 
			}
			if($this->input->post('url_link_three') != '') {
				$url_link['url_link_three'] = $this->input->post('url_link_three'); 
			}
			if($this->input->post('url_link_four') != '') {
				$url_link['url_link_four'] = $this->input->post('url_link_four'); 
			}
			
			foreach($url_link as $key => $value) {
				if($value != '') {	
				    $value   =	 str_replace("1.jpg","hqdefault.jpg",$value);
					$data['animal_links'] = array(	'in_animal_id'	=>	$last_id,
													'st_file_name'	=>	$value,
													'st_file_type'	=>	'V',
													'dt_created'	=>	$date
													);
										  
					$data['add_animal_link']	=	$this->organimal_model->add_animal_images($data['animal_links']);
				}
			}
			
			//Resize the image with ratio (4 Thumbnails)
			$thumb = array(	'315x315'	=>	'315X315',
							'140x140'	=>	'140X140',
							'70x70'		=>	'70X70',
							'36x36'		=>	'36X36'
							);
			
			//Adding animal images
			$rotate_angle1	=	0;
			$rotate_angle2	=	0;
			$rotate_angle3	=	0;
			$rotate_angle4	=	0;
			
			$this->load->library('image_lib');
			
			foreach($photos as $key => $row) {
				$config = array();	
				//echo "<pre>";print_r($_POST);die;
				if(trim($row) != '') {
					$count_photo = substr($key,-1);
					if($key == 'photo1') {
						$rotate_angle = $this->input->post('rotate_angle1');
						$xaxis = $this->input->post('x1');
						$yaxis = $this->input->post('y1');
						$height = $this->input->post('h1');
						$width = $this->input->post('w1');
					} else if($key == 'photo2'){
						$rotate_angle = $this->input->post('rotate_angle2');
						$xaxis = $this->input->post('x2');
						$yaxis = $this->input->post('y2');
						$height = $this->input->post('h2');
						$width = $this->input->post('w2');
					} else if($key == 'photo3'){
						$rotate_angle = $this->input->post('rotate_angle3');
						$xaxis = $this->input->post('x3');
						$yaxis = $this->input->post('y3');
						$height = $this->input->post('h3');
						$width = $this->input->post('w3');
					} else if($key == 'photo4'){
						$rotate_angle = $this->input->post('rotate_angle4');
						$xaxis = $this->input->post('x4');
						$yaxis = $this->input->post('y4');
						$height = $this->input->post('h4');
						$width = $this->input->post('w4');
					}
					
					########################		
					
					$config['file_name'] = $row;
					
					//rotate image if 90 or 270 deg rotation 
					//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
					if($rotate_angle > 0 )
					{
						if($rotate_angle == 90)
						{
							$rotate_angle = 270;
						}
						else if($rotate_angle == 270){
							$rotate_angle = 90;
						}
						
						$config['image_library'] = 'gd2';
						$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
						$config['rotation_angle'] = $rotate_angle;
						
						$this->image_lib->initialize($config);
						if ( ! $this->image_lib->rotate()) {
							echo $this->image_lib->display_errors();
						}
					}
					$this->image_lib->clear();
					
					if(isset($_POST['set_default']) && $_POST['set_default'] == $key) {
						$profile_pic = 1;
					} else {
						$profile_pic = 0;
					}
					
					//Cropping Image
					$config['image_library'] = 'gd2';
					$config['source_image']	= $this->config->item('upload').'animal_images/'.$config['file_name'];
					$config['new_image']	= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
					$config['maintain_ratio'] 	= FALSE;
					$config['x_axis'] = $xaxis;
					$config['y_axis'] = $yaxis;					
					$config['width'] = $width;
					$config['height'] = $height;
					//$config['rotation_angle'] = $rotate_angle;
					
					//print_r($config);exit;
					
					$this->image_lib->initialize($config); 
					if ( ! $this->image_lib->crop()) {
						echo $this->image_lib->display_errors();
					}
					$this->image_lib->clear();
						
					
					foreach($thumb as $key => $value) {
						$exp_value = explode('X',$value);
						
						//Resizing Image
						$config['image_library'] 	= 'gd2';
						$config['source_image']		= $this->config->item('upload').'animal_images/cropped_images/'.$config['file_name'];
						$config['new_image']		= $this->config->item('upload').'animal_images/'.$key.'/'.$config['file_name'];
						$config['maintain_ratio'] 	= TRUE;
						$config['width']	 		= $exp_value[0];
						$config['height']			= $exp_value[1];
						
						$this->image_lib->initialize($config);
						$this->image_lib->resize();
						$this->image_lib->clear();
						
						
					}
					
					$data['animal_images'] = array(	'in_animal_id'		=>	$last_id,
													'st_file_name'		=>	$config['file_name'],
													'st_file_type'		=>	'P',
													'in_profile_pic'	=>	$profile_pic,		
													'dt_created'		=>	$date
													);
											  
					$data['add_animal_images']	=	$this->organimal_model->add_animal_images($data['animal_images']);
				}
			}
			//exit;
			//echo "<pre>";print_r($test);echo "<br>".$i; die;
			//Adding animal costs			
			$cost_desc	= array();
			$cost_price = array();
			
			$cost_desc	= $this->input->post('cost_desc');
			$cost_price = $this->input->post('cost_price');
			
			//$cost_description = (!empty($cost_description1) && !empty($cost_description2))?array_merge($cost_description1,$cost_description2):((!empty($cost_description1))?$cost_description1:$cost_description2);
			
			//$cost_price = (!empty($cost_price1) && !empty($cost_price2))?array_merge($cost_price1,$cost_price2):((!empty($cost_price1))?$cost_price1:$cost_price2);
			
			//echo "<pre>";print_r($cost_desc);print_r($cost_price);die;
			
			for($i=0;$i<count($cost_desc);$i++) {
				if(trim($cost_desc[$i]) != '' && trim($cost_price[$i]) != '' && trim($cost_price[$i]) != 0) {
					$data['animal_cost'] = array(	'in_animal_id'	=>	$last_id,
													'st_cost_desc'	=>	$cost_desc[$i],
													'in_amount'		=>	$cost_price[$i],
													'dt_created'	=>	$date
												);
			
					$data['add_animal_cost'] = $this->organimal_model->add_animal_cost($data['animal_cost']);
				}
			}
			
			$social_page_title = array();
			$social_page_url = array();
			
			$social_page_title = $this->input->post('social_page_title');
			$social_page_url = $this->input->post('social_page_url');
			
			for($i=0;$i<count($social_page_title);$i++) {
				if(trim($social_page_title[$i]) != '' && trim($social_page_url[$i]) != '') {
					$data['social_pages'] = array(	'in_animal_id'		=>	$last_id,
													'st_social_page_title'	=>	$social_page_title[$i],
													'st_social_page_url'	=>	$social_page_url[$i],
													'dt_created'		=>	$date
												);
			
					$data['add_social_pages'] = $this->organimal_model->add_social_pages($data['social_pages']);
				}
			}
			
			
			//if($this->input->post('visibility')=='0')
			//{
				//Adding notification
				/*$notification_string = "<div class='timeline-body'><h2><span>";
				$notification_string .= "<img src='##animal_image##' alt='animal_image'>";
				$notification_string .= "</span>";
				$notification_string .= "<a class='profile' href='##org_url##".$this->session->userdata('org_id')."'>";
				$notification_string .= $this->session->userdata('org_name')."</a>";
				$notification_string .= "&nbsp;added a new animal profile for a&nbsp;".$this->input->post('breed_string')." ".$this->input->post('type_string');
				$notification_string .= "&nbsp;named <a class='profile' href='##animal_url##".$last_id."'>";
				$notification_string .= $this->input->post('name')."</a></h2></div>";*/
				
				$data['notification'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
												'in_animal_id'			=>	$last_id,
												'in_type'				=>	2,
												'in_modified_by'		=>	$this->session->userdata('userid'),
												'dt_created'			=>	date('Y-m-d H:i:s'),
												'in_deleted'			=>	0
											);
											
				$notification = $this->organimal_model->add_notification($data['notification']);
				
				//Sending Email to all organization users 
				$data['get_emails'] = $this->common_model->get_org_users_email($this->session->userdata('org_id'));
				//echo "<pre>";print_r($data['get_emails']);die;
				
				$email_add = array();
				if(!empty($data['get_emails'])) {
					foreach($data['get_emails'] as $row) {
						$email_add[] = $row['st_email'];
					}
				}
				
				//Pushing login user email to array
				array_push($email_add,$this->session->userdata('email'));
				//print_r($data['get_emails']); die;
				$this->load->library('email');
				/*$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
				
				$this->email->to($data['get_emails']);
				
				if($_SERVER['HTTP_HOST']!='crystal9') {
					$this->email->bcc($this->config->item('bcc_email_id'));
				}*/
				
				//Getting email body
				$email_body = $this->common_model->get_email_containt('19');
				$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
				
				//$this->email->subject(str_replace('##organization_name##',$this->session->userdata('org_name'),$email_body[0]['st_email_subject']));
				
				$patterns = array('%##url##%','%##user_display_name##%','%##animal_profile_display_name##%','%##organization_name##%');
				$replacements = array(base_url(),$this->session->userdata('user_name'),$this->input->post('name'),$this->session->userdata('org_name'));
				
				$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
				//$this->email->message($content);
				//$this->email->send();
				//echo $content;die;
				$to = $email_add;
				//echo "<pre>";print_r($to);die;
				$subject = str_replace('##organization_name##',$this->session->userdata('org_name'),$email_body[0]['st_email_subject']);
				$content = str_replace('##DONATION##',$donation,$content);
				$message = $content;
				$category  =    $email_body[0]['st_category'];
				$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
			
			//}
			//End of sending email
			
			$this->session->set_flashdata('message', 'Animal profile added successfully.');
			redirect(base_url().'org-animal');
		}
		
	}
	
	# *******************************************************************************************	
	#	Function	:	animal_privacy_setting	
	#	Purpose		:	For managing animal privacy setting
	# *******************************************************************************************
	public function animal_privacy_setting() {
		$data = array();
		$animal_id = '0';
		
		$data['get_animal_setting'] = $this->organimal_model->get_animal_setting($this->session->userdata('org_id'));
		
		if(!empty($data['get_animal_setting'])) {
			$data['animal_setting_id'] = $data['get_animal_setting']['in_animal_setting_id'];
			
			$data['general_setting'] = ($data['get_animal_setting']['st_general_setting']!='')?unserialize($data['get_animal_setting']['st_general_setting']):'';
			
			$data['medical_setting'] = ($data['get_animal_setting']['st_medical_setting']!='')?unserialize($data['get_animal_setting']['st_medical_setting']):'';
			
			$data['transport_setting'] = ($data['get_animal_setting']['st_transport_setting']!='')?unserialize($data['get_animal_setting']['st_transport_setting']):'';
			
			$data['foster_home_setting'] = ($data['get_animal_setting']['st_foster_home_setting']!='')?unserialize($data['get_animal_setting']['st_foster_home_setting']):'';
		}
		
		if($this->input->post('frm_action') == 'frm_post') {
			(isset($_POST['general']))?$general = serialize($_POST['general']):$general = '';
			(isset($_POST['medical']))?$medical = serialize($_POST['medical']):$medical = '';
			(isset($_POST['transport']))?$transport = serialize($_POST['transport']):$transport = '';
			(isset($_POST['foster_home']))?$foster_home = serialize($_POST['foster_home']):$foster_home = '';
			
			$data['animal_setting'] = array('in_animal_id'			=> $animal_id,
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> $general,
											'st_medical_setting'	=> $medical,
											'st_transport_setting'	=> $transport,
											'st_foster_home_setting'=> $foster_home,
											'dt_created'			=> date('Y-m-d H:i:s'),
											'dt_modified'			=> date('Y-m-d H:i:s')
											);
			if($this->input->post('animal_setting_id') == '') {	
				$data['success'] = $this->organimal_model->add_animal_setting($data['animal_setting']);
			} else {
				$data['success'] = $this->organimal_model->update_animal_setting($this->session->userdata('org_id'),$data['animal_setting']);
			}
			
			if($data['success'] == 1) {
				$this->session->set_flashdata('success_message', 'Animal privacy settings saved successfully.');
				redirect(base_url().'org_animal/animal_privacy_setting');
			} else {
				$this->session->set_flashdata('err_message', 'Sorry, There is an error in saving animal privacy settings.');
				redirect(base_url().'org_animal/animal_privacy_setting');
			}
		}
		
		$this->load->view('animal-profile-privacy-settings',$data);
	}
	
	
	public function delete_contact() {
		 if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = $this->organimal_model->delete_cont($this->input->post('contact_id'));
		return $data;
	}
	
	public function get_animal() {
		$data = array();
		$data['animal'] = $this->organimal_model->get_all_animals();
		//echo "<pre>";print_r($data['animal']);die;
		
					foreach($data['animal'] as $row) {	
										$data['animal_setting'] = array('in_animal_id'			=> $row['in_animal_id'],
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> 'a:23:{i:0;s:6:"gender";i:1;s:6:"pbreed";i:2;s:6:"sbreed";i:3;s:6:"tbreed";i:4;s:3:"age";i:5;s:6:"weight";i:6;s:8:"demeanor";i:7;s:7:"cstatus";i:8;s:7:"nstatus";i:9;s:4:"city";i:10;s:5:"state";i:11;s:5:"clock";i:12;s:5:"where";i:13;s:10:"quarantine";i:14;s:12:"shelter_time";i:15;s:15:"shelter_contact";i:16;s:8:"comments";i:17;s:5:"files";i:18;s:11:"photo_video";i:19;s:6:"pstory";i:20;s:4:"cost";i:21;s:6:"social";i:22;s:7:"birdsex";}',
											'st_medical_setting'	=> 'a:9:{i:0;s:8:"neutered";i:1;s:8:"rvaccine";i:2;s:8:"hvaccine";i:3;s:9:"fecaltest";i:4;s:8:"bvaccine";i:5;s:12:"microchipped";i:6;s:7:"surgery";i:7;s:5:"dlhhp";i:8;s:13:"medical_issue";}',
											'st_transport_setting'	=> 'a:6:{i:0;s:5:"other";i:1;s:4:"same";i:2;s:7:"trained";i:3;s:4:"kids";i:4;s:8:"declawed";i:5;s:10:"fh_comment";}',
											'st_foster_home_setting'=> 'a:6:{i:0;s:5:"other";i:1;s:4:"same";i:2;s:7:"trained";i:3;s:4:"kids";i:4;s:8:"declawed";i:5;s:10:"fh_comment";}',
											'dt_created'			=> date('Y-m-d H:i:s'),
											'dt_modified'			=> date('Y-m-d H:i:s')
											);					
						$data['add_animal'] = $this->organimal_model->add_animal_setting($data['animal_setting']);
					}
		
	}
	
	public function validate_animal_profile_transfer()
	{
		$animal_id =	$this->input->post('animal_id');
		//echo $animal_id;
		$transfer_data = $this->organimal_model->validate_animal_profile_transfer($animal_id);
		print_r($transfer_data);
		exit;
	}
	
	public function fb_post() {
		//Sending facebook wall posts to users
		//if(!empty($user_ids)) {
			// $data['get_fb_user'] = $this->organimal_model->check_fb_user($user_ids);
			
			 $fbconfig = array();
			 
			 $this->config->load('facebook');			 
			 $fbconfig['appid' ]  = $this->config->item('appId');
			 $fbconfig['secret']  = $this->config->item('secret');
			 $fbconfig['baseurl'] = $this->config->item('baseurl');
			 
			 $this->load->library('facebook');	
			 $facebook = new Facebook(array(
				'appId' => $fbconfig['appid'],
				'secret' => $fbconfig['secret'],
				'cookie' => true,
				));
			
			$user = $facebook->getUser();
			echo $user.' '.$facebook->getAccessToken();
			//if(!empty($data['get_fb_user'])) {
				//foreach($data['get_fb_user'] as $row) {
				if($user)
				{
					try {
					//$publishStream = $facebook->api("/".$row['st_facebook_uid']."/feed", 'post', array(
						$publishStream = $facebook->api("/me/feed", 'post', array(
						
							'message' => trim('Test facebook Post111'),
							'access_token' => $facebook->getAccessToken(),
							'link'    => 'https://app.doobert.com',
							'picture' => base_url().'assets/img/doobert-fb-logo.png',
							'name'    => 'Doobert',
							'description'=> 'animal rescue made simple.'
							)
							
						);
						echo 'Successfuly sent to fb wall !!! '.$facebook->getAccessToken();
					} catch (FacebookApiException $e) {
						print_r($d);
					}
				}
				//}
			//}
		//}
		//End Sending posts to users
	}
	
	/*public function manage_animal_transfer()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$animal_type = $this->organimal_model->get_animal_types();
		$org_id     = $this->session->userdata('org_id');	
		if($this->input->post('manage'))
		{
			$prov   = array();
			$accept = array();
			foreach($animal_type as $v)
			{
				$val1='check_prov_'.$v['in_animal_type_id'];
			//	$val =;
				if(isset($_POST[$val1])){
					array_push($prov,$v['in_animal_type_id']);
				}
				$val2 ="check_accept_".$v['in_animal_type_id'];
				if(isset($_POST[$val2])){
					array_push($accept,$v['in_animal_type_id']);	
				}
			}
			//echo 'testsssdddd';
			//print_r($_POST);
			//exit;
			//print_r($prov);
			$is_present = $this->organimal_model->animal_transfers_present($org_id);
			
			if($is_present){ 
				//update
			//	echo "in update";
			$data['animal_data']=array(
							'in_org_id'            => $org_id,
							'st_prov_animal_type'  => serialize($prov),
							'st_accpt_animal_type' => serialize($accept),
							'st_provied_other'	   => trim($this->input->post('other_animal_provide')),
							'st_accept_other'	   => trim($this->input->post('other_animal_accept')),	
							'dt_created'	       => $is_present[0]['dt_created'],
							'dt_modified'		   => date('Y-m-d H:i:s'),
							'in_public_flag'       => 0		
			);
			$this->organimal_model->update_animal_transfer($data['animal_data'],$is_present[0]['in_animal_transfer_id']);
			}else {
			 //insert
			// echo "in insert";
			 			$data['animal_data']=array(
						'in_org_id'            => $org_id,
						'st_prov_animal_type'  => serialize($prov),
						'st_accpt_animal_type' => serialize($accept),
						'st_provied_other'	   => trim($this->input->post('other_animal_provide')),
						'st_accept_other'	   => trim($this->input->post('other_animal_accept')),
						'dt_created'	       => date('Y-m-d H:i:s'),
						'dt_modified'		   => date('Y-m-d H:i:s'),	
			);
			
			$this->organimal_model->add_animal_transfers($data['animal_data']);
			}
			
			$this->session->set_flashdata('success','The animal transfer is updated.');
			
				if($this->input->post('flag') && $this->input->post('flag')=='true'){
					$this->organimal_model->set_organization_public($org_id);
					redirect(base_url().'organization_privacy_setting');				
				}else {
				redirect(base_url().'org-animal/manage-animal-transfer');
				}
			//die;
				
		}
		
		$data['animal_types']    = $animal_type;
		$data['animal_transfer'] = $this->organimal_model->get_animal_transfer($org_id);
		$data['org_id']          = $org_id;			
		$this->load->view('manage-animal-transfer',$data);	
	}*/
	
	public function manage_animal_transfer()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$trns_dog_out=$trns_cat_out=$trns_other_out=0;
		$trns_dog_in=$trns_cat_in=$trns_other_in=0;
		$tr_type_out = 1;
		$tr_type_in = 1;
		$trns_dog_in=$trns_cat_in=$trns_other_in=0;
		
		$animal_type = $this->organimal_model->get_animal_types($animal_type=array('Dog','Cat'));
		$all_animal_type = $this->organimal_model->get_animal_types();
		$data['all_animal_type'] = $all_animal_type;
		$org_id     = $this->session->userdata('org_id');
			
		$dog_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',1);
		if(count($dog_transfer_out)>0)
		{	
			$trns_dog_out = $dog_transfer_out['in_animal_no'];
		} /*else {
			$trns_dog_out = $this->organimal_model->get_total_animal_transfer($org_id,'Dog');
		}*/
		
		$cat_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',1);
		if(count($cat_transfer_out)>0)
		{	
			$trns_cat_out = $cat_transfer_out['in_animal_no'];
		} /*else {
			$trns_cat_out = $this->organimal_model->get_total_animal_transfer($org_id,'Cat');
		}*/	
		
		$other_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Other',1);
		if(count($other_transfer_out)>0)
		{	
			$trns_other_out = $other_transfer_out['in_animal_no'];
			//$tr_type_out = $other_transfer_out['in_automatic_type'];
		} /*else {
			$trns_other_out = $this->organimal_model->get_total_animal_transfer($org_id,'Other');
		}*/
		
		
		
		if(count($other_transfer_out)>0 || count($cat_transfer_out)>0 || count($dog_transfer_out)>0)
		{
			$tr_type_out = $other_transfer_out['in_automatic_type'];
		}

		if($tr_type_out==2 || (count($other_transfer_out)<=0 || count($cat_transfer_out)<=0 || count($dog_transfer_out)<=0))
		{
			$data['show_auto_flag'] = 1;
			$data['auto_cat_out'] = $this->organimal_model->get_total_animal_transfer($org_id,'Cat');
			$data['auto_dog_out'] = $this->organimal_model->get_total_animal_transfer($org_id,'Dog');
			$data['auto_other_out'] = $this->organimal_model->get_total_animal_transfer($org_id,'Other');
		}	
			
		
		
		$dog_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',2);
		if(count($dog_transfer_in)>0)	
			$trns_dog_in = $dog_transfer_in['in_animal_no'];	
		
		$cat_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',2);
		if(count($cat_transfer_in)>0)
			$trns_cat_in = $cat_transfer_in['in_animal_no'];	
		
		$other_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Other',2);
		if(count($other_transfer_in)>0)
			$trns_other_in = $other_transfer_in['in_animal_no'];
		
		$animal_transfer_detail = $this->organimal_model->get_animal_transfer_detail($org_id);
		
		$data['animal_transfer_detail'] = $animal_transfer_detail;
		
		if(count($animal_transfer_detail)>0)
		{
			$tr_type_in = 2;
		}	
		
		$data['trns_dog_out'] = $trns_dog_out;
		$data['trns_cat_out'] = $trns_cat_out;
		$data['trns_other_out'] = $trns_other_out;
		$data['trns_type_out'] = $tr_type_out;
		
		$data['trns_dog_in'] = $trns_dog_in;
		$data['trns_cat_in'] = $trns_cat_in;
		$data['trns_other_in'] = $trns_other_in;
		$data['trns_type_in'] = $tr_type_in;
		
		
		if($this->input->post('manage'))
		{
			if($this->input->post('transfer_out_type')==2)
			{	
				if($this->input->post('tx_dog_out_manual') || $this->input->post('tx_dog_out_manual')==0)
				{
					$tx_dog_out = array('st_animal_name'=>'Dog','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_dog_out_manual'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>2,'in_transfer_type'=>1);
					$dog_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',1);
					if(count($dog_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_dog_out,$dog_transfer_out['in_id']);
					} else {
						$tx_dog_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_dog_out);
					}
				}		
		
				if($this->input->post('tx_cat_out_manual') || $this->input->post('tx_cat_out_manual')==0)
				{
					$tx_cat_out = array('st_animal_name'=>'Cat','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_cat_out_manual'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>2,'in_transfer_type'=>1);
					$cat_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',1);
					if(count($cat_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_cat_out,$cat_transfer_out['in_id']);	
					} else {
						$tx_cat_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_cat_out);
					}
				}
			
				if($this->input->post('tx_other_out_manual') || $this->input->post('tx_other_out_manual')==0)
				{
					$tx_other_out = array('st_animal_name'=>'Other','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_other_out_manual'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>2,'in_transfer_type'=>1);
					$other_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Other',1);
					if(count($other_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_other_out,$other_transfer_out['in_id']);	
					} else {
						$tx_other_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_other_out);
					}
				}
			}
			
			if($this->input->post('transfer_out_type')==1)
			{
					$total_dog = $this->organimal_model->get_total_animal_transfer($org_id,'Dog');
					$tx_dog_out = array('st_animal_name'=>'Dog','in_organization_id'=>$org_id,'in_animal_no'=>$total_dog,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
					$dog_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',1);
					if(count($dog_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_dog_out,$dog_transfer_out['in_id']);
					} else {
						$tx_dog_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_dog_out);
					}		
					
					$total_Cat = $this->organimal_model->get_total_animal_transfer($org_id,'Cat');	
					$tx_cat_out = array('st_animal_name'=>'Cat','in_organization_id'=>$org_id,'in_animal_no'=>$total_Cat,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
					$cat_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',1);
					if(count($cat_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_cat_out,$cat_transfer_out['in_id']);	
					} else {
						$tx_cat_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_cat_out);
					}
					
					$total_other = $this->organimal_model->get_total_animal_transfer($org_id,'Other');
					$tx_other_out = array('st_animal_name'=>'Other','in_organization_id'=>$org_id,'in_animal_no'=>$total_other,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
					$other_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Other',1);
					if(count($other_transfer_out)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_other_out,$other_transfer_out['in_id']);	
					} else {
						$tx_other_out['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_other_out);
					}
				
			}
			
			if($this->input->post('transfer_in_type')==1)
			{	
				if($this->input->post('tx_dog_in') || $this->input->post('tx_dog_in')==0)
				{
					$tx_dog_in = array('st_animal_name'=>'Dog','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_dog_in'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>0,'in_transfer_type'=>2);
					
					$dog_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',2);
					if(count($dog_transfer_in)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_dog_in,$dog_transfer_in['in_id']);
					} else {
						$tx_dog_in['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_dog_in);
					}
				}		
		
				if($this->input->post('tx_cat_in') || $this->input->post('tx_cat_in')==0)
				{
					$tx_cat_in = array('st_animal_name'=>'Cat','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_cat_in'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>0,'in_transfer_type'=>2);
					$cat_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',2);
					if(count($cat_transfer_in)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_cat_in,$cat_transfer_in['in_id']);	
					} else {
						$tx_cat_in['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_cat_in);
					}
				}
			
				if($this->input->post('tx_other_in') || $this->input->post('tx_other_in')==0)
				{
					$tx_other_in = array('st_animal_name'=>'Other','in_organization_id'=>$org_id,'in_animal_no'=>$this->input->post('tx_other_in'),'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>0,'in_transfer_type'=>2);
					$other_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Other',2);
					if(count($other_transfer_in)>0)
					{	
						$this->organimal_model->update_tranfer_animal($tx_other_in,$other_transfer_in['in_id']);	
					} else {
						$tx_other_in['dt_created'] = date('Y-m-d H:i:s');
						$this->organimal_model->insert_tranfer_animal($tx_other_in);
					}
				}
		
				if($this->input->post('total_count')>0)
				{
					for($i=1;$i<=$this->input->post('total_count');$i++)
					{
						if($this->input->post('transfer_in_id'.$i)!='0')
						{	
							$other_transfer_in = $this->organimal_model->update_tranfer_animal_detail(array('in_deleted'=>1,'dt_modified'=>date('Y-m-d H:i:s')),$this->input->post('transfer_in_id'.$i));	
						}
					}
				}	
			}
			
			if($this->input->post('transfer_in_type')==2)
			{	
				
				$tx_dog_in = array('in_deleted'=>1,'dt_modified'=>date('Y-m-d H:i:s'));
				$dog_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Dog','2');
				if(count($dog_transfer_in)>0)
				{	
					$this->organimal_model->update_tranfer_animal($tx_dog_in,$dog_transfer_in['in_id']);
				}		
		
				$tx_cat_in = array('in_deleted'=>1,'dt_modified'=>date('Y-m-d H:i:s'));
				$cat_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Cat','2');
				if(count($cat_transfer_in)>0)
				{	
					$this->organimal_model->update_tranfer_animal($tx_cat_in,$cat_transfer_in['in_id']);	
				}
				
				$tx_other_in = array('in_deleted'=>1,'dt_modified'=>date('Y-m-d H:i:s'));
				$other_transfer_in = $this->organimal_model->get_total_transfer_setting($org_id,'Other','2');
				if(count($tx_other_in)>0)
				{	
					$this->organimal_model->update_tranfer_animal($tx_other_in,$other_transfer_in['in_id']);	
				}
				
				if($this->input->post('total_count')>0)
				{
					for($i=1;$i<=$this->input->post('total_count');$i++)
					{
						if($this->input->post('seltype'.$i))
							$animal_name = $this->input->post('seltype'.$i);
						else 
							$animal_name = '';
						if($this->input->post('txtcount'.$i))	
							$total_count = $this->input->post('txtcount'.$i);
						else 
							$total_count = '';
						if($this->input->post('selage'.$i))	
							$age_type 	 = $this->input->post('selage'.$i);
						else 
							$age_type 	 = '';	
						if($this->input->post('selweight'.$i))
							$weight_type = $this->input->post('selweight'.$i);
						else 
							$weight_type = '';
						
						/*if($this->input->post('transfer_in_id'.$i))
							$ids = $this->input->post('transfer_in_id'.$i);
						else 
							$ids = '';*/
						//if($animal_name!='' && $total_count!='' && $age_type!='' && $weight_type!='')
						if($animal_name!='' && $total_count!='' && $age_type!='')	
						{
									$ani_tr_detail_arr = array('st_animal_type'		=> $animal_name,
															  'in_organization_id'	=> $org_id,
															  'in_animal_count'		=> $total_count,
															  'st_age'				=> $age_type,
															  'st_weight'			=> $weight_type,
															  'dt_modified'			=> date('Y-m-d H:i:s')
															  );	
								if($this->input->post('transfer_in_id'.$i)=='0')
								{
									$ani_tr_detail_arr['dt_created']	= date('Y-m-d H:i:s');
									$this->organimal_model->insert_tranfer_animal_detail($ani_tr_detail_arr);
								} else {
									$this->organimal_model->update_tranfer_animal_detail($ani_tr_detail_arr,$this->input->post('transfer_in_id'.$i));
								}	
						}	
					}	
				}
				
				/*$total_ani_detail = count($this->input->post('animaltype'));
				if($total_ani_detail>0)
				{
					$animal_type_array     = $this->input->post('animaltype');
					$total_count_array     = $this->input->post('txtcount');
					$age_type_array 	   = $this->input->post('agetype');
					$weight_type_array 	   = $this->input->post('weighttype');
					$transfer_in_id_array  = $this->input->post('transfer_in_id');
					for($i=0;$i<$total_ani_detail;$i++)
					{
						$animal_name = $animal_type_array[$i];
						$total_count = $total_count_array[$i];
						$age_type 	 = $age_type_array[$i];
						$weight_type = $weight_type_array[$i];
						$in_id 		 = $transfer_in_id_array[$i];
						if($animal_name!='' && $total_count!='' && $age_type!='' && $weight_type!='')
						{
									$ani_tr_detail_arr = array('st_animal_type'		=> $animal_name,
															  'in_organization_id'	=> $org_id,
															  'in_animal_count'		=> $total_count,
															  'st_age'				=> $age_type,
															  'st_weight'			=> $weight_type,
															  'dt_modified'			=> date('Y-m-d H:i:s')
															  );	
								if($in_id=='0')
								{
									$ani_tr_detail_arr['dt_created']	= date('Y-m-d H:i:s');
									$this->organimal_model->insert_tranfer_animal_detail($ani_tr_detail_arr);
								} else {
									$this->organimal_model->update_tranfer_animal_detail($ani_tr_detail_arr,$in_id);
								}	
						}	
					}	
				}*/	
			
			}
			$this->session->set_flashdata('success','Manage animal transfer settings updated successfully.');
			redirect(base_url().'org-animal/manage-animal-transfer');
			/*$this->session->set_flashdata('success','The animal transfer is updated.');
				if($this->input->post('flag') && $this->input->post('flag')=='true'){
					$this->organimal_model->set_organization_public($org_id);
					redirect(base_url().'organization_privacy_setting');				
				}else {
				redirect(base_url().'org-animal/manage-animal-transfer');
				}*/
		}
		
		$data['animal_types']    = $animal_type;
		$data['animal_transfer'] = $this->organimal_model->get_animal_transfer($org_id);
		$data['animal_weight']   = $this->common_model->get_animal_weight();
		$data['animal_age']      = $this->common_model->get_animal_age();
		$data['org_id']          = $org_id;
		
		$this->load->view('manage-animal-transfer',$data);	
	}
	
	public function rm_ani_tr()
	{
		
		$other_transfer_in = $this->organimal_model->update_tranfer_animal_detail(array('in_deleted'=>1,'dt_modified'=>date('Y-m-d H:i:s')),$this->input->post('in_id'));
	}
	
	public function get_animal_avaliable_transfer()
	{
		$animal_type = $this->organimal_model->get_animal_types($animal_type=array('Dog','Cat'));
	}
	
	public function check_organization_profile()
	{
		$org_id =$this->input->post('org_id');
		$data['result'] = $this->organimal_model->check_organization_privicy($org_id);
		echo json_encode($data);
	}
	
	public function quick_add_animal()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		/*$transport_id    = $this->session->userdata('transport_id');
		echo $transport_id ; die();*/
		
		/*$quick_call_from = $this->session->userdata('quick_call_from');
			$transport_id    = $this->session->userdata('transport_id');
			echo "<br> quick =".$quick_call_from;
			echo "<br> transport =".$transport_id;
			die(); */
		$quick_call_from ='';
		if($this->session->userdata('quick_call_from')){	
		$quick_call_from = $this->session->userdata('quick_call_from');
		$transport_id    = $this->session->userdata('transport_id');
		$this->session->unset_userdata('quick_call_from');
		}
		//echo "<br> quick call from :".$quick_call_from;	
		//$this->session->unset_userdata('quick_call_from');
		if(!empty($quick_call_from) && $quick_call_from=='transport')
		{
			$data['quick_call_from'] = $this->config->item('base_url')."add-animal-transport/".$transport_id;
			$data['cnt'] = 1;
		} else {
			$data['quick_call_from'] = $this->config->item('base_url')."org_animal/animals_in_my_organization/";
			$data['cnt']= 0;
		}
		$data['animal_type'] = $this->organimal_model->get_animal_all_type();
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		
		if($this->input->post('frm_action') == 'add_animal')
		{
			$messageFlag=0;				
			if(isset($_POST['records']) && !empty($_POST['records']))
			{
				for($i=0;$i<=$this->input->post('records'); $i++)
				{
					$animal_name   = 'quick-animal-name-'.$i;	
					$animal_type   = 'quick-type-'.$i;
					$animal_breed  = 'quick-breed-'.$i;
					$animal_gender = 'quick-gender-'.$i;
					$animal_travel = 'quick-travel-'.$i;
					$animal_cvi	   = 'quick-cvi-'.$i;
					$animal_weight = 'quick-animal-weight-'.$i;
					
					$atype='';
					if($this->input->post($animal_type))
					$atype = $this->input->post($animal_type);
					
					$abreed='';
					if($this->input->post($animal_breed))
					$abreed = $this->input->post($animal_breed);
					
					$agender='';
					if($this->input->post($animal_gender)){
						if($this->input->post($animal_gender)=='Male')
						$agender = 'M';
						else if($this->input->post($animal_gender)=='Female')
						$agender = 'F';
					}
					
					$atravel='';
					if($this->input->post($animal_travel))
					$atravel = implode(',',$_POST[$animal_travel]);
					
					$acvi ='';
					if($this->input->post($animal_cvi))
					$acvi = $this->input->post($animal_cvi);
					
					$aweight ='';
					if($this->input->post($animal_weight))
					$aweight = $this->input->post($animal_weight);
					 
					
					if(isset($_POST[$animal_name]) && $_POST[$animal_name] != '')
					{
						$messageFlag++;
						$demid	= $this->organimal_model->chk_demeanor('Unknown',$_POST[$animal_type]);
						
						$data['animal_info'] = array(	'in_organization_id'	=>	$this->session->userdata('org_id'),
														'st_animal_name'		=>	$_POST[$animal_name],
														'st_gender'				=>	$agender,
														'in_primary_breed_id'	=>	$abreed,	
														'in_animal_type_id'     =>	$atype,
														'st_travel_with'		=>	$atravel,
														'st_cvi'				=>	$acvi,
														'in_neutered_id'		=>	3,
														'in_demeanor_id'		=>  $demid[0]['in_demeanor_id'],
														'in_created_by'			=>	$this->session->userdata('userid'),
														'dt_created'			=>	date('Y-m-d H:i:s'),
														'st_city'				=>  $data['org_details']['st_city'],
														'st_state'				=>	$data['org_details']['st_state'],
														'in_status'				=>	0,
														'in_weight'				=>  $aweight,
												);
							
							
							 if(!empty($data['animal_info']))
							{
								$profile_id[]	= $this->organimal_model->add_animal_profile($data['animal_info']);
								  //$profile_id	= $this->organimal_model->add_animal_profile($data['animal_info']);
									$last_id = $this->db->insert_id();//get last inserted id 	
								 $arraygen=array('gender','pbreed','sbreed','tbreed','age','weight','demeanor','cstatus','nstatus','city','state','clock','where','quarantine','shelter_time','shelter_contact','comments','files','photo_video','pstory','cost','social','birdsex');	
								  $general = serialize($arraygen);
					
								  $arraymed = array('neutered','rvaccine','hvaccine','fecaltest','bvaccine','microchipped','surgery','dlhhp','medical_issue','medical_comments');					
								  $medical = serialize($arraymed);
					
								  $arraytran = array('crates','frisk','baggresive','recent_vaccine','cvi','current_zip','desired_zip','available_transfer','tr_date','travel','tr_comment');
								  $transport = serialize($arraytran);
					
								  $arrayfoster = array ('other','same','trained','kids','declawed','fh_comment');
								  $foster = serialize($arrayfoster);
								  $date = date('Y-m-d H:i:s');
								  $animalchkset    = array('in_animal_id'			=> $last_id,
														 'in_user_id'			=> $this->session->userdata('userid'),
											             'in_organization_id'	=> $this->session->userdata('org_id'),
														'st_general_setting'	=> $general,
														'st_medical_setting'	=> $medical,
														'st_transport_setting'	=> $transport,
														'st_foster_home_setting'=> $foster,
														'dt_created'			=> $date,
														'dt_modified'			=> $date
															);
										$this->organimal_model->add_animal_setting($animalchkset);		
							}
 					}
				}
				if(isset($messageFlag) && $messageFlag > 0){
				$this->session->set_flashdata('quick_upload_success','Animal profiles have been added successfully.');
				}
			}
		
			$transport_id    = $this->session->userdata('transport_id');
			$flag = $this->input->post('flag');	
			//die(); */
			if($flag == 1)
			{  
				//$this->session->set_flashdata('quick_upload_success',' Animal profiles have been uploaded successfully.');
				redirect($this->config->item('base_url')."add-animal-transport/".$transport_id);
			}
			//$this->session->set_flashdata('quick_upload_success',' Animal profiles have been uploaded successfully.');
			redirect($this->config->item('base_url')."org_animal/animals_in_my_organization/");
		}
			
		$this->load->view('quick-add-animal',$data);	
		
	}
	
	public function set_transfer_yes()
	{
		$animal_id   = $this->input->post('animal_id');
		$result      = $this->organimal_model->set_transfer_yes($animal_id);
		$this->update_animal_transfer();
		$data['result']=1;
		$data['privacy']=0;
		$this->generate_fb_animal($animal_id,'TRANSFER ONLY');
		//$this->session->set_flashdata('profile_upload_success','Record update succefully');
		echo json_encode($data);
	}
	public function set_transfer_No()
	{
		$animal_id   = $this->input->post('animal_id');
		$result      = $this->organimal_model->set_transfer_No($animal_id);
		$this->update_animal_transfer();
		$data['result']=1;
		//$this->session->set_flashdata('profile_upload_success','Record update succefully');
		echo json_encode($data);
	}
	
	public function update_animal_transfer()
	{
		$org_id     = $this->session->userdata('org_id');
		$total_dog = $this->organimal_model->get_total_animal_transfer($org_id,'Dog');
		$tx_dog_out = array('st_animal_name'=>'Dog','in_organization_id'=>$org_id,'in_animal_no'=>$total_dog,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
		$dog_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Dog',1);
		if(count($dog_transfer_out)>0)
		{	
			if($dog_transfer_out['in_automatic_type']==1)
			{	
				$this->organimal_model->update_tranfer_animal($tx_dog_out,$dog_transfer_out['in_id']);
			}	
		} else {
			$tx_dog_out['dt_created'] = date('Y-m-d H:i:s');
			$this->organimal_model->insert_tranfer_animal($tx_dog_out);
		}		
					
		$total_Cat = $this->organimal_model->get_total_animal_transfer($org_id,'Cat');	
		$tx_cat_out = array('st_animal_name'=>'Cat','in_organization_id'=>$org_id,'in_animal_no'=>$total_Cat,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
		$cat_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Cat',1);
		if(count($cat_transfer_out)>0)
		{	
			if($cat_transfer_out['in_automatic_type']==1)
			{	
				$this->organimal_model->update_tranfer_animal($tx_cat_out,$cat_transfer_out['in_id']);
			}	
		} else {
			$tx_cat_out['dt_created'] = date('Y-m-d H:i:s');
			$this->organimal_model->insert_tranfer_animal($tx_cat_out);
		}
					
		$total_other = $this->organimal_model->get_total_animal_transfer($org_id,'Other');
		$tx_other_out = array('st_animal_name'=>'Other','in_organization_id'=>$org_id,'in_animal_no'=>$total_other,'dt_modified'=>date('Y-m-d H:i:s'),'in_automatic_type'=>1,'in_transfer_type'=>1);
		$other_transfer_out = $this->organimal_model->get_total_transfer_setting($org_id,'Other',1);
		if(count($other_transfer_out)>0)
		{	
			if($other_transfer_out['in_automatic_type']==1)
			{	
				$this->organimal_model->update_tranfer_animal($tx_other_out,$other_transfer_out['in_id']);
			}		
		} else {
			$tx_other_out['dt_created'] = date('Y-m-d H:i:s');
			$this->organimal_model->insert_tranfer_animal($tx_other_out);
		}
	}
	public function bulk_action()
	{
		$option = $this->input->post('option');
		$values = $this->input->post('values');
		$data['result'] = $this->organimal_model->bulk_action($option , $values);
		echo json_encode($data);
	}
	public function save_values()
	{
		$values = $this->input->post('values');
		if(!empty($values))
		{
			$this->organimal_model->set_aviliable_yes($values);
			if($this->session->userdata('values')){
				$this->session->unset_userdata('values');
			}
			$this->session->set_userdata('values',$values);
			$data['val']=$values[0];
		}else {
			$data['val']=0;
		}
		echo json_encode($data);
	}
	
	public function check_public_present()
	{
		$values =$this->input->post('values');
		$data['result']=0;
		if(!empty($values)){
			$data['result'] = $this->organimal_model->check_public_present($values);
		}
		echo json_encode($data); 
	}
	
	/** Added By Sadique 29-1-18 ***/
	
	public function archive_animals($sort=false,$order=false,$limit=false) {
		$this->session->unset_userdata('quick_call_from');
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
                
                if(!$sort)
                    $sort='in_animal_id';
		
		if(!$order)
                    $order = 'desc';
				
		
		 $verify_in_animal_id =  $this->uri->segment(3);
			
		 /** Added By Nirav ***/		
		  if(empty($verify_in_animal_id))
		  {
				 $this->session->unset_userdata('status');
				$this->session->unset_userdata('search_text');
		  }		
		
                
       if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0'; 
		
		$data = array();
                $data['progress_status'] = $this->common_model->get_progress_status(); 
                
                if(isset($_POST['search_module'])){
                    $pstatus          =   $this->input->post('select_status');
                    $psearch_text     =   trim($this->input->post('module_search_text'));
                    
                    $session_data   = array(
                                                'status'        =>  $pstatus,
                                                'search_text'   =>  $psearch_text
                                            );
                    $this->session->set_userdata($session_data);
                }
                $status       =   $this->session->userdata('status');
                $search_text         =   $this->session->userdata('search_text');
        
		$config = array();
		
		$this->load->library('pagination');
		
		$config["base_url"] 		= base_url().'org_animal/archive_animals/'.$sort.'/'.$order;
		
		$config["per_page"]	 	    =  $this->config->item('records_per_page');
               // $config["per_page"]	 	= 3;
		//$config["uri_segment"] 		= $this->uri->segment(5);
                $config['cur_page'] 		= $limit;
                
                
		$config['first_link'] 		= FALSE;
		$config['last_link'] 		= FALSE;
		
		$config['full_tag_open'] 	= '<ul class="pagination">';
		$config['full_tag_close'] 	= '</ul>';
		
		$config['prev_link'] 		= 'Prev';
		$config['prev_tag_open'] 	= '<li class="prev">';
		$config['prev_tag_close'] 	= '</li>';
		
		$config['next_link'] 		= 'Next';
		$config['next_tag_open'] 	= '<li class="next">';
		$config['next_tag_close'] 	= '</li>';
		
		$config['num_tag_open'] 	= '<li>';
		$config['num_tag_close'] 	= '</li>';
		
		$config['cur_tag_open']		= '<li class="active"><a href="">';
		$config['cur_tag_close'] 	= '</a></li>';

		$page = $limit;
		
		$data['get_animals'] = $this->organimal_model->get_all_archive_animals_by_org($config["per_page"],$page,$this->session->userdata('userid'),$this->session->userdata('org_id'),$sort,$order,$status,$search_text);
		//echo '<pre>'; print_r($data['get_animals']);die;
		//Getting total rows
		$config["total_rows"] = $data['get_animals']['num_rows'];
		
		//Initialize pagination
		$this->pagination->initialize($config);
		
		$data["links"] = $this->pagination->create_links();
                
		$data["limit"]          =   $limit;
		$data["sort"]           =   $sort;
		$data["order"]          =   $order;
		$data['status']         =   $status;
		$data['search_text']    =   $search_text;
		
		// code for the csv upload  
		// by bhushan on 7-1-16
			if($this->input->post('upload_animal_p'))
			{
				//echo $this->input->post('upload_animal_p');exit; //use for testing
				$error_message = '';
				$leg_upload_data = $_FILES['profile_upload']['name'];
				$leg_upload_data_type = $_FILES['profile_upload']['type'];
			
				$config1['upload_path'] 		= $this->config->item('upload')."profileupload/";
				$config1['allowed_types'] 	= 'xls|xlsx|text/csv|csv';
				$config1['max_size']			= '1024';
				$config1['remove_spaces']  	= TRUE;
				$config1['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['profile_upload']['name']);
				$this->load->library('upload', $config1);
				$this->upload->initialize($config1);
				$this->upload->do_upload('profile_upload');
				$error_message  .= $this->upload->display_errors();
			
				$filename = $config1['file_name'];
				$extension = explode('.',$filename);
				$uploadfilename = $config1['file_name'];
				
				if($error_message!='')
				{
					$data['Err_Msg'] = "<p>".$error_message."</p>";
					
				}
			   if($error_message == '');
			   {
					// if file upload succefully 
					$organization_id	=	$this->session->userdata('org_id');	
					$file_in_dir_name = $this->config->item('upload').'profileupload/'.$uploadfilename;
					
					if(isset($extension[1]) && ($extension[1]=='xls' ||$extension[1]=='xlsx'))
					{
						set_include_path(get_include_path() . PATH_SEPARATOR . 'Classes/');
						/** PHPExcel_IOFactory */
						$this->load->library('PHPExcel');
						$inputFileName = $file_in_dir_name;
												
						try {
							$objPHPExcel = PHPExcel_IOFactory::load($inputFileName);
						} catch(Exception $e) {
							die('Error loading file "'.pathinfo($inputFileName,PATHINFO_BASENAME).'": '.$e->getMessage());
						}
						
						//Get worksheet dimensions
						$sheet = $objPHPExcel->getActiveSheet(); 
						$excel_data = $sheet->toArray(null,true,true,true);
						foreach($excel_data as $key=>$value)
						{
							if (!array_filter($value)) {
								unset($excel_data[$key]);	// all column values are empty then remove that row
							}
							
						}
						
						//echo "<pre>";print_r($data); exit;  //use for testing
						$sheetData = array_values($excel_data);
						//echo "<pre>";print_r($sheetData);
							//	exit;//use for testing
						$var=0;	
						for($m=4;$m<count($sheetData);$m++,$var++)
						{
							$e = $m+1;	
							if(trim($sheetData[$m]['A'])=='' || trim($sheetData[$m]['B'])=='' || trim($sheetData[$m]['C'])=='' ||  trim($sheetData[$m]['D']) == "" || trim($sheetData[$m]['E'])=='')
								{
									$error_message .=(trim($sheetData[$m]['A'])=='')?"Animal Name, ":"";
									$error_message .=(trim($sheetData[$m]['B'])=='')?"Animal Type, ":"";
									$error_message .=(trim($sheetData[$m]['C'])=='')?"Animal Gender, ":"";
									$error_message .=(trim($sheetData[$m]['D'])=='')?"Animal Breed, ":"";
									$error_message .=(trim($sheetData[$m]['E'])=='')?"Animal Neutered Spayed, ":"";
									$error_message .="Field(s) are blank in Row ".$e."<br>";
								}	
									
							 else
								{
								if(isset($sheetData[$m]['A']) && $sheetData[$m]['A'] != '' && strlen($sheetData[$m]['A']) > 100)
									{
										$error_message .= "The Animal Name Must be less Than or equal to 100 characters in Row ".$e."<br>";
									}
								if(isset($sheetData[$m]['B']) && $sheetData[$m]['B'] != '' && strlen($sheetData[$m]['B']) > 50 )
									{
										$error_message .= "The Animal type Must less than or equal to 50 characters  as per given in sheet <br>";	
									}
									if(isset($sheetData[$m]['C']) && $sheetData[$m]['C'] != '' && strlen($sheetData[$m]['C']) > 8)
									{
										$error_message .= "The Animal Gender Must be equal to 1 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['D']) && $sheetData[$m]['D'] != '' && strlen($sheetData[$m]['D']) > 255)
									{
										$error_message .= "The Animal Breed must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['E']) && $sheetData[$m]['E'] != '' && strlen($sheetData[$m]['E']) > 10 )
									{
										$error_message .= "The Animal Neutered Spayed Must be less than or equal to 10 characters as define in the sheet ,in the Row ".$e."<br>";
									}
									
									if(isset($sheetData[$m]['F']) && $sheetData[$m]['F'] != '' && strlen($sheetData[$m]['F']) > 8)
									{
										$error_message .= "The Animal breed Birdsex must be less than or equal to 8 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									
									if(isset($sheetData[$m]['G']) && $sheetData[$m]['G'] != '' && strlen($sheetData[$m]['G']) > 10)
									{
										$error_message .= "The Animal Entering Age Must be less than or equal to 10 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['H']) && $sheetData[$m]['H'] != '' && strlen(trim($sheetData[$m]['H'])) > 10)
									{
										$error_message .= "The Animal Est. Age Must be less than or equal to 10 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['I']) && $sheetData[$m]['I'] != '' && strlen($sheetData[$m]['I']) > 8)
									{
										$error_message .= "The Animal Weight Must be less than or equal to 8 characters as define in the sheet , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['J']) && $sheetData[$m]['J'] != '' && strlen($sheetData[$m]['J']) > 255)
									{
										$error_message .= "The Animal Demeano Must be less than or equal to 255 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['K']) && $sheetData[$m]['K'] != '' && strlen($sheetData[$m]['K']) > 100)
									{
										$error_message .= "The Animal City Must be Less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['L']) && $sheetData[$m]['L'] != '' && strlen($sheetData[$m]['L']) > 3)
									{
										$error_message .= "The Animal State Must be Less than or equal to 2 characters in the Row ".$e."<br>";	
									}	
								
									
									/*if(isset($sheetData[$m]['M']) && $sheetData[$m]['M'] != '' && strlen($sheetData[$m]['M']) > 2)
									{
										$error_message .= "The Animal Onclock date ";	
									}*/
									
									if(isset($sheetData[$m]['N']) && $sheetData[$m]['N'] != '' && strlen($sheetData[$m]['N']) > 501)
									{
										$error_message .= "The Animal General comment Must be less than or equal to 500 characters in the row ".$e."<br>";	
									}	
									if(isset($sheetData[$m]['O']) && $sheetData[$m]['O'] != '' && strlen($sheetData[$m]['O']) > 501)
									{
										$error_message .= "The Animal Profile story Must be less than or equal to 500 characters in the Row ".$e."<br>";	
									}	
									
									if(isset($sheetData[$m]['P']) && $sheetData[$m]['P'] != '' && strlen($sheetData[$m]['P']) > 8)
									{
										$error_message .= "The Animal Rabies vaccine Must be Less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
								/*	if(isset($sheetData[$m]['Q']) && $sheetData[$m]['Q'] != '' && strlen($sheetData[$m]['Q']) > 500)									{
									    $error_message .= "The Animal Rabies vaccine date ";	
									}*/
									
									if(isset($sheetData[$m]['R']) && $sheetData[$m]['R'] != '' && strlen($sheetData[$m]['R']) > 8)
									{
										$error_message .= "The Animal Fecal test performed Must be less than or equal to 8 characters , in the Row ".$e."<br>";	
									}
									
									/*if(isset($sheetData[$m]['S']) && $sheetData[$m]['S'] != '' && strlen($sheetData[$m]['S']) > 100)
									{
										$error_message .= "The Animal Fecal test date";	
									}*/
									
									if(isset($sheetData[$m]['T']) && $sheetData[$m]['T'] != '' && strlen($sheetData[$m]['T']) > 8)
									{
										$error_message .= "The Animal Micro Chipped Must be less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
									if(isset($sheetData[$m]['U']) && $sheetData[$m]['U'] != '' && strlen($sheetData[$m]['U']) > 100)
									{
										$error_message .= "The Animal Micro Chipped Number and Company Must be less than or equal to 100 characters ,in the Row ".$e."<br>";
									}
									if(isset($sheetData[$m]['V']) && $sheetData[$m]['V'] != '' && strlen($sheetData[$m]['V']) > 8)
									{
										$error_message .= "The Animal  5-way DLHPP must be less than or equal to 7 characters ,in the Row".$e."<br>";
									}
									
									if(isset($sheetData[$m]['W']) && $sheetData[$m]['W'] != '' && strlen($sheetData[$m]['W']) > 8)
									{
										$error_message .= "The Animal Heartworm vaccine must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
																		
									/*if(isset($sheetData[$m]['X']) && $sheetData[$m]['X'] != '' && strlen($sheetData[$m]['X']) > 255)
									{
										$error_message .= "The Animal Heartworm vaccine date";	
									}*/
									
									if(isset($sheetData[$m]['Y']) && $sheetData[$m]['Y'] != '' && strlen($sheetData[$m]['Y']) > 100)
									{
										$error_message .= "The Animal Heartworm brand must less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['Z']) && $sheetData[$m]['Z'] != '' && strlen(trim($sheetData[$m]['Z'])) > 8)
									{
										$error_message .= "The Animal Bordatella vaccine must be less than or equal to 7 characters as per define in the sheet ,in Row ".$e."<br>";
									}
		
									/*if(isset($sheetData[$m]['AA']) && $sheetData[$m]['AA'] != '' && strlen($sheetData[$m]['AA']) > 501)
									{
										$error_message .= "The Animal Bordatella vaccine date ";	
									}*/

									if(isset($sheetData[$m]['AB']) && $sheetData[$m]['AB'] != '' && strlen($sheetData[$m]['AB']) > 100)
									{
										$error_message .= "The Animal Bordatella  brand must be less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AC']) && $sheetData[$m]['AC'] != '' && strlen($sheetData[$m]['AC']) > 255)
									{
										$error_message .="The Animal Medical Description must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									// transport tab data
									if(isset($sheetData[$m]['AD']) && $sheetData[$m]['AD'] != '' && strlen($sheetData[$m]['AD']) > 8)
									{
										$error_message .="The Animal Crates Well must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AE']) && $sheetData[$m]['AE'] != '' && strlen($sheetData[$m]['AE']) > 8)
									{
										$error_message .= "The Animal Barrier Aggressive must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($sheetData[$m]['AF']) && $sheetData[$m]['AF'] != '' && strlen($sheetData[$m]['AF']) > 7)
									{
										$error_message .= "The Animal  Health Cert or CVI must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
								
									/*if(isset($sheetData[$m]['AG']) && $sheetData[$m]['AG'] != '' && strlen($sheetData[$m]['AG']) > 7)
									{
									$error_message .= "The Animal Health Cert or CVI date";	
									}*/
								
									if(isset($sheetData[$m]['AH']) && $sheetData[$m]['AH'] != '' && strlen($sheetData[$m]['AH']) > 7)
									{
										$error_message .= "The Animal Flight Risk must be less than or equal to 7 characters , in the Row ".$e."<br>";	
									}
									// Location
									if(isset($sheetData[$m]['AI']) && $sheetData[$m]['AI'] != '' && strlen($sheetData[$m]['AI']) > 7)
									{
										$error_message .= "The Animal Current zip must be less than or equal to 7 characters in the Row".$e."<br>";	;	
									}
									
									if(isset($sheetData[$m]['AJ']) && $sheetData[$m]['AJ'] != '' && strlen($sheetData[$m]['AJ']) > 7)
									{
										$error_message .=  "The Animal Desired zip must be less than or equal to 7 characters in the Row ".$e."<br>";	
									}
									
									/*   end  new added */
									
								//for on the clock date
								$cdate=strtotime(trim($sheetData[$m]['M']));
								$onclock_date=NULL;
								if(trim($sheetData[$m]['M']) && $cdate !='')
								{
									$onclock_date = date('Y-m-d',strtotime(trim($sheetData[$m]['M'])));
								}
								//for on the Rabies vaccine date 
								$rdate = strtotime(trim($sheetData[$m]['Q']));
								$Rabies_vaccine_date=NULL;
								if(trim($sheetData[$m]['Q']) &&  $rdate != '')
								{
									$Rabies_vaccine_date = date('Y-m-d',strtotime(trim($sheetData[$m]['Q'])));
								}
								//for on the Fecal test date 
								$fdate = strtotime(trim($sheetData[$m]['S']));
								$Fecal_test_date=NULL;
								if(trim($sheetData[$m]['S']) && $fdate !='')
								{
									$Fecal_test_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['S'])));
								}
								//for on the Heartworm vaccine date
								$hdate = strtotime(trim($sheetData[$m]['X']));
								$Heartworm_vaccine_date=NULL;
 								if(trim($sheetData[$m]['X']) && $hdate != '')
								{
									$Heartworm_vaccine_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['X'])));
								}
								//for on the Bordatella vaccine date
								$bdate = strtotime(trim($sheetData[$m]['AA']));
								$Bordatella_vaccine_date=NULL;
 								if(trim($sheetData[$m]['AA']) && $bdate !='')
								{
									$Bordatella_vaccine_date  = date('Y-m-d',strtotime(trim($sheetData[$m]['AA'])));
								}
								//for on the CVI Date
								$cvidate = strtotime(trim($sheetData[$m]['AG']));
								$CvDate=NULL;
 								if(trim($sheetData[$m]['AG']) && $cvidate !='')
								{
									$CvDate  = date('Y-m-d',strtotime(trim($sheetData[$m]['AG'])));
								}
								
								// chk Animal_type_present
								$animal_type_id = $this->organimal_model->chk_animaltype_present(trim($sheetData[$m]['B'])); 	
								if(empty($animal_type_id[0]))
								{
									$error_message .= "The Animal type not as per define in the sheet";	
								} else {
															
								//for Multipal Data stored field 
								
								$animal_breed_id =array();
								if(trim($sheetData[$m]['D']))
								{
									$animal_breed = explode(',',trim($sheetData[$m]['D']));
									for($i=0;$i<count($animal_breed);$i++)
									{
										$animal_breed_id[$i]=$this->organimal_model->chk_animalbreed(trim($animal_breed[$i]),$animal_type_id[0]['in_animal_type_id']); 
									}
								}
								$pri=''; $sec=''; $ters='';
																					
								if(isset($animal_breed_id[0][0]['in_animal_breed_id']))
									$pri = $animal_breed_id[0][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[1][0]['in_animal_breed_id']))
									$sec = 	$animal_breed_id[1][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[2][0]['in_animal_breed_id']))	
									$ters = $animal_breed_id[2][0]['in_animal_breed_id'];														
								if($pri=='')
								{
									$error_message .= "The Animal primary breed is incorrect in the Row ". $e."<br>";
								}
								
								//animal age id
								$animal_age_id = $this->organimal_model->chk_animalage(trim($sheetData[$m]['G']));
									
								//animal demeanor
								$animal_demeanor = $this->organimal_model->chk_demeanor(trim($sheetData[$m]['J']) ,$animal_type_id[0]['in_animal_type_id']);
								
								}//else 
								
								// for the yes / No
								if(trim($sheetData[$m]['C']) =='Male'){$st_gender='M';}else if(trim($sheetData[$m]['C']) =='Female'){$st_gender='F';} else {$st_gender='U';}  
								if(trim($sheetData[$m]['E']) =='Spayed'){$in_neutered_id=2;}else if(trim($sheetData[$m]['E']) =='Neutered'){$in_neutered_id=1;} else {$in_neutered_id=3;}
								if(trim($sheetData[$m]['F']) =='Yes'){$st_birdsex='Y';}else if(trim($sheetData[$m]['F']) =='No'){$st_birdsex='N';} else { $st_birdsex='U';} 
								if(trim($sheetData[$m]['P']) =='Yes'){$st_rabies_vaccine='Y';}else if(trim($sheetData[$m]['P']) =='No'){$st_rabies_vaccine='N';} else { $st_rabies_vaccine='U';}						
								if(trim($sheetData[$m]['R']) =='Yes'){$st_fecal_test='Y';}else if(trim($sheetData[$m]['R']) =='No'){$st_fecal_test='N';} else { $st_fecal_test='U';}
								if(trim($sheetData[$m]['T']) =='Yes'){$st_micro_chipped='Y';}else if(trim($sheetData[$m]['T']) =='No'){$st_micro_chipped='N';} else { $st_micro_chipped='U';}
								if(trim($sheetData[$m]['W']) =='Yes'){$st_heartworm_vaccine='Y';}else if(trim($sheetData[$m]['W']) =='No'){$st_heartworm_vaccine='N';} else { $st_heartworm_vaccine='U';}	
							if(trim($sheetData[$m]['Z']) =='Yes'){$st_bordatella_vaccine='Y';}else if(trim($sheetData[$m]['Z']) =='No'){$st_bordatella_vaccine='N';} else { $st_bordatella_vaccine='U';}	
								if(trim($sheetData[$m]['AD']) =='Yes'){$st_crates_well='Y';}else if(trim($sheetData[$m]['AD']) =='No'){$st_crates_well='N';} else { $st_crates_well='U';}		
								if(trim($sheetData[$m]['AE']) =='Yes'){$st_barrier_aggressive='Y';}else if(trim($sheetData[$m]['AE']) =='No'){$st_barrier_aggressive='N';} else { $st_barrier_aggressive='U';}
								if(trim($sheetData[$m]['AF']) =='Yes'){$st_cvi='Y';}else if(trim($sheetData[$m]['AF']) =='No'){$st_cvi='N';} else { $st_cvi='U';}														
								if(trim($sheetData[$m]['AH']) =='Yes'){$st_flight_risk='Y';}else if(trim($sheetData[$m]['AH']) =='No'){$st_flight_risk='N';} else { $st_flight_risk='U';}
								
							$profile_array[] = array(
											'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$sheetData[$m]['A'],
											'st_gender'				=>	$st_gender,
											'st_birdsex'            => 	$st_birdsex,
											'in_animal_type_id'		=>	$animal_type_id[0]['in_animal_type_id'],
											
											'in_primary_breed_id'	=> $pri,
											'in_secondry_breed_id'	=> $sec,	 
											'in_tertiary_breed_id'	=> $ters,
											'in_age'				=>	$animal_age_id,  //GHI
											'in_enter_age'			=>  $sheetData[$m]['H'],
											'in_weight'				=>  ($sheetData[$m]['I']=='Unknown')?'U':$sheetData[$m]['I'],
											'in_demeanor_id'		=>	($animal_demeanor[0]['in_demeanor_id'] =='')?5:$animal_demeanor[0]['in_demeanor_id'],
																				
											'st_city'				=>	$sheetData[$m]['K'],
											'st_state'				=>	$sheetData[$m]['L'],
											'st_on_clock'			=>	($sheetData[$m]['M'] =='')?'N':'Y',
											'dt_date'				=>  ($onclock_date=='')?NULL:$onclock_date,
											
											'st_general_comment'	=>	$sheetData[$m]['N'],
											'st_profile_story'		=>	$sheetData[$m]['O'],
											
											'in_neutered_id'		=>	$in_neutered_id,
											
											'st_rabies_vaccine'		=>	$st_rabies_vaccine,
											'dt_rabiesvac_date'		=>($Rabies_vaccine_date=='')?NULL:$Rabies_vaccine_date,

											'st_fecal_test'			=>  $st_fecal_test,
											'dt_fecal_test_date'	=> ($Fecal_test_date=='')?NULL:$Fecal_test_date,
											'st_micro_chipped'		=> $st_micro_chipped,
											'st_micro_chip_comp'	=> $sheetData[$m]['U'],
											'st_dlhhp'				=> ($sheetData[$m]['V'] =='Unknown')?'U':$sheetData[$m]['V'] ,
											'st_heartworm_vaccine'		=>	$st_heartworm_vaccine,
											'dt_heartworm_vaccine_date' =>($Heartworm_vaccine_date=='')?NULL:$Heartworm_vaccine_date,
											'st_heartworm_brand'		=> $sheetData[$m]['Y'],
											
											'st_bordatella_vaccine'		=> $st_bordatella_vaccine,
											'dt_bordatella_vaccine_date'=> ($Bordatella_vaccine_date=='')?NULL:$Bordatella_vaccine_date, 
											'st_bordatella_brand'  		=> $sheetData[$m]['AB'],
											
											'st_medical_desc'		=>	$sheetData[$m]['AC'],
											
											'st_crates_well'		=>	$st_crates_well,
											'st_barrier_aggressive'	=>	$st_barrier_aggressive,
											'st_cvi' 				=>  $st_cvi,
											'dt_cvi' 				=> ($CvDate =='')?NULL:$CvDate,
											'st_declawed'			=>'U',
											'st_flight_risk'		=>	$st_flight_risk,
																					
											'st_current_zip'		=>	$sheetData[$m]['AI'],
											'st_desired_zip'		=>	$sheetData[$m]['AJ'],
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0	
										);	
							}//else
						
						}
													
					}//if Extantion
					else
					{
						$a=0;
							$error_message = "";
							if (($handle = fopen($file_in_dir_name, "r")) !== FALSE){
									//echo "<br> in if fopen";
								$error_array = array();	
								while (($data_csv = fgetcsv($handle, 1000, ",")) !== FALSE)
								{
									//echo "<pre>";print_r($data_csv);
									if($a>3)
										{
										$error_line = $a+1;
										$e=$a;
								if(trim($data_csv[0]!=''))
									{
										
									// hear all deleted data. 
								if(trim($data_csv[0])=='' || trim($data_csv[1])=='' || trim($data_csv[2])=='' ||  trim($data_csv[3])=='' || trim($data_csv[4])=='')
								{
									$error_message .=(trim($data_csv[0])=='')?"Animal Name, ":"";
									$error_message .=(trim($data_csv[1])=='')?"Animal type, ":"";
									$error_message .=(trim($data_csv[2])=='')?"Animal Gender, ":"";
									$error_message .=(trim($data_csv[3])=='')?"Animal Breed, ":"";
									$error_message .=(trim($data_csv[4])=='')?"Animal Neutered Spayed, ":"";
									$error_message .="Field(s) are blank in Row ".$a."<br>";
								}
								else {
									
									if(isset($data_csv[0]) && $data_csv[0] != '' && strlen($data_csv[0]) > 100)
									{
										$error_message .= "The Animal Name Must be less Than or equal to 100 characters in Row ".$e."<br>";
									}
								if(isset($data_csv[1]) && $data_csv[1] != '' && strlen($data_csv[1]) > 50 )
									{
										$error_message .= "The Animal type Must less than equal to 50 characters  as per given in sheet <br>";	
									}
								if(isset($data_csv[2]) && $data_csv[2] != '' && strlen($data_csv[2]) > 8)
									{
										$error_message .= "The Animal Gender must be less than or equal to 8 characters in the Row ".$e."<br>";	
									}
									
								if(isset($data_csv[3]) && $data_csv[3] != '' && strlen($data_csv[3]) > 255)
									{
										$error_message .= "The Animal Breed must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[4]) && $data_csv[4]!= '' && strlen($data_csv[4]) > 10 )
									{
										$error_message .= "The Animal Neutered Spayed Must be less than or equal to 10 characters as define in the sheet ,in the Row ".$e."<br>";
									}
									
									if(isset($data_csv[5]) && $data_csv[5] != '' && strlen($data_csv[5]) > 8)
									{
										$error_message .= "The Animal breed Birdsex must be less than or equal to 8 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									
									if(isset($data_csv[6]) && $data_csv[6] != '' && strlen($data_csv[6]) > 10)
									{
										$error_message .= "The Animal Entering Age Must be less than or equal to 10 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[7]) && $data_csv[7] != '' && strlen(trim($data_csv[7])) > 10)
									{
										$error_message .= "The Animal Est. Age Must be less than or equal to 10 characters  as per define in the sheet ,in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[8]) && $data_csv[8] != '' && strlen($data_csv[8]) > 8)
									{
										$error_message .= "The Animal Weight Must be less than or equal to 8 characters as define in the sheet , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[9]) && $data_csv[9] != '' && strlen($data_csv[9]) > 255)
									{
										$error_message .= "The Animal Demeano Must be less than or equal to 255 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[10]) && $data_csv[10] != '' && strlen($data_csv[10]) > 100)
									{
										$error_message .= "The Animal City Must be Less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[11]) && $data_csv[11] != '' && strlen($data_csv[11]) > 3)
									{
										$error_message .= "The Animal State Must be Less than or equal to 2 characters in the Row ".$e."<br>";	
									}	
								
									/*if(isset($data_csv[12]) && $data_csv[12] != '' && strlen($data_csv[12]) > 2)
									{
										$error_message .= "The Animal Onclock date ";	
									}*/
									
									if(isset($data_csv[13]) && $data_csv[13] != '' && strlen($data_csv[13]) > 501)
									{
										$error_message .= "The Animal General comment Must be less than or equal to 500 characters in the row ".$e."<br>";	
									}	
									if(isset($data_csv[14]) && $data_csv[14] != '' && strlen($data_csv[14]) > 501)
									{
										$error_message .= "The Animal Profile story Must be less than or equal to 500 characters in the Row ".$e."<br>";	
									}	
									
									if(isset($data_csv[15]) && $data_csv[15] != '' && strlen($data_csv[15]) > 8)
									{
										$error_message .= "The Animal Rabies vaccine Must be Less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
								/*	if(isset($data_csv[16]) && $data_csv[16] != '' && strlen($data_csv[16]) > 500)									{
									    $error_message .= "The Animal Rabies vaccine date ";	
									}*/
									
									if(isset($data_csv[17]) && $data_csv[17] != '' && strlen($data_csv[17]) > 8)
									{
										$error_message .= "The Animal Fecal test performed Must be less than or equal to 8 characters , in the Row ".$e."<br>";	
									}
									
									/*if(isset($data_csv[18]) && $data_csv[18] != '' && strlen($data_csv[18]) > 100)
									{
										$error_message .= "The Animal Fecal test date";	
									}*/
									
									if(isset($data_csv[19]) && $data_csv[19] != '' && strlen($data_csv[19]) > 8)
									{
										$error_message .= "The Animal Micro Chipped Must be less than or equal to 7 characters as define in the sheet , in the Row ".$e."<br>";	
									}
								
									if(isset($data_csv[20]) && $data_csv[20] != '' && strlen($data_csv[20]) > 100)
									{
										$error_message .= "The Animal Micro Chipped Number and Company Must be less than or equal to 100 characters ,in the Row ".$e."<br>";
									}
									if(isset($data_csv[21]) && $data_csv[21] != '' && strlen($data_csv[21]) > 8)
									{
										$error_message .= "The Animal  5-way DLHPP must be less than or equal to 7 characters ,in the Row".$e."<br>";
									}
									
									if(isset($data_csv[22]) && $data_csv[22] != '' && strlen($data_csv[22]) > 8)
									{
										$error_message .= "The Animal Heartworm vaccine must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
																		
									/*if(isset($data_csv[23]) && $data_csv[23] != '' && strlen($data_csv[23]) > 255)
									{
										$error_message .= "The Animal Heartworm vaccine date";	
									}*/
									
									if(isset($data_csv[24]) && $data_csv[24] != '' && strlen($data_csv[24]) > 100)
									{
										$error_message .= "The Animal Heartworm brand must less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[25]) && $data_csv[25] != '' && strlen(trim($data_csv[25])) > 8)
									{
										$error_message .= "The Animal Bordatella vaccine must be less than or equal to 7 characters as per define in the sheet ,in Row ".$e."<br>";
									}
		
									/*if(isset($data_csv[26]) && $data_csv[26] != '' && strlen($data_csv[26]) > 501)
									{
										$error_message .= "The Animal Bordatella vaccine date ";	
									}*/

									if(isset($data_csv[27]) && $data_csv[27] != '' && strlen($data_csv[27]) > 100)
									{
										$error_message .= "The Animal Bordatella  brand must be less than or equal to 100 characters in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[28]) && $data_csv[28] != '' && strlen($data_csv[28]) > 255)
									{
										$error_message .="The Animal Medical Description must be less than or equal to 255 characters in the Row ".$e."<br>";	
									}
									
									// transport tab data
									if(isset($data_csv[29]) && $data_csv[29] != '' && strlen($data_csv[29]) > 8)
									{
										$error_message .="The Animal Crates Well must be less than or equal to 7 characters in the Row".$e."<br>";	
									}
									
									if(isset($data_csv[30]) && $data_csv[30] != '' && strlen($data_csv[30]) > 8)
									{
										$error_message .= "The Animal Barrier Aggressive must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
									
									if(isset($data_csv[31]) && $data_csv[31] != '' && strlen($data_csv[31]) > 7)
									{
										$error_message .= "The Animal  Health Cert or CVI must be less than equal to 7 characters , in the Row ".$e."<br>";	
									}
								
									/*if(isset($data_csv[32]) && $data_csv[32] != '' && strlen($data_csv[32]) > 7)
									{
									$error_message .= "The Animal Health Cert or CVI date";	
									}*/
								
									if(isset($data_csv[33]) && $data_csv[33] != '' && strlen($data_csv[33]) > 7)
									{
										$error_message .= "The Animal Flight Risk must be less than or equal to 7 characters , in the Row ".$e."<br>";	
									}
									// Location
									if(isset($data_csv[34]) && $data_csv[34] != '' && strlen($data_csv[34]) > 7)
									{
										$error_message .= "The Animal Current zip must be less than or equal to 7 characters in the Row".$e."<br>";	;	
									}
									
									if(isset($data_csv[35]) && $data_csv[35] != '' && strlen($data_csv[35]) > 7)
									{
										$error_message .=  "The Animal Desired zip must be less than or equal to 7 characters in the Row ".$e."<br>";	
									}				
								
								//for on the clock date
								$cdate=strtotime(trim($data_csv[12]));
								$onclock_date=NULL;
								if(trim($data_csv[12]) && $cdate !='')
								{
									$onclock_date = date('Y-m-d',strtotime(trim($data_csv[12])));
								}
								//for on the Rabies vaccine date 
								$rdate = strtotime(trim($data_csv[16]));
								$Rabies_vaccine_date=NULL;
								if(trim($data_csv[16]) &&  $rdate != '')
								{
									$Rabies_vaccine_date = date('Y-m-d',strtotime(trim($data_csv[16])));
								}
								//for on the Fecal test date 
								$fdate = strtotime(trim($data_csv[18]));
								$Fecal_test_date=NULL;
								if(trim($data_csv[18]) && $fdate !='')
								{
									$Fecal_test_date  = date('Y-m-d',strtotime(trim($data_csv[18])));
								}
								//for on the Heartworm vaccine date
								$hdate = strtotime(trim($data_csv[23]));
								$Heartworm_vaccine_date=NULL;
 								if(trim($data_csv[23]) && $hdate != '')
								{
									$Heartworm_vaccine_date  = date('Y-m-d',strtotime(trim($data_csv[23])));
								}
								//for on the Bordatella vaccine date
								$bdate = strtotime(trim($data_csv[26]));
								$Bordatella_vaccine_date=NULL;
 								if(trim($data_csv[26]) && $bdate !='')
								{
									$Bordatella_vaccine_date  = date('Y-m-d',strtotime(trim($data_csv[26])));
								}
								//for on the CVI Date
								$cvidate = strtotime(trim($data_csv[32]));
								$CvDate=NULL;
 								if(trim($data_csv[32]) && $cvidate !='')
								{
									$CvDate  = date('Y-m-d',strtotime(trim($data_csv[32])));
								}
								
								// chk Animal_type_present
								$animal_type_id = $this->organimal_model->chk_animaltype_present(trim($data_csv[1])); 	
								if(empty($animal_type_id[0]))
								{
									$error_message .= "The Animal type not as per define in the sheet";	
								} else {
															
								$animal_breed_id=array();
								//for Multipal Data stored field 
								if(trim($data_csv[3]))
								{
									$pri=NULL; $sec=NULL; $ters=NULL;
									$animal_breed = explode(',',trim($data_csv[3]));
									for($i=0;$i<count($animal_breed);$i++)
									{
										$animal_breed_id[$i]=$this->organimal_model->chk_animalbreed($animal_breed[$i],$animal_type_id[0]['in_animal_type_id']); 
																			}
								}
								$pri=NULL; $sec=NULL; $ters=NULL;														
								if(isset($animal_breed_id[0][0]['in_animal_breed_id']))
									$pri = $animal_breed_id[0][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[1][0]['in_animal_breed_id']))
									$sec = 	$animal_breed_id[1][0]['in_animal_breed_id'];
								if(isset($animal_breed_id[2][0]['in_animal_breed_id']))	
									$ters = $animal_breed_id[2][0]['in_animal_breed_id'];														
								if($pri=='')
								{
									$error_message .= "The Animal primary breed is incorrect in the Row ". $e."<br>";
								}
								
														
								//animal age id
								$animal_age_id = $this->organimal_model->chk_animalage(trim($data_csv[6]));
									
								//animal demeanor
								$animal_demeanor = $this->organimal_model->chk_demeanor(trim($data_csv[9]) ,$animal_type_id[0]['in_animal_type_id']);
								
								}//else 
								
								// for the yes / No
								if(trim($data_csv[2]) =='Male'){$st_gender='M';}else if(trim($data_csv[2]) =='Female'){$st_gender='F';} else {$st_gender='U';}  
								if(trim($data_csv[4]) =='Spayed'){$in_neutered_id=2;}else if(trim($data_csv[4]) =='Neutered'){$in_neutered_id=1;} else {$in_neutered_id=3;}
								if(trim($data_csv[5]) =='Yes'){$st_birdsex='Y';}else if(trim($data_csv[5]) =='No'){$st_birdsex='N';} else { $st_birdsex='U';} 
								if(trim($data_csv[15]) =='Yes'){$st_rabies_vaccine='Y';}else if(trim($data_csv[15]) =='No'){$st_rabies_vaccine='N';} else { $st_rabies_vaccine='U';}						
								if(trim($data_csv[17]) =='Yes'){$st_fecal_test='Y';}else if(trim($data_csv[17]) =='No'){$st_fecal_test='N';} else { $st_fecal_test='U';}
								if(trim($data_csv[19]) =='Yes'){$st_micro_chipped='Y';}else if(trim($data_csv[19]) =='No'){$st_micro_chipped='N';} else { $st_micro_chipped='U';}
								if(trim($data_csv[22]) =='Yes'){$st_heartworm_vaccine='Y';}else if(trim($data_csv[22]) =='No'){$st_heartworm_vaccine='N';} else { $st_heartworm_vaccine='U';}	
								if(trim($data_csv[25]) =='Yes'){$st_bordatella_vaccine='Y';}else if(trim($data_csv[25]) =='No'){$st_bordatella_vaccine='N';} else { $st_bordatella_vaccine='U';}	
								if(trim($data_csv[29]) =='Yes'){$st_crates_well='Y';}else if(trim($data_csv[29]) =='No'){$st_crates_well='N';} else { $st_crates_well='U';}		
								if(trim($data_csv[30]) =='Yes'){$st_barrier_aggressive='Y';}else if(trim($data_csv[30]) =='No'){$st_barrier_aggressive='N';} else { $st_barrier_aggressive='U';}
								if(trim($data_csv[31]) =='Yes'){$st_cvi='Y';}else if(trim($data_csv[31]) =='No'){$st_cvi='N';} else { $st_cvi='U';}														
								if(trim($data_csv[33]) =='Yes'){$st_flight_risk='Y';}else if(trim($data_csv[33]) =='No'){$st_flight_risk='N';} else { $st_flight_risk='U';}
								
								}//else 
									
								
							$profile_array[] = array(
											'in_organization_id'	=>	$this->session->userdata('org_id'),
											'st_animal_name'		=>	$data_csv[0],
											'st_gender'				=>	$st_gender,
											'st_birdsex'            => 	$st_birdsex,
											'in_animal_type_id'		=>	$animal_type_id[0]['in_animal_type_id'],
											
											'in_primary_breed_id'	=> $pri,
											'in_secondry_breed_id'	=> $sec,	 
											'in_tertiary_breed_id'	=> $ters,
											'in_age'				=>	$animal_age_id,  //GHI
											'in_enter_age'			=>  $data_csv[7],
											'in_weight'				=>  ($data_csv[8]=='Unknown')?'U':$data_csv[8],
											'in_demeanor_id'		=>	($animal_demeanor[0]['in_demeanor_id'] =='')?5:$animal_demeanor[0]['in_demeanor_id'],
																				
											'st_city'				=>	$data_csv[10],
											'st_state'				=>	$data_csv[11],
											'st_on_clock'			=>	($data_csv[12] =='')?'N':'Y',
											'dt_date'				=>  ($onclock_date=='')?NULL:$onclock_date,
											
											'st_general_comment'	=>	$data_csv[13],
											'st_profile_story'		=>	$data_csv[14],
											
											'in_neutered_id'		=>	$in_neutered_id,
											
											'st_rabies_vaccine'		=>	$st_rabies_vaccine,
											'dt_rabiesvac_date'		=>($Rabies_vaccine_date=='')?NULL:$Rabies_vaccine_date,

											'st_fecal_test'			=>  $st_fecal_test,
											'dt_fecal_test_date'	=> ($Fecal_test_date=='')?NULL:$Fecal_test_date,
											'st_micro_chipped'		=> $st_micro_chipped,
											'st_micro_chip_comp'	=> $data_csv[20],
											'st_dlhhp'				=> ($data_csv[21] =='Unknown')?'U':$data_csv[21],
											'st_heartworm_vaccine'		=>	$st_heartworm_vaccine,
											'dt_heartworm_vaccine_date' =>($Heartworm_vaccine_date=='')?NULL:$Heartworm_vaccine_date,
											'st_heartworm_brand'		=> $data_csv[24],
											
											'st_bordatella_vaccine'		=> $st_bordatella_vaccine,
											'dt_bordatella_vaccine_date'=> ($Bordatella_vaccine_date=='')?NULL:$Bordatella_vaccine_date, 
											'st_bordatella_brand'  		=> $data_csv[27],
											
											'st_medical_desc'		=>	$data_csv[28],
											
											'st_crates_well'		=>	$st_crates_well,
											'st_barrier_aggressive'	=>	$st_barrier_aggressive,
											'st_cvi' 				=>  $st_cvi,
											'dt_cvi' 				=> ($CvDate =='')?NULL:$CvDate,
											'st_declawed'			=>'U',	
											'st_flight_risk'		=>	$st_flight_risk,
																					
											'st_current_zip'		=>	$data_csv[34],
											'st_desired_zip'		=>	$data_csv[35],
											'in_created_by'			=>	$this->session->userdata('userid'),
											'dt_created'			=>	date('Y-m-d H:i:s'),
											'in_status'				=>	0	
										);	

								}//if trim
						
							   }// if$a>3
							   		$a++;
							}//while
									
									
							}//if
						}//else 
							
					@unlink($this->config->item('upload')."profileupload/".$uploadfilename);
					if(!isset($profile_array) || empty($profile_array))
					{
						if($error_message=='')
						{
							$error_message .= "Empty file is uploaded Or File Format is incorrect.";
						}
					}
										 
			   }//if error msg 
			// }  
			 
				/*echo "<pre>";  print_r($profile_array);
				exit;*/
				if($error_message != "")
				{
					$data['Err_Msg'] = validation_errors()."<p>".$error_message."</p>";					
					if(!empty($data['Err_Msg']))
					{
						$this->session->set_flashdata('profile_upload_error', $data['Err_Msg']);
					}
					 				
					redirect($this->config->item('base_url')."org_animal/archive_animals/");
				}	
							
				if(isset($profile_array) && !empty($profile_array))
				{
					for($q=0;$q<count($profile_array);$q++)
					{
						$profile_id	= $this->organimal_model->add_animal_profile($profile_array[$q]);
						$last_id = $this->db->insert_id();//get last inserted id
					
					$arraygen=array('gender','pbreed','sbreed','tbreed','age','weight','demeanor','cstatus','nstatus','city','state','clock','where','quarantine','shelter_time','shelter_contact','comments','files','photo_video','pstory','cost','social','birdsex');	
					$general = serialize($arraygen);
					
					$arraymed = array('neutered','rvaccine','hvaccine','fecaltest','bvaccine','microchipped','surgery','dlhhp','medical_issue','medical_comments');					
					$medical = serialize($arraymed);
					
					$arraytran = array('crates','frisk','baggresive','recent_vaccine','cvi','current_zip','desired_zip','available_transfer','tr_date','travel','tr_comment');
					$transport = serialize($arraytran);
					
					$arrayfoster = array ('other','same','trained','kids','declawed','fh_comment');
					$foster = serialize($arrayfoster);
					$date = date('Y-m-d H:i:s');
					// for check box checked.
					$animalchkset    = array('in_animal_id'			=> $last_id,
											'in_user_id'			=> $this->session->userdata('userid'),
											'in_organization_id'	=> $this->session->userdata('org_id'),
											'st_general_setting'	=> $general,
											'st_medical_setting'	=> $medical,
											'st_transport_setting'	=> $transport,
											'st_foster_home_setting'=> $foster,
											'dt_created'			=> $date,
											'dt_modified'			=> $date
											);
					 $this->organimal_model->add_animal_setting($animalchkset);	
										
					}
					$this->session->set_flashdata('profile_upload_success', 'Animal profiles have been uploaded successfully.');
					redirect($this->config->item('base_url')."org_animal/archive_animals/");
				}
				
			}//if post
			
                
		$this->load->view('archive-animals',$data);
	}
	
	
	
	
	
	public function update_animal_archive_status($id,$status) {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$currentdate	=	date('Y-m-d');
		$animal_transport   = $this->common_function->check_animal_transport($id); 		
		$animal_tr_aviation = $this->common_function->check_animal_for_aviation($id);
		
		if((isset($animal_transport['dt_pickup_date']) && $animal_transport['dt_pickup_date']>= $currentdate) || (isset($animal_tr_aviation['dt_pickup_date']) && $animal_tr_aviation['dt_pickup_date'] >= $currentdate))
		{  
			$this->session->set_flashdata('message', 'Sorry! Animal profile can not be archived.');
		}
		else{
		if($status==3){ 
			$this->session->set_flashdata('message', 'Animal profile Un-archived successfully.');
			}
		else{
			$this->session->set_flashdata('message', 'Animal profile Archived successfully.');
			}
		
		if($status !=3){ 
		
			$status = 3; 
		
		} 
		else{ 
			$status = 2; 
		}
			$data=array('in_status' => $status);
			$data['profiles']	=	$this->organimal_model->update_animal_profile($data,$id);		
		}
		redirect(base_url().'org_animal/animals_in_my_organization');
	}
	
	
	public function find_partner_animals()
	{  
	
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		
		$this->session->unset_userdata('sessorgname');
		$this->session->unset_userdata('sessanimaltype');
		$this->session->unset_userdata('sessgender');
		$this->session->unset_userdata('sessage');
		$this->session->unset_userdata('sesssize');
		$this->session->unset_userdata('sessmyloc');
		$this->session->unset_userdata('sessradius');
		$this->session->unset_userdata('sesspartneronly');
		$this->session->unset_userdata('sesscoalitiononly');
		$this->session->unset_userdata('sessorgidonly');
		
	    $data=array();
		$data['animal_weight'] = $this->common_model->get_animal_weight();
		$data['animal_age']    = $this->common_model->get_animal_age();
		$data['org_details']	= $this->organimal_model->get_org_details($this->session->userdata('org_id'));
		$data['animal_type'] = $this->common_model->get_animal_types();		
		$this->load->view('partner-results-animal-detail',$data);
	}
	
	public function find_partner_animals_list()
	{
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		if($this->session->userdata('storgtype') == 'CT')
		{
			redirect($this->config->item('base_url'));
		}
		$data=array();
		if($this->uri->segment('3') == 'reset'){
			
			$this->session->unset_userdata('sessorgname');
			$this->session->unset_userdata('sessanimaltype');
			$this->session->unset_userdata('sessgender');
			$this->session->unset_userdata('sessage');
			$this->session->unset_userdata('sesssize');
			$this->session->unset_userdata('sessmyloc');
			$this->session->unset_userdata('sessradius');
			$this->session->unset_userdata('sesspartneronly');
			$this->session->unset_userdata('sesscoalitiononly');
			$this->session->unset_userdata('sessorgidonly');		
		}
		
		if($this->input->post('sesscoalitiononly'))
		{	}else{$this->session->unset_userdata('sesscoalitiononly');}
		
		if($this->input->post('sesspartneronly'))
		{	}else{$this->session->unset_userdata('sesspartneronly');}	
		
		if($this->input->post('sessorgidonly'))
		{	}else{$this->session->unset_userdata('sessorgidonly');}
	
		$this->page();
	}
	
	
	
	
	public function page($limit=false)
	{
		
		$data=array();
		
		$data['animal_type'] 	= $this->common_model->get_animal_types();
		$data['animal_weight'] 	= $this->common_model->get_animal_weight();
		$data['animal_age']    	= $this->common_model->get_animal_age();	
		
		if($this->uri->segment(3))
			$limit = $this->uri->segment(3);
		else	
			$limit = '0';	   
		
		if($_COOKIE['dev_organization_id'])
		{
			$org_id = $_COOKIE['dev_organization_id'];
			$this->session->set_userdata('org_id',$org_id);
		}		
			
		if($this->input->post('orgname'))
		{ 
			$orgname = trim($this->input->post('orgname'));				
			$this->session->set_userdata('sessorgname',$orgname);				
		}else{
			$orgname = $this->session->userdata('sessorgname');
		}
		
		if($this->input->post('animal_type'))
		{ 
			$animal_type = trim($this->input->post('animal_type'));				
			$this->session->set_userdata('sessanimaltype',$animal_type);			
		}else{
			$animal_type = $this->session->userdata('sessanimaltype');
		}
		
		if($this->input->post('gender'))
		{ 
			$gender = trim($this->input->post('gender'));				
			$this->session->set_userdata('sessgender',$gender);					
		}else{
			$gender = $this->session->userdata('sessgender');
		}
		
		if($this->input->post('age'))
		{ 
			$age = trim($this->input->post('age'));				
			$this->session->set_userdata('sessage',$age);	
				
		}else{
			$age = $this->session->userdata('sessage');
		}
		
		if($this->input->post('size'))
		{ 
			$size = trim($this->input->post('size'));				
			$this->session->set_userdata('sesssize',$size);						
		}else{
			$size = $this->session->userdata('sesssize');
		}
		
		if($this->input->post('myloc'))
		{ 
			$myloc = trim($this->input->post('myloc'));				
			$this->session->set_userdata('sessmyloc',$myloc);						
		}else{
			$myloc = $this->session->userdata('sessmyloc');
		}
		
		if($this->input->post('radius'))
		{ 
			$radius = trim($this->input->post('radius'));				
			$this->session->set_userdata('sessradius',$radius);						
		}else{
			$radius = $this->session->userdata('sessradius');
		}
		if($this->input->post('coalitiononly'))
		{  
			if($this->session->userdata('sesscoalitiononly'))
			$this->session->unset_userdata('sesscoalitiononly');
			
			$coalitiononly = trim($this->input->post('coalitiononly'));				
			$this->session->set_userdata('sesscoalitiononly',$coalitiononly);				
			
		}		
		
		if($this->input->post('partneronly'))
		{ 
			if($this->session->userdata('sesspartneronly'))
			$this->session->unset_userdata('sesspartneronly');
			
			$partneronly = trim($this->input->post('partneronly'));				
			$this->session->set_userdata('sesspartneronly',$partneronly);			
		}	
		
		if($this->input->post('sessorgidonly'))
		{   
			
			$this->input->post('sessorgidonly'); 
			if($this->session->userdata('sessorgidonly'))
			$this->session->unset_userdata('sessorgidonly');
			
			$partnerorgid = trim($this->input->post('sessorgidonly'));				
			$this->session->set_userdata('sessorgidonly',$partnerorgid);
			
			
			if($this->session->userdata('sessorgname'))
			$this->session->unset_userdata('sessorgname');
			
			$partnerorgname = $this->common_model->get_partner_org($partnerorgid);
			$data['partnerorgname']=$partnerorgname;			
			$this->session->set_userdata('sessorgname',$partnerorgname['st_org_name']);				
		}
		
		
		
			
		$rec_per_page =	 12; //$this->config->item('per_page');			
			
		
		$total_record = $this->organimal_model->get_total_animal($orgname,$animal_type,$gender,$age,$size,$myloc,$radius,$this->session->userdata('sesscoalitiononly'),$this->session->userdata('sesspartneronly'),$this->session->userdata('sessorgidonly'));
		
		$all_animal = $this->organimal_model->get_animal($rec_per_page,$limit,$orgname,$animal_type,$gender,$age,$size,$myloc,$radius,$this->session->userdata('sesscoalitiononly'),$this->session->userdata('sesspartneronly'),$this->session->userdata('sessorgidonly'));
		
		//echo '<pre/>';
		//print_r($all_animal);exit;
		
		$data['all_animal']  = $all_animal;
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'org_animal/page/';
		$config['base_url']	  	  = $config['base_url'];
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();	
		$data['limit']	=	$limit;	
		$data['total_rows']	=	$config['total_rows'];
		
		$this->load->view('partner-results-animal-list',$data);
		
	}
	
	
	
	
	
		public function set_transfer_org_yes()
	{
	
		$animal_id   = $this->input->post('animal_id');
		$result      = $this->organimal_model->set_transfer_org_yes($animal_id);
		$this->update_animal_transfer();
		$data['result']=1;
		$data['privacy']=0;
		$this->generate_fb_animal($animal_id,'TRANSFER OR ADOPT');
		//$this->session->set_flashdata('profile_upload_success','Record update succefully');
		echo json_encode($data);
	}
	public function set_transfer_org_No()
	{
		$animal_id   = $this->input->post('animal_id');
		$result      = $this->organimal_model->set_transfer_org_no($animal_id);
		$this->update_animal_transfer();
		$data['result']=1;
		//$this->session->set_flashdata('profile_upload_success','Record update succefully');
		echo json_encode($data);
	}
	public function tell_a_friend() {
		
		$this->load->library('email');
		
		if($this->input->post('frm_action')=='submit') {
			
			//Getting email body
			$email_body = $this->common_model->get_email_containt('161');
			$result = $this->organimal_model->get_animal_id($this->input->post('share_animal_id'));
			$this->email->subject($email_details[0]['st_email_subject']);
			
			$patterns = array('%##url##%','%##user_name##%','%##user_msg##%','%##sender_name##%','%##animal_id##%','%##mailto_text##%');
			$replacements = array(base_url().'animal-'.$this->input->post('share_animal_id').'-'.$result['st_animal_name'],$this->input->post('txttoname'),nl2br($this->input->post('txtMessage')),$this->input->post('txtfrom'),base_url().'animal-'.$this->input->post('share_animal_id').'-'.$result['st_animal_name'],"info@doobert.com");
			
			$content = preg_replace($patterns,$replacements,$email_body[0]['st_email_body']);
			
			
			$category = $email_body[0]['st_category'];	
			$this->common_function->send_mail($this->email, $this->input->post('txtemail'), $email_body[0]['st_email_subject'], $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				
			$this->session->set_flashdata('success_mail','Mail Sent Successfully.');
			redirect($_SERVER['HTTP_REFERER']);
		
			
		}
	}
	
	
	
	public function get_org(){

        if (!$this->session->userdata('userid')){
            echo "1";
            die;
            //redirect($this->config->item('base_url'));
        }		
		
		
       else if ($this->input->get('term')){ 
			
            $org = addslashes($this->input->get('term'));            
			$result = $this->organimal_model->get_orgname($org);
            echo json_encode($result);
        } 
    }
	
	
	public function remove_item()
	{   $this->load->model('search_model');	
		$animalId 	= $this->input->post('animalId');
		$msg = $this->search_model->delete_quote_items($animalId);	
		echo json_encode($msg); exit;	
	}
	
	public function animal_checkout()
	{	
	    $this->load->model('search_model');	
		$this->load->model('user_model');	
		$data			 =	array();
		$Err_Msg		 =	'';		
		$data['request_animal'] = $this->search_model->get_quote_items($this->session->userdata('cart_session_id'));
		$this->load->model('user_model');
		$data['user_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		$state_list 			= $this->common_function->state_list;
		$data['state_list'] 	= $state_list;
		
		
		$getuserrequest = $this->search_model->get_user_request();		
						
		//echo '<pre>'; print_r($getuserrequest); die;
								
								
							  
								
		
		//echo '<pre>'; print_r($data['user_details']);die;
		
		$form_field	=	array('st_first_name'		=> "",	
							  'st_last_name'		=> "",		
							  'st_email'			=> "",	
							  'st_phone'			=> "",
							  'st_addr1'			=> "",
							  'st_addr2'			=> "",
							  'st_city'	    		=> "",
							  'st_state'			=> "",
							  'st_country'			=> "",
							  'st_zip'	    		=> "",
							  'st_notes'			=> ""
								);
			foreach($form_field as $key => $value)	
			{	
				$data['add'][$key] = $value;	
			}
			
			
		if($this->input->post('action') == 'checkout')
		{
			foreach ($form_field as $key => $value) {	
					$data['add'][$key] = $this->input->post($key);	
				}
								$this->form_validation->set_rules('st_first_name', 'First Name', 'trim|required');
								$this->form_validation->set_rules('st_last_name', 'Last Name', 'trim|required');
								$this->form_validation->set_rules('st_email', 'Email Address', 'trim|required|valid_email');	
								$this->form_validation->set_rules('st_phone', 'Phone', 'trim|required');
								$this->form_validation->set_rules('st_addr1', 'Address1', 'trim|required');
								$this->form_validation->set_rules('st_addr2', 'Address2', 'trim');
								$this->form_validation->set_rules('st_city', 'City', 'trim|required');
								$this->form_validation->set_rules('st_state', 'State', 'trim|required');
								$this->form_validation->set_rules('st_country', 'Country', 'trim|required');
								$this->form_validation->set_rules('st_zip', 'Zip', 'trim|required');
								$this->form_validation->set_rules('st_notes', 'OrderNotes', 'trim');
						
						
						if($this->form_validation->run() == FALSE)
						{
								$data['Err_Msg'] = validation_errors();											
								$this->load->view('animal-checkout-view',$data);
						}
						else{							
						
								$dataArr = array(
												'st_fname'	=> $this->input->post('st_first_name'),
												'st_lname'	=> $this->input->post('st_last_name'),
												'st_email'	=> $this->input->post('st_email'),
												'st_phone'	=> $this->input->post('st_phone'),
												'st_addr1'	=> $this->input->post('st_addr1'),
												'st_addr2'	=> $this->input->post('st_addr2'),
												'st_city'	=> $this->input->post('st_city'),
												'st_state'	=> $this->input->post('st_state'),
												'st_country'=> $this->input->post('st_country'),
												'st_zip'	=> $this->input->post('st_zip'),
												'st_notes'	=> $this->input->post('st_notes'),
												'dt_created'=> date('y-m-d H:i:s')									
								);

								$id = $this->search_model->insertadoption($dataArr);

								$request_animal = $this->search_model->get_quote_items($this->session->userdata('cart_session_id'));
								
							
							
								// mail functionality starts					
								
								
								$getuserrequest2 = $this->search_model->get_user_request2();		
						
								//echo '<pre>'; print_r($getuserrequest); die;
								
								foreach($getuserrequest2 as $request2){
									
									$animalArr[]=$request2['st_animal_name'];
									//$orgownerArr[]=$request2['st_email_address'];									
								}
								
								$animalval = implode(', ',$animalArr);
								//$orgownerval = implode(', ',$orgownerArr);
								
								
								$email_details = $this->common_model->get_email_containt("165");  // adoption request
								$username= $this->input->post('st_first_name') . ' '. $this->input->post('st_last_name');
								$useremail = $this->input->post('st_email');					
								
								
								
								
								//$orgcarr = explode(', ',$orgownerval);
								//print_r($orgownerArr); die;
								
								// orgowner email 
								
								foreach($getuserrequest as $request){
									
									//$animalArr[]=$request['st_animal_name'];
									//$orgownerArr[]=$request['st_email_address'];
									
									$orgrequestanimal = $this->search_model->get_org_requestanimal($request['in_organization_id']);	
									//st_director
									//print_r($orgrequestanimal); die;
									$user_name = $request['st_director'];
									$animalArr2 = '';
									$organimal = array();
									foreach($orgrequestanimal as $val){
										
										$organimal[] = $val['st_animal_name'];
										
									}	
									$organimal = array_unique($organimal);	
									$animalArr2 = implode(', ',$organimal);
									
									$templete = $email_details[0]['st_email_body'];				
									$templete  = str_replace("##user_name##",$user_name,$templete);
									$templete  = str_replace("##animal##",$animalArr2,$templete);
									$templete  = str_replace("##customtext##",'received',$templete);	
									$templete  = str_replace("##current_year##",date('Y'),$templete);
									$templete  = str_replace("##first_name##",$this->input->post('st_first_name'),$templete);
									$templete  = str_replace("##last_name##",$this->input->post('st_last_name'),$templete);
									$templete  = str_replace("##email##",$this->input->post('st_email'),$templete);
									$templete  = str_replace("##phone##",$this->input->post('st_phone'),$templete);
									$templete  = str_replace("##addr1##",$this->input->post('st_addr1'),$templete);
									$templete  = str_replace("##addr2##",$this->input->post('st_addr2'),$templete);
									$templete  = str_replace("##city##",$this->input->post('st_city'),$templete);
									$templete  = str_replace("##state##",$this->input->post('st_state'),$templete);
									$templete  = str_replace("##country##",$this->input->post('st_country'),$templete);
									$templete  = str_replace("##zip##",$this->input->post('st_zip'),$templete);
									$templete  = str_replace("##notes##",$this->input->post('st_notes'),$templete);
									
									$strMail = $templete;
									
									//$to		 = 'sadique.mohammed@pulsesolutions.net';
									$to = $request['st_email_address'];
									$message = $strMail;
									$subject = $email_details[0]['st_email_subject'];
									$this->load->library('email');				
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);									
									
									
								}
								
								
								
								
								
								// user email
								if(isset($email_details[0]['st_email_body']))
								{
									$templete = $email_details[0]['st_email_body'];				
									$templete  = str_replace("##user_name##",$username,$templete);
									$templete  = str_replace("##animal##",$animalval,$templete);
									$templete  = str_replace("##customtext##",'sent',$templete);	
									$templete  = str_replace("##current_year##",date('Y'),$templete);
									$templete  = str_replace("##first_name##",$this->input->post('st_first_name'),$templete);
									$templete  = str_replace("##last_name##",$this->input->post('st_last_name'),$templete);
									$templete  = str_replace("##email##",$this->input->post('st_email'),$templete);
									$templete  = str_replace("##phone##",$this->input->post('st_phone'),$templete);
									$templete  = str_replace("##addr1##",$this->input->post('st_addr1'),$templete);
									$templete  = str_replace("##addr2##",$this->input->post('st_addr2'),$templete);
									$templete  = str_replace("##city##",$this->input->post('st_city'),$templete);
									$templete  = str_replace("##state##",$this->input->post('st_state'),$templete);
									$templete  = str_replace("##country##",$this->input->post('st_country'),$templete);
									$templete  = str_replace("##zip##",$this->input->post('st_zip'),$templete);
									$templete  = str_replace("##notes##",$this->input->post('st_notes'),$templete);
									
									$strMail = $templete;
									/*$this->email->message($strMail);
									$this->email->send();*/
									
									//$to		 = 'sadique.mohammed@pulsesolutions.net';
									$to = $useremail;
									$message = $strMail;
									$subject = $email_details[0]['st_email_subject'];
									$this->load->library('email');				
									$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);												
								
								}									
								
								// mail functionality ends	
							
							
								
								foreach($request_animal  as $val)
								{
									
									$dataAoptionorder = array(
																'in_adoption_id'	    => $id,																
																'in_animal_id'          => $val->in_animal_id,																
																'in_organization_id'    => $val->in_organization_id,																
																'dt_created'            => date('y-m-d H:i:s')									
													         );

								$this->search_model->insertadoptionorder($dataAoptionorder);		
								$this->search_model->updaterequestitem($val->in_request_animal_id);
								}						
								
								redirect(base_url().'org_animal/thankyou/');
						}
			
		}
		else{		
		
		$this->load->view('animal-checkout-partner-view',$data);
		}
	}
	
	function generate_fb_animal($id='',$animal_status='')
	{
		$upload_dir 	   = $this->config->item('upload')."fb_animal_share/";
		$upload_dir_temp 	   = $this->config->item('upload')."fb_animal_share_templete/";
		$attched_file 	   = $upload_dir_temp."FB-Share-Template.jpg";
		$y = 0;
		$flag_type = 0;
		
		$ani_data = $this->organimal_model->animal_profile_details($id);
		$fb_post_id = '';
		if(count($ani_data)>0)
		{
			
			$im = imagecreatefromjpeg($attched_file);
			$org_details = $this->common_model->get_single_org_details($ani_data['in_organization_id']);
			$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
			$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
			$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
			$bold_italic =	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-BoldItalic.ttf";
			
			$textColorWhite = imagecolorallocate($im, 255,255,255);
			$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
			$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
			$textDarkGrey = imagecolorallocate ($im,70,70,70);
			$textColorblack = imagecolorallocate ($im, 0, 0, 0);
			$textColorOrange = imagecolorallocate ($im, 241,55,44);
			
			$animal_text = "Hi, I'm ".$ani_data['st_animal_name']." !";	
			
			$textWithLine = $this->linebreaks4imagettftext(16,0,$bold_italic,$animal_text,'260');
			
			imagettftext($im,16, 0,11,35,$textColorWhite,$bold_italic,$textWithLine);
			
			
			$textWith_name = $this->linebreaks4imagettftext(12,0,$font,$org_details['st_org_name'],'120');
			
			imagettftext($im,12, 0,40,180,$textColorGrey,$font,$textWith_name);

			$picture = $this->common_function->get_picture($ani_data['in_organization_id']);
			$profile_image = '';
			if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
			{
				$profile_image = $picture;
				$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
				//$im2 = imagecreatefromjpeg($org_profile_src);
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
				{
					$flag_type = 1;
					$im2 = imagecreatefromgif($org_profile_src);
				}
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
				{
					$flag_type = 1;
					$im2 = imagecreatefrompng($org_profile_src);
				}
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
				{
					$flag_type = 1;
					$im2 = imagecreatefromjpeg($org_profile_src);
				}
				if($flag_type == 1)
				{
					$percent = 0.45;
					list($width, $height) = getimagesize($org_profile_src);
					$newwidth = $width * $percent;
					$newheight = "88";
					$thumb = imagecreatetruecolor($newwidth, $newheight);
					imagecopyresized($thumb, $im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
					imagecopy($im, $thumb,150,166,0,0,$newwidth,$newheight);
				}	
			}
			
			$ani_photo = $this->organimal_model->get_animal_photo($id);
			$profile_image = '';
			/*if(trim($ani_photo) != '' && file_exists($this->config->item('upload').'animal_images/cropped_images/'.$ani_photo)) 
			{
				$ani_profile_src = $this->config->item('upload').'animal_images/cropped_images/'.$ani_photo;
			}	
			else {
				$ani_profile_src = $this->config->item('upload').'animal_images/70x70/doobert-animal-no-image-70.gif';
			}*/	

			if(trim($ani_photo) != '' && file_exists($this->config->item('upload').'animal_images/'.$ani_photo)) 
			{
				
				$ani_profile_src = $this->config->item('upload').'animal_images/'.$ani_photo;
			} else {
				$ani_profile_src = $this->config->item('upload').'animal_images/70x70/doobert-animal-no-image-70.gif';
				//$ani_profile_src = $this->config->item('upload').'animal_images/no_photo_icon.png';
			}	
				
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_GIF) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefromgif($ani_profile_src);
				}
			
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_PNG) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefrompng($ani_profile_src);
				}
			
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_JPEG) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefromjpeg($ani_profile_src);
				}
				if($ani_flag_type == 1)
				{
					//$percent = 3;
					list($width, $height) = getimagesize($ani_profile_src);
					//$newwidth = $width * $percent;
					//$newheight = "200";
					$newwidth = "200";
					$newheight = "247";
					$thumb1 = imagecreatetruecolor($newwidth, $newheight);
					imagecopyresized($thumb1, $im3, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
					
					imagecopy($im, $thumb1,284,0,0,0,$newwidth,$newheight);
				}
			
			
			
			$bend_profile_src = $upload_dir_temp.'FBShareTemplateBend.png';
			$im4 = imagecreatefrompng($bend_profile_src);
			imagettftext($im4,12,0,25,33,$textColorOrange,$bold,$animal_status);
			list($width, $height) = getimagesize($bend_profile_src);
			$newwidth = $width;
			$newheight = $height;
					
			imagecopy($im,$im4,285,190,0,0,$newwidth,$newheight);
				
			
			$main_image = 'ani_'.$id.".jpg";
			$imagename2 = $upload_dir.$main_image;
			
			imagejpeg($im,$imagename2);
			imagedestroy($im);
			
			$UrlTopass_t  =  base_url()."animal-".$ani_data['in_animal_id']."-".$ani_data['st_animal_name'];	
			//$main_image   =  (isset($ani_data['st_fb_image']) && !empty($ani_data['st_fb_image']))?$ani_data['st_fb_image']:'';
			if($main_image!='')
			{
				$this->load->library('facebook');
				$facebook = new Facebook(array(
				  'appId'  => '583989315385497',
				  'secret' => '16db615a5e6adaaef4c7c3f988b5b510',
				));
				$group_id = '668444446839315';
				//$fb_access_token = 'EAAITIpuyOJkBAKbv2UOrZBslYN09twFowF1NoNGF1HkB3RRwWxNJCjOdweSBHDjYYAQKzZCRltRzDwwHHfHrVm3BvDFLmD0LaKVmlEBCgwr8bhgpqnkQYK0QKZB04d1tAkDaZCQqxUgxxnZBnHtBRMcxWSfkwVh8ZD'; 
				//$fb_access_token = 'EAADXZChL4qkIBAA5So8A9CCS7ob3z6FpirJsDbAFgm4U7P2fh7EIY8kxbrOFBJZBFBBX8PFIoNgBl2qlHHwGdnZBlNXM9ZAldHiN6G7fcxZByeiocO9ZA6ygIgxoKNcA7wADpDszfeZAfoa6QTDAWQVHkBm9OxMplBbEdkRvTP4kzBg2R3pWY61otZBpOXm42ydwl7ZAOfs1ROAZDZD';
				//$fb_access_token   = 'EAAEfaggKHm8BAHg4SDY6IxBmH76ExLLe2dzFiaEW6MkBIo6YUofpQvvZB79WhxHto6YWfZAidQYZCqyzZBdqpml3BxLEhEDUDcuuiIuCaJ8wcsDsD6pOosCzx7ZAyeiYt9y1LAlTWdj2gsYBOi0rfNO98qVni8D4ZD';
				$fb_access_token = 'EAADXZChL4qkIBACvL9bBce3FZCPZA0VKAotjMQMNgcCrCviqz4RxdkpgQF0RtcFLy55E74H12fHAGozIjqZA3y89kvWYBJdYS4BpuDJIsc4JIUgWa0CEF1n2FZCvC0lgOGOJMeqJXPu6Mf1XWpEP9wAKq8t3JZCkEZD';
						
				$publish = $facebook->api('/'.$group_id.'/feed', 'post',
								array(
								'scrape'=>'true',
								'access_token' => $fb_access_token,
								'message'=> 'Animal with '.$org_details['st_org_name'],
								'link' => $UrlTopass_t,
								//'link' => 'apps.facebook.com/doobert-rescue/?fb_appcenter=1',
								'picture' => base_url()."upload/fb_animal_share/".$main_image,
								'description' => 'Animal with '.$org_details['st_org_name']
								));
								
				
				if(isset($publish) && count($publish)>0)
				{
					if(isset($publish['id']) && !empty($publish['id']))
					{	
						$fb_post_id = $publish['id'];
					}	
				}		
								
				$this->db->where('in_animal_id',$id);
				$this->db->update('tbl_animal',array('st_fb_img'=>$main_image,'in_fb_post_id'=>$fb_post_id));
			}

		}	
					
		
	}
	
	
	function generate_fb_animal_image($id='')
	{
		$upload_dir 	   = $this->config->item('upload')."fb_animal_share/";
		$upload_dir_temp 	   = $this->config->item('upload')."fb_animal_share_templete/";
		$attched_file 	   = $upload_dir_temp."FB-Share-Template.jpg";
		$y = 0;
		$flag_type = 0;
		
		$ani_data = $this->organimal_model->animal_profile_details($id);
		$main_image = '';
		$fb_post_id = '';
		if(count($ani_data)>0)
		{	
			$im = imagecreatefromjpeg($attched_file);
			$org_details = $this->common_model->get_single_org_details($ani_data['in_organization_id']);
			$font 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Regular.ttf";
			$bold 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Bold.ttf";
			$light 	=	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-Light.ttf";
			$bold_italic =	$_SERVER["DOCUMENT_ROOT"]."/assets/fonts/Roboto/Roboto-BoldItalic.ttf";
			
			$textColorWhite = imagecolorallocate($im, 255,255,255);
			$textColorYellow = imagecolorallocate ($im, 255, 255, 0);
			$textColorGrey = imagecolorallocate ($im, 78, 78, 81); 
			$textDarkGrey = imagecolorallocate ($im,70,70,70);
			$textColorblack = imagecolorallocate ($im, 0, 0, 0);
			$textColorOrange = imagecolorallocate ($im, 241,55,44);
			
			$animal_text = "Hi, I'm ".$ani_data['st_animal_name']." !";	
			
			$textWithLine = $this->linebreaks4imagettftext(16,0,$bold_italic,$animal_text,'260');
			
			imagettftext($im,16, 0,11,35,$textColorWhite,$bold_italic,$textWithLine);
			
			
			$textWith_name = $this->linebreaks4imagettftext(12,0,$font,$org_details['st_org_name'],'120');
			
			imagettftext($im,12, 0,40,180,$textColorGrey,$font,$textWith_name);

			$picture = $this->common_function->get_picture($ani_data['in_organization_id']);
			$profile_image = '';
			if(trim($picture) != '' && file_exists($this->config->item('upload').'org_doc/thumb/'.$picture)) 
			{
				$profile_image = $picture;
				$org_profile_src = $this->config->item('upload').'org_doc/thumb/'.$profile_image;
				//$im2 = imagecreatefromjpeg($org_profile_src);
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_GIF) 
				{
					$flag_type = 1;
					$im2 = imagecreatefromgif($org_profile_src);
				}
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_PNG) 
				{
					$flag_type = 1;
					$im2 = imagecreatefrompng($org_profile_src);
				}
			
				if (exif_imagetype($org_profile_src) == IMAGETYPE_JPEG) 
				{
					$flag_type = 1;
					$im2 = imagecreatefromjpeg($org_profile_src);
				}
				if($flag_type == 1)
				{
					$percent = 0.45;
					list($width, $height) = getimagesize($org_profile_src);
					$newwidth = $width * $percent;
					$newheight = "88";
					$thumb = imagecreatetruecolor($newwidth, $newheight);
					imagecopyresized($thumb, $im2, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
					imagecopy($im, $thumb,151,164,0,0,$newwidth,$newheight);
				}	
			}
			
			$ani_photo = $this->organimal_model->get_animal_photo($id);
			$profile_image = '';
			/*if(trim($ani_photo) != '' && file_exists($this->config->item('upload').'animal_images/cropped_images/'.$ani_photo)) 
			{
				
				$ani_profile_src = $this->config->item('upload').'animal_images/cropped_images/'.$ani_photo;
			} else {
				$ani_profile_src = $this->config->item('upload').'animal_images/70x70/doobert-animal-no-image-70.gif';
			}*/	
			
			if(trim($ani_photo) != '' && file_exists($this->config->item('upload').'animal_images/'.$ani_photo)) 
			{
				
				$ani_profile_src = $this->config->item('upload').'animal_images/'.$ani_photo;
			} else {
				//$ani_profile_src = $this->config->item('upload').'animal_images/no_photo_icon.png';
				$ani_profile_src = $this->config->item('upload').'animal_images/70x70/doobert-animal-no-image-70.gif';
			}
					
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_GIF) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefromgif($ani_profile_src);
				}
			
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_PNG) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefrompng($ani_profile_src);
				}
			
				if (exif_imagetype($ani_profile_src) == IMAGETYPE_JPEG) 
				{
					$ani_flag_type = 1;
					$im3 = imagecreatefromjpeg($ani_profile_src);
				}
				if($ani_flag_type == 1)
				{
					//$percent = 1;
					list($width, $height) = getimagesize($ani_profile_src);
					//$newwidth = $width * $percent;
					$newwidth = "200";
					//$newheight = "200";
					$newheight = "249";
					$thumb1 = imagecreatetruecolor($newwidth, $newheight);
					imagecopyresized($thumb1, $im3, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);
					
					imagecopy($im, $thumb1,284,0,0,0,$newwidth,$newheight);
				}
			
			
			
			/*$bend_profile_src = $upload_dir_temp.'FBShareTemplateBend.png';
			$im4 = imagecreatefrompng($bend_profile_src);
			imagettftext($im4,12,0,25,33,$textColorOrange,$bold,$animal_status);
			list($width, $height) = getimagesize($bend_profile_src);
			$newwidth = $width;
			$newheight = $height;
					
			imagecopy($im,$im4,285,190,0,0,$newwidth,$newheight);*/
				
			
			$main_image = 'ani_'.$id.".jpg";
			$imagename2 = $upload_dir.$main_image;
			
			imagejpeg($im,$imagename2);
			imagedestroy($im);
			
			$UrlTopass_t  =  base_url()."animal-".$ani_data['in_animal_id']."-".$ani_data['st_animal_name'];	
		
			if($main_image!='')
			{		
				$this->db->where('in_animal_id',$id);
				$this->db->update('tbl_animal',array('st_fb_img'=>$main_image));
			}

		}	
					
		
	}
	
	function linebreaks4imagettftext($size,$angle,$fontfile,$text,$maximumWidth,$lineBreakCharacter = PHP_EOL) 
	{
        // create an array with all the words
        $words = explode(' ', $text);

        // process all our words to generate $textWithLineBreaks
        $textWithLineBreaks = '';
        $currentLine = '';
        foreach ($words as $position => $word) {
            // place the first word into $currentLine without any processing (we
            // always want to include the first word on the first line--obviously)
            if ($position === 0) {
                $currentLine = $word;
            } else {
                // calculate the text's size if we were to add the word
                $textDimensions = imagettfbbox(
                    $size,
                    $angle,
                    $fontfile,
                    $currentLine . ' ' . $word
                );
                $textLeft = min($textDimensions[0], $textDimensions[6]);
                $textRight = max($textDimensions[2], $textDimensions[4]);
                $textWidth = $textRight - $textLeft;
                if ($textWidth > $maximumWidth) {
                    // the text is too wide with the added word so we add a line
                    // break then start a new line with only the added word
                    $textWithLineBreaks .= $currentLine;
                    $textWithLineBreaks .= $lineBreakCharacter;

                    $currentLine = $word;
                } else {
                    // we have space on the current line for the added word so we
                    // add a space then the word
                    $currentLine .= ' ';
                    $currentLine .= $word;
                }
            }
        }
        // the current line is still unadded to $textWithLineBreaks so we add it
        $textWithLineBreaks .= $currentLine;

        // return $text with line breaks added
        return $textWithLineBreaks;
    }
	
	
	public function thankyou()
	{
		$this->load->view('adoption_thank_you_partner');
	}
	
	public function delete_fb_post()
	{
		$this->load->helper('facebook');		
		$fb = init_facebook();
		$post_id = '668444446839315_843849249298833';
		$fb_access_token = 'EAAITIpuyOJkBAKbv2UOrZBslYN09twFowF1NoNGF1HkB3RRwWxNJCjOdweSBHDjYYAQKzZCRltRzDwwHHfHrVm3BvDFLmD0LaKVmlEBCgwr8bhgpqnkQYK0QKZB04d1tAkDaZCQqxUgxxnZBnHtBRMcxWSfkwVh8ZD'; 
		try {
				$response = $fb->delete('/'.$post_id,array(),$fb_access_token);
			} catch(Facebook\Exceptions\FacebookResponseException $e) {
				echo 'Graph returned an error: ' . $e->getMessage();
				exit;
			} catch(Facebook\Exceptions\FacebookSDKException $e) {
				echo 'Facebook SDK returned an error: ' . $e->getMessage();
			}
			
			echo "<pre>"; print_r($response); echo "</pre>";
			die;
			
		/*try {
				$response = $fb->delete('/'.$post_id,array (),$fb_access_token);
			} catch(Facebook\Exceptions\FacebookResponseException $e) {
				echo 'Graph returned an error: ' . $e->getMessage();
				exit;
			} catch(Facebook\Exceptions\FacebookSDKException $e) {
				echo 'Facebook SDK returned an error: ' . $e->getMessage();
			}*/
	}		
}
	


/* End of file org_animal.php */
/* Location: ./application/controllers/org_animal.php */