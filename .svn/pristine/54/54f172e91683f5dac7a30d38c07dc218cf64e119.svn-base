<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class User extends CI_Controller {

	/**  
	 * Index Page for this controller. 
	 *
	 * Maps to the following URL 
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	 
	
	public function __construct() 
    { 
		parent::__construct();
		
		
		$this->output->enable_profiler(FALSE);
		
		
		$this->load->library('common_function');
		//$this->common_function->check_front_logged_in($this);
		//error_reporting(E_STRICT);
		//$this->load->library('session');
		$this->load->model('user_model');
		$this->load->model('organimal_model');		
		$this->load->model('common_model');
		$this->load->model('foster_model');				
		$this->load->library('form_validation');
		$this->load->library('BrowserDetection');
		$this->load->helper('url');
		$this->load->helper('cookie');
		$this->load->helper('smstest');
		$this->session->unset_userdata('org_id');
		$this->session->unset_userdata('user_org_id');
		setcookie("dev_organization_id","",time()-3600,"/","dev.doobert.com");
		//$this->session->unset_userdata('transport_id');
		$this->session->unset_userdata('delete_org_id');
		
	}	
	 
	public function index()
	{  	
		 $data = array();
		 //$data['user_fb'] = '';
		 
		 
		
		 
		if(isset($_GET['fbapp_blocked']) && $_GET['fbapp_blocked'] == '1') 
		{			
			$this->session->set_userdata('fbapp_status_warning', 'Invalid username or password.');	
		}
		if($this->session->userdata('userid') || $this->input->cookie('devuserid'))
		{  
			if($this->input->cookie('devuserid')){
				
				//$user_details = $this->user_model->get_user_profile($get_user_id);
					$this->session->set_userdata('userid',$this->input->cookie('devuserid'));
                    if($this->input->cookie('user_name'))
					{
						$this->session->set_userdata('user_name', $this->input->cookie('user_name'));
					}
					if($this->input->cookie('last_name'))
					{
						$this->session->set_userdata('last_name',$this->input->cookie('last_name'));
					}
					if($this->input->cookie('email'))
					{
						$this->session->set_userdata('email', $this->input->cookie('email'));
					}
					
					$user_details = $this->user_model->get_user_profile($this->input->cookie('userid'));
					if(isset($user_details['st_zip']) && !empty($user_details['st_zip']))
					{
						$this->session->set_userdata('zip',$user_details['st_zip']);
					}
					if(isset($user_details['st_display_name']) && !empty($user_details['st_display_name']))
					{
						$this->session->set_userdata('user_name',$user_details['st_display_name']);
					}
					if(isset($user_details['st_last_name']) && !empty($user_details['st_last_name']))
					{
						$this->session->set_userdata('last_name',$user_details['st_last_name']);
					}
					if(isset($user_details['st_email']) && !empty($user_details['st_email']))
					{
						$this->session->set_userdata('email',$user_details['st_email']);
					}	
					/*delete_cookie('userid'); 
					delete_cookie('user_name');
					delete_cookie('last_name');
					delete_cookie('email');	*/
			}
			//redirect($this->config->item('base_url')."my-profile/");
			redirect($this->config->item('base_url') . "dashboard/");
		}
		elseif($this->session->userdata('fb_session'))
		{
			$fb_session = $this->session->userdata('fb_session');
			if(isset($fb_session) && is_array($fb_session) && count($fb_session) > 0){  
				redirect($this->config->item('base_url')."facebook-login/");
			}	
		}
		
		//echo "<pre>";print_r($data);		
		$data['Err_Msg_forgot'] = '';
		$data['Err_Msg_reg'] = '';
		$data['Err_Msg_login'] = '';
		$data['Err_Msg'] = '';
		$data['rem_password'] = get_cookie('devpass');
		$data['rem_email'] 	  = get_cookie('devuser');
		$data['menu_no'] 	  = 'yes';
		$form_field	=	array('username'	=> "",
							 'lastname'		=> "",
							  'email'		=> "",							  
							  'password'	=> "",
							  'rpassword'	=> "",
							  'referred_by'	=> "",
							  'tnc' 		=> "",
							  'signup'		=> "",
							  'remember'	=> "",
							  'action'		=> "",
							  'oldertc' 	=> ""
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['register'][$key] = $value;	
		}					
		if($this->input->post('action') || (get_cookie('devpass') && get_cookie('devuser')))
		{ 
		
			$auto_login_status = $this->common_model->check_auto_login_status();
			if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
			{
				$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
				$this->session->set_userdata('login_disable',$msg);
				//redirect($this->config->item('base_url') . 'user/');
				return $this->load->view('user_login',$data);
			}
			
			foreach ($form_field as $key => $value) {	
					$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			if($this->input->post('action')=="registeruser")
			{  
				$this->form_validation->set_rules('username', 'First Name', 'trim|required');
				$this->form_validation->set_rules('lastname', 'Last Name', 'trim|required');
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				$this->form_validation->set_rules('password', 'Password', 'trim|required|spacecheck|min_length[6]|matches[rpassword]');
				$this->form_validation->set_rules('rpassword', 'Re-type Your Password', 'trim|required');
				$this->form_validation->set_rules('referred_by', 'Person/Organization Name', 'trim');
				$this->form_validation->set_rules('tnc', 'I agree to the Terms of Service and Privacy Policy', 'trim|required');
				$this->form_validation->set_rules('oldertc', 'I am 18 or older and have read and agree to the Terms and Conditions.', 'trim|required');
				$counts = $this->common_model->check_exists("tbl_users","in_user_id",array("st_email"=>$data['register']['email'],"in_deleted"=>'0'));
				$Err_Msg  ='';
				if($counts>0)
				{
					$Err_Msg = "Email address already exists.";
				}
				if($this->form_validation->run() == FALSE || $Err_Msg!='')
				{
						$data['Err_Msg_reg'] = validation_errors().$Err_Msg;
						//echo "<pre>";print_r($data);die;
						$this->load->view('user_login',$data);	
				}
				else
				{
					$browser_details = array();
					$browser_details["page_referral"]	= $_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
					$browser_details["ip_address "]		= $_SERVER['REMOTE_ADDR'];
					$browser_details["browser_used"]	= $_SERVER['HTTP_USER_AGENT'];
	
					$data_array = array("st_display_name" => $data['register']['username'],
										"st_last_name"	  => $data['register']['lastname'],
										"st_email" 		  => $data['register']['email'],
										"st_password" 	  => md5($data['register']['password']),
										"st_referred_by"  => $data['register']['referred_by'],
										"dt_created"	  => date("Y-m-d h:i:s"),
										"dt_modified"	  => date("Y-m-d h:i:s"),
										"in_newsletter"	  => (($data['register']['signup']!='')?"Y":"N"),
										"in_public"		  => "1",
										"in_status"	  	  => "1",
										"in_age_terms_flag"	=> $data['register']['oldertc'],
										"st_browser_info"	=> @serialize($browser_details)
										); 
										
										
					$inserted_id = $this->user_model->insert_user($data_array);
					$this->user_model->insert_user_profile(array("in_user_id"=>$inserted_id,"in_status"=>"0","dt_created"=>date("Y-m-d H:i:s")));
					$this->login_details($data['register']);
					$this->email_confirm();
					$this->session->set_userdata('userid',$inserted_id);					
					$this->session->set_userdata('user_name',$data['register']['username']);
					$this->session->set_userdata('last_name',$data['register']['lastname']);
					$this->session->set_userdata('email',$data['register']['email']);
					
					//setcookie("userid",$inserted_id,0,"/",".doobert.com");	
					
					setcookie("devuserid",$inserted_id,0,"/",".doobert.com");
					
					//set coockie
					if(!isset($_COOKIE['doobert_home'])) {
						setcookie("doobert_home","doobert_value",0,"/",".doobert.com");						
					}
					//End set coockie
					
					//redirect($this->config->item('base_url')."my-profile/");	
					redirect($this->config->item('base_url') . "dashboard/");
				}
			}
			elseif($this->input->post('action')=="forgotpassword")
			{
				$result = $this->user_model->user_forgotpassword($data['register']);				
				$error = '';
				if(empty($result))
				{
					$error = "Email address does not exists.";
				}
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				
				if($this->form_validation->run()==FALSE ||$error!='')
				{
						$data['Err_Msg_forgot'] = validation_errors().$error ;
						//echo "<pre>";print_r($data);die;
						$this->load->view('user_login',$data);	
				}
				else
				{					
					$token = md5(time().$result['user_details']['userid']);
					//$result['user_details']['url'] = $this->config->item('base_url')."user/forgotpassword/".$result['user_details']['userid']."/".$token."/";
					$url_link = $this->config->item('base_url') . "user/forgotpassword/" . $result['user_details']['userid'] . "/" . $token . "/";
					$result['user_details']['url'] = '<a href="'.$url_link.'" target="_blank">'.$url_link.'</a>';
					$password_details = array("st_reset_password_token"=>$token,"dt_reset_password_sent"=>date("Y-m-d H:i:s"));
					$this->user_model->update_user($password_details,$result['user_details']['userid']);
					$this->forgotpassword_email($result['user_details']);
					$this->session->set_userdata('forgot_email_member',$result['user_details']['email']);
					redirect($this->config->item('base_url').'forgot-password-thankyou/');
				}
			}
			elseif($this->input->post('action')=="login" || (get_cookie('devpass') && get_cookie('devuser')))
			{
				//echo "<pre>";print_r($this->input->post());die;
				$login_direct = 0;
				if(get_cookie('devpass') && get_cookie('devuser'))
				{
					$data['register']['email']  =  get_cookie('devuser');
					$data['register']['password'] = get_cookie('devpass');
					$data['register']['remember'] = 1;
					$data['register']['action'] = 'login';
					$login_direct = 1;
				} else
				{	
					foreach ($form_field as $key => $value) 
					{	
						$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
					}
				}	
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				$this->form_validation->set_rules('password', 'Password', 'trim|required');
				if($this->form_validation->run() == FALSE && $login_direct == 0)
				{

						$data['Err_Msg_login'] = validation_errors();
						//echo "<pre>";print_r($data);die;
						$this->load->view('user_login',$data);	
				}
				else
				{
					
					$result = $this->user_model->user_login($data['register']);
					//echo "<pre>";print_r($result);die;
					$user_details = $this->user_model->get_user_profile($result['user_details']['userid']);
					//echo "<pre>";print_r($user_details['st_driver']);die;
					if(isset($result) && !empty($result))
					{
						#===================== remember me ==================#
						
										
						$this->session->set_userdata('userid',$result['user_details']['userid']);					
						$this->session->set_userdata('user_name',$result['user_details']['user_name']);
						$this->session->set_userdata('last_name',$result['user_details']['last_name']);
						$this->session->set_userdata('email',$result['user_details']['email']);
						$this->session->set_userdata('zip', $user_details['st_zip']);						
						$this->session->set_userdata('login_direct_status', $result['user_details']['login_direct_status']); 
						$this->session->set_userdata('ststate', $user_details['st_state']);
						$this->session->set_userdata('stcountry', $user_details['st_country']);
						
						//setcookie("userid",$result['user_details']['userid'],0,"/",".doobert.com");
						setcookie("devuserid",$result['user_details']['userid'],0,"/","dev.doobert.com");
						
						if($data['register']['remember']!='')
						{	
							set_cookie('devpass',$data['register']['password'],864000);	
							set_cookie('devuser',$data['register']['email'],864000);
						}
						
						// user activity log starts
						$user_activity = array();	
						$ua	=	new BrowserDetection();
						$user_activity = array("in_user_id" 	=> $result['user_details']['userid'],
                       						   "st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											    "st_device_info" => $ua->getName().' '.$ua->getVersion().' '.$ua->getPlatform(),
											    "dt_created" 	=> date('Y-m-d H:i:s')                      
                   							 );					
						$this->user_model->add_user_activity($user_activity);
						// user activity log ends
						
						if($this->session->userdata('recommend_routing_id'))
						{
							if(count($this->session->userdata('recommend_routing_id'))>0)
							{
								foreach($this->session->userdata('recommend_routing_id') as $key=>$value)
								{
									if(!empty($value))
									{
										$routing_leg = $this->common_model->get_public_assisted_routing($value);
										if(isset($routing_leg)&& count($routing_leg)>0)
										{	
										$legs_cover = array('in_transportation_id'=> $routing_leg['in_transportation_id'],
																 'in_route_type'  => $routing_leg['in_route_type'],
																	'in_user_id'  => $this->session->userdata('userid'),
																'st_from_street' => $routing_leg['st_from_street'],
																  'st_from_city' => $routing_leg['st_from_city'],
																'st_from_state'	 => $routing_leg['st_from_state'],	
																  'st_from_zip'	 => $routing_leg['st_from_zip'],
															  'st_from_country'	 => $routing_leg['st_from_country'],
																'st_to_street' 	 => $routing_leg['st_to_street'],
																  'st_to_city'	=> $routing_leg['st_to_city'],
																 'st_to_state'  => $routing_leg['st_to_state'],	
																	'st_to_zip'	=> $routing_leg['st_to_zip'],
																'st_to_country' => $routing_leg['st_to_country'],
																	'dt_created' => date("Y-m-d H:i:s"),
																	'dt_modified' => date("Y-m-d H:i:s"),
																		'st_info' => $routing_leg['st_notes']
															);
										$this->db->insert('tbl_legs_cover', $legs_cover);
										$delete_legs = array('in_deleted'=>1);
										$this->db->where('in_id',$value);
										$this->db->update('tbl_recommend_routing_leg',$delete_legs);
										}
										
									}	
								}
							}	
							$this->session->unset_userdata('recommend_routing_id');
						}

						if($this->session->userdata('recommend_trip_id'))
						{
							if(count($this->session->userdata('recommend_trip_id'))>0)
							{
								foreach($this->session->userdata('recommend_trip_id') as $key=>$value)
								{
									if(!empty($value))
									{
										$airline_date = $this->common_model->get_public_airline_routing($value);
										if(isset($airline_date)&& count($airline_date)>0)
										{	
											$trip_date = array('in_transportation_id' => $airline_date['in_transportation_id'],
																'in_user_id'   => $this->session->userdata('userid'),
																'in_deleted'   => 0,	
																'dt_created'   => date("Y-m-d H:i:s"),
																'dt_modified'  => date("Y-m-d H:i:s"),
																'dt_trip_date' => date('Y-m-d',strtotime($airline_date['trip_date'])),
																'st_info'	   => $airline_date['st_notes'],	
															  );									
											$this->db->insert('tbl_airline_transport_leg', $trip_date);
											
											$delete_legs = array('in_deleted'=>1);
											$this->db->where('in_id',$value);
											$this->db->update('tbl_recommend_tripdate',$delete_legs);
										}
										
									}	
								}
							}	
							$this->session->unset_userdata('recommend_trip_id');
						}	
						
						if($this->session->userdata('recommend_user_name'))
						{
							$this->session->unset_userdata('recommend_user_name');
						}

						if($this->session->userdata('recommend_user_email'))
						{
							$this->session->unset_userdata('recommend_user_email');
						}		
						
						//set coockie
						if(!isset($_COOKIE['doobert_home'])) {
							setcookie("doobert_home","doobert_value",0,"/",".doobert.com");
							setcookie("doobert_home","doobert_value",0,"/","www.doobert.com");
						}
						//End set coockie
						
						//Added By Nirav 24 June 2016
						  if ($this->session->userdata('url_data')) {
                                $url = $this->session->userdata('url_data');
								if(stristr($url,"transport-create-legs") == true)
								{
									if(stristr($url,"?") == true)
									{
										$query_string = parse_url($url);
										$url_variable = preg_split("/id=/mi",$query_string['query']);
										if(count($url_variable)> 0 )
												$transport_id = $url_variable[1];
										else	
												$transport_id = $url_variable[0];
										if(!empty($transport_id))
										{
											  $organization_id = $this->user_model->get_organization_id($transport_id);
											  $user_permission = $this->user_model->verify_user_permission($this->session->userdata('userid'),$organization_id['in_organization_id']);
											  if($user_permission == "true" )
											  {
												  $this->session->set_userdata('org_id',$organization_id['in_organization_id']);
												  $this->session->set_userdata('user_org_id',$organization_id['in_organization_id']);
												  $this->session->set_userdata('transport_id',$transport_id);
												  //echo "Success";
												  //exit(0);
											  } 	  
										} 		
									}
									$this->session->unset_userdata('url_data');
									redirect($url);				
								} else {
									$this->session->unset_userdata('url_data');
									redirect($url);	
								} 		
                                
                            }
							
						$org_status = $this->user_model->check_organization_status($this->session->userdata('userid'));
						if(count($org_status)>0)
						{
							if($org_status['st_org_complete']!=0)
							{
								$this->session->set_userdata('orgstep',$org_status['st_org_complete']);
								$this->session->set_userdata('orgId',$org_status['in_organization_id']);
								$this->session->set_userdata('popup_display',1);
								$redirect = $this->config->item('base_url') . "org-signup";
								redirect($redirect);
							} else {
								$this->session->set_userdata('orgId',$org_status['in_organization_id']);
								$this->session->set_userdata('popup_display',1);
								$redirect = $this->config->item('base_url') . "org-signup-thankyou";
								redirect($redirect);
							}	
						}
						$user_profile_status = $this->user_model->check_userprofile_status($this->session->userdata('userid'));
					  if(count($user_profile_status)>0)
					  {
							$this->session->set_userdata('registerstep','1');
							if($user_profile_status['hurricane_harvey_reg'] == 1)
							{
								$redirect = $this->config->item('base_url') . "harvey-volunteer-profile";	
							} else {
							$redirect = $this->config->item('base_url') . "volunteer-profile";
							}
							redirect($redirect);
					  }	
						
						//Added By Nirav 23 May 2016
						if($result['user_details']['login_direct_status']== 1)
						{	
								$org_list =  $this->common_model->get_organization_list();
								if(count($org_list)>0 and is_array($org_list))
								{	
									$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
									
									if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
									{
										if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
										$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
										}else{
											$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
										}
									}
									//$redirect = base_url()."org-dashboard/".$org_list[0]['in_organization_id']."/";
									$redirect = base_url()."org-modern-dashboard/".$org_list[0]['in_organization_id']."/";
									redirect($redirect);
								}
								else{
									$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
									if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
									{
										if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
										$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
										}else{
											$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
										}
									}
									redirect($this->config->item('base_url') . "dashboard_modern/");
									//redirect($this->config->item('base_url') . "dashboard/");
								}		
						} 						
						elseif($result['user_details']['status']==0)
						{
							//redirect($this->config->item('base_url')."my-profile/");
							//redirect($this->config->item('base_url')."user/general_details/");
							$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
							if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
							{
								if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
								$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
								}else{
									$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
								}
							}
							redirect($this->config->item('base_url') . "dashboard_modern/");
							//redirect($this->config->item('base_url') . "dashboard/");
						}
						else
						{
							if($this->session->userdata('url_data'))
							{  
								$url = $this->session->userdata('url_data');
								$this->session->unset_userdata('url_data');		
								redirect($url);	
							}
							if($user_details['st_driver']=='Y')
							{
								//redirect($this->config->item('base_url')."my-transportation/");
								$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
								if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
								{
									if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
									$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
									}else{
										$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
									}
								}
								redirect($this->config->item('base_url') . "dashboard_modern/");	
								//redirect($this->config->item('base_url') . "dashboard/");
							}
							else
							{
								//redirect($this->config->item('base_url')."notification/");
								$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
								if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
								{
									if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
									$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
									}else{
										$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
									}
								}
								redirect($this->config->item('base_url') . "dashboard_modern/");
								//redirect($this->config->item('base_url') . "dashboard/");
                            }
								
                        }
						// FOR THE POPOVER FLAG IN SESSION 
						if($this->session->userdata('popup_display')) {
							$this->session->userdata->unset_userdata('popup_display');
						}
						if($this->session->userdata('popup_display_flag')){
							$this->session->userdata->unset_userdata('popup_display_flag');
						}
						
					}
					else
					{
						$this->session->set_flashdata('warning','Invalid username or password.');
						$fb_user_id = $this->common_model->check_fb_user($data['register']['email']);
						if(isset($fb_user_id) && !empty($fb_user_id) && $fb_user_id['st_facebook_uid'] != '')
						{
							$this->session->set_userdata('fb_warning', 'It looks like you created your account by using the Facebook Login / App. Please click on the Login with Facebook to be logged into the system.');	
							$this->session->set_flashdata('warning','');	
						}
						redirect($this->config->item('base_url')."user/");
					}
					
				}
				//echo "<pre>";print_r($this->input->post());die;
			}
			else
			{
				$this->load->view('user_login',$data);				
			}
			
		}
		else
		{
			$this->load->view('user_login',$data);
		}

	}
	
	function forgotpassword()
	{
		$data = array();
		$data['Err_Msg'] = '';
		$token = $this->uri->segment(4);
		$user_id = $this->uri->segment(3);
		$user_data = $this->user_model->forgotpassword_details($token,$user_id);
		if(empty($user_data))
		{
			redirect($this->config->item('base_url')."user/");
		}
		$hours	=	floor((strtotime(date("Y-m-d H:i:s"))-strtotime($user_data['user_details']['reset_password_sent']))/3600);
		if($hours>25)
		{
			$this->session->set_flashdata('warning','Reset password link has expired.');
			redirect($this->config->item('base_url')."user/");
		}
		$form_field	=	array('password'	=> "",
							  'rpassword'	=> "",
							  'action'		=> ""
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['register'][$key] = $value;	
			
		}					
		if($this->input->post('action'))
		{
			foreach($form_field as $key => $value)	
			{		
				$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			$this->form_validation->set_rules('password', 'Password', 'trim|required|min_length[6]|matches[rpassword]');
			$this->form_validation->set_rules('rpassword', 'Re-type Your Password', 'trim|required');
			if($this->form_validation->run() == FALSE)
			{echo 'AA';die;
					$data['Err_Msg'] = validation_errors();
					$this->load->view('forgot-password',$data);	
			}
			else
			{
				$password_arr = array("st_password"=>md5($data['register']['password']),"st_reset_password_token"=>"");
				$this->user_model->update_user($password_arr,$user_id);
				$this->session->set_flashdata('forgot_password','Password has been reset successfully.');
				redirect($this->config->item('base_url').'user/');
			}
		}
		else
		{
			$this->load->view('forgot-password',$data);	
		}
		
		
	}
	
	
	#=========================================================
	#Function : forgot-thankyou
	#Purpose  : Forgot password Thank you page
	#---------------------------------------------------------	
	public function forgot_password_thankyou()
	{
		$data = array();
		$data['email'] = $this->session->userdata('forgot_email_member');
		$this->session->unset_userdata('forgot_email_member');		
		$this->load->view('forgot-password-thankyou',$data);
	}
	#=========================================================
	#Function : facebook_login_partner
	#Purpuse  : To sign in with facebook
	#---------------------------------------------------------	
	public function facebook_login_partner()
	{	
		//echo 'facebook_login called';//exit;
		
		$auto_login_status = $this->common_model->check_auto_login_status();
		if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
		{
			$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
			$this->session->set_userdata('login_disable',$msg);
			//redirect($this->config->item('base_url') . 'user/');
			$data = array();
			return $this->load->view('partner-login',$data);
		}
		
		session_start();
		$fb_sess_arr = array();
		//echo "<pre>";print_r($_SESSION);die;
		//echo "<pre>"; print_r($fb_sess_arr);die;
		if(isset($_SESSION))
		{
			$fb_sess_arr = $_SESSION;
			session_unset();			
			
			//echo "<pre>";print_r($fb_sess_arr);die;
			$var = $this->user_model->facebookuser($fb_sess_arr);
			if($var)
			{
				//echo $this->session->userdata('userid');
				//echo "<pre>";print_r($var);die;
				setcookie("devuserid",$this->session->userdata('userid'),0,"/","dev.doobert.com");
				if($var==='3')
				{
					$this->session->set_userdata('fb_status_warning', 'Invalid username or password.');	
					$url = $this->config->item('base_url');
					//redirect($url);
					echo "<script>
					var parent = window.opener;
					parent.location ='".$url."';
					</script>";
					echo "<script>self.close();</script>";	
				}	
				
				if($var==='2')
				{
					$email_verification_code = $this->user_model->get_email_verification_code($this->session->userdata('userid'));
					$register =  array("userid" => $this->session->userdata('userid'),
									   "username"	=> $this->session->userdata('user_name'),
									   "lastname"	=> $this->session->userdata('last_name'), 
									   "email"		=> $this->session->userdata('email'),
									   "email_verification_code" => (isset($email_verification_code['st_email_verification_code']) && !empty($email_verification_code['st_email_verification_code']))? $email_verification_code['st_email_verification_code'] : '', 
									   );
					$this->login_details($register);
					$this->email_confirm();
					
					//code to subscribe user for doobert newsletter starts
					
					if($this->session->userdata('email'))
					{	
						$user_result = $this->user_model->match_nondoobert_email_id($this->session->userdata('email'));
						if (isset($user_result) && !empty($user_result)) {
						
							$this->load->model('orgtrasnportation_model');
							
							$lat = 0;
							$lon = 0;
							if ($user_result[0]['st_zipcode'] != '') {
								$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_result[0]['st_zipcode']));

                            if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                                $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                                $lat = $get_lat_long['lat'];
                                $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                                $lon = $get_lat_long['lon'];
								}

								$user_profile_info = array();
								$user_profile_info['st_zip'] = $user_result[0]['st_zipcode'];
								$user_profile_info['st_primary_phone'] = $user_result[0]['st_phone'];
								$user_profile_info['in_status'] = "1";

								$data['user_profile'] = $this->user_model->update_user_info($user_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');

								$user_data_array = array("in_status" => "1");
								
								$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($user_result[0]['in_transportation_id']);
								if (isset($transport_co_details) && !empty($transport_co_details)) {
									$user_data_array['st_referred_by'] = $transport_co_details['coordinatorname'];
								}

								$this->user_model->update_user($user_data_array, $this->session->userdata('userid'));

								$driver_data = array("driver_user" => "Y",
									"avl_days" => array("0" => "Sun", "1" => "Mon", "2" => "Tue", "3" => "Wed", "4" => "Thu", "5" => "Fri", "6" => "Sat"),
									"zipcode" => $user_result[0]['st_zipcode'],
									"vehicle_ids" => array("0" => ""),
									//"vehicletype"  => array("0"=>$user_result[0]['st_vehicle_type']),
									"vehicletype" => array("0" => "Other"),
									"distance" => array("0" => 100),
									"color" => array("0" => $user_result[0]['st_vehicle_color']),
									"license" => array("0" => $user_result[0]['st_license_plate']),
									"license_state" => array("0" => $user_result[0]['st_license_state']),
									"googlephotos_vehicle" =>array("0"=>"")
								);
								$this->user_model->update_vehicle_details($driver_data, $this->session->userdata('userid'), $user_result[0]['st_zipcode'], serialize($driver_data['avl_days']),'100', $lat, $lon, 'tbl_user_vehicle');
								$driver_profile_info['st_driver'] = "Y";
								$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
								$data['user_profile'] = $this->user_model->update_user_info($driver_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
							}

							foreach ($user_result as $key => $value) {
								$join_data = array("in_transportation_id" => $value['in_transportation_id'],
                                "in_user_id" => $this->session->userdata('userid'),
                                "in_transportation_leg_id" => $value['in_leg_id'],
                                "in_created_by" => $this->session->userdata('userid'),
                                "dt_created" => date("Y-m-d H:i:s"),
                                "in_deleted" => 0
                            );

                            $this->orgtrasnportation_model->join_legs($join_data);


                            $this->orgtrasnportation_model->update_non_doobert_user_leg($value['in_non_doobert_user_id']);

                            $leg_type = $this->orgtrasnportation_model->get_leg_type_by_id($value['in_leg_id']);

                            if (!empty($leg_type)) {
                                //print_r($leg_type[0]['in_route_type']);
                                if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0) {
                                    //code to update vehicle id in leg details 
                                    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
                                    if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                                        //$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
                                        //$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
                                        $leg_vehicle_detail = array("in_transportation_id" => $value['in_transportation_id'],
                                            "in_user_id" => $this->session->userdata('userid'),
                                            "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                            "in_transportation_leg_id" => $value['in_leg_id'],
                                            "dt_created" => date("Y-m-d H:i:s"),
                                            "in_deleted" => 0
                                        );
                                        $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                                    }
                                }
                            }
                        }
                    }
					
				  }	
                    
					//code to subscribe user for doobert newsletter ends					
				}
				
				//redirect($this->config->item('base_url')."my-profile/");
				$result = $this->user_model->get_user_profile($this->session->userdata('userid'));
				
				$this->session->set_userdata('login_direct_status', $result['in_login_direct']); 
				
				
				
				$url = $this->config->item('base_url') . "partner_login/partner_dashboard/";
					
								
					//echo "<script>window.location ='".$url."';</script>";
					//redirect($url);
					echo "<script>
					window.opener.location.href ='".$url."';
					</script>";
					echo "<script>self.close();</script>";
								
					
			}
			else
			{
				redirect($this->config->item('base_url'));			
			}
			
		}else{
			redirect($this->config->item('base_url'));				
		}
		
	}
	
	
	#=========================================================
	#Function : facebook_login
	#Purpuse  : To sign in with facebook
	#---------------------------------------------------------	
	public function facebook_login()
	{	
		//echo 'facebook_login called';//exit;
		
		$auto_login_status = $this->common_model->check_auto_login_status();
		if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
		{
			$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
			$this->session->set_userdata('login_disable',$msg);
			//redirect($this->config->item('base_url') . 'user/');
			$data = array();
			return $this->load->view('user_login',$data);
		}
		
		session_start();
		$fb_sess_arr = array();
		$sess_data = array();
		//echo "<pre>";print_r($_SESSION);die;
		//echo "<pre>"; print_r($fb_sess_arr);die;
		if(isset($_SESSION))
		{
			$fb_sess_arr = $_SESSION;
			foreach($_SESSION as $key=>$value)
			{
				if($key!='userid' && $key!='username' && $key!='email' && $key!='location' && $key!='__ci_last_regenerate' && $key!='oauth_provider' 
					&& $key!='cart_session_id' && $key!='birthday' && $key!='gender' && $key!='first_name' && $key!='last_name')
				{
					$sess_data[$key] = $value;
				}		
			}
				
			session_unset();			
			
			if(count($sess_data)>0)
			{
				foreach($sess_data as $key=>$value)
				{
					$this->session->set_userdata($key,$value);
				}	
			}
			
			//echo "<pre>";print_r($fb_sess_arr);die;
			$var = $this->user_model->facebookuser($fb_sess_arr);
			if($var)
			{
				//echo "<pre>";print_r($var);die;
				setcookie("userid",$this->session->userdata('userid'),0,"/",".doobert.com");
				if($var==='3')
				{
					$this->session->set_userdata('fb_status_warning', 'Invalid username or password.');	
					$url = $this->config->item('base_url');
					//redirect($url);
					echo "<script>
					var parent = window.opener;
					parent.location ='".$url."';
					</script>";
					echo "<script>self.close();</script>";	
				}	
				
				if($var==='2')
				{
					$email_verification_code = $this->user_model->get_email_verification_code($this->session->userdata('userid'));
					$register =  array("userid" => $this->session->userdata('userid'),
									   "username"	=> $this->session->userdata('user_name'),
									   "lastname"	=> $this->session->userdata('last_name'), 
									   "email"		=> $this->session->userdata('email'),
									   "email_verification_code" => (isset($email_verification_code['st_email_verification_code']) && !empty($email_verification_code['st_email_verification_code']))? $email_verification_code['st_email_verification_code'] : '', 
									   );
					$this->login_details($register);
					//$this->email_confirm();
					
					
					if($this->session->userdata('email'))
					{	
						$user_result = $this->user_model->match_nondoobert_email_id($this->session->userdata('email'));
						if (isset($user_result) && !empty($user_result)) {
						
							$this->load->model('orgtrasnportation_model');
							
							$lat = 0;
							$lon = 0;
							if ($user_result[0]['st_zipcode'] != '') {
								$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_result[0]['st_zipcode']));
								$address_details	=	$this->common_model->getaddress(trim($user_result[0]['st_zipcode']));
                            if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                                $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                                $lat = $get_lat_long['lat'];
                                $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                                $lon = $get_lat_long['lon'];
								}

								$user_profile_info = array();
								$user_profile_info['st_zip'] = $user_result[0]['st_zipcode'];
								$user_profile_info['st_primary_phone'] = $user_result[0]['st_phone'];
								$user_profile_info['st_city'] = isset($address_details['city']) ? $address_details['city'] : '';
								$user_profile_info['st_state'] = isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '';
								$user_profile_info['st_country'] = isset($address_details['st_country']) ? $address_details['st_country'] : '';
								$user_profile_info['st_time_zone'] = isset($address_details['st_time_zone']) ? $address_details['st_time_zone'] : '';
								$user_profile_info['in_status'] = "1";

								$data['user_profile'] = $this->user_model->update_user_info($user_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');

								$user_data_array = array("in_status" => "1");
								
								$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($user_result[0]['in_transportation_id']);
								if (isset($transport_co_details) && !empty($transport_co_details)) {
									$user_data_array['st_referred_by'] = $transport_co_details['coordinatorname'];
								}

								$this->user_model->update_user($user_data_array, $this->session->userdata('userid'));

								$driver_data = array("driver_user" => "Y",
									"avl_days" => array("0" => "Sun", "1" => "Mon", "2" => "Tue", "3" => "Wed", "4" => "Thu", "5" => "Fri", "6" => "Sat"),
									"zipcode" => $user_result[0]['st_zipcode'],
									"vehicle_ids" => array("0" => ""),
									//"vehicletype"  => array("0"=>$user_result[0]['st_vehicle_type']),
									"vehicletype" => array("0" => "Other"),
									"distance" => array("0" => 100),
									"color" => array("0" => $user_result[0]['st_vehicle_color']),
									"license" => array("0" => $user_result[0]['st_license_plate']),
									"license_state" => array("0" => $user_result[0]['st_license_state']),
									"googlephotos_vehicle" =>array("0"=>"")
								);
								$this->user_model->update_vehicle_details($driver_data, $this->session->userdata('userid'), $user_result[0]['st_zipcode'], serialize($driver_data['avl_days']),'100', $lat, $lon, 'tbl_user_vehicle');
								$driver_profile_info['st_driver'] = "Y";
								$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
								$data['user_profile'] = $this->user_model->update_user_info($driver_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
							}

							foreach ($user_result as $key => $value) {
								$join_data = array("in_transportation_id" => $value['in_transportation_id'],
                                "in_user_id" => $this->session->userdata('userid'),
                                "in_transportation_leg_id" => $value['in_leg_id'],
                                "in_created_by" => $this->session->userdata('userid'),
                                "dt_created" => date("Y-m-d H:i:s"),
                                "in_deleted" => 0
                            );

                            $this->orgtrasnportation_model->join_legs($join_data);


                            $this->orgtrasnportation_model->update_non_doobert_user_leg($value['in_non_doobert_user_id']);

                            $leg_type = $this->orgtrasnportation_model->get_leg_type_by_id($value['in_leg_id']);

                            if (!empty($leg_type)) {
                                //print_r($leg_type[0]['in_route_type']);
                                if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0) {
                                    //code to update vehicle id in leg details 
                                    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
                                    if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                                        //$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
                                        //$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
                                        $leg_vehicle_detail = array("in_transportation_id" => $value['in_transportation_id'],
                                            "in_user_id" => $this->session->userdata('userid'),
                                            "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                            "in_transportation_leg_id" => $value['in_leg_id'],
                                            "dt_created" => date("Y-m-d H:i:s"),
                                            "in_deleted" => 0
                                        );
                                        $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                                    }
                                }
                            }
                        }
                    }
					
					$nondoobert_vol_org = $this->user_model->match_nondoobert_org_vol($this->session->userdata('email'));
					{
						if(count($nondoobert_vol_org))
						{
							$insert_record = array();
							foreach($nondoobert_vol_org as $key=>$value)
							{
									if(!empty($value['in_organization_id']))
									{
										$insert_record[] = array('in_organization_id' => $value['in_organization_id'],
																		 'in_user_id' => $this->session->userdata('userid'),
																		 'in_deleted' => 0,
																		'dt_created'  => date("Y-m-d H:i:s"),
																	   'dt_modified'  => date("Y-m-d H:i:s")					
																);
									}
								$this->user_model->delete_nondoobert_org_vol($value['in_vol_user_id']);		
							}
							

							if(count($insert_record)>0)
							{	
										$feedback_id = $this->db->insert_batch('tbl_organization_preferred_volunteer',$insert_record);
							}	
							
						}
					}
					
				  }	
                    
					//code to subscribe user for doobert newsletter ends					
				}
				
				//redirect($this->config->item('base_url')."my-profile/");
				$result = $this->user_model->get_user_profile($this->session->userdata('userid'));
				
				$this->session->set_userdata('login_direct_status', $result['in_login_direct']);

				if(isset($result['st_zip']) && !empty($result['st_zip']))
				{	
					$this->session->set_userdata('zip',$result['st_zip']);										
				}	
				
				$user_activity = array();	
				$ua	=	new BrowserDetection();
				$user_activity = array( "in_user_id" 	=> $this->session->userdata('userid'),
										"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
									   "st_device_info" => $ua->getName().' '.$ua->getVersion().' '.$ua->getPlatform(),
										"dt_created" 	=> date('Y-m-d H:i:s')                      
                   					  );					
				$this->user_model->add_user_activity($user_activity);
				
				if($this->session->userdata('url_data'))
				{
						
						$url = $this->session->userdata('url_data');
						$this->session->unset_userdata('url_data');		
						//redirect($url);	
				} else if($result['in_login_direct']== 1)
				{	
						
								$org_list =  $this->common_model->get_organization_list();
								if(count($org_list)>0 and is_array($org_list))
								{	
									$url = base_url()."org-dashboard/".$org_list[0]['in_organization_id']."/";									
								}										
						}
				elseif(isset($result['profile_status']) && $result['profile_status']==0)
				{
					
					//$url = $this->config->item('base_url')."my-profile/";
					
					$fb_user_email = $this->common_model->get_user_email($this->session->userdata('userid'));
		
					if(empty($fb_user_email['st_email']))
					{
						$this->session->set_flashdata('fb_user_email', 'Your Facebook profile does not contain an email address. Doobert requires an email to notify you for animal rescue activities. Please enter one below.');
						
					}
					
					$url = $this->config->item('base_url') . "dashboard/";
				}
				else
				{
					
					/*if($this->session->userdata('url_data'))
					{
						
						$url = $this->session->userdata('url_data');
						$this->session->unset_userdata('url_data');		
						//redirect($url);	
					}*/
					if(isset($result['st_driver']) && $result['st_driver']=='Y')
					{	
						
						//$url = $this->config->item('base_url')."my-transportation/";
						$url = $this->config->item('base_url') . "dashboard/";
					}
					else
					{
						
						//$url = $this->config->item('base_url')."notification/";
						$url = $this->config->item('base_url') . "dashboard/";
					}
				}
				if(isset($fb_sess_arr['fbapplocation']) && $fb_sess_arr['fbapplocation']!='')
				{
					
					//print_r($fb_sess_arr);
					//echo $url;
					//$url = $this->config->item('base_url')."my-profile/";
					echo "<script>window.location ='".$url."';</script>";
				}
				else
				{
					echo "<script>window.location ='".$url."';</script>";
					//redirect($url);
					/*echo "<script>
					var parent = window.opener;
					parent.location ='".$url."';
					</script>";
					echo "<script>self.close();</script>";	*/
				}				
					
			}
			else
			{
				redirect($this->config->item('base_url'));			
			}
			
		}else{
			redirect($this->config->item('base_url'));				
		}
		
	}
	
	#=========================================================
	#Function : google_login
	#Purpuse  : To sign in with google
	#---------------------------------------------------------	
	public function google_login()
	{	
		//echo 'facebook_login called';//exit;
		
		$auto_login_status = $this->common_model->check_auto_login_status();
		if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
		{
			$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
			$this->session->set_userdata('login_disable',$msg);
			//redirect($this->config->item('base_url') . 'user/');
			$data = array();
			return $this->load->view('user_login',$data);
		}
		
		session_start();
		$fb_sess_arr = array();
		$sess_data = array();
		//echo "<pre>";print_r($_SESSION);die;
		//echo "<pre>"; print_r($fb_sess_arr);die;
		if(isset($_SESSION))
		{
			//$g_sess_arr = $_SESSION;
			foreach($_SESSION as $key=>$value)
			{
				if($key!='userInfo' && $key!='__ci_last_regenerate' && $key!='token' && $key!='cart_session_id')
				{
					$sess_data[$key] = $value;
				}		
			}	
			$g_sess_arr = $_SESSION['userInfo'];
			
			$g_sess = json_decode($g_sess_arr, true);
			//echo "<pre>"; print_r($g_sess);  echo "</pre>";
			//die;
			session_unset();

			if(count($sess_data)>0)
			{
				foreach($sess_data as $key=>$value)
				{
					$this->session->set_userdata($key,$value);
				}	
			}		
			//echo "<pre>";print_r($fb_sess_arr);die;
			$var = $this->user_model->googleuser($g_sess);
			if($var)
			{
				//echo "<pre>";print_r($var);die;
				setcookie("userid",$this->session->userdata('userid'),0,"/",".doobert.com");
				if($var==='3')
				{
					$this->session->set_userdata('fb_status_warning', 'Invalid username or password.');	
					$url = $this->config->item('base_url');
					//redirect($url);
					echo "<script>
					var parent = window.opener;
					parent.location ='".$url."';
					</script>";
					echo "<script>self.close();</script>";	
				}	
				
				if($var==='2')
				{
					$email_verification_code = $this->user_model->get_email_verification_code($this->session->userdata('userid'));
					$register =  array("userid" => $this->session->userdata('userid'),
									   "username"	=> $this->session->userdata('user_name'),
									   "lastname"	=> $this->session->userdata('last_name'), 
									   "email"		=> $this->session->userdata('email'),
									   "email_verification_code" => (isset($email_verification_code['st_email_verification_code']) && !empty($email_verification_code['st_email_verification_code']))? $email_verification_code['st_email_verification_code'] : '', 
									   );
					$this->login_details($register);
					//$this->email_confirm();
					
					
					if($this->session->userdata('email'))
					{	
						$user_result = $this->user_model->match_nondoobert_email_id($this->session->userdata('email'));
						if (isset($user_result) && !empty($user_result)) {
						
							$this->load->model('orgtrasnportation_model');
							
							$lat = 0;
							$lon = 0;
							if ($user_result[0]['st_zipcode'] != '') {
								$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_result[0]['st_zipcode']));
								$address_details	=	$this->common_model->getaddress(trim($user_result[0]['st_zipcode']));
                            if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                                $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                                $lat = $get_lat_long['lat'];
                                $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                                $lon = $get_lat_long['lon'];
								}

								$user_profile_info = array();
								$user_profile_info['st_zip'] = $user_result[0]['st_zipcode'];
								$user_profile_info['st_primary_phone'] = $user_result[0]['st_phone'];
								$user_profile_info['st_city'] = isset($address_details['city']) ? $address_details['city'] : '';
								$user_profile_info['st_state'] = isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '';
								$user_profile_info['st_country'] = isset($address_details['st_country']) ? $address_details['st_country'] : '';
								$user_profile_info['st_time_zone'] = isset($address_details['st_time_zone']) ? $address_details['st_time_zone'] : '';
								$user_profile_info['in_status'] = "1";

								$data['user_profile'] = $this->user_model->update_user_info($user_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');

								$user_data_array = array("in_status" => "1");
								
								$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($user_result[0]['in_transportation_id']);
								if (isset($transport_co_details) && !empty($transport_co_details)) {
									$user_data_array['st_referred_by'] = $transport_co_details['coordinatorname'];
								}

								$this->user_model->update_user($user_data_array, $this->session->userdata('userid'));

								$driver_data = array("driver_user" => "Y",
									"avl_days" => array("0" => "Sun", "1" => "Mon", "2" => "Tue", "3" => "Wed", "4" => "Thu", "5" => "Fri", "6" => "Sat"),
									"zipcode" => $user_result[0]['st_zipcode'],
									"vehicle_ids" => array("0" => ""),
									//"vehicletype"  => array("0"=>$user_result[0]['st_vehicle_type']),
									"vehicletype" => array("0" => "Other"),
									"distance" => array("0" => 100),
									"color" => array("0" => $user_result[0]['st_vehicle_color']),
									"license" => array("0" => $user_result[0]['st_license_plate']),
									"license_state" => array("0" => $user_result[0]['st_license_state']),
									"googlephotos_vehicle" =>array("0"=>"")
								);
								$this->user_model->update_vehicle_details($driver_data, $this->session->userdata('userid'), $user_result[0]['st_zipcode'], serialize($driver_data['avl_days']),'100', $lat, $lon, 'tbl_user_vehicle');
								$driver_profile_info['st_driver'] = "Y";
								$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
								$data['user_profile'] = $this->user_model->update_user_info($driver_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
							}

							foreach ($user_result as $key => $value) {
								$join_data = array("in_transportation_id" => $value['in_transportation_id'],
                                "in_user_id" => $this->session->userdata('userid'),
                                "in_transportation_leg_id" => $value['in_leg_id'],
                                "in_created_by" => $this->session->userdata('userid'),
                                "dt_created" => date("Y-m-d H:i:s"),
                                "in_deleted" => 0
                            );

                            $this->orgtrasnportation_model->join_legs($join_data);


                            $this->orgtrasnportation_model->update_non_doobert_user_leg($value['in_non_doobert_user_id']);

                            $leg_type = $this->orgtrasnportation_model->get_leg_type_by_id($value['in_leg_id']);

                            if (!empty($leg_type)) {
                                //print_r($leg_type[0]['in_route_type']);
                                if (isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0) {
                                    //code to update vehicle id in leg details 
                                    $data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
                                    if (!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id'])) {
                                        //$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
                                        //$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
                                        $leg_vehicle_detail = array("in_transportation_id" => $value['in_transportation_id'],
                                            "in_user_id" => $this->session->userdata('userid'),
                                            "in_vehicle_id" => $data['arrVehicle'][0]['in_vehicle_id'],
                                            "in_transportation_leg_id" => $value['in_leg_id'],
                                            "dt_created" => date("Y-m-d H:i:s"),
                                            "in_deleted" => 0
                                        );
                                        $this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
                                    }
                                }
                            }
                        }
                    }
					
					$nondoobert_vol_org = $this->user_model->match_nondoobert_org_vol($this->session->userdata('email'));
					{
						if(count($nondoobert_vol_org))
						{
							$insert_record = array();
							foreach($nondoobert_vol_org as $key=>$value)
							{
									if(!empty($value['in_organization_id']))
									{
										$insert_record[] = array('in_organization_id' => $value['in_organization_id'],
																		 'in_user_id' => $this->session->userdata('userid'),
																		 'in_deleted' => 0,
																		'dt_created'  => date("Y-m-d H:i:s"),
																	   'dt_modified'  => date("Y-m-d H:i:s")					
																);
									}
								$this->user_model->delete_nondoobert_org_vol($value['in_vol_user_id']);		
							}
							

							if(count($insert_record)>0)
							{	
										$feedback_id = $this->db->insert_batch('tbl_organization_preferred_volunteer',$insert_record);
							}	
							
						}
					}
					
				  }	
                    
					//code to subscribe user for doobert newsletter ends					
				}
				
				//redirect($this->config->item('base_url')."my-profile/");
				$result = $this->user_model->get_user_profile($this->session->userdata('userid'));
				
				$this->session->set_userdata('login_direct_status', $result['in_login_direct']);

				if(isset($result['st_zip']) && !empty($result['st_zip']))
				{	
					$this->session->set_userdata('zip',$result['st_zip']);										
				}	
				
				$user_activity = array();	
				$ua	=	new BrowserDetection();
				$user_activity = array( "in_user_id" 	=> $this->session->userdata('userid'),
										"st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
									   "st_device_info" => $ua->getName().' '.$ua->getVersion().' '.$ua->getPlatform(),
										"dt_created" 	=> date('Y-m-d H:i:s')                      
                   					  );					
				$this->user_model->add_user_activity($user_activity);
				
				if($this->session->userdata('url_data'))
				{
					$url = $this->session->userdata('url_data');
					$this->session->unset_userdata('url_data');		
						//redirect($url);	
				} else if($result['in_login_direct']== 1)
				{	
					$org_list =  $this->common_model->get_organization_list();
					if(count($org_list)>0 and is_array($org_list))
					{	
						$url = base_url()."org-dashboard/".$org_list[0]['in_organization_id']."/";									
					}										
				}
				else if(isset($result['profile_status']) && $result['profile_status']==0)
				{
					
					//$url = $this->config->item('base_url')."my-profile/";
					
					$fb_user_email = $this->common_model->get_user_email($this->session->userdata('userid'));
		
					if(empty($fb_user_email['st_email']))
					{
						$this->session->set_flashdata('fb_user_email', 'Your Facebook profile does not contain an email address. Doobert requires an email to notify you for animal rescue activities. Please enter one below.');
						
					}
					
					$url = $this->config->item('base_url') . "dashboard/";
				}
				else
				{
					
					/*if($this->session->userdata('url_data'))
					{
						
						$url = $this->session->userdata('url_data');
						$this->session->unset_userdata('url_data');		
						//redirect($url);	
					}*/
					if(isset($result['st_driver']) && $result['st_driver']=='Y')
					{	
						
						//$url = $this->config->item('base_url')."my-transportation/";
						$url = $this->config->item('base_url') . "dashboard/";
					}
					else
					{
						
						//$url = $this->config->item('base_url')."notification/";
						$url = $this->config->item('base_url') . "dashboard/";
					}
				}
				
				if(isset($fb_sess_arr['fbapplocation']) && $fb_sess_arr['fbapplocation']!='')
				{
					
					//print_r($fb_sess_arr);
					//echo $url;
					//$url = $this->config->item('base_url')."my-profile/";
					echo "<script>window.location ='".$url."';</script>";
				}
				else
				{
					echo "<script>window.location ='".$url."';</script>";
					//redirect($url);
					/*echo "<script>
					var parent = window.opener;
					parent.location ='".$url."';
					</script>";
					echo "<script>self.close();</script>";	*/
				}				
					
			}
			else
			{
				redirect($this->config->item('base_url'));			
			}
			
		}else{
			redirect($this->config->item('base_url'));				
		}
		
	}

	#=========================================================
	#Function : facebook_link
	#Purpuse  : To sign in with facebook
	#---------------------------------------------------------	
	public function facebook_link()
	{	
		session_start();
		$fb_sess_arr = array();
		//echo "<pre>";print_r($_SESSION);die;
		if(isset($_SESSION))
		{
			$fb_sess_arr = $_SESSION;
			session_unset();			
			
			//echo "<pre>";print_r($fb_sess_arr);die;
			/*$var = $this->user_model->facebookuser($fb_sess_arr);
			if($var)
			{
				//echo "<pre>";print_r($var);die;
				if($var===2)
				{
					$register =  array("username"	=> $this->session->userdata('user_name'),
									   "email"		=> $this->session->userdata('email'));
					$this->login_details($register);
				}
				//redirect($this->config->item('base_url')."my-profile/");
				echo "<script>window.opener.location.reload();</script>";//
				echo "<script>self.close();</script>";		
			}*/
			$var = $this->user_model->link_with_fb($fb_sess_arr);
			echo "<script>window.opener.location.reload();</script>";//
			echo "<script>self.close();</script>";		
			
		}/*else{
			redirect($this->config->item('base_url'));				
		
		}*/
		
	}
	#=========================================================
	#	Function : myprofile
	#	Purpuse  : User profile description
	#---------------------------------------------------------
	
	public function myprofile() {
		//echo "<pre>";print_r($this->session->userdata);die;
		
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data = array();
		
		$data['arrVehicle']	= $this->user_model->get_vehicle_detail($this->session->userdata('userid')); 	
		$data['arrPlane']	= $this->user_model->get_plane_detail($this->session->userdata('userid')); 
		//echo '<pre>'; print_r($data['arrVehicle']); die;
		
		$data['arrVehicleCount']	= count($data['arrVehicle']);  			
		$data['arrPlaneCount']		= count($data['arrPlane']);  			
		//echo '<pre>'; print_r($data['arrVehicle']); die;
		//Getting user profile details
		$data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		//echo '<pre>'; print_r($data['profile_details']); die;
		
		$data['available_details'] = $this->user_model->get_user_available($this->session->userdata('userid'));
		$data['available_details_pilot'] = $this->user_model->get_pilot_available($this->session->userdata('userid'));
		$data['available_details_rider'] = $this->user_model->get_rider_available($this->session->userdata('userid'));
		//echo '<pre>'; print_r($data['available_details']); die;
		
		
		
		//echo '<pre>'; print_r($data['arrVehicle']); die;
		$data['offset'] = '';
		if($data['profile_details']['st_time_zone']=='')
		{
			$timezones = DateTimeZone::listAbbreviations();
				$cities = array();
				//echo "<pre>";print_r($timezones);die;	
				foreach( $timezones as $key => $zones)
				{
					if($key=='pst' || $key=='pdt' || $key=='cst' || $key=='cdt' || $key=='mst' || $key=='mdt' || $key=='est' || $key=='edt')
					{
						foreach( $zones as $id => $zone )
						{
							/**
							 * Only get timezones explicitely not part of "Others".
							 * @see http://www.php.net/manual/en/timezones.others.php
							 */
							//if ( preg_match( '/^(America|Antartica|Arctic|Asia|Atlantic|Europe|Indian|Pacific)\//', $zone['timezone_id'] ) )
								//$cities[$zone['timezone_id']][] = $key;
								if($key == 'pdt'){$kval = 'pst';}
								elseif($key == 'cdt'){$kval = 'cst';}
								elseif($key == 'edt'){$kval = 'est';}
								else{$kval = $key;}
								$cities[$zone['timezone_id']] = $kval;
						}
					}
				}
			$data['offset'] = json_encode($cities);
		}
		//echo '<pre>'; print_r($data['profile_details']); die;
		$new_time_zone 				= $this->common_function->tbl_time_zone();
		//$time_zone 				= $this->common_function->time_zone;
		$data['time_zone'] 			= $new_time_zone;
		
		if($this->input->post('frm_action') == 'frm_post') {
			//Validation rules
			
			
			
			$req_fields = array(	array('field'   => 'address',	'label'  => 'Addresss',		'rules' => 'required|trim'),
									array('field'   => 'city', 		'label'  => 'City', 		'rules' => 'required|trim'),
									array('field'   => 'state', 	'label'  => 'State', 		'rules' => 'required|trim'),
									array('field'   => 'zip',		'label'  => 'Zip',			'rules' => 'required|trim'),
									array('field'   => 'time_zone',	'label'  => 'Time zone',	'rules' => 'required|trim'),	
									array('field'   => 'manager', 	'label'  => 'First Name', 		'rules' => 'required|trim'),
									array('field'   => 'lastname', 	'label'  => 'Last Name', 		'rules' => 'required|trim'),
									array('field'   => 'pphone',	'label'  => 'Primary phone','rules' => 'required|trim'),							
									array('field'   => 'email', 	'label'  => 'Email', 		'rules' => 'required|trim|callback_check_email['.$this->session->userdata('userid').']'),
									array('field'   => 'organization-website',	'label'  => 'Organization Website','rules' => 'callback_validate_urls|trim')
		            			);
								  
			$form_fields	=	array('vehicletype'		=>array(0 =>''),
							      	'color'				=>array(0 =>''),
							      	'license'			=>array(0 =>''),
							      	'license_state'		=>array(0 =>''),
								    'distance'		    =>array(0 =>'')
								  );
								  
								  
			$form_field	=	array(							
									'airplanetype'		=>array(0 =>''),
							      	'airplane_color'	=>array(0 =>''),
							      	'nnumber'			=>array(0 =>''),
							      	'IFR'				=>'',
								    'fly_distance'		=>array(0 =>''),
									'airport_identifier' =>'',
									'planezipcode'		 =>''
								  );
								  
								  
								  		
						

			$this->form_validation->set_rules($req_fields);
			$this->form_validation->set_rules($form_field);
			
			if($this->input->post('joinas') == 'Y') { 
				$this->form_validation->set_rules('zipcode', 		'Zip code', 					'required|trim');
				$this->form_validation->set_rules('avl_days[]', 	'Availability days',			'');
				$this->form_validation->set_rules('vehicletype[]',	'Vehicle type', 				'');
				$this->form_validation->set_rules('distance[]', 	'Max one-way distance in miles','trim');	
			}
			
			if($this->input->post('foster-home-flag') == 'Y') {  
				$this->form_validation->set_rules('animaltype', 	'Animal Type',	'required|trim');
				$this->form_validation->set_rules('demeanor', 		'Demeanor',		'required|trim');
			}
			
			
			if($this->input->post('joinpilot')=='Y'){
				
				$this->form_validation->set_rules('airplanetype', 	'Airplane Type',	'required|trim');
				$this->form_validation->set_rules('planezipcode', 	'Zip Code',	'required|trim');
				$this->form_validation->set_rules('airport_identifier', 	'Airport Identifier',	'required|trim');
				$this->form_validation->set_rules('avl_days_plane[]', 	    'Availability days',	'required');
			}
			
			
		}
		
		
		
		if ($this->form_validation->run() == FALSE) {
			// Validation error				
			$data['error_msg'] = validation_errors();
			
			//Getting animal types
			$data['animal_type'] = $this->common_model->get_animal_types();
			//Getting vehicle types
			$data['vehicle_type'] = $this->common_model->get_vehicle_types();
			$data['plane_type']	  = $this->common_model->get_plane_types();
			//echo '<pre>'; print_r($data['plane_type']); die;
			
			//echo '<pre>';	print_r($data['plane']); die;
			
			$this->load->view('my-profile',$data);
		} else {
			
		//echo '<pre>';	print_r($data['plane']); die;
			
			$profile_info 		= array();
			$user_info 			= array();
			$user_add_info 		= array();
			$user_vehicle_info 	= array();		
			
			$join_as = $this->input->post('joinas');
			
			//User Profile Info
			$profile_info['st_address1'] 		=	$this->input->post('address');
			$profile_info['st_address2'] 		=	$this->input->post('address2');
			$profile_info['st_city'] 			= 	$this->input->post('city');
			$profile_info['st_state'] 			= 	$this->input->post('state');
			$profile_info['st_country'] 		= 	$this->input->post('country');
			
			$profile_info['st_zip'] 			= 	$this->input->post('zip');
			$profile_info['st_time_zone'] 		= 	$this->input->post('time_zone');
			$profile_info['st_primary_phone'] 	= 	$this->input->post('pphone');
			$profile_info['st_secondary_phone'] = 	$this->input->post('sphone');
			$profile_info['st_fax'] 			= 	$this->input->post('fax');
			$profile_info['st_website'] 		= 	$this->input->post('organization_website');
			$profile_info['st_about_me'] 		= 	$this->input->post('aboutme');
			$profile_info['st_pilot'] 			= 	$this->input->post('joinpilot');
			$profile_info['st_driver'] 			= 	 $join_as;  
			//$profile_info['st_transport_cood'] 	= 	(in_array('Transport Coordinator',$join_as))?'Y':'N';
			//$profile_info['st_fundraiser'] 		= 	(in_array('Fundraiser',$join_as))?'Y':'N';
			//$profile_info['st_manager'] 		= 	(in_array('Animal Profile Manager',$join_as))?'Y':'N';
			$profile_info['st_foster_home'] 	= 	$this->input->post('foster-home-flag'); 
			$profile_info['in_status'] 			= 	'1';			
			$profile_info['dt_modified'] 		= 	date('Y-m-d H:i:s');
			
			//User Info 
			$user_info['st_display_name'] 		=	$this->input->post('manager');
			$user_info['st_last_name'] 			=	$this->input->post('lastname');
			$user_info['st_email'] 				=	$this->input->post('email');
			$user_info['in_status'] 			=	'1';
			
			//User Additional info
			$user_add_info['in_user_id'] 		=	$this->session->userdata('userid');
			$user_add_info['in_animal_type_id'] =	$this->input->post('animaltype');
			$user_add_info['in_animal_breed_id']=	$this->input->post('animal-breed');
			$user_add_info['in_demeanor_id'] 	=	$this->input->post('demeanor');
			$user_add_info['in_no_animal'] 		=	$this->input->post('number-of-animals');
		    $user_add_info['in_duration'] 		=	$this->input->post('duration');
			$user_add_info['in_duration_type'] 	=	$this->input->post('duration_type'); 
			$user_add_info['in_status'] 		= 	'1';
			$user_add_info['dt_created'] 		= 	date('Y-m-d H:i:s');
			$user_add_info['dt_modified']		= 	date('Y-m-d H:i:s');
			
			//User Vehicle Info
			$user_vehicle_info['in_user_id'] 				=	$this->session->userdata('userid');			
			$user_vehicle_info['st_driver_availability'] 	=	serialize($this->input->post('avl_days'));		
			$user_vehicle_info['st_zip_vehicle'] 			=	$this->input->post('zipcode');			
			
			
			//User Plane information
			$user_plane_info['in_user_id'] 				=	$this->session->userdata('userid');			
			$user_plane_info['st_pilot_availability'] 	=	serialize($this->input->post('avl_days_plane'));		
			$user_plane_info['st_pilot_zip'] 			=	$this->input->post('planezipcode');				
			
				foreach($form_fields as $key => $value)	
				{	
					if(is_array($value)){
					$data['vehicle'][$key] = $this->input->post($key);	
					}else{
						$data['vehicle'][$key] = $this->input->post($key);
					}			
					
				}
				
				
				foreach($form_field as $key => $value)	
				{	
					if(is_array($value)){
					$data['plane'][$key] = $this->input->post($key);	
					}else{
						$data['plane'][$key] = $this->input->post($key);	
					}			
					
				}
			
			$user_vehicle_info['in_status'] 				= 	'1';		
			$user_vehicle_info['zip_lat']					=	'0';
			$user_vehicle_info['zip_lon']					=	'0';
			$lat=0;
			$lon=0;			
			$user_vehicle_info['dt_created'] 				= 	date('Y-m-d H:i:s');
			$user_vehicle_info['dt_modified'] 				= 	date('Y-m-d H:i:s');
			
			
			
			
			if($user_vehicle_info['st_zip_vehicle'] != '') { 
				$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_vehicle_info['st_zip_vehicle']));
				
				if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
					$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
					$lat=$get_lat_long['lat'];					
					$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
					$lon=$get_lat_long['lon'];
					
					
				}
			}
			
			if($user_plane_info['st_pilot_zip'] != '') { 
				$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_plane_info['st_pilot_zip']));
				
				if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
					$user_plane_info['zip_lat'] = $get_lat_long['lat'];
					$latplane=$get_lat_long['lat'];					
					$user_plane_info['zip_lon'] = $get_lat_long['lon'];
					$lonplane=$get_lat_long['lon'];	
				}
			}
			
			//Updating User data
			$data['user_profile']	=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			
			$data['user_info']		=	$this->user_model->update_user_info($user_info,$this->session->userdata('userid'),'tbl_users');
			
			if($data['profile_details']['ad_userid'] == '') {
				$data['user_add_info']	=	$this->user_model->insert_user_info($user_add_info,'tbl_user_addition_info');
			} else {
				$data['user_add_info']	=	$this->user_model->update_user_info($user_add_info,$this->session->userdata('userid'),'tbl_user_addition_info');
			}
			
			if($join_as=='Y')
			{
				//echo "<pre>";print_r($data['vehicle']);die;
			 $this->user_model->update_user_details($data['vehicle'],$this->session->userdata('userid'),$this->input->post('zipcode'),serialize($this->input->post('avl_days')),$latplane,$lonplane,'tbl_user_vehicle');	
			}
			
			if($join_as=='N')
			{
			 $this->user_model->update_user_details_no($this->session->userdata('userid'),'tbl_user_vehicle');	
			}
			
			
			if($this->input->post('joinpilot')=='Y'){
			$this->user_model->update_plane_details($data['plane'],$this->session->userdata('userid'),$this->input->post('planezipcode'),serialize($this->input->post('avl_days_plane')),$this->input->post('airport_identifier'),$this->input->post('IFR'),$lat,$lon,'tbl_user_pilot');	
			}
			
			if($this->input->post('joinpilot')=='N'){ 
			$this->user_model->update_plane_details_no($this->session->userdata('userid'),'tbl_user_pilot');	
			}
			
			
			
			$this->session->set_userdata('email',$user_info['st_email']);
			$this->session->set_userdata('user_name',$user_info['st_display_name']);
			$this->session->set_userdata('last_name',$user_info['st_last_name']);
			
			$this->session->set_flashdata('message', 'Profile updated successfully.');
			redirect(base_url().'my-profile');
		}
	}
	
	public function logout() {
		$user_id = $this->session->userdata('userid');
		
		$user_signup_type = '';
		$user_type = $this->common_model->get_user_type($user_id);
		
		if(isset($user_type) && !empty($user_type) && isset($user_type['st_signup_as']) && $user_type['st_signup_as'] != '')
		{
			$user_signup_type = $user_type['st_signup_as'];
		}
		
		
		//Unsetting all user data from session.
		$this->session->unset_userdata('user_name');
		$this->session->unset_userdata('last_name');
		$this->session->unset_userdata('email');
		$this->session->unset_userdata('userid');
		$this->session->unset_userdata('url_data');
		
		//unset($_COOKIE['devpass']);
		//setcookie("devpass", "", time() - 3600,"/",".doobert.com");
		setcookie("devpass","",time() - 3600,"/",".dev.doobert.com");
		unset($_COOKIE['devpass']);
		//unset($_COOKIE['devuser']);
		//setcookie("devuser", "", time() - 3600,"/",".doobert.com");
		setcookie("devuser","",time() - 3600,"/",".dev.doobert.com");
		unset($_COOKIE['devuser']);
		//Destroying all session data associated with this user.
		/*unset($_COOKIE['doobert_home']);
		setcookie("doobert_home","",time()-3600,"/",".doobert.com");
		
		$this->session->sess_destroy();
		redirect($this->config->item('base_url'));*/
		
		unset($_COOKIE['doobert_home']);
		setcookie("doobert_home","",time()-3600,"/",".doobert.com");	
		$this->session->sess_destroy();
		
		
		setcookie("devuserid","",time()-3600,"/","dev.doobert.com");
		setcookie("user_name","",time()-3600,"/",".doobert.com");
		setcookie("email","",time()-3600,"/",".doobert.com");
		setcookie("last_name","",time()-3600,"/",".doobert.com");
		setcookie("dev_organization_id","",time()-3600,"/","dev.doobert.com");
		unset($_COOKIE['devuserid']);
		unset($_COOKIE['user_name']);
		unset($_COOKIE['dev_organization_id']);
		

		
		if (isset($_GET["wp"]) && $_GET["wp"] == 1) {
			redirect($this->config->item('web_url'));	
		} else if($this->input->cookie('drivers_signup') || (isset($user_signup_type) && $user_signup_type == 'D'))
			{
				//delete_cookie('drivers_signup');
				unset($_COOKIE['drivers_signup']);
				setcookie("drivers_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescue-drivers/');
			} else if($this->input->cookie('adopters_signup') || (isset($user_signup_type) && $user_signup_type == 'AD'))
			{
				//delete_cookie('adopters_signup'); 
				unset($_COOKIE['adopters_signup']);
				setcookie("adopters_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescue-drivers/');
			} else if($this->input->cookie('pilots_signup') || (isset($user_signup_type) && $user_signup_type == 'P'))
			{
				//delete_cookie('pilots_signup'); 
				unset($_COOKIE['pilots_signup']);
				setcookie("pilots_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescue-pilots/');
			}  else if($this->input->cookie('photographer_signup') || (isset($user_signup_type) && $user_signup_type == 'PH'))
			{
				//delete_cookie('photographer_signup'); 
				unset($_COOKIE['photographer_signup']);
				setcookie("photographer_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescue-photographers/');
			} else if($this->input->cookie('fosters_signup') || (isset($user_signup_type) && $user_signup_type == 'F'))
			{
				//delete_cookie('fosters_signup'); 
				unset($_COOKIE['fosters_signup']);
				setcookie("fosters_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescue-fosters/');
			} else if($this->input->cookie('shelter_org_signup') || (isset($user_signup_type) && $user_signup_type == 'SO'))
			{
				//delete_cookie('fosters_signup'); 
				unset($_COOKIE['shelter_org_signup']);
				setcookie("shelter_org_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/shelter-organization/');
			}
			else if($this->input->cookie('animal_rescue_signup') || (isset($user_signup_type) && $user_signup_type == 'RO'))
			{
				//delete_cookie('fosters_signup'); 
				unset($_COOKIE['animal_rescue_signup']);
				setcookie("animal_rescue_signup","",time()-3600,"/",".doobert.com");
				
				redirect('https://www.doobert.com/animal-rescue-volunteer/animal-rescues/');
			}
		else
		{
			redirect($this->config->item('base_url'));
		}
		
	}
	
	function login_details($data)
	 {		
	 	//echo"<pre>";print_r($data);die;
		/*$this->load->library('email');
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		$allmail = $data['email'];
		//$allmail = "jigar.patel@pulsesolutions.com";
		$this->email->to($allmail);
		if($_SERVER['HTTP_HOST']!='crystal9')
		{
			$this->email->bcc($this->config->item('bcc_email_id'));
		}
		$email_details = $this->common_model->get_email_containt("1");
		if(isset($email_details[0]['st_email_body']))
		{
			$templete = $email_details[0]['st_email_body'];
			$templete  = str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  = str_replace("##display_name##",$data['username'],$templete);
			$this->email->subject($email_details[0]['st_email_subject']);
			$strMail = $templete;
			$this->email->message($strMail);
			$this->email->send();
			//print_r($templete);
			//echo "<pre>";echo $this->email->print_debugger();die;	
		}*/
		
		$allmail = $data['email'];
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("1");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
		if(isset($email_details[0]['st_email_body']))
		{
			$templete	= 	$email_details[0]['st_email_body'];
			$templete  	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  	= 	str_replace("##display_name##",$data['username']." ".$data['lastname'],$templete);	
			$userid		=   $this->session->userdata('userid');
			$confirm_email_url = base_url().'verify/'.base64_encode($userid).'/'.base64_encode($data['email_verification_code']);	
			$templete 	= str_replace("##confirm_email_link##", $confirm_email_url, $templete);
			$templete  	= 	str_replace("##DONATION##",$donation,$templete);
			$strMail 	= 	$templete;
			$to			=	$allmail;
			$subject	=	$email_details[0]['st_email_subject'];
			$message	=	$strMail;  
			$category  =    $email_details[0]['st_category'];
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
			
			$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
		}
		
	}
	
	function forgotpassword_email($data)
	 {		
	 	//echo"<pre>";print_r($data);die;
		/*$this->load->library('email');
		$this->email->set_newline("\r\n");
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		//$this->email->from($this->config->item('admin_email_from'),"Doobert");  
		$allmail = $data['email'];
		//	echo $allmail;die;
		$this->email->to($allmail);
		if($_SERVER['HTTP_HOST']!='crystal9')
		{
			$this->email->bcc($this->config->item('bcc_email_id'));
		}		
		$email_details = $this->common_model->get_email_containt("2");
		if(isset($email_details[0]['st_email_body']))
		{
			$templete = $email_details[0]['st_email_body'];
			$templete  = str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  = str_replace("##display_name##",$data['user_name'],$templete);
			$templete  = str_replace("##forgot_url##",$data['url'],$templete);
			
			$this->email->subject($email_details[0]['st_email_subject']);
			//$this->email->subject("Doobert.com - Forgot password");
		 	$strMail = $templete; 
			$this->email->message($strMail);
			$this->email->send();
			//print_r($templete);
			//echo "<pre>";echo $this->email->print_debugger();die;	
				
		}	*/
		
		/*$this->load->library('email');
		$this->email->from($this->config->item('admin_email_from'),$this->config->item('admin_from_name'));  
		$this->email->to("jigar.patel@pulsesolutions.com");
		$this->email->subject("Doobert.com - Forgot password");
		$strMail = "this is test email"; 
		$this->email->message($strMail);
		$this->email->send();
		echo "<pre>";echo $this->email->print_debugger();die;*/	
		
		$allmail = $data['email'];
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("2");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

							if(isset($q) && !empty($q)){					   		
								foreach($q as $qr)
								{
									 
									  
									if(!empty($qr['st_image']))
									{
											$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
											$imgtitle   =   $qr['st_banner_name']; 										
											$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';					
											
										  
										  
									}
									else
									{
										   $donation='';								 
									}							  
										
								}
							}			
							   
						   else
						   {
							  $donation='';
						   }
		if(isset($email_details[0]['st_email_body']))
		{
			$templete 	= 	$email_details[0]['st_email_body'];
			$templete 	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
			$templete  	= 	str_replace("##display_name##",$data['user_name']." ".$data['lastname'],$templete);
			$templete  	= 	str_replace("##forgot_url##",$data['url'],$templete);
			$templete  	= 	str_replace("##current_year##",date('Y'),$templete);	
			$templete  	= 	str_replace("##DONATION##",$donation,$templete);	
			$strMail 	= 	$templete;
			$to			=	$allmail;
			$subject	=	$email_details[0]['st_email_subject'];
			$message	=	$strMail;
			//echo $message;die;
			$category  =    $email_details[0]['st_category'];
			
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($data['userid']).'/'.$this->common_function->encode_base64($to),$message);
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($data['userid']).'/'.$this->common_function->encode_base64($to),$message);
			
			$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
		}
		
	}
	
	#=========================================================
	#	Function : get_animal_breed
	#	Purpose  : Get Animal breeds by id
	#=========================================================	
	
	public function get_animal_breed() {
		$data['get_animal_breed']  = $this->common_model->get_animal_breed($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	#=========================================================
	#	Function : check_email_ajax
	#	Purpose  : Checking user email
	#=========================================================	
	
	public function check_email_ajax() {
		$data['check_email']  = $this->common_model->check_email_ajax($this->input->post('email'),$this->session->userdata('userid'));
		if ($data['check_email'] == true) {
			echo 1;
		} else {
			echo 0;
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	check_email	
	#	Purpose		:	Email validation.
	# *******************************************************************************************
	
	public function check_email($str,$id) {		
		$exist = $this->user_model->check_email($str,$id);
			
		if ($exist == 1) {
			$this->form_validation->set_message('check_email', 'Email already exist,please specify another one.');
			return FALSE;
		} else {
			return TRUE;
		}
	}
	
	#=========================================================
	#	Function : validdate_urls
	#	Purpose  : Call Back function url is validor not
	#=========================================================	
	function validate_urls($str) {
		if($str=='')
		{
			return TRUE;
		}
		$pattern = "|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i";
        if (!preg_match($pattern, $str)){
            $this->form_validation->set_message('validdate_urls', 'Invalid URL.');
            return FALSE;
		}else {
			return TRUE;
		}
	}
	
	#=========================================================
	#	Function : get_demeanor
	#	Purpose  : Getting daemonear
	#=========================================================
		
	public function get_demeanor() {
		$data['get_demeanor'] = $this->common_model->get_demeanor($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	#=========================================================
	#	Function : user_photo_upload
	#	Purpose  : Changing user profile picture
	#=========================================================
	
	public function user_photo_upload() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'profile/';
		$config['max_size']			= '1024';
		$config['image_width']		= '300';
		$config['image_height']		= '300';
		$config['allowed_types']	= 'jpg|png|gif';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['user_profile_photo']['name']);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['user_profile_photo']['name']));
		
		//Initialization
		$this->upload->initialize($config);
			
		//RW permission to upload folder.
		//chmod($this->config->item('upload')."profile/", 0777);
		
		//Upload image by calling do_upload method.
		$this->upload->do_upload('user_profile_photo');
		$file_errors = array('errors' => $this->upload->display_errors());
		//echo "<pre>";print_r($file_errors);die;
		//Display errors of file upload.
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			
			$this->session->set_flashdata($data);
			
			redirect(base_url().'my-profile/');
		}
		
		/*$img_data = getimagesize($this->config->item('upload').'profile/'.$config['file_name']);
		
		if($img_data[0] <= 300 || $img_data[1] <= 300) {
			$data = array('resize_error' => 'Image max height & width must be more than 300 X 300');
			//echo "<pre>";print_r($data);die;
			$this->session->set_flashdata($data);
			redirect(base_url().'my-profile/');
		}*/
				
		//Resize the image with ratio (4 Thumbnails)
		$thumb = array(	'140x140'		=>	'140',
						'250x250' 		=>  '250',        // added by sadique on 26-09-15
						'36x36'			=>	'36',
						'63x63'			=>	'63',
						'29x29'			=>	'29'
					);
		
		foreach($thumb as $key => $value) {
			$config['image_library'] 	= 'gd2';
			$config['source_image']		= $this->config->item('upload').'profile/'.$config['file_name'];
			$config['new_image']		= $this->config->item('upload').'profile/'.$key.'/'.$config['file_name'];
			$config['maintain_ratio'] 	= TRUE;
			$config['width']	 		= $value;
			$config['height']			= $value;
			
			$this->load->library('image_lib');
			$this->load->library('image_lib', $config); 
			$this->image_lib->initialize($config);
			$this->image_lib->resize();
		}
		
		//Updating data
		$data['picture'] = array('st_profile_image' => $config['file_name'],'dt_modified' => date('Y-m-d H:i:s'));
		$data['upload_photo'] = $this->common_model->update_user_data($data['picture']);
		
		if($data['upload_photo'] == 1) {
			redirect(base_url().'my-profile/');
		}
	}
	
	#=========================================================
	#	Function : user_profile
	#	Purpose  : Getting user profile
	#=========================================================
	
	public function user_profile($id) {
		/*if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}*/		
		
		/*$data = array();
		$data['user_id'] = $id;
		$data['user_profile'] = $this->user_model->get_user_profile_front($id);		
		//echo "<pre>";print_r($data['user_profile']);die;				
		$data['user_vehicle_detail'] = $this->user_model->get_user_vehicle_detail($id);	
		
		//echo "<pre>";print_r($data['user_profile']);die;
		//echo "<pre>";print_r($data['user_vehicle_detail']);die;
		$data['user_org_dtls'] = $this->user_model->get_users_org($id);
		//echo "<pre>";print_r($data['user_org_dtls']);die;
		$data['user_profile_setting_details'] 		= $this->common_model->get_user_profile_setting($id);	
		
		//added by ghanshyam on 30-Oct-2014
		$data['arrPlane']							= $this->user_model->get_plane_detail($id);*/ 
		//$data['available_details_pilot'] 	= $this->user_model->get_pilot_available($this->session->userdata('userid'));
		
		//echo '<pre>'; print_r($data['user_profile_setting_details']); 
		//echo '<pre>'; print_r($data['user_vehicle_detail']); 
		//echo '<pre>'; print_r($data['arrPlane']); 
		//echo '<pre>'; print_r($data['available_details_pilot']); 
		//die;
		
		/*if($data['user_profile']['in_public']=='0' && ($this->session->userdata('userid')!=$data['user_profile']['in_user_id']))
		{ 
				$this->session->set_flashdata('profileaccess', 'No access permission.');
				//redirect(base_url());
				//redirect(site_url('my-profile'));
				redirect(base_url().'my-profile/');		
		}
		*/
		/*if(empty($data['user_profile'])) {
			redirect(base_url());
		}
		
		//added by ghanshyam on 06Nov2014
		$data['trans_coods_id']	 = '';
		if(($this->session->userdata('transport_id')))
		{
			$this->load->model('orgtrasnportation_model');
			$transport_details = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			//echo 'trans_coods_id'.$transport_details[0]['in_trans_coods_id']; //use for testing		
			$data['trans_coods_id']	= $transport_details[0]['in_trans_coods_id'];
		}*/
		//$this->load->view('user-profile-front',$data);

		$data = array();
		$data['user_profile'] = $this->user_model->get_user_detail($id);
		
		if(empty($data['user_profile'])) {
			redirect(base_url());
		}
		
		$data['get_users_own_org'] = $this->user_model->get_users_own_org($id);
		$data['get_users_participating_org'] = $this->user_model->get_users_participating_org($id);
		
		//$data['user_vehicle_detail'] = $this->user_model->get_user_vehicle_detail_with_image($id);
		
		$data['user_profile_setting_details'] = $this->common_model->get_user_profile_setting($id);
		
		$data['user_verified'] = $this->common_model->get_user_verified($id);
		
		$data['user_vehicle_detail'] = $this->user_model->get_user_vehicle_detail_with_image($id);
		$data['user_plane'] = $this->user_model->get_user_plane_detail_with_image($id);
		//print_r($data['user_plane']);exit;
		$data['airline_emp'] = $this->common_model->get_airline_profile($id);
		
		if(stristr($id, '-') === FALSE)
		{	
			$user_id = $id;
		} else {
			$user_data = explode("-",$id);
			$user_id = $user_data[0];
		}
		
		$data['user_id'] = $user_id;
		$data['user_joined_trans'] = $this->common_model->get_userjoind_trans($user_id);
		//$user_volunteer_count = $this->user_model->get_transaction_volunteer_count($id);
		//$user_tc_count        = $this->user_model->get_tc_volunteer_count($id);
		
	    
		//$transcation_count = $user_volunteer_count['count_volunteer']   + $user_tc_count['count_tc'];
		
		$tc = $this->common_model->verify_transport_permission($user_id);	
		
		$data['user_volunteer_count'] = $this->user_model->get_transaction_volunteer_count($user_id);
		if($tc=='true')
		{	
			$data['user_tc_count']        = $this->user_model->get_tc_volunteer_count($user_id);
		}
		
		/*if(empty($user_volunteer_count['average_rating_volunteer']))
		{
			$average_rating = $user_tc_count['average_rating_tc'];
		} else if(empty($user_tc_count['average_rating_tc']))
		{
			$average_rating = $user_volunteer_count['average_rating_volunteer'];
		} else {
		    $average_rating = ($user_volunteer_count['average_rating_volunteer'] + $user_tc_count['average_rating_tc'])/2;
		}*/		
		
		//$data['average_rating']    = round($average_rating);
		//$data['transcation_count'] = $transcation_count;
		
		$data['user_photographer'] = $this->user_model->get_photographer_detail($id);
		$data['user_in_person_vol'] = $this->user_model->get_in_person_volunteer_detail($id);
		$data['user_virtual_sup_vol'] = $this->user_model->get_virtual_sup_vol_detail($id);
		$data['user_foster_detail'] = $this->user_model->get_foster_home_detail($id);
		
		$data['user_foster_animal_type_details'] = $this->user_model->get_foster_animal_type_details($id);
		
		$data['user_foster_reference_details'] = $this->user_model->get_foster_home_ref_by_user_id($id);
		$data['user_st_lost_animal'] = $this->user_model->get_lost_animal_detail($id);
		
		if(!empty($data['get_users_own_org']) && !empty($data['get_users_participating_org'])) {
			$data['user_org_dtls'] = array_merge($data['get_users_own_org'],$data['get_users_participating_org']);
		} else if(!empty($data['get_users_own_org'])) {
			$data['user_org_dtls'] = $data['get_users_own_org'];
		} else if(!empty($data['get_users_participating_org'])) {
			$data['user_org_dtls'] = $data['get_users_participating_org'];
		} else {
			$data['user_org_dtls'] = array();
		}
		
		$st_coverage_area = $this->user_model->getCoordinates($id);
			
		$data['coordinates'] = $st_coverage_area['st_coverage_area'];
		$data['zoom'] = $st_coverage_area['st_map_zoom'];
		$data['center'] = $st_coverage_area['st_map_center'];
		//echo '<pre>'; print_r($data['get_users_participating_org']);die;
		$this->load->view('verified-user-profile',$data);
	}
	
	public function ajax_photo_list()
	{	
		$currpage 		= $this->input->post('currpage');        
		
		  $orderby='asc'; 
		$currt_id = $this->input->post('currt_id'); 
		 
		$data["results"] = array();		
		
	    $page	=	$currpage*12;	
		//print_r($currt_id); die;		
		$data["results"] = $this->user_model->get_photos(12, $page, $orderby,$currt_id);		
		
		echo json_encode($data); exit;
	}
	
	
	#=========================================================
	#	Function : user_detail
	#	Purpose  : Getting user profile
	#=========================================================
	
	public function user_detail($id) {

		$data = array();
		
		$data['user_id'] = $id;
		$data['user_profile'] = $this->user_model->get_user_profile_front($id);
		
		$data['user_org_dtls'] = $this->user_model->get_users_org($id);
		
		if(empty($data['user_profile'])) {
			redirect(base_url());
		}
		
		$this->load->view('user-profile-detail_without-login',$data);
	}
	
	
	public function get_demeanor_details() {
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['demeanor_detail'] = $this->organimal_model->get_demeanor_detail($this->input->post('animal_type'));
		echo json_encode($data);
	}
	
	
	public function private_setting()
	{
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		if($this->input->post('profile_action'))
		{	
			$this->load->library('user_agent');
			$setting = $this->common_function->custom_htmlentities($this->input->post("profile_type"));
			$array = array("in_public"=>$setting);
			$this->user_model->update_user($array,$this->session->userdata('userid'));
			if($this->agent->referrer())
			{
				redirect($this->agent->referrer());
			}
			else
			{
				redirect($this->config->item('base_url'));
			}
		}
		else
		{
			redirect($this->config->item('base_url'));
		}
	}
	
	
		function login_as_admin($uid=false,$admid)
		{  
		
				$userId		=	$this->common_function->decode_base64($uid); 
				$adminId	=	$this->common_function->decode_base64($admid);	
				
				if(!$userId)
				{
					redirect($this->config->item('base_url'));
				}
				
				$user_details = $this->common_function->get_user_profile($userId);
				if(empty($user_details))
				{
					redirect($this->config->item('base_url'));
				}
				
							
										
				$this->session->set_userdata('userid',$user_details['in_user_id']);					
				$this->session->set_userdata('user_name',$user_details['st_display_name']);
				$this->session->set_userdata('last_name',$user_details['st_last_name']);
				$this->session->set_userdata('email',$user_details['st_email']);
				$this->session->set_userdata('zip', $user_details['st_zip']);  //Added By Nirav 14-June-2016
				
				$this->session->set_userdata('adminId',$adminId);
				$this->session->set_userdata('login_as_admin','yes');
				$this->session->set_userdata('ststate', $user_details['st_state']);
				$this->session->set_userdata('stcountry', $user_details['st_country']);
				
				$logmsg		=	"Admin login as " .$user_details['st_display_name']. 
				" (admin-" .$adminId. " User_id-".$userId.")"; 				
					
				$this->user_model->updateAdminLog($adminId, $logmsg);
				//echo "<pre>";print_r($this->session->userdata);die;
				
				
				// user activity log starts
						$user_activity = array();	
						$ua	=	new BrowserDetection();
						$user_activity = array("in_user_id" 	=> $userId,
                       						   "st_ip_server" 	=> $_SERVER['REMOTE_ADDR'],
											    "st_device_info" => $ua->getName().' '.$ua->getVersion().' '.$ua->getPlatform(),
											    "dt_created" 	=> date('Y-m-d H:i:s')                      
                   							 );					
						$this->user_model->add_user_activity($user_activity);
						// user activity log ends
				
				if($user_details['in_status']==0)
				{	
					
					//redirect($this->config->item('base_url')."my-profile/");				
					   
					
					redirect($this->config->item('base_url') . "dashboard/");
				}
				else
				{
					if($user_details['st_driver']=='Y')
					{
						//redirect($this->config->item('base_url')."my-transportation/");						
						
						redirect($this->config->item('base_url') . "dashboard/");
					}
					else
					{
						//redirect($this->config->item('base_url')."notification/");					
						
						redirect($this->config->item('base_url') . "dashboard/");
					}
				}
				
		}
		
		
		
		
		
		function trans_login_as_admin($uid=false,$admid,$trId)
		{   
		
				$userId		=	$this->common_function->decode_base64($uid); 
				$adminId	=	$this->common_function->decode_base64($admid);	
				$transId	=	$this->common_function->decode_base64($trId);	
				
				if(!$userId)
				{
					redirect($this->config->item('base_url'));
				}
				
				$user_details = $this->common_function->get_user_profile($userId);
					//echo "<pre>";print_r($user_details);die;
				if(empty($user_details))
				{
					redirect($this->config->item('base_url'));
				}				
							
										
				$this->session->set_userdata('userid',$user_details['in_user_id']);					
				$this->session->set_userdata('user_name',$user_details['st_display_name']);
				$this->session->set_userdata('last_name', $user_details['st_last_name']);
				$this->session->set_userdata('email',$user_details['st_email']);
				$this->session->set_userdata('ststate', $user_details['st_state']);
				$this->session->set_userdata('stcountry', $user_details['st_country']);
				$this->session->set_userdata('adminId',$adminId);
				$this->session->set_userdata('login_as_admin','yes');			
				$logmsg		=	"Admin login as transport coordinator " . $user_details['st_display_name']. "(admin-" .$adminId. " User_id-".$userId.")"; 						
				$this->user_model->updateAdminLog($adminId, $logmsg);				
					
				redirect($this->config->item('base_url')."org-transportation-scheduled/".$transId); 
				
				
		}
		public function get_airports()
		{
		if(!$this->session->userdata('userid')) 
		{
			redirect($this->config->item('base_url'));
		}
		$lat_long = array();
		$numeric="";
		/*if(is_numeric($this->input->get('term')))
		{
			$numeric="yes";
			$lat_long = array();
		}*/
		$data_val = addslashes($this->input->get('term'));
		$result = $this->common_model->get_airports($data_val,$numeric,$lat_long);
		echo json_encode($result);			
	}
	
	#=========================================================
	#	Function : general_details
	#	Purpose  : User profile General details
	#=========================================================		
	public function general_details()
	{
		
		if(!$this->session->userdata('userid'))
		{
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 		= '';
		$user_details 			= $this->common_model->get_user_profile($this->session->userdata('userid'));
		$new_time_zone 			= $this->common_function->tbl_time_zone();
		$data['time_zone'] 		= $new_time_zone;
		$data['offset'] 		= '';
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		//$data['arpa_status'] = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		$data['profile_details'] = $user_details;
		//echo '<pre>'; print_r($data['profile_details']); die;
		
		//$data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));		
		//$data['arrVehicleCount'] = count($data['arrVehicle']);
		
		//$data['available_details'] = $this->user_model->get_user_available($this->session->userdata('userid'));
        $data['vehicle_type'] = $this->common_model->get_vehicle_types();
		$data['plane_type'] = $this->common_model->get_plane_types();
        //$data['vehicle_edit'] = $this->session->userdata('vehicle_edit');
		//echo "<div style=\"display:none\"><pre>";print_r($user_details);echo "</pre><div>";
		if(get_cookie('tooltip') == 'Y' && get_cookie('get_started') == 'Y')
		{
			set_cookie('tooltip', "Y", 864000);	
			set_cookie('get_started', "Y", 864000);	
			$data['tooltip'] 	 	= "Y";
			$data['get_started'] 	= "Y";
		}
		else
		{
			//set_cookie('tooltip', "N", 864000);		
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			//$data['tooltip'] 	 	= "N";
			//$data['get_started'] 	= "N";
		}		
		$data['user_details'] = $user_details[0];
		//echo "<pre>";print_r($user_details ); ;die;
		if($user_details['0']['st_time_zone']=='')
		{
			$timezones = DateTimeZone::listAbbreviations();
				$cities = array();
				//echo "<pre>";print_r($timezones);die;	
				foreach( $timezones as $key => $zones)
				{
					if($key=='pst' || $key=='pdt' || $key=='cst' || $key=='cdt' || $key=='mst' || $key=='mdt' || $key=='est' || $key=='edt')
					{
						foreach( $zones as $id => $zone )
						{
							/**
							 * Only get timezones explicitely not part of "Others".
							 * @see http://www.php.net/manual/en/timezones.others.php
							 */
							//if ( preg_match( '/^(America|Antartica|Arctic|Asia|Atlantic|Europe|Indian|Pacific)\//', $zone['timezone_id'] ) )
								//$cities[$zone['timezone_id']][] = $key;
								if($key == 'pdt'){$kval = 'pst';}
								elseif($key == 'cdt'){$kval = 'cst';}
								elseif($key == 'edt'){$kval = 'est';}
								else{$kval = $key;}
								$cities[$zone['timezone_id']] = $kval;
						}
					}
				}
			$data['offset'] = json_encode($cities);
		}
		//echo "<pre>";print_r($data['offset']);die;
		/*if($user_details['0']['in_status']=='0')
		{
			redirect($this->config->item('base_url')."my-profile/");
		}*/
		//echo "<pre>";print_r($user_details[0]);die;
		$form_field	=	array('address'					=> $user_details[0]['st_address1'],
							  'address2'				=> $user_details[0]['st_address2'],
							  'city'					=> $user_details[0]['st_city'],
							  'state'					=> $user_details[0]['st_state'],
							  'zip'						=> $user_details[0]['st_zip'],
							  "time_zone"				=> $user_details['0']['st_time_zone'],
							  "manager"					=> $this->session->userdata('user_name'),
							  "lastname"				=> $this->session->userdata('last_name'),
							  "pphone"					=> $user_details[0]['st_primary_phone'],
							  "sphone"					=> $user_details[0]['st_secondary_phone'],
							  "fax"						=> $user_details[0]['st_fax'],
							  "alt_email"				=> $user_details[0]['st_alternate_email'],
							  "email"					=> $this->session->userdata('email'),
							  "organization_website"	=> $user_details[0]['st_website'],
							  "aboutme"					=> $user_details[0]['st_about_me'],
							  'country'					=> $user_details[0]['st_country'],
							  'vehicletype' 			=> array(0 => ''),
							  'color' 					=> array(0 => ''),
							  'avl_days' 				=> array(0 => ''),
							  'license' 				=> array(0 => ''),
							  'license_state' 			=> array(0 => ''),
							  'distance' 				=> array(0 => ''),
							  'googlephotos'			=> array(0 => ''),
							  'vehicle_ids' 			=> array(0 => ''),
							  "driver_user" 			=> "",
							  "image_file" 				=> "",
							  "in_number_verified"		=> $user_details[0]['in_number_verified'],
							  "secondary_email"			=> $user_details[0]['st_secondary_email']
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['profile_details'][$key] = $value;	
		}					
		if ($this->input->post('frm_action')) {
			
			if($this->input->post('zip'))
			{	
				$zip_code = $this->input->post('zip');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zip'] = strtoupper($zip_code);		
			}
			
            $website = $this->input->post('organization_website');
            if (!empty($website)) {
                $_POST['organization_website'] = "http://" . $website;
            }

            foreach ($form_field as $key => $value) {
				
				if (is_array($value)) {
                    $data['profile_details'][$key] = $this->input->post($key);
                } else {
                    $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }
				
				
               // $data['profile_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
            }

            $this->form_validation->set_rules("manager", "First name", "trim|required");
            $this->form_validation->set_rules("lastname", "Last name", "trim|required");
            //$this->form_validation->set_rules('pphone', 'Phone', 'trim|required');
            $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email|callback_check_email[' . $this->session->userdata('userid') . ']');
            //$this->form_validation->set_rules('organization_website', 'Organization Website', 'trim|callback_validdate_urls');
            
			 if($data['profile_details']['secondary_email']!='')
			{
				  $this->form_validation->set_rules('secondary_email', 'Secondary Email', 'trim|valid_email|callback_check_email[' . $this->session->userdata('userid') . ']');
			}
			
			$this->form_validation->set_rules('zip', 'Zip', 'trim|required');
            
			
			
            if ($this->form_validation->run() == FALSE) {
                $data['Err_Msg'] = validation_errors();


                $this->load->view('general_details', $data);
            } else {
                $profile_zipcode = explode('-', $data['profile_details']['zip']);
                if (isset($profile_zipcode[1]) && !empty($profile_zipcode[1])) { 
                    $data['profile_details']['zip'] = $profile_zipcode[0];
            }
				
				
				if(!empty($data['profile_details']['zip'])){
				$address_details	=	$this->common_model->getaddress($data['profile_details']['zip']);
				//echo '<pre>'; print_r($data['profile_details']);die;
				}

				if($user_details[0]['st_primary_phone'] != $data['profile_details']['pphone']){
					$verified = 0;
				}else{
					if($user_details[0]['in_number_verified'] == 1){
						$verified = 1;
					}else{
						$verified = 0;
					}
				}
                $profile_info = array("st_address1" => $data['profile_details']['address'],
                    "st_address2" => $data['profile_details']['address2'],
                    "st_city" => isset($address_details['city']) ? $address_details['city'] : '',
                    "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
                    "st_zip" => $data['profile_details']['zip'],
                    "st_country" => isset($address_details['st_country']) ? trim($address_details['st_country']) : '',
                    "st_time_zone" => $data['profile_details']['time_zone'],
                    "st_primary_phone" => $data['profile_details']['pphone'],
                    "st_secondary_phone" => $data['profile_details']['sphone'],
                    "st_fax" => $data['profile_details']['fax'],
                    "st_website" => $data['profile_details']['organization_website'],
                    "st_about_me" => $data['profile_details']['aboutme'],
                    "dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1",
                    "in_number_verified" => $verified
                );
                $user_info = array("st_display_name" => $data['profile_details']['manager'],
                    "st_last_name" => $data['profile_details']['lastname'],
                    "st_email" => $data['profile_details']['email'],
                    "in_status" => "1",
					"st_secondary_email"=>(isset($data['profile_details']['secondary_email']) && $data['profile_details']['secondary_email']!='')?$data['profile_details']['secondary_email']:'',
                    "dt_modified" => date('Y-m-d H:i:s')
                );
                // echo "<pre>";print_r($profile_info);print_r($user_info);exit;
                $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
                $data['user_info'] = $this->user_model->update_user_info($user_info, $this->session->userdata('userid'), 'tbl_users');
				if($this->session->userdata('user_name'))
						$this->session->unset_userdata('user_name');
				if($this->session->userdata('last_name'))
						$this->session->unset_userdata('last_name');
				if($this->session->userdata('email'))
						$this->session->unset_userdata('email');
				if($this->session->userdata('zip'))
						$this->session->unset_userdata('zip');
                $this->session->set_userdata('email', $user_info['st_email']);
                $this->session->set_userdata('user_name', $user_info['st_display_name']);
                $this->session->set_userdata('last_name', $user_info['st_last_name']);
			
				$this->session->set_userdata('zip',$data['profile_details']['zip']);
						
				
				// added by sadique
				$this->session->set_userdata('ststate',$address_details['state_prefix']);
				$this->session->set_userdata('stcountry',$profile_info['st_country']);
				
				
				
				if ($data['profile_details']['zip'] != '') {

                    $get_lat_long = $this->common_model->get_lattitude_longitude(trim($data['profile_details']['zip']));

					//print_r($get_lat_long);
					//exit;
                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
                        $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
                    } else 
					{
						$lat= '0.00';
						$lon = '0.00';
					}
					$this->user_model->update_vehicle_zip_code($this->session->userdata('userid'), $data['profile_details']['zip'], $lat, $lon);
					$this->user_model->update_plane_zip_code($this->session->userdata('userid'), $data['profile_details']['zip'],$lat, $lon);
                }
				
				if($this->session->userdata('zip'))
				{
					$zip_code_state = $this->common_model->get_zipcode_info($this->session->userdata('zip'));
					
					$q			=	$this->common_model->get_affiliate_donation_detail('3');	

									if(isset($q) && !empty($q)){					   		
										foreach($q as $qr)
										{
											if(!empty($qr['st_image']))
											{									
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name']; 	

													$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';	
											}
											else
											{
												   $donation='';								 
											}							  

										}
									}			

								   else
								   {
									  $donation='';
								   }
					if($zip_code_state['state_prefix']=='CO')
					{
						 if($this->session->userdata('email'))
						 {
								$colorado_email_notification = $this->common_model->get_email_containt("83");	
								
								if(isset($colorado_email_notification[0]['st_email_body']))
								{
									$to = $this->session->userdata('email');
									$message  = $colorado_email_notification[0]['st_email_body'];
									$message  	= 	str_replace("##DONATION##",$donation,$message);
									$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  = str_replace("##display_name##",$this->session->userdata('user_name'). " " .$this->session->userdata('last_name'),$message);				
									$subject  = $colorado_email_notification[0]['st_email_subject'];
									$category = $colorado_email_notification[0]['st_category'];
									$this->mail_notify_colorado($to,$subject,$category,$message);
								}	
								//$message = 'This user has registered colorado zipcode address please verify it';
								
						 }				
					}	 
			   }
               

				// added by sadique on 20-04-16 end
				 $this->session->set_flashdata('success', 'General Details updated successfully.');

                redirect(base_url() . 'my-profile/');		 
			} 
		
		}	
		else {
				$this->load->view('general_details', $data);
			}
		}
		
		public function my_profiles() 
		{ 
			if (!$this->session->userdata('userid')) {
				redirect($this->config->item('base_url'));
			}
			$this->load->view('my-profiles');
		}
	#=========================================================
	#	Function : Transport_details
	#	Purpose  : Transport profile details
	#=========================================================
	
		public function transport_profile() { 
        if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }
		// for user 
		
		/*if($this->session->userdata("volunteer")){
		$this->session->unset_userdata('volunteer');
		}	
		
		if($this->session->userdata("driver")){
		$this->session->unset_userdata("driver");
		}
		
		if($this->session->userdata("other"))
		{
		$this->session->unset_userdata('other');
		}*/
		
		
        $data = array();
		
		if(isset($_GET['display']))
		{
			$data['airline_display'] = 1;
		} else {
			$data['airline_display'] = 0;
		}
		
        $data['Err_Msg'] = '';
        $user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
        $new_time_zone = $this->common_function->tbl_time_zone();
        $data['time_zone'] = $new_time_zone;
        $data['offset'] = '';
        $data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		//$data['arpa_status']   = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));	
		$data['airline']	 = $this->common_model->get_airline();
		$data['airbase']	 = $this->common_model->get_base_airport();
		
		if($user_details['0']['st_airline_emp']=='Y')
		{
			$data['airline_emp'] = $this->common_model->get_airline_profile($this->session->userdata('userid')); 							
		}	
		
		$data['profile_details'] = $user_details[0];
		
		$data['lat_long'] = $this->common_model->get_lattitude_longitude($user_details[0]['st_zip']);
		
		 // FOR THE CHECKING THE GENERAL DETAILS FILLED 
		 //if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			 if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
            $this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');

            if (get_cookie('tooltip')) {
                $data['tooltip'] = get_cookie('tooltip');
            } else {
                set_cookie('tooltip', "N", 864000);
                $data['tooltip'] = "N";
            }

            //echo get_cookie('get_started');exit;
            if (get_cookie('get_started')) {
                $data['get_started'] = get_cookie('get_started');
            } else {
                set_cookie('get_started', "N", 864000);
                $data['get_started'] = "N";
            }

            redirect(base_url() . 'my-profile');
        }
		
		
		$data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));		
		$data['arrVehicleCount'] = count($data['arrVehicle']);
		$vehicle_count = count($data['arrVehicle']);

		$data['arrRider'] = $this->user_model->get_rides_detail($this->session->userdata('userid'));
		$data['available_rider_details'] = $this->user_model->get_rider_available($this->session->userdata('userid'));
		
		$data['available_details'] = $this->user_model->get_user_available($this->session->userdata('userid'));
		$driver_radius             = $this->common_model->get_transport_miles($this->session->userdata('userid'));
		$data['driver_radius']     = (isset($driver_radius) && count($driver_radius)>0)?$driver_radius[0]['distance_to_drive']:'';
		$ride_radius               = $this->common_model->get_local_ride_profile($this->session->userdata('userid')); 
		$data['ride_radius']	  =  (isset($ride_radius['in_ride_radius']) && $ride_radius['in_ride_radius']!='0' && $ride_radius['in_ride_radius']!='' )?$ride_radius['in_ride_radius']:'';
		$pilot_radius              = $this->common_model->get_pilot_miles($this->session->userdata('userid'));	
		$data['pilot_radius']      = (isset($pilot_radius) && count($pilot_radius)>0)?$pilot_radius[0]['distance_to_drive']:'';
        $data['vehicle_type'] = $this->common_model->get_vehicle_types();
		$data['plane_type'] = $this->common_model->get_plane_types();
        $data['vehicle_edit'] = $this->session->userdata('vehicle_edit');
		$this->session->unset_userdata('vehicle_edit');
		$data['plane_edit'] = $this->session->userdata('plane_edit');
		$this->session->unset_userdata('plane_edit');
		//echo  "<br>cookies=".get_cookie('get_started'); //exit;
        //echo "<div style=\"display:none\"><pre>";print_r($user_details);echo "</pre><div>";
        //if(isset($user_details[0]['in_status']) && $user_details[0]['in_status']=='1')
        if (get_cookie('tooltip') == 'Y' && get_cookie('get_started') == 'Y') {
            set_cookie('tooltip', "Y", 864000);
            set_cookie('get_started', "Y", 864000);
            $data['tooltip'] = "Y";
            $data['get_started'] = "Y";
        } else {
            //set_cookie('tooltip', "N", 864000);		

            if (get_cookie('tooltip')) {
                $data['tooltip'] = get_cookie('tooltip');
            } else {
                set_cookie('tooltip', "N", 864000);
                $data['tooltip'] = "N";
            }

            //echo  "<br>cookies=".get_cookie('get_started'); //exit;
            if (get_cookie('get_started')) {
                $data['get_started'] = get_cookie('get_started');
            } else {
                set_cookie('get_started', "N", 864000);
                $data['get_started'] = "N";
            }
            //$data['tooltip'] 	 	= "N";
            //$data['get_started'] 	= "N";
        }
        $data['user_details'] = $user_details[0];
        //echo "<pre>";print_r($user_details ); ;die;
        if ($user_details['0']['st_time_zone'] == '') {
            $timezones = DateTimeZone::listAbbreviations();
            $cities = array();
            //echo "<pre>";print_r($timezones);die;	
            foreach ($timezones as $key => $zones) {
                if ($key == 'pst' || $key == 'pdt' || $key == 'cst' || $key == 'cdt' || $key == 'mst' || $key == 'mdt' || $key == 'est' || $key == 'edt') {
                    foreach ($zones as $id => $zone) {
                        /**
                         * Only get timezones explicitely not part of "Others".
                         * @see http://www.php.net/manual/en/timezones.others.php
                         */
                        //if ( preg_match( '/^(America|Antartica|Arctic|Asia|Atlantic|Europe|Indian|Pacific)\//', $zone['timezone_id'] ) )
                        //$cities[$zone['timezone_id']][] = $key;
                        if ($key == 'pdt') {
                            $kval = 'pst';
                        } elseif ($key == 'cdt') {
                            $kval = 'cst';
                        } elseif ($key == 'edt') {
                            $kval = 'est';
                        } else {
                            $kval = $key;
                        }
                        $cities[$zone['timezone_id']] = $kval;
                    }
                }
            }
            $data['offset'] = json_encode($cities);
        }
        //echo "<pre>";print_r($data['offset']);die;
        /* if($user_details['0']['in_status']=='0')
          {
          redirect($this->config->item('base_url')."my-profile/");
          } */
        //echo "<pre>";print_r($user_details[0]);die;
        $form_field = array(
			//'pop_over' => $user_details[0]['in_pop_over'],
			
			'vehicletype' => array(0 => ''),
            'color' => array(0 => ''),
            'avl_days' => array(0 => ''),
            'license' => array(0 => ''),
            'license_state' => array(0 => ''),
            'distance' => array(0 => ''),
            'googlephotos_vehicle' => array(0 => ''),
            'vehicle_ids' => array(0 => ''),
            //'zip' => '',
            "driver_user" => "",
            "image_file" => "",
			'avl_days_plane' => array(0 => ''),
            'airplanetype' => array(0 => ''),
            'airplane_color' => array(0 => ''),
            'nnumber' => array(0 => ''),
            'IFR' => '',
            //'fly_distance' => array(0 => ''),
            'googlephotos_pilot' => array(0 => ''),
            'airport_identifier' => '',
            //'planezipcode' => '',
            "pilot_user" => "",
            "image_file" => "",
            "plane_ids" => array("0" => ""),
			"airline_name" => "",
			"airline_base" =>"",
			'pilot_fly_distance' =>'',
			"radius_miles_driver"=>"",	
        );
		
		
		
		$data['arrPlane'] = $this->user_model->get_plane_detail($this->session->userdata('userid'));
        $data['available_details_pilot'] = $this->user_model->get_pilot_available($this->session->userdata('userid'));
        $data['plane_type'] = $this->common_model->get_plane_types();
		$plane_count = count($data['arrPlane']);
		
        foreach ($form_field as $key => $value) {
            $data['profile_details'][$key] = $value;
        }
        if ($this->input->post('frm_action')) {
			//echo "<pre>"; print_r($this->input->post());echo "</pre>";
			//die;
			  foreach ($form_field as $key => $value) {
                if (is_array($value)) {
                    $data['post_data'][$key] = $this->input->post($key);
                } else {
                    $data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
                }
            }

			$vehicle_type = $data['post_data']['vehicletype'][0];
			 if (!empty($vehicle_type)) {
				$this->form_validation->set_rules('radius_miles_driver', 'Max one-way distance in miles', 'trim|required');
			 } else {
				 $this->form_validation->set_rules('radius_miles_driver', 'Max one-way distance in miles', 'trim');
			 }  
				 
			 $airplane_type = $data['post_data']['airplanetype'][0];
			 $enable_pilot = $data['post_data']['pilot_user'];
			 if ($enable_pilot == 'Y' || !empty($airplane_type)) {
				
				$this->form_validation->set_rules("avl_days_plane[]", "Availability Days of available Plane is required", "trim|required");
				if (!empty($airplane_type))
				{
					$this->form_validation->set_rules("pilot_fly_distance", "Max. One-Way Distance to Fly", "trim|required|callback_less_than_or_equal[1000]");
				}	
					$this->form_validation->set_rules("airport_identifier", "Airport Identifier", "trim|required");               
			 } else {
				  $this->form_validation->set_rules("avl_days_plane[]", "Availability Days of available Plane is required", "trim");
				  $this->form_validation->set_rules("airport_identifier", "Airport Identifier", "trim"); 
				  $this->form_validation->set_rules("pilot_fly_distance", "Max. One-Way Distance to Fly", "trim");				  
			 }
			 
			
				
			
			
            if ($this->form_validation->run() == FALSE ) {
                $data['Err_Msg'] = validation_errors();
				
                $this->load->view('transport_profile', $data);
            } else {
                
                $lat = 0;
                $lon = 0;
                if ($this->session->userdata('zip')) {

                    $get_lat_long = $this->common_model->get_lattitude_longitude($this->session->userdata('zip'));

                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
                        $user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
                    }
					$zip_code = $this->session->userdata('zip');
                } else {
					$zip_code = 0;
				}
			
				//$this->user_model->update_user_vehicle_days( serialize($data['post_data']['avl_days']) , $this->session->userdata('userid'));
				$this->user_model->update_vehicle_details($data['post_data'], $this->session->userdata('userid'), $zip_code, serialize($data['post_data']['avl_days']),$data['post_data']['radius_miles_driver'] ,$lat, $lon, 'tbl_user_vehicle');	
			
				//if(isset($data['post_data']['avl_days']) && !empty($data['post_data']['avl_days']) && isset($data['post_data']['vehicletype'][0]) && !empty($data['post_data']['vehicletype'][0]) ){
				if((isset($data['post_data']['avl_days']) && !empty($data['post_data']['avl_days']) && 
					isset($data['post_data']['vehicletype'][0]) && !empty($data['post_data']['vehicletype'][0])) 
					|| ($vehicle_count) > 0 || ($this->input->post('in_messanger'))){	
					$profile_info['st_driver'] = "Y";
                }
				else{
					$profile_info['st_driver'] = "N";
				}
				$profile_info['dt_modified'] = date('Y-m-d H:i:s');
                //$data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
		  
               /** Pilot Create code **/
            			
				//update_vehicle_details update_transport_plane_details
                $this->user_model->update_plane_details($data['post_data'], $this->session->userdata('userid'),$zip_code, serialize($data['post_data']['avl_days_plane']), $data['post_data']['airport_identifier'], $data['post_data']['IFR'],$data['post_data']['pilot_fly_distance'], $lat, $lon, 'tbl_user_pilot');
              
			
				//if(isset($data['post_data']['avl_days_plane']) && !empty($data['post_data']['avl_days_plane']) && isset($data['post_data']['airplanetype'][0]) && !empty($data['post_data']['airplanetype'][0])   ){
				if((isset($data['post_data']['avl_days_plane']) && !empty($data['post_data']['avl_days_plane']) && 
					isset($data['post_data']['airplanetype'][0]) && !empty($data['post_data']['airplanetype'][0])) 
					|| ($plane_count) > 0) {
				$profile_info['st_pilot'] = "Y";
                }
				else{
					$profile_info['st_pilot'] = "N";
				}
				$airline_emp = array();
				$airline_emp = $this->common_model->get_airline_profile($this->session->userdata('userid'));
				if(isset($data['post_data']['airline_name']) && !empty($data['post_data']['airline_name']) && 
					isset($data['post_data']['airline_base']) && !empty($data['post_data']['airline_base']))
				{
					$profile_info['st_airline_emp'] = "Y";
					
					
					if(count($airline_emp)>0)
					{
						$update_airline_emp = array('st_base_name'=> $this->input->post('airline_base'),
													'st_airline_name'=> $this->input->post('airline_name'),
													'dt_modified' => date('Y-m-d H:i:s'),
													'in_deleted' => '0'
													);	
						$airline_emp = $this->user_model->update_airline_employee($airline_emp[0]['in_id'],$update_airline_emp);
					} else {
						$airline_emp = array( 'in_user_id' => $this->session->userdata('userid'),
											  'st_base_name' => $this->input->post('airline_base'),
											  'st_airline_name' => $this->input->post('airline_name'),
											  'dt_created' => date('Y-m-d H:i:s'),
											  'dt_modified' => date('Y-m-d H:i:s'),
											  'in_deleted' => '0'
											 );
							$this->db->insert('tbl_user_airline_employee', $airline_emp);
							$last_insert_pilot_id = $this->db->insert_id();
					}	
				} else 
				{
					$profile_info['st_airline_emp'] = "N";
					if(count($airline_emp)>0)
					{
						$update_airline_emp = array('dt_modified' => date('Y-m-d H:i:s'),
													'in_deleted' => '1'
													);	
						$airline_emp = $this->user_model->update_airline_employee($airline_emp[0]['in_id'],$update_airline_emp);
					}
				}

				/* Rider create/Update*/
				$avl_days_ride = $this->input->post('avl_days_ride');
				$ridecheck = $this->input->post('ridecheck');
				$ridefrom = $this->input->post('ridefrom');
				$rideto = $this->input->post('rideto');				

				$in_id = $this->input->post('in_id');
				$in_messanger = $this->input->post('in_messanger');
				if(isset($in_messanger) && !empty($in_messanger)){
					$in_messanger = 1;
				}else{
					$in_messanger = 0;
				}
				

				$ride_daytime = array();
					foreach ($ridefrom as $key => $value) {
						
						if($ridefrom[$key] != '' && $avl_days_ride[$key] !=''){
							
						if(is_array($ridecheck) && (isset($ridecheck[$key]))){
							$ridecheck[$key] = $ridecheck[$key];
						}else{
							$ridecheck[$key] ="0";
						}
						if(is_array($avl_days_ride) && (isset($avl_days_ride[$key]))){
							$avl_days_ride[$key] = $avl_days_ride[$key];
						}
						if(is_array($ridefrom) && (isset($ridefrom[$key]))){
							$ridefrom[$key] = $ridefrom[$key];
						}

						if(is_array($rideto) && (isset($rideto[$key]))){
							$rideto[$key] = $rideto[$key];
						}

						$ride_daytime[] = array($avl_days_ride[$key],$ridefrom[$key],$rideto[$key],$ridecheck[$key]);
						}
					}
							
					$ridesarr = array(
						'in_user_id' => $this->session->userdata('userid'),
						'st_ride_daytime' => (serialize($ride_daytime)),
						'in_ride_radius' => $this->input->post('radius_miles_driver'),
						'in_messanger' => $in_messanger,
						'dt_created'	  => date("Y-m-d h:i:s"),
						'st_mobile'	=> $this->input->post('pphone'),
						'in_deleted' =>'0'
						);

					if($data['profile_details']['in_number_verified'] != 1 ||  $data['profile_details']['st_primary_phone']!= $this->input->post('pphone')){							
							$userarr = array(
								'in_number_verified' => 0,
								'st_primary_phone' => $this->input->post('pphone'),
								'dt_modified' =>date('Y-m-d H:i:s')
							);
							$result = $this->user_model->update_user_profile($userarr, $this->session->userdata('userid'));		
						}
											
					if(isset($in_id) && ($in_id != '')){				
						$ridedata = $this->user_model->update_ride_info($ridesarr,$in_id);
					}else{						
						$ridedata = $this->user_model->add_ride_info($ridesarr);
						$user_profile = array(
							'st_driver' =>'Y'
							);
						$result = $this->user_model->update_user_profile($userarr, $this->session->userdata('userid'));	
	
					}
					

				//}
			
                $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
				
				// added by sadique on 20-04-16 start
				$pilot_info['st_identifier'] = $data['post_data']['airport_identifier'];
				
                $data['user_profile'] = $this->user_model->update_pilot_info($pilot_info, $this->session->userdata('userid'), 'tbl_user_pilot');
                
				if($this->session->userdata('zip'))
				{
					$zip_code_state = $this->common_model->get_zipcode_info($this->session->userdata('zip'));
					if($zip_code_state['state_prefix']=='CO')
					{
							if($this->session->userdata('email'))
							{
								$colorado_email_notification = $this->common_model->get_email_containt("83");	
								
								$q			=	$this->common_model->get_affiliate_donation_detail('3');	

										if(isset($q) && !empty($q)){					   		
											foreach($q as $qr)
											{
												if(!empty($qr['st_image']))
												{

												
														$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
														$imgtitle   =   $qr['st_banner_name']; 	

														$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

								alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';	
												}
												else
												{
													   $donation='';								 
												}							  

											}
										}			

									   else
									   {
										  $donation='';
									   }
								
								if(isset($colorado_email_notification[0]['st_email_body']))
								{
									$to = $this->session->userdata('email');
									$message  = $colorado_email_notification[0]['st_email_body'];
									$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  =	str_replace("##DONATION##",$donation,$message);
									$message  = str_replace("##display_name##",$this->session->userdata('user_name'). " " .$this->session->userdata('last_name'),$message);				
									$subject  = $colorado_email_notification[0]['st_email_subject'];
									$category = $colorado_email_notification[0]['st_category'];
									$this->mail_notify_colorado($to,$subject,$category,$message);
								}	
								//$message = 'This user has registered colorado zipcode address please verify it';
								
							}			
					}	 
			   }
				
				// added by sadique on 20-04-16 end
				
				if($data['post_data']['vehicle_ids'][0]=='' && $data['post_data']['vehicletype'][0]!='')
				{
					$this->session->set_flashdata('success', 'Vehicle information saved successfully.');	
				} else if ($data['post_data']['plane_ids'][0]=='' && $data['post_data']['airplanetype'][0]!='')
				{
					$this->session->set_flashdata('success', 'Pilot information saved successfully.');
				} else {
				 $this->session->set_flashdata('success', 'Transport details updated successfully.');
				}
                redirect(base_url() . 'transport-profile/');		 
			} 
		
		}	
		else {
				
				$this->load->view('transport_profile', $data);
			}
		}	

	#=========================================================
	#	Function : ride_profile
	#	Purpose  : Ride profile details
	#=========================================================	

	public function ride_profile() 
	{
        if (!$this->session->userdata('userid')) 
		{
            redirect($this->config->item('base_url'));
        }
		
		$data['arrVehicle'] = $this->user_model->get_vehicle_detail($this->session->userdata('userid'));		
		$data['arrVehicleCount'] = count($data['arrVehicle']);
		$vehicle_count = count($data['arrVehicle']);
		
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$data['profile_details'] = $user_details[0];
		if ($this->input->post('frm_action')) 
		{
			$this->form_validation->set_rules('radius_miles_driver', 'Max one-way distance in miles', 'trim|required');  
	
			if ($this->form_validation->run() == FALSE ) 
			{
                $data['Err_Msg'] = validation_errors();
				
                $this->load->view('transport_profile', $data);
            } else 
			{
                
               if($vehicle_count > 0 || ($this->input->post('in_messanger')) ){	
					$profile_info['st_driver'] = "Y";
                }
				else{
					$profile_info['st_driver'] = "N";
				}
				$profile_info['dt_modified'] = date('Y-m-d H:i:s');

				/* Rider create/Update*/
				$avl_days_ride = $this->input->post('avl_days_ride');
				$ridecheck = $this->input->post('ridecheck');
				$ridefrom = $this->input->post('ridefrom');
				$rideto = $this->input->post('rideto');				

				$in_id = $this->input->post('in_id');
				$in_messanger = $this->input->post('in_messanger');
				if(isset($in_messanger) && !empty($in_messanger)){
					$in_messanger = 1;
				}else{
					$in_messanger = 0;
				}
				

				$ride_daytime = array();
				
				
					foreach ($ridefrom as $key => $value) {
						if($ridefrom[$key] != '' && $avl_days_ride[$key] !=''){							
						if(is_array($ridecheck) && (isset($ridecheck[$key]))){
							$ridecheck[$key] = $ridecheck[$key];
						}else{
							$ridecheck[$key] ="0";
						}
						if(is_array($avl_days_ride) && (isset($avl_days_ride[$key]))){
							$avl_days_ride[$key] = $avl_days_ride[$key];
						}
						if(is_array($ridefrom) && (isset($ridefrom[$key]))){
							$ridefrom[$key] = $ridefrom[$key];
						}

						if(is_array($rideto) && (isset($rideto[$key]))){
							$rideto[$key] = $rideto[$key];
						}

						$ride_daytime[] = array($avl_days_ride[$key],$ridefrom[$key],$rideto[$key],$ridecheck[$key]);	

						}
					}
						
					$ridesarr = array(
						'in_user_id' => $this->session->userdata('userid'),
						'st_ride_daytime' => (serialize($ride_daytime)),
						'in_ride_radius' => $this->input->post('radius_miles_driver'),
						'in_messanger' => $in_messanger,
						'dt_created'	  => date("Y-m-d h:i:s"),
						'st_mobile'	=> $this->input->post('pphone'),
						'in_deleted' =>'0'
						);
					
						if($data['profile_details']['in_number_verified'] != 1 ||  $data['profile_details']['st_primary_phone']!= $this->input->post('pphone'))
						{							
							$userarr = array(
								'in_number_verified' => 0,
								'st_primary_phone' => $this->input->post('pphone'),
								'dt_modified' =>date('Y-m-d H:i:s')
							);
							$result = $this->user_model->update_user_profile($userarr, $this->session->userdata('userid'));		
						}
					
				
							
					if(isset($in_id) && ($in_id != ''))
					{				
						$ridedata = $this->user_model->update_ride_info($ridesarr,$in_id);
					}else
					{						
						
						$ridedata = $this->user_model->add_ride_info($ridesarr);
					}
				
				
					$result = $this->user_model->update_user_profile($profile_info, $this->session->userdata('userid'));	
				
					$driver_info = array('in_distance_to_drive'	=> $this->input->post('radius_miles_driver'),
										  "dt_modified"			=>	date('Y-m-d H:i:s'));	
							
					$this->db->where('in_user_id', $this->session->userdata('userid'));
					$this->db->where('in_deleted', "0");
					$this->db->update("tbl_user_vehicle", $driver_info);
               		
				
				$this->session->set_flashdata('success', 'Transport details updated successfully.');
			}
                redirect(base_url() . 'transport-profile/');		 
		} 
		
			
		
	}	
	
	#=========================================================
	#	Function : driver_profile
	#	Purpose  : Driver profile details
	#=========================================================			
	public function driver_profile()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 					= '';
		$data['tooltip'] 	 		= get_cookie('tooltip');
		$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid')); 
		//echo "<pre>";print_r($data['arrVehicle']	);die;			
		$data['arrVehicleCount']	= count($data['arrVehicle']);  						
		$data['profile_details'] 	= $this->user_model->get_user_profile($this->session->userdata('userid'));	
		
		if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		$data['available_details'] 	= $this->user_model->get_user_available($this->session->userdata('userid'));
		$data['vehicle_type'] 		= $this->common_model->get_vehicle_types();
		$data['vehicle_edit'] 		= $this->session->userdata('vehicle_edit');
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		$this->session->unset_userdata('vehicle_edit');
		$form_field	=	array(							
									'vehicletype'	=>array(0 =>''),
									'color'			=>array(0 =>''),
									'avl_days'		=>array(0 =>''),
							      	'license'		=>array(0 =>''),
							      	'license_state'	=>array(0 =>''),
								    'distance'		=>array(0 =>''),
									'googlephotos'	=>array(0 =>''),
									'vehicle_ids'	=>array(0 =>''),
									'zipcode'		=>'',
									"driver_user"	=> "",
									"image_file"	=> ""
								  );
		
		
		if($this->input->post('frm_action') == 'frm_post') {
			//echo "<pre>";print_r($this->input->post());die;
			$update_only_days_zipcode = $this->input->post('update_only_days_zipcode');
			//echo $update_only_days_zipcode;exit;
			foreach($form_field as $key => $value)	
					{	
						if(is_array($value)){
						$data['post_data'][$key] = $this->input->post($key);	
						}else{
							$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
						}					
					}
			$data['post_data']["driver_user"] = (count($data['arrVehicle'])>0)?"Y":"N";					
			if($this->input->post('driver_user') == 'Y') {
			$this->form_validation->set_rules('vehicletype[]',	'Vehicle type', 				'trim');
			$this->form_validation->set_rules('distance[]', 	'Max one-way distance in miles','trim');
			$this->form_validation->set_rules('googlephotos[]', 	'Google Photos/Flickr','trim');
			}
			else
			{
			$this->form_validation->set_rules('vehicletype[]',	'Vehicle type', 				'');
			$this->form_validation->set_rules('distance[]', 	'Max one-way distance in miles','trim');
			$this->form_validation->set_rules('googlephotos[]', 	'Google Photos/Flickr','trim');
			}
			$this->form_validation->set_rules('zipcode', 		'Zipcode', 					'required|trim');
			$this->form_validation->set_rules('avl_days[]', 	'Availability days',			'');
				
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('driver-profile',$data);	
			}
			else
			{
				$lat=0;
				$lon=0;			
			if($data['post_data']['zipcode']!= '') { 
				$profile_zipcode = explode('-',$data['post_data']['zipcode']);
				if(isset($profile_zipcode[1]) && !empty($profile_zipcode[1]))
				{
					$data['post_data']['zipcode'] = $profile_zipcode[0];
				}
				
				$get_lat_long = $this->common_model->get_lattitude_longitude(trim($data['post_data']['zipcode']));
				
				if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
					$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
					$lat=$get_lat_long['lat'];					
					$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
					$lon=$get_lat_long['lon'];
					
					
				}
			}
					//echo "<pre>";print_r($data['post_data']);die;
				$this->user_model->update_vehicle_details($data['post_data'],$this->session->userdata('userid'),$data['post_data']['zipcode'],serialize($data['post_data']['avl_days']),'100',$lat,$lon,'tbl_user_vehicle');	
				$profile_info['st_driver'] 	= 	"Y";
				$profile_info['dt_modified'] = date('Y-m-d H:i:s');
				$data['user_profile']		=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				
				$this->session->set_flashdata('success', 'Driver details updated successfully.');

				redirect(base_url().'driver-profile/');					
			}		
		}
		else
		{
			$this->load->view('driver-profile',$data);	
		}
		//echo '<pre>'; print_r($data);die;
		
	}
	
	
	#=========================================================
	#	Function : pilot_profile
	#	Purpose  : Pilot profile details
	#=========================================================			
	public function pilot_profile()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$data['Err_Msg'] 					= '';
		$data['arrPlane']					= $this->user_model->get_plane_detail($this->session->userdata('userid')); 
		$data['profile_details'] 			= $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		$data['available_details_pilot'] 	= $this->user_model->get_pilot_available($this->session->userdata('userid'));
		$data['plane_type']	  				= $this->common_model->get_plane_types();
		
		$data['plane_edit'] 		= $this->session->userdata('plane_edit');
		
		$data['tooltip'] 	 				= get_cookie('tooltip');
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		$this->session->unset_userdata('plane_edit');
		//echo '<pre>'; print_r($data['arrPlane']);die;
		$form_field	=	array(							
									'avl_days_plane'	=>array(0 =>''),
									'airplanetype'		=>array(0 =>''),
							      	'airplane_color'	=>array(0 =>''),
							      	'nnumber'			=>array(0 =>''),
							      	'IFR'				=>'',
								    'fly_distance'		=>array(0 =>''),
									'googlephotos'		=>array(0 =>''),
									'airport_identifier'=>'',
									'planezipcode'		=>'',
									"pilot_user"		=> "",
									"image_file"		=> "",
									"vehicle_ids" 		=> array("0"=>""),
								  );
		if($this->input->post("frm_action"))
		{
			foreach($form_field as $key => $value)	
					{	
						if(is_array($value)){
						$data['post_data'][$key] = $this->input->post($key);	
						}else{
							$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
						}			
						
			}
			//$data['post_data']["pilot_user"] = (count($data['arrPlane'])>0)?"Y":"N";	
			//echo "<pre>";print_r($this->input->post());
			$this->form_validation->set_rules("avl_days_plane[]", "Availability Days", "trim|required");
			$this->form_validation->set_rules("planezipcode", "Zipcode", "trim|required");
			
			if($data['post_data']['pilot_user']=='Y')
			{
				
				$this->form_validation->set_rules("airplanetype[]", "Type", "trim");
				//$this->form_validation->set_rules("nnumber[]", "N-Number", "trim|required");
				//$this->form_validation->set_rules("IFR", "IFR", "trim|required");
				$this->form_validation->set_rules("fly_distance[]", "Max. One-Way Distance to Fly", "trim");
				$this->form_validation->set_rules("airport_identifier", "Airport Identifier", "trim");
				$this->form_validation->set_rules("googlephotos[]","Google Photos/Flickr","trim");
			}
			else
			{
				$this->form_validation->set_rules("airplanetype[]", "Type", "trim|required");
				//$this->form_validation->set_rules("nnumber[]", "N-Number", "trim|required");
				//$this->form_validation->set_rules("IFR", "IFR", "trim|required");
				$this->form_validation->set_rules("fly_distance[]", "Max. One-Way Distance to Fly", "trim|required|callback_less_than_or_equal[1000]");
				$this->form_validation->set_rules("airport_identifier", "Airport Identifier", "trim|required");
				$this->form_validation->set_rules("googlephotos[]","Google Photos/Flickr","trim");
			}
			
			if($this->form_validation->run()==FALSE && $data['post_data']['pilot_user']=='Y')
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('pilot-profile',$data);	
			}
			else
			{
				//echo "<pre>post";print_r($data['post_data']);die;
				$user_vehicle_info['in_status'] 				= 	'1';		
				$user_vehicle_info['zip_lat']					=	'0';
				$user_vehicle_info['zip_lon']					=	'0';
				$lat=0;
				$lon=0;			
				if($data['post_data']['planezipcode']!= '') { 
				
					$profile_zipcode = explode('-',$data['post_data']['planezipcode']);
					if(isset($profile_zipcode[1]) && !empty($profile_zipcode[1]))
					{
						$data['post_data']['planezipcode'] = $profile_zipcode[0];
					}
					
					$get_lat_long = $this->common_model->get_lattitude_longitude(trim($data['post_data']['planezipcode']));
					if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
						$lat=$get_lat_long['lat'];					
						$lon=$get_lat_long['lon'];	
					}
				}				
				//if($data['post_data']['pilot_user']=='Y'){
					$this->user_model->update_plane_details($data['post_data'],$this->session->userdata('userid'),$data['post_data']['planezipcode'],serialize($data['post_data']['avl_days_plane']),$data['post_data']['airport_identifier'],$data['post_data']['IFR'],$lat,$lon,'tbl_user_pilot');
				//}			
				/*elseif($data['post_data']['pilot_user']=='N'){ 
					$this->user_model->update_plane_details_no($this->session->userdata('userid'),'tbl_user_pilot');	
				}*/
				$profile_info['st_pilot'] 	= 	$data['post_data']['pilot_user'];
				$data['user_profile']		=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				
				$pilot_info['st_identifier'] = $data['post_data']['airport_identifier'];
                $data['user_profile'] = $this->user_model->update_pilot_info($pilot_info, $this->session->userdata('userid'), 'tbl_user_pilot');
				
				$this->session->set_flashdata('success', 'Pilot details updated successfully.');

				redirect(base_url().'pilot-profile/');					
			}
		}
		else
		{
			$this->load->view('pilot-profile',$data);	
		}
	}
	
	#=========================================================
	#	Function : foster_home
	#	Purpose  : fister home details
	#=========================================================			
	/*public function foster_home()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data 				= array();
		$data['Err_Msg'] 	= '';
		$form_field	=	array('animaltype'				=> "",
							  'animal-breed'			=> "",
							  'demeanor'				=> "",
							  'number-of-animals'		=> "",
							  'duration'				=> "",
							  "duration_type"			=> "",
							  "foster_home"				=> ""
					  	 	);	
		$data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		$data['animal_type'] = $this->common_model->get_animal_types();	
		$data['tooltip'] 	 = get_cookie('tooltip');
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		//echo "<pre>";print_r($data);die;				
		if($this->input->post('frm_action') == 'frm_post') {
			foreach($form_field as $key => $value)	
			{	
				$data['post_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			if($data['post_details']['foster_home']=='Y')
			{
				//Validation rules
				$this->form_validation->set_rules('animaltype', 	'Animal Type',	'required|trim');
				$this->form_validation->set_rules('demeanor', 		'Demeanor',		'required|trim');
			}
			if($this->form_validation->run()==FALSE && $data['post_details']['foster_home']=='Y')
			{
					$data['Err_Msg'] = validation_errors();
					//echo "<pre>";print_r($data);die;
					$this->load->view('foster-home-profile',$data);	
			}
			else
			{
				//User Additional info
				$user_add_info['in_user_id'] 		=	$this->session->userdata('userid');
				$user_add_info['in_animal_type_id'] =	$data['post_details']['animaltype'];
				$user_add_info['in_animal_breed_id']=	$data['post_details']['animal-breed'];
				$user_add_info['in_demeanor_id'] 	=	$data['post_details']['demeanor'];
				$user_add_info['in_no_animal'] 		=	$data['post_details']['number-of-animals'];
				$user_add_info['in_duration'] 		=	$data['post_details']['duration'];
				$user_add_info['in_duration_type'] 	=	$data['post_details']['duration_type']; 
				$user_add_info['in_status'] 		= 	'1';
				$user_add_info['dt_created'] 		= 	date('Y-m-d H:i:s');
				$user_add_info['dt_modified']		= 	date('Y-m-d H:i:s');
				$profile_info['st_foster_home'] 	= 	$data['post_details']['foster_home']; 
				//echo "<pre>";print_r($data['profile_details']);die;
				if($data['profile_details']['ad_userid'] == '') {
				$data['user_add_info']	=	$this->user_model->insert_user_info($user_add_info,'tbl_user_addition_info');
				} else {
					$data['user_add_info']	=	$this->user_model->update_user_info($user_add_info,$this->session->userdata('userid'),'tbl_user_addition_info');
				}
				$data['user_profile']	=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				$this->session->set_flashdata('success', 'Foster home details updated successfully.');
				redirect(base_url().'foster-home/');
			}
			
		}
		else{			
			$this->load->view('foster-home-profile',$data);
		}
	}*/
	
	# *******************************************************************************************	
	#	Function	:	add_images
	#	Purpose		:	For Adding Product Images
	# *******************************************************************************************
	
	public function add_images() 
	{
		
		if(!isset($_FILES['files']['name'])) {
			return false;
		}
		ini_set("post_max_size",'256M');
		ini_set("upload_max_filesize",'128M');
		$config['upload_path'] = $this->config->item('upload')."vehicle/";
		$config['allowed_types'] = 'jpg|jpeg|gif|png';
		$config['max_size']	= '51200';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES['files']['name']);
		$this->load->library('upload', $config);
		$this->upload->initialize($config);
		$this->upload->do_upload('files');

		$config['image_library'] 	= 'gd2';
		$config['source_image']		= $this->config->item('upload').'vehicle/'.$config['file_name'];
		$config['new_image']		= $this->config->item('upload').'vehicle/180x180/'.$config['file_name'];
		$config['maintain_ratio'] 	= TRUE;
		$config['width']	 		= 180;
		$config['height']			= 180;
		$this->load->library('image_lib', $config); 
		$this->image_lib->initialize($config);
		$this->image_lib->resize();
		$file_errors = array('errors' => $this->upload->display_errors());
		
		$config['image_library'] 	= 'gd2';
		$config['source_image']		= $this->config->item('upload').'vehicle/'.$config['file_name'];
		$config['new_image']		= $this->config->item('upload').'vehicle/100x100/'.$config['file_name'];
		$config['maintain_ratio'] 	= TRUE;
		$config['width']	 		= 100;
		$config['height']			= 100;
		$this->load->library('image_lib', $config); 
		$this->image_lib->initialize($config);
		$this->image_lib->resize();
		$file_errors = array('errors' => $this->upload->display_errors());

		//Display errors of file upload.
		if(!empty($file_errors['errors'])){
			$data = array('error' => strip_tags($file_errors['errors']));
			echo json_encode(array('files' => array($data) ));
			return false;
		}		
		$data = array(	'name' => $config['file_name'],
						'size' => $_FILES['files']['size'],
						'type' => $_FILES['files']['type'],
						"url"  => $this->config->item('upload_url')."vehicle/".urlencode($config['file_name']),
						"deleteUrl"  => $this->config->item('base_url')."user/delete_files/vehicle/?files=".urlencode($config['file_name']),
						"deleteType"=>"DELETE"
					);
		echo json_encode(array('files' => array($data) ));
		//return $data;
	}
	
	function delete_files($path)
	{
		if($this->input->get('files')!='')
		{
			$files = $this->input->get('files');
			@unlink($this->config->item('upload').$path."/".$files);
			@unlink($this->config->item('upload').$path."/180x180/".$files);
			//delete_files($this->config->item('upload').$path."/".$files);
		}
	}
	
	function delete_pilot()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			/*$this->user_model->update_plane_details_no($this->session->userdata('userid'),'tbl_user_pilot');	
			$profile_info['st_pilot'] 	= 	"N";
			$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			*/
			if($this->input->post('vehicle_id')!='')
			{
				
				$this->user_model->delete_plane_profiles($this->input->post('vehicle_id'),'tbl_user_pilot');
				$this->user_model->delete_plane_images($this->input->post('vehicle_id'),'tbl_plane_image');
				$data['arrPlane']			= $this->user_model->get_plane_detail($this->session->userdata('userid')); 
				if(count($data['arrPlane'])<=0)
				{
					$profile_info['st_pilot'] 	= 	"N";
					$data['user_profile']		=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				}
			}
			 $this->session->set_flashdata('success', 'Pilot information removed successfully.');
			//echo "<div class=\"alert alert-success\"><strong>Pilot information removed successfully.</strong></div>";  
		}
		
		
		
	}
	
	function delete_driver()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			//echo "<pre>";print_r($this->input->post());die;
			if($this->input->post('vehicle_id')!='')
			{
				
				$this->user_model->delete_vehicle($this->input->post('vehicle_id'),'tbl_user_vehicle');
				$this->user_model->delete_vehicle($this->input->post('vehicle_id'),'tbl_vehicle_image');
				$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
				$arrRider				    = $this->user_model->get_rides_detail($this->session->userdata('userid'));		
				if(count($data['arrVehicle']) <= 0 && $arrRider[0]['in_messanger'] == "0")
				{
					$profile_info['st_driver'] 	= 	"N";
					$data['user_profile']		=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				}
			}
			$this->session->set_flashdata('success', 'Vehicle information removed successfully.');
			//echo "<div class=\"alert alert-success\"><strong>Driver information removed successfully.</strong></div>";  
		}
		
	}
	
	function get_stared_now()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data = array();
		$this->load->view('get-started-now',$data);
	}
	
	function delete_image()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$where_cnd = array("in_id"=>$this->uri->segment(3),"in_vehicle_id"=>$this->uri->segment(4));
		$this->user_model->delete_vehicle_image($where_cnd,"tbl_vehicle_image");	
		$this->session->set_flashdata('success', 'Image deleted successfully.');
		$this->session->set_userdata('vehicle_edit',$this->uri->segment(4));
		redirect(base_url().'transport-profile/');		
	}
	public function less_than_or_equal($str, $max)
	{
		//echo $str."--".$max;die;
		if ( ! is_numeric($str))
		{
			$this->form_validation->set_message('less_than_or_equal', "Max. One-Way Distance to Fly must be number");
			return FALSE;
		}
		if($str>$max)
		{
			$this->form_validation->set_message('less_than_or_equal', "Max. One-Way Distance to Fly must be less then or equal to ".$max);
			return FALSE;
		}
		return true;
	}	
	
	
	# *******************************************************************************************	
	#	Function	:	get_referals
	#	Purpose		:	For getting user and organization name in the autocomplete referred by field
	# *******************************************************************************************
	public function get_referals()
	{
		$data_val = $this->input->get('term');
		$result = $this->user_model->get_referals($data_val);
		echo json_encode($result);			
		
	}
	
	# *******************************************************************************************	
	#	Function	:	sign_up
	#	Purpose		:	User Sign Up
	# *******************************************************************************************
	
	public function sign_up($return='') {
		$this->session->set_userdata('checkout',$return);
		$data = array();
		$data['Err_Msg_forgot'] = '';
		$data['Err_Msg_reg'] = '';
		$data['Err_Msg_login'] = '';
		$data['Err_Msg'] = '';
		$data['rem_password'] = get_cookie('pass');
		$data['rem_email'] 	  = get_cookie('user');
		$data['menu_no'] 	  = 'yes';
		
		$auto_login_status = $this->common_model->check_auto_login_status();
		if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
		{
			$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
			$this->session->set_userdata('login_disable',$msg);
			//redirect($this->config->item('base_url') . 'user/');
			return $this->load->view('user_login',$data);
		}
		
		$this->session->unset_userdata('fb_user');
		
		if($this->session->userdata('userid'))
		{  
			//redirect($this->config->item('base_url')."my-profile/");
			$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
									
			if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '0')
			{
				if(strtotime($user_email_verify_status['dt_created']) >= strtotime(date("2016-11-25"))) { 
				$this->session->set_userdata('email_confirm_error', 'Your email has not yet been confirmed. You will not receive transport requests or notifications until you confirm your email. Please click on the below resend button to resend the email confirmation link.');	
				}else{
					$this->session->set_userdata('email_confirm_error', 'We have had some problems with emails not being delivered so we are asking all users to CONFIRM their email address by clicking the CONFIRM EMAIL button below. This will send you an email with a unique confirmation link. Simply click on that link and your email will be confirmed. As a reminder, please add no-reply@doobert.com to your email address book as well.');	
				}
			}
			//redirect
			if($this->session->userdata('checkout') == 'return')
            {
				redirect('https://www.doobert.com/wp-auto-login.php?sign_up=hide');
            }
			if($this->session->userdata('checkout') == 'catalog')
            {
				redirect('https://www.doobert.com/wp-auto-login.php?sign_up=hide_catalog');
            }
	        
			redirect($this->config->item('base_url') . "dashboard/");
		}
		
		$verificationCode = $this->generate_random_password(15);
		
		$form_field	=	array('username'	=> "",
							 'lastname'		=> "",
							  'email'		=> "",							  
							  'password'	=> "",
							  'rpassword'	=> "",
							  'referred_by'	=> "",
							  'tnc' 		=> "",
							  'signup'		=> "",
							  'remember'	=> "",
							  'action'		=> "",
							  'oldertc' 	=> ""							  
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['register'][$key] = $value;	
		}					
		if($this->input->post('action'))
		{ 
			foreach ($form_field as $key => $value) {	
					$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			$data['register']['email_verification_code'] = $verificationCode;
			
			if($this->input->post('action')=="registeruser")
			{  
				$this->form_validation->set_rules('username', 'First Name', 'trim|required');
				$this->form_validation->set_rules('lastname', 'Last Name', 'trim|required');
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				$this->form_validation->set_rules('password', 'Password', 'trim|required|spacecheck|min_length[6]|matches[rpassword]');
				$this->form_validation->set_rules('rpassword', 'Re-type Your Password', 'trim|required');
				$this->form_validation->set_rules('referred_by', 'Person/Organization Name', 'trim');
				$this->form_validation->set_rules('tnc', 'I agree to the Terms of Service and Privacy Policy', 'trim|required');
				$this->form_validation->set_rules('oldertc', 'I am 18 or older and have read and agree to the Terms and Conditions.', 'trim|required');
				//$this->form_validation->set_rules('zipcode', 'Zipcode', 'trim|required');	
				$counts = $this->common_model->check_exists("tbl_users","in_user_id",array("st_email"=>$data['register']['email'],"in_deleted"=>'0'));
				$Err_Msg  ='';
				if($counts>0)
				{
					$Err_Msg = "Email address already exists.";
					$fb_user_id = $this->common_model->check_fb_user($data['register']['email']);
					if(isset($fb_user_id) && !empty($fb_user_id) && $fb_user_id['st_facebook_uid'] != '')
					{
						$this->session->set_userdata('fb_user', 'It looks like you created your account by using the Facebook Login / App. Please click on the Sign In to With Facebook to be logged into the system.');
						$Err_Msg = '';
					}
				}
				if($this->form_validation->run() == FALSE || $Err_Msg!='' || ($this->session->userdata('fb_user') && $this->session->userdata('fb_user') != ''))
				{
						$data['Err_Msg_reg'] = validation_errors().$Err_Msg;
						//$this->load->view('user_register',$data);	
				}
				else
				{
					$browser_details = array();
					$browser_details["page_referral"]	= $_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
					$browser_details["ip_address "]		= $_SERVER['REMOTE_ADDR'];
					$browser_details["browser_used"]	= $_SERVER['HTTP_USER_AGENT'];
	
					$data_array = array("st_display_name" => $data['register']['username'],
										"st_last_name"	  => $data['register']['lastname'],
										"st_email" 		  => $data['register']['email'],
										"st_password" 	  => md5($data['register']['password']),
										"st_referred_by"  => $data['register']['referred_by'],
										"dt_created"	  => date("Y-m-d h:i:s"),
										"dt_modified"	  => date("Y-m-d h:i:s"),
										"in_newsletter"	  => (($data['register']['signup']!='')?"Y":"N"),
										"in_public"		  => "1",
										"in_status"	  	  => "1",
										"in_age_terms_flag"	=> "1",
										"st_browser_info"	=> @serialize($browser_details),
										"st_email_verification_code" => $verificationCode,
										); 
					
					$inserted_id = $this->user_model->insert_user($data_array);
					$this->user_model->insert_user_profile(array("in_user_id" => $inserted_id,"st_zip" => $zipcode, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s")));
					
					$this->session->set_userdata('userid',$inserted_id);	
					
					$this->session->set_userdata('user_name',$data['register']['username']);
					$this->session->set_userdata('last_name',$data['register']['lastname']);
					$this->session->set_userdata('email',$data['register']['email']);
					
					$this->login_details($data['register']);
					$this->email_confirm();
					
					//code to check non-doobert match with current registered user
					//if yes then add non-doobert legs to legs participants details and delete from non-doobert-users
					
					$user_result = $this->user_model->match_nondoobert_email_id($data['register']['email']);
					if(isset($user_result) && !empty($user_result))
					{
						$lat=0;
						$lon=0;			
						if($user_result[0]['st_zipcode']!= ''){ 
						$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_result[0]['st_zipcode']));
						
						if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
							$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
							$lat=$get_lat_long['lat'];					
							$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
							$lon=$get_lat_long['lon'];				
						}
						
						$user_profile_info = array();
						$user_profile_info['st_zip']   = 	$user_result[0]['st_zipcode'];
						$user_profile_info['st_primary_phone'] = $user_result[0]['st_phone'];
						$user_profile_info['in_status'] = "1";
						
						$data['user_profile']		=	$this->user_model->update_user_info($user_profile_info,$this->session->userdata('userid'),'tbl_user_profile');
						
						$user_data_array = array("in_status" => "1"); 
						$this->load->model('orgtrasnportation_model');
						
						$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($user_result[0]['in_transportation_id']);
						if(isset($transport_co_details) && !empty($transport_co_details))
						{
							$user_data_array['st_referred_by'] = $transport_co_details['coordinatorname'];	
						}
						
						$this->user_model->update_user($user_data_array, $this->session->userdata('userid'));
						
						$driver_data = array("driver_user"  => "Y",
											 "avl_days"     => array("0" => "Sun","1" => "Mon","2" => "Tue","3" => "Wed","4" => "Thu","5" => "Fri","6" => "Sat"),
											 "zipcode"      => $user_result[0]['st_zipcode'],
											 "vehicle_ids"  => array("0"=>""),
											 "googlephotos" => array("0"=>""),
											 //"vehicletype"  => array("0"=>$user_result[0]['st_vehicle_type']),
											 "vehicletype"  => array("0"=>"Other"),
											 "distance"     => array("0"=>100),
											 "color"        => array("0"=>$user_result[0]['st_vehicle_color']),
											 "license"      => array("0"=>$user_result[0]['st_license_plate']),
											 "license_state"=>array("0"=>$user_result[0]['st_license_state']),
											 "googlephotos_vehicle" =>array("0"=>""),
											);
						$this->user_model->update_vehicle_details($driver_data,$this->session->userdata('userid'),$user_result[0]['st_zipcode'],serialize($driver_data['avl_days']),'100',$lat,$lon,'tbl_user_vehicle');	
						$driver_profile_info['st_driver'] 	= 	"Y";
						$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
						$data['user_profile']		=	$this->user_model->update_user_info($driver_profile_info,$this->session->userdata('userid'),'tbl_user_profile');
						}
						
						foreach($user_result as $key=>$value)
						{
							$join_data = array("in_transportation_id"		=> $value['in_transportation_id'],
							   "in_user_id"					=> $this->session->userdata('userid'),
							   "in_transportation_leg_id"	=> $value['in_leg_id'],
							   "in_created_by"				=> $this->session->userdata('userid'),
							   "dt_created"					=> date("Y-m-d H:i:s"),
							   "in_deleted"					=> 0
							);
							
							$this->load->model('orgtrasnportation_model');
							$this->orgtrasnportation_model->join_legs($join_data);
							
							
							$this->orgtrasnportation_model->update_non_doobert_user_leg($value['in_non_doobert_user_id']);
							
							$leg_type =  $this->orgtrasnportation_model->get_leg_type_by_id($value['in_leg_id']);
							
							if(!empty($leg_type))
							{
								//print_r($leg_type[0]['in_route_type']);
								if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0)
								{						
									//code to update vehicle id in leg details 
									$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
									if(!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id']))
									{
									//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
									//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
									$leg_vehicle_detail = array("in_transportation_id"	=> $value['in_transportation_id'],
															    "in_user_id"			=> $this->session->userdata('userid'),
															    "in_vehicle_id"			=> $data['arrVehicle'][0]['in_vehicle_id'],
															    "in_transportation_leg_id"	=> $value['in_leg_id'],
															    "dt_created"			=> date("Y-m-d H:i:s"),
															    "in_deleted"			=> 0
															   );
									$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
									
									}
								}
							}
						}
					}
					
					//redirect
					if($this->session->userdata('checkout') == 'return')
		            {
						redirect('https://www.doobert.com/wp-auto-login.php?sign_up=hide');
		            }
					if($this->session->userdata('checkout') == 'catalog')
		            {
						redirect('https://www.doobert.com/wp-auto-login.php?sign_up=hide_catalog');
		            }
					//redirect($this->config->item('base_url')."my-profile/");	
					redirect($this->config->item('base_url') . "dashboard/");
				}
			}
		}
		
		$this->load->view('user_register',$data);
	}
	
	# *******************************************************************************************	
    #	Function	:	verify_arpa	
    #	Purpose		:	get user verified ARPA status
    # *******************************************************************************************

    public function verified_arpa() {
        if (!$this->session->userdata('userid')) {
            redirect($this->config->item('base_url'));
        }

        $data = array();
       $data['verified_user_details'] = $this->common_model->get_verified_user_details($this->session->userdata('userid'));
        $data['user_verified_arpa'] = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));

        if (count($data['user_verified_arpa'])==0) {
            redirect($this->config->item('base_url') . "my-profile");
        }
		/*echo "<pre>"; print_r($data); echo "</pre>";
		exit(0);*/
        $this->load->view('doobert-verified-arpa', $data);
    }
	
	
	# *******************************************************************************************	
	#	Function	:	user_profile_pic_upload
	#	Purpose		:	Uploading files with ajax
	# *******************************************************************************************
	
	public function user_profile_pic_upload() {
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'profile/';
		$config['max_size']			= '5120';
		$config['image_width']		= '300';
		$config['image_height']		= '300';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		//$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		$lastDot = strrpos($_FILES[$this->input->post('file_name')]['name'], ".");
		$_FILES[$this->input->post('file_name')]['name'] = str_replace(".", "", substr($_FILES[$this->input->post('file_name')]['name'], 0, $lastDot)) . substr($_FILES[$this->input->post('file_name')]['name'], $lastDot);
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));

		
		//Initialization
		$this->upload->initialize($config);
			
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload($this->input->post('file_name'));
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 
		
		echo "{";
		echo "file_name: '" . $config['file_name'] . "'\n";
		echo "}";
	}
	
	public function update_user_profile_pic() {
		
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		$this->load->library('upload');
		
		$xaxis = '';
		$yaxis = '';
		$height = '';
		$width = '';
		
		//echo 'uploaded_photo1'.$this->input->post('uploaded_photo1');
		//exit;
						
		if($this->input->post('user_uploaded_photo1') != '') {
			$photo1 = $this->input->post('user_uploaded_photo1');
		}
	
		if(isset($photo1)) 
		{
			
			$img_name_array = explode('.', $photo1);
			$img_extension = end($img_name_array);
			$image_name = current(explode('.', $photo1)); 
			 
			if($img_extension == "JPE" || $img_extension == "jpe")
			{
				$new_image_name = $image_name.'.jpg';
				$image = imagecreatefromjpeg($this->config->item('upload') . 'profile/' . $photo1);
				imagejpeg($image, $this->config->item('upload') . 'profile/' . $new_image_name);
				$photo1 =  $new_image_name;
			}
			
			$rotate_angle = $this->input->post('rotate_angle1');
			$xaxis = $this->input->post('x1');
			$yaxis = $this->input->post('y1');
			$height = $this->input->post('h1');
			$width = $this->input->post('w1');
			
			$config['file_name'] = $photo1;
			
			if($rotate_angle < 0 ) {
				$rotate_angle	=	360+$rotate_angle;
			}
			
			$this->load->library('image_lib');
			
			//rotate image if 90 or 270 deg rotation 
			//if 90 then rotate to 270 and visa-versa - due to counter clockwise rotation
			if($rotate_angle > 0 )
			{
				if($rotate_angle == 90)
				{
					$rotate_angle = 270;
				}
				else if($rotate_angle == 270){
					$rotate_angle = 90;
				}
				
				$config['image_library'] = 'gd2';
				$config['source_image']	= $this->config->item('upload').'profile/'.$config['file_name'];
				$config['rotation_angle'] = $rotate_angle;
				
				$this->image_lib->initialize($config);
				if ( ! $this->image_lib->rotate()) {
					$upload_file_errors = $this->image_lib->display_errors();
				}
			}
			$this->image_lib->clear();
			
			//code to fix image orientation for iphone mobile pic starts
			$this->correctImageOrientation($this->config->item('upload') . 'profile/' . $config['file_name']);
			//code to fix image orientation for iphone mobile pic ends
			
			//Cropping Image
			$config['image_library'] = 'gd2';
			$config['source_image']	= $this->config->item('upload').'profile/'.$config['file_name'];
			$config['new_image']	= $this->config->item('upload').'profile/cropped_images/'.$config['file_name'];
			$config['maintain_ratio'] 	= FALSE;
			$config['x_axis'] = $xaxis;
			$config['y_axis'] = $yaxis;					
			$config['width'] = $width;
			$config['height'] = $height;
			
			$this->image_lib->initialize($config); 
			if ( ! $this->image_lib->crop()) {
				$upload_file_errors =  $this->image_lib->display_errors();
			}
			$this->image_lib->clear();
				
			//Resize the image with ratio (4 Thumbnails)
			$thumb = array(	'140x140'		=>	'140X140',
							'250x250' 		=>  '250X250',       //added by sadique on 26-09-15
							'36x36'			=>	'36X36',
							'63x63'			=>	'63X63',
							'29x29'			=>	'29X29'
						);
					
			foreach($thumb as $key => $value) {
				$exp_value = explode('X',$value);
				
				//Resizing Image
				$config['image_library'] 	= 'gd2';
				$config['source_image']		= $this->config->item('upload').'profile/cropped_images/'.$config['file_name'];
				$config['new_image']		= $this->config->item('upload').'profile/'.$key.'/'.$config['file_name'];
				$config['maintain_ratio'] 	= TRUE;
				$config['width']	 		= $exp_value[0];
				$config['height']			= $exp_value[1];
				
				$this->image_lib->initialize($config);
				$this->image_lib->resize();
				$this->image_lib->clear();
				
			}
			
			$file_errors = array('errors' => $this->image_lib->display_errors());
			//echo "<pre>";print_r($file_errors);die;
			//Display errors of file upload.
			if(!empty($file_errors['errors'])) {
				$data = array('upload_error' => strip_tags($file_errors['errors']));
				
				$this->session->set_flashdata($data);
				
				redirect(base_url().'my-profile/');
			}
			
			//Updating data
			$data['picture'] = array('st_profile_image' => $config['file_name'],'dt_modified' => date('Y-m-d H:i:s'));
			$data['upload_photo'] = $this->common_model->update_user_data($data['picture']);
			$redirect = '';
			$redirect = $_SERVER['HTTP_REFERER'];
			if($data['upload_photo'] == 1) 
			{
				if($redirect!='')
				{	
					redirect($redirect);
				} else {
					redirect(base_url().'dashboard/');
				}		
			}
			
		} else {
			redirect(base_url().'dashboard/');	
		}	
		
		
	}
	
	
	# *******************************************************************************************	
	#	Function	:	vehicle_profile_upload
	#	Purpose		:	Uploading vehicle files with ajax
	# *******************************************************************************************
	
	public function vehicle_profile_upload() {
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'vehicle/';
		$config['max_size']			= '5120';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		//Initialization
		$this->upload->initialize($config);	
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload($this->input->post('file_name'));
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 

		echo "{";
		echo "file_name: '" . $config['file_name'] . "'\n";
		echo "}";
	}
	
	# *******************************************************************************************	
	#	Function	:	insert_last_name
	#	Purpose		:	Inserting last name of user
	# *******************************************************************************************
	
	public function insert_last_name() {
		$data = array();
		
		$data['user_id'] = array();
		$data['user_name'] = array();
		$data['first_name'] = array();
		$data['last_name'] = array();
		
		$data['users'] = $this->common_model->insert_last_name();
		
		foreach($data['users'] as $row) {
			$data['user_name'] = explode(' ',trim($row['st_display_name']));
			$count_name = count($data['user_name']);
			if($count_name == 2) {
				$data['last_name'][] = (isset($data['user_name'][1]))?$data['user_name'][1]:'';
				$data['first_name'][] = strtok($row['st_display_name'],' ');
				$data['user_id'][] = $row['in_user_id'];
			} else if($count_name > 2) {
				$data['last_name'][] = implode(' ',array_slice($data['user_name'],1));
				$data['first_name'][] = strtok($row['st_display_name'],' ');
				$data['user_id'][] = $row['in_user_id'];
			}
		}
		$j=array();
		for($i=0;$i<count($data['last_name']);$i++) {
			$data['userdata'] = array('st_display_name' => $data['first_name'][$i],
									  'st_last_name' => $data['last_name'][$i]);
			$count = $this->common_model->update_last_name($data['user_id'][$i],$data['userdata']);
			array_push($j,$count);
		}
		echo array_sum($j).' User(s) Updated.';
	}
	
	# *******************************************************************************************	
	#	Function	:	verify_status	
	#	Purpose		:	get user verify status
	# *******************************************************************************************
	
	public function verify_status()
	{
		if(!$this->session->userdata('userid')){  
			redirect($this->config->item('base_url'));
		}
		
		$data = array();
		$data['verified_user_details'] = $this->common_model->get_verified_user_details($this->session->userdata('userid'));
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		
		if(empty($data['user_verified'])) {
			redirect($this->config->item('base_url')."my-profile");
		}
		
		$this->load->view('doobert-verified-status',$data);
	}
	
	
	# *******************************************************************************************	
	#	Function	:	unlink_fb_account	
	#	Purpose		:	unlink_fb_account
	# *******************************************************************************************
	
	public function unlink_fb_account() 
	{
		$user_id = $this->session->userdata('userid');
		$data_array = array("st_facebook_uid" => ""); 
		$this->user_model->update_user($data_array, $user_id);
		
	}
	
	# *******************************************************************************************	
	#	Function	:	unlink_fb_account_reset_password	
	#	Purpose		:	unlink_fb_account_reset_password
	# *******************************************************************************************
	
	public function unlink_fb_account_reset_password() 
	{
		$user_id = $this->session->userdata('userid');
		
		$result['user_details'] = array();
		$result['user_details']['userid']    = $user_id;
		$result['user_details']['user_name'] = (isset($_POST['user_name']) && $_POST['user_name'] != '') ? $_POST['user_name'] : '';
		$result['user_details']['lastname']  = (isset($_POST['lastname']) && $_POST['lastname'] != '') ? $_POST['lastname'] : '';
		$result['user_details']['email'] 	 = (isset($_POST['email']) && $_POST['email'] != '') ? $_POST['email'] : '';
		
		$token = md5(time().$result['user_details']['userid']);
		$result['user_details']['url'] = $this->config->item('base_url')."user/forgotpassword/".$result['user_details']['userid']."/".$token."/";
		$password_details = array("st_reset_password_token"=>$token,"dt_reset_password_sent"=>date("Y-m-d H:i:s"));
		$this->user_model->update_user($password_details,$result['user_details']['userid']);
		if($result['user_details']['email'] != '')
		{
			$allmail = $result['user_details']['email'];
			$this->load->library('email');
			$email_details = $this->common_model->get_email_containt("28");
			$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{
																			
																			
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
			if(isset($email_details[0]['st_email_body']))
			{
				$templete 	= 	$email_details[0]['st_email_body'];
				$templete 	= 	str_replace("##url##",$this->config->item('base_url'),$templete);
				$templete  	= 	str_replace("##display_name##",$result['user_details']['user_name']." ".$result['user_details']['lastname'],$templete);
				$templete  	= 	str_replace("##forgot_url##",$result['user_details']['url'],$templete);		
				$templete  	= 	str_replace("##DONATION##",$donation,$templete);
				$strMail 	= 	$templete;
				$to			=	$allmail;
				$subject	=	$email_details[0]['st_email_subject'];
				$message	=	$strMail;
				//echo $message;die;
				$category  =    $email_details[0]['st_category'];
				
				$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_id).'/'.$this->common_function->encode_base64($to),$message);
		
				$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_id).'/'.$this->common_function->encode_base64($to),$message);
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_details[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{
					$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
			}
		}
		
		$this->unlink_fb_account();
		
	}
	
	# *******************************************************************************************	
	#	Function	:	user_forgot_password
	#	Purpose		:	Forgot Password
	# *******************************************************************************************
	
	public function user_forgot_password() {
		$data = array();
		
		if($this->input->post('action')=="forgotpassword") {
			$data['email'] = $this->input->post('email');
			$result = $this->user_model->user_forgotpassword($data);				
			$error = '';
			if(empty($result)) {
				$error = "Email address does not exists.";
			}
			// added by sadique
			$fb_user_id = $this->common_model->check_fb_user($this->input->post('email'));
			
			if(isset($fb_user_id) && !empty($fb_user_id) && $fb_user_id['st_facebook_uid'] != '')
			{   
				$this->session->set_userdata('fb_warning', 'It looks like you created your account by using the Facebook Login / App. Please click on the Login with Facebook to be logged into the system.');					
				redirect($this->config->item('base_url')."forgot-password/");
			}
			// added by sadique
			$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
			
			if($this->form_validation->run()==FALSE ||$error!='') {
					$data['Err_Msg_forgot'] = validation_errors().$error ;
					//echo "<pre>";print_r($data);die;
					$this->load->view('user_forgot_password',$data);	
			} else {					
				$token = md5(time().$result['user_details']['userid']);
				$result['user_details']['url'] = $this->config->item('base_url')."user/forgotpassword/".$result['user_details']['userid']."/".$token."/";
				//$reset_password_link = $this->config->item('base_url')."user/forgotpassword/".$result['user_details']['userid']."/".$token."/";
				//$result['user_details']['url'] = '<a href="'.$reset_password_link.'"/>'.$reset_password_link.'</a>';
				$password_details = array("st_reset_password_token"=>$token,"dt_reset_password_sent"=>date("Y-m-d H:i:s"));
				$this->user_model->update_user($password_details,$result['user_details']['userid']);
				$this->forgotpassword_email($result['user_details']);
				$this->session->set_userdata('forgot_email_member',$result['user_details']['email']);
				redirect($this->config->item('base_url').'forgot-password-thankyou/');
			}
		} else {
			$this->load->view('user_forgot_password',$data);
		}
	}
	
	# *******************************************************************************************	
	#	Function	:	accept_request
	#	Purpose		:	Request Accepted
	# *******************************************************************************************
	
	public function accept_request($user_id='',$org_id='',$last_id='') {
		$data = array();
		$arrOrg = 	array('in_status' 	=> '1' );
		$get_org_details = $this->user_model->update_user_req_info(base64_decode($last_id),$arrOrg,base64_decode($user_id),base64_decode($org_id));
		($get_org_details == 1)?$data['request'] = 1:'';
		$this->load->view('user_request',$data);
	}
	
	# *******************************************************************************************	
	#	Function	:	reject_request
	#	Purpose		:	Request Rejected
	# *******************************************************************************************
	
	public function reject_request($user_id='',$org_id='',$last_id='') {
		$data = array();
		$arrOrg = 	array('in_status' 	=> '4' );
		$get_org_details = $this->user_model->update_user_req_info(base64_decode($last_id),$arrOrg,base64_decode($user_id),base64_decode($org_id));
		($get_org_details == 1)?$data['request'] = 4:'';
		$this->load->view('user_request',$data);
	}
	
	
	public function photographer_profile()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		
		$data['Err_Msg'] 					= '';
		
		$data['tooltip'] 	 		= get_cookie('tooltip');
		$data['profile_details'] 	= $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		//if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		$data['arrPhotographer']	= $this->user_model->get_photographer_detail($this->session->userdata('userid'));		
		$data['photographer_availability']	= $this->user_model->get_photographer_availablility($this->session->userdata('userid'));
		
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		$data['arpa_status']   = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		
		$form_field	=	array(	'my_website'		=>	"",
								'probonoservice'	=>	"",
								'avl_days'			=>	array(0 =>''),
								'about_photography'	=>	"",
								'distance'			=>	"",
								'zipcode'			=>	"",
								'photographer_id'	=>	""
								);
		
		
		if($this->input->post('frm_action') == 'frm_post') {
			
			if($this->input->post('zipcode'))
			{	
				$zip_code = $this->input->post('zipcode');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zipcode'] = strtoupper($zip_code);		
			}
			
			//echo "<pre>";print_r($this->input->post());die;
			foreach($form_field as $key => $value)	
			{	
				if(is_array($value)){
				$data['post_data'][$key] = $this->input->post($key);	
				}else{
					$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}					
			}
					
			//$data['post_data']["photographer_user"] = (count($data['arrPhotographer'])>0)?"Y":"N";	
							
			$this->form_validation->set_rules('about_photography','About My Photography','trim');
			$this->form_validation->set_rules('distance','Max. Distance from Zip to Travel','required|trim');
			$this->form_validation->set_rules('my_website','My Website','trim');
			$this->form_validation->set_rules('zipcode','Zipcode','required|trim');
			$this->form_validation->set_rules('avl_days[]','Availability days','required');
				
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('photographer-profile',$data);	
			}
			else
			{
				$lat=0;
				$lon=0;			
				if($data['post_data']['zipcode']!= '') 
				{ 
					$profile_zipcode = explode('-',$data['post_data']['zipcode']);
					if(isset($profile_zipcode[1]) && !empty($profile_zipcode[1]))
					{
						$data['post_data']['zipcode'] = $profile_zipcode[0];
					}
				
				
					$get_lat_long = $this->common_model->get_lattitude_longitude(trim($data['post_data']['zipcode']));
				
					if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
						$lat=$get_lat_long['lat'];					
						$lon=$get_lat_long['lon'];
					}
				}
				//echo "<pre>";print_r($data['post_data']);die;
				$insert_id = $this->user_model->update_photographer_details($data['post_data'],$this->session->userdata('userid'),$data['post_data']['zipcode'],serialize($data['post_data']['avl_days']),$lat,$lon,'tbl_photographer_detail');	
				if(isset($insert_id) && $insert_id != '')
				{
					$profile_info['st_photographer'] 	= 	"Y";
					$profile_info['dt_modified']		= 	date('Y-m-d H:i:s');
					$data['user_profile']				=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
					
				// for update the user profile setting 
				$data['user_profile_setting_details'] 		= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
			 
			 
			   if(empty($data['user_profile_setting_details']))
					{
					$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
										    'in_public'				=> '0',
										    'st_photographer'		=> 'a:6:{i:0;s:28:"st_photographer_availability";i:1;s:23:"st_photographer_zipcode";i:2;s:21:"in_distance_to_travel";i:3;s:14:"st_website_url";i:4;s:15:"in_pro_bono_ser";i:5;s:8:"st_about";}',
										   'dt_created'			=> date('Y-m-d H:i:s'),
										   'in_deleted'			=> '0'											
										);
					
					$this->user_model->add_user_photographrer_profile_setting($fost_arr);
					}
					else{			
						$fost_arr	 = 	array('st_photographer'	=> 'a:6:{i:0;s:28:"st_photographer_availability";i:1;s:23:"st_photographer_zipcode";i:2;s:21:"in_distance_to_travel";i:3;s:14:"st_website_url";i:4;s:15:"in_pro_bono_ser";i:5;s:8:"st_about";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
						$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
					}
						
				}
				$this->session->set_flashdata('success', 'Photographer details updated successfully.');

				redirect(base_url().'photographer-profile/');					
			}		
		}
		else
		{
			$this->load->view('photographer-profile',$data);	
		}
		
	}
	
	public function person_volunteer()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		
		$data['Err_Msg'] 			= '';
		
		$data['tooltip'] 	 		= get_cookie('tooltip');
		$data['profile_details'] 	= $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		//if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
		 if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		
		$data['arrVolunteer']	= $this->user_model->get_in_person_volunteer_detail($this->session->userdata('userid'));		
		$data['volunteer_availability']	= $this->user_model->get_volunteer_availability($this->session->userdata('userid'));
		
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		$data['arpa_status']   = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		
		$form_field	=	array(	'avl_days'				=>	array(0 =>''),
								'distance'				=>	"",
								'zipcode'				=>	"",
								'adoption_visit'		=>	"",
								'adoption_reviewer'		=>	"",
								'physical_fundraiser'	=>	"",
								'animal_facility'		=>	"",
								'volunteer_id'			=>	""
								);
		
		
		if($this->input->post('frm_action') == 'frm_post') {

			if($this->input->post('zipcode'))
			{	
				$zip_code = $this->input->post('zipcode');
				$zip_code = str_replace(" ","",$zip_code);
				$_POST['zipcode'] = strtoupper($zip_code);		
			}
			//echo "<pre>";print_r($this->input->post());die;
			foreach($form_field as $key => $value)	
			{	
				if(is_array($value)){
				$data['post_data'][$key] = $this->input->post($key);	
				}else{
					$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}					
			}
					
			$this->form_validation->set_rules('distance','Max. Distance from Zip to Travel','required|trim');
			$this->form_validation->set_rules('zipcode','Zipcode','required|trim');
			$this->form_validation->set_rules('avl_days[]','Availability days','required');
				
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('person-volunteer',$data);	
			}
			else
			{
				$lat=0;
				$lon=0;			
				if($data['post_data']['zipcode']!= '') 
				{ 
					$profile_zipcode = explode('-',$data['post_data']['zipcode']);
					if(isset($profile_zipcode[1]) && !empty($profile_zipcode[1]))
					{
						$data['post_data']['zipcode'] = $profile_zipcode[0];
					}
				
				
					$get_lat_long = $this->common_model->get_lattitude_longitude(trim($data['post_data']['zipcode']));
				
					if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
						$lat=$get_lat_long['lat'];					
						$lon=$get_lat_long['lon'];
					}
				}
				//echo "<pre>";print_r($data['post_data']);die;
				$insert_id = $this->user_model->update_volunteer_details($data['post_data'],$this->session->userdata('userid'),$data['post_data']['zipcode'],serialize($data['post_data']['avl_days']),$lat,$lon,'tbl_in_person_volunteer_detail');	
				if(isset($insert_id) && $insert_id != '')
				{
					$profile_info['st_in_person_volunteer'] 	= 	"Y";
					$profile_info['dt_modified']		= 	date('Y-m-d H:i:s');
					$data['user_profile']				=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				
				// this is for the update user public profile  
					$data['user_profile_setting_details'] 	= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
					//print_r($data['user_profile_setting_details']);
					if(empty($data['user_profile_setting_details']))
					{
					$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
										'in_public'				=> '0',
										'st_in_person_vol'				=> 'a:7:{i:0;s:25:"st_volunteer_availability";i:1;s:20:"st_volunteer_zipcode";i:2;s:20:"in_distance_to_drive";i:3;s:13:"in_home_visit";i:4;s:15:"in_app_reviewer";i:5;s:22:"in_physical_fundraiser";i:6;s:14:"in_animal_care";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
					
					$this->user_model->add_user_personal_profile_setting($fost_arr);
					}
					else{			
						$fost_arr	 = 	array('st_in_person_vol' => 'a:7:{i:0;s:25:"st_volunteer_availability";i:1;s:20:"st_volunteer_zipcode";i:2;s:20:"in_distance_to_drive";i:3;s:13:"in_home_visit";i:4;s:15:"in_app_reviewer";i:5;s:22:"in_physical_fundraiser";i:6;s:14:"in_animal_care";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
						$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
					}
				
				
				}
				$this->session->set_flashdata('success', 'In Person Volunteer details updated successfully.');

				redirect(base_url().'person-volunteer/');					
			}		
		}
		else
		{
			$this->load->view('person-volunteer',$data);	
		}
		
	}
	
	
	public function virtual_support_volunteer()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		
		$data['Err_Msg'] 			= '';
		
		$data['tooltip'] 	 		= get_cookie('tooltip');
		$data['profile_details'] 	= $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		//if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		
		$data['arr_sup_vol']	= $this->user_model->get_virtual_sup_vol_detail($this->session->userdata('userid'));		
		
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		
		$data['arpa_status']   = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		
		$form_field	=	array(	'managing_facebook'				=>	"",
								'managing_facebook_exp'			=>	"",
								'tweeting'						=>	"",
								'tweeting_exp'					=>	"",
								'googlepage'					=>	"",
								'googlepage_exp'				=>	"",
								'manage_pin_boards'				=>	"",
								'manage_pin_boards_exp'			=>	"",
								'instagram_posting'				=>	"",
								'instagram_posting_exp'			=>	"",
								'manage_video'					=>	"",
								'manage_video_exp'				=>	"",
								'social_media_other'			=>	"",
								'social_media_other_detail'		=>	"",
								'petfinder'						=>	"",
								'petfinder_exp'					=>	"",
								'adoptapet'						=>	"",
								'adoptapet_exp'					=>	"",
								'petharbor'						=>	"",
								'petharbor_exp'					=>	"",
								'petango'						=>	"",
								'petango_exp'					=>	"",
								'rescuegroups'					=>	"",
								'rescuegroups_exp'				=>	"",
								'shelterexchange'				=>	"",
								'shelterexchange_exp'			=>	"",
								'dogtime'						=>	"",
								'dogtime_exp'					=>	"",
								'petsoverstock'					=>	"",
								'petsoverstock_exp'				=>	"",
								'animal_profile_other'			=>	"",
								'animal_profile_other_detail'	=>	"",
								'transport_monitor'				=>	"",
								'transport_monitor_exp'			=>	"",
								'adoption_application'			=>	"",
								'adoption_application_exp'		=>	"",
								'onlinefundraiser'				=>	"",
								'onlinefundraiser_exp'			=>	"",
								'virtual_support_vol_id'		=>	"",
								);
		
		
		if($this->input->post('frm_action') == 'frm_post') {
			//echo "<pre>";print_r($this->input->post());die;
			foreach($form_field as $key => $value)	
			{	
				if(is_array($value)){
				$data['post_data'][$key] = $this->input->post($key);	
				}else{
					$data['post_data'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}					
			}
					
			$this->form_validation->set_rules('managing_facebook','Managing Facebook Page(s)','trim');
				
			if($this->form_validation->run()==FALSE)
			{
					$data['Err_Msg'] = validation_errors();
					$this->load->view('virtual-support-volunteer',$data);	
			}
			else
			{
				//echo "<pre>";print_r($data['post_data']);die;
				$insert_id = $this->user_model->update_virtual_sup_volunteer_details($data['post_data'],$this->session->userdata('userid'),'tbl_virtual_support_vol_detail');	
				if(isset($insert_id) && $insert_id != '')
				{
					$profile_info['st_virtual_support_volunteer'] 	= 	"Y";
					$profile_info['dt_modified']		= 	date('Y-m-d H:i:s');
					$data['user_profile']				=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			
				 // for update the user profile.
			   	$data['user_profile_setting_details'] 		= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
									
					if(empty($data['user_profile_setting_details']))
					{
					$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
										'in_public'				=> '0',
										'st_in_virtual_vol'				=> 'a:19:{i:0;s:18:"in_manage_facebook";i:1;s:17:"in_manage_twitter";i:2;s:15:"in_manage_gplus";i:3;s:19:"in_manage_pin_board";i:4;s:19:"in_manage_instagram";i:5;s:15:"in_manage_video";i:6;s:15:"in_social_media";i:7;s:12:"in_petfinder";i:8;s:12:"in_adoptapet";i:9;s:12:"in_petharbor";i:10;s:10:"in_petango";i:11;s:15:"in_rescuegroups";i:12;s:18:"in_shelterexchange";i:13;s:10:"in_dogtime";i:14;s:16:"in_petsoverstock";i:15;s:17:"in_animal_profile";i:16;s:20:"in_transport_monitor";i:17;s:23:"in_adoption_application";i:18;s:19:"in_onlinefundraiser";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
					
					$this->user_model->add_user_virtual_profile_setting($fost_arr);
					}
					else{			
						$fost_arr	 = 	array('st_in_virtual_vol'	=> 'a:19:{i:0;s:18:"in_manage_facebook";i:1;s:17:"in_manage_twitter";i:2;s:15:"in_manage_gplus";i:3;s:19:"in_manage_pin_board";i:4;s:19:"in_manage_instagram";i:5;s:15:"in_manage_video";i:6;s:15:"in_social_media";i:7;s:12:"in_petfinder";i:8;s:12:"in_adoptapet";i:9;s:12:"in_petharbor";i:10;s:10:"in_petango";i:11;s:15:"in_rescuegroups";i:12;s:18:"in_shelterexchange";i:13;s:10:"in_dogtime";i:14;s:16:"in_petsoverstock";i:15;s:17:"in_animal_profile";i:16;s:20:"in_transport_monitor";i:17;s:23:"in_adoption_application";i:18;s:19:"in_onlinefundraiser";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
						$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
					}
			
				}
				$this->session->set_flashdata('success', 'Virtual Support Volunteer details updated successfully.');

				redirect(base_url().'virtual-support-volunteer/');					
			}		
		}
		else
		{
			$this->load->view('virtual-support-volunteer',$data);
		}		
		
	}
	
		# *******************************************************************************************	
	#	Function	:	sign_up_widget ,login_wizard, forgotpass_widget signupthanks ,signupback - by bhushan 
	#	Purpose		:	User Sign Up
	# *******************************************************************************************
	
	public function sign_up_widget($refferid =""){
		$data = array();
		
		if($this->session->userdata('userid')) {
			redirect('user/signupthanks');
		}
		
		
		//$reffer = array('101'=>'Pulse TesT' , 102=>'Rescue Revolution' , 103=>'Flying Fur Rescue' , 104=>'Pilot.Dog');
		$reffer = $this->common_model->get_widget($refferid);
		$data['Err_Msg_reg'] = '';
		$data['Err_Msg'] = '';
		$form_field	=	array('username'	=> "",
							 'lastname'		=> "",
							  'email'		=> "",							  
							  'password'	=> "",
							  'rpassword'	=> "",
							  'referred_by'	=> "",
							  'tnc' 		=> "",
							  'signup'		=> "",
							  'remember'	=> "",
							  'action'		=> "",
							  'oldertc' 	=> ""
					  	 	);
		foreach($form_field as $key => $value)	
		{	
			$data['register'][$key] = $value;	
		}					
		
		if($this->input->post('action'))
		{
			foreach ($form_field as $key => $value) {	
					$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			if($this->input->post('action')=="registeruser")
			{  
				$this->form_validation->set_rules('username', 'First Name', 'trim|required');
				$this->form_validation->set_rules('lastname', 'Last Name', 'trim|required');
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				$this->form_validation->set_rules('password', 'Password', 'trim|required|spacecheck|min_length[6]|matches[rpassword]');
				$this->form_validation->set_rules('rpassword', 'Re-type Your Password', 'trim|required');
				$this->form_validation->set_rules('referred_by', 'Person/Organization Name', 'trim');
				$this->form_validation->set_rules('tnc', 'I agree to the Terms of Service and Privacy Policy', 'trim|required');
				$this->form_validation->set_rules('oldertc', 'I am 18 or older and have read and agree to the Terms and Conditions.', 'trim|required');
				$counts = $this->common_model->check_exists("tbl_users","in_user_id",array("st_email"=>$data['register']['email'],"in_deleted"=>'0'));
				$Err_Msg  ='';
				if($counts>0)
				{
					$Err_Msg = "Email address already exists.";
				}
				if($this->form_validation->run() == FALSE || $Err_Msg!='')
				{
						$data['Err_Msg_reg'] = validation_errors().$Err_Msg;
						//$this->load->view('demo_sign_up',$data);	
				}
				else
				{
					$browser_details = array();
					$browser_details["page_referral"]	= $_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
					$browser_details["ip_address "]		= $_SERVER['REMOTE_ADDR'];
					$browser_details["browser_used"]	= $_SERVER['HTTP_USER_AGENT'];
	
					
	
					$data_array = array("st_display_name" => $data['register']['username'],
										"st_last_name"	  => $data['register']['lastname'],
										"st_email" 		  => $data['register']['email'],
										"st_password" 	  => md5($data['register']['password']),
										"st_referred_by"  => $reffer['st_org_name'],
										"dt_created"	  => date("Y-m-d h:i:s"),
										"dt_modified"	  => date("Y-m-d h:i:s"),
										"in_newsletter"	  => (($data['register']['signup']!='')?"Y":"N"),
										"in_public"		  => "1",
										"in_status"	  	  => "1",
										"in_age_terms_flag"	=> "1",
										"st_browser_info"	=> @serialize($browser_details),
										"in_user_from"		=> $reffer['in_widget_id']
										); 
										
					$inserted_id = $this->user_model->insert_user($data_array);
					$this->user_model->insert_user_profile(array("in_user_id"=>$inserted_id,"in_status"=>"0","dt_created"=>date("Y-m-d H:i:s")));
					$this->login_details($data['register']);
					$this->email_confirm();
					$this->session->set_userdata('userid',$inserted_id);					
					$this->session->set_userdata('user_name',$data['register']['username']);
					$this->session->set_userdata('last_name',$data['register']['lastname']);
					$this->session->set_userdata('email',$data['register']['email']);
					
					//code to check non-doobert match with current registered user
					//if yes then add non-doobert legs to legs participants details and delete from non-doobert-users
					
					$user_result = $this->user_model->match_nondoobert_email_id($data['register']['email']);
					if(isset($user_result) && !empty($user_result))
					{
						$lat=0;
						$lon=0;			
						if($user_result[0]['st_zipcode']!= ''){ 
						$get_lat_long = $this->common_model->get_lattitude_longitude(trim($user_result[0]['st_zipcode']));
						
						if(!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) { 
							$user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
							$lat=$get_lat_long['lat'];					
							$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
							$lon=$get_lat_long['lon'];				
						}
						
						$user_profile_info = array();
						$user_profile_info['st_zip']   = 	$user_result[0]['st_zipcode'];
						$user_profile_info['st_primary_phone'] = $user_result[0]['st_phone'];
						$user_profile_info['in_status'] = "1";
						
						$data['user_profile']		=	$this->user_model->update_user_info($user_profile_info,$this->session->userdata('userid'),'tbl_user_profile');
						
						$user_data_array = array("in_status" => "1"); 
						$this->load->model('orgtrasnportation_model');
						
						$transport_co_details = $this->orgtrasnportation_model->get_transport_coordinator_detail($user_result[0]['in_transportation_id']);
						if(isset($transport_co_details) && !empty($transport_co_details))
						{
							$user_data_array['st_referred_by'] = $transport_co_details['coordinatorname'];	
						}
						
						$this->user_model->update_user($user_data_array, $this->session->userdata('userid'));
						
						$driver_data = array("driver_user"  => "Y",
											 "avl_days"     => array("0" => "Sun","1" => "Mon","2" => "Tue","3" => "Wed","4" => "Thu","5" => "Fri","6" => "Sat"),
											 "zipcode"      => $user_result[0]['st_zipcode'],
											 "vehicle_ids"  => array("0"=>""),
											 //"vehicletype"  => array("0"=>$user_result[0]['st_vehicle_type']),
											 "vehicletype"  => array("0"=>"Other"),
											 "distance"     => array("0"=>100),
											 "color"        => array("0"=>$user_result[0]['st_vehicle_color']),
											 "license"      => array("0"=>$user_result[0]['st_license_plate']),
											 "license_state"=>array("0"=>$user_result[0]['st_license_state']),
											 "googlephotos_vehicle" =>array("0"=>""),
											);
						$this->user_model->update_vehicle_details($driver_data,$this->session->userdata('userid'),$user_result[0]['st_zipcode'],serialize($driver_data['avl_days']),'100',$lat,$lon,'tbl_user_vehicle');	
						$driver_profile_info['st_driver'] 	= 	"Y";
						$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
						$data['user_profile']		=	$this->user_model->update_user_info($driver_profile_info,$this->session->userdata('userid'),'tbl_user_profile');
						}
						
						foreach($user_result as $key=>$value)
						{
							$join_data = array("in_transportation_id"		=> $value['in_transportation_id'],
							   "in_user_id"					=> $this->session->userdata('userid'),
							   "in_transportation_leg_id"	=> $value['in_leg_id'],
							   "in_created_by"				=> $this->session->userdata('userid'),
							   "dt_created"					=> date("Y-m-d H:i:s"),
							   "in_deleted"					=> 0
							);
							
							$this->orgtrasnportation_model->join_legs($join_data);
							
							
							$this->orgtrasnportation_model->update_non_doobert_user_leg($value['in_non_doobert_user_id']);
							
							$leg_type =  $this->orgtrasnportation_model->get_leg_type_by_id($value['in_leg_id']);
							
							if(!empty($leg_type))
							{
								//print_r($leg_type[0]['in_route_type']);
								if(isset($leg_type[0]['in_route_type']) && $leg_type[0]['in_route_type'] != '' && $leg_type[0]['in_route_type'] == 0)
								{						
									//code to update vehicle id in leg details 
									$data['arrVehicle']			= $this->user_model->get_vehicle_detail($this->session->userdata('userid'));
									if(!empty($data['arrVehicle'][0]) && isset($data['arrVehicle'][0]['in_vehicle_id']))
									{
									//$array_update = array("in_vehicle_id"=>$data['arrVehicle'][0]['in_vehicle_id']);
									//$this->orgtrasnportation_model->update_legs($array_update,$legs_ids);
									$leg_vehicle_detail = array("in_transportation_id"	=> $value['in_transportation_id'],
															    "in_user_id"			=> $this->session->userdata('userid'),
															    "in_vehicle_id"			=> $data['arrVehicle'][0]['in_vehicle_id'],
															    "in_transportation_leg_id"	=> $value['in_leg_id'],
															    "dt_created"			=> date("Y-m-d H:i:s"),
															    "in_deleted"			=> 0
															   );
									$this->orgtrasnportation_model->add_leg_vehicle_detail($leg_vehicle_detail);
									
									}
								}
							}
						}
					}
										
					redirect('user/signupthanks'); 	
				}
			}
		}
		
		$this->load->view('sign_up_widget',$data);
	}
	
	public function facebook_login_widget()
	{
		session_start();
		$fb_sess_arr = array();
		
		if(isset($_SESSION))
		{
			$fb_sess_arr = $_SESSION;
			session_unset();			
			
			
			$var = $this->user_model->facebookuser($fb_sess_arr);
			if($var)
			{
				if($var==='2')
				{
					$register =  array("username"	=> $this->session->userdata('user_name'),
									   "lastname"	=> $this->session->userdata('last_name'), 
									   "email"		=> $this->session->userdata('email'));
					$this->login_details($register);
					//$this->email_confirm();
				}
				//redirect($this->config->item('base_url')."my-profile/");
				$result = $this->user_model->get_user_profile($this->session->userdata('userid'));
				if(isset($result['profile_status']) && $result['profile_status']==0)
				{
					//$url = $this->config->item('base_url')."my-profile/";
					$url = $this->config->item('base_url')."dashboard/";	
				}
				else
				{
					if($this->session->userdata('url_data'))
					{
						$url = $this->session->userdata('url_data');
						$this->session->unset_userdata('url_data');		
						
					}
					if(isset($result['st_driver']) && $result['st_driver']=='Y')
					{	
						//$url = $this->config->item('base_url')."my-transportation/";
						$url = $this->config->item('base_url')."dashboard/";
					}
					else
					{
						//$url = $this->config->item('base_url')."notification/";
						$url = $this->config->item('base_url')."dashboard/";
					}
				}
				//redirect($url);
				//$url = $this->config->item('base_url').'user/signupthanks';
				/*echo "<script>
				var parent = window.opener;
				parent.location ='".$url."';
				</script>";*/
				echo "<script>
				parent.document.location.href ='".$url."';
				</script>";
				echo "<script>self.close();</script>";					
			}
			else
			{
				redirect('user/signupthanks');			
			}
				
		}else{
			redirect('user/signupthanks');				
		}
	}
	
	function signupthanks()
	{
	 $this->load->view('signupthanks');		
	}
	
	function loginthanks()
	{
	  $this->load->view('loginthanks');		
	}
	
	function forgotpassthankyou()
	{
		$this->load->view('forgotpassthankyou');
	}
	
	public function forgotpass_widget()
	{
		$data = array();
		$data['Err_Msg_forgot'] = '';
		
		$data['Err_Msg'] = '';
			
		if($this->input->post('action'))
		{
		$data = array();
		if($this->input->post('action')=="forgotpassword")
			{
				$da['email']=$_POST['email'];
				$result = $this->user_model->user_forgotpassword($da);				
				$error = '';
				if(empty($result))
				{
					$error = "Email address does not exists.";
				}
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				
				if($this->form_validation->run()==FALSE ||$error!='')
				{
						$data['Err_Msg_forgot'] = validation_errors().$error ;
						
						
				}
				else
				{					
					$token = md5(time().$result['user_details']['userid']);
					$result['user_details']['url'] = $this->config->item('base_url')."user/forgotpassword/".$result['user_details']['userid']."/".$token."/";
					$password_details = array("st_reset_password_token"=>$token,"dt_reset_password_sent"=>date("Y-m-d H:i:s"));
					$this->user_model->update_user($password_details,$result['user_details']['userid']);
					$this->forgotpassword_email($result['user_details']);
					$this->session->set_userdata('forgot_email_member',$result['user_details']['email']);
					redirect($this->config->item('base_url').'user/forgotpassthankyou/');
				}
			}
		}
		$this->load->view('forgotpass_widget',$data);
	}
	
	function login_widget()
	{
		$data = array();
		$data['Err_Msg_login'] = '';
		$data['Err_Msg'] = '';
		$data['rem_password'] = get_cookie('pass');
		$data['rem_email'] 	  = get_cookie('user');
	    $form_field	=   	array(
							  'email'		=> "",							  
							  'password'	=> "",
							  'remember'    => "");
		foreach($form_field as $key => $value)	
		{	
			$data['register'][$key] = $value;	
		}					
		if($this->input->post('action'))
		{ 
			foreach ($form_field as $key => $value) {	
					$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
			}
			if($this->input->post('action')=="login")
			{
				foreach ($form_field as $key => $value) {	
					$data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}
				$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
				$this->form_validation->set_rules('password', 'Password', 'trim|required');
				if($this->form_validation->run() == FALSE)
				{
						$data['Err_Msg_login'] = validation_errors();
						//redirect($this->config->item('base_url')."user/loginthanks");
						$this->loginthanks();
						
				}
				else
				{
					$result = $this->user_model->user_login($data['register']);
					$user_details = $this->user_model->get_user_profile($result['user_details']['userid']);
					if(isset($result) && !empty($result))
					{
						
						
						#===================== remember me ==================#
						if($data['register']['remember']!='')
						{							
								
								set_cookie('pass', $this->input->post('password'), 864000);	
								set_cookie('user', $data['register']['email'], 864000);	

						}
										
						$this->session->set_userdata('userid',$result['user_details']['userid']);					
						$this->session->set_userdata('user_name',$result['user_details']['user_name']);
						$this->session->set_userdata('last_name',$result['user_details']['last_name']);
						$this->session->set_userdata('email',$result['user_details']['email']);
						
						
						//set coockie
						if(!isset($_COOKIE['doobert_home'])) {
							setcookie("doobert_home","doobert_value",0,"/",".doobert.com");
						}
						//End set coockie
					
						
						if($result['user_details']['status']==0)
						{
								 redirect('user/loginthanks');
						}
						else
						{
							
							if($this->session->userdata('url_data'))
							{
								$url = $this->session->userdata('url_data');
								$this->session->unset_userdata('url_data');		
								$this->loginthanks();
							}
							$this->session->unset_userdata('transpo');
							$this->session->unset_userdata('noti');
							if($user_details['st_driver']=='Y')
							{
								$this->session->set_userdata('transpo',1);	
								$this->loginthanks();
							}
							else
							{
								$this->session->set_userdata('noti',1);	
								$this->loginthanks();
							}
						}
						
					}
					else
					{
						$this->session->set_flashdata('warning','Invalid username or password.');
						redirect($this->config->item('base_url')."user/login_widget");
					}
					
				}
			}
			else
			{
				$this->load->view('login_widget',$data);				
			}
		}
		else
		{
			$this->load->view('login_widget',$data);			
		}
	}
	
	public function check_doobert_user()
	{
		$username = $_POST['username'];
		$password = $_POST['password'];
		
		$arrData = $this->user_model->check_wp_doobert_user($username,$password);
		
		print_r(json_encode($arrData));
		 //return json_encode($arrData);//exit;
		//return json_encode($arrData);
	} 
	
	public function plane_photos_upload() {
		
		$this->load->library('upload');
		
		$config['upload_path']  	= $this->config->item('upload').'plane/';
		$config['max_size']			= '5120';
		$config['allowed_types']	= 'jpg|png|gif|jpeg|jpe';
		$config['remove_spaces']  	= TRUE;
		$config['file_name'] 		= preg_replace('/[^A-Za-z0-9\-.]/','',str_replace(" ","_",$this->session->userdata('userid').'_'.mt_rand().'_'.$_FILES[$this->input->post('file_name')]['name']));
		
		//Initialization
		$this->upload->initialize($config);
			
		//Display errors of file upload.
		//Upload image by calling do_upload method.
		$this->upload->do_upload($this->input->post('file_name'));
		$file_errors = array('errors' => $this->upload->display_errors());
		
		if(!empty($file_errors['errors'])) {
			$data = array('upload_error' => strip_tags($file_errors['errors']));
			echo json_encode($data);
			return false;
		} 
		
		echo "{";
		echo "file_name: '" . $config['file_name'] . "'\n";
		echo "}";
	}
	
	function delete_photographer()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			$this->user_model->delete_photographer($this->session->userdata('userid'),'tbl_photographer_detail');	
			$profile_info['st_photographer'] 	= 	"N";
			$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			echo "<div class=\"alert alert-success\"><strong>Photographer information removed successfully.</strong></div>";  
		}
	}
	
	function delete_volunteer()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			$this->user_model->delete_volunteer($this->session->userdata('userid'),'tbl_in_person_volunteer_detail');	
			$profile_info['st_in_person_volunteer'] 	= 	"N";
			$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			echo "<div class=\"alert alert-success\"><strong>In Person Volunteer information removed successfully.</strong></div>";  
		}
	}
	
	function delete_virtual_volunteer()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			$this->user_model->delete_virtual_volunteer($this->session->userdata('userid'),'tbl_virtual_support_vol_detail');	
			$profile_info['st_virtual_support_volunteer'] 	= 	"N";
			$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			echo "<div class=\"alert alert-success\"><strong>Virtual Support Volunteer information removed successfully.</strong></div>";  
		}
	}
	
	#=========================================================
	#	Function : foster_home
	#	Purpose  : fister home details
	#=========================================================			
	public function foster_home()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$data 				= array();
		$data['Err_Msg'] 	= '';
		$form_field	=	array('animaltype'				=> array(0 =>''),
							  'duration'				=> array(0 =>''),
							  'maximum_foster_days'		=> array(0 =>''),
							  'maximum_foster_size'		=> array(0 =>''),
							  'household_animals'		=> array(0 =>''),
							  'household_other_animals' => array(0 =>''),
							  'residence_type'			=> "",
							  'allow_animals'			=> "",
							  'live_animals'			=> "",
							  'nobodyhome'				=> "",
							  'yard'					=> "",
							  'air_conditioning'		=> "",
							  'animals_care'			=> "",
							  'adoption_events'			=> "",
							  'animal_alone'			=> "",
							  'animal_behavioral'		=> "",
							  'org_worked_with'			=> "",
							  'feeding_experience'		=> "",
							  'foster_willing'			=> "",
							  'animal_reason_back'		=> array(0 =>''),
							  'animal_reason_back_other'=> "",
							  'adults_live'				=> "",
							  'children_live'			=> "",
							  'children_age'			=> "",
							  'children_age_visit'		=> "",
							  'guidance_children'		=> "",
							  'noise_level'				=> "",
							  'describe_animal'			=> "",
							  'often_travel'			=> "",
							  'responsible_care'		=> "",
							  'help_emergency'			=> "",
							  'interested_animals'		=> "",
							  'ref_1_name'				=> "",
							  'ref_1_relationship'		=> "",
							  'ref_1_contactnumber'		=> "",
							  'ref_2_name'				=> "",
							  'ref_2_relationship'		=> "",
							  'ref_2_contactnumber'		=> "",
							  'ref_3_name'				=> "",
							  'ref_3_relationship'		=> "",
							  'ref_3_contactnumber'		=> "",
							  'additional_info'			=> "",
							  'foster_id'				=> "",
					  	 	);	
							
		$data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		
		//if(trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
			$this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');
			
			if(get_cookie('tooltip'))
			{
				$data['tooltip'] 	 	= get_cookie('tooltip');
			}
			else
			{
				set_cookie('tooltip', "N", 864000);	
				$data['tooltip'] 	= "N";	
			}
				
			//echo get_cookie('get_started');exit;
			if(get_cookie('get_started'))
			{
				$data['get_started'] 	= get_cookie('get_started');
			}
			else
			{
				set_cookie('get_started', "N", 864000);	
				$data['get_started'] 	= "N";	
			}
			
			redirect(base_url().'my-profile');
		}
		
		$data['animal_type'] = $this->common_model->get_animal_types();	
		$data['tooltip'] 	 = get_cookie('tooltip');
		$data['user_verified'] = $this->common_model->get_user_verified($this->session->userdata('userid'));
		$data['arpa_status'] = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		
		$data['arr_foster_home']	= $this->user_model->get_foster_home_detail($this->session->userdata('userid'));
		
		//print_r($data['arr_foster_home']);exit;
		
		$data['arr_foster_home_ref']	= array();
		$data['arr_foster_animal_type'] = array();
		if(isset($data['arr_foster_home']) && !empty($data['arr_foster_home']))
		{
			$data['arr_foster_home_ref'] = $this->user_model->get_foster_home_ref_detail($data['arr_foster_home']['in_foster_id']);
			
			$data['arr_foster_animal_type']	= $this->user_model->get_foster_animal_type_detail($data['arr_foster_home']['in_foster_id']);
		}
		
		//echo "<pre>";print_r($data);die;	
		
		if($this->input->post('frm_action') == 'frm_post') {
			//echo "<pre>";print_r($_POST);die;	
			foreach($form_field as $key => $value)	
			{	
				if(is_array($value))
				{
					$data['post_details'][$key] = $this->input->post($key);		
				}
				else{
					$data['post_details'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}
			}
			
			//print_r($data['post_details']);exit;
			
			$validate_fields = array(array('field'   => 'ref_1_name',	'label'  => 'Reference 1 Name',		'rules' => 'trim'),
									array('field'   => 'ref_2_name',	'label'  => 'Reference 2 Name',		'rules' => 'trim'),
									array('field'   => 'ref_3_name',	'label'  => 'Reference 3 Name',		'rules' => 'trim'),
									array('field'   => 'ref_1_relationship',	'label'  => 'Reference 1 Email',	'rules' => 'trim'),
									array('field'   => 'ref_2_relationship',	'label'  => 'Reference 2 Email',	'rules' => 'trim'),
									array('field'   => 'ref_3_relationship',	'label'  => 'Reference 3 Email',	'rules' => 'trim'),
									array('field'   => 'ref_1_contactnumber',	'label'  => 'Reference 1 Contact Number',	'rules' => 'trim'),
									array('field'   => 'ref_2_contactnumber',	'label'  => 'Reference 2 Phone',	'rules' => 'trim'),
									array('field'   => 'ref_3_contactnumber',	'label'  => 'Reference 3 Phone',	'rules' => 'trim'),	
									);
									
			//Validation rules
			$this->form_validation->set_rules($validate_fields);
			
			if($this->form_validation->run()==FALSE)
			{
				$data['Err_Msg'] = validation_errors();
				$this->load->view('foster-home-profile',$data);	
			}
			else
			{
				$insert_id = $this->user_model->update_foster_home_details($data['post_details'],$this->session->userdata('userid'),'tbl_foster_user_detail');	
				if(isset($insert_id) && $insert_id != '')
				{
					
				$this->user_model->delete_foster_references($insert_id,'tbl_fosters_reference');
				
				for($a=1;$a<=3;$a++)
				{  
					$ref_details = array();
					if($data['post_details']['ref_'.$a.'_name']!='' || $data['post_details']['ref_'.$a.'_relationship']!='' || $data['post_details']['ref_'.$a.'_contactnumber']!='')
					{ 
						$ref_details = array(	"in_foster_id"		=> $insert_id, 
												"st_ref_name"		=> $data['post_details']['ref_'.$a.'_name'],
												"st_ref_relation"	=> $data['post_details']['ref_'.$a.'_relationship'],
												"st_ref_contact"	=> $data['post_details']['ref_'.$a.'_contactnumber'],
												"dt_created"		=> date("Y-m-d H:i:s"),  
												"in_deleted"		=> "0"
												);														
												
						$this->user_model->insert_foster_references($ref_details);
					}
				}					
					
				$profile_info['st_foster_home'] 	= 	"Y";
				$data['user_profile']	=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				
				// for update the user profile. 
			
				$data['user_profile_setting_details'] 		= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
								
					if(empty($data['user_profile_setting_details']))
					{
					$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
										'in_public'				=> '0',
										'st_foster'				=> 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
					
					$this->user_model->add_user_foster_profile_setting($fost_arr);
					}
					else{			
						$fost_arr	 = 	array('st_foster'		=> 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
						$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
					}
				
				}
				
				if($this->session->userdata('zip'))
				{
					$zip_code_state = $this->common_model->get_zipcode_info($this->session->userdata('zip'));
					if($zip_code_state['state_prefix']=='CO')
					{
							if($this->session->userdata('email'))
							{
								$colorado_email_notification = $this->common_model->get_email_containt("83");	
								
								$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{														
																			
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
								
								if(isset($colorado_email_notification[0]['st_email_body']))
								{
									$to = $this->session->userdata('email');
									$message  = $colorado_email_notification[0]['st_email_body'];
									$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  =	str_replace("##DONATION##",$donation,$message);	
									$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
									$message  = str_replace("##display_name##",$this->session->userdata('user_name'). " " .$this->session->userdata('last_name'),$message);				
									$subject  = $colorado_email_notification[0]['st_email_subject'];
									$category = $colorado_email_notification[0]['st_category'];
									$this->mail_notify_colorado($to,$subject,$category,$message);
								}	
								//$message = 'This user has registered colorado zipcode address please verify it';
								
						}			
					}	 
				}	
				
				$this->session->set_flashdata('success', 'Foster home details updated successfully.');
				redirect(base_url().'foster-home/');
			}
			
		}
		else{	
			//echo "<pre>";print_r($data['profile_details']);die;
			$this->load->view('foster-home-profile',$data);
		}
	}
	
	function delete_foster()
	{
		if(!$this->session->userdata('userid')){
			die;
		}
		if($this->input->post())
		{
			$this->user_model->delete_foster($this->session->userdata('userid'),'tbl_foster_user_detail');	
			$profile_info['st_foster_home'] 	= 	"N";
			$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
			echo "<div class=\"alert alert-success\"><strong>Foster Home information removed successfully.</strong></div>";  
		}
	}
	
	function delete_plane_image()
	{
		if(!$this->session->userdata('userid')){
			redirect($this->config->item('base_url'));
		}
		$where_cnd = array("in_id"=>$this->uri->segment(3),"in_plane_id"=>$this->uri->segment(4));
		$this->user_model->delete_plane_image($where_cnd,"tbl_plane_image");	
		$this->session->set_flashdata('success', 'Image deleted successfully.');
		$this->session->set_userdata('plane_edit',$this->uri->segment(4));
		redirect(base_url().'transport-profile/');		
	}
	
	public  function import_foster_profile()
	{
		$fosters_data = $this->user_model->get_user_fosters_for_import();
		//print_r($fosters_data);exit;
		if(isset($fosters_data) && !empty($fosters_data))
		{
			foreach($fosters_data as $fost_val)
			{
				$maximum_foster_days = "";
				
				$insert_fost_data = array("in_user_id"  => $fost_val['in_user_id'],
										  "dt_created"  => $fost_val['dt_created'],	
										  "dt_modified" => $fost_val['dt_modified'],	
											);
				$last_insert_foster_id = $this->user_model->insert_foster_users($insert_fost_data);
				
				$animal_type_id = $fost_val['in_animal_type_id'];
				$duration_type = $fost_val['in_duration_type'];
				$in_duration = $fost_val['in_duration'];
				
				
				if($duration_type == "1")
				{
					$duration_type_id = "7";
				}
				
				if($duration_type == "2")
				{
					$duration_type_id = "9";
				}
				
				if($duration_type == "0")
				{
					$maximum_foster_days = isset($in_duration) && $in_duration > 0 ? $in_duration : '';
				}				
				
				$insert_fost_animal_data = array("in_foster_id" => $last_insert_foster_id,
												 "in_animal_type_id" => $animal_type_id,
												 "in_duration_type_id" => isset($duration_type_id) ? $duration_type_id : '',
												 "st_maximum_foster_days" => isset($maximum_foster_days) ? $maximum_foster_days : '',
												 "dt_created"  => $fost_val['dt_created'],	
										  		 "dt_modified" => $fost_val['dt_modified'],
												);
				$last_insert_foster_animal_id = $this->user_model->insert_foster_users_animal($insert_fost_animal_data);
				
			}
			
			echo 'data inserted successfully';
		}
		
	}
	
	public function block_user_account() {
        $user_id = $this->session->userdata('userid');
		
		$user_signup_type = '';
		$transport_confirm_status = array();
		$this->load->model('orgtrasnportation_model');	
		$total_leg_partictants = $this->common_model->get_user_legs_participants($user_id);
		if(count($total_leg_partictants) >0)
		{
			foreach($total_leg_partictants as $key=>$value)
			{
				$transport_details 			= $this->orgtrasnportation_model->get_transport_details($value->in_transportation_id);
				if(!empty($transport_details))
				{	
					if(!($transport_details[0]['in_status']==2 && $transport_details[0]['dt_pickup_date'] < date('Y-m-d')))
					{
						$this->session->set_userdata('transport_id',$transport_details['0']['in_transportation_id']);
						if($transport_details[0]['in_status']==2)
						{
							array_push($transport_confirm_status,$transport_details['0']['in_transportation_id']);
							//$transport_confirm_status	
						}
						if($transport_details['0']['st_trans_type']=="D")
						{
							$this->delete_routing_legs($transport_details,$user_id);
						} else {
							$this->delete_pre_specify_legs($transport_details,$user_id);
						}
					}	
				}	
				//$transport_details = $this->
			}
			
			if(count($transport_confirm_status)>0)
			{
				$this->send_admin_email($transport_confirm_status);
			}	
		}
		
		$this->delete_request_routing_legs();
		$this->delete_assigned_routing_transport();	
		
		$user_type = $this->common_model->get_user_type($user_id);
		
		if(isset($user_type) && !empty($user_type) && isset($user_type['st_signup_as']) && $user_type['st_signup_as'] != '')
		{
			$user_signup_type = $user_type['st_signup_as'];
		}
		
        $data_array = array("in_status" => 3,"in_deleted" => 1,"dt_modified"=> date('Y-m-d H:i:s'));
        $this->user_model->update_user($data_array, $user_id);
        $this->session->sess_destroy();
		
		setcookie("userid","",time()-3600,"/",".doobert.com");
		setcookie("user_name","",time()-3600,"/",".doobert.com");
		setcookie("email","",time()-3600,"/",".doobert.com");
		setcookie("last_name","",time()-3600,"/",".doobert.com");
		
		echo $user_signup_type;
		exit;
		
    }
	
	public function delete_assigned_routing_transport()
	{
		$assigned_routing_transport = $this->user_model->get_all_assigned_router($this->session->userdata('userid'));
		if(count($assigned_routing_transport)>0)
		{
			foreach($assigned_routing_transport as $key=>$value)
			{
				$this->db->where('in_transportation_id',$value->in_transportation_id);
				$this->db->update('tbl_transportation',array('accTcid'=>0,'dt_modified'=>date('Y-m-d H:i:s')));
			}
		}
	}
	
	public function delete_request_routing_legs()
	{
		$this->db->where('in_user_id',$this->session->userdata('userid'));
		$this->db->update('tbl_legs_cover',array(in_deleted=>1));
	}
	
	public function send_admin_email($transport_confirm_status)
	{
		$this->load->library('email');
		$admin_list = $this->common_model->get_admin_list();	
		
			foreach($admin_list as $key=>$value)
			{
					$email_details_admin = $this->common_model->get_email_containt("111");
					$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
					if (isset($email_details_admin[0]['st_email_body'])) 
					{
						$active_users_details = $this->session->userdata('user_name').' '.$this->session->userdata('last_name').'('.$this->session->userdata('email').')';
						$templete = $email_details_admin[0]['st_email_body'];
						$tranpsort_id = implode(",",$transport_confirm_status);	
						$templete = str_replace("##user_details##",$active_users_details, $templete);
						$templete = str_replace("##transport_id##",$tranpsort_id, $templete);
						$templete  	= 	str_replace("##DONATION##",$donation,$templete);
						$strMail = $templete;
						$to = $value['email_address'];
						
						$subject = $email_details_admin[0]['st_email_subject'];
						$category = $email_details_admin[0]['st_category'];
						$message = $strMail;
					
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
					}			
			}	
	}
	public function delete_pre_specify_legs($transport_details,$user_id)
	{
		$get_leg_details = $this->orgtrasnportation_model->get_all_legs();
		$total_miles_removed = 0;
		$legs_array = array();
		$user_driver_email = array();
		$user_driver_email[] = array("user_id"      => $transport_details['0']['in_user_id'],
									 "user_email"	=> $transport_details['0']['st_email'],
									 "display_name" => $transport_details['0']['st_display_name']
									);
		foreach($get_leg_details as $key=>$value)
		{
			$legs_ids = $value['in_transportation_leg_id'];	
					if($legs_ids>0 && $legs_ids!='')
					{	
						$this->orgtrasnportation_model->leave_legs_by_user_id($legs_ids,$user_id);		
						$user_legs = $this->orgtrasnportation_model->get_leg_details($legs_ids);	
						if(!empty($user_legs))
						{
								$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
								 $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
								
								$route_details = $this->orgtrasnportation_model->get_legs_path($legs_ids);
								if(count($route_details)<=0)
								{
									if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
									{
										$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
									}
									else
									{
										$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
									}
									if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
									{
										$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
									}
									else
									{
										$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
									}
								//$total_miles 	= $this->common_model->get_miles(urlencode($origin),urlencode($destinations));
								$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
								$total_miles  	=  $total_miles['distance'];
								//$routes_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));	
								}
								else
								{
									$total_miles	=  $route_details['fl_distance'];
								}
								$total_miles_removed = $total_miles_removed + $total_miles;			
								$this->orgtrasnportation_model->update_distance($total_miles);
								
								$target_date = @date("l, M d",@strtotime($user_legs['pick_start_time']));	
									 					
								$legs_array[] = array("target_date"   => $target_date,
													  "leg_origin"      => $origin1,
													  "leg_destination" => $destinations1,
													  );
						
						}
						
					}
					$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
					$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
					$notification_message = '<div class="timeline-body border">
									<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left leg from transportation.</h2>
									<div class="timeline-content">
										<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
										<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
										<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
										<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
										<div class="clearfix"></div>
								  </div></div>';							
					/*$arr_notification = array("in_organization_id"	=> $this->session->userdata('org_id'),
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"st_notification_msg"	=> $notification_message,
												"in_type"				=> '0',
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );*/
					$arr_notification = array(	"in_organization_id"	=> $transport_details['0']['in_organization_id'],
												"in_transportation_id"	=> $this->session->userdata('transport_id'),
												"in_transport_leg_id"   =>  $legs_ids, //added By Amit
												"in_user_id"			=> $this->session->userdata('userid'),
												"in_type"				=> 13,
												"in_modified_by"		=> $this->session->userdata('userid'),
												"dt_created"			=> date("Y-m-d H:i:s"),
												"in_deleted"			=> "0"
											  );	
					$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
		}
		$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
		$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
		$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
		$cover_leg = 0;
		$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
		if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0 && isset($transport_details['0']['in_distance_covered']) && $transport_details['0']['in_distance_covered'] > 0)
		{
				//$percent = number_format(($transport_details['0']['in_distance_covered']*100)/$transport_details['0']['in_tot_distance'],2,".","");
				//$percent = ($percent>=100)?100:$percent;
				$totol_remaining = $transport_details['0']['in_distance_covered'] - $total_miles_removed;
				if($totol_remaining > 0)
				{
						$percent = number_format(($totol_remaining*100)/$transport_details['0']['in_tot_distance'],2,".","");
						$percent = ($percent>=100)?100:$percent;
				} else {
						$percent = 0;
				}
		}
		else
		{
					$percent = 0;
		}
		
		$name_arr = array("name"		      => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
							"transport_id" 	  => $this->session->userdata('transport_id'),
						    "percent" 		  => $percent,
							"total_leg"	      => ($leg_data['cnt'] ? $leg_data['cnt'] : 0),
							"cover_leg"       => $cover_leg,
							"st_org_name"     => $transport_details['0']['st_org_name'],
							"st_display_name" => $transport_details['0']['st_display_name'],
							"st_email"        => $transport_details['0']['st_email'],
							"st_add_comments" => $transport_details['0']['st_add_comments'],
							"co_user_id"      => $transport_details['0']['in_user_id'],
							"st_org_code"      => $transport_details['0']['st_org_code'],
						  );
		$this->join_transport_email($user_driver_email,"109",$name_arr,$legs_array);
		if($transport_details[0]['in_status']==2)
		{	
			$this->send_transport_confirm_email($transport_details);
		}	
		
	}
	
	
	function delete_routing_legs($transport_details,$user_id)
	{
		$get_leg_details = $this->orgtrasnportation_model->get_all_legs();
		$total_miles_removed = 0;
		$legs_array = array();
		$user_driver_email = array();
		$user_driver_email[] = array("user_id" => $transport_details['0']['in_user_id'],
									 "user_email"	=> $transport_details['0']['st_email'],
									 "display_name" => $transport_details['0']['st_display_name']
									);
		foreach($get_leg_details as $key=>$value)
		{
			$leg_id = $value['in_transportation_leg_id'];	
			$user_legs = $this->orgtrasnportation_model->get_leg_details($leg_id);
			$this->orgtrasnportation_model->delete_user_legs($leg_id);	
			if(!empty($user_legs))
			{
						$origin1 		= ($user_legs['pick_street'] ? $user_legs['pick_street'] . ", " : "") . ($user_legs['pick_city'] ? $user_legs['pick_city'] . ", " : "") . ($user_legs['pick_state'] ? $user_legs['pick_state'] . ", " : "") . ($user_legs['pick_zip'] ? $user_legs['pick_zip'] . " " : "") ;
                        $destinations1 	= ($user_legs['drop_street'] ? $user_legs['drop_street'] . ", " : "") . ($user_legs['drop_city'] ? $user_legs['drop_city'] . ", " : "") . ($user_legs['drop_state'] ? $user_legs['drop_state'] . ", " : "") . ($user_legs['drop_zip'] ? $user_legs['drop_zip'] . " " : "") ;
	
						if($user_legs['pick_lat']!='' && $user_legs['pick_lng']!='')
						{
							$origin 		= $user_legs['pick_lat'].",".$user_legs['pick_lng'];
						}
						else
						{
							$origin 		= ($user_legs['pick_street'] ? $user_legs['pick_street'].",":"").($user_legs['pick_city']? $user_legs['pick_city'].",":"").($user_legs['pick_state'] ? $user_legs['pick_state'].",":"").($user_legs['pick_zip'] ? $user_legs['pick_zip'].",":"").($user_legs['pick_country'] ? $user_legs['pick_country']:"");
						}
						if($user_legs['drop_lat']!='' && $user_legs['drop_lng']!='')
						{
							$destinations 		= $user_legs['drop_lat'].",".$user_legs['drop_lng'];
						}
						else
						{
							$destinations 	= ($user_legs['drop_street'] ? $user_legs['drop_street'].",":"").($user_legs['drop_city']? $user_legs['drop_city'].",":"").($user_legs['drop_state'] ? $user_legs['drop_state'].",":"").($user_legs['drop_zip'] ? $user_legs['drop_zip'].",":"").($user_legs['drop_country'] ? $user_legs['drop_country']:"");
						}
						$total_miles 	= $this->orgtrasnportation_model->get_route_miles(urlencode($origin),urlencode($destinations));
						$total_miles  	= $total_miles['distance'];	
						$total_miles_removed = $total_miles_removed + $total_miles;	
						$this->orgtrasnportation_model->update_distance($total_miles);
					
						
					
						$legs_array[] = array("target_date"   => $target_date,
													  "leg_origin"      => $origin1,
													  "leg_destination" => $destinations1,
													  );			 					
						
			
			}
			$link_name 	= $this->common_function->get_filtered_name($this->session->userdata('user_name'));
			$url_link 	= "##base_url##user-".$this->session->userdata('userid')."-".$link_name."/";
			$notification_message = '<div class="timeline-body border">
							<h2 class="last"><span><img alt="" src="##user_image##"></span><a class="profile" href="'.$url_link.'">'.$this->session->userdata('user_name').'</a> left transportation.</h2>
							<div class="timeline-content">
									<p class="text17">'.date("l, M",strtotime($transport_details[0]['dt_target'])).' <strong>'.date(" d",strtotime($transport_details[0]['dt_target'])).'</strong></p>
									<div class="w175"><p><strong>From Location</strong><br>'.$transport_details[0]['st_from_city'].', '.$transport_details[0]['st_from_state'].', '.$transport_details[0]['st_from_zip'].'</p></div>
									<div class="arrow"><img src="##base_url##assets/img/arrow.png" alt=""></div>
									<div class="w175"><p><strong>To Location</strong><br>'.$transport_details[0]['st_to_city'].', '.$transport_details[0]['st_to_state'].', '.$transport_details[0]['st_to_zip'].'</p></div>
									<div class="clearfix"></div>
							  </div>
							</div>';							
			$arr_notification = array(	"in_organization_id"	=> $this->session->userdata('org_id'),
										"in_transportation_id"	=> $this->session->userdata('transport_id'),
										"in_transport_leg_id"=>$leg_id,
										"in_user_id"			=> $this->session->userdata('userid'),
										"in_type"				=> 11,
										"in_modified_by"		=> $this->session->userdata('userid'),
										"dt_created"			=> date("Y-m-d H:i:s"),
										"in_deleted"			=> "0"
									  );
			$notification_id 		= $this->common_model->insert_data("tbl_notification",$arr_notification);
		}
		if(isset($transport_details['0']['in_tot_distance']) && $transport_details['0']['in_tot_distance'] > 0  && isset($transport_details['0']['in_distance_covered']) && $transport_details['0']['in_distance_covered'] > 0)
		{
							//$percent = number_format(($transport_details['0']['in_distance_covered']*100)/$transport_details['0']['in_tot_distance'],2,".","");
							//$percent = ($percent>=100)?100:$percent;
					$totol_remaining = $transport_details['0']['in_distance_covered'] - $total_miles_removed;
					if($totol_remaining > 0)
					{
						$percent = number_format(($totol_remaining*100)/$transport_details['0']['in_tot_distance'],2,".","");
						$percent = ($percent>=100)?100:$percent;
					} else {
						$percent = 0;
					}
		}
		else
		{
							$percent = 0;
		}
						
		$leg_data  = $this->orgtrasnportation_model->get_leg_data($this->session->userdata('transport_id'));
		$filled_legs_count 	= $this->common_function->get_filled_legs_count($this->session->userdata('transport_id'));
		$non_doobert_filled_legs_count 	= $this->common_model->get_non_doobert_filled_legs_count($this->session->userdata('transport_id'));	
		$cover_leg = 0;
		$cover_leg = $filled_legs_count+$non_doobert_filled_legs_count;
		$name_arr = array(    "name"		  => $this->session->userdata('user_name').' '.$this->session->userdata('last_name'),	
							"transport_id" 	  => $this->session->userdata('transport_id'),
						    "percent" 		  => $percent,
							"total_leg"	      => ($leg_data['cnt'] ? $leg_data['cnt'] : 0),
							"cover_leg"       => $cover_leg,
							"st_org_name"     => $transport_details['0']['st_org_name'],
							"st_display_name" => $transport_details['0']['st_display_name'],
							"st_email"        => $transport_details['0']['st_email'],
							"st_add_comments" => $transport_details['0']['st_add_comments'],
							"co_user_id"      => $transport_details['0']['in_user_id'],
							"st_org_code"     => $transport_details['0']['st_org_code'],
						  );
		$this->join_transport_email($user_driver_email,"109",$name_arr,$legs_array);
		if($transport_details[0]['in_status']==2)
		{	
			$this->send_transport_confirm_email($transport_details);
		}		
	}

	function join_transport_email($all_email,$email_id,$transport_details,$legs_array)
	{	
		$this->load->library('email');
		
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{
																			
																			
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
		if(isset($email_details[0]['st_email_body']))
		{
			
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);	
			$templete  	= 	str_replace("##DONATION##",$donation,$templete);
			//$templete	= str_replace("##Pickup_date##",$transport_details['target_date'],$templete);
			$templete	= str_replace("##user_display_name##",$transport_details['name'],$templete);
			
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	= str_replace("##percentage##",$transport_details['percent'],$templete);
			
			$templete	= str_replace("##transport_url##",base_url().'org-transportation-scheduled/'.$this->session->userdata('transport_id'),$templete);
			
			$subject	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$subject);
			//$subject	= str_replace("##Pickup_date##",$transport_details['target_date'],$subject);
			
			$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
						
						
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
			
			
			
			
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}

			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
			}
			
			$additional_info_str = ''; 				
			$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
			
			if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
			{
			$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
			
			$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_details['st_add_comments'].'</p>';
			
			if(isset($transport_files) && !empty($transport_files))
			{
			$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
			foreach($transport_files as $key=>$value)
			{
				$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
			}
			$additional_info_str .='</ul>';
			}
			}
			
			$templete = str_replace("##additional_details##", $additional_info_str, $templete);
			
					
			//$this->email->subject($subject);
			if(isset($transport_details['leg_origin']) && isset($transport_details['leg_destination'])){
				//<b>From</b> ##leg_start## <b>To</b> ##leg_end##
			//$templete =	str_replace("##leg_start##",$transport_details['leg_origin'], $templete);	
			//$templete =	str_replace("##leg_end##",$transport_details['leg_destination'], $templete);
			}
			if(count($legs_array)>0)
			{
				$html_content = '';
				foreach($legs_array as $key=>$value)
				{
					if(isset($value['leg_origin']) && isset($value['leg_destination']))
					{	
						$html_content .="<b>From</b> ".$value['leg_origin']."<b>To</b> ".$value['leg_destination']."<br>";
					}	
				}
				$templete =	str_replace("##leg_details##",$html_content, $templete);
			}	
			if(isset($transport_details['total_leg']) && isset($transport_details['cover_leg']))
			{
				$templete =	str_replace("##total_legs##",$transport_details['total_leg'], $templete);	
				$templete =	str_replace("##cover_legs##",$transport_details['cover_leg'], $templete);
			}
			
			$user_detail_array = array();
			if(isset($all_email) && !empty($all_email))
			{
				$inc_val = 0;
				foreach($all_email as $key=>$values)
				{
					$templete2 = str_replace("##transport_coordinator##",$values['display_name'],$templete);
					$strMail = $templete2;
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					
					$user_to_id = $this->common_model->get_user_id_by_email($to);
					
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($values['user_id']).'/'.$this->common_function->encode_base64($values['user_email']),$message);
					
					$send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_details[0]['in_email_id'];
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
					
					$inc_val++;
				}
				
				
					$email_type = "109"; 
					$email_type_detail = "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
				
		}
	}	
	
		function send_transport_confirm_email($transport_details)
		{
					
				$user_driver_email = $this->orgtrasnportation_model->get_trans_legs_join_user("null");
				$partcipant_emails = array();
				$partcipant_emails[] = array("user_email" => $transport_details['0']['st_email'],
                    "display_name" => $transport_details['0']['st_display_name']
                );
				
				if(isset($user_driver_email) && !empty($user_driver_email))
				{
					foreach($user_driver_email as $driver_data)
					{
						if(isset($driver_data['leg_participant_details']) && !empty($driver_data['leg_participant_details']))
						{
							foreach($driver_data['leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['user_email'],
															 "display_name" => $part_val['st_display_name']
															);
							}						
							
						}
						if(isset($driver_data['non_doobert_leg_participant_details']) && !empty($driver_data['non_doobert_leg_participant_details']))
						{
							foreach($driver_data['non_doobert_leg_participant_details'] as $part_val)
							{
								//echo '<pre/>'; print_r($part_val);
								$partcipant_emails[] = array("user_email" => $part_val['st_email'],
															 "display_name" => $part_val['st_name']
															);
							}
						}
					}
				}
				
				$transport_monitors = $this->orgtrasnportation_model->get_all_transport_monitors();
				if(isset($transport_monitors) && !empty($transport_monitors))
				{
					foreach($transport_monitors as $trans_mon)
					{
						$partcipant_emails[] = array("user_email" => $trans_mon['st_email'],
													 "display_name" => $trans_mon['st_display_name']
													);
					}
				}							
				//echo '<pre/>';print_r($partcipant_emails);exit;		
				
				$target_date = @date("l, M d",strtotime(@$transport_details['0']['dt_target']));	
				$dt_pickup_date = @date("l, M d", strtotime(@$transport_details['0']['dt_pickup_date']));	
				$name_arr = array("target_date"	=> $target_date,
								  "dt_pickup_date" => $dt_pickup_date,	
								  "name"		=> $transport_details['0']['st_display_name'],
								  "st_org_name" => $transport_details['0']['st_org_name'],
								  "st_display_name" => $transport_details['0']['st_display_name'],
								  "st_email" => $transport_details['0']['st_email'],
								  "st_org_code" => $transport_details['0']['st_org_code'],
								 );														
				$this->transport_email($partcipant_emails,"110",$name_arr);
		}
	
	function transport_email($all_email,$email_id,$transport_details)
	{													
		$this->load->library('email');
		$transport_url = '';
		$transport_url = 'org-confirm-transport/';
		$email_details = $this->common_model->get_email_containt($email_id);
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{								
																			
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
		if(isset($email_details[0]['st_email_body']))
		{
			$transport_data = $this->orgtrasnportation_model->get_transport_details($this->session->userdata('transport_id'));
			
			$orgcode = ($transport_details['st_org_code'] != '')? '#'.$transport_details['st_org_code'] : '#DBT';
			
			
			$templete 	= $email_details[0]['st_email_body'];
			$subject 	= $email_details[0]['st_email_subject'];
			$templete  	= str_replace("##url##",$this->config->item('base_url'),$templete);		
			$templete 	= str_replace("##Pickup_date##", $transport_details['dt_pickup_date'], $templete);
			$templete 	= str_replace("##Dropoff_date##", $transport_details['target_date'], $templete);
			$templete	= str_replace("##transport_coordinator##",$transport_details['name'],$templete);
			$templete	= str_replace("##transport_id##",$orgcode.$this->session->userdata('transport_id'),$templete);
			$templete	= str_replace("##transport_url##",base_url().$transport_url.$this->session->userdata('transport_id'),$templete);
			$templete  	= str_replace("##DONATION##",$donation,$templete);
			if(!empty($transport_details['st_org_name']) && isset($transport_details['st_org_name']))
			{	
				$templete = str_replace("##organization_name##",$transport_details['st_org_name'],$templete);
			} else {
				$templete = str_replace("##organization_name##"," ",$templete);
			}
			
			if(!empty($transport_details['st_display_name']) && isset($transport_details['st_display_name']))
			{	
				$templete = str_replace("##coordinator_details##",$transport_details['st_display_name'].' ('.$transport_details['st_email'].')',$templete);
				
				$templete = str_replace("##coordinator_email##",$transport_details['st_email'],$templete);
			} else {
				$templete = str_replace("##coordinator_details##"," ",$templete);
				$templete = str_replace("##coordinator_email##"," ",$templete);
			}	
			
                

                $co_str = '';
                $co_str .= '<table width="100%" border="0" cellspacing="0" cellpadding="0">
				<tr>
					<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; border-right:1px solid #e3e3e3;">Transport Coordinator</td>
					<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">Pick Up Location</td>
					<td style="font:bold 14px Arial, Helvetica, sans-serif;color:#575757; background-color:#f5f5f1; padding:10px; text-align:left; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2;">Drop Off Location</td>
				</tr>';

                $co_str .= '<tr>';
                
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">' . $transport_data[0]['st_display_name'] . '<br>Email: <a href="mailto:'.$transport_data[0]['st_email'].'" style="color:#0073b5;">' . $transport_data[0]['st_email'] . '</a><br>Cell: ' . $transport_data[0]['st_primary_phone'] . '</td>';
				
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;border-right:1px solid #e3e3e3;">' . ($transport_data[0]['st_from_street'] ? $transport_data[0]['st_from_street'] . ", " : "") . ($transport_data[0]['st_from_city'] ? $transport_data[0]['st_from_city'] . ", " : "") . ($transport_data[0]['st_from_state'] ? $transport_data[0]['st_from_state'] : "") . ($transport_data[0]['st_from_zip'] ? ", " . $transport_data[0]['st_from_zip'] : "") . '<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_pickup_date'])) . '</em></td>';
				
				$co_str .= '<td valign="top" style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:7px 11px; border-bottom:1px solid #e2e2e2;">' . ($transport_data[0]['st_to_street'] ? $transport_data[0]['st_to_street'] . ", " : "") . ($transport_data[0]['st_to_city'] ? $transport_data[0]['st_to_city'] . ", " : "") . ($transport_data[0]['st_to_state'] ? $transport_data[0]['st_to_state'] : "") . ($transport_data[0]['st_to_zip'] ? ", " . $transport_data[0]['st_to_zip'] : "") . '<br><em>' . date("l, M d Y", strtotime($transport_data[0]['dt_target'])) . '</em></td>';
				
				$co_str .= '</tr>';
                $co_str .= '</table>';

                $templete = str_replace("##co-ordinator_details##", $co_str, $templete);
				
				//print_r($templete);exit;

                $leg_details = $this->orgtrasnportation_model->get_trans_legs_join_user("Null");
				
				$cnt_leg = 0;
				$leg_d = array();
				foreach($leg_details as $leg_keys=>$leg_vals) { 
						$leg_d[$cnt_leg] = $leg_vals;
						$cnt_leg++;
				}
				
				
				
				$leg_details  =  $leg_d;
				
                $volunteer_str = '';
                $volunteer_str .= '<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px;">Volunteered Drivers/Pilots details are as below:</div>';
               
                $i = 0;
                $leg_ids_array = array();
                foreach($leg_details as $leg_key=>$leg_data) { 
				
				$volunteer_str .= '<div style="margin:30px 0px; border-left:4px solid #dbdbdb; padding-left:13px; text-align:left;">';
				
				$start_add = '';
				if ($leg_data['route_type_id'] == '1' || $leg_data['route_type_id'] == '0') {
					$start_add .= ($leg_data['pick_street'] ? $leg_data['pick_street'] . ", " : "") . ($leg_data['pick_city'] ? $leg_data['pick_city'] . ", " : "") . ($leg_data['pick_state'] ? $leg_data['pick_state'] : "") . ($leg_data['pick_zip'] ? ", " . $leg_data['pick_zip'] : "");
				}
				if ($leg_data['route_type_id'] == '2') {
					$start_add .= ($leg_data['st_street'] ? $leg_data['st_street'] . ", " : "") . ($leg_data['st_city'] ? $leg_data['st_city'] . ", " : "") . ($leg_data['st_state'] ? $leg_data['st_state'] : "") . ($leg_data['st_zip'] ? ", " . $leg_data['st_zip'] : "");
				}

				//$start_time = date("d M Y - h:i A", strtotime($leg_data['pick_start_time'])) . " - " . $leg_data['pick_timezone'];
				$start_time = '';
				$leg_starts_time = '';
				if(isset($leg_data['pick_start_time']) && $leg_data['pick_start_time'] != '')
				{
				$start_time = date("l, M d, Y", strtotime($leg_data['pick_start_time']));
				$leg_starts_time = date("h:i A", strtotime($leg_data['pick_start_time']));
				$leg_starts_time .= ' - '.$leg_data['pick_timezone'];
				}
				
				$next_start_time = '';
				if (array_key_exists($leg_key + 1, $leg_details)) {
					if ($leg_details[$leg_key + 1]['route_type_id'] == '1' || $leg_details[$leg_key + 1]['route_type_id'] == '0') {
						$next_start_time = date("h:i A", strtotime($leg_details[$leg_key + 1]['pick_start_time']));
					}
				}
				
				$next_start_time = '';				
				if (array_key_exists($leg_key + 1, $leg_details)) {
						if ($leg_details[$leg_key + 1]['route_type_id'] == '1' || $leg_details[$leg_key + 1]['route_type_id'] == '0') {
							if(isset($leg_details[$leg_key + 1]['pick_start_time']) && $leg_details[$leg_key + 1]['pick_start_time'] != '')
							{				
								$next_start_time = date("h:i A", strtotime($leg_details[$leg_key + 1]['pick_start_time']));
							}
						}					
				}
				
				$prev_start_time = '';	
				if (array_key_exists($leg_key + 1, $leg_details)) {		
					if ($leg_data['route_type_id'] == '2') {
						if(isset($leg_details[$leg_key - 1]['drop_start_time']) && $leg_details[$leg_key - 1]['drop_start_time'] != '')
						{	
							$prev_start_time = date("h:i A", strtotime($leg_details[$leg_key - 1]['drop_start_time']));
						}
					}
				}
				
				$end_add = '';
				if ($leg_data['route_type_id'] == '1' || $leg_data['route_type_id'] == '0') {
					$end_add .= ($leg_data['drop_street'] ? $leg_data['drop_street'] . ", " : "") . ($leg_data['drop_city'] ? $leg_data['drop_city'] . ", " : "") . ($leg_data['drop_state'] ? $leg_data['drop_state'] : "") . ($leg_data['drop_zip'] ? ", " . $leg_data['drop_zip'] : "");
				}
				if ($leg_data['route_type_id'] == '2') {
					$end_add .= ($leg_data['st_street'] ? $leg_data['st_street'] . ", " : "") . ($leg_data['st_city'] ? $leg_data['st_city'] . ", " : "") . ($leg_data['st_state'] ? $leg_data['st_state'] : "") . ($leg_data['st_zip'] ? ", " . $leg_data['st_zip'] : "");
				}

				//$end_time = date("d M Y - h:i A", strtotime($leg_data['drop_start_time'])) . " - " . $leg_data['drop_timezone'];
				$end_time = '';
				$leg_end_time = '';
				if(isset($leg_data['drop_start_time']) && $leg_data['drop_start_time'] != '')
				{
				$end_time = date("l, M d, Y", strtotime($leg_data['drop_start_time']));
				$leg_end_time = date("h:i A", strtotime($leg_data['drop_start_time']));
				$leg_end_time .= ' - '.$leg_data['drop_timezone'];
				}
				
				$meeting_loc = (isset($leg_data['st_meeting_location']) && $leg_data['st_meeting_location'] != '') ? stripslashes($leg_data['st_meeting_location']) : '-';
				
				$overnight = '';
				if($leg_data['route_type_id'] == '2')
				{
					$overnight = ' (OVERNIGHT)';
					$volunteer_str .= '<p style="font:bold 14px/22px Arial, Helvetica, sans-serif;color:#ee6d35; text-transform:uppercase; padding:0 0 4px 0; margin:0px;"><span style="font:bold 15px Arial, Helvetica, sans-serif;color:#ee6d35;">Leg '.($i+1).'</span>'.$overnight.': ' . $start_add . '</p>';
				}
				else{
				$volunteer_str .= '<p style="font:bold 14px/22px Arial, Helvetica, sans-serif;color:#ee6d35; text-transform:uppercase; padding:0 0 4px 0; margin:0px;"><span style="font:bold 15px Arial, Helvetica, sans-serif;color:#ee6d35;">Leg '.($i+1).'</span>: ' . $start_add . '  <span style="color:#575757;">To:</span> ' . $end_add . '</p>';
				}
				
				if($leg_data['route_type_id'] != '2')
				{
                 $volunteer_str .= '<p style="font:15px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">'.$start_time.'</span>  ('.$leg_starts_time.' <strong>To </strong>'.$leg_end_time.')</p>';
				}
				
                    foreach ($leg_data['leg_participant_details'] as $key_user => $participants_data) {

                        $vehicle_details = $this->common_function->get_vehicle_detail_by_id($participants_data['leg_vehicle_id']);
                        $vehicle_data = '';
                        if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_color'] != '') {
                            $vehicle_data .= ucfirst($vehicle_details[0]['st_vehicle_color']) . ', ';
                        }
                        if (isset($vehicle_details) && isset($st_vehicle_type[0]) && $vehicle_details[0]['st_vehicle_type'] != '') {
                            $vehicle_data .= $vehicle_details[0]['st_vehicle_type'] . ', ';
                        }
                        if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_license_plate'] != '') {
                            $vehicle_data .= "Plate: ".$vehicle_details[0]['st_vehicle_license_plate'] . ", ";
                        }
                        if (isset($vehicle_details) && isset($vehicle_details[0]) && $vehicle_details[0]['st_vehicle_license_state'] != '') {
                            $vehicle_data .= "State: ".$vehicle_details[0]['st_vehicle_license_state'];
                        }
						
						$vehicle_data = rtrim(trim($vehicle_data), ',');

                        $volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_display_name'] . '</span>(Email: <a href="mailto:'.$participants_data['user_email'].'" style="text-decoration:underline;">' . $participants_data['user_email'] . '</a> | Cell: ' . $participants_data['st_primary_phone'] . ')</p>';
                        
						$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Vehicle:</span> ' . $vehicle_data . '</p>';
                    }


                    if (isset($leg_data['non_doobert_leg_participant_details']) && !empty($leg_data['non_doobert_leg_participant_details'])) {
                        foreach ($leg_data['non_doobert_leg_participant_details'] as $key_user => $participants_data) {

                            $vehicle_data = '';
                            if (isset($participants_data['st_vehicle_color']) && $participants_data['st_vehicle_color'] != '') {
                                $vehicle_data .= ucfirst($participants_data['st_vehicle_color']) . ', ';
                            }
                            if (isset($participants_data['st_vehicle_type']) && $participants_data['st_vehicle_type'] != '') {
                                $vehicle_data .= $participants_data['st_vehicle_type']. ', ';
                            }
                            if (isset($participants_data['st_license_plate']) && $participants_data['st_license_plate'] != '') {
                                $vehicle_data .= "Plate: ".$participants_data['st_license_plate'] . ", ";
                            }
                            if (isset($participants_data['st_license_state']) && $participants_data['st_license_state'] != '') {
                                $vehicle_data .= "State: ".$participants_data['st_license_state'];
                            }
							
							$vehicle_data = rtrim(trim($vehicle_data), ',');

                            
                            $volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">' . $participants_data['st_name'] . '</span>(Email: <a href="mailto:'.$participants_data['st_email'].'" style="text-decoration:underline;">' . $participants_data['st_email'] . '</a> | Cell: ' . $participants_data['st_phone'] . ')</p>';
                        
							$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757; padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Vehicle:</span> ' . $vehicle_data . '</p>';
                        }
                    }
					
                if($leg_data['route_type_id'] == '2')
				{
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;">'.$leg_data['st_meeting_location'].'</p>';
					$volunteer_str .= '</div>';
					
					$volunteer_str .= '<p style="background-color:#f5f5f1; font:bold 14px Arial, Helvetica, sans-serif;color:#575757; padding:10px 18px; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; text-align:left;">LEG #'.($i+1).' AND LEG #'.($i+2).' MEETING/TRANSFER TIME: '.$prev_start_time.' - '.$next_start_time.'</p>';
				
				}else{
					$volunteer_str .= '<p style="font:14px/22px Arial, Helvetica, sans-serif;color:#575757;padding:0 0 4px 0; margin:0px;"><span style="font-weight:bold; text-transform:uppercase;">Meeting Location:</span> '.$meeting_loc.'</p>';
					
					$volunteer_str .= '</div>';
					
					if(isset($next_start_time) && $next_start_time != '')
					{	
						$volunteer_str .= '<p style="background-color:#f5f5f1; font:bold 14px Arial, Helvetica, sans-serif;color:#575757; padding:10px 18px; border-top:1px solid #e2e2e2; border-bottom:1px solid #e2e2e2; text-align:left;">LEG #'.($i+1).' AND LEG #'.($i+2).' MEETING/TRANSFER TIME: '.$leg_end_time.' - '.$next_start_time.'</p>';
					}
				}
				
				
				$i++;
				}
				
				if ($i == 0) {
                    $volunteer_str .= '';
                }

                $templete = str_replace("##volunteered_details##", $volunteer_str, $templete);

                $animals_cnt = 0;
                $transport_animals = $this->orgtrasnportation_model->get_transport_animals($this->session->userdata('transport_id'));

                if (isset($transport_animals) && !empty($transport_animals)) {
                    $animals_cnt = count($transport_animals);
                }

                $animal_str = '';
				
				//$animal_str .= '<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0px 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:23px; text-align:left;">Animal(s) In this transport';
				
				if (!empty($transport_animals) && count($transport_animals)>3) {
					
					$animal_str .= '<a href="'.base_url().$transport_url.$this->session->userdata('transport_id').'" style="float:right;font:bold 14px Arial, Helvetica, sans-serif;color:#fff;text-decoration:underline; text-decoration: underline !important;  line-height: 40px;">View More</a>';
				}
				
				 $animal_str .= '</div>';
				
				
				
                $animal_image = '';

                //Animal_details
                $org_image = $this->orgtrasnportation_model->get_org_image($this->session->userdata('org_id'));

                $i = 0;
                $animal_str .= '<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>';
                if (!empty($transport_animals)) {	?>
					<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0 0 10px;">
					<?php
                    foreach ($transport_animals as $rows) {
                        if ($i > 2) {
                            break; 
                        }
						
						
						$rvd	=	($rows['st_rabies_vaccine'] == 'Y')?'Yes':($rows['st_rabies_vaccine']=='N'?'No':'Unknown');
								if(isset($rows['dt_rabiesvac_date']) && $rows['dt_rabiesvac_date']!='' && $rows['dt_rabiesvac_date']!='0000-00-00' && $rows['dt_rabiesvac_date']!='1969-31-12')
								{
									$rvdt=	date('F j, Y',strtotime($rows['dt_rabiesvac_date']));
									$rvd= $rvd.' - '.$rvdt;
								}
								
								
								$cvidet='';
								$cvidet	=	($rows['st_cvi'] == 'Y')?'Yes':($rows['st_cvi']=='N'?'No':'Unknown');
								
								if(isset($rows['dt_cvi']) && $rows['dt_cvi']!='' && $rows['dt_cvi']!='0000-00-00' && $rows['dt_cvi']!='1969-31-12')
								{
									$cvidt=	date('F j, Y',strtotime($rows['dt_cvi']));
									$cvidet= $cvidet.' - '.$cvidt;
								}
								
								$crates	=	($rows['st_crates_well'] == 'Y')?'Yes':($rows['st_crates_well']=='N'?'No':'Unknown');							
								$flight	=	($rows['st_flight_risk'] == 'Y')?'Yes':($rows['st_flight_risk']=='N'?'No':'Unknown');								
								$weight='';
								if($rows['in_weight'])
								{ 
								if($rows['in_weight']=='U'){$weight ='Unknown';}
								else if($rows['in_weight'] == 0){$weight ='';}
								else { $weight = $rows['in_weight']; }
								}
								
								
								$travel_with_values = '';
								$travel_with = explode(',',$rows['st_travel_with']);
								foreach($travel_with as $row) {
									$travel_with_values .= $this->common_function->travel_with[$row].', ';
								}
								$travelwith	=	substr($travel_with_values,0,strlen($travel_with_values)-2);
								$enterage='';
					 			$enterage	=	($rows['in_enter_age']!='')?' ('.$rows['in_enter_age'].')':''; 
								
								
                        $animal_url = base_url() . 'animal-' . $rows['in_animal_id'] . '-' . $this->common_function->get_filtered_name($rows['st_animal_name']);

                        if ($rows['st_file_type'] == 'P' && $rows['st_file_name'] != '' && file_exists($this->config->item('upload') . "animal_images/315x315/" . $rows['st_file_name'])) {
                            $animal_image = base_url() . 'upload/animal_images/315x315/' . $rows['st_file_name'];
                        } else {
                            $animal_image = base_url() . 'upload/org_doc/thumb/' . $org_image;
                        }

                        //$animal_str .= '<td><div style="width:200px; background-color:#f5f9f8; border:1px solid #d6d4d4; text-align:center; display:inline-block; margin:0 20px 0 0;"><img alt="'.$rows['st_animal_name'].'" title="'.$rows['st_animal_name'].'" src="'.$animal_image.'"  style="border:none; max-width:100%; height:auto;" /><br>										<span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; padding-bottom:10px; padding-top:13px; display:inline-block">'.$rows['st_animal_name'].'</span><br><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; padding:0 0 13px 0; display:inline-block;">'.$rows['st_animal_breed_name'].' '.$rows['st_animal_type_name'].'</span>										</div></td><div style="float:left;margin-top:-98px"><table><tr><td><strong>Animal Type:</strong></td><td>'.$rows['st_animal_type_name'].'</td></tr><tr><td><strong>Rabies Vaccine:</strong></td><td>'.$rvd.'</td></tr><tr><td><strong>Health Cert or CVI:</strong></td><td>'.$cvidet.'</td></tr><tr><td><strong>Neutered/Spayed:</strong></td><td>'.@$this->common_function->neutered_spayed[$rows['in_neutered_id']].'</td></tr><tr><td><strong>Primary Breed:</strong></td><td>'.$rows['st_animal_breed_name'].'</td></tr><tr><td><strong>Weight:</strong></td><td>'.$weight.'</td></tr><tr><td><strong>Age:</strong></td><td>'.@$this->common_function->age[$rows['in_age']].$enterage.'</td></tr><tr><td><strong>Crates Well:</strong></td><td>'.$crates.'</td></tr><tr><td><strong>Flight Risk:</strong></td><td>'.$flight.'</td></tr><tr><td><strong>Travelling With:</strong></td><td>'.$travelwith.'</td></tr>									</table></div><br clear="all"></div>';
						
						
						$animal_str .= '<div style="display:inline-block; margin-bottom:20px; text-align: center; vertical-align:top;"><a href="'.$animal_url.'" style="padding: 6px; margin: 0 10px 10px 0; border: 1px solid #e1e1e1; background-color: #f4f4f4; position: relative; display: block; height: 78px; width:87px;"><img src="'.$animal_image.'" alt="img5" style="margin: auto; max-width:100%; max-height:100%;"/></a><span style="font:bold 17px Arial, Helvetica, sans-serif;color:#444; display:block">'.$rows['st_animal_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#666; display:block;">'.$rows['st_animal_breed_name'].'</span><span style="font:italic 14px Arial, Helvetica, sans-serif;color:#444; display:block;">'.$rows['st_animal_type_name'].'</span></div>';

                        $i++;
                    }
                }
				
				$animal_str .= '<div style="clear:both;margin: 0px;padding: 0px;"></div></p>';		
				
                $templete = str_replace("##animal_details##", $animal_str, $templete);
				
				$additional_info_str = ''; 				
				$transport_files = $this->orgtrasnportation_model->get_transport_files($this->session->userdata('transport_id'));
				
				if((isset($transport_details['st_add_comments']) && $transport_details['st_add_comments'] != '') || (isset($transport_files) && !empty($transport_files)))
				{
				$additional_info_str .='<div style="background-color:#383838; font:bold 16px Arial, Helvetica, sans-serif;color:#fff; padding:0 18px; line-height:40px; text-transform:uppercase; margin-top:30px; margin-bottom:10px;">Additional Information:</div>';
				
				$additional_info_str .='<p style="font:14px/20px Arial, Helvetica, sans-serif;color:#575757;margin:0;padding:0;">'.$transport_data[0]['st_add_comments'].'</p>';
				
				if(isset($transport_files) && !empty($transport_files))
				{
				$additional_info_str .='<ul style="margin:15px 0px 0px 0px; padding:0px;">';
				foreach($transport_files as $key=>$value)
				{
					$additional_info_str .='<li style="font:14px/20px Arial, Helvetica, sans-serif; color:#575757; list-style-type:none; text-decoration:none;"><a href="'.base_url().'org_transportation/generate_download/'.$this->common_function->encode_base64($value['st_file_name']).'" style="color:#0073b5; color: #0073b5; padding: 2px 8px; border: 1px solid #D6D4D4; background: #F5F9F8; margin-bottom: 5px; display: inline-block;"><img alt="" title="" src="'.base_url().'assets/img/icon-download.png"  style="border:none; max-width:100%; height:auto;" /> '.$value['st_file_name'].'</a></li>';					
				}
				$additional_info_str .='</ul>';
				}
				}
				
				$templete = str_replace("##additional_details##", $additional_info_str, $templete);
				
				$fbtransportshare_image = base_url().'upload/fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg?'.rand();
						if(file_exists($this->config->item('upload') . 'fb_transport_share/transportfbimage_DBT'.$this->session->userdata('transport_id').'.jpg'))
						{
							$fbtransportshare = '<img alt="Animal Rescue Relay Transport" border="0" src="'.$fbtransportshare_image.'" title="Animal Rescue Relay Transport" />';
						} else {
							$fbtransportshare = '<p>Animal Rescue Relay Transport</p>';
						}
						
						
						$templete	=	str_replace("##fbtransportshare##",$fbtransportshare,$templete);
				
				
			
			$subject	= str_replace("##transport##",$orgcode.$this->session->userdata('transport_id'),$subject);
			$subject 	= str_replace("##Pickup_date##", $transport_details['dt_pickup_date'], $subject);
			$subject 	= str_replace("##Dropoff_date##", $transport_details['target_date'], $subject);
			$user_detail_array = array();
			if(isset($all_email) && !empty($all_email))
			{
				$inc_val = 0;
				foreach($all_email as $key=>$values)
				{
					$templete2 = str_replace("##user_display_name##",$values['display_name'],$templete);
					$strMail = $templete2;
					
					$message  	= 	$strMail;	
					$to			=	$values['user_email'];
					$subject	= 	$subject;
					$category  =    "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
					$user_to_id = $this->common_model->get_user_id_by_email($values['user_email']);
					$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($to),$message);		
					
                    $send_email = 0;							
					$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
					if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
					{
						$send_email = 0;										
					}
					
					$email_template_id = $email_id;
					$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
					if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
					{
						$send_email = 1;
					}	
					
					if($send_email == 0)
					{
						$transport_setting = $this->common_model->user_notification_setting($user_to_id);
						if(isset($transport_setting) && isset($transport_setting['flg_immediate_transport']) && $transport_setting['flg_immediate_transport'] == '1')
						{
							$send_email = 1;
						}								
					}
					
					if($send_email == '1')
					{
					   
					// LCR Banner added				
								$q1			=	$this->common_model->get_affiliate_detail('110','C');	
							    $q2			=	$this->common_model->get_affiliate_detail('110','L');	
							    $q3			=	$this->common_model->get_affiliate_detail('110','R');
											   		
									if(isset($q1) && !empty($q1)){	
										
										foreach($q1 as $qr)
										{
											 
											  if(!empty($qr['st_code']))
											{    
												    $affiliate_content	= '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p>'.$qr['st_code'];
											}
											elseif(!empty($qr['st_image']))
											{
													
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name'];										
													$affiliate_content	    = '<p style="font-family:Arial, Helvetica, sans-serif; font-size:13px; color:#555555; text-align:left; padding:10px; background-color:#fff; line-height:15px; border-bottom:3px solid #ecebeb;">Do you recognize the company below? They will donate a percentage of each sale to help Doobert remain free so we can keep supporting you. Shopping via this link does not increase your prices, but it helps support Doobert operations. Thank you.</p><a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';					
												  
											}
											else 
											{
												   $affiliate_content='';								 
											}
											  
												
										}
									}			
									   
								   else
								   {
									  $affiliate_content='';
								   }
				
						//LEFT BANNER
									if(isset($q2) && !empty($q2)){					   		
										foreach($q2 as $qr)
										{								 
											 if(!empty($qr['st_code']))
											{    
												   $leftbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{
													
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];		
													$imgtitle   =   $qr['st_banner_name'];
													$leftbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px; margin-right: 20px;"/></a>';
												  
											}
											else
											{
												   $leftbanner='';								 
											} 	
										}
									}
									else
									{
										   $leftbanner='';								 
									}
									
						//RIGHT BANNER
									if(isset($q3) && !empty($q3)){					   		
										foreach($q3 as $qr)
										{
											 
											if(!empty($qr['st_code']))
											{    
												   $rightbanner	= $qr['st_code'];
												  
											}
											elseif(!empty($qr['st_image']))
											{	
													$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
													$imgtitle   =   $qr['st_banner_name'];
													$rightbanner	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top:20px; margin-left: 20px;" /></a>';	
												  
											} 
											else
											{
												   $rightbanner='';								 
											}								  
												
										}
									}
									else
									{
										   $rightbanner='';								 
									}
				
				
						$message = str_replace("##affiliate_content##",$affiliate_content,$message);	
						$message = str_replace("##leftbanner##",$leftbanner,$message);
						$message = str_replace("##rightbanner##",$rightbanner,$message);
				// LCR Banner added			
					
					
						$this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
					}
					
					$user_detail_array[$inc_val]['name'] =  $values['display_name'];
					$user_detail_array[$inc_val]['email_address'] =  $values['user_email'];
							
					$inc_val++;
				}
				
				
				$email_type = "107"; 
				$email_type_detail =  "DBT".$this->session->userdata('transport_id')." - ".$email_details[0]['st_category'];
				
				
				$mail_checksum_array = array("in_transport_id"=>$this->session->userdata('transport_id'),
									"in_email_type"=>$email_type,
									"st_email_type"=>$email_type_detail,
									"dt_created"=>date("Y-m-d H:i:s"),
									"st_user_details"=>serialize($user_detail_array));
			
				$insert_id = $this->common_model->insert_transport_email_checksum($mail_checksum_array);
			}
		}
	
	}

	
	
	function update_user_foster_profile_setting()
	{
		$foster_result = $this->user_model->update_user_foster_profile_setting();
		//echo '<pre/>'; print_r($foster_result);exit;
		
		if(isset($foster_result) && !empty($foster_result))
		{
			foreach($foster_result as $fost_val)
			{
				 $this->user_model->add_user_foster_profile_setting($fost_val);
			}
		}
		
	}

	public function dashboard($sort=false,$order=false,$limit=false) {
     	//echo $this->session->userdata('userid');exit;
		if (!$this->session->userdata('userid')) {
		  redirect($this->config->item('base_url'));
        }
	
		$org_status = $this->user_model->check_organization_status($this->session->userdata('userid'));
		if(count($org_status)>0)
		{
			if($org_status['st_org_complete']!=0)
			{
				$this->session->set_userdata('orgstep',$org_status['st_org_complete']);
				$this->session->set_userdata('orgId',$org_status['in_organization_id']);
				$this->session->set_userdata('popup_display',1);
				$redirect = $this->config->item('base_url') . "org-signup";
				redirect($redirect);
			} else {
				$this->session->set_userdata('orgId',$org_status['in_organization_id']);
				$this->session->set_userdata('popup_display',1);
				$redirect = $this->config->item('base_url') . "org-signup-thankyou";
				$this->session->set_userdata('popup_display',1);
				redirect($redirect);
			}	
		}
			$user_profile_status = $this->user_model->check_userprofile_status($this->session->userdata('userid'));
			if(count($user_profile_status)>0)
			{
				$this->session->set_userdata('registerstep','1');
				if($user_profile_status['hurricane_harvey_reg'] == 1)
				{
					$redirect = $this->config->item('base_url') . "harvey-volunteer-profile";	
				} else {
					$redirect = $this->config->item('base_url') . "volunteer-profile";
				}
					redirect($redirect);
			}
		
		if($this->input->post('dashboard_view_type'))
		{
			$this->session->unset_userdata('dashboard_view_type');
			$this->session->set_userdata('dashboard_view_type',$this->input->post('dashboard_view_type'));
		}
		
		if(!$this->session->userdata('dashboard_view_type'))
		{
			$this->session->set_userdata('dashboard_view_type','N');
		}		
		
		if($this->session->userdata('dashboard_view_type')=='N')
		{
			redirect($this->config->item('base_url').'dashboard_modern/');
		}
			
		/*if(count($this->user_model->check_userprofile_status($this->session->userdata('userid')))>0)
		{
			$this->session->set_userdata('registerstep','1');
			$redirect = $this->config->item('base_url') . "volunteer-profile";
			redirect($redirect);
		}*/	
	 
	   $data = array();
	   $data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		 
		$data['q1']			=	$this->common_model->get_affiliate_detail('D','L',0);	
	   	$data['q2']			=	$this->common_model->get_affiliate_detail('D','R',$data['q1'][0]['id']);
	       
	   
   	   $data['all_trasport'] 		= array();
	   $data['enabled_driver_pilot_status'] = 0;
	   
	   $data['foster_profile_status'] = 0;
	   $data['photographer_profile_status'] = 0;
	   
	   if(((isset($data['profile_details']['st_foster_home']) && $data['profile_details']['st_foster_home']=='Y')))
	   {
	   		$data['foster_profile_status'] = 1;	
	   }
	   if(((isset($data['profile_details']['st_photographer']) && $data['profile_details']['st_photographer']=='Y')))
	   {
	   		$data['photographer_profile_status'] = 1;	
	   }	
	   
	   if((isset($data['profile_details']['st_driver']) && $data['profile_details']['st_driver']=='Y') || (isset($data['profile_details']['st_pilot']) && $data['profile_details']['st_pilot']=='Y') ||  (isset($data['profile_details']['st_airline_emp']) && $data['profile_details']['st_airline_emp']=='Y') )
	   { 
		$data['enabled_driver_pilot_status'] = 1;
		#=============Active Trasport============#
		if(!$sort)
			$sort='trid';
		
		if(!$order)
			$order = 'desc';
		
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';	
		$rec_per_page = 3;	
		
		//$total_record = $this->user_model->get_transport_list_all("1");
		
		//$all_trasport = $this->user_model->get_transport_list("1",$rec_per_page,$limit,$sort,$order);
		
		$transport_record = $this->user_model->get_users_transport_list_data("1",$rec_per_page,$limit,$sort,$order);
		
		//$data['all_trasport']  = $all_trasport;
		
		$total_record = $transport_record['num_rows'];
		
		$data['all_trasport']  = $transport_record['transport_list'];
		
		$config 				  = array();
		$config['base_url'] 	  = base_url().'user/dashboard/';
		$config['base_url']	  	  = $config['base_url'].$sort.'/'.$order.'/';
		$config['total_rows'] 	  = $total_record;
		$config['per_page'] 	  = $rec_per_page;
		$config['cur_page'] 	  = $limit;
		$config['num_links'] 	  = '3';
		$config['first_link'] 	  = FALSE;
		$config['last_link'] 	  = FALSE;
		$config['full_tag_open']  = '<ul class="pagination">';
		
		$config['prev_tag_open']  = "<li class=\"prev\">";
		$config['prev_link']      = "Prev";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open']  = "<li class=\"next\">";
		$config['next_link']      = "Next";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open']  = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']	 =	'<li>';
		$config['num_tag_close'] =	'</li>';		
		$config['display_pages'] = TRUE;  
		$this->load->library('pagination');	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;			
	   
	   }
	   
		$fb_user_email = $this->common_model->get_user_email($this->session->userdata('userid'));
		
		if(empty($fb_user_email['st_email']))
		{
			$this->session->set_flashdata('fb_user_email', 'Your Facebook profile does not contain an email address. Doobert requires an email to notify you for animal rescue activities. Please enter one below.');
			
		}
		
	  
       $this->load->view('dashboard', $data);
    }
	/** Added By Nirav 23-May-2016 **/
	public function update_login_direct_status()
	{
		$userId = $this->session->userdata('userid'); 
		$status = $_POST['status'];
		if($this->user_model->update_login_status($userId,$status) !== FALSE)
		{
			$this->session->set_userdata('login_direct_status',$status); 		
			$result = true;
		}	
		else
			$result = false;
		echo json_encode($result);
		//echo json_encode($userId);
	}
	

	public function sign_up_org()
	{
		//echo "<br> In function.";
		//die();
		$data = array();
        $data['Err_Msg_forgot'] = '';
        $data['Err_Msg_reg'] = '';
        $data['Err_Msg_login'] = '';
        $data['Err_Msg'] = '';
        $data['rem_password'] = get_cookie('pass');
        $data['rem_email'] = get_cookie('user');
        $data['menu_no'] = 'yes';
		
		$auto_login_status = $this->common_model->check_auto_login_status();
		if(isset($auto_login_status) && isset($auto_login_status['in_auto_login_status']) && $auto_login_status['in_auto_login_status'] == '0')
		{
			$msg = isset($auto_login_status['st_disable_msg']) && $auto_login_status['st_disable_msg'] != '' ? $auto_login_status['st_disable_msg'] : '';
			$this->session->set_userdata('login_disable',$msg);
			//redirect($this->config->item('base_url') . 'user/');
			return $this->load->view('user_login',$data);
		}
		
		if ($this->session->userdata('userid')) {
            //redirect($this->config->item('base_url') . "my-profile/");
			redirect($this->config->item('base_url') . "dashboard/");
        } elseif ($this->session->userdata('fb_session')) {
            $fb_session = $this->session->userdata('fb_session');
            if (isset($fb_session) && is_array($fb_session) && count($fb_session) > 0){
                redirect($this->config->item('base_url') . "facebook-login/");
            }
        }
		
		$verificationCode = $this->generate_random_password(15);

        $form_field = array('username' => "",
            'lastname' => "",
            'email' => "",
            'password' => "",
            'rpassword' => "",
            'referred_by' => "",
            'tnc' => "",
            'signup' => "",
            'remember' => "",
            'action' => "",
            'oldertc' => "",
			'organizationname' => "",
			'organizationzip' => "",
        );
        foreach ($form_field as $key => $value) {
            $data['register'][$key] = $value;
        }
        if ($this->input->post('action')) {
            foreach ($form_field as $key => $value) {
                $data['register'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));
            }
			
			$data['register']['email_verification_code'] = $verificationCode;
			
            if ($this->input->post('action') == "registeruser") {
				$this->form_validation->set_rules('organizationname', 'Organization Name', 'trim|required');
                $this->form_validation->set_rules('organizationzip', 'Organization Zip', 'trim|required');
                $this->form_validation->set_rules('username', 'First Name', 'trim|required');
                $this->form_validation->set_rules('lastname', 'Last Name', 'trim|required');
                $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');
                $this->form_validation->set_rules('password', 'Password', 'trim|required|spacecheck|min_length[6]|matches[rpassword]');
                $this->form_validation->set_rules('rpassword', 'Re-type Your Password', 'trim|required');
                $this->form_validation->set_rules('referred_by', 'Person/Organization Name', 'trim');
                $this->form_validation->set_rules('tnc', 'I agree to the Terms of Service and Privacy Policy', 'trim|required');
                $this->form_validation->set_rules('oldertc', ' I am 18 or older and have read and agree to the Terms and Conditions.', 'trim|required');
				$counts = $this->common_model->check_exists("tbl_users", "in_user_id", array("st_email" => $data['register']['email'], "in_deleted" => '0'));
                $Err_Msg = '';
                if ($counts > 0) {
                    $Err_Msg = "Email address already exists.";
                }
                if ($this->form_validation->run() == FALSE || $Err_Msg != '') {
                    $data['Err_Msg_reg'] = validation_errors() . $Err_Msg;
                    //echo "<pre>";print_r($data);die;
                  //  $this->load->view('user_login', $data); 
					//organization_sign_up
					 $this->load->view('organization_sign_up', $data); 
                } else {
					
					if($this->input->post('organizationzip'))
					{	
						$zip_code = $this->input->post('organizationzip');
						$zip_code = str_replace(" ","",$zip_code);
						$_POST['organizationzip'] = strtoupper($zip_code);		
					}
					
                    $browser_details = array();
                    $browser_details["page_referral"] = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
                    $browser_details["ip_address "] = $_SERVER['REMOTE_ADDR'];
                    $browser_details["browser_used"] = $_SERVER['HTTP_USER_AGENT'];

                    $data_array = array("st_display_name" => $data['register']['username'],
                        "st_last_name" => $data['register']['lastname'],
                        "st_email" => $data['register']['email'],
                        "st_password" => md5($data['register']['password']),
                        "st_referred_by" => $data['register']['referred_by'],
                        "dt_created" => date("Y-m-d h:i:s"),
                        "dt_modified" => date("Y-m-d h:i:s"),
                        "in_newsletter" => (($data['register']['signup'] != '') ? "Y" : "N"),
                        "in_public" => "1",
                        "in_status" => "1",
                        "in_age_terms_flag" => "1",
                        "st_browser_info" => @serialize($browser_details),
						"st_email_verification_code" => $verificationCode,
                    );

					$org_name = $data['register']['organizationname'];
					$org_zip  = $data['register']['organizationzip'];
					
                    $inserted_id = $this->user_model->insert_user($data_array);
                    $this->user_model->insert_user_profile(array("in_user_id" => $inserted_id, "in_status" => "0", "dt_created" => date("Y-m-d H:i:s")));
					
					$this->session->set_userdata('userid', $inserted_id);
					 
                    $this->session->set_userdata('user_name', $data['register']['username']);
                    $this->session->set_userdata('last_name', $data['register']['lastname']);
                    $this->session->set_userdata('email', $data['register']['email']);
					//$this->session->set_userdata('org_name',$org_name);
					//$this->session->set_userdata('org_zip', $org_zip);
					$this->session->set_userdata('sign_up_org_name',$org_name);
					$this->session->set_userdata('sign_up_org_zip', $org_zip);
					
					$this->login_details($data['register']);
					$this->email_confirm();
					 
					
					//set coockie
                    if (!isset($_COOKIE['doobert_home'])){
                        setcookie("doobert_home", "doobert_value", 0, "/", ".doobert.com");
                    }
                    //End set coockie

					redirect($this->config->item('base_url') . "rescue-organization/");
					//redirect($this->config->item('base_url') . "rescue-organization");
                }
            }else {
                $this->load->view('organization_sign_up', $data);
            }
        } else {
            $this->load->view('organization_sign_up', $data);
        }
	}
	
	function savesessiondata()
	{
	
	if($this->session->userdata("volunteer")){
		$this->session->unset_userdata('volunteer');
	}	
	if($this->input->post('volunteer') == 1)
	{
		$this->session->set_userdata("volunteer",1);
	}
	
	
	if($this->session->userdata("driver")){
		$this->session->unset_userdata("driver");
	}
	if($this->input->post('driver') ==1 )
	{
		$this->session->set_userdata("driver",1);
	}
	
	if($this->session->userdata("other"))
	{
		$this->session->unset_userdata('other');
	}
	if($this->input->post('other') == 1)
	{
		$this->session->set_userdata("other",1);
	}
	
	if($this->session->userdata("photo"))
	{
		$this->session->unset_userdata('photo');
	}
	if($this->input->post('photo') == 1)
	{
		$this->session->set_userdata("photo",1);
	}
	
	if($this->session->userdata("lostanimal"))
	{
		$this->session->unset_userdata('lostanimal');
	}
	if($this->input->post('lostanimal') == 1)
	{
		$this->session->set_userdata("lostanimal",1);
	}
	
	if($this->session->userdata("foster"))
	{
		$this->session->unset_userdata('foster');
	}
	if($this->input->post('foster') == 1)
	{
		$this->session->set_userdata("foster",1);
	}
		
	return true;
	}
	
	function save_driverinfo()
	{
		// update the user general details.
		if($this->input->post('zip_code')){
			
				$zip_code1 = $this->input->post('zip_code');
				$zip_code1 = str_replace(" ","",$zip_code1);
				$_POST['zip_code'] = strtoupper($zip_code1);		
					
			$address_details	=	$this->common_model->getaddress($this->input->post('zip_code'));
			$userprofile = array('st_driver'=>"Y",
					 "st_city" => isset($address_details['city']) ? $address_details['city'] : '',
                    "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
                    "st_zip" => $this->input->post('zip_code'),
                    "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
					//"st_primary_phone" => $this->input->post('contact'),
					"dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1"
				);
			
			$data['user_profile'] = $this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');
			
			$user_info = array("in_status" => '1');
			$data['user_info'] = $this->user_model->update_user_info($user_info, $this->session->userdata('userid'), 'tbl_users');
			   
			$get_lat_long = $this->common_model->get_lattitude_longitude(trim($this->input->post('zip_code')));

				
			  if (isset($get_lat_long['lat']) && $get_lat_long['lat']!='') 
			  { //&& $get_lat_long['lon']!=''){
                      //  $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
			  }
			  if(isset($get_lat_long['lon']) && $get_lat_long['lon']!='') 
			  {
                        //$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
              }
		// for vehicle info 
			$driverinfo =array(
				'in_user_id'=>$this->session->userdata('userid'),
				'st_driver_availability' =>serialize($this->input->post('transport')),
				'st_zip_vehicle' => $this->input->post('zip_code'),
				'st_vehicle_type' => $this->input->post('vehicle'),
				'in_distance_to_drive' =>$this->input->post('radius'),
				'st_vehicle_license_plate'=>$this->input->post('license'),
				'zip_lat'=> isset($lat) ? $lat : '',
				'zip_lon'=> isset($lon) ? $lon : '',
				'dt_created' => date("Y-m-d H:i:s"),
				"dt_modified" => date('Y-m-d H:i:s'),
                "in_status" => "1",
				'in_deleted'=> '0'
			);
			
			if($this->session->userdata('driverzip')){
			$this->session->unset_userdata('driverzip');
		}
		$this->session->set_userdata('driverzip',$this->input->post('zip_code'));
		if($this->session->userdata('driverphone'))
		{
			$this->session->unset_userdata('driverphone');
		}
		$this->session->set_userdata('driverphone',$this->input->post('contact'));
		
		
		$update = $this->input->post('update');
		
		if(isset($update) && $update>0)
		{
			$insert_id = $this->user_model->update_user_vehicle($driverinfo , $update);	
		}
		else {
		$insert_id = $this->user_model->insert_user_vehicle($driverinfo);
			
		}	
	
		//$insert_id = $this->user_model->insert_user_vehicle($driverinfo);
				
		if($insert_id){
			$result['insertid'] = $insert_id;
			$result['zip_code'] = $this->input->post('zip_code');
			$result['contact']  = $this->input->post('contact');
			//return $insert;
			echo json_encode($result);
		}
		}else{
			$result['insertid'] = 0;
			//return $insert;
			echo json_encode($result);
		}
	
	}
	
	function save_pilotinfo()
	{
		// update the user general details.
		if($this->input->post('zip_code')){
			
				$zip_code1 = $this->input->post('zip_code');
				$zip_code1 = str_replace(" ","",$zip_code1);
				$_POST['zip_code'] = strtoupper($zip_code1);		

			//check the user profile is already fill or not 
			$gen_profile = $this->user_model->check_users_profile($this->session->userdata('userid'));
			
			
			if(isset($gen_profile['st_zip']) && $gen_profile['st_zip']!=""){
					$userprofile = array('st_pilot'=>"Y",
					"dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1"
				);
				
			}else {
			
				$address_details	=	$this->common_model->getaddress($this->input->post('zip_code'));
				$userprofile = array('st_pilot'=>"Y",
					 "st_city" => isset($address_details['city']) ? $address_details['city'] : '',
                    "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
                    "st_zip" => $this->input->post('zip_code'),
                    "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
					//"st_primary_phone" => $this->input->post('plane_contact'),
					"dt_modified" => date('Y-m-d H:i:s'),
                    "in_status" => "1"
				);
			}
			
			$data['user_profile'] = $this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');
			
			$get_lat_long = $this->common_model->get_lattitude_longitude(trim($this->input->post('zip_code')));
					$lat ='';
					$lon ='';
                     if (isset($get_lat_long['lat']) && $get_lat_long['lat']!='') 
				{ //&& $get_lat_long['lon']!=''){
                      //  $user_vehicle_info['zip_lat'] = $get_lat_long['lat'];
                        $lat = $get_lat_long['lat'];
			  }
			  if(isset($get_lat_long['lon']) && $get_lat_long['lon']!='') 
			  {
                        //$user_vehicle_info['zip_lon'] = $get_lat_long['lon'];
                        $lon = $get_lat_long['lon'];
              }
		// for plane info 
				$driverinfo =array(
									'in_user_id'				=> $this->session->userdata('userid'),
				                    'st_pilot_zip'				=> $this->input->post('zip_code'),
									'st_pilot_availability'		=> serialize($this->input->post('transport')),	
									//'st_identifier'				=> $this->input->post('identifier'),									
									'zip_lat'					=> $lat, 
									'zip_lon'					=> $lon,	
									'st_plane_type'				=> $this->input->post('plane_type'),
									//'st_plane_color'			=> $post['airplane_color'][$val],
									'st_plane_number'		    => $this->input->post('plane_tail'),										
									//'in_plane_ifr'				=> $ifr,
									'in_distance_to_pilot'		=> $this->input->post('radius'),
									//'st_photos_url'				=> $post['googlephotos'][$val],
									'dt_created'				=> date('Y-m-d H:i:s'),
									'dt_modified'				=> date('Y-m-d H:i:s'),
									'in_status'					=> '1', 
									'in_deleted'				=> '0'
			);		
		
			
			$update = $this->input->post('update');
			if(isset($update) && $update > 0)
			{
				$insert_id = $this->user_model->update_user_plane($driverinfo, $update);
			}
			else {
				$insert_id = $this->user_model->insert_user_plane($driverinfo);	
			}
		
		//	$insert_id = $this->user_model->insert_user_plane($driverinfo);	
			if($insert_id){
			$result['insertid'] = $insert_id;
			//return $insert;
			echo json_encode($result);
		}
		}else{
			$result['insertid'] = 0;
			//return $insert;
			echo json_encode($result);
		}
		
	}
	/*function update_popover()
	{
		$profile_id = $this->input->post('profile_id');
		$this->user_model->set_popover_off($profile_id);
		return true;
	}*/
	
	function delete_driverinfo()
	{
		$update_id = 0;
		
		$vehicle_id = $this->input->post('vehicle_id');
		//echo $vehicle_id;exit;
		if(isset($vehicle_id) && $vehicle_id>0)
		{
			$driverinfo =	array('dt_modified'	=> date('Y-m-d H:i:s'), "in_deleted" => 1);
			$update_id = $this->user_model->update_user_vehicle($driverinfo , $vehicle_id);	
		}
		
		$userprofile = array('st_driver'=>"",'dt_modified'	=> date('Y-m-d H:i:s'));
		$this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');

		echo json_encode($update_id);
	}
	
	
	
	function delete_lost_animal_info()
	{
		$update_id = 0;
		
		$in_id = $this->input->post('in_id');
		//echo $in_id;exit;
		if(isset($in_id) && $in_id>0)
		{
			$lostanimalinfo =	array('dt_modified'	=> date('Y-m-d H:i:s'), "in_deleted" => 1);
			$update_id = $this->user_model->update_lost_animal_info($lostanimalinfo , $in_id);	
		}
		
		$userprofile = array('st_lost_animal_support'=>"",'dt_modified'	=> date('Y-m-d H:i:s'));
		$this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');

		echo json_encode($update_id);
	}
	
	function delete_pilotinfo()
	{
		$update_id = 0;
		
		$pilot_id = $this->input->post('pilot_id');
		//echo $vehicle_id;exit;
		if(isset($pilot_id) && $pilot_id>0)
		{
			$pilotinfo =	array('dt_modified'	=> date('Y-m-d H:i:s'), "in_deleted" => 1);
			$update_id = $this->user_model->update_user_plane($pilotinfo , $pilot_id);	
		}
		
		$userprofile = array('st_pilot'=>"",'dt_modified'	=> date('Y-m-d H:i:s'));
		$this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');

		echo json_encode($update_id);
	}
	
	function check_user_loggedin()
	{
		//echo $_SERVER['REMOTE_ADDR'];
		//$ip_address = $_SERVER['REMOTE_ADDR'];
		//$ip_address = $_SERVER['REMOTE_ADDR'];
		
		
		
		//$to = 'ghanshyam.maurya@pulsesolutions.net';
		//$this->load->library('email');
		//$this->common_function->send_mail($this->email, $to, 'check ip', $ip_address, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,'');
		
		$ip_address = $_GET['ip_address'];
		
		//$to = 'ghanshyam.maurya@pulsesolutions.net';
		//$this->load->library('email');
		//$this->common_function->send_mail($this->email, $to, 'post data check ip', $data_to_post, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,'');
		
		
		$status =  $this->user_model->check_user_status($ip_address);
		//echo $status;
		return $status;
		
	}
	
	function check_status()
	{
			$ch = curl_init();
			
			// set url 
			curl_setopt($ch, CURLOPT_URL, "https://app.doobert.com/user/check_user_loggedin"); 

			//return the transfer as a string 
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); 
	
			// $output contains the output string 
			$output = curl_exec($ch); 
			//echo 'user status';
			//print_r($output);
			// close curl resource to free up system resources 
			curl_close($ch);    
			print_r($output);
			exit;
	}
	
	// THIS FUNCTION FOR THE POPUP DISPLAY ONLY ONCE IN THE SAME PAGE (AJAX  REQUEST)
	 function save_session_popup()
	 {
		 if($this->input->post('id'))
		 {
			 $this->session->set_userdata('popup_display',1);
		 }
		  if($this->session->userdata('zip'))
		  {
			 $colorado_email_notification = $this->common_model->get_email_containt("83");
			 $zip_code_state = $this->common_model->get_zipcode_info($this->session->userdata('zip'));
			 if($zip_code_state['state_prefix']=='CO')
			 {
				$colorado_email_notification = $this->common_model->get_email_containt("83");
				$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
				if(isset($colorado_email_notification[0]['st_email_body']))
				{
						$message  = $colorado_email_notification[0]['st_email_body'];
						$message  = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
						$message  = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($this->session->userdata('userid')).'/'.$this->common_function->encode_base64($this->session->userdata('email')),$message);
						$message  = str_replace("##display_name##",$this->session->userdata('user_name'). " " .$this->session->userdata('last_name'),$message);						
						$message  =	str_replace("##DONATION##",$donation,$message);
						$subject  = $colorado_email_notification[0]['st_email_subject'];
						$category = $colorado_email_notification[0]['st_category'];
						$to = $this->session->userdata('email');
						$this->mail_notify_colorado($to,$subject,$category,$message);
							
				}	
			 }	 
		 }	 
		$data['data'] = 'true';
		echo json_encode($data);
	}
	 // FOR  UPDATE THE FLAG 
	/*function update_flag_popover()
	{
		if($this->input->post('profile_id'))
		 {
			 $this->session->set_userdata('popup_display_flag',1);
		 }
		$data['data'] = 'true';
		echo json_encode($data);
		
	}*/	
	
	function lost_animal_support()
	{  
		
		$data = array();
        $data['Err_Msg'] = '';		
		 
		$data['tooltip'] = get_cookie('tooltip');
        $data['profile_details'] = $this->user_model->get_user_profile($this->session->userdata('userid'));
		  $data['arpa_status']   = $this->common_model->check_arpa_certifcate_status($this->session->userdata('userid'));
		
        //if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '' || trim($data['profile_details']['st_primary_phone']) == '') {
			if (trim($data['profile_details']['st_zip']) == '' || trim($data['profile_details']['st_last_name']) == '') {
            $this->session->set_flashdata('profile_err', 'Please complete general details to proceed.');

            if (get_cookie('tooltip')) {
                $data['tooltip'] = get_cookie('tooltip');
            } else {
                set_cookie('tooltip', "N", 864000);
                $data['tooltip'] = "N";
            }

            //echo get_cookie('get_started');exit;
            if (get_cookie('get_started')) {
                $data['get_started'] = get_cookie('get_started');
            } else {
                set_cookie('get_started', "N", 864000);
                $data['get_started'] = "N";
            }

            redirect(base_url() . 'my-profile');
        } 
		
		$data['ani_supp']	= $this->user_model->get_animal_sup_detail($this->session->userdata('userid'));
		//print_r($data['ani_supp']); die;	
		$form_field = array('caseworker' => '',
						   'monitor' => '',
						   'networker'=>'',
						   'admin' =>'',
						   'matcher'=>'',
						   'volunteer'=>''
        );
        
        foreach ($form_field as $key => $value) {
            $data['lost_animal_support'][$key] = $value;
        }
		if($this->input->post('action')=='Edit')
		{
			
			 foreach ($form_field as $key => $value) {
                
                    $data['lost_animal_support'][$key] = $this->input->post($key);
               
            }
			
			if($this->input->post('caseworker')=='' && $this->input->post('monitor')=='' && $this->input->post('networker')=='' && $this->input->post('admin')=='' && $this->input->post('matcher')=='' && $this->input->post('volunteer')==''){
			$data['Err_Msg']="Please select atleast one checkbox!";
			$this->load->view('lost-animal-support', $data);
			 }
			else{
                     
					 if($this->input->post('inid')!='')
					 {  
					     
					   $ani_supp['in_user_id']		=	$this->session->userdata('userid');
					   $ani_supp['in_caseworker']	=	($this->input->post('caseworker'))  ? $this->input->post('caseworker') : 0;
					   $ani_supp['in_monitor']		=	($this->input->post('monitor'))  ? $this->input->post('monitor') : 0;
					   $ani_supp['in_networker']	=	($this->input->post('networker'))  ? $this->input->post('networker') : 0;
					   $ani_supp['in_admin']		=	($this->input->post('admin'))  ? $this->input->post('admin') : 0;
					   $ani_supp['in_matcher']		=	($this->input->post('matcher'))  ? $this->input->post('matcher') : 0;
					   $ani_supp['in_volunteer']	=	($this->input->post('volunteer'))  ? $this->input->post('volunteer') : 0;				  
					   $ani_supp['dt_modified']		=	date('Y-m-d H:i:s');
					   
					   //echo '<pre>'; print_r($ani_supp);die;
 					   $this->user_model->update_animal_support($ani_supp,$this->input->post('inid'));
					   $profile_info['st_lost_animal_support'] = "Y";
 					   $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
					   $this->session->set_flashdata('success', 'Lost animal support profile updated successfully.');
                	   redirect(base_url() . 'user/lost_animal_support/');
					 }
					 
					 else
					 {
					 
					   $ani_supp['in_user_id']		=	$this->session->userdata('userid');
					   $ani_supp['in_caseworker']	=	($this->input->post('caseworker'))  ? $this->input->post('caseworker') : 0;
					   $ani_supp['in_monitor']		=	($this->input->post('monitor'))  ? $this->input->post('monitor') : 0;
					   $ani_supp['in_networker']	=	($this->input->post('networker'))  ? $this->input->post('networker') : 0;
					   $ani_supp['in_admin']		=	($this->input->post('admin'))  ? $this->input->post('admin') : 0;
					   $ani_supp['in_matcher']		=	($this->input->post('matcher'))  ? $this->input->post('matcher') : 0;
					   $ani_supp['in_volunteer']	=	($this->input->post('volunteer'))  ? $this->input->post('volunteer') : 0;				  
					   $ani_supp['dt_created']		=	date('Y-m-d H:i:s');
					 
					 	$this->user_model->insert_animal_support($ani_supp);
						$profile_info['st_lost_animal_support'] = "Y";
 					    $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
						$this->session->set_flashdata('success', 'Lost animal support profile updated successfully.');
                	    redirect(base_url() . 'user/lost_animal_support/');
					 }	
					 
				}		
		
		}	
		else
		{
			$this->load->view('lost-animal-support', $data);
		}
	}
	
	function generate_random_password($length = 10) {
		$alphabets = range('A','Z');
		$numbers = range('0','9');
		$additional_characters = array('_','.');
		$final_array = array_merge($alphabets,$numbers,$additional_characters);
			 
		$password = '';
	  
		while($length--) {
		  $key = array_rand($final_array);
		  $password .= $final_array[$key];
		}
	  
		return $password;
	}
	
	function confirm_email($user_id,$verification_code)
	{
		$user_id = base64_decode($user_id);
		$verification_code = base64_decode($verification_code);
		
		$user_email_confirm = $this->user_model->check_email_verification_code($user_id,$verification_code);
		if(isset($user_email_confirm) && $user_email_confirm > 0)
		{
			
			$details = array("in_email_verify_status" => "1");
			$this->user_model->update_user($details,$user_id);
			$this->session->set_userdata('email_confirm_warning', 'Thank you for confirming your email. Please make sure to add no-reply@doobert.com to your email address book so that emails do not goto SPAM.');	
			$this->session->set_userdata('userid',$user_id);
			$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
			
			$this->session->set_userdata('user_name',$user_details[0]['st_display_name']);
            $this->session->set_userdata('last_name',$user_details[0]['st_last_name']);
			$this->session->set_userdata('email',$user_details[0]['st_email']);

			redirect($this->config->item('base_url') . "dashboard/");
		}else
		{
			$user_email_verify_status = $this->user_model->check_email_verification_status($this->session->userdata('userid'));
									
			if(isset($user_email_verify_status) && isset($user_email_verify_status['in_email_verify_status']) && $user_email_verify_status['in_email_verify_status'] == '1')
			{
				$this->session->set_userdata('email_confirm_warning', 'Email verification has been already completed.');		
			}	
			redirect($this->config->item('base_url'));
		}
		
	}
	
	function resend_email_confirm()
	{
		$userid = $this->input->post('user_id');
		$verificationCode = $this->generate_random_password(15);
		$details = array("st_email_verification_code" => $verificationCode);
        $this->user_model->update_user($details, $userid);
					
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("81");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
		if (isset($email_details[0]['st_email_body'])) {
			$templete = $email_details[0]['st_email_body'];
			
			$templete = str_replace("##display_name##", $this->session->userdata('user_name') . " " . $this->session->userdata('last_name'), $templete);
			$templete = str_replace("##current_year##", date('Y'), $templete);
			
			//echo 'userid'.$userid;
			//$confirm_email_url = base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode);
			$confirm_email_url = '<a href="'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'">'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'</a>';
			$templete = str_replace("##confirm_email_link##", $confirm_email_url, $templete);
			$templete  	= 	str_replace("##DONATION##",$donation,$templete);
			$strMail = $templete;
			$to = $this->session->userdata('email');
			$subject = $email_details[0]['st_email_subject'];
			$message = $strMail;
			$email_sent_status = 0;
			//print_r($message);exit;
			$category = $email_details[0]['st_category'];
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);

			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($userid);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_details[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
				$email_sent_status = $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
			}
			echo $email_sent_status;
			exit;
		}
		
	}
	
	function save_userinfo()
	{
		// update the user general details.
		//echo $this->input->post('zip_code');
		//exit; 
	 	$zip_code =	$_POST['zip_code'];
		$contact =	$_POST['contact'];
		$saved_user_type = '';
		$last_insert_pilot_id  = '';
		$last_insert_photo_id = '';
		$last_insert_driver_id = '';
		if($zip_code != '')
		{
			
			if($this->session->userdata('zip'))
			{
				$this->session->unset_userdata('zip');	
			}	
			$this->session->set_userdata('zip',$this->input->post('zip_code'));

			//echo 'test inside if';
			//exit;
			$address_details = array();
			if(($this->input->post('zip_code') != ''))
			{
					$zip_code1 = $this->input->post('zip_code');
					$zip_code1 = str_replace(" ","",$zip_code1);
					$_POST['zip_code'] = strtoupper($zip_code1);		
					$address_details	=	$this->common_model->getaddress($this->input->post('zip_code'));
			}
			
		
			$userprofile = array("st_city" => isset($address_details['city']) ? $address_details['city'] : '',
								 "st_state" => isset($address_details['state_prefix']) ? $address_details['state_prefix'] : '',
								 "st_zip" => $this->input->post('zip_code')!= '' ? $this->input->post('zip_code') : '',
								 "st_country" => isset($address_details['st_country']) ? strtoupper($this->common_function->shortCountry[$address_details['st_country']]) : '',
								 "st_primary_phone" => $this->input->post('contact') != '' ? $this->input->post('contact') : '',
								 "dt_modified" => date('Y-m-d H:i:s'),
			);
			
			$data['user_profile'] = $this->user_model->update_user_info($userprofile, $this->session->userdata('userid'), 'tbl_user_profile');
			
			
			if(($this->input->post('zip_code') != '') && ($this->input->post('contact') != '')){
				$user_info = array("in_status" => '1');
				$data['user_info'] = $this->user_model->update_user_info($user_info, $this->session->userdata('userid'), 'tbl_users');
				
				$data['user_profile_info'] = $this->user_model->update_user_info($user_info, $this->session->userdata('userid'), 'tbl_user_profile');
				$user_signup_type = '';
				$user_type = $this->common_model->get_user_type($this->session->userdata('userid'));
				
				if(isset($user_type) && !empty($user_type) && isset($user_type['st_signup_as']) && $user_type['st_signup_as'] != '')
				{
					$user_signup_type = $user_type['st_signup_as'];
				}
				
				if((isset($user_signup_type) && $user_signup_type == 'D'))
				{
					 $arrVehicle = array('in_user_id' => $this->session->userdata('userid'),
										'st_driver_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
										'st_zip_vehicle' => $this->input->post('zip_code'),
										'in_distance_to_drive' => '50',
										'dt_created' => date('Y-m-d H:i:s'),
										'st_vehicle_type' => 'Pickup Truck',
										'in_status' => '1',
										'in_deleted' => '0'
									);
					$this->db->insert('tbl_user_vehicle', $arrVehicle);
					$last_insert_driver_id = $this->db->insert_id();
					
					$driver_profile_info = array();
					$driver_profile_info['st_driver'] = "Y";
					$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
					$data['user_profile'] = $this->user_model->update_user_info($driver_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
					
					$saved_user_type = 'D';
					
				}
				
				if((isset($user_signup_type) && $user_signup_type == 'P'))
				{
					$arrPilot = array('in_user_id' => $this->session->userdata('userid'),
									'st_pilot_availability' => serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),
									'st_pilot_zip' =>  $this->input->post('zip_code'),
									'in_distance_to_pilot' => '100',
									'dt_created' => date('Y-m-d H:i:s'),
									'st_plane_type' => 'Single Engine',
									//'st_plane_type' => 'B',
									'in_status' => '1',
									'in_deleted' => '0'
								);
					$this->db->insert('tbl_user_pilot', $arrPilot);
					$last_insert_pilot_id = $this->db->insert_id();
					
					$pilot_profile_info = array();
					$pilot_profile_info['st_pilot'] = "Y";
					$pilot_profile_info['dt_modified'] = date('Y-m-d H:i:s');
					$data['user_profile'] = $this->user_model->update_user_info($pilot_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
					
					//$this->session->set_userdata('wp_pilot_user_saved',1);					
					$saved_user_type = 'P';
				}
				
				
				if((isset($user_signup_type) && $user_signup_type == 'PH'))
				{
					$lat = 0;
					$lon = 0;
					if ($zip_code != '') { 
						
						$get_lat_long = $this->common_model->get_lattitude_longitude(trim($zip_code));
	
						if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
							$lat = $get_lat_long['lat'];
							$lon = $get_lat_long['lon'];
						}  
						
					}      
					$photo_details = array('in_user_id'					=> $this->session->userdata('userid'),
										'st_photographer_zipcode'		=> $zip_code,
										'st_photographer_availability'	=> serialize(array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat')),										
										'zip_lat'						=> $lat, 
										'zip_lon'						=> $lon,
										'in_pro_bono_ser'				=> '1',
										'in_distance_to_travel'			=> '50',
										'dt_created'					=> date('Y-m-d H:i:s'),
										'in_deleted'					=> '0',
										);
									
					$this->user_model->add_photographer($photo_details);		
					$last_insert_photo_id = $this->db->insert_id();
				
					
					$driver_profile_info = array();
					$driver_profile_info['st_photographer'] = "Y";
					$driver_profile_info['dt_modified'] = date('Y-m-d H:i:s');
					$data['user_profile'] = $this->user_model->update_user_info($driver_profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
					
					$saved_user_type = 'PH';
					
				}
			}
			   
		if($this->session->userdata('driverzip')){
			$this->session->unset_userdata('driverzip');
		}
		$this->session->set_userdata('driverzip',$this->input->post('zip_code'));	
		
		if($this->session->userdata('driverphone'))
		{
			$this->session->unset_userdata('driverphone');
		}
		$this->session->set_userdata('driverphone',$this->input->post('contact'));
		
		$result = array();
		$result['zip_code'] = $this->input->post('zip_code');
		$result['contact']  = $this->input->post('contact');
		$result['saved_user_type']  = $saved_user_type;
		$result['last_insert_pilot_id']  = $last_insert_pilot_id;
		$result['last_insert_photo_id']  = $last_insert_photo_id;
		$result['last_insert_driver_id'] = $last_insert_driver_id;
		//return $insert;
		echo json_encode($result);
		}
	}
	
	function save_fosterinfo()
	{
		// update the user general details.
		//echo $this->input->post('zip_code');
		//exit; 
		$result = array();
	 	$animal_type =	$_POST['animal_type'];
		$duration_serve =	$_POST['duration_serve'];
		$update = $_POST['update']; 
		
		if($animal_type != '' && $duration_serve != '')
		{
			
			//echo 'test inside if';
			//exit;
			if(isset($update) && $update > 0)
			{
					 $this->user_model->update_foster_details($animal_type,$duration_serve,$update);
			} else {	
				$insert_id = $this->user_model->add_foster_home_details($animal_type,$duration_serve,$this->session->userdata('userid'),'tbl_foster_user_detail');
			}
			//echo $insert_id;exit;
			
			if(isset($insert_id) && $insert_id > 0)
			{
				$profile_info['st_foster_home'] 	= 	"Y";
				$data['user_profile']	=	$this->user_model->update_user_info($profile_info,$this->session->userdata('userid'),'tbl_user_profile');
				
				$data['user_profile_setting_details']	= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
								
				if(empty($data['user_profile_setting_details']))
				{
				$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
									'in_public'				=> '0',
									'st_foster'				=> 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}',
									'dt_created'			=> date('Y-m-d H:i:s'),
									'in_deleted'			=> '0'											
									);
				
				$this->user_model->add_user_foster_profile_setting($fost_arr);
				}
				else{			
					$fost_arr	 = 	array('st_foster'		=> 'a:5:{i:0;s:18:"st_animal_type_ids";i:1;s:16:"in_duration_type";i:2;s:18:"st_max_foster_days";i:3;s:18:"st_max_animal_size";i:4;s:23:"st_household_animal_ids";}',
									'dt_created'			=> date('Y-m-d H:i:s'),
									'in_deleted'			=> '0'											
									);
					$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
				}
				
				$result['insertid'] = $insert_id;
				$result['animal_type'] = $this->input->post('animal_type');
				$result['duration_serve']  = $this->input->post('duration_serve');
				//return $insert;
				echo json_encode($result);
				
			} else {
				if(isset($update) && $update > 0)
				{
					$result['insertid'] = $update;
					$result['animal_type'] = $this->input->post('animal_type');
					$result['duration_serve']  = $this->input->post('duration_serve');
			
				} else {
					$result['insertid'] = 0;
				}
				echo json_encode($result);	
			}			
		}
		else
		{
			$result['insertid'] = 0;
			//return $insert;
			echo json_encode($result);
		}
	}
	
	public function save_animal_supp()
	{   	
			// insert	            		
			$id	=	$this->user_model->inser_ani_supp($_POST);						
			$result['insertid'] = $id;
			//return $insert;
			echo json_encode($result);		
	}	
	
	
	public function save_photographer()
	{   	
					  
				$lat = 0;
                $lon = 0;
                if ($_POST['photo_user_zip'] != '') { 
                    $profile_zipcode = explode('-', $_POST['photo_user_zip']);
                    if (isset($profile_zipcode[1]) && !empty($profile_zipcode[1])) {
                       $_POST['photo_user_zip'] = $profile_zipcode[0];
                    }

                    $get_lat_long = $this->common_model->get_lattitude_longitude(trim($_POST['photo_user_zip']));

                    if (!empty($get_lat_long['lat']) && !empty($get_lat_long['lon'])) {
                        $lat = $get_lat_long['lat'];
                        $lon = $get_lat_long['lon'];
                    }  
					
				}    
				
			$update = $this->input->post('update');
			if(isset($update) && $update > 0)
			{
				$photographer_id  = $update;
				$arrPhotographer= array('in_user_id'				=> $this->session->userdata('userid'),
									'st_photographer_zipcode'		=> $_POST['photo_user_zip'],
									'st_photographer_availability'	=> serialize($_POST['photo']),										
									'zip_lat'						=> $lat, 
									'zip_lon'						=> $lon,	
									'in_pro_bono_ser'				=> isset($_POST['probonoservice']) && $_POST['probonoservice'] != '' ? $_POST['probonoservice'] : 0,
									'in_distance_to_travel'			=> $_POST['photo_radius'],
									'dt_modified'					=> date('Y-m-d H:i:s'),
									'st_website_url'				=> $_POST['photo_mywebsite'],
									);
				$insert_id = $this->user_model->update_photographer($arrPhotographer,$photographer_id);
			}
			else {
				$insert_id	=	$this->user_model->insert_photographer($_POST,$lat,$lon,'tbl_photographer_detail');	
			}

		    		
				
			
			
			 if (isset($insert_id) && $insert_id != '') {  
                    $profile_info['st_photographer'] = "Y";
                    $profile_info['dt_modified'] = date('Y-m-d H:i:s');
                    $data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
                		
				
				// for update the user profile setting 
				$data['user_profile_setting_details'] 		= $this->user_model->get_user_profile_setting($this->session->userdata('userid'));
			 
			 
			   if(empty($data['user_profile_setting_details']))
					{
					$fost_arr	 = 	  array('in_user_id'		=> $this->session->userdata('userid'),
										    'in_public'				=> '0',
										    'st_photographer'		=> 'a:6:{i:0;s:28:"st_photographer_availability";i:1;s:23:"st_photographer_zipcode";i:2;s:21:"in_distance_to_travel";i:3;s:14:"st_website_url";i:4;s:15:"in_pro_bono_ser";i:5;s:8:"st_about";}',
										   'dt_created'			=> date('Y-m-d H:i:s'),
										   'in_deleted'			=> '0'											
										);
					
					$this->user_model->add_user_photographrer_profile_setting($fost_arr);
					}
					else{			
						$fost_arr	 = 	array('st_photographer'	=> 'a:6:{i:0;s:28:"st_photographer_availability";i:1;s:23:"st_photographer_zipcode";i:2;s:21:"in_distance_to_travel";i:3;s:14:"st_website_url";i:4;s:15:"in_pro_bono_ser";i:5;s:8:"st_about";}',
										'dt_created'			=> date('Y-m-d H:i:s'),
										'in_deleted'			=> '0'											
										);
						$this->user_model->update_user_profile_setting($fost_arr,$this->session->userdata('userid'),'tbl_user_profile_setting');	
					}
				}
							
			$result['insertid'] = $insert_id;
			//return $insert;
			echo json_encode($result);		
	}	
	
	function get_user_zip()
	{
		$zip = addslashes($this->input->get('term'));
           			
		$result = $this->user_model->get_user_zip($zip);
		echo json_encode($result);
	}
	
	
	function save_session_close_email_error()
	{
	 	 if($this->input->post('id'))
		 {
			 $this->session->set_userdata('close_email_error',1);
		 }
		$data['data'] = 'true';
		echo json_encode($data);
	}
	
	public function get_zip_code(){

        if (!$this->session->userdata('userid')){
            echo "1";
            die;
        }
		
		if($this->input->get('flag')){
			$zip = addslashes($this->input->get('term'));
            $city = addslashes($this->input->get('city'));
            $state = addslashes($this->input->get('state'));
			$result = $this->user_model->get_zipcode($zip, $city, $state);
			if(!empty($result)){
			echo json_encode($result);
			}
			else
			{
				$city = addslashes($this->input->get('city'));
				$state = addslashes($this->input->get('state'));
				$result = $this->user_model->get_fullzipcode_by_state_city(trim($city), trim($state));
				if(!empty($result)){
				echo json_encode($result);
				}else {
				$result ='NULL';
				echo json_encode($result);
				}
			}
			
		}
		
       else  if ($this->input->get('term')){
			$zip = addslashes($this->input->get('term'));
            $city = addslashes($this->input->get('city'));
            $state = addslashes($this->input->get('state'));
			$result = $this->user_model->get_zipcode($zip, $city, $state);
            echo json_encode($result);			
        } else {
				$zip = addslashes(trim($this->input->get('zip')));
				$result = $this->user_model->get_zipcode($zip);
				if(!empty($result)){
				echo json_encode($result);
				}
				else
				{
				$city = addslashes(trim($this->input->get('city')));
				$state = addslashes(trim($this->input->get('state')));
				$city1=''; $state1='';
				$expcity = explode(',',$city);
				if(!empty($expcity)){
					if(isset($expcity[0])){ $city1 = trim($expcity[0]);}
					if(isset($expcity[1])){ $state1 = trim($expcity[1]);}
				}
				
				$result = $this->user_model->get_zipcode("",$city1 ,$state1, "action");
				echo json_encode($result);  
				}        			
		 }
    }
	
	public function check_session_status(){
		if($this->session->userdata('userid'))
			 $status = 'true';
		else 
			 $status = 'false';
		echo $status; 
	}
	
	public function wp_login_myacount()
	{
		$data = array();
		$user_id = '';	
		if($this->session->userdata('userid') && $this->session->userdata('userid') > 0)
		{
			$user_id	= $this->session->userdata('userid');	
		}
		
		$data['user_id'] = $user_id;
		
		print_r($user_id);
		
		$this->load->view('wp-login-my-account', $data);	
		
	}
	
	public function wp_mobile_login_myacount()
	{
		$data = array();
		$user_id = '';	
		if($this->session->userdata('userid') && $this->session->userdata('userid') > 0)
		{
			$user_id	= $this->session->userdata('userid');	
		}
		
		$data['user_id'] = $user_id;
		
		$this->load->view('wp-mobile-login-my-account', $data);	
		
	}
	
	//function to fix image orientation for iphone mobile pic starts
	function correctImageOrientation($filename) {
	  if (function_exists('exif_read_data')) {
		$exif = exif_read_data($filename);
		if($exif && isset($exif['Orientation'])) {
		  $orientation = $exif['Orientation'];
		  if($orientation != 1){
			$img = imagecreatefromjpeg($filename);
			$deg = 0;
			switch ($orientation) {
			  case 3:
				$deg = 180;
				break;
			  case 6:
				$deg = 270;
				break;
			  case 8:
				$deg = 90;
				break;
			}
			if ($deg) {
			  $img = imagerotate($img, $deg, 0);        
			}
			// then rewrite the rotated image back to the disk as $filename 
			imagejpeg($img, $filename, 95);
		  } // if there is some rotation necessary
		} // if have the exif orientation info
	  } // if function exists      
	}	
	
	function update_daily_digest($uid = false,$email_address)
	{
		 $userId = $this->common_function->decode_base64($uid);
         $email_address = $this->common_function->decode_base64($email_address);

        if ((!$userId) || (!$email_address) )  {
            $data['subscribe_status_text_msg'] = 'You have not subscribed from daily digest email. Please contact us at support@doobert.com.';
        }

        $user_details = $this->common_function->get_user_profile($userId);
        if (empty($user_details)) {
           $data['subscribe_status_text_msg'] = 'You have not subscribed from daily digest email. Please contact us at support@doobert.com.';
        } else {
			$this->user_model->update_subscribe_status($userId);
			$data['subscribe_status_text_msg'] = 'You have been successfully subscribed for daily digest email.';
		}
		
		$this->load->view('unsubscribe_message',$data);
	}
	
	function unsubscribe_complete($uid = false,$email_address)
	{
		$data = array();
		$userId = $this->common_function->decode_base64($uid);
        $email_address = $this->common_function->decode_base64($email_address);

        $data['user_id'] = $userId;
		$data['email_address'] = $email_address;
		$this->load->view('unsubscribe_all',$data);
	}
	
	function user_unsubscribe()
	{
		$data = array();
		
		$userId = $this->input->post('un_user_id');
		$email_address = $this->input->post('un_user_email');
		$reason_type = $this->input->post('un_type');
		$other_reason_msg = $this->input->post('un_other_msg');
		
		//echo '<pre/>';print_r($_POST);exit;
		if ((!$userId) || (!$email_address) )  {
            $data['subscribe_status_text_msg'] = 'You have not unsubscribed from doobert emails. Please contact us at support@doobert.com.';
        }

        $user_details = $this->common_function->get_user_profile($userId);
        if (empty($user_details)) {
           $data['subscribe_status_text_msg'] = 'You have not unsubscribed from doobert emails. Please contact us at support@doobert.com.';
        } else {
			$this->user_model->update_all_subscribe_status($userId,$reason_type,$other_reason_msg);
			$data['subscribe_status_text_msg'] = 'You have been unsubscribed completely from doobert emails.';
		}
		
		$this->load->view('unsubscribe_message',$data);
	}

	function mail_notify_colorado($to,$subject,$category,$message)
	{
		$this->load->library('email');
	    $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
	}
	
		
	function trans_attach_photo_auto_login($uid = false, $trId=false) {
	

        $userId = $this->common_function->decode_base64($uid);     
        $transId = $this->common_function->decode_base64($trId);
        if (!$userId) {
            redirect($this->config->item('base_url'));
        }
        $user_details = $this->common_function->get_user_profile($userId);      
        if (empty($user_details)) {
            redirect($this->config->item('base_url'));
        }
        $this->session->set_userdata('userid', $user_details['in_user_id']);
        $this->session->set_userdata('user_name', $user_details['st_display_name']);
		$this->session->set_userdata('last_name', $user_details['st_last_name']);
        $this->session->set_userdata('email', $user_details['st_email']);
		$this->session->set_userdata('attach_photo_auto_login',1);
		$this->session->set_userdata('insert_transport_story_login',1);	
		redirect($this->config->item('base_url') . "org-confirm-transport/" . $transId . '/#tab-photos');
        //redirect($this->config->item('base_url') . "org-confirm-transport/" . $transId . '/#tab_4_3');
		
    }
	
	public function wp_logout() {
		$user_id = $this->session->userdata('userid');
		
		$user_signup_type = '';
		$user_type = $this->common_model->get_user_type($user_id);
		
		if(isset($user_type) && !empty($user_type) && isset($user_type['st_signup_as']) && $user_type['st_signup_as'] != '')
		{
			$user_signup_type = $user_type['st_signup_as'];
		}
		
		
		//Unsetting all user data from session.
		$this->session->unset_userdata('user_name');
		$this->session->unset_userdata('last_name');
		$this->session->unset_userdata('email');
		$this->session->unset_userdata('userid');
		$this->session->unset_userdata('url_data');
		//Destroying all session data associated with this user.
		/*unset($_COOKIE['doobert_home']);
		setcookie("doobert_home","",time()-3600,"/",".doobert.com");
		
		$this->session->sess_destroy();
		redirect($this->config->item('base_url'));*/
		
		unset($_COOKIE['doobert_home']);
		setcookie("doobert_home","",time()-3600,"/",".doobert.com");	
		$this->session->sess_destroy();
		
		
		setcookie("userid","",time()-3600,"/",".doobert.com");
		setcookie("user_name","",time()-3600,"/",".doobert.com");
		setcookie("email","",time()-3600,"/",".doobert.com");
		setcookie("last_name","",time()-3600,"/",".doobert.com");
		
		unset($_COOKIE['userid']);
		unset($_COOKIE['user_name']);
		
		redirect('https://www.doobert.com');
		
	}
	
	public function help()
	{
		$data = array();
		$this->load->view('other-ways-to-help',$data);
	}
	
	public function resources()
	{
		$data = array();
		$this->load->view('doobert-resources',$data);
	}
	
	public function volunteer_resources()
	{
		$data = array();
		$this->load->view('volunteer-resources',$data);
	}
	
	public function organization_resources()
	{
		$data = array();
		$this->load->view('organization-resources',$data);
	}
	
	
	
	
	function email_confirm()
	{		
		$userid = $this->session->userdata('userid');	
		$verificationCode = $this->generate_random_password(15);
		$details = array("st_email_verification_code" => $verificationCode);
        $this->user_model->update_user($details, $userid);
					
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("81");
		$q			=	$this->common_model->get_affiliate_donation_detail('3');	

													if(isset($q) && !empty($q)){					   		
														foreach($q as $qr)
														{		 
															  
																	if(!empty($qr['st_image']))
																	{																			
																			$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
																			$imgtitle   =   $qr['st_banner_name']; 				
																			$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

																			alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
																		  
																		  
																	}
																	else
																	{
																		   $donation='';								 
																	}							  
																
														}
													}			
													   
												   else
												   {
													  $donation='';
												   }
		if (isset($email_details[0]['st_email_body'])) {
			$templete = $email_details[0]['st_email_body'];
			
			$templete = str_replace("##display_name##", $this->session->userdata('user_name') . " " . $this->session->userdata('last_name'), $templete);
			$templete = str_replace("##current_year##", date('Y'), $templete);
			$templete = str_replace("##DONATION##", $donation, $templete);
			//echo 'userid'.$userid;
			//$confirm_email_url = base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode);
			//$confirm_email_url = '<a href="'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($data['email_verification_code']).'">'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($data['email_verification_code']).'</a>';
			$confirm_email_url = '<a href="'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'">'.base_url().'verify/'.base64_encode($userid).'/'.base64_encode($verificationCode).'</a>';
			$templete = str_replace("##confirm_email_link##", $confirm_email_url, $templete);
			$strMail = $templete;
			$to = $this->session->userdata('email');
			$subject = $email_details[0]['st_email_subject'];
			$message = $strMail;
			$email_sent_status = 0;
			//print_r($message);exit;
			$category = $email_details[0]['st_category'];
			
			$message = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
		
			$message = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($userid).'/'.$this->common_function->encode_base64($to),$message);
			
			$send_email = 1;							
			$sub_data = $this->common_model->check_user_unsub_emails($userid);
			if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
			{
				$send_email = 0;										
			}
			
			$email_template_id = $email_details[0]['in_email_id'];
			$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
			if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
			{
				$send_email = 1;
			}
			
			if($send_email == '1')
			{
				$email_sent_status = $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);
			}
			
			
		}
		
	}
	
		function login_as_tc_volunteer($uid=false,$trid)
		{  
		
				$userId		=	$this->common_function->decode_base64($uid); 
				$transportid	=	$this->common_function->decode_base64($trid);	
				
				if(!$userId)
				{
					redirect($this->config->item('base_url'));
				}
				
				$user_details = $this->common_function->get_user_profile($userId);
				
				if(empty($user_details))
				{
					redirect($this->config->item('base_url'));
				}
				
							
										
				$this->session->set_userdata('userid',$user_details['in_user_id']);					
				$this->session->set_userdata('user_name',$user_details['st_display_name']);
				$this->session->set_userdata('last_name',$user_details['st_last_name']);
				$this->session->set_userdata('email',$user_details['st_email']);
				$this->session->set_userdata('zip', $user_details['st_zip']);  //Added By Nirav 14-June-2016
				$this->session->set_userdata('ststate', $user_details['st_state']);
				
				//if($user_details['in_status']==0 && !empty($transportid))
					if(!empty($user_details) && !empty($transportid))
				{	
					
					redirect($this->config->item('base_url') . "user-submission/".$transportid);
					//redirect($this->config->item('base_url')."my-profile/");
					
				}
				else
				{
					redirect($this->config->item('base_url') . "dashboard/");
				}
				
		}
		
		function login_as_routing_volunteer($uid=false,$trid)
		{  
		
				$userId		=	$this->common_function->decode_base64($uid); 
				$transportid	=	$this->common_function->decode_base64($trid);	
				
				if(!$userId)
				{
					redirect($this->config->item('base_url'));
				}
				
				$user_details = $this->common_function->get_user_profile($userId);
				
				if(empty($user_details))
				{
					redirect($this->config->item('base_url'));
				}
				
							
										
				$this->session->set_userdata('userid',$user_details['in_user_id']);					
				$this->session->set_userdata('user_name',$user_details['st_display_name']);
				$this->session->set_userdata('last_name',$user_details['st_last_name']);
				$this->session->set_userdata('email',$user_details['st_email']);
				$this->session->set_userdata('zip', $user_details['st_zip']);  //Added By Nirav 14-June-2016
				$this->session->set_userdata('ststate', $user_details['st_state']);
				
				//if($user_details['in_status']==0 && !empty($transportid))
				if(!empty($user_details) && !empty($transportid))
				{	
					
					redirect($this->config->item('base_url') . "org_transportation/submitted_routing_request/");
					//redirect($this->config->item('base_url')."my-profile/");
					
				}
				else
				{
					redirect($this->config->item('base_url') . "dashboard/");
				}
				
		}
		
		public function manage_email_subscription() { 	
				
		$data = array();
		$this->load->model('user_settings_model');
		$data['user_email_sub'] = $this->user_settings_model->get_email_subscription($this->session->userdata('userid'));
		
		//echo "<pre>"; print_r($data['user_email_sub']);die;
		
		$data['daily_digest']	=	(!empty($data['user_email_sub'][0]['st_daily_digest_email']))?unserialize($data['user_email_sub'][0]['st_daily_digest_email']):'';
		$data['interested_in']	=	(!empty($data['user_email_sub'][0]['st_interested_in']))?unserialize($data['user_email_sub'][0]['st_interested_in']):'';
		$data['more_info']		=	(!empty($data['user_email_sub'][0]['st_more_info']))?unserialize($data['user_email_sub'][0]['st_more_info']):'';
		$data['newsletter']		=	(!empty($data['user_email_sub'][0]['st_newsletter']))?unserialize($data['user_email_sub'][0]['st_newsletter']):'';
		$data['unsubscribe']	=	(!empty($data['user_email_sub'][0]['st_unsubscribe']))?unserialize($data['user_email_sub'][0]['st_unsubscribe']):'';	
			
			$newsletter = 1;		
			$stnewsletter = array(0=>'nw');
			$data['subscription_data'] = array(	'in_user_id'			=>	$this->session->userdata('userid'),
												'st_daily_digest_email'	=>	'',
												'st_interested_in'		=>	'',
												'st_more_info'			=>	'',
												//'st_newsletter'			=>	(isset($_POST['newsletter']))?serialize($_POST['newsletter']):'',
												'st_newsletter'			=>	(isset($stnewsletter))?serialize($stnewsletter):'',
												//'in_new_feature'		=>	'0',
												//'in_newsletter'			=>	(isset($newsletter))? $newsletter : '0',
												'st_unsubscribe'		=>	'',
												'dt_created' 			=>  date('Y-m-d H:i:s')
											);
											
			$data['user_data'] = array('in_newsletter'	=>	'Y');

			if(empty($data['user_email_sub'])) { 
				$data['add_data'] = $this->user_settings_model->add_email_subscription($data['subscription_data']);	
				$data['edit_data'] = $this->common_model->update_user_data($data['user_data'],$this->session->userdata('userid'));
			} else {  
			
				$data['subscription_data'] = array(	'in_user_id'		    =>	$this->session->userdata('userid'),	
													'st_newsletter'			=>	(isset($stnewsletter))?serialize($stnewsletter):'',
												    //'in_newsletter'			=>	(isset($newsletter))? $newsletter : '0',												
												    'dt_created' 			=>  date('Y-m-d H:i:s')
											);	                
				$data['edit_data'] = $this->common_model->update_user_data($data['user_data'],$this->session->userdata('userid'));			
				$data['edit_data'] = $this->user_settings_model->edit_email_subscription($data['subscription_data'],$data['user_email_sub'][0]['in_notification_setting_id']);				
			}				
			echo '1'; exit;
			
	}
	
	
		function assigned_volunteer($uid=false,$trid)
		{  
		
				$userId		=	$this->common_function->decode_base64($uid); 
				$transportid	=	$this->common_function->decode_base64($trid);	
				
				if(!$userId)
				{
					redirect($this->config->item('base_url'));
				}
				
				$user_details = $this->common_function->get_user_profile($userId);
				
				if(empty($user_details))
				{
					redirect($this->config->item('base_url'));
				}
				
				
							
										
				$this->session->set_userdata('userid',$user_details['in_user_id']);					
				$this->session->set_userdata('user_name',$user_details['st_display_name']);
				$this->session->set_userdata('last_name',$user_details['st_last_name']);
				$this->session->set_userdata('email',$user_details['st_email']);
				$this->session->set_userdata('zip', $user_details['st_zip']);  //Added By Nirav 14-June-2016
				$this->session->set_userdata('ststate', $user_details['st_state']);
				
				//if($user_details['in_status']==0 && !empty($transportid))
				if(!empty($user_details) && !empty($transportid))
				{	
					$this->load->model('orgtrasnportation_model');	
					$transport_details 			= $this->orgtrasnportation_model->get_transport_details($transportid);
					if((!empty($transport_details)) && ($transport_details[0]['accTcid']==0 || $transport_details[0]['accTcid']== ''))
					{	
						$this->session->set_userdata('routing_transportid',$transportid);
						redirect($this->config->item('base_url') . "org_transportation/submitted_routing_request/");
					} else {
						$this->load->view('transportation/assigned_routing_transport');
					}	
					//redirect($this->config->item('base_url')."my-profile/");
					
				}
				else
				{
					redirect($this->config->item('base_url') . "dashboard/");
				}
				
		}

		function disable_opt_rules($uid=false,$state)
		{
			$userId		=	$this->common_function->decode_base64($uid);

			$data = array();

			$user_details = $this->common_function->get_user_profile($userId);
				
			if(empty($user_details))
			{
					redirect($this->config->item('base_url'));
			}


			$disable_state_opt_rules = array(); 
			if($state!='')
			{	
				$state_unseralize		=	$this->common_function->decode_base64($state);
				$disable_state_opt_rules	=   unserialize($state_unseralize);	
			}

			$state_listing .= '';

			if(count($disable_state_opt_rules)>0 )
			{

				foreach ($disable_state_opt_rules as $key => $value) {

				$verify_user_opt =	$this->common_model->verify_rules_optout($user_details['in_user_id'],$value);
				
				$state_name = $this->common_function->state_list[$value];

				if(next($disable_state_opt_rules))
				{
					$state_listing .= $state_name.', ';
				} else {
					$state_listing .= $state_name;
				}	

				if(count($verify_user_opt)>0)
				{

					$this->db->where('in_id',$verify_user_opt['in_id']);
					$this->db->update('tbl_state_optout',array('in_opt_out'=>"1"));
				} else {	
				
						$insert_opt_array = array('in_user_id'=>$user_details['in_user_id'],
										   			'st_state'=>trim($value),
										   	  	  'in_opt_out'=>1,
										      	  'in_deleted'=>0,
										          'dt_created'=>date('Y-m-d h:i:s'),
										          'dt_modified'=>date('Y-m-d h:i:s')
										 	 	);
				
						$this->db->insert('tbl_state_optout',$insert_opt_array);
				}

				}
					$data['state_name'] = $state_listing;

					$this->load->view('acknowledged_state_rules_thankyou',$data);

			} else {
				redirect($this->config->item('base_url'));
			}	

		}

		function array_map($array1,$array2){  

			return array_merge(isset($array1) ? $array1 : array(), isset($array2) ? $array2 : array());
		}



	public function send_test_sms(){
		$userid	=	$this->session->userdata('userid');
		$sid	=	$this->session->userdata('__ci_last_regenerate');
		$code	=	mt_rand(100000,999999);
		$to		=	$this->input->post('number');

		//$to = '(915) 213-9418';

		$verify =	$sid."/".$code;
		$this->session->set_userdata('verify',$verify);
		$this->session->set_userdata('number',$to);
		//$userdetails = $this->common_model->user_profile($userid);
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$postal_code = '';
		$country_type = trim($user_details[0]['st_country']);
		if($country_type=='USA' || $country_type=='US')
		{
							$postal_code = '+1';
		} else if($country_type=='CANADA' || $country_type=='CA')
		{
							$postal_code = '+1';
		} else if($country_type=='INDIA' || $country_type=='IN')
		{
							$postal_code = '+91';
		}  
		
		if($postal_code == '')
		{
			$user_country = $this->common_model->getaddress($this->session->userdata('zip'));
			$country_code = trim($user_country['st_country']);
			if($country_code =='CA' || $country_code=='US')
			{
							$postal_code = '+1';
			} else if($country_code =='IN')
			{
							$postal_code = '+91';
			}		
		}		
		
		
		/*if($this->input->post('check')== "No"){
			$resultdata = $this->user_model->sendsms1($code,$to);
			if($resultdata == true){
				$result = true;
			}else{
				$result = false;
			}
		}else if($to == $userdetails['st_primary_phone'] ){
				// echo "<pre>$code==="; print_r($to); echo "</pre>"; exit;
				*/
		$resultdata = $this->user_model->sendtext($code,$to,$postal_code);
		
		
			
		
		//$result = true;
		echo json_encode($resultdata);
		exit;

	}


		public function check_sms_code(){		
			$verification = $this->input->post('verification_code');
			$verify_arr = explode("/", $this->session->userdata('verify'));
			$session_id = $this->session->userdata('__ci_last_regenerate');
			$code = $verify_arr[1];
			$sid = $verify_arr[0];
			$userid = $this->session->userdata('userid');
			// echo "<pre>";print_r($this->session->userdata());
			// echo $verification;
			if($session_id == $sid && $verification == $code){
				$userarr = array(
					'in_number_verified' => 1,
					'st_primary_phone' => $this->session->userdata('number'),
					'dt_modified' =>date('Y-m-d H:i:s')
					);
				$result = $this->user_model->update_user_profile($userarr, $userid);				
				if($result){
					$this->session->unset_userdata('verify');
					$this->session->unset_userdata('number');
					$result = true;
				}
			}else{
				//echo "else";
				$result = false;
			}
			//exit;
			echo json_encode($result);
		}
		
		public function donate()
		{
			echo "<pre>";print_r($this->input->post()); echo "</pre>";
			die;
		}
		
		function send_test_mail()
		{		
					
		$this->load->library('email');
		$email_details = $this->common_model->get_email_containt("0");
		if (isset($email_details[0]['st_email_body'])) {
			$templete = $email_details[0]['st_email_body'];
			$strMail = $templete;
			$to = 'nirav.motta@pulsesolutions.net';
			$subject = $email_details[0]['st_email_subject'];
			$message = $strMail;
			$email_sent_status = 0;
			//print_r($message);exit;
			$category = $email_details[0]['st_category'];
			
				$email_sent_status = $this->common_function->send_mail($this->email, $to, $subject, $message, $this->config->item('admin_email_from'), $cc = '', $this->config->item('admin_from_name'),$this->email,$category);	
		}
		
		}
			public function coverage_area() {
		 
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		
		
		$userid = $userid = $this->session->userdata['userid'];
		
		$user_zip_code = $this->user_model->get_user_profile($this->session->userdata['userid']);
		$data['latlan']= $this->user_model->user_latlng($user_zip_code['st_zip']);
		if(!empty($_POST))
		{
			if($this->input->post('coords'))
			{	
				$coordinates	=	array('st_coverage_area' => $_POST['coords']);
				$result = $this->user_model->update_coordinate($coordinates,$userid);
				if($result)
				{
					$st_coverage_area = $this->user_model->getCoordinates($userid);
					$data['coordinates'] = $st_coverage_area['st_coverage_area'];
				
					if(!empty($st_coverage_area))
					{
						$this->session->set_flashdata('success','Coverage area map drawn.');
						redirect(base_url().'user-coverage-area');
					}
					else{
						$this->session->set_flashdata('success','Coverage area map drawn.');
						redirect(base_url().'user-coverage-area');
					}
				}
			} else {
				$this->session->set_flashdata('success','Coverage area map not drawn.');
				redirect(base_url().'user-coverage-area');
			}	
			
		}
		else
		{
			
			$st_coverage_area = $this->user_model->getCoordinates($userid);
			
			$data['coordinates'] = $st_coverage_area['st_coverage_area'];
			$data['zoom'] = $st_coverage_area['st_map_zoom'];
			$data['center'] = $st_coverage_area['st_map_center'];
			if(!empty($st_coverage_area))
			{
				
				$this->load->view('user-coverage-area',$data);
				
			}
			else{
				
				
				redirect('user-coverage-area');
			}
			
			
		}
	
       
    }
		public function update_coverage_area() {
		 
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$userid = $userid = $this->session->userdata['userid'];
		
		if(!empty($_POST))
		{
			
			$st_coverage_area = $this->user_model->getCoordinates($userid);
			
			if(isset($_POST['zoom']))
			{
				$zoom = $_POST['zoom'];
			}
			else{
				$zoom = $st_coverage_area['st_map_zoom'];
			}
			if(isset($_POST['center']))
			{
				$center = $_POST['center'];
			}
			else{
				$center = $st_coverage_area['st_map_center'];
			}
			
			
			$coordinates	=	array('st_coverage_area' => $_POST['coords'],'st_map_zoom' => $zoom, 'st_map_center' => $center);
			$st_coverage_area = $this->user_model->update_coordinate($coordinates,$userid);
			$this->session->set_flashdata('success','Coverage area map drawn successfully.');
		} else {
			$this->session->set_flashdata('success','Coverage area map not drawn.');
		}
		echo "1";
		
	
       
    }
	public function reset_coverage_area() 
	{
		if(!$this->session->userdata('userid')) 
		{
			redirect($this->config->item('base_url'));
		}
		$userid = $userid = $this->session->userdata['userid'];
		
		if(!empty($_POST))
		{
			
			$coordinates	=	array('st_coverage_area' => $_POST['coords'],'st_map_zoom' => '', 'st_map_center' => '');
			$st_coverage_area = $this->user_model->update_coordinate($coordinates,$userid);
			$this->session->set_flashdata('success','Coverage area map set to default.');
		} else {
			$this->session->set_flashdata('success','Coverage area map not set to default.');
		}
		echo "1";
		
    }
	
	public function update_general_profile()
	{
		$user_details = $this->common_model->get_user_profile($this->session->userdata('userid'));
		$verified_code = 'join_leg';
		$first_name     = $this->input->post('first_name')?$this->input->post('first_name'):'';
		$last_name 		= $this->input->post('last_name')?$this->input->post('last_name'):'';
		$email_address  = $this->input->post('email_address')?$this->input->post('email_address'):'';
		$phone_no 	    = $this->input->post('phone_no')?$this->input->post('phone_no'):'';
		$vehicle_id 	= $this->input->post('vehicle_id')?$this->input->post('vehicle_id'):'';
		$user_vehicle_type 	= $this->input->post('user_vehicle_type')?$this->input->post('user_vehicle_type'):'';
		$user_vehicle_color 	= $this->input->post('user_vehicle_color')?$this->input->post('user_vehicle_color'):'';	
		$user_vehicle_license_plate 	= $this->input->post('user_vehicle_license_plate')?$this->input->post('user_vehicle_license_plate'):'';
		$route_type = $this->input->post('route_type')?$this->input->post('route_type'):'';
		$airline_name = $this->input->post('airline_name')?$this->input->post('airline_name'):'';
		$airline_base = $this->input->post('airline_base')?$this->input->post('airline_base'):'';
		$postal_code = '';
		$exist = $this->user_model->check_email($email_address,$this->session->userdata('userid'));
			
		if ($exist <= 0)
		{	
			if($first_name!='' && $last_name!='' && $email_address!='' && $phone_no!='')
			{	
				if($user_details[0]['st_primary_phone'] != $phone_no)
				{
					$verified = 0;
				} else
				{
					if($user_details[0]['in_number_verified'] == 1)
					{
						$verified = 1;
					}else
					{
						$verified = 0;
					}
				}
		
				$user_info 		= array("st_display_name" => $first_name,
									   "st_last_name" => $last_name,
							               "st_email" => $email_address,
							            "dt_modified" => date('Y-m-d H:i:s'),
								);
				$profile_info 	= array("st_primary_phone" => $phone_no,"dt_modified" => date('Y-m-d H:i:s'),"in_number_verified" => $verified);
				$data['user_profile'] = $this->user_model->update_user_info($profile_info, $this->session->userdata('userid'), 'tbl_user_profile');
				$data['user_info'] = $this->user_model->update_user_info($user_info, $this->session->userdata('userid'), 'tbl_users');
				if($route_type==0)
				{
					$arrVehicle	 = 	  array('st_vehicle_type'			=> $user_vehicle_type,
											'st_vehicle_color'			=> $user_vehicle_color,
											'st_vehicle_license_plate'	=> $user_vehicle_license_plate,										
											'dt_modified'				=> date('Y-m-d H:i:s'),
											);	
					if($vehicle_id!='')
					{															
						$this->db->where('in_vehicle_id',$vehicle_id);
						$this->db->update('tbl_user_vehicle', $arrVehicle);
					}	
			
				} else if($route_type==1)
				{
					$planeVehicle	 = 	  array('st_plane_type'				=> $user_vehicle_type,
												'st_plane_color'			=> $user_vehicle_color,
												'st_plane_number'			=> $user_vehicle_license_plate,										
												'dt_modified'				=> date('Y-m-d H:i:s'),
												);	
					if($vehicle_id!='')
					{															
						$this->db->where('in_pilot_id',$vehicle_id);
						$this->db->update('tbl_user_pilot', $planeVehicle);
					}	
			
				} else if($route_type==3)
				{
					$airline_emp	 = 	  array('st_base_name'				=> $airline_base,
												'st_airline_name'			=> $airline_name,										
												'dt_modified'				=> date('Y-m-d H:i:s'),
												);	
					if($vehicle_id!='')
					{															
						$this->db->where('in_id',$vehicle_id);
						$this->db->update('tbl_user_airline_employee',$airline_emp);
					}	
			
				}	
			
				if($verified == 0)
				{
					$country_type = trim($user_details[0]['st_country']);
					if($country_type=='USA' || $country_type=='US')
					{
							$postal_code = '+1';
					} else if($country_type=='CANADA' || $country_type=='CA')
					{
							$postal_code = '+1';
					} else if($country_type=='INDIA' || $country_type=='IN')
					{
							$postal_code = '+91';
					}  

					if($postal_code == '')
					{
						$user_country = $this->common_model->getaddress($this->session->userdata('zip'));
						$country_code = trim($user_country['st_country']);
						if($country_code == 'CA' || $country_code == 'US')
						{
							$postal_code = '+1';
						} else if($country_code == 'IN')
						{
							$postal_code = '+91';
						}		
					}		
					
					$verified_code = $this->get_sms_code($phone_no,$postal_code);
				}	
		
				echo $verified_code;						
			}
		} else {
			echo '3';
		}
	}	

	public function get_sms_code($phone_number,$postal_code)
	{
		$userid	=	$this->session->userdata('userid');
		$sid	=	$this->session->userdata('__ci_last_regenerate');
		$code	=	mt_rand(100000,999999);
		$to		=	$phone_number;

		//$to = '(915) 213-9418';

		$verify =	$sid."/".$code;
		$this->session->set_userdata('verify',$verify);
		$this->session->set_userdata('number',$to);
		$resultdata = $this->user_model->sendtext($code,$to,$postal_code);
		return $resultdata;

	}

	function user_profile_redirect($id)
	{
		$user_details = $this->common_model->get_user_profile($id);
		$first_name_link = str_replace(' ', '',$user_details[0]['st_display_name']);
		$last_name_link = str_replace(' ', '',$user_details[0]['st_last_name']);
		redirect($this->config->item('base_url')."user-".$user_details[0]['in_user_id']."-".$first_name_link."-".$last_name_link);
	}
	
	public function update_email()
	{
		
		$email_add = $this->input->post('fb_emailid');
		
		$exist = $this->user_model->check_email($email_add,$this->session->userdata('userid'));
			
		if ($exist <= 0)
		{
				$this->db->where('in_user_id',$this->session->userdata('userid'));
				$this->db->update('tbl_users',array('st_email'=>$email_add));
				echo json_encode(1);
		} else {		
			echo json_encode(0);
		}
		
	}
	
	
	
	public function invite_user_direct() {
	
		if($this->input->post('invite_frm_action')=='invite_frm_value') {
			
			$this->load->model('org_info_model');
			
			if(!($this->session->userdata('userid')))
			{
				redirect($this->config->item('base_url'));
			}
			
			
			
			//echo '<pre>'; print_r($_POST); die;
			$user_data['org_id'] = $this->input->post('org_id');
			$user_data['pick_org'] = $this->input->post('pick_org');
			$user_data['org_email_address'] = $this->input->post('org_email_address');
			$user_data['invite_user_id'] = $this->input->post('invite_user_id');
			$user_data['in_user_id'] = $this->input->post('sess_user_id');
			$user_data['user_name'] = $this->session->userdata('user_name');
			$user_data['email'] = $this->session->userdata('email');
			
			$recordexist=$this->common_model->check_org_permission_exist($user_data['in_user_id'],$user_data['org_id']);
			
			if($recordexist == true)
			{
				$this->session->set_flashdata('invitation_error','Request already sent to this organization.');
				redirect(base_url().'dashboard/');
			}
			
			$permission_str = $_POST;
			
			//Unsetting hidden value
			unset($permission_str['invite_frm_action']);
			unset($permission_str['invite_user_id']);
			unset($permission_str['org_id']);
			unset($permission_str['pick_org']);		
			
			if(($this->input->post('transport') || $this->input->post('profile_manager') || $this->input->post('fundraiser')) && $this->input->post('view_only')){
				unset($permission_str['view_only']);
			}
			
			
			//Serialize permission array
			$user_permission = (!empty($permission_str))?serialize($permission_str):'';
			
			//print_r($user_permission);exit; //use for tseting
			//Insert user & permissions
			$data['org_users'] = array('in_organization_id'		=>	$user_data['org_id'],
										'in_user_id'			=>	$this->session->userdata('userid'),
										'st_transport_cood'		=>	isset($permission_str['transport'])?'Y':'N',
										'st_fundraiser'			=>	isset($permission_str['fundraiser'])?'Y':'N',
										'st_animal_profile'		=>	isset($permission_str['profile_manager'])?'Y':'N',
										'st_permission'			=>	$user_permission,
										'in_invite_by'			=>	$user_data['invite_user_id'],
										'dt_created'			=>	date('Y-m-d H:i:s'),
										'in_status'				=>	'5',
										'in_deleted'			=>	'0',
										'in_request_type'       =>  1
									);
			
			$data['check_user_status'] = $this->org_info_model->check_user_status($user_data['invite_user_id']);
			
			if(empty($data['check_user_status'])) {
				$data['insert_permission'] = $this->org_info_model->insert_permission($data['org_users']);
				$last_id = $this->db->insert_id();
			} else {
				$last_id = $data['check_user_status']['in_org_user_id'];
				$data['insert_permission'] = 1;
			}
			if($data['insert_permission'] == 1) {
				
				$this->load->library('email');
				
				$to = $user_data['org_email_address'];
				//$to = 'sadique.mohammed@pulsesolutions.net';
				
				//Getting email body
				$email_body = $this->common_model->get_email_containt('168');
				

			
				//echo $user_data['invite_user_id']; die;
				$subject = str_replace('##organization_display_name##',$user_data['pick_org'],$email_body[0]['st_email_subject']);
				
				$patterns 	= array('%##user_display_name##%','%##organization_display_name##%','%##url##%','%##accept_link##%','%##reject_link##%');
				$replacements = array($this->session->userdata('user_name'),$user_data['pick_org'],base_url(),base_url().'user/accept_request2/'.base64_encode($user_data['in_user_id']).'/'.base64_encode($user_data['org_id']).'/'.base64_encode($last_id).'/'.base64_encode($user_data['invite_user_id']),base_url().'user/reject_request2/'.base64_encode($user_data['in_user_id']).'/'.base64_encode($user_data['org_id']).'/'.base64_encode($last_id).'/'.base64_encode($user_data['pick_org']));
				
				
				$content = preg_replace($patterns, $replacements, $email_body[0]['st_email_body']);//die;
				$category  =    $email_body[0]['st_category'];
				
				$user_to_id = $this->common_model->get_user_id_by_email($user_data['org_email_address']);
						
				$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->input->post('user_email')),$content);		
				$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->input->post('user_email')),$content);		
				
				$content  	= 	str_replace("##DONATION##",$donation,$content);
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{		
				
					$this->common_function->send_mail($this->email, $to, $subject, $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
				}
				
				$this->session->set_flashdata('message','Request has been sent successfully. Organization will get back to you soon.');
				redirect(base_url().'dashboard/');
			} else {
				$this->session->set_flashdata('message','Error sending invitation.');
				redirect(base_url().'dashboard/');
			}
		}
	}
	
	
	public function accept_request2($user_id='',$org_id='',$last_id='',$orgownerid='') {
		
		$this->session->unset_userdata('userid');
		$this->session->unset_userdata('org_id');
		
		$data = array();
		
		$org_id=base64_decode($org_id);
		$user_id=base64_decode($user_id);
		$last_id=base64_decode($last_id);
		$orgownerid=base64_decode($orgownerid);	
	    $this->user_model->update_org_user($user_id,$orgownerid);		
		
		$get_org_details = $this->user_model->update_user_req_info2($last_id);			
		
		$this->session->set_userdata('userid',$orgownerid);	
		$this->session->set_userdata('org_id',$org_id);		
		redirect(base_url().'user-profile/'.$user_id);		
	}
	
	public function reject_request2($user_id='',$org_id='',$last_id='', $pic_org) {		
		
		$data = array();		
		$uid=base64_decode($user_id);
		$orgname=base64_decode($pic_org);
		$userdts = $this->common_model->get_user_dts($uid);	
		
		
		$arrOrg = 	array('in_status' 	=> '4', 'in_deleted' => 1);
		$get_org_details = $this->user_model->update_user_req_info(base64_decode($last_id),$arrOrg,base64_decode($user_id),base64_decode($org_id));
		($get_org_details == 1)?$data['request'] = 4:'';
		
		// mail starts		
		if($get_org_details == 1){ 
		$email_body = $this->common_model->get_email_containt('170');      // 15
		$q			=	$this->common_model->get_affiliate_donation_detail('3');
		$this->load->library('email');

			if(isset($q) && !empty($q)){					   		
				foreach($q as $qr)
				{		 
					  
					if(!empty($qr['st_image']))
					{		
						
							$imgpath	=	$this->config->item('upload_url').'affiliate_images/orig/'.$qr['st_image'];
							$imgtitle   =   $qr['st_banner_name']; 				
							$donation	    = '<a href='.$qr['st_url'].'><img src="'.$imgpath.'" 

							alt="'.$imgtitle.'" title="'.$imgtitle.'" border="0" style="margin-top: 20px;"/></a>';											
						  
						  
					}
					else
					{
						   $donation='';								 
					}							  
						
				}
			}			
			   
		   else
		   {
			  $donation='';
		   }
			
						
			   
		  
				//echo $user_data['invite_user_id']; die;
				$subject = str_replace('##organization_display_name##',$orgname,$email_body[0]['st_email_subject']);
				
				$patterns 	= array('%##organization_display_name##%','%##rejected_user_email##%');
				$replacements = array($orgname,$userdts['st_email']);
				
				
				$content = preg_replace($patterns, $replacements, $email_body[0]['st_email_body']);//die;
				$category  =    $email_body[0]['st_category'];
				
				$to  = $userdts['st_email'];
				
				$user_to_id = $this->common_model->get_user_id_by_email($userdts['st_email']);
						
				$content = str_replace("##change_to_daily_digest##",base_url().'user/update_daily_digest/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->input->post('user_email')),$content);		
				$content = str_replace("##unsubscribe_url##",base_url().'user/unsubscribe_complete/'.$this->common_function->encode_base64($user_to_id).'/'.$this->common_function->encode_base64($this->input->post('user_email')),$content);		
				
				
				$send_email = 1;							
				$sub_data = $this->common_model->check_user_unsub_emails($user_to_id);
				if(isset($sub_data) && $sub_data['flg_daily_email'] == '2' && $sub_data['flg_immediate_all'] == '2' && $sub_data['flg_immediate_transport'] == '2' && $sub_data['flg_immediate_animal'] == '2' && $sub_data['flg_immediate_fund'] == '2')
				{
					$send_email = 0;										
				}
				
				$email_template_id = $email_body[0]['in_email_id'];
				$template_allowed = $this->common_model->check_allowed_even_blocked($email_template_id);
				if(isset($template_allowed) && isset($template_allowed['in_allow_status']) && $template_allowed['in_allow_status'] == '1')
				{
					$send_email = 1;
				}
				
				if($send_email == '1')
				{			
					$content  	= 	str_replace("##DONATION##",$donation,$content);
					//$this->common_function->send_mail($this->email, $to, $subject, $content, $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'),$this->email,$category);
					  $this->common_function->send_mail($this->email, $to, $subject, $content,  $this->config->item('admin_email_from'),$cc ='', $this->config->item('admin_from_name'));	
		
				}
		
		//mail ends
		}
		$this->load->view('user_request',$data);
		
		
	}
	
	function ip_visitor_country()
	{
		$client  = @$_SERVER['HTTP_CLIENT_IP'];
		$forward = @$_SERVER['HTTP_X_FORWARDED_FOR'];
		$remote  = $_SERVER['REMOTE_ADDR'];
		$country  = "Unknown";

		if(filter_var($client, FILTER_VALIDATE_IP))
		{
			$ip = $client;
		}
		elseif(filter_var($forward, FILTER_VALIDATE_IP))
		{
			$ip = $forward;
		}
		else
		{
			$ip = $remote;
		}
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, "http://www.geoplugin.net/json.gp?ip=".$ip);
		curl_setopt($ch, CURLOPT_HEADER, 0);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
		$ip_data_in = curl_exec($ch); // string
		curl_close($ch);

		$ip_data = json_decode($ip_data_in,true);
		
		echo "<pre>"; print_r($ip_data_in); echo "</pre>";
		die;
		/*$ip_data = str_replace('&quot;', '"', $ip_data); // for PHP 5.2 see stackoverflow.com/questions/3110487/

		if($ip_data && $ip_data['geoplugin_countryName'] != null) 
		{
			$country = $ip_data['geoplugin_countryName'];
		}

		return 'IP: '.$ip.' # Country: '.$country;*/
	}
	
	function ip_visitor()
	{
		/*$client  = @$_SERVER['HTTP_CLIENT_IP'];
		$forward = @$_SERVER['HTTP_X_FORWARDED_FOR'];
		
		$country  = "Unknown";
		
		if(filter_var($client, FILTER_VALIDATE_IP))
		{
			$ip = $client;
		}
		elseif(filter_var($forward, FILTER_VALIDATE_IP))
		{
			$ip = $forward;
		}
		else
		{
			$ip = $remote;
		}*/
		$remote  = $_SERVER['REMOTE_ADDR'];
		//$ip = '103.212.140.224';
		//http://api.ipstack.com/103.212.140.224?access_key=235748a79234afc7a79488411265f939&output=json&legacy=1
		$arr_location = file_get_contents("http://api.ipstack.com/$remote?access_key=235748a79234afc7a79488411265f939&output=json&legacy=1");
		$location = json_decode($arr_location);
		echo "<pre>"; print_r($location); echo "</pre>";
		echo "<pre>"; print_r($location->zip_code); echo "</pre>";
		die;
		/*$ip_data = str_replace('&quot;', '"', $ip_data); // for PHP 5.2 see stackoverflow.com/questions/3110487/

		if($ip_data && $ip_data['geoplugin_countryName'] != null) 
		{
			$country = $ip_data['geoplugin_countryName'];
		}

		return 'IP: '.$ip.' # Country: '.$country;*/
	}
	
	public function setdownloadappcookie()
	{		
		if(!isset($_COOKIE['appuser'])) {
		setcookie("appuser", "john", time() + 60, "/"); // 60 * 60 * 24 * 30 one month
		} 	
	}
	
	public function markallread()
	{
		$data['user_visit_data'] = array('in_user_id'			=>	$this->session->userdata('userid'),
										 'st_visit_type'		=>	'MYNOTIFICATIONS',
										 'st_ip_address'		=>	$this->input->ip_address(),
										 'dt_created'			=>	date('Y-m-d H:i:s')
										);
		$data['visit_created'] = $this->common_model->insert_last_visit_date($data['user_visit_data']);
		$this->common_model->update_org_permission();
	}


	//rajashri mahapure
	//function to take action after sending and receiving mail button click events
	function participant_accept($userId, $orgId)
	{	
		$userId		=	$this->common_function->decode_base64($userId);
		$orgId		=	$this->common_function->decode_base64($orgId);	
		$user_details = $this->common_function->get_user_profile($userId);
		
			

		$this->session->set_userdata('userid',$user_details['in_user_id']);					
		$this->session->set_userdata('user_name',$user_details['st_display_name']);
		$this->session->set_userdata('last_name', $user_details['st_last_name']);
		$this->session->set_userdata('email',$user_details['st_email']);
		$this->session->set_userdata('ststate', $user_details['st_state']);
		$this->session->set_userdata('stcountry', $user_details['st_country']);


		$org_detail = $this->common_model->get_single_org_details($orgId);
		

		if($orgId != '') { 
			$this->session->set_userdata('org_id',$orgId);				
			$this->session->set_userdata('org_name',$org_list[0]['st_org_name']);
			$this->session->set_userdata('org_zip',$org_detail['st_zip']);
			$this->session->set_userdata('storgtype',$org_detail['st_org_type']);			 
			setcookie("local_organization_id",$orgId,0,"/",'crystal99');
		} else {
			$orgId = '';
		}		
		if(empty($user_details) && empty($org_detail))
		{
			redirect($this->config->item('base_url'));
		}else
		{
			redirect($this->config->item('base_url').'org_dashboard/pending_transport');		
		}
	}

	//rajashri mahapure
	//function to take action after sending and receiving mail button click events
	function participant_decline($userId, $orgId)
	{		
		$this->participant_accept($userId, $orgId);
	}

	public function reset_volunteer_pin()
	{		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$userid = $this->session->userdata['userid'];		
		$coordinates	=	array('lat' => '','lon' => '');
		$st_coverage_area = $this->user_model->update_volunteer_map_pin($coordinates,$userid);
		$this->session->set_flashdata('success','Volunteer pin set to default.');		
		echo "1";		
	}
	
	public function update_volunteer_map_pin() {
		 
		
		if(!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$userid = $userid = $this->session->userdata['userid'];
		
		if(!empty($_POST))
		{		
			//$st_coverage_area = $this->user_model->getCoordinates($userid);
			
			$coordinates	=	array('lat' => $_POST['lt'],'lon' => $_POST['ln']);
			$st_coverage_area = $this->user_model->update_volunteer_map_pin($coordinates,$userid);
			$this->session->set_flashdata('success','Volunteer pin updated successfully.');
		} echo "1";       
    }
	
	public function my_doobert_volunteer_pin() 
	{ 
		if (!$this->session->userdata('userid')) {
			redirect($this->config->item('base_url'));
		}
		$st_coverage_area = $this->user_model->getLatLon($this->session->userdata('userid'));
		
		
		
		if($st_coverage_area['lat'] =='0.000000' && $st_coverage_area['lon'] =='0.000000'){ 
		$data['latlon']= $this->user_model->user_latlng($this->session->userdata('zip'));
		}
		else if($st_coverage_area['lat'] == '' && $st_coverage_area['lon'] == '' ){
			$data['latlon']= $this->user_model->user_latlng($this->session->userdata('zip'));
		}
		else{ 
			$data['latlon']= $st_coverage_area;
			//print_r($data['latlon']); die;
			
		}
		
		
		//print_r($st_coverage_area['st_lon']);   die;  // 0.000000
		
		$this->load->view('doobert-volunteer-pin', $data);
	}

}

/* End of file user.php */
/* Location: ./application/controllers/user.php */