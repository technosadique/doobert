<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
# ------------------------------
# Created by: sadique mohammad
# Created date: 26-Dec-2011
# File description: Members(controller)
# Special instructions-notes: none
# Tables used: none
# Stored procedures: none 
# Triggers used: none
# ------------------------------

class History extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -  
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in 
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see http://codeigniter.com/user_guide/general/urls.html
	 */
	 public function __construct()
    {
		parent::__construct();				
		$this->load->library('common_function');
		//error_reporting(E_ALL);		
		$this->load->library('pagination');		
		$this->load->library('form_validation');	
		$this->load->model('history_model');	
		$this->load->helper(array('form', 'url'));	   	
	}	
	public function index()
	{
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }	
			$this->session->unset_userdata('searchadmin1');
			$this->session->unset_userdata('searchadmin2');			
			$this->page();		
	}
	
	
	function page($sort=false,$order=false,$limit=false)
	{
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		$data			 	=	array();
		$data['Err_Msg']	=	'';
		$name				=	'';	
		$email				=	'';	
		
		
		// SET DEFAULT RULES FOR PAGE LIST RESULT 
		if(!$sort)
			$sort='name';
		
		if(!$order)
			$order = 'asc';
			
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';
	
		// GET SEARCH KEYWORDS AND MAINTAIN FOR PAGINATION
		
		if($this->input->post('txtsearchname') || ($this->input->post('action') == 'search'))
		{	
				
				if($this->session->userdata('searchadmin1'))
				$this->session->unset_userdata('searchadmin1');						
				
			$name = trim(addslashes($this->input->post('txtsearchname')));				
			$this->session->set_userdata('searchadmin1',$this->common_function->custom_htmlentities($name));		
				
		}
		
		if($this->input->post('txtsearchemail') || ($this->input->post('action') == 'search'))
		{	
			
			if($this->session->userdata('searchadmin2'))
				$this->session->unset_userdata('searchadmin2');			
				$email = trim(addslashes($this->input->post('txtsearchemail')));	
				$this->session->set_userdata('searchadmin2',$email);			
				
		}
		
		if($this->input->post('txtsearchemail') && ($this->input->post('txtsearchname')))
		{			
			
			if($this->session->userdata('searchadmin1'))
				$this->session->unset_userdata('searchadmin1');			
				$name = trim(addslashes($this->input->post('txtsearchname')));	
				$this->session->set_userdata('searchadmin1',$name);		
				$email = trim(addslashes($this->input->post('txtsearchemail')));	
				$this->session->set_userdata('searchadmin2',$email);		
				
		}
		
		$rec_per_page =	 $this->config->item('per_page');	
		
		// GET COUNT of TOTAL RECORDS
		$totalrecord		= $this->history_model->get_total_history($this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2')); 
		// GET PAGE LIST RESULT HERE
		
		$data['history_list']	= $this->history_model->get_history($sort,$order,$limit,$rec_per_page,$this->session->userdata('searchadmin1'),$this->session->userdata('searchadmin2'));
		
		//echo '<pre>'; print_r($data['history_list']); die;
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('admin_base_url').'history/page/';
		$config['base_url']		= $config['base_url'].$sort.'/'.$order.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['first_link'] 	= FALSE;
		$config['last_link'] 	= FALSE;
		
		$config['prev_tag_open'] = "<li class=\"prev\">";
		$config['prev_link']  = "<i class=\"fa fa-angle-left\" title=\"Prev\"></i>";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open'] = "<li class=\"next\">";
		$config['next_link']  = "<i class=\"fa fa-angle-right\" title=\"Next\"></i>";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open'] = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']		=	'<li>';
		$config['num_tag_close'] 	=	'</li>';		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $totalrecord ) ? $totalrecord : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']	  	   = $to;	
		
		// ------------------------ PAGINATION ENDS HERE -------------------------------		
		
		// SET DATA to MAINTAIN record track on any action
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;

		
		$this->session->set_userdata('a_sort',$sort);
		$this->session->set_userdata('a_order',$order);
		$this->session->set_userdata('a_limit',$limit);
		
		if($totalrecord == 0)
		{
			$data['Err_Msg'] = 'No history subscription information available.';
		}
		$data['adminId']	=	$this->session->userdata('sess_admin_id');
		$this->load->view('history-manage',$data);
	}
	
	
	function history_delete()
	{	
	
	
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));		
		}
		$subscriptionId	=	$this->uri->segment(3); 
		$this->history_model->delete_history($subscriptionId);			
		$this->session->set_flashdata('success', 'History subscription information has been deleted successfully.');		
		redirect($this->config->item('admin_base_url').'history');
		
	}
	
	
	
	
	
	function delete_multiple_history()
	{ 	    
		$subscription_ids = $this->input->post('subscriptionid');	
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));	
		}
	
		if(!empty($subscription_ids) && $this->input->post('B2') == 'Delete')
		{	
			$this->history_model->delete_multiple_history($subscription_ids);
			
			$this->session->set_flashdata('success', 'History subscription(s) information has been deleted successfully.');			
		}
			$sort 	= $this->session->userdata('a_sort');
			$order  = $this->session->userdata('a_order');
			$limit	= 0;
			
		if($this->session->userdata('a_limit'))
		{  
			$limit	= $this->session->userdata('a_limit');
		}
		redirect($this->config->item('admin_base_url').'history/page/'.$sort.'/'.$order.'/'.$limit);
			
	}
	
	
	function history_view($subscriptionId=false)
	{	
	
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		
		$data['history_details'] = $this->history_model->get_history_details($subscriptionId);
		//echo '<pre>'; print_r($data['history_details']); die;
		if(count($data['history_details'])==0)
		{
			redirect($this->config->item('admin_base_url'));
		}		
		
		$this->load->view('history-manage-view',$data);			
	}
	
	
	
	function history_edit($subscriptionId=false)
	{		
		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }
		$data			 =	array();
		$data['Err_Msg']	=	'';		
		$form_field	=	array(//'subscription_type'		=> "",	
							 // 'subscription_amt'		=> "",
							  'dt_created'				=> "",
							  'dt_renewal'				=> "",
							  'status'					=> ""							 								  
								);
			foreach($form_field as $key => $value)	
			{	
				$data['edit'][$key] = $value;	
			}	
		$data['history_details'] = $this->history_model->get_history_details($subscriptionId);
		//echo "<pre>";print_r($data['history_details']);die;
		if($this->input->post('action')=='Edit')
		{   
			//Validation rules
						$subscriptionId		   = $this->input->post('subscription_id');
						$data['history_details'] = $this->history_model->get_history_details($subscriptionId);
			
			foreach ($form_field as $key => $value) {	
					$data['edit'][$key] = $this->common_function->custom_htmlentities($this->input->post($key));	
				}
						//$this->form_validation->set_rules('subscription_type', 'Subscription Type', 'trim|required');
						//$this->form_validation->set_rules('subscription_amt',  'Subscription Amount',  'trim|required');
						$this->form_validation->set_rules('dt_created', 		'Subscription Date',  'trim|required');
						$this->form_validation->set_rules('dt_renewal', 		'Renewal Date',  'trim|required');
						$this->form_validation->set_rules('status',  'Status',  'trim|required');						
						
				
			
			if($this->form_validation->run() == FALSE)
				{
						$data['Err_Msg'] = validation_errors();						
						$data['history_details'] = $this->history_model->get_history_details($subscriptionId);			
						$this->load->view('history-manage-edit',$data);	
				}
			
				else
				{ 		 
						$history_info 		= array();
						
						//$history_info['in_subscription_type'] 		=	$this->input->post('subscription_type');
						$history_info['dt_created'] 				=	date('Y-m-d',strtotime($this->input->post('dt_created')));		
						$history_info['dt_renewal'] 				=	date('Y-m-d',strtotime($this->input->post('dt_renewal')));
						
						//$history_info['in_subscription_amt'] 		=	$this->input->post('subscription_amt');
						$history_info['in_status'] 				    =	$this->input->post('status');
						
						
						//Updating admin data
						$data['history_profile']	=	$this->history_model->update_history_info($history_info,$subscriptionId,'tbl_user_subscription');					
						$this->session->set_flashdata('message', 'You have successfully updated history subscription details!');					
						redirect(site_url('history/history_edit/'.$subscriptionId));
				}
		}
		
		else
		{				
			$this->load->view('history-manage-edit',$data);
		}
	}
}

/* End of file history.php */
/* Location: ./application/controllers/history.php */