<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); 

# ------------------------------
# Created by: sadique mohammad
# Created date: 25-Mar-2014
# File description: Rejected_organizations(controller)
# Special instructions-notes: none
# Tables used: none
# Stored procedures: none 
# Triggers used: none
# ------------------------------

class Rejected_organizations extends CI_Controller {
	public function __construct()
    {
		parent::__construct();		
		$this->load->library('common_function');		
		$this->load->library('pagination');
		$this->load->library('form_validation');	
		$this->load->model('organization_model');
		$this->load->helper(array('form', 'url'));
		$this->load->library('user_agent');
		$this->load->library('nativesession');	  	
	}	
	
	function index()
	{
		
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }		
		if($this->nativesession->get('searchadmin1')){$this->nativesession->delete('searchadmin1'); }		
		if($this->nativesession->get('searchadmin2')){$this->nativesession->delete('searchadmin2'); }
		if($this->nativesession->get('searchadmin3')){$this->nativesession->delete('searchadmin3'); }
	    if($this->nativesession->get('searchadmin4')){$this->nativesession->delete('searchadmin4'); }
		if($this->nativesession->get('searchadmin5')){$this->nativesession->delete('searchadmin5'); }
		if($this->nativesession->get('searchadmin6')){$this->nativesession->delete('searchadmin6'); }
		if($this->nativesession->get('searchadmin7')){$this->nativesession->delete('searchadmin7'); }
		if($this->nativesession->get('searchadmin8')){$this->nativesession->delete('searchadmin8'); }	
		$this->page();	
	}	
	
	function page($sort=false,$order=false,$limit=false)
	{ 
		if(!$this->session->userdata('sess_admin_id'))
		 {
			$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
			$this->session->set_userdata('redirect_url',$url);
			redirect($this->config->item('admin_base_url'));	
		 }	
		$data			 	=	array();
		$data['Err_Msg']	=	'';	
		$name				=	'';
		$zip				=	'';
		$certified			=	'';
		$contract			=	'';
		$fromdate			=	'';
		$todate				=	'';
		$state				=	'';		
		
		// SET DEFAULT RULES FOR PAGE LIST RESULT 
		if(!$sort)
			$sort='id';
		
		if(!$order)
			$order = 'asc';
			
		if($this->uri->segment(5))
			$limit = $this->uri->segment(5);
		else	
			$limit = '0';
		
		// Get Action Msg on successful ADD/ EDIT/ DELETE/ UPLOAD		
	
		// GET SEARCH KEYWORDS AND MAINTAIN FOR PAGINATION
		
		if($this->input->post('txtname') || ($this->input->post('action') == 'search'))
		{
			
			$name = trim(addslashes($this->input->post('txtname')));				
			$this->nativesession->set('searchadmin1',$this->common_function->custom_htmlentities($name));	
				
		}		
		
		if($this->input->post('txtzipcode') || ($this->input->post('action') == 'search'))
		{
			$zip_code = $this->input->post('txtzipcode');
			$zip_code = str_replace(" ","",$zip_code);
			$_POST['txtzipcode'] = strtoupper($zip_code);			
			$zip = trim(addslashes($this->input->post('txtzipcode')));				
			$this->nativesession->set('searchadmin2',$this->common_function->custom_htmlentities($zip));			
				
		}
		
		
		if($this->input->post('txtcertified') || ($this->input->post('action') == 'search'))
		{
			$certified = trim($this->input->post('txtcertified')); 				
			$this->nativesession->set('searchadmin3',$certified);			
				
		}
		
		if($this->input->post('txtcontract') || ($this->input->post('action') == 'search'))
		{
			
			$contract = trim($this->input->post('txtcontract')); 				
			$this->nativesession->set('searchadmin4',$contract);		
				
		}
		
		
		
		if($this->input->post('txtfrom') || ($this->input->post('action') == 'search'))
		{
			$fromdate = date('Y-m-d',strtotime($this->input->post('txtfrom'))); 			
			$this->nativesession->set('searchadmin5',$fromdate);		
				
		}
		
		if($this->input->post('txtto') || ($this->input->post('action') == 'search'))
		{			
			$todate = date('Y-m-d',strtotime($this->input->post('txtto'))); 			
			$this->nativesession->set('searchadmin6',$todate);	
				
		}
		
		
		if($this->input->post('txtstate') || ($this->input->post('action') == 'search'))
		{
			$state = trim($this->input->post('txtstate'));				
			$this->nativesession->set('searchadmin7',$state);
		}
		if($this->input->post('country') || ($this->input->post('action') == 'search'))
		{
			$country = trim($this->input->post('country')); 				
			$this->nativesession->set('searchadmin8',$country);				
				
		}
		
		$rec_per_page =	  $this->config->item('per_page');	
		
		// GET COUNT of TOTAL RECORDS
		$totalrecord		= $this->organization_model->get_total_rejected_organization($this->nativesession->get('searchadmin1'),$this->nativesession->get('searchadmin2'),$this->nativesession->get('searchadmin3'),$this->nativesession->get('searchadmin4'),$this->nativesession->get('searchadmin5'),$this->nativesession->get('searchadmin6'),$this->nativesession->get('searchadmin7'),$this->nativesession->get('searchadmin8'));
		// GET PAGE LIST RESULT HERE
		
		$data['org_list']	= $this->organization_model->get_rejected_organization($sort,$order,$limit,$rec_per_page,$this->nativesession->get('searchadmin1'),$this->nativesession->get('searchadmin2'),$this->nativesession->get('searchadmin3'),$this->nativesession->get('searchadmin4'),$this->nativesession->get('searchadmin5'),$this->nativesession->get('searchadmin6'),$this->nativesession->get('searchadmin7'),$this->nativesession->get('searchadmin8'));
		
		//echo '<pre>'; print_r($data['advertiser_list']); die;
		
		// ------------------------ PAGINATION STARTS HERE -----------------------------
		$config['base_url'] 	= $this->config->item('admin_base_url').'rejected_organizations/page/';
		$config['base_url']		= $config['base_url'].$sort.'/'.$order.'/';
		$config['total_rows'] 	= $totalrecord;
		$config['per_page'] 	= $rec_per_page;
		$config['cur_page'] 	= $limit;
		$config['num_links'] 	= '3';
		$config['first_link'] 	= FALSE;
		$config['last_link'] 	= FALSE;
		
		$config['prev_tag_open'] = "<li class=\"prev\">";
		$config['prev_link']  = "<i class=\"fa fa-angle-left\" title=\"Prev\"></i>";
		$config['prev_tag_close'] = "</li>";		
		
		$config['next_tag_open'] = "<li class=\"next\">";
		$config['next_link']  = "<i class=\"fa fa-angle-right\" title=\"Next\"></i>";
		$config['next_tag_close'] = '</li>';
			
		$config['cur_tag_open'] = '<li class="active"><a  href="#" >';
		$config['cur_tag_close'] = '</a></li>';
		$config['num_tag_open']		=	'<li>';
		$config['num_tag_close'] 	=	'</li>';		
		$config['display_pages'] = TRUE;  	 			
		$this->pagination->initialize($config);
		$data['pagination'] = $this->pagination->create_links();
		$data['total_rows'] = $config['total_rows'];
		$data['currrent_page'] = floor(($config['cur_page']/$config['per_page']) + 1);
		$data['total_no_page'] = ceil($config['total_rows']/$config['per_page']);
		$data['per_page'] = $config['per_page'];
		$from					=	($data['currrent_page'] * $rec_per_page - $rec_per_page)+1;
		$to						=	( ($data['currrent_page'] * $rec_per_page) > $totalrecord ) ? $totalrecord : ($data['currrent_page'] * $rec_per_page);
		$data['from']	   = $from;
		$data['to']	  	   = $to;			
	
		// ------------------------ PAGINATION ENDS HERE -------------------------------		
		
		// SET DATA to MAINTAIN record track on any action
		$data['sort']	=	$sort;
		$data['order']	=	$order;
		$data['limit']	=	$limit;
		$data['org_type_arr'] = $this->common_function->org_type;
		$this->session->set_userdata('a_sort',$sort);
		$this->session->set_userdata('a_order',$order);
		$this->session->set_userdata('a_limit',$limit);
		
		if($totalrecord == 0)
		{
			$data['Err_Msg'] = 'No Organization Information Available.';
		}
		
		$this->load->view('rejected-oranizations',$data);
	}
	
	
	function delete_multiple_org()
	{   
	    if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));
		}
		$org_ids = $this->input->post('orgid');
		if(!$this->session->userdata('sess_admin_id'))
		{
			redirect($this->config->item('admin_base_url'));		
		}
	
		if(!empty($org_ids) && $this->input->post('B2') == 'Delete')
		{	
			$this->organization_model->delete_multiple_org($org_ids);
			
			$this->session->set_flashdata('success', 'Organization(s) information has been deleted successfully.');			
		}
			$sort 	= $this->session->userdata('a_sort');
			$order  = $this->session->userdata('a_order');
			$limit	= 0;
			
		if($this->session->userdata('a_limit'))
		{  
			$limit	= $this->session->userdata('a_limit');
		}
		redirect($this->config->item('admin_base_url').'rejected_organizations/page/'.$sort.'/'.$order.'/'.$limit);
			
	}
	
	function organization_view($orgId)
	{
		
			if(!$this->session->userdata('sess_admin_id'))
			 {
				$url="http://".$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
				$this->session->set_userdata('redirect_url',$url);
				redirect($this->config->item('admin_base_url'));	
			 }			
			
			$data['org_details'] 					= $this->organization_model->get_org_info($orgId);							
			$data['ref_details'] 					= $this->organization_model->get_ref_details($orgId); 
			$data['org_approve_letter'] 			= $this->organization_model->get_org_approve_letter($orgId);
			$data['org_approve_letter_count']		= count($data['org_approve_letter']);	
			$data['guideline_links_details']		= $this->organization_model->get_guideline_links($orgId);
			$data['organization_files'] 			= $this->organization_model->get_org_guideline_files($orgId);
			
			if(count($data['org_details'])=='')
			{
				redirect($this->config->item('admin_base_url'));	
			}
			//echo '<pre>'; print_r($data['org_details']); die;
					
			$this->load->view('rejected-organization-manage-view',$data);			
	}
		
	
}

/* End of file organization.php */
/* Location: ./application/administration/controllers/rejected_organizations.php */